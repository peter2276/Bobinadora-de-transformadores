

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 16 21:20:20 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=3
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=3
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=3
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=3
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=3
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=3
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=3
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=3
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=3
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=3
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=2
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   187                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   188                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   189                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   190                           	dabs	1,0x400,48,_BDT
   191                           	dabs	1,0x500,64,_cdc_data_tx
   192                           	dabs	1,0x438,8,_CtrlTrfData
   193                           	dabs	1,0x430,8,_SetupPkt
   194                           	dabs	1,0x540,64,_cdc_data_rx
   195  0000                     
   196                           ; Version 2.35
   197                           ; Generated 05/05/2021 GMT
   198                           ; 
   199                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   200                           ; All rights reserved.
   201                           ; 
   202                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   203                           ; 
   204                           ; Redistribution and use in source and binary forms, with or without modification, are
   205                           ; permitted provided that the following conditions are met:
   206                           ; 
   207                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   208                           ;        conditions and the following disclaimer.
   209                           ; 
   210                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   211                           ;        of conditions and the following disclaimer in the documentation and/or other
   212                           ;        materials provided with the distribution. Publication is not required when
   213                           ;        this file is used in an embedded application.
   214                           ; 
   215                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   216                           ;        software without specific prior written permission.
   217                           ; 
   218                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   219                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   220                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   221                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   222                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   223                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   224                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   225                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   226                           ; 
   227                           ; 
   228                           ; Code-generator required, PIC18F25K50 Definitions
   229                           ; 
   230                           ; SFR Addresses
   231  0000                     
   232                           	psect	idataBANK0
   233  000622                     __pidataBANK0:
   234                           	callstack 0
   235                           
   236                           ;initializer for _ustep
   237  000622  01                 	db	1
   238                           
   239                           	psect	idataBANK2
   240  0005F2                     __pidataBANK2:
   241                           	callstack 0
   242                           
   243                           ;initializer for USBCommandFetch@F5851
   244  0005F2  0A                 	db	10
   245  0005F3  00                 	db	0
   246                           
   247                           ;initializer for getTokens@F4807
   248  0005F4  20                 	db	32
   249  0005F5  00                 	db	0
   250                           
   251                           	psect	idataBANK3
   252  0005E4                     __pidataBANK3:
   253                           	callstack 0
   254                           
   255                           ;initializer for stoa@F1177
   256  0005E4  28                 	db	40
   257  0005E5  6E                 	db	110
   258  0005E6  75                 	db	117
   259  0005E7  6C                 	db	108
   260  0005E8  6C                 	db	108
   261  0005E9  29                 	db	41
   262  0005EA  00                 	db	0
   263                           
   264                           	psect	smallconst
   265  000800                     __psmallconst:
   266                           	callstack 0
   267  000800  00                 	db	0
   268  000801                     _USB_SD_Ptr:
   269                           	callstack 0
   270  000801  A4                 	db	low _sd000
   271  000802  48                 	db	low _sd001
   272  000803  7C                 	db	low _sd002
   273  000804                     __end_of_USB_SD_Ptr:
   274                           	callstack 0
   275  000804                     _USB_CD_Ptr:
   276                           	callstack 0
   277  000804  05                 	db	low _configDescriptor1
   278  000805                     __end_of_USB_CD_Ptr:
   279                           	callstack 0
   280  000805                     _configDescriptor1:
   281                           	callstack 0
   282  000805  09                 	db	9
   283  000806  02                 	db	2
   284  000807  43                 	db	67
   285  000808  00                 	db	0
   286  000809  02                 	db	2
   287  00080A  01                 	db	1
   288  00080B  00                 	db	0
   289  00080C  C0                 	db	192
   290  00080D  32                 	db	50
   291  00080E  09                 	db	9
   292  00080F  04                 	db	4
   293  000810  00                 	db	0
   294  000811  00                 	db	0
   295  000812  01                 	db	1
   296  000813  02                 	db	2
   297  000814  02                 	db	2
   298  000815  01                 	db	1
   299  000816  00                 	db	0
   300  000817  05                 	db	5
   301  000818  24                 	db	36
   302  000819  00                 	db	0
   303  00081A  10                 	db	16
   304  00081B  01                 	db	1
   305  00081C  04                 	db	4
   306  00081D  24                 	db	36
   307  00081E  02                 	db	2
   308  00081F  02                 	db	2
   309  000820  05                 	db	5
   310  000821  24                 	db	36
   311  000822  06                 	db	6
   312  000823  00                 	db	0
   313  000824  01                 	db	1
   314  000825  05                 	db	5
   315  000826  24                 	db	36
   316  000827  01                 	db	1
   317  000828  00                 	db	0
   318  000829  01                 	db	1
   319  00082A  07                 	db	7
   320  00082B  05                 	db	5
   321  00082C  81                 	db	129
   322  00082D  03                 	db	3
   323  00082E  0A                 	db	10
   324  00082F  00                 	db	0
   325  000830  02                 	db	2
   326  000831  09                 	db	9
   327  000832  04                 	db	4
   328  000833  01                 	db	1
   329  000834  00                 	db	0
   330  000835  02                 	db	2
   331  000836  0A                 	db	10
   332  000837  00                 	db	0
   333  000838  00                 	db	0
   334  000839  00                 	db	0
   335  00083A  07                 	db	7
   336  00083B  05                 	db	5
   337  00083C  02                 	db	2
   338  00083D  02                 	db	2
   339  00083E  40                 	db	64
   340  00083F  00                 	db	0
   341  000840  00                 	db	0
   342  000841  07                 	db	7
   343  000842  05                 	db	5
   344  000843  82                 	db	130
   345  000844  02                 	db	2
   346  000845  40                 	db	64
   347  000846  00                 	db	0
   348  000847  00                 	db	0
   349  000848                     __end_of_configDescriptor1:
   350                           	callstack 0
   351  000848                     _sd001:
   352                           	callstack 0
   353  000848  34                 	db	52
   354  000849  03                 	db	3
   355  00084A  004D               	dw	77
   356  00084C  0069               	dw	105
   357  00084E  0063               	dw	99
   358  000850  0072               	dw	114
   359  000852  006F               	dw	111
   360  000854  0063               	dw	99
   361  000856  0068               	dw	104
   362  000858  0069               	dw	105
   363  00085A  0070               	dw	112
   364  00085C  0020               	dw	32
   365  00085E  0054               	dw	84
   366  000860  0065               	dw	101
   367  000862  0063               	dw	99
   368  000864  0068               	dw	104
   369  000866  006E               	dw	110
   370  000868  006F               	dw	111
   371  00086A  006C               	dw	108
   372  00086C  006F               	dw	111
   373  00086E  0067               	dw	103
   374  000870  0079               	dw	121
   375  000872  0020               	dw	32
   376  000874  0049               	dw	73
   377  000876  006E               	dw	110
   378  000878  0063               	dw	99
   379  00087A  002E               	dw	46
   380  00087C                     __end_of_sd001:
   381                           	callstack 0
   382  00087C                     _sd002:
   383                           	callstack 0
   384  00087C  16                 	db	22
   385  00087D  03                 	db	3
   386  00087E  0042               	dw	66
   387  000880  006F               	dw	111
   388  000882  0062               	dw	98
   389  000884  0069               	dw	105
   390  000886  006E               	dw	110
   391  000888  0061               	dw	97
   392  00088A  0064               	dw	100
   393  00088C  006F               	dw	111
   394  00088E  0072               	dw	114
   395  000890  0061               	dw	97
   396  000892                     __end_of_sd002:
   397                           	callstack 0
   398  000892                     _device_dsc:
   399                           	callstack 0
   400  000892  12                 	db	18
   401  000893  01                 	db	1
   402  000894  0200               	dw	512
   403  000896  02                 	db	2
   404  000897  00                 	db	0
   405  000898  00                 	db	0
   406  000899  08                 	db	8
   407  00089A  04D8               	dw	1240
   408  00089C  000A               	dw	10
   409  00089E  0100               	dw	256
   410  0008A0  01                 	db	1
   411  0008A1  02                 	db	2
   412  0008A2  00                 	db	0
   413  0008A3  01                 	db	1
   414  0008A4                     __end_of_device_dsc:
   415                           	callstack 0
   416  0008A4                     _sd000:
   417                           	callstack 0
   418  0008A4  04                 	db	4
   419  0008A5  03                 	db	3
   420  0008A6  0409               	dw	1033
   421  0008A8                     __end_of_sd000:
   422                           	callstack 0
   423  0000                     _CCPR2H	set	3985
   424  0000                     _ADCON0	set	4034
   425  0000                     _ADRESL	set	4035
   426  0000                     _TMR0L	set	4054
   427  0000                     _TMR0H	set	4055
   428  0000                     _T1CON	set	4045
   429  0000                     _TMR1L	set	4046
   430  0000                     _TMR1H	set	4047
   431  0000                     _USTAT	set	3937
   432  0000                     _UADDR	set	3939
   433  0000                     _UIE	set	3940
   434  0000                     _UEIE	set	3942
   435  0008A8                     STR_1:
   436  0008A8  25                 	db	37
   437  0008A9  2E                 	db	46
   438  0008AA  33                 	db	51	;'3'
   439  0008AB  66                 	db	102	;'f'
   440  0008AC  20                 	db	32
   441  0008AD  25                 	db	37
   442  0008AE  2E                 	db	46
   443  0008AF  33                 	db	51	;'3'
   444  0008B0  66                 	db	102	;'f'
   445  0008B1  20                 	db	32
   446  0008B2  25                 	db	37
   447  0008B3  64                 	db	100	;'d'
   448  0008B4  20                 	db	32
   449  0008B5  25                 	db	37
   450  0008B6  64                 	db	100	;'d'
   451  0008B7  20                 	db	32
   452  0008B8  25                 	db	37
   453  0008B9  64                 	db	100	;'d'
   454  0008BA  20                 	db	32
   455  0008BB  00                 	db	0
   456  0008BC                     STR_23:
   457  0008BC  49                 	db	73	;'I'
   458  0008BD  4E                 	db	78	;'N'
   459  0008BE  46                 	db	70	;'F'
   460  0008BF  49                 	db	73	;'I'
   461  0008C0  4E                 	db	78	;'N'
   462  0008C1  49                 	db	73	;'I'
   463  0008C2  54                 	db	84	;'T'
   464  0008C3  59                 	db	89	;'Y'
   465  0008C4  00                 	db	0
   466  0008C5                     STR_22:
   467  0008C5  69                 	db	105	;'i'
   468  0008C6  6E                 	db	110	;'n'
   469  0008C7  66                 	db	102	;'f'
   470  0008C8  69                 	db	105	;'i'
   471  0008C9  6E                 	db	110	;'n'
   472  0008CA  69                 	db	105	;'i'
   473  0008CB  74                 	db	116	;'t'
   474  0008CC  79                 	db	121	;'y'
   475  0008CD  00                 	db	0
   476  0008CE                     STR_3:
   477  0008CE  25                 	db	37
   478  0008CF  63                 	db	99	;'c'
   479  0008D0  20                 	db	32
   480  0008D1  0A                 	db	10
   481  0008D2  00                 	db	0
   482  0008D3                     STR_2:
   483  0008D3  25                 	db	37
   484  0008D4  73                 	db	115	;'s'
   485  0008D5  25                 	db	37
   486  0008D6  73                 	db	115	;'s'
   487  0008D7  00                 	db	0
   488  0008D8                     STR_4:
   489  0008D8  49                 	db	73	;'I'
   490  0008D9  4E                 	db	78	;'N'
   491  0008DA  46                 	db	70	;'F'
   492  0008DB  00                 	db	0
   493  0008DC                     STR_8:
   494  0008DC  4E                 	db	78	;'N'
   495  0008DD  41                 	db	65	;'A'
   496  0008DE  4E                 	db	78	;'N'
   497  0008DF  00                 	db	0
   498  0008E0                     STR_5:
   499  0008E0  69                 	db	105	;'i'
   500  0008E1  6E                 	db	110	;'n'
   501  0008E2  66                 	db	102	;'f'
   502  0008E3  00                 	db	0
   503  0008E4                     STR_9:
   504  0008E4  6E                 	db	110	;'n'
   505  0008E5  61                 	db	97	;'a'
   506  0008E6  6E                 	db	110	;'n'
   507  0008E7  00                 	db	0
   508  0008E8                     STR_17:
   509  0008E8  6C                 	db	108	;'l'
   510  0008E9  6C                 	db	108	;'l'
   511  0008EA  73                 	db	115	;'s'
   512  0008EB  00                 	db	0
   513  0008EC                     STR_12:
   514  0008EC  6C                 	db	108	;'l'
   515  0008ED  66                 	db	102	;'f'
   516  0008EE  00                 	db	0
   517  0008EF  00                 	db	0	; dummy byte at the end
   518  0000                     
   519                           	psect	nvBANK2
   520  0002FE                     __pnvBANK2:
   521                           	callstack 0
   522  0002FE                     _IOCC2_InterruptHandler:
   523                           	callstack 0
   524  0002FE                     	ds	2
   525  0000                     _TMR1	set	4046
   526  0000                     _TMR3	set	4018
   527  0000                     _LATAbits	set	3977
   528  0000                     _LATCbits	set	3979
   529  0000                     _PORTC	set	3970
   530  0000                     _PORTB	set	3969
   531  0000                     _LATBbits	set	3978
   532  0000                     _ADCON0bits	set	4034
   533  0000                     _T0CON	set	4053
   534  0000                     _T2CONbits	set	4026
   535  0000                     _T3CONbits	set	4017
   536  0000                     _UEP0bits	set	3946
   537  0000                     _UCON	set	3936
   538  0000                     _UIEbits	set	3940
   539  0000                     _UIRbits	set	3941
   540  0000                     _PLLRDY	set	32407
   541  0000                     _ANSELA	set	3931
   542  0000                     _ANSELB	set	3932
   543  0000                     _ANSELC	set	3933
   544  0000                     _UCONbits	set	3936
   545  0000                     _UCFG	set	3938
   546  0000                     _UIR	set	3941
   547  0000                     _UEIR	set	3943
   548  0000                     _PIE3bits	set	4003
   549  0000                     _T3CON	set	4017
   550  0000                     _TMR3L	set	4018
   551  0000                     _TMR3H	set	4019
   552  0000                     _T3GCON	set	4020
   553  0000                     _ACTCON	set	4021
   554  0000                     _RCONbits	set	4048
   555  0000                     _IPR3bits	set	4005
   556  0000                     _PIR3bits	set	4004
   557  0000                     _UEP0	set	3946
   558  0000                     _PORTBbits	set	3969
   559  0000                     _PORTCbits	set	3970
   560  0000                     _WPUB	set	3973
   561  0000                     _LATA	set	3977
   562  0000                     _OSCTUNE	set	3995
   563  0000                     _PIE1bits	set	3997
   564  0000                     _PIE2bits	set	4000
   565  0000                     _UEP1	set	3947
   566  0000                     _OSCCON2	set	4050
   567  0000                     _OSCCON	set	4051
   568  0000                     _INTCONbits	set	4082
   569  0000                     _PIR2bits	set	4001
   570  0000                     _PIR1bits	set	3998
   571  0000                     _T0CONbits	set	4053
   572  0000                     _T2CON	set	4026
   573  0000                     _PR2	set	4027
   574  0000                     _ADCON2	set	4032
   575  0000                     _ADCON1	set	4033
   576  0000                     _T1GCON	set	4044
   577  0000                     _TMR2	set	4028
   578  0000                     _INTCON2bits	set	4081
   579  0000                     _ADRESH	set	4036
   580  0000                     _CCPR2L	set	3984
   581  0000                     _TRISA	set	3986
   582  0000                     _LATC	set	3979
   583  0000                     _LATB	set	3978
   584  0000                     _CCP2CON	set	3991
   585  0000                     _TRISC	set	3988
   586  0000                     _TRISB	set	3987
   587  0000                     _IOCCbits	set	3975
   588                           
   589                           ; #config settings
   590                           
   591                           	psect	cinit
   592  006EE4                     __pcinit:
   593                           	callstack 0
   594  006EE4                     start_initialization:
   595                           	callstack 0
   596  006EE4                     __initialization:
   597                           	callstack 0
   598                           
   599                           ; Initialize objects allocated to BANK3 (7 bytes)
   600                           ; load TBLPTR registers with __pidataBANK3
   601  006EE4  0EE4               	movlw	low __pidataBANK3
   602  006EE6  6EF6               	movwf	tblptrl,c
   603  006EE8  0E05               	movlw	high __pidataBANK3
   604  006EEA  6EF7               	movwf	tblptrh,c
   605  006EEC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   606  006EEE  6EF8               	movwf	tblptru,c
   607  006EF0  EE03  F0C8         	lfsr	0,__pdataBANK3
   608  006EF4  EE10 F007          	lfsr	1,7
   609  006EF8                     copy_data0:
   610  006EF8  0009               	tblrd		*+
   611  006EFA  CFF5 FFEE          	movff	tablat,postinc0
   612  006EFE  50E5               	movf	postdec1,w,c
   613  006F00  50E1               	movf	fsr1l,w,c
   614  006F02  E1FA               	bnz	copy_data0
   615                           
   616                           ; Initialize objects allocated to BANK2 (4 bytes)
   617                           ; load TBLPTR registers with __pidataBANK2
   618  006F04  0EF2               	movlw	low __pidataBANK2
   619  006F06  6EF6               	movwf	tblptrl,c
   620  006F08  0E05               	movlw	high __pidataBANK2
   621  006F0A  6EF7               	movwf	tblptrh,c
   622  006F0C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   623  006F0E  6EF8               	movwf	tblptru,c
   624  006F10  EE02  F0FA         	lfsr	0,__pdataBANK2
   625  006F14  EE10 F004          	lfsr	1,4
   626  006F18                     copy_data1:
   627  006F18  0009               	tblrd		*+
   628  006F1A  CFF5 FFEE          	movff	tablat,postinc0
   629  006F1E  50E5               	movf	postdec1,w,c
   630  006F20  50E1               	movf	fsr1l,w,c
   631  006F22  E1FA               	bnz	copy_data1
   632                           
   633                           ; Initialize objects allocated to BANK0 (1 bytes)
   634                           ; load TBLPTR registers with __pidataBANK0
   635  006F24  0E22               	movlw	low __pidataBANK0
   636  006F26  6EF6               	movwf	tblptrl,c
   637  006F28  0E06               	movlw	high __pidataBANK0
   638  006F2A  6EF7               	movwf	tblptrh,c
   639  006F2C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   640  006F2E  6EF8               	movwf	tblptru,c
   641  006F30  0009               	tblrd		*+	;fetch initializer
   642  006F32  CFF5 F0D3          	movff	tablat,__pdataBANK0
   643                           
   644                           ; Clear objects allocated to BIGRAMl (640 bytes)
   645  006F36  EE05  F080         	lfsr	0,__pbssBIGRAMl
   646  006F3A  EE12 F080          	lfsr	1,640
   647  006F3E                     clear_0:
   648  006F3E  6AEE               	clrf	postinc0,c
   649  006F40  50E5               	movf	postdec1,w,c
   650  006F42  50E1               	movf	fsr1l,w,c
   651  006F44  E1FC               	bnz	clear_0
   652  006F46  50E2               	movf	fsr1h,w,c
   653  006F48  E1FA               	bnz	clear_0
   654                           
   655                           ; Clear objects allocated to BANK3 (200 bytes)
   656  006F4A  EE03  F000         	lfsr	0,__pbssBANK3
   657  006F4E  0EC8               	movlw	200
   658  006F50                     clear_1:
   659  006F50  6AEE               	clrf	postinc0,c
   660  006F52  06E8               	decf	wreg,f,c
   661  006F54  E1FD               	bnz	clear_1
   662                           
   663                           ; Clear objects allocated to BANK2 (76 bytes)
   664  006F56  EE02  F0AE         	lfsr	0,__pbssBANK2
   665  006F5A  0E4C               	movlw	76
   666  006F5C                     clear_2:
   667  006F5C  6AEE               	clrf	postinc0,c
   668  006F5E  06E8               	decf	wreg,f,c
   669  006F60  E1FD               	bnz	clear_2
   670                           
   671                           ; Clear objects allocated to BANK1 (38 bytes)
   672  006F62  EE01  F0BF         	lfsr	0,__pbssBANK1
   673  006F66  0E26               	movlw	38
   674  006F68                     clear_3:
   675  006F68  6AEE               	clrf	postinc0,c
   676  006F6A  06E8               	decf	wreg,f,c
   677  006F6C  E1FD               	bnz	clear_3
   678                           
   679                           ; Clear objects allocated to BANK0 (43 bytes)
   680  006F6E  EE00  F0A8         	lfsr	0,__pbssBANK0
   681  006F72  0E2B               	movlw	43
   682  006F74                     clear_4:
   683  006F74  6AEE               	clrf	postinc0,c
   684  006F76  06E8               	decf	wreg,f,c
   685  006F78  E1FD               	bnz	clear_4
   686                           
   687                           ; Clear objects allocated to COMRAM (4 bytes)
   688  006F7A  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   689  006F7C  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   690  006F7E  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   691  006F80  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   692  006F82                     end_of_initialization:
   693                           	callstack 0
   694  006F82                     __end_of__initialization:
   695                           	callstack 0
   696  006F82  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   697  006F84  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   698  006F86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   699  006F88  6EF8               	movwf	tblptru,c
   700  006F8A  0100               	movlb	0
   701  006F8C  EFBE  F036         	goto	_main	;jump to C main() function
   702                           
   703                           	psect	bssCOMRAM
   704  00005B                     __pbssCOMRAM:
   705                           	callstack 0
   706  00005B                     _pBDTEntryEP0OutNext:
   707                           	callstack 0
   708  00005B                     	ds	2
   709  00005D                     _USBDeviceState:
   710                           	callstack 0
   711  00005D                     	ds	1
   712  00005E                     _USTATcopy:
   713                           	callstack 0
   714  00005E                     	ds	1
   715                           
   716                           	psect	bssBANK0
   717  0000A8                     __pbssBANK0:
   718                           	callstack 0
   719  0000A8                     _outPipes:
   720                           	callstack 0
   721  0000A8                     	ds	8
   722  0000B0                     _inPipes:
   723                           	callstack 0
   724  0000B0                     	ds	6
   725  0000B6                     _pBDTEntryIn:
   726                           	callstack 0
   727  0000B6                     	ds	6
   728  0000BC                     _pos_relativa_Z:
   729                           	callstack 0
   730  0000BC                     	ds	4
   731  0000C0                     _width:
   732                           	callstack 0
   733  0000C0                     	ds	2
   734  0000C2                     _prec:
   735                           	callstack 0
   736  0000C2                     	ds	2
   737  0000C4                     _flags:
   738                           	callstack 0
   739  0000C4                     	ds	2
   740  0000C6                     _pBDTEntryEP0OutCurrent:
   741                           	callstack 0
   742  0000C6                     	ds	2
   743  0000C8                     _largo:
   744                           	callstack 0
   745  0000C8                     	ds	1
   746  0000C9                     _angulo:
   747                           	callstack 0
   748  0000C9                     	ds	1
   749  0000CA                     _cdc_tx_len:
   750                           	callstack 0
   751  0000CA                     	ds	1
   752  0000CB                     _cdc_trf_state:
   753                           	callstack 0
   754  0000CB                     	ds	1
   755  0000CC                     _cdc_rx_len:
   756                           	callstack 0
   757  0000CC                     	ds	1
   758  0000CD                     _USBDeferStatusStagePacket:
   759                           	callstack 0
   760  0000CD                     	ds	1
   761  0000CE                     _USBStatusStageTimeoutCounter:
   762                           	callstack 0
   763  0000CE                     	ds	1
   764  0000CF                     _endpoint_number:
   765                           	callstack 0
   766  0000CF                     	ds	1
   767  0000D0                     _controlTransferState:
   768                           	callstack 0
   769  0000D0                     	ds	1
   770  0000D1                     _shortPacketStatus:
   771                           	callstack 0
   772  0000D1                     	ds	1
   773  0000D2                     _USBActiveConfiguration:
   774                           	callstack 0
   775  0000D2                     	ds	1
   776                           
   777                           	psect	dataBANK0
   778  0000D3                     __pdataBANK0:
   779                           	callstack 0
   780  0000D3                     _ustep:
   781                           	callstack 0
   782  0000D3                     	ds	1
   783                           
   784                           	psect	bssBANK1
   785  0001BF                     __pbssBANK1:
   786                           	callstack 0
   787  0001BF                     _ep_data_out:
   788                           	callstack 0
   789  0001BF                     	ds	3
   790  0001C2                     _ep_data_in:
   791                           	callstack 0
   792  0001C2                     	ds	3
   793  0001C5                     strtok@p:
   794                           	callstack 0
   795  0001C5                     	ds	2
   796  0001C7                     _pasos:
   797                           	callstack 0
   798  0001C7                     	ds	2
   799  0001C9                     _timer0ReloadVal:
   800                           	callstack 0
   801  0001C9                     	ds	2
   802  0001CB                     _CDCDataOutHandle:
   803                           	callstack 0
   804  0001CB                     	ds	2
   805  0001CD                     _pDst:
   806                           	callstack 0
   807  0001CD                     	ds	2
   808  0001CF                     _flag_angulo:
   809                           	callstack 0
   810  0001CF                     	ds	1
   811  0001D0                     _index:
   812                           	callstack 0
   813  0001D0                     	ds	1
   814  0001D1                     _prescaler:
   815                           	callstack 0
   816  0001D1                     	ds	1
   817  0001D2                     _flag:
   818                           	callstack 0
   819  0001D2                     	ds	1
   820  0001D3                     _S_CHANGE:
   821                           	callstack 0
   822  0001D3                     	ds	1
   823  0001D4                     _busy:
   824                           	callstack 0
   825  0001D4                     	ds	1
   826  0001D5                     _cola:
   827                           	callstack 0
   828  0001D5                     	ds	1
   829  0001D6                     _cabeza:
   830                           	callstack 0
   831  0001D6                     	ds	1
   832  0001D7                     _numBytesRead:
   833                           	callstack 0
   834  0001D7                     	ds	1
   835  0001D8                     _feed_state:
   836                           	callstack 0
   837  0001D8                     	ds	1
   838  0001D9                     _control_signal_bitmap:
   839                           	callstack 0
   840  0001D9                     	ds	1
   841  0001DA                     _cdc_mem_type:
   842                           	callstack 0
   843  0001DA                     	ds	1
   844  0001DB                     _USBTicksSinceSuspendEnd:
   845                           	callstack 0
   846  0001DB                     	ds	1
   847  0001DC                     _USBDeferOUTDataStagePackets:
   848                           	callstack 0
   849  0001DC                     	ds	1
   850  0001DD                     _USBDeferINDataStagePackets:
   851                           	callstack 0
   852  0001DD                     	ds	1
   853  0001DE                     _USBStatusStageEnabledFlag2:
   854                           	callstack 0
   855  0001DE                     	ds	1
   856  0001DF                     _USBStatusStageEnabledFlag1:
   857                           	callstack 0
   858  0001DF                     	ds	1
   859  0001E0                     _BothEP0OutUOWNsSet:
   860                           	callstack 0
   861  0001E0                     	ds	1
   862  0001E1                     _USBBusIsSuspended:
   863                           	callstack 0
   864  0001E1                     	ds	1
   865  0001E2                     _RemoteWakeup:
   866                           	callstack 0
   867  0001E2                     	ds	1
   868  0001E3                     _USBAlternateInterface:
   869                           	callstack 0
   870  0001E3                     	ds	2
   871                           
   872                           	psect	bssBANK2
   873  0002AE                     __pbssBANK2:
   874                           	callstack 0
   875  0002AE                     _pBDTEntryOut:
   876                           	callstack 0
   877  0002AE                     	ds	6
   878  0002B4                     floorf@F526:
   879                           	callstack 0
   880  0002B4                     	ds	4
   881  0002B8                     ___fpclassifyf@F465:
   882                           	callstack 0
   883  0002B8                     	ds	4
   884  0002BC                     _distanciaRestante:
   885                           	callstack 0
   886  0002BC                     	ds	4
   887  0002C0                     _objetivo_Z:
   888                           	callstack 0
   889  0002C0                     	ds	4
   890  0002C4                     _USB1msTickCount:
   891                           	callstack 0
   892  0002C4                     	ds	4
   893  0002C8                     _pCDCDst:
   894                           	callstack 0
   895  0002C8                     	ds	3
   896  0002CB                     _pCDCSrc:
   897                           	callstack 0
   898  0002CB                     	ds	3
   899  0002CE                     _nout:
   900                           	callstack 0
   901  0002CE                     	ds	2
   902  0002D0                     _F:
   903                           	callstack 0
   904  0002D0                     	ds	2
   905  0002D2                     _current:
   906                           	callstack 0
   907  0002D2                     	ds	2
   908  0002D4                     _ADC_InterruptHandler:
   909                           	callstack 0
   910  0002D4                     	ds	2
   911  0002D6                     _TMR0_InterruptHandler:
   912                           	callstack 0
   913  0002D6                     	ds	2
   914  0002D8                     _timer1ReloadVal:
   915                           	callstack 0
   916  0002D8                     	ds	2
   917  0002DA                     _TMR2_InterruptHandler:
   918                           	callstack 0
   919  0002DA                     	ds	2
   920  0002DC                     _TMR3_InterruptHandler:
   921                           	callstack 0
   922  0002DC                     	ds	2
   923  0002DE                     _timer3ReloadVal:
   924                           	callstack 0
   925  0002DE                     	ds	2
   926  0002E0                     _CDCDataInHandle:
   927                           	callstack 0
   928  0002E0                     	ds	2
   929  0002E2                     _error:
   930                           	callstack 0
   931  0002E2                     	ds	1
   932  0002E3                     _line_coding:
   933                           	callstack 0
   934  0002E3                     	ds	7
   935  0002EA                     _inverse_time_feed:
   936                           	callstack 0
   937  0002EA                     	ds	4
   938  0002EE                     _feed:
   939                           	callstack 0
   940  0002EE                     	ds	4
   941  0002F2                     _inverse_S:
   942                           	callstack 0
   943  0002F2                     	ds	4
   944  0002F6                     _S:
   945                           	callstack 0
   946  0002F6                     	ds	4
   947                           
   948                           	psect	dataBANK2
   949  0002FA                     __pdataBANK2:
   950                           	callstack 0
   951  0002FA                     USBCommandFetch@F5851:
   952                           	callstack 0
   953  0002FA                     	ds	2
   954  0002FC                     getTokens@F4807:
   955                           	callstack 0
   956  0002FC                     	ds	2
   957                           
   958                           	psect	bssBANK3
   959  000300                     __pbssBANK3:
   960                           	callstack 0
   961  000300                     _cdc_notice:
   962                           	callstack 0
   963  000300                     	ds	10
   964  00030A                     _pos_absoluta_Z:
   965                           	callstack 0
   966  00030A                     	ds	4
   967  00030E                     _BaudRateGen:
   968                           	callstack 0
   969  00030E                     	ds	4
   970  000312                     _dbuf:
   971                           	callstack 0
   972  000312                     	ds	80
   973  000362                     _readBuffer:
   974                           	callstack 0
   975  000362                     	ds	32
   976  000382                     _writeBuffer:
   977                           	callstack 0
   978  000382                     	ds	32
   979  0003A2                     _lastToken:
   980                           	callstack 0
   981  0003A2                     	ds	30
   982  0003C0                     _dummy_encapsulated_cmd_response:
   983                           	callstack 0
   984  0003C0                     	ds	8
   985                           
   986                           	psect	dataBANK3
   987  0003C8                     __pdataBANK3:
   988                           	callstack 0
   989  0003C8                     stoa@F1177:
   990                           	callstack 0
   991  0003C8                     	ds	7
   992                           
   993                           	psect	bssBIGRAMl
   994  000580                     __pbssBIGRAMl:
   995                           	callstack 0
   996  000580                     _fila:
   997                           	callstack 0
   998  000580                     	ds	640
   999                           
  1000                           	psect	cstackBANK2
  1001  000200                     __pcstackBANK2:
  1002                           	callstack 0
  1003  000200                     executeCommand@TokensCom:
  1004                           	callstack 0
  1005  000200                     USBCommandFetch@readTokens:
  1006                           	callstack 0
  1007                           
  1008                           ; 64 bytes @ 0x0
  1009  000200                     	ds	40
  1010  000228                     executeCommand@strCommand:
  1011                           	callstack 0
  1012                           
  1013                           ; 30 bytes @ 0x28
  1014  000228                     	ds	24
  1015  000240                     USBCommandFetch@s:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x40
  1019  000240                     	ds	2
  1020  000242                     USBCommandFetch@lastTokenFlag:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x42
  1024  000242                     	ds	2
  1025  000244                     USBCommandFetch@i:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x44
  1029  000244                     	ds	2
  1030  000246                     executeCommand@comando:
  1031                           	callstack 0
  1032                           
  1033                           ; 100 bytes @ 0x46
  1034  000246                     	ds	100
  1035  0002AA                     executeCommand@i:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xAA
  1039  0002AA                     	ds	2
  1040  0002AC                     executeCommand@numTokens:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xAC
  1044  0002AC                     	ds	2
  1045                           
  1046                           	psect	cstackBANK1
  1047  000100                     __pcstackBANK1:
  1048                           	callstack 0
  1049  000100                     ?_dtoa:
  1050                           	callstack 0
  1051  000100                     ___flmul@sign:
  1052                           	callstack 0
  1053  000100                     dtoa@fp:
  1054                           	callstack 0
  1055  000100                     stoa@nuls:
  1056                           	callstack 0
  1057                           
  1058                           ; 7 bytes @ 0x0
  1059  000100                     	ds	1
  1060  000101                     ___flmul@aexp:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x1
  1064  000101                     	ds	1
  1065  000102                     ___flmul@bexp:
  1066                           	callstack 0
  1067  000102                     dtoa@d:
  1068                           	callstack 0
  1069                           
  1070                           ; 8 bytes @ 0x2
  1071  000102                     	ds	1
  1072  000103                     ___flmul@grs:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x3
  1076  000103                     	ds	4
  1077  000107                     stoa@i:
  1078                           	callstack 0
  1079  000107                     ___flmul@prod:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x7
  1083  000107                     	ds	2
  1084  000109                     stoa@w:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x9
  1088  000109                     	ds	1
  1089  00010A                     ??_dtoa:
  1090                           
  1091                           ; 1 bytes @ 0xA
  1092  00010A                     	ds	1
  1093  00010B                     ___flmul@temp:
  1094                           	callstack 0
  1095  00010B                     stoa@cp:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0xB
  1099  00010B                     	ds	2
  1100  00010D                     ?___fldiv:
  1101                           	callstack 0
  1102  00010D                     ?___flsub:
  1103                           	callstack 0
  1104  00010D                     stoa@p:
  1105                           	callstack 0
  1106  00010D                     ___flsub@b:
  1107                           	callstack 0
  1108  00010D                     ___fldiv@b:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0xD
  1112  00010D                     	ds	2
  1113  00010F                     stoa@l:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0xF
  1117  00010F                     	ds	2
  1118  000111                     ___flsub@a:
  1119                           	callstack 0
  1120  000111                     ___fldiv@a:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x11
  1124  000111                     	ds	1
  1125  000112                     _dtoa$4885:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x12
  1129  000112                     	ds	2
  1130  000114                     dtoa@p:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x14
  1134  000114                     	ds	1
  1135  000115                     ??___fldiv:
  1136                           
  1137                           ; 1 bytes @ 0x15
  1138  000115                     	ds	1
  1139  000116                     dtoa@w:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x16
  1143  000116                     	ds	2
  1144  000118                     dtoa@s:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x18
  1148  000118                     	ds	1
  1149  000119                     ___fldiv@rem:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x19
  1153  000119                     	ds	1
  1154  00011A                     dtoa@n:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x1A
  1158  00011A                     	ds	3
  1159  00011D                     ___fldiv@sign:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x1D
  1163  00011D                     	ds	1
  1164  00011E                     ___fldiv@new_exp:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x1E
  1168  00011E                     	ds	2
  1169  000120                     ___fldiv@grs:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x20
  1173  000120                     	ds	2
  1174  000122                     dtoa@i:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x22
  1178  000122                     	ds	2
  1179  000124                     ___fldiv@bexp:
  1180                           	callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x24
  1183  000124                     	ds	1
  1184  000125                     ___fldiv@aexp:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x25
  1188  000125                     	ds	1
  1189  000126                     ?_floorf:
  1190                           	callstack 0
  1191  000126                     ?___fltol:
  1192                           	callstack 0
  1193  000126                     G_97@axis:
  1194                           	callstack 0
  1195  000126                     ___flge@ff1:
  1196                           	callstack 0
  1197  000126                     ___fltol@f1:
  1198                           	callstack 0
  1199  000126                     floorf@x:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x26
  1203  000126                     	ds	2
  1204  000128                     G_97@n:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x28
  1208  000128                     	ds	2
  1209  00012A                     ??_floorf:
  1210  00012A                     ??___fltol:
  1211  00012A                     ___flge@ff2:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x2A
  1215  00012A                     	ds	4
  1216  00012E                     ??___flge:
  1217                           
  1218                           ; 1 bytes @ 0x2E
  1219  00012E                     	ds	2
  1220  000130                     floorf@m:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x30
  1224  000130                     	ds	2
  1225  000132                     ?_strtof:
  1226                           	callstack 0
  1227  000132                     strtof@s:
  1228                           	callstack 0
  1229  000132                     mover_2@distancia:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x32
  1233  000132                     	ds	2
  1234  000134                     floorf@e:
  1235                           	callstack 0
  1236  000134                     strtof@res:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x34
  1240  000134                     	ds	2
  1241  000136                     ??_strtof:
  1242  000136                     ??_mover_2:
  1243  000136                     floorf@u:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x36
  1247  000136                     	ds	2
  1248  000138                     _mover_2$5637:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x38
  1252  000138                     	ds	2
  1253  00013A                     ?_efgtoa:
  1254                           	callstack 0
  1255  00013A                     efgtoa@fp:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x3A
  1259  00013A                     	ds	2
  1260  00013C                     strtof@digit:
  1261                           	callstack 0
  1262  00013C                     G_01@axis:
  1263                           	callstack 0
  1264  00013C                     efgtoa@f:
  1265                           	callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x3C
  1268  00013C                     	ds	1
  1269  00013D                     strtof@flags:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x3D
  1273  00013D                     	ds	1
  1274  00013E                     G_01@n:
  1275                           	callstack 0
  1276  00013E                     strtof@expon:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x3E
  1280  00013E                     	ds	2
  1281  000140                     ??_G_01:
  1282  000140                     efgtoa@c:
  1283                           	callstack 0
  1284  000140                     strtof@eexp:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x40
  1288  000140                     	ds	1
  1289  000141                     ??_efgtoa:
  1290                           
  1291                           ; 1 bytes @ 0x41
  1292  000141                     	ds	1
  1293  000142                     G_01@distancia:
  1294                           	callstack 0
  1295  000142                     strtof@_u:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x42
  1299  000142                     	ds	4
  1300  000146                     strtof@i:
  1301                           	callstack 0
  1302  000146                     G_01@i:
  1303                           	callstack 0
  1304  000146                     _efgtoa$4909:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x46
  1308  000146                     	ds	1
  1309  000147                     getComands@comandos:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x47
  1313  000147                     	ds	1
  1314  000148                     G_01@i_3943:
  1315                           	callstack 0
  1316  000148                     _efgtoa$4916:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x48
  1320  000148                     	ds	1
  1321  000149                     getComands@tokens:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x49
  1325  000149                     	ds	1
  1326  00014A                     _efgtoa$4917:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x4A
  1330  00014A                     	ds	1
  1331  00014B                     getComands@size:
  1332                           	callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x4B
  1335  00014B                     	ds	1
  1336  00014C                     ??_getComands:
  1337  00014C                     efgtoa@t:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x4C
  1341  00014C                     	ds	2
  1342  00014E                     efgtoa@pp:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x4E
  1346  00014E                     	ds	2
  1347  000150                     efgtoa@ne:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x50
  1351  000150                     	ds	2
  1352  000152                     efgtoa@m:
  1353                           	callstack 0
  1354  000152                     getComands@buff:
  1355                           	callstack 0
  1356                           
  1357                           ; 10 bytes @ 0x52
  1358  000152                     	ds	2
  1359  000154                     efgtoa@ou:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x54
  1363  000154                     	ds	4
  1364  000158                     efgtoa@d:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x58
  1368  000158                     	ds	2
  1369  00015A                     efgtoa@sign:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x5A
  1373  00015A                     	ds	2
  1374  00015C                     getComands@i:
  1375                           	callstack 0
  1376  00015C                     efgtoa@p:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x5C
  1380  00015C                     	ds	2
  1381  00015E                     efgtoa@w:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x5E
  1385  00015E                     	ds	2
  1386  000160                     efgtoa@nmode:
  1387                           	callstack 0
  1388                           
  1389                           ; 1 bytes @ 0x60
  1390  000160                     	ds	1
  1391  000161                     efgtoa@mode:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x61
  1395  000161                     	ds	1
  1396  000162                     efgtoa@h:
  1397                           	callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x62
  1400  000162                     	ds	4
  1401  000166                     efgtoa@l:
  1402                           	callstack 0
  1403                           
  1404                           ; 4 bytes @ 0x66
  1405  000166                     	ds	4
  1406  00016A                     efgtoa@i:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x6A
  1410  00016A                     	ds	2
  1411  00016C                     efgtoa@g:
  1412                           	callstack 0
  1413                           
  1414                           ; 4 bytes @ 0x6C
  1415  00016C                     	ds	4
  1416  000170                     efgtoa@e:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x70
  1420  000170                     	ds	2
  1421  000172                     efgtoa@n:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x72
  1425  000172                     	ds	2
  1426  000174                     efgtoa@u:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x74
  1430  000174                     	ds	4
  1431  000178                     ?_vfpfcnvrt:
  1432                           	callstack 0
  1433  000178                     vfpfcnvrt@fp:
  1434                           	callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x78
  1437  000178                     	ds	2
  1438  00017A                     vfpfcnvrt@fmt:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x7A
  1442  00017A                     	ds	2
  1443  00017C                     vfpfcnvrt@ap:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x7C
  1447  00017C                     	ds	2
  1448  00017E                     ??_vfpfcnvrt:
  1449                           
  1450                           ; 1 bytes @ 0x7E
  1451  00017E                     	ds	4
  1452  000182                     vfpfcnvrt@ll:
  1453                           	callstack 0
  1454                           
  1455                           ; 8 bytes @ 0x82
  1456  000182                     	ds	8
  1457  00018A                     vfpfcnvrt@cp:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x8A
  1461  00018A                     	ds	2
  1462  00018C                     _vfpfcnvrt$4950:
  1463                           	callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x8C
  1466  00018C                     	ds	2
  1467  00018E                     vfpfcnvrt@f:
  1468                           	callstack 0
  1469                           
  1470                           ; 4 bytes @ 0x8E
  1471  00018E                     	ds	4
  1472  000192                     vfpfcnvrt@ct:
  1473                           	callstack 0
  1474                           
  1475                           ; 3 bytes @ 0x92
  1476  000192                     	ds	3
  1477  000195                     vfpfcnvrt@c:
  1478                           	callstack 0
  1479                           
  1480                           ; 1 bytes @ 0x95
  1481  000195                     	ds	1
  1482  000196                     ?_vfprintf:
  1483                           	callstack 0
  1484  000196                     vfprintf@fp:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x96
  1488  000196                     	ds	2
  1489  000198                     vfprintf@fmt:
  1490                           	callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x98
  1493  000198                     	ds	1
  1494  000199                     vfprintf@ap:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x99
  1498  000199                     	ds	2
  1499  00019B                     vfprintf@cfmt:
  1500                           	callstack 0
  1501                           
  1502                           ; 1 bytes @ 0x9B
  1503  00019B                     	ds	1
  1504  00019C                     ?_sprintf:
  1505                           	callstack 0
  1506  00019C                     sprintf@s:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x9C
  1510  00019C                     	ds	2
  1511  00019E                     sprintf@fmt:
  1512                           	callstack 0
  1513                           
  1514                           ; 1 bytes @ 0x9E
  1515  00019E                     	ds	15
  1516  0001AD                     sprintf@ap:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0xAD
  1520  0001AD                     	ds	2
  1521  0001AF                     sprintf@f:
  1522                           	callstack 0
  1523                           
  1524                           ; 11 bytes @ 0xAF
  1525  0001AF                     	ds	11
  1526  0001BA                     ??_USBCommandFetch:
  1527  0001BA                     ??_executeCommand:
  1528                           
  1529                           ; 1 bytes @ 0xBA
  1530  0001BA                     	ds	4
  1531  0001BE                     ??_main:
  1532                           
  1533                           ; 1 bytes @ 0xBE
  1534  0001BE                     	ds	1
  1535                           
  1536                           	psect	cstackBANK0
  1537  000060                     __pcstackBANK0:
  1538                           	callstack 0
  1539  000060                     G01_TMR2_ISR@period:
  1540                           	callstack 0
  1541  000060                     Encoder_ISR@a:
  1542                           	callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x0
  1545  000060                     	ds	2
  1546  000062                     _G01_TMR2_ISR$5862:
  1547                           	callstack 0
  1548  000062                     _Encoder_ISR$5863:
  1549                           	callstack 0
  1550                           
  1551                           ; 4 bytes @ 0x2
  1552  000062                     	ds	4
  1553  000066                     _Encoder_ISR$5864:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x6
  1557  000066                     	ds	4
  1558  00006A                     Encoder_ISR@tmr0:
  1559                           	callstack 0
  1560                           
  1561                           ; 2 bytes @ 0xA
  1562  00006A                     	ds	2
  1563  00006C                     Encoder_ISR@salida:
  1564                           	callstack 0
  1565                           
  1566                           ; 4 bytes @ 0xC
  1567  00006C                     	ds	4
  1568  000070                     Encoder_ISR@tics:
  1569                           	callstack 0
  1570                           
  1571                           ; 4 bytes @ 0x10
  1572  000070                     	ds	4
  1573  000074                     Encoder_ISR@y:
  1574                           	callstack 0
  1575                           
  1576                           ; 12 bytes @ 0x14
  1577  000074                     	ds	12
  1578  000080                     ??_INTERRUPT_InterruptManager:
  1579                           
  1580                           ; 1 bytes @ 0x20
  1581  000080                     	ds	12
  1582  00008C                     ??_setMicroStep:
  1583  00008C                     ??_ADC_SelectChannel:
  1584  00008C                     ?_USBTransferOnePacket:
  1585                           	callstack 0
  1586  00008C                     ?_strlen:
  1587                           	callstack 0
  1588  00008C                     ?___fpclassifyf:
  1589                           	callstack 0
  1590  00008C                     ?_isupper:
  1591                           	callstack 0
  1592  00008C                     ?_isdigit:
  1593                           	callstack 0
  1594  00008C                     ?_strncmp:
  1595                           	callstack 0
  1596  00008C                     ?_isspace:
  1597                           	callstack 0
  1598  00008C                     ?_strchr:
  1599                           	callstack 0
  1600  00008C                     ?_islower:
  1601                           	callstack 0
  1602  00008C                     ?_ADC_GetConversionResult:
  1603                           	callstack 0
  1604  00008C                     ?___wmul:
  1605                           	callstack 0
  1606  00008C                     ?___awdiv:
  1607                           	callstack 0
  1608  00008C                     ?___awmod:
  1609                           	callstack 0
  1610  00008C                     ?___fladd:
  1611                           	callstack 0
  1612  00008C                     ?_nanf:
  1613                           	callstack 0
  1614  00008C                     ?___lmul:
  1615                           	callstack 0
  1616  00008C                     ?___flneg:
  1617                           	callstack 0
  1618  00008C                     ?___xxtofl:
  1619                           	callstack 0
  1620  00008C                     ?___aodiv:
  1621                           	callstack 0
  1622  00008C                     ?___aomod:
  1623                           	callstack 0
  1624  00008C                     USBTransferOnePacket@dir:
  1625                           	callstack 0
  1626  00008C                     TMR2_WriteTimer@timerVal:
  1627                           	callstack 0
  1628  00008C                     TMR2_LoadPeriodRegister@periodVal:
  1629                           	callstack 0
  1630  00008C                     ___lbmod@divisor:
  1631                           	callstack 0
  1632  00008C                     nanf@s:
  1633                           	callstack 0
  1634  00008C                     putUSBUSART@data:
  1635                           	callstack 0
  1636  00008C                     TMR3_SetInterruptHandler@InterruptHandler:
  1637                           	callstack 0
  1638  00008C                     TMR2_SetInterruptHandler@InterruptHandler:
  1639                           	callstack 0
  1640  00008C                     TMR0_SetInterruptHandler@InterruptHandler:
  1641                           	callstack 0
  1642  00008C                     IOCC2_SetInterruptHandler@InterruptHandler:
  1643                           	callstack 0
  1644  00008C                     M_5@axis:
  1645                           	callstack 0
  1646  00008C                     DireccionRotor@dir:
  1647                           	callstack 0
  1648  00008C                     ___wmul@multiplier:
  1649                           	callstack 0
  1650  00008C                     ___awdiv@dividend:
  1651                           	callstack 0
  1652  00008C                     ___awmod@dividend:
  1653                           	callstack 0
  1654  00008C                     memcpy@d1:
  1655                           	callstack 0
  1656  00008C                     memset@dest:
  1657                           	callstack 0
  1658  00008C                     isdigit@c:
  1659                           	callstack 0
  1660  00008C                     isspace@c:
  1661                           	callstack 0
  1662  00008C                     isupper@c:
  1663                           	callstack 0
  1664  00008C                     fputc@c:
  1665                           	callstack 0
  1666  00008C                     strcpy@dest:
  1667                           	callstack 0
  1668  00008C                     strlen@s:
  1669                           	callstack 0
  1670  00008C                     strncmp@_l:
  1671                           	callstack 0
  1672  00008C                     strchr@s:
  1673                           	callstack 0
  1674  00008C                     islower@c:
  1675                           	callstack 0
  1676  00008C                     ___lmul@multiplier:
  1677                           	callstack 0
  1678  00008C                     ___fleq@ff1:
  1679                           	callstack 0
  1680  00008C                     ___flneg@f1:
  1681                           	callstack 0
  1682  00008C                     ___fladd@b:
  1683                           	callstack 0
  1684  00008C                     ___xxtofl@val:
  1685                           	callstack 0
  1686  00008C                     ___fpclassifyf@x:
  1687                           	callstack 0
  1688  00008C                     ___aodiv@dividend:
  1689                           	callstack 0
  1690  00008C                     ___aomod@dividend:
  1691                           	callstack 0
  1692                           
  1693                           ; 8 bytes @ 0x2C
  1694  00008C                     	ds	1
  1695  00008D                     ADC_SelectChannel@channel:
  1696                           	callstack 0
  1697  00008D                     ___lbmod@dividend:
  1698                           	callstack 0
  1699  00008D                     USBTransferOnePacket@data:
  1700                           	callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x2D
  1703  00008D                     	ds	1
  1704  00008E                     ??_TMR0_Initialize:
  1705  00008E                     ??_isupper:
  1706  00008E                     ??_isdigit:
  1707  00008E                     ??_isspace:
  1708  00008E                     ??_islower:
  1709  00008E                     ??_ADC_GetConversionResult:
  1710  00008E                     putUSBUSART@length:
  1711                           	callstack 0
  1712  00008E                     setMicroStep@ustep:
  1713                           	callstack 0
  1714  00008E                     ___lbmod@counter:
  1715                           	callstack 0
  1716  00008E                     strncmp@_r:
  1717                           	callstack 0
  1718  00008E                     M_3@axis:
  1719                           	callstack 0
  1720  00008E                     M_4@axis:
  1721                           	callstack 0
  1722  00008E                     M_5@n:
  1723                           	callstack 0
  1724  00008E                     ___wmul@multiplicand:
  1725                           	callstack 0
  1726  00008E                     ___awdiv@divisor:
  1727                           	callstack 0
  1728  00008E                     ___awmod@divisor:
  1729                           	callstack 0
  1730  00008E                     memcpy@s1:
  1731                           	callstack 0
  1732  00008E                     memset@c:
  1733                           	callstack 0
  1734  00008E                     fputc@fp:
  1735                           	callstack 0
  1736  00008E                     strcpy@src:
  1737                           	callstack 0
  1738  00008E                     strlen@a:
  1739                           	callstack 0
  1740  00008E                     strchr@c:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x2E
  1744  00008E                     	ds	1
  1745  00008F                     USBTransferOnePacket@len:
  1746                           	callstack 0
  1747  00008F                     ___lbmod@rem:
  1748                           	callstack 0
  1749  00008F                     MCC_USB_WRITE@str:
  1750                           	callstack 0
  1751  00008F                     strncmp@n:
  1752                           	callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x2F
  1755  00008F                     	ds	1
  1756  000090                     ??_USBTransferOnePacket:
  1757  000090                     ??_strcpy:
  1758  000090                     ??_fputc:
  1759  000090                     ??___fpclassifyf:
  1760  000090                     ??___xxtofl:
  1761  000090                     ___awdiv@counter:
  1762                           	callstack 0
  1763  000090                     ___awmod@counter:
  1764                           	callstack 0
  1765  000090                     M_3@n:
  1766                           	callstack 0
  1767  000090                     M_4@n:
  1768                           	callstack 0
  1769  000090                     ___wmul@product:
  1770                           	callstack 0
  1771  000090                     memcpy@n:
  1772                           	callstack 0
  1773  000090                     memset@n:
  1774                           	callstack 0
  1775  000090                     ___lmul@multiplicand:
  1776                           	callstack 0
  1777  000090                     ___fleq@ff2:
  1778                           	callstack 0
  1779  000090                     ___fladd@a:
  1780                           	callstack 0
  1781  000090                     nanf@u:
  1782                           	callstack 0
  1783                           
  1784                           ; 4 bytes @ 0x30
  1785  000090                     	ds	1
  1786  000091                     ??_strncmp:
  1787  000091                     ?_strspn:
  1788                           	callstack 0
  1789  000091                     ?_strcspn:
  1790                           	callstack 0
  1791  000091                     ___awdiv@sign:
  1792                           	callstack 0
  1793  000091                     ___awmod@sign:
  1794                           	callstack 0
  1795  000091                     MCC_USB_WRITE@nBytes:
  1796                           	callstack 0
  1797  000091                     strcspn@s:
  1798                           	callstack 0
  1799  000091                     strspn@s:
  1800                           	callstack 0
  1801                           
  1802                           ; 2 bytes @ 0x31
  1803  000091                     	ds	1
  1804  000092                     ??_memset:
  1805  000092                     ?_tolower:
  1806                           	callstack 0
  1807  000092                     ?_isxdigit:
  1808                           	callstack 0
  1809  000092                     ?_toupper:
  1810                           	callstack 0
  1811  000092                     USBTransferOnePacket@ep:
  1812                           	callstack 0
  1813  000092                     memcpy@tmp:
  1814                           	callstack 0
  1815  000092                     _isspace$5016:
  1816                           	callstack 0
  1817  000092                     G_53@axis:
  1818                           	callstack 0
  1819  000092                     ___awdiv@quotient:
  1820                           	callstack 0
  1821  000092                     strcpy@s:
  1822                           	callstack 0
  1823  000092                     strncmp@l:
  1824                           	callstack 0
  1825  000092                     isxdigit@c:
  1826                           	callstack 0
  1827  000092                     tolower@c:
  1828                           	callstack 0
  1829  000092                     toupper@c:
  1830                           	callstack 0
  1831                           
  1832                           ; 2 bytes @ 0x32
  1833  000092                     	ds	1
  1834  000093                     ?_atoi:
  1835                           	callstack 0
  1836  000093                     atoi@s:
  1837                           	callstack 0
  1838  000093                     USBTransferOnePacket@handle:
  1839                           	callstack 0
  1840  000093                     memcpy@d:
  1841                           	callstack 0
  1842  000093                     strcspn@c:
  1843                           	callstack 0
  1844  000093                     strspn@c:
  1845                           	callstack 0
  1846                           
  1847                           ; 2 bytes @ 0x33
  1848  000093                     	ds	1
  1849  000094                     ??___fladd:
  1850  000094                     ??_tolower:
  1851  000094                     ??_isxdigit:
  1852  000094                     ??_toupper:
  1853  000094                     ??___fleq:
  1854  000094                     ___xxtofl@sign:
  1855                           	callstack 0
  1856  000094                     strncmp@r:
  1857                           	callstack 0
  1858  000094                     G_53@n:
  1859                           	callstack 0
  1860  000094                     memset@k:
  1861                           	callstack 0
  1862  000094                     ___fpclassifyf@e:
  1863                           	callstack 0
  1864  000094                     strcpy@d:
  1865                           	callstack 0
  1866  000094                     ___lmul@product:
  1867                           	callstack 0
  1868  000094                     ___aodiv@divisor:
  1869                           	callstack 0
  1870  000094                     ___aomod@divisor:
  1871                           	callstack 0
  1872                           
  1873                           ; 8 bytes @ 0x34
  1874  000094                     	ds	1
  1875  000095                     ??_atoi:
  1876  000095                     ??_strspn:
  1877  000095                     ??_strcspn:
  1878  000095                     ?_ctoa:
  1879                           	callstack 0
  1880  000095                     ?_stoa:
  1881                           	callstack 0
  1882  000095                     CDCTxService@i:
  1883                           	callstack 0
  1884  000095                     ___xxtofl@exp:
  1885                           	callstack 0
  1886  000095                     getsUSBUSART@buffer:
  1887                           	callstack 0
  1888  000095                     memcpy@s:
  1889                           	callstack 0
  1890  000095                     ctoa@fp:
  1891                           	callstack 0
  1892  000095                     stoa@fp:
  1893                           	callstack 0
  1894  000095                     fputs@s:
  1895                           	callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x35
  1898  000095                     	ds	1
  1899  000096                     ??_G_53:
  1900  000096                     CDCTxService@byte_to_send:
  1901                           	callstack 0
  1902  000096                     memset@s:
  1903                           	callstack 0
  1904  000096                     strcspn@i:
  1905                           	callstack 0
  1906  000096                     strspn@i:
  1907                           	callstack 0
  1908  000096                     ___xxtofl@arg:
  1909                           	callstack 0
  1910  000096                     ___fpclassifyf@u:
  1911                           	callstack 0
  1912                           
  1913                           ; 4 bytes @ 0x36
  1914  000096                     	ds	1
  1915  000097                     getsUSBUSART@len:
  1916                           	callstack 0
  1917  000097                     ctoa@c:
  1918                           	callstack 0
  1919  000097                     Fila_Agregar@comando:
  1920                           	callstack 0
  1921  000097                     FilaPop@str:
  1922                           	callstack 0
  1923  000097                     stoa@s:
  1924                           	callstack 0
  1925  000097                     fputs@fp:
  1926                           	callstack 0
  1927                           
  1928                           ; 2 bytes @ 0x37
  1929  000097                     	ds	1
  1930  000098                     ??_ctoa:
  1931  000098                     ?_strtok:
  1932                           	callstack 0
  1933  000098                     USBDeviceInit@i:
  1934                           	callstack 0
  1935  000098                     ___fladd@signs:
  1936                           	callstack 0
  1937  000098                     _isxdigit$5148:
  1938                           	callstack 0
  1939  000098                     G_53@i:
  1940                           	callstack 0
  1941  000098                     strtok@s:
  1942                           	callstack 0
  1943                           
  1944                           ; 2 bytes @ 0x38
  1945  000098                     	ds	1
  1946  000099                     ??_stoa:
  1947  000099                     ___fladd@aexp:
  1948                           	callstack 0
  1949  000099                     fputs@c:
  1950                           	callstack 0
  1951  000099                     Fila_Agregar@nBytes:
  1952                           	callstack 0
  1953  000099                     ctoa@l:
  1954                           	callstack 0
  1955  000099                     atoi@neg:
  1956                           	callstack 0
  1957                           
  1958                           ; 2 bytes @ 0x39
  1959  000099                     	ds	1
  1960  00009A                     ?___flmul:
  1961                           	callstack 0
  1962  00009A                     ___fladd@bexp:
  1963                           	callstack 0
  1964  00009A                     fputs@i:
  1965                           	callstack 0
  1966  00009A                     strtok@sep:
  1967                           	callstack 0
  1968  00009A                     ___flmul@b:
  1969                           	callstack 0
  1970                           
  1971                           ; 4 bytes @ 0x3A
  1972  00009A                     	ds	1
  1973  00009B                     ___fladd@grs:
  1974                           	callstack 0
  1975  00009B                     ctoa@w:
  1976                           	callstack 0
  1977  00009B                     atoi@n:
  1978                           	callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x3B
  1981  00009B                     	ds	1
  1982  00009C                     ?_pad:
  1983                           	callstack 0
  1984  00009C                     ___aodiv@counter:
  1985                           	callstack 0
  1986  00009C                     ___aomod@counter:
  1987                           	callstack 0
  1988  00009C                     getTokens@token:
  1989                           	callstack 0
  1990  00009C                     pad@fp:
  1991                           	callstack 0
  1992                           
  1993                           ; 2 bytes @ 0x3C
  1994  00009C                     	ds	1
  1995  00009D                     ___aodiv@sign:
  1996                           	callstack 0
  1997  00009D                     ___aomod@sign:
  1998                           	callstack 0
  1999                           
  2000                           ; 1 bytes @ 0x3D
  2001  00009D                     	ds	1
  2002  00009E                     ?_abs:
  2003                           	callstack 0
  2004  00009E                     getTokens@str:
  2005                           	callstack 0
  2006  00009E                     pad@buf:
  2007                           	callstack 0
  2008  00009E                     abs@a:
  2009                           	callstack 0
  2010  00009E                     ___flmul@a:
  2011                           	callstack 0
  2012  00009E                     ___aodiv@quotient:
  2013                           	callstack 0
  2014                           
  2015                           ; 8 bytes @ 0x3E
  2016  00009E                     	ds	2
  2017  0000A0                     ??_abs:
  2018  0000A0                     ??_getTokens:
  2019  0000A0                     pad@p:
  2020                           	callstack 0
  2021                           
  2022                           ; 2 bytes @ 0x40
  2023  0000A0                     	ds	2
  2024  0000A2                     ??___flmul:
  2025  0000A2                     ??_pad:
  2026                           
  2027                           ; 1 bytes @ 0x42
  2028  0000A2                     	ds	1
  2029  0000A3                     pad@i:
  2030                           	callstack 0
  2031                           
  2032                           ; 2 bytes @ 0x43
  2033  0000A3                     	ds	1
  2034  0000A4                     getTokens@s:
  2035                           	callstack 0
  2036                           
  2037                           ; 2 bytes @ 0x44
  2038  0000A4                     	ds	1
  2039  0000A5                     pad@w:
  2040                           	callstack 0
  2041                           
  2042                           ; 2 bytes @ 0x45
  2043  0000A5                     	ds	1
  2044  0000A6                     ??_G_97:
  2045  0000A6                     getTokens@i:
  2046                           	callstack 0
  2047  0000A6                     ___fltol@sign1:
  2048                           	callstack 0
  2049                           
  2050                           ; 1 bytes @ 0x46
  2051  0000A6                     	ds	1
  2052  0000A7                     ___fltol@exp1:
  2053                           	callstack 0
  2054                           
  2055                           ; 1 bytes @ 0x47
  2056  0000A7                     	ds	1
  2057  0000A8                     
  2058                           ; 1 bytes @ 0x48
  2059                           
  2060                           	psect	cstackCOMRAM
  2061  000001                     __pcstackCOMRAM:
  2062                           	callstack 0
  2063  000001                     ??_USBCheckCDCRequest:
  2064  000001                     ??_USBStdGetDscHandler:
  2065  000001                     ??_USBStdGetStatusHandler:
  2066  000001                     ??i2_setMicroStep:
  2067  000001                     ?_TMR0_ReadTimer:
  2068                           	callstack 0
  2069  000001                     ?___lwdiv:
  2070                           	callstack 0
  2071  000001                     ?i2_USBTransferOnePacket:
  2072                           	callstack 0
  2073  000001                     ?i2___xxtofl:
  2074                           	callstack 0
  2075  000001                     USBConfigureEndpoint@direction:
  2076                           	callstack 0
  2077  000001                     USBCtrlTrfTxService@byteToSend:
  2078                           	callstack 0
  2079  000001                     USBCtrlTrfRxService@i:
  2080                           	callstack 0
  2081  000001                     i2USBTransferOnePacket@dir:
  2082                           	callstack 0
  2083  000001                     i2TMR2_LoadPeriodRegister@periodVal:
  2084                           	callstack 0
  2085  000001                     i2___lbmod@divisor:
  2086                           	callstack 0
  2087  000001                     TMR3_WriteTimer@timerVal:
  2088                           	callstack 0
  2089  000001                     TMR0_WriteTimer@timerVal:
  2090                           	callstack 0
  2091  000001                     ___lwdiv@dividend:
  2092                           	callstack 0
  2093  000001                     i2memcpy@d1:
  2094                           	callstack 0
  2095  000001                     i2memset@dest:
  2096                           	callstack 0
  2097  000001                     i2___flge@ff1:
  2098                           	callstack 0
  2099  000001                     i2___xxtofl@val:
  2100                           	callstack 0
  2101                           
  2102                           ; 4 bytes @ 0x0
  2103  000001                     	ds	1
  2104  000002                     ??_USBConfigureEndpoint:
  2105  000002                     USBCtrlTrfRxService@byteToRead:
  2106                           	callstack 0
  2107  000002                     USBCtrlTrfInHandler@lastDTS:
  2108                           	callstack 0
  2109  000002                     i2___lbmod@dividend:
  2110                           	callstack 0
  2111  000002                     i2USBTransferOnePacket@data:
  2112                           	callstack 0
  2113                           
  2114                           ; 2 bytes @ 0x1
  2115  000002                     	ds	1
  2116  000003                     ??_TMR0_ReadTimer:
  2117  000003                     i2setMicroStep@ustep:
  2118                           	callstack 0
  2119  000003                     i2___lbmod@counter:
  2120                           	callstack 0
  2121  000003                     USBStdGetStatusHandler@p:
  2122                           	callstack 0
  2123  000003                     ___lwdiv@divisor:
  2124                           	callstack 0
  2125  000003                     i2memcpy@s1:
  2126                           	callstack 0
  2127  000003                     i2memset@c:
  2128                           	callstack 0
  2129                           
  2130                           ; 2 bytes @ 0x2
  2131  000003                     	ds	1
  2132  000004                     i2USBTransferOnePacket@len:
  2133                           	callstack 0
  2134  000004                     i2___lbmod@rem:
  2135                           	callstack 0
  2136                           
  2137                           ; 1 bytes @ 0x3
  2138  000004                     	ds	1
  2139  000005                     ??i2_USBTransferOnePacket:
  2140  000005                     ??i2___xxtofl:
  2141  000005                     TMR0_ReadTimer@readVal:
  2142                           	callstack 0
  2143  000005                     ___lwdiv@quotient:
  2144                           	callstack 0
  2145  000005                     i2memcpy@n:
  2146                           	callstack 0
  2147  000005                     i2memset@n:
  2148                           	callstack 0
  2149  000005                     i2___flge@ff2:
  2150                           	callstack 0
  2151                           
  2152                           ; 4 bytes @ 0x4
  2153  000005                     	ds	1
  2154  000006                     USBConfigureEndpoint@EPNum:
  2155                           	callstack 0
  2156                           
  2157                           ; 1 bytes @ 0x5
  2158  000006                     	ds	1
  2159  000007                     ??i2_memset:
  2160  000007                     TMR0_ReadTimer@readValLow:
  2161                           	callstack 0
  2162  000007                     ___lwdiv@counter:
  2163                           	callstack 0
  2164  000007                     i2USBTransferOnePacket@ep:
  2165                           	callstack 0
  2166  000007                     USBConfigureEndpoint@handle:
  2167                           	callstack 0
  2168  000007                     i2memcpy@d:
  2169                           	callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x6
  2172  000007                     	ds	1
  2173  000008                     TMR0_ReadTimer@readValHigh:
  2174                           	callstack 0
  2175  000008                     i2USBTransferOnePacket@handle:
  2176                           	callstack 0
  2177                           
  2178                           ; 2 bytes @ 0x7
  2179  000008                     	ds	1
  2180  000009                     ??i2___flge:
  2181  000009                     USBEnableEndpoint@options:
  2182                           	callstack 0
  2183  000009                     i2___xxtofl@sign:
  2184                           	callstack 0
  2185  000009                     i2memcpy@s:
  2186                           	callstack 0
  2187  000009                     i2memset@k:
  2188                           	callstack 0
  2189                           
  2190                           ; 2 bytes @ 0x8
  2191  000009                     	ds	1
  2192  00000A                     i2___xxtofl@exp:
  2193                           	callstack 0
  2194  00000A                     USBEnableEndpoint@p:
  2195                           	callstack 0
  2196                           
  2197                           ; 2 bytes @ 0x9
  2198  00000A                     	ds	1
  2199  00000B                     i2memcpy@tmp:
  2200                           	callstack 0
  2201  00000B                     i2memset@s:
  2202                           	callstack 0
  2203  00000B                     i2___xxtofl@arg:
  2204                           	callstack 0
  2205                           
  2206                           ; 4 bytes @ 0xA
  2207  00000B                     	ds	1
  2208  00000C                     USBEnableEndpoint@ep:
  2209                           	callstack 0
  2210                           
  2211                           ; 1 bytes @ 0xB
  2212  00000C                     	ds	1
  2213  00000D                     i2USBDeviceInit@i:
  2214                           	callstack 0
  2215  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2216                           	callstack 0
  2217                           
  2218                           ; 2 bytes @ 0xC
  2219  00000D                     	ds	2
  2220  00000F                     ?i2___fldiv:
  2221                           	callstack 0
  2222  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2223                           	callstack 0
  2224  00000F                     i2___fldiv@b:
  2225                           	callstack 0
  2226                           
  2227                           ; 4 bytes @ 0xE
  2228  00000F                     	ds	2
  2229  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x10
  2233  000011                     	ds	2
  2234  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2235  000013                     i2___fldiv@a:
  2236                           	callstack 0
  2237                           
  2238                           ; 4 bytes @ 0x12
  2239  000013                     	ds	2
  2240  000015                     ??_USBStdFeatureReqHandler:
  2241  000015                     USBStdSetCfgHandler@i:
  2242                           	callstack 0
  2243                           
  2244                           ; 1 bytes @ 0x14
  2245  000015                     	ds	2
  2246  000017                     ??i2___fldiv:
  2247  000017                     USBStdFeatureReqHandler@pUEP:
  2248                           	callstack 0
  2249                           
  2250                           ; 2 bytes @ 0x16
  2251  000017                     	ds	2
  2252  000019                     USBStdFeatureReqHandler@current_ep_data:
  2253                           	callstack 0
  2254                           
  2255                           ; 1 bytes @ 0x18
  2256  000019                     	ds	1
  2257  00001A                     USBStdFeatureReqHandler@p:
  2258                           	callstack 0
  2259                           
  2260                           ; 2 bytes @ 0x19
  2261  00001A                     	ds	1
  2262  00001B                     i2___fldiv@rem:
  2263                           	callstack 0
  2264                           
  2265                           ; 4 bytes @ 0x1A
  2266  00001B                     	ds	1
  2267  00001C                     ??_USBCheckStdRequest:
  2268                           
  2269                           ; 1 bytes @ 0x1B
  2270  00001C                     	ds	2
  2271  00001E                     ??_USBCtrlEPService:
  2272  00001E                     
  2273                           ; 1 bytes @ 0x1D
  2274  00001E                     	ds	1
  2275  00001F                     USBDeviceTasks@i:
  2276                           	callstack 0
  2277  00001F                     i2___fldiv@sign:
  2278                           	callstack 0
  2279                           
  2280                           ; 1 bytes @ 0x1E
  2281  00001F                     	ds	1
  2282  000020                     i2___fldiv@new_exp:
  2283                           	callstack 0
  2284                           
  2285                           ; 2 bytes @ 0x1F
  2286  000020                     	ds	2
  2287  000022                     i2___fldiv@grs:
  2288                           	callstack 0
  2289                           
  2290                           ; 4 bytes @ 0x21
  2291  000022                     	ds	4
  2292  000026                     i2___fldiv@bexp:
  2293                           	callstack 0
  2294                           
  2295                           ; 1 bytes @ 0x25
  2296  000026                     	ds	1
  2297  000027                     i2___fldiv@aexp:
  2298                           	callstack 0
  2299                           
  2300                           ; 1 bytes @ 0x26
  2301  000027                     	ds	1
  2302  000028                     ?i2___flmul:
  2303                           	callstack 0
  2304  000028                     i2___flmul@b:
  2305                           	callstack 0
  2306                           
  2307                           ; 4 bytes @ 0x27
  2308  000028                     	ds	4
  2309  00002C                     i2___flmul@a:
  2310                           	callstack 0
  2311                           
  2312                           ; 4 bytes @ 0x2B
  2313  00002C                     	ds	4
  2314  000030                     ??i2___flmul:
  2315                           
  2316                           ; 1 bytes @ 0x2F
  2317  000030                     	ds	4
  2318  000034                     i2___flmul@sign:
  2319                           	callstack 0
  2320                           
  2321                           ; 1 bytes @ 0x33
  2322  000034                     	ds	1
  2323  000035                     i2___flmul@aexp:
  2324                           	callstack 0
  2325                           
  2326                           ; 1 bytes @ 0x34
  2327  000035                     	ds	1
  2328  000036                     i2___flmul@grs:
  2329                           	callstack 0
  2330                           
  2331                           ; 4 bytes @ 0x35
  2332  000036                     	ds	4
  2333  00003A                     i2___flmul@bexp:
  2334                           	callstack 0
  2335                           
  2336                           ; 1 bytes @ 0x39
  2337  00003A                     	ds	1
  2338  00003B                     i2___flmul@prod:
  2339                           	callstack 0
  2340                           
  2341                           ; 4 bytes @ 0x3A
  2342  00003B                     	ds	4
  2343  00003F                     i2___flmul@temp:
  2344                           	callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x3E
  2347  00003F                     	ds	2
  2348  000041                     ?i2___fltol:
  2349                           	callstack 0
  2350  000041                     ?i2___fladd:
  2351                           	callstack 0
  2352  000041                     i2___fltol@f1:
  2353                           	callstack 0
  2354  000041                     i2___fladd@b:
  2355                           	callstack 0
  2356                           
  2357                           ; 4 bytes @ 0x40
  2358  000041                     	ds	4
  2359  000045                     ??i2___fltol:
  2360  000045                     i2___fladd@a:
  2361                           	callstack 0
  2362                           
  2363                           ; 4 bytes @ 0x44
  2364  000045                     	ds	4
  2365  000049                     ??i2___fladd:
  2366  000049                     i2___fltol@sign1:
  2367                           	callstack 0
  2368                           
  2369                           ; 1 bytes @ 0x48
  2370  000049                     	ds	1
  2371  00004A                     i2___fltol@exp1:
  2372                           	callstack 0
  2373                           
  2374                           ; 1 bytes @ 0x49
  2375  00004A                     	ds	3
  2376  00004D                     i2___fladd@signs:
  2377                           	callstack 0
  2378                           
  2379                           ; 1 bytes @ 0x4C
  2380  00004D                     	ds	1
  2381  00004E                     i2___fladd@aexp:
  2382                           	callstack 0
  2383                           
  2384                           ; 1 bytes @ 0x4D
  2385  00004E                     	ds	1
  2386  00004F                     i2___fladd@bexp:
  2387                           	callstack 0
  2388                           
  2389                           ; 1 bytes @ 0x4E
  2390  00004F                     	ds	1
  2391  000050                     i2___fladd@grs:
  2392                           	callstack 0
  2393                           
  2394                           ; 1 bytes @ 0x4F
  2395  000050                     	ds	1
  2396  000051                     ?i2___flsub:
  2397                           	callstack 0
  2398  000051                     i2___flsub@b:
  2399                           	callstack 0
  2400                           
  2401                           ; 4 bytes @ 0x50
  2402  000051                     	ds	4
  2403  000055                     i2___flsub@a:
  2404                           	callstack 0
  2405                           
  2406                           ; 4 bytes @ 0x54
  2407  000055                     	ds	4
  2408  000059                     ??_Encoder_ISR:
  2409  000059                     ??_G01_TMR2_ISR:
  2410  000059                     
  2411                           ; 1 bytes @ 0x58
  2412  000059                     	ds	2
  2413  00005B                     
  2414                           ; 1 bytes @ 0x5A
  2415 ;;
  2416 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2417 ;;
  2418 ;; *************** function _main *****************
  2419 ;; Defined at:
  2420 ;;		line 55 in file "main.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2437 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2438 ;;Total ram usage:        1 bytes
  2439 ;; Hardware stack levels required when called: 19
  2440 ;; This function calls:
  2441 ;;		_CDCTxService
  2442 ;;		_MCC_USB_WRITE
  2443 ;;		_USBCommandFetch
  2444 ;;		_executeCommand
  2445 ;;		_inicializar_Sistema
  2446 ;;		_medir_corriente
  2447 ;;		_memset
  2448 ;;		_sprintf
  2449 ;; This function is called by:
  2450 ;;		Startup code after reset
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text0
  2455  006D7C                     __ptext0:
  2456                           	callstack 0
  2457  006D7C                     _main:
  2458                           	callstack 12
  2459                           
  2460                           ;main.c: 57:     inicializar_Sistema();
  2461                           
  2462                           ;incstack = 0
  2463  006D7C  EC7A  F03D         	call	_inicializar_Sistema	;wreg free
  2464  006D80                     l15669:
  2465                           
  2466                           ;main.c: 59:     {;main.c: 60:       USBCommandFetch();
  2467  006D80  EC15  F021         	call	_USBCommandFetch	;wreg free
  2468                           
  2469                           ;main.c: 61:       executeCommand();
  2470  006D84  EC7F  F024         	call	_executeCommand	;wreg free
  2471                           
  2472                           ;main.c: 63:       medir_corriente();
  2473  006D88  EC4C  F002         	call	_medir_corriente	;wreg free
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;main.c: 64:       error=(~PORTCbits.RC1)&0x01;
  2477  006D8C  A282               	btfss	130,1,c	;volatile
  2478  006D8E  D002               	goto	u19170
  2479  006D90  0E01               	movlw	1
  2480  006D92  D001               	goto	u19176
  2481  006D94                     u19170:
  2482  006D94  0E00               	movlw	0
  2483  006D96                     u19176:
  2484  006D96  0AFF               	xorlw	255
  2485  006D98  0B01               	andlw	1
  2486  006D9A  0102               	movlb	2	; () banked
  2487  006D9C  6FE2               	movwf	_error& (0+255),b
  2488                           
  2489                           ; BSR set to: 2
  2490                           ;main.c: 65:       sprintf(writeBuffer,"%.3f %.3f %d %d %d ",S,pos_relativa_Z,angulo,cur
      +                          rent,error);
  2491  006D9E  0E82               	movlw	low _writeBuffer
  2492  006DA0  0101               	movlb	1	; () banked
  2493  006DA2  6F9C               	movwf	sprintf@s& (0+255),b
  2494  006DA4  0E03               	movlw	high _writeBuffer
  2495  006DA6  6F9D               	movwf	(sprintf@s+1)& (0+255),b
  2496  006DA8  0EA8               	movlw	low STR_1
  2497  006DAA  6F9E               	movwf	sprintf@fmt& (0+255),b
  2498  006DAC  C2F6  F19F         	movff	_S,?_sprintf+3
  2499  006DB0  C2F7  F1A0         	movff	_S+1,?_sprintf+4
  2500  006DB4  C2F8  F1A1         	movff	_S+2,?_sprintf+5
  2501  006DB8  C2F9  F1A2         	movff	_S+3,?_sprintf+6
  2502  006DBC  C0BC  F1A3         	movff	_pos_relativa_Z,?_sprintf+7
  2503  006DC0  C0BD  F1A4         	movff	_pos_relativa_Z+1,?_sprintf+8
  2504  006DC4  C0BE  F1A5         	movff	_pos_relativa_Z+2,?_sprintf+9
  2505  006DC8  C0BF  F1A6         	movff	_pos_relativa_Z+3,?_sprintf+10
  2506  006DCC  C0C9  F1A7         	movff	_angulo,?_sprintf+11
  2507  006DD0  6BA8               	clrf	(?_sprintf+12)& (0+255),b
  2508  006DD2  C2D2  F1A9         	movff	_current,?_sprintf+13
  2509  006DD6  C2D3  F1AA         	movff	_current+1,?_sprintf+14
  2510  006DDA  C2E2  F1AB         	movff	_error,?_sprintf+15
  2511  006DDE  6BAC               	clrf	(?_sprintf+16)& (0+255),b
  2512  006DE0  ECA1  F03D         	call	_sprintf	;wreg free
  2513                           
  2514                           ; BSR set to: 1
  2515                           ;main.c: 67:       MCC_USB_WRITE(writeBuffer,30);
  2516  006DE4  0E82               	movlw	low _writeBuffer
  2517  006DE6  0100               	movlb	0	; () banked
  2518  006DE8  6F8F               	movwf	MCC_USB_WRITE@str& (0+255),b
  2519  006DEA  0E03               	movlw	high _writeBuffer
  2520  006DEC  6F90               	movwf	(MCC_USB_WRITE@str+1)& (0+255),b
  2521  006DEE  0E00               	movlw	0
  2522  006DF0  6F92               	movwf	(MCC_USB_WRITE@nBytes+1)& (0+255),b
  2523  006DF2  0E1E               	movlw	30
  2524  006DF4  6F91               	movwf	MCC_USB_WRITE@nBytes& (0+255),b
  2525  006DF6  ECC3  F001         	call	_MCC_USB_WRITE	;wreg free
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;main.c: 68:       CDCTxService();
  2529  006DFA  ECAC  F02D         	call	_CDCTxService	;wreg free
  2530                           
  2531                           ;main.c: 69:       memset(writeBuffer,0,sizeof(writeBuffer));
  2532  006DFE  0E82               	movlw	low _writeBuffer
  2533  006E00  0100               	movlb	0	; () banked
  2534  006E02  6F8C               	movwf	memset@dest& (0+255),b
  2535  006E04  0E03               	movlw	high _writeBuffer
  2536  006E06  6F8D               	movwf	(memset@dest+1)& (0+255),b
  2537  006E08  0E00               	movlw	0
  2538  006E0A  6F8F               	movwf	(memset@c+1)& (0+255),b
  2539  006E0C  0E00               	movlw	0
  2540  006E0E  6F8E               	movwf	memset@c& (0+255),b
  2541  006E10  0E00               	movlw	0
  2542  006E12  6F91               	movwf	(memset@n+1)& (0+255),b
  2543  006E14  0E20               	movlw	32
  2544  006E16  6F90               	movwf	memset@n& (0+255),b
  2545  006E18  EC25  F02A         	call	_memset	;wreg free
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;main.c: 71:       _delay((unsigned long)((1)*(48000000/4000.0)));
  2549  006E1C  0E10               	movlw	16
  2550  006E1E  0101               	movlb	1	; () banked
  2551  006E20  6FBE               	movwf	??_main& (0+255),b
  2552  006E22  0E94               	movlw	148
  2553  006E24                     u19187:
  2554  006E24  2EE8               	decfsz	wreg,f,c
  2555  006E26  D7FE               	bra	u19187
  2556  006E28  2FBE               	decfsz	??_main& (0+255),f,b
  2557  006E2A  D7FC               	bra	u19187
  2558  006E2C  F000               	nop	
  2559  006E2E  D7A8               	goto	l15669
  2560  006E30                     __end_of_main:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _medir_corriente *****************
  2564 ;; Defined at:
  2565 ;;		line 6 in file "torque.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 3F/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2582 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2583 ;;Total ram usage:        0 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 11
  2586 ;; This function calls:
  2587 ;;		_ADC_GetConversionResult
  2588 ;;		_ADC_IsConversionDone
  2589 ;;		_ADC_StartConversion
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text1
  2596  000498                     __ptext1:
  2597                           	callstack 0
  2598  000498                     _medir_corriente:
  2599                           	callstack 19
  2600                           
  2601                           ;torque.c: 8:    ADC_StartConversion();
  2602                           
  2603                           ;incstack = 0
  2604  000498  ECFB  F002         	call	_ADC_StartConversion	;wreg free
  2605  00049C                     l12277:
  2606  00049C  ECBA  F002         	call	_ADC_IsConversionDone	;wreg free
  2607  0004A0  0900               	iorlw	0
  2608  0004A2  B4D8               	btfsc	status,2,c
  2609  0004A4  D7FB               	goto	l12277
  2610                           
  2611                           ;torque.c: 10:    current = ADC_GetConversionResult();
  2612  0004A6  EC84  F002         	call	_ADC_GetConversionResult	;wreg free
  2613  0004AA  C08C  F2D2         	movff	?_ADC_GetConversionResult,_current
  2614  0004AE  C08D  F2D3         	movff	?_ADC_GetConversionResult+1,_current+1
  2615                           
  2616                           ; BSR set to: 0
  2617  0004B2  0012               	return		;funcret
  2618  0004B4                     __end_of_medir_corriente:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _ADC_StartConversion *****************
  2622 ;; Defined at:
  2623 ;;		line 91 in file "mcc_generated_files/adc.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		None
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2637 ;;      Params:         0       0       0       0       0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2640 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; Hardware stack levels required when called: 10
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_medir_corriente
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text2
  2652  0005F6                     __ptext2:
  2653                           	callstack 0
  2654  0005F6                     _ADC_StartConversion:
  2655                           	callstack 19
  2656                           
  2657                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;incstack = 0
  2661  0005F6  82C2               	bsf	194,1,c	;volatile
  2662  0005F8  0012               	return		;funcret
  2663  0005FA                     __end_of_ADC_StartConversion:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _ADC_IsConversionDone *****************
  2667 ;; Defined at:
  2668 ;;		line 98 in file "mcc_generated_files/adc.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      _Bool 
  2675 ;; Registers used:
  2676 ;;		wreg
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 10
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_medir_corriente
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text3
  2697  000574                     __ptext3:
  2698                           	callstack 0
  2699  000574                     _ADC_IsConversionDone:
  2700                           	callstack 19
  2701                           
  2702                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  2703                           
  2704                           ;incstack = 0
  2705  000574  B2C2               	btfsc	194,1,c	;volatile
  2706  000576  D002               	goto	u13270
  2707  000578  0E01               	movlw	1
  2708  00057A  0012               	return	
  2709  00057C                     u13270:
  2710  00057C  0E00               	movlw	0
  2711  00057E  0012               	return		;funcret
  2712  000580                     __end_of_ADC_IsConversionDone:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _ADC_GetConversionResult *****************
  2716 ;; Defined at:
  2717 ;;		line 104 in file "mcc_generated_files/adc.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2   44[BANK0 ] unsigned short 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 3F/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2731 ;;      Params:         0       2       0       0       0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2733 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2734 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2735 ;;Total ram usage:        4 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 10
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_medir_corriente
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text4
  2746  000508                     __ptext4:
  2747                           	callstack 0
  2748  000508                     _ADC_GetConversionResult:
  2749                           	callstack 19
  2750                           
  2751                           ;mcc_generated_files/adc.c: 107:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2752                           
  2753                           ;incstack = 0
  2754  000508  50C4               	movf	196,w,c	;volatile
  2755  00050A  0100               	movlb	0	; () banked
  2756  00050C  6F8F               	movwf	(??_ADC_GetConversionResult+1)& (0+255),b
  2757  00050E  6B8E               	clrf	??_ADC_GetConversionResult& (0+255),b
  2758  000510  50C3               	movf	195,w,c	;volatile
  2759  000512  258E               	addwf	??_ADC_GetConversionResult& (0+255),w,b
  2760  000514  6F8C               	movwf	?_ADC_GetConversionResult& (0+255),b
  2761  000516  0E00               	movlw	0
  2762  000518  218F               	addwfc	(??_ADC_GetConversionResult+1)& (0+255),w,b
  2763  00051A  6F8D               	movwf	(?_ADC_GetConversionResult+1)& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766  00051C  0012               	return		;funcret
  2767  00051E                     __end_of_ADC_GetConversionResult:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _inicializar_Sistema *****************
  2771 ;; Defined at:
  2772 ;;		line 75 in file "main.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 3F/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0
  2787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2789 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2790 ;;Total ram usage:        0 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 13
  2793 ;; This function calls:
  2794 ;;		_ADC_SelectChannel
  2795 ;;		_Fila_Init
  2796 ;;		_IOCC2_SetInterruptHandler
  2797 ;;		_SYSTEM_Initialize
  2798 ;;		_TMR0_SetInterruptHandler
  2799 ;;		_TMR0_StartTimer
  2800 ;;		_TMR2_StopTimer
  2801 ;;		_TMR3_StopTimer
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text5
  2808  007AF4                     __ptext5:
  2809                           	callstack 0
  2810  007AF4                     _inicializar_Sistema:
  2811                           	callstack 17
  2812                           
  2813                           ;main.c: 77:     SYSTEM_Initialize();
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;incstack = 0
  2817  007AF4  ECD2  F000         	call	_SYSTEM_Initialize	;wreg free
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;main.c: 78:     IOCC2_SetInterruptHandler(Encoder_ISR);
  2821  007AF8  0E9E               	movlw	low _Encoder_ISR
  2822  007AFA  6F8C               	movwf	IOCC2_SetInterruptHandler@InterruptHandler& (0+255),b
  2823  007AFC  0E35               	movlw	high _Encoder_ISR
  2824  007AFE  6F8D               	movwf	(IOCC2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2825  007B00  ECD0  F002         	call	_IOCC2_SetInterruptHandler	;wreg free
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;main.c: 79:     TMR0_SetInterruptHandler(Timing_TMR0_ISR);
  2829  007B04  0E74               	movlw	low _Timing_TMR0_ISR
  2830  007B06  6F8C               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  2831  007B08  0E01               	movlw	high _Timing_TMR0_ISR
  2832  007B0A  6F8D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2833  007B0C  ECCB  F002         	call	_TMR0_SetInterruptHandler	;wreg free
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;main.c: 80:     (INTCONbits.GIE = 1);
  2837  007B10  8EF2               	bsf	242,7,c	;volatile
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;main.c: 81:     (INTCONbits.PEIE = 1);
  2841  007B12  8CF2               	bsf	242,6,c	;volatile
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;main.c: 83:    TMR3_StopTimer();
  2845  007B14  ECFD  F002         	call	_TMR3_StopTimer	;wreg free
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;main.c: 84:    TMR2_StopTimer();
  2849  007B18  EC09  F003         	call	_TMR2_StopTimer	;wreg free
  2850                           
  2851                           ;main.c: 85:    TMR0_StartTimer();
  2852  007B1C  ECFF  F002         	call	_TMR0_StartTimer	;wreg free
  2853                           
  2854                           ;main.c: 86:    Fila_Init();
  2855  007B20  EC00  F001         	call	_Fila_Init	;wreg free
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;main.c: 87:    PORTBbits.RB0=0;
  2859  007B24  9081               	bcf	129,0,c	;volatile
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;main.c: 88:    PORTBbits.RB4=1;
  2863  007B26  8881               	bsf	129,4,c	;volatile
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;main.c: 89:    PORTBbits.RB5=1;
  2867  007B28  8A81               	bsf	129,5,c	;volatile
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;main.c: 90:    LATBbits.LATB1=1;
  2871  007B2A  828A               	bsf	138,1,c	;volatile
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;main.c: 91:    LATBbits.LATB2=1;
  2875  007B2C  848A               	bsf	138,2,c	;volatile
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;main.c: 92:    LATBbits.LATB3=1;
  2879  007B2E  868A               	bsf	138,3,c	;volatile
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;main.c: 93:    numBytesRead=0;
  2883  007B30  0E00               	movlw	0
  2884  007B32  0101               	movlb	1	; () banked
  2885  007B34  6FD7               	movwf	_numBytesRead& (0+255),b
  2886                           
  2887                           ; BSR set to: 1
  2888                           ;main.c: 94:    LATBbits.LATB0=1;
  2889  007B36  808A               	bsf	138,0,c	;volatile
  2890                           
  2891                           ; BSR set to: 1
  2892                           ;main.c: 95:    LATBbits.LATB4=1;
  2893  007B38  888A               	bsf	138,4,c	;volatile
  2894                           
  2895                           ; BSR set to: 1
  2896                           ;main.c: 96:    ADC_SelectChannel(channel_AN19);
  2897  007B3A  0E13               	movlw	19
  2898  007B3C  EC68  F002         	call	_ADC_SelectChannel
  2899                           
  2900                           ; BSR set to: 0
  2901  007B40  0012               	return		;funcret
  2902  007B42                     __end_of_inicializar_Sistema:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _TMR3_StopTimer *****************
  2906 ;; Defined at:
  2907 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		None
  2916 ;; Tracked objects:
  2917 ;;		On entry : 3F/0
  2918 ;;		On exit  : 3F/0
  2919 ;;		Unchanged: 3F/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 10
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_inicializar_Sistema
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text6
  2936  0005FA                     __ptext6:
  2937                           	callstack 0
  2938  0005FA                     _TMR3_StopTimer:
  2939                           	callstack 19
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 0;
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;incstack = 0
  2946  0005FA  90B1               	bcf	177,0,c	;volatile
  2947                           
  2948                           ; BSR set to: 0
  2949  0005FC  0012               	return		;funcret
  2950  0005FE                     __end_of_TMR3_StopTimer:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _TMR0_StartTimer *****************
  2954 ;; Defined at:
  2955 ;;		line 97 in file "mcc_generated_files/tmr0.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		None
  2964 ;; Tracked objects:
  2965 ;;		On entry : 3C/0
  2966 ;;		On exit  : 3C/0
  2967 ;;		Unchanged: 3C/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 10
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_inicializar_Sistema
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text7
  2984  0005FE                     __ptext7:
  2985                           	callstack 0
  2986  0005FE                     _TMR0_StartTimer:
  2987                           	callstack 19
  2988                           
  2989                           ;mcc_generated_files/tmr0.c: 100:     T0CONbits.TMR0ON = 1;
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;incstack = 0
  2993  0005FE  8ED5               	bsf	213,7,c	;volatile
  2994  000600  0012               	return		;funcret
  2995  000602                     __end_of_TMR0_StartTimer:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _SYSTEM_Initialize *****************
  2999 ;; Defined at:
  3000 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 3F/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 12
  3021 ;; This function calls:
  3022 ;;		_ADC_Initialize
  3023 ;;		_CCP2_Initialize
  3024 ;;		_INTERRUPT_Initialize
  3025 ;;		_OSCILLATOR_Initialize
  3026 ;;		_PIN_MANAGER_Initialize
  3027 ;;		_TMR0_Initialize
  3028 ;;		_TMR1_Initialize
  3029 ;;		_TMR2_Initialize
  3030 ;;		_TMR3_Initialize
  3031 ;;		_USBDeviceAttach
  3032 ;;		_USBDeviceInit
  3033 ;; This function is called by:
  3034 ;;		_inicializar_Sistema
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text8
  3039  0001A4                     __ptext8:
  3040                           	callstack 0
  3041  0001A4                     _SYSTEM_Initialize:
  3042                           	callstack 17
  3043                           
  3044                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3045                           
  3046                           ;incstack = 0
  3047  0001A4  EC01  F003         	call	_INTERRUPT_Initialize	;wreg free
  3048                           
  3049                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3050  0001A8  EC98  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3054  0001AC  EC8F  F002         	call	_OSCILLATOR_Initialize	;wreg free
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;mcc_generated_files/mcc.c: 56:     CCP2_Initialize();
  3058  0001B0  ECA5  F002         	call	_CCP2_Initialize	;wreg free
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;mcc_generated_files/mcc.c: 57:     USBDeviceInit();
  3062  0001B4  ECEF  F02B         	call	_USBDeviceInit	;wreg free
  3063                           
  3064                           ; BSR set to: 1
  3065                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3066  0001B8  EC9A  F002         	call	_ADC_Initialize	;wreg free
  3067                           
  3068                           ; BSR set to: 1
  3069                           ;mcc_generated_files/mcc.c: 59:     TMR3_Initialize();
  3070  0001BC  EC5B  F001         	call	_TMR3_Initialize	;wreg free
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  3074  0001C0  ECF0  F03F         	call	_TMR2_Initialize	;wreg free
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;mcc_generated_files/mcc.c: 61:     TMR1_Initialize();
  3078  0001C4  EC5A  F002         	call	_TMR1_Initialize	;wreg free
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
  3082  0001C8  ECF8  F03E         	call	_TMR0_Initialize	;wreg free
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;mcc_generated_files/mcc.c: 63:     USBDeviceAttach();
  3086  0001CC  EC45  F001         	call	_USBDeviceAttach	;wreg free
  3087                           
  3088                           ; BSR set to: 0
  3089  0001D0  0012               	return		;funcret
  3090  0001D2                     __end_of_SYSTEM_Initialize:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _USBDeviceInit *****************
  3094 ;; Defined at:
  3095 ;;		line 281 in file "mcc_generated_files/usb/usb_device.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  i               1   56[BANK0 ] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 3F/0
  3106 ;;		On exit  : 3F/1
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0
  3110 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3112 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3113 ;;Total ram usage:        1 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 11
  3116 ;; This function calls:
  3117 ;;		_memset
  3118 ;; This function is called by:
  3119 ;;		_SYSTEM_Initialize
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text9
  3124  0057DE                     __ptext9:
  3125                           	callstack 0
  3126  0057DE                     _USBDeviceInit:
  3127                           	callstack 17
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;mcc_generated_files/usb/usb_device.c: 283:     uint8_t i;;mcc_generated_files/usb/usb_d
      +                          evice.c: 285:     {PIE3bits.USBIE = 0;};
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;incstack = 0
  3134  0057DE  94A3               	bcf	163,2,c	;volatile
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;mcc_generated_files/usb/usb_device.c: 292:     {UEIR = 0;};
  3138  0057E0  0E00               	movlw	0
  3139  0057E2  6E67               	movwf	103,c	;volatile
  3140                           
  3141                           ;mcc_generated_files/usb/usb_device.c: 295:     {UIR = 0;};
  3142  0057E4  0E00               	movlw	0
  3143  0057E6  6E65               	movwf	101,c	;volatile
  3144                           
  3145                           ;mcc_generated_files/usb/usb_device.c: 298:     UEP0 = 0;
  3146  0057E8  0E00               	movlw	0
  3147  0057EA  6E6A               	movwf	106,c	;volatile
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;mcc_generated_files/usb/usb_device.c: 300:     memset((void*)&UEP1,0x00,(2));;
  3151  0057EC  0E6B               	movlw	107
  3152  0057EE  6F8C               	movwf	memset@dest& (0+255),b
  3153  0057F0  0E0F               	movlw	15
  3154  0057F2  6F8D               	movwf	(memset@dest+1)& (0+255),b
  3155  0057F4  0E00               	movlw	0
  3156  0057F6  6F8F               	movwf	(memset@c+1)& (0+255),b
  3157  0057F8  0E00               	movlw	0
  3158  0057FA  6F8E               	movwf	memset@c& (0+255),b
  3159  0057FC  0E00               	movlw	0
  3160  0057FE  6F91               	movwf	(memset@n+1)& (0+255),b
  3161  005800  0E02               	movlw	2
  3162  005802  6F90               	movwf	memset@n& (0+255),b
  3163  005804  EC25  F02A         	call	_memset	;wreg free
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;mcc_generated_files/usb/usb_device.c: 302:     { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE
      +                           = 0x9F; UIE = 0x39 | 0x40 | 0x02; };
  3167  005808  0E16               	movlw	22
  3168  00580A  6E62               	movwf	98,c	;volatile
  3169                           
  3170                           ; BSR set to: 0
  3171  00580C  0E9F               	movlw	159
  3172  00580E  6E66               	movwf	102,c	;volatile
  3173                           
  3174                           ; BSR set to: 0
  3175  005810  0E7B               	movlw	123
  3176  005812  6E64               	movwf	100,c	;volatile
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;mcc_generated_files/usb/usb_device.c: 311:     for(i = 0; i < (sizeof(BDT)/sizeof(BDT_E
      +                          NTRY)); i++)
  3180  005814  0E00               	movlw	0
  3181  005816  6F98               	movwf	USBDeviceInit@i& (0+255),b
  3182  005818                     l14383:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;mcc_generated_files/usb/usb_device.c: 312:     {;mcc_generated_files/usb/usb_device.c: 
      +                          313:         BDT[i].Val = 0x00;
  3186  005818  5198               	movf	USBDeviceInit@i& (0+255),w,b
  3187  00581A  0D04               	mullw	4
  3188  00581C  0E00               	movlw	0
  3189  00581E  24F3               	addwf	243,w,c
  3190  005820  6ED9               	movwf	fsr2l,c
  3191  005822  0E04               	movlw	4
  3192  005824  20F4               	addwfc	prodh,w,c
  3193  005826  6EDA               	movwf	fsr2h,c
  3194  005828  6ADE               	clrf	postinc2,c
  3195  00582A  6ADE               	clrf	postinc2,c
  3196  00582C  6ADE               	clrf	postinc2,c
  3197  00582E  6ADD               	clrf	postdec2,c
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;mcc_generated_files/usb/usb_device.c: 314:     }
  3201  005830  2B98               	incf	USBDeviceInit@i& (0+255),f,b
  3202                           
  3203                           ; BSR set to: 0
  3204  005832  0E0B               	movlw	11
  3205  005834  6598               	cpfsgt	USBDeviceInit@i& (0+255),b
  3206  005836  D7F0               	goto	l14383
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;mcc_generated_files/usb/usb_device.c: 317:     UCONbits.PPBRST = 1;
  3210  005838  8C60               	bsf	96,6,c	;volatile
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;mcc_generated_files/usb/usb_device.c: 320:     UADDR = 0x00;
  3214  00583A  0E00               	movlw	0
  3215  00583C  6E63               	movwf	99,c	;volatile
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;mcc_generated_files/usb/usb_device.c: 323:     UCONbits.PKTDIS = 0;
  3219  00583E  9860               	bcf	96,4,c	;volatile
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;mcc_generated_files/usb/usb_device.c: 326:     UCONbits.PPBRST = 0;
  3223  005840  9C60               	bcf	96,6,c	;volatile
  3224  005842                     l14395:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;mcc_generated_files/usb/usb_device.c: 330:     {;mcc_generated_files/usb/usb_device.c: 
      +                          331:         (UIR &= 0xF7);
  3228  005842  9665               	bcf	101,3,c	;volatile
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;mcc_generated_files/usb/usb_device.c: 333:         inPipes[0].info.Val = 0;
  3232  005844  0E00               	movlw	0
  3233  005846  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;mcc_generated_files/usb/usb_device.c: 334:         outPipes[0].info.Val = 0;
  3237  005848  0E00               	movlw	0
  3238  00584A  6FAB               	movwf	(_outPipes+3)& (0+255),b	;volatile
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;mcc_generated_files/usb/usb_device.c: 335:         outPipes[0].wCount.Val = 0;
  3242  00584C  0E00               	movlw	0
  3243  00584E  6FAD               	movwf	(_outPipes+5)& (0+255),b	;volatile
  3244  005850  0E00               	movlw	0
  3245  005852  6FAC               	movwf	(_outPipes+4)& (0+255),b	;volatile
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;mcc_generated_files/usb/usb_device.c: 336:     }while(UIRbits.TRNIF == 1);
  3249  005854  B665               	btfsc	101,3,c	;volatile
  3250  005856  D7F5               	goto	l14395
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;mcc_generated_files/usb/usb_device.c: 340:     USBStatusStageEnabledFlag1 = 1;
  3254  005858  0E01               	movlw	1
  3255  00585A  0101               	movlb	1	; () banked
  3256  00585C  6FDF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  3257                           
  3258                           ;mcc_generated_files/usb/usb_device.c: 341:     USBStatusStageEnabledFlag2 = 1;
  3259  00585E  0E01               	movlw	1
  3260  005860  6FDE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  3261                           
  3262                           ;mcc_generated_files/usb/usb_device.c: 343:     USBDeferINDataStagePackets = 0;
  3263  005862  0E00               	movlw	0
  3264  005864  6FDD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  3265                           
  3266                           ;mcc_generated_files/usb/usb_device.c: 344:     USBDeferOUTDataStagePackets = 0;
  3267  005866  0E00               	movlw	0
  3268  005868  6FDC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  3269                           
  3270                           ;mcc_generated_files/usb/usb_device.c: 345:     USBBusIsSuspended = 0;
  3271  00586A  0E00               	movlw	0
  3272  00586C  6FE1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  3273                           
  3274                           ;mcc_generated_files/usb/usb_device.c: 349:     for(i = 0; i < (uint8_t)(2 +1u); i++)
  3275  00586E  0E00               	movlw	0
  3276  005870  0100               	movlb	0	; () banked
  3277  005872  6F98               	movwf	USBDeviceInit@i& (0+255),b
  3278  005874                     l14411:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;mcc_generated_files/usb/usb_device.c: 350:     {;mcc_generated_files/usb/usb_device.c: 
      +                          351:         pBDTEntryIn[i] = 0u;
  3282  005874  5198               	movf	USBDeviceInit@i& (0+255),w,b
  3283  005876  0D02               	mullw	2
  3284  005878  50F3               	movf	243,w,c
  3285  00587A  0FB6               	addlw	low _pBDTEntryIn
  3286  00587C  6ED9               	movwf	fsr2l,c
  3287  00587E  6ADA               	clrf	fsr2h,c
  3288  005880  0E00               	movlw	0
  3289  005882  6EDE               	movwf	postinc2,c
  3290  005884  0E00               	movlw	0
  3291  005886  6EDD               	movwf	postdec2,c
  3292                           
  3293                           ;mcc_generated_files/usb/usb_device.c: 352:         pBDTEntryOut[i] = 0u;
  3294  005888  5198               	movf	USBDeviceInit@i& (0+255),w,b
  3295  00588A  0D02               	mullw	2
  3296  00588C  0EAE               	movlw	low _pBDTEntryOut
  3297  00588E  24F3               	addwf	243,w,c
  3298  005890  6ED9               	movwf	fsr2l,c
  3299  005892  0E02               	movlw	high _pBDTEntryOut
  3300  005894  20F4               	addwfc	prodh,w,c
  3301  005896  6EDA               	movwf	fsr2h,c
  3302  005898  0E00               	movlw	0
  3303  00589A  6EDE               	movwf	postinc2,c
  3304  00589C  0E00               	movlw	0
  3305  00589E  6EDD               	movwf	postdec2,c
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;mcc_generated_files/usb/usb_device.c: 353:         ep_data_in[i].Val = 0u;
  3309  0058A0  0EC2               	movlw	low _ep_data_in
  3310  0058A2  2598               	addwf	USBDeviceInit@i& (0+255),w,b
  3311  0058A4  6ED9               	movwf	fsr2l,c
  3312  0058A6  6ADA               	clrf	fsr2h,c
  3313  0058A8  0E01               	movlw	high _ep_data_in
  3314  0058AA  22DA               	addwfc	fsr2h,f,c
  3315  0058AC  0E00               	movlw	0
  3316  0058AE  6EDF               	movwf	indf2,c
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;mcc_generated_files/usb/usb_device.c: 354:         ep_data_out[i].Val = 0u;
  3320  0058B0  0EBF               	movlw	low _ep_data_out
  3321  0058B2  2598               	addwf	USBDeviceInit@i& (0+255),w,b
  3322  0058B4  6ED9               	movwf	fsr2l,c
  3323  0058B6  6ADA               	clrf	fsr2h,c
  3324  0058B8  0E01               	movlw	high _ep_data_out
  3325  0058BA  22DA               	addwfc	fsr2h,f,c
  3326  0058BC  0E00               	movlw	0
  3327  0058BE  6EDF               	movwf	indf2,c
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;mcc_generated_files/usb/usb_device.c: 355:     }
  3331  0058C0  2B98               	incf	USBDeviceInit@i& (0+255),f,b
  3332                           
  3333                           ; BSR set to: 0
  3334  0058C2  0E02               	movlw	2
  3335  0058C4  6598               	cpfsgt	USBDeviceInit@i& (0+255),b
  3336  0058C6  D7D6               	goto	l14411
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;mcc_generated_files/usb/usb_device.c: 358:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)&B
      +                          DT[2];
  3340  0058C8  0E08               	movlw	8
  3341  0058CA  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  3342  0058CC  0E04               	movlw	4
  3343  0058CE  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;mcc_generated_files/usb/usb_device.c: 360:     UEP0 = 0x06|0x10;
  3347  0058D0  0E16               	movlw	22
  3348  0058D2  6E6A               	movwf	106,c	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;mcc_generated_files/usb/usb_device.c: 362:     BDT[0].ADR = ((uint16_t)(&SetupPkt));
  3352  0058D4  0E04               	movlw	4
  3353  0058D6  0104               	movlb	4	; () banked
  3354  0058D8  6F03               	movwf	3,b	;volatile
  3355  0058DA  0E30               	movlw	48
  3356  0058DC  6F02               	movwf	2,b	;volatile
  3357                           
  3358                           ; BSR set to: 4
  3359                           ;mcc_generated_files/usb/usb_device.c: 363:     BDT[0].CNT = 8;
  3360  0058DE  0E08               	movlw	8
  3361  0058E0  6F01               	movwf	1,b	;volatile
  3362                           
  3363                           ; BSR set to: 4
  3364                           ;mcc_generated_files/usb/usb_device.c: 364:     BDT[0].STAT.Val = 0x00|0x04;
  3365  0058E2  0E04               	movlw	4
  3366  0058E4  6F00               	movwf	0,b	;volatile
  3367                           
  3368                           ; BSR set to: 4
  3369                           ;mcc_generated_files/usb/usb_device.c: 365:     BDT[0].STAT.Val |= 0x80;
  3370  0058E6  8F00               	bsf	0,7,b	;volatile
  3371                           
  3372                           ; BSR set to: 4
  3373                           ;mcc_generated_files/usb/usb_device.c: 368:     USBActiveConfiguration = 0;
  3374  0058E8  0E00               	movlw	0
  3375  0058EA  0100               	movlb	0	; () banked
  3376  0058EC  6FD2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;mcc_generated_files/usb/usb_device.c: 370:     USB1msTickCount = 0;
  3380  0058EE  0E00               	movlw	0
  3381  0058F0  0102               	movlb	2	; () banked
  3382  0058F2  6FC4               	movwf	_USB1msTickCount& (0+255),b	;volatile
  3383  0058F4  0E00               	movlw	0
  3384  0058F6  6FC5               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  3385  0058F8  0E00               	movlw	0
  3386  0058FA  6FC6               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  3387  0058FC  0E00               	movlw	0
  3388  0058FE  6FC7               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  3389                           
  3390                           ; BSR set to: 2
  3391                           ;mcc_generated_files/usb/usb_device.c: 371:     USBTicksSinceSuspendEnd = 0;
  3392  005900  0E00               	movlw	0
  3393  005902  0101               	movlb	1	; () banked
  3394  005904  6FDB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  3395                           
  3396                           ; BSR set to: 1
  3397                           ;mcc_generated_files/usb/usb_device.c: 374:     USBDeviceState = DETACHED_STATE;
  3398  005906  0E00               	movlw	0
  3399  005908  6E5D               	movwf	_USBDeviceState^0,c	;volatile
  3400                           
  3401                           ; BSR set to: 1
  3402  00590A  0012               	return		;funcret
  3403  00590C                     __end_of_USBDeviceInit:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _USBDeviceAttach *****************
  3407 ;; Defined at:
  3408 ;;		line 1356 in file "mcc_generated_files/usb/usb_device.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2
  3417 ;; Tracked objects:
  3418 ;;		On entry : 3F/0
  3419 ;;		On exit  : 3F/0
  3420 ;;		Unchanged: 3F/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 10
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_SYSTEM_Initialize
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text10
  3437  00028A                     __ptext10:
  3438                           	callstack 0
  3439  00028A                     _USBDeviceAttach:
  3440                           	callstack 18
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;mcc_generated_files/usb/usb_device.c: 1360:     {;mcc_generated_files/usb/usb_device.c:
      +                           1361:         if(1 == 1)
  3444                           
  3445                           ; BSR set to: 1
  3446                           ;incstack = 0
  3447  00028A  505D               	movf	_USBDeviceState^0,w,c
  3448  00028C  A4D8               	btfss	status,2,c
  3449  00028E  0012               	return	
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;mcc_generated_files/usb/usb_device.c: 1362:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1364:             UCON = 0;
  3453  000290  0E00               	movlw	0
  3454  000292  6E60               	movwf	96,c	;volatile
  3455                           
  3456                           ;mcc_generated_files/usb/usb_device.c: 1367:             UIE = 0;
  3457  000294  0E00               	movlw	0
  3458  000296  6E64               	movwf	100,c	;volatile
  3459                           
  3460                           ;mcc_generated_files/usb/usb_device.c: 1371:             { UCFG = 0x10 | 0x00 | 0x04 | 0
      +                          x02; UEIE = 0x9F; UIE = 0x39 | 0x40 | 0x02; };
  3461  000298  0E16               	movlw	22
  3462  00029A  6E62               	movwf	98,c	;volatile
  3463  00029C  0E9F               	movlw	159
  3464  00029E  6E66               	movwf	102,c	;volatile
  3465  0002A0  0E7B               	movlw	123
  3466  0002A2  6E64               	movwf	100,c	;volatile
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;mcc_generated_files/usb/usb_device.c: 1373:             {IPR3bits.USBIP = 1;PIE3bits.US
      +                          BIE = 1;};
  3470  0002A4  84A5               	bsf	165,2,c	;volatile
  3471                           
  3472                           ; BSR set to: 0
  3473  0002A6  84A3               	bsf	163,2,c	;volatile
  3474                           
  3475                           ;mcc_generated_files/usb/usb_device.c: 1376:             while(!UCONbits.USBEN){UCONbits
      +                          .USBEN = 1;}
  3476  0002A8  D001               	goto	l196
  3477  0002AA                     l197:
  3478                           
  3479                           ; BSR set to: 0
  3480  0002AA  8660               	bsf	96,3,c	;volatile
  3481  0002AC                     l196:
  3482                           
  3483                           ; BSR set to: 0
  3484  0002AC  A660               	btfss	96,3,c	;volatile
  3485  0002AE  D7FD               	goto	l197
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;mcc_generated_files/usb/usb_device.c: 1379:             USBDeviceState = ATTACHED_STATE
      +                          ;
  3489  0002B0  0E01               	movlw	1
  3490  0002B2  6E5D               	movwf	_USBDeviceState^0,c	;volatile
  3491                           
  3492                           ; BSR set to: 0
  3493  0002B4  0012               	return		;funcret
  3494  0002B6                     __end_of_USBDeviceAttach:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _TMR3_Initialize *****************
  3498 ;; Defined at:
  3499 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 3F/1
  3510 ;;		On exit  : 3F/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 11
  3520 ;; This function calls:
  3521 ;;		_TMR3_SetInterruptHandler
  3522 ;; This function is called by:
  3523 ;;		_SYSTEM_Initialize
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text11
  3528  0002B6                     __ptext11:
  3529                           	callstack 0
  3530  0002B6                     _TMR3_Initialize:
  3531                           	callstack 17
  3532                           
  3533                           ; BSR set to: 1
  3534                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;incstack = 0
  3538  0002B6  0E00               	movlw	0
  3539  0002B8  6EB4               	movwf	180,c	;volatile
  3540                           
  3541                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x44;
  3542  0002BA  0E44               	movlw	68
  3543  0002BC  6EB3               	movwf	179,c	;volatile
  3544                           
  3545                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0x80;
  3546  0002BE  0E80               	movlw	128
  3547  0002C0  6EB2               	movwf	178,c	;volatile
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;mcc_generated_files/tmr3.c: 78:     timer3ReloadVal=TMR3;
  3551  0002C2  CFB2 F2DE          	movff	4018,_timer3ReloadVal	;volatile
  3552  0002C6  CFB3 F2DF          	movff	4019,_timer3ReloadVal+1	;volatile
  3553                           
  3554                           ; BSR set to: 1
  3555                           ;mcc_generated_files/tmr3.c: 81:     PIR2bits.TMR3IF = 0;
  3556  0002CA  92A1               	bcf	161,1,c	;volatile
  3557                           
  3558                           ; BSR set to: 1
  3559                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
  3560  0002CC  82A0               	bsf	160,1,c	;volatile
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  3564  0002CE  0E1A               	movlw	low _TMR3_DefaultInterruptHandler
  3565  0002D0  0100               	movlb	0	; () banked
  3566  0002D2  6F8C               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3567  0002D4  0E06               	movlw	high _TMR3_DefaultInterruptHandler
  3568  0002D6  6F8D               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3569  0002D8  ECC6  F002         	call	_TMR3_SetInterruptHandler	;wreg free
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x01;
  3573  0002DC  0E01               	movlw	1
  3574  0002DE  6EB1               	movwf	177,c	;volatile
  3575                           
  3576                           ; BSR set to: 0
  3577  0002E0  0012               	return		;funcret
  3578  0002E2                     __end_of_TMR3_Initialize:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _TMR3_SetInterruptHandler *****************
  3582 ;; Defined at:
  3583 ;;		line 172 in file "mcc_generated_files/tmr3.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
  3586 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 3F/0
  3595 ;;		On exit  : 3F/0
  3596 ;;		Unchanged: 3F/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3598 ;;      Params:         0       2       0       0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3601 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 10
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_TMR3_Initialize
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text12
  3613  00058C                     __ptext12:
  3614                           	callstack 0
  3615  00058C                     _TMR3_SetInterruptHandler:
  3616                           	callstack 17
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;mcc_generated_files/tmr3.c: 173:     TMR3_InterruptHandler = InterruptHandler;
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;incstack = 0
  3623  00058C  C08C  F2DC         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3624  000590  C08D  F2DD         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3625                           
  3626                           ; BSR set to: 0
  3627  000594  0012               	return		;funcret
  3628  000596                     __end_of_TMR3_SetInterruptHandler:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function _TMR2_Initialize *****************
  3632 ;; Defined at:
  3633 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 3F/0
  3644 ;;		On exit  : 3F/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 11
  3654 ;; This function calls:
  3655 ;;		_TMR2_SetInterruptHandler
  3656 ;; This function is called by:
  3657 ;;		_SYSTEM_Initialize
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text13
  3662  007FE0                     __ptext13:
  3663                           	callstack 0
  3664  007FE0                     _TMR2_Initialize:
  3665                           	callstack 17
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xBB;
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;incstack = 0
  3672  007FE0  0EBB               	movlw	187
  3673  007FE2  6EBB               	movwf	187,c	;volatile
  3674                           
  3675                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3676  007FE4  0E00               	movlw	0
  3677  007FE6  6EBC               	movwf	188,c	;volatile
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3681  007FE8  929E               	bcf	158,1,c	;volatile
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3685  007FEA  829D               	bsf	157,1,c	;volatile
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3689  007FEC  0E1C               	movlw	low _TMR2_DefaultInterruptHandler
  3690  007FEE  6F8C               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  3691  007FF0  0E06               	movlw	high _TMR2_DefaultInterruptHandler
  3692  007FF2  6F8D               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3693  007FF4  ECDF  F002         	call	_TMR2_SetInterruptHandler	;wreg free
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
  3697  007FF8  0E7E               	movlw	126
  3698  007FFA  6EBA               	movwf	186,c	;volatile
  3699                           
  3700                           ; BSR set to: 0
  3701  007FFC  0012               	return		;funcret
  3702  007FFE                     __end_of_TMR2_Initialize:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _TMR1_Initialize *****************
  3706 ;; Defined at:
  3707 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2
  3716 ;; Tracked objects:
  3717 ;;		On entry : 3F/0
  3718 ;;		On exit  : 3F/0
  3719 ;;		Unchanged: 3F/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3721 ;;      Params:         0       0       0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 10
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_SYSTEM_Initialize
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text14
  3736  0004B4                     __ptext14:
  3737                           	callstack 0
  3738  0004B4                     _TMR1_Initialize:
  3739                           	callstack 18
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;incstack = 0
  3746  0004B4  0E00               	movlw	0
  3747  0004B6  6ECC               	movwf	204,c	;volatile
  3748                           
  3749                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  3750  0004B8  0E00               	movlw	0
  3751  0004BA  6ECF               	movwf	207,c	;volatile
  3752                           
  3753                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  3754  0004BC  0E00               	movlw	0
  3755  0004BE  6ECE               	movwf	206,c	;volatile
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  3759  0004C0  CFCE F2D8          	movff	4046,_timer1ReloadVal	;volatile
  3760  0004C4  CFCF F2D9          	movff	4047,_timer1ReloadVal+1	;volatile
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  3764  0004C8  909E               	bcf	158,0,c	;volatile
  3765                           
  3766                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  3767  0004CA  0E01               	movlw	1
  3768  0004CC  6ECD               	movwf	205,c	;volatile
  3769                           
  3770                           ; BSR set to: 0
  3771  0004CE  0012               	return		;funcret
  3772  0004D0                     __end_of_TMR1_Initialize:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _TMR0_Initialize *****************
  3776 ;; Defined at:
  3777 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 3F/0
  3788 ;;		On exit  : 3F/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3793 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3794 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3795 ;;Total ram usage:        2 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 11
  3798 ;; This function calls:
  3799 ;;		_TMR0_SetInterruptHandler
  3800 ;; This function is called by:
  3801 ;;		_SYSTEM_Initialize
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text15
  3806  007DF0                     __ptext15:
  3807                           	callstack 0
  3808  007DF0                     _TMR0_Initialize:
  3809                           	callstack 17
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;incstack = 0
  3816  007DF0  9CD5               	bcf	213,6,c	;volatile
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3820  007DF2  0E00               	movlw	0
  3821  007DF4  6ED7               	movwf	215,c	;volatile
  3822                           
  3823                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3824  007DF6  0E00               	movlw	0
  3825  007DF8  6ED6               	movwf	214,c	;volatile
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3829  007DFA  50D6               	movf	214,w,c	;volatile
  3830  007DFC  CFD7 F08E          	movff	4055,??_TMR0_Initialize	;volatile
  3831  007E00  6B8F               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  3832  007E02  C08E  F08F         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3833  007E06  6B8E               	clrf	??_TMR0_Initialize& (0+255),b
  3834  007E08  118E               	iorwf	??_TMR0_Initialize& (0+255),w,b
  3835  007E0A  0101               	movlb	1	; () banked
  3836  007E0C  6FC9               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  3837  007E0E  0100               	movlb	0	; () banked
  3838  007E10  518F               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  3839  007E12  0101               	movlb	1	; () banked
  3840  007E14  6FCA               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3844  007E16  94F2               	bcf	242,2,c	;volatile
  3845                           
  3846                           ; BSR set to: 1
  3847                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3848  007E18  8AF2               	bsf	242,5,c	;volatile
  3849                           
  3850                           ; BSR set to: 1
  3851                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3852  007E1A  0E1E               	movlw	low _TMR0_DefaultInterruptHandler
  3853  007E1C  0100               	movlb	0	; () banked
  3854  007E1E  6F8C               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  3855  007E20  0E06               	movlw	high _TMR0_DefaultInterruptHandler
  3856  007E22  6F8D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3857  007E24  ECCB  F002         	call	_TMR0_SetInterruptHandler	;wreg free
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x94;
  3861  007E28  0E94               	movlw	148
  3862  007E2A  6ED5               	movwf	213,c	;volatile
  3863                           
  3864                           ; BSR set to: 0
  3865  007E2C  0012               	return		;funcret
  3866  007E2E                     __end_of_TMR0_Initialize:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _TMR0_SetInterruptHandler *****************
  3870 ;; Defined at:
  3871 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
  3874 ;;		 -> Timing_TMR0_ISR(1), TMR0_DefaultInterruptHandler(1), 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 3F/0
  3883 ;;		On exit  : 3F/0
  3884 ;;		Unchanged: 3F/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3886 ;;      Params:         0       2       0       0       0       0       0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3889 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; Hardware stack levels required when called: 10
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_TMR0_Initialize
  3897 ;;		_inicializar_Sistema
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text16
  3902  000596                     __ptext16:
  3903                           	callstack 0
  3904  000596                     _TMR0_SetInterruptHandler:
  3905                           	callstack 19
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;incstack = 0
  3912  000596  C08C  F2D6         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3913  00059A  C08D  F2D7         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3914                           
  3915                           ; BSR set to: 0
  3916  00059E  0012               	return		;funcret
  3917  0005A0                     __end_of_TMR0_SetInterruptHandler:
  3918                           	callstack 0
  3919                           
  3920 ;; *************** function _PIN_MANAGER_Initialize *****************
  3921 ;; Defined at:
  3922 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 3F/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3936 ;;      Params:         0       0       0       0       0       0       0       0       0
  3937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3940 ;;Total ram usage:        0 bytes
  3941 ;; Hardware stack levels used: 1
  3942 ;; Hardware stack levels required when called: 11
  3943 ;; This function calls:
  3944 ;;		_IOCC2_SetInterruptHandler
  3945 ;; This function is called by:
  3946 ;;		_SYSTEM_Initialize
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text17
  3951  007D30                     __ptext17:
  3952                           	callstack 0
  3953  007D30                     _PIN_MANAGER_Initialize:
  3954                           	callstack 17
  3955                           
  3956                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;incstack = 0
  3960  007D30  0E00               	movlw	0
  3961  007D32  6E89               	movwf	137,c	;volatile
  3962                           
  3963                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x3E;
  3964  007D34  0E3E               	movlw	62
  3965  007D36  6E8A               	movwf	138,c	;volatile
  3966                           
  3967                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3968  007D38  0E00               	movlw	0
  3969  007D3A  6E8B               	movwf	139,c	;volatile
  3970                           
  3971                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x7F;
  3972  007D3C  0E7F               	movlw	127
  3973  007D3E  6E92               	movwf	146,c	;volatile
  3974                           
  3975                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x00;
  3976  007D40  0E00               	movlw	0
  3977  007D42  6E93               	movwf	147,c	;volatile
  3978                           
  3979                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x87;
  3980  007D44  0E87               	movlw	135
  3981  007D46  6E94               	movwf	148,c	;volatile
  3982                           
  3983                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x80;
  3984  007D48  0E80               	movlw	128
  3985  007D4A  010F               	movlb	15	; () banked
  3986  007D4C  6F5D               	movwf	93,b	;volatile
  3987                           
  3988                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
  3989  007D4E  0E00               	movlw	0
  3990  007D50  6F5C               	movwf	92,b	;volatile
  3991                           
  3992                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x2F;
  3993  007D52  0E2F               	movlw	47
  3994  007D54  6F5B               	movwf	91,b	;volatile
  3995                           
  3996                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3997  007D56  0E00               	movlw	0
  3998  007D58  6E85               	movwf	133,c	;volatile
  3999                           
  4000                           ; BSR set to: 15
  4001                           ;mcc_generated_files/pin_manager.c: 84:     INTCON2bits.nRBPU = 1;
  4002  007D5A  8EF1               	bsf	241,7,c	;volatile
  4003                           
  4004                           ; BSR set to: 15
  4005                           ;mcc_generated_files/pin_manager.c: 92:     IOCCbits.IOCC2 = 1;
  4006  007D5C  8487               	bsf	135,2,c	;volatile
  4007                           
  4008                           ; BSR set to: 15
  4009                           ;mcc_generated_files/pin_manager.c: 97:     IOCC2_SetInterruptHandler(IOCC2_DefaultInter
      +                          ruptHandler);
  4010  007D5E  0E20               	movlw	low _IOCC2_DefaultInterruptHandler
  4011  007D60  0100               	movlb	0	; () banked
  4012  007D62  6F8C               	movwf	IOCC2_SetInterruptHandler@InterruptHandler& (0+255),b
  4013  007D64  0E06               	movlw	high _IOCC2_DefaultInterruptHandler
  4014  007D66  6F8D               	movwf	(IOCC2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4015  007D68  ECD0  F002         	call	_IOCC2_SetInterruptHandler	;wreg free
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;mcc_generated_files/pin_manager.c: 100:     INTCONbits.IOCIE = 1;
  4019  007D6C  86F2               	bsf	242,3,c	;volatile
  4020                           
  4021                           ; BSR set to: 0
  4022  007D6E  0012               	return		;funcret
  4023  007D70                     __end_of_PIN_MANAGER_Initialize:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _IOCC2_SetInterruptHandler *****************
  4027 ;; Defined at:
  4028 ;;		line 132 in file "mcc_generated_files/pin_manager.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
  4031 ;;		 -> Encoder_ISR(1), IOCC2_DefaultInterruptHandler(1), 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 3F/0
  4040 ;;		On exit  : 3F/0
  4041 ;;		Unchanged: 3F/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4043 ;;      Params:         0       2       0       0       0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4046 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4047 ;;Total ram usage:        2 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 10
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_PIN_MANAGER_Initialize
  4054 ;;		_inicializar_Sistema
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text18
  4059  0005A0                     __ptext18:
  4060                           	callstack 0
  4061  0005A0                     _IOCC2_SetInterruptHandler:
  4062                           	callstack 17
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;mcc_generated_files/pin_manager.c: 133:     IOCC2_InterruptHandler = InterruptHandler;
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;incstack = 0
  4069  0005A0  C08C  F2FE         	movff	IOCC2_SetInterruptHandler@InterruptHandler,_IOCC2_InterruptHandler
  4070  0005A4  C08D  F2FF         	movff	IOCC2_SetInterruptHandler@InterruptHandler+1,_IOCC2_InterruptHandler+1
  4071                           
  4072                           ; BSR set to: 0
  4073  0005A8  0012               	return		;funcret
  4074  0005AA                     __end_of_IOCC2_SetInterruptHandler:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _OSCILLATOR_Initialize *****************
  4078 ;; Defined at:
  4079 ;;		line 66 in file "mcc_generated_files/mcc.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2
  4088 ;; Tracked objects:
  4089 ;;		On entry : 3F/0
  4090 ;;		On exit  : 3F/0
  4091 ;;		Unchanged: 3F/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 10
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_SYSTEM_Initialize
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text19
  4108  00051E                     __ptext19:
  4109                           	callstack 0
  4110  00051E                     _OSCILLATOR_Initialize:
  4111                           	callstack 18
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x70;
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;incstack = 0
  4118  00051E  0E70               	movlw	112
  4119  000520  6ED3               	movwf	211,c	;volatile
  4120                           
  4121                           ;mcc_generated_files/mcc.c: 71:     OSCCON2 = 0x00;
  4122  000522  0E00               	movlw	0
  4123  000524  6ED2               	movwf	210,c	;volatile
  4124                           
  4125                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x80;
  4126  000526  0E80               	movlw	128
  4127  000528  6E9B               	movwf	155,c	;volatile
  4128                           
  4129                           ;mcc_generated_files/mcc.c: 75:     ACTCON = 0x00;
  4130  00052A  0E00               	movlw	0
  4131  00052C  6EB5               	movwf	181,c	;volatile
  4132  00052E                     l629:
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;mcc_generated_files/mcc.c: 77:     while(PLLRDY == 0)
  4136  00052E  BED2               	btfsc	4050,7,c	;volatile
  4137  000530  0012               	return	
  4138  000532  D7FD               	goto	l629
  4139  000534                     __end_of_OSCILLATOR_Initialize:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function _INTERRUPT_Initialize *****************
  4143 ;; Defined at:
  4144 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		None
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 10
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_SYSTEM_Initialize
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text20
  4173  000602                     __ptext20:
  4174                           	callstack 0
  4175  000602                     _INTERRUPT_Initialize:
  4176                           	callstack 18
  4177                           
  4178                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;incstack = 0
  4182  000602  9ED0               	bcf	208,7,c	;volatile
  4183  000604  0012               	return		;funcret
  4184  000606                     __end_of_INTERRUPT_Initialize:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _CCP2_Initialize *****************
  4188 ;; Defined at:
  4189 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2
  4198 ;; Tracked objects:
  4199 ;;		On entry : 3F/0
  4200 ;;		On exit  : 3F/0
  4201 ;;		Unchanged: 3F/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 10
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_SYSTEM_Initialize
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text21
  4218  00054A                     __ptext21:
  4219                           	callstack 0
  4220  00054A                     _CCP2_Initialize:
  4221                           	callstack 18
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  4225                           
  4226                           ;incstack = 0
  4227  00054A  0E00               	movlw	0
  4228  00054C  6E97               	movwf	151,c	;volatile
  4229                           
  4230                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  4231  00054E  0E00               	movlw	0
  4232  000550  6E90               	movwf	144,c	;volatile
  4233                           
  4234                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  4235  000552  0E00               	movlw	0
  4236  000554  6E91               	movwf	145,c	;volatile
  4237                           
  4238                           ; BSR set to: 0
  4239  000556  0012               	return		;funcret
  4240  000558                     __end_of_CCP2_Initialize:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _ADC_Initialize *****************
  4244 ;; Defined at:
  4245 ;;		line 62 in file "mcc_generated_files/adc.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2
  4254 ;; Tracked objects:
  4255 ;;		On entry : 3F/1
  4256 ;;		On exit  : 3F/1
  4257 ;;		Unchanged: 3F/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 10
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_SYSTEM_Initialize
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text22
  4274  000534                     __ptext22:
  4275                           	callstack 0
  4276  000534                     _ADC_Initialize:
  4277                           	callstack 18
  4278                           
  4279                           ; BSR set to: 1
  4280                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;incstack = 0
  4284  000534  0E00               	movlw	0
  4285  000536  6EC1               	movwf	193,c	;volatile
  4286                           
  4287                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x06;
  4288  000538  0E06               	movlw	6
  4289  00053A  6EC0               	movwf	192,c	;volatile
  4290                           
  4291                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  4292  00053C  0E00               	movlw	0
  4293  00053E  6EC3               	movwf	195,c	;volatile
  4294                           
  4295                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  4296  000540  0E00               	movlw	0
  4297  000542  6EC4               	movwf	196,c	;volatile
  4298                           
  4299                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  4300  000544  0E01               	movlw	1
  4301  000546  6EC2               	movwf	194,c	;volatile
  4302                           
  4303                           ; BSR set to: 1
  4304  000548  0012               	return		;funcret
  4305  00054A                     __end_of_ADC_Initialize:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _ADC_SelectChannel *****************
  4309 ;; Defined at:
  4310 ;;		line 83 in file "mcc_generated_files/adc.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  channel         1    wreg     enum E4607
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  channel         1   45[BANK0 ] enum E4607
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 3F/1
  4321 ;;		On exit  : 3F/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0
  4325 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4326 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4327 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4328 ;;Total ram usage:        2 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 10
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_inicializar_Sistema
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text23
  4339  0004D0                     __ptext23:
  4340                           	callstack 0
  4341  0004D0                     _ADC_SelectChannel:
  4342                           	callstack 19
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;incstack = 0
  4346                           ;ADC_SelectChannel@channel stored from wreg
  4347  0004D0  0100               	movlb	0	; () banked
  4348  0004D2  6F8D               	movwf	ADC_SelectChannel@channel& (0+255),b
  4349                           
  4350                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  4351  0004D4  C08D  F08C         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  4352  0004D8  0100               	movlb	0	; () banked
  4353  0004DA  478C               	rlncf	??_ADC_SelectChannel& (0+255),f,b
  4354  0004DC  478C               	rlncf	??_ADC_SelectChannel& (0+255),f,b
  4355  0004DE  50C2               	movf	194,w,c	;volatile
  4356  0004E0  198C               	xorwf	??_ADC_SelectChannel& (0+255),w,b
  4357  0004E2  0B83               	andlw	-125
  4358  0004E4  198C               	xorwf	??_ADC_SelectChannel& (0+255),w,b
  4359  0004E6  6EC2               	movwf	194,c	;volatile
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  4363  0004E8  80C2               	bsf	194,0,c	;volatile
  4364                           
  4365                           ; BSR set to: 0
  4366  0004EA  0012               	return		;funcret
  4367  0004EC                     __end_of_ADC_SelectChannel:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _executeCommand *****************
  4371 ;; Defined at:
  4372 ;;		line 57 in file "CommandHandler.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  i               2  170[BANK2 ] int 
  4377 ;;  comando       100   70[BANK2 ] struct Comando_T[20]
  4378 ;;  TokensCom      40    0[BANK2 ] PTR unsigned char [20]
  4379 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  4380 ;;  strCommand     30   40[BANK2 ] unsigned char [30]
  4381 ;;  numTokens       2  172[BANK2 ] int 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 3E/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4391 ;;      Params:         0       0       0       0       0       0       0       0       0
  4392 ;;      Locals:         0       0       0     174       0       0       0       0       0
  4393 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4394 ;;      Totals:         0       0       1     174       0       0       0       0       0
  4395 ;;Total ram usage:      175 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; Hardware stack levels required when called: 18
  4398 ;; This function calls:
  4399 ;;		_FilaPop
  4400 ;;		_G_01
  4401 ;;		_G_53
  4402 ;;		_G_97
  4403 ;;		_M_3
  4404 ;;		_M_4
  4405 ;;		_M_5
  4406 ;;		___fltol
  4407 ;;		_getComands
  4408 ;;		_getTokens
  4409 ;;		_memset
  4410 ;;		_sprintf
  4411 ;; This function is called by:
  4412 ;;		_main
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text24
  4417  0048FE                     __ptext24:
  4418                           	callstack 0
  4419  0048FE                     _executeCommand:
  4420                           	callstack 12
  4421                           
  4422                           ;CommandHandler.c: 60:    Comando_T comando[20];;CommandHandler.c: 61:    char* TokensCo
      +                          m[20];;CommandHandler.c: 62:    if(busy==0){
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;incstack = 0
  4426  0048FE  0101               	movlb	1	; () banked
  4427  004900  51D4               	movf	_busy& (0+255),w,b
  4428  004902  A4D8               	btfss	status,2,c
  4429  004904  0012               	return	
  4430                           
  4431                           ; BSR set to: 1
  4432                           ;CommandHandler.c: 63:          if(largo>0){
  4433  004906  0100               	movlb	0	; () banked
  4434  004908  51C8               	movf	_largo& (0+255),w,b
  4435  00490A  B4D8               	btfsc	status,2,c
  4436  00490C  0012               	return	
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;CommandHandler.c: 65:             memset(comando,0,sizeof(comando));
  4440  00490E  0E46               	movlw	low executeCommand@comando
  4441  004910  6F8C               	movwf	memset@dest& (0+255),b
  4442  004912  0E02               	movlw	high executeCommand@comando
  4443  004914  6F8D               	movwf	(memset@dest+1)& (0+255),b
  4444  004916  0E00               	movlw	0
  4445  004918  6F8F               	movwf	(memset@c+1)& (0+255),b
  4446  00491A  0E00               	movlw	0
  4447  00491C  6F8E               	movwf	memset@c& (0+255),b
  4448  00491E  0E00               	movlw	0
  4449  004920  6F91               	movwf	(memset@n+1)& (0+255),b
  4450  004922  0E64               	movlw	100
  4451  004924  6F90               	movwf	memset@n& (0+255),b
  4452  004926  EC25  F02A         	call	_memset	;wreg free
  4453                           
  4454                           ;CommandHandler.c: 66:             memset(strCommand,0,sizeof(strCommand));
  4455  00492A  0E28               	movlw	low executeCommand@strCommand
  4456  00492C  6F8C               	movwf	memset@dest& (0+255),b
  4457  00492E  0E02               	movlw	high executeCommand@strCommand
  4458  004930  6F8D               	movwf	(memset@dest+1)& (0+255),b
  4459  004932  0E00               	movlw	0
  4460  004934  6F8F               	movwf	(memset@c+1)& (0+255),b
  4461  004936  0E00               	movlw	0
  4462  004938  6F8E               	movwf	memset@c& (0+255),b
  4463  00493A  0E00               	movlw	0
  4464  00493C  6F91               	movwf	(memset@n+1)& (0+255),b
  4465  00493E  0E1E               	movlw	30
  4466  004940  6F90               	movwf	memset@n& (0+255),b
  4467  004942  EC25  F02A         	call	_memset	;wreg free
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;CommandHandler.c: 67:             for(int i=0;i<20;i++){
  4471  004946  0E00               	movlw	0
  4472  004948  0102               	movlb	2	; () banked
  4473  00494A  6FAB               	movwf	(executeCommand@i+1)& (0+255),b
  4474  00494C  0E00               	movlw	0
  4475  00494E  6FAA               	movwf	executeCommand@i& (0+255),b
  4476  004950                     l15577:
  4477                           
  4478                           ; BSR set to: 2
  4479                           ;CommandHandler.c: 68:                TokensCom[i]=((void*)0);
  4480  004950  90D8               	bcf	status,0,c
  4481  004952  35AA               	rlcf	executeCommand@i& (0+255),w,b
  4482  004954  6ED9               	movwf	fsr2l,c
  4483  004956  35AB               	rlcf	(executeCommand@i+1)& (0+255),w,b
  4484  004958  6EDA               	movwf	fsr2h,c
  4485  00495A  0E00               	movlw	low executeCommand@TokensCom
  4486  00495C  26D9               	addwf	fsr2l,f,c
  4487  00495E  0E02               	movlw	high executeCommand@TokensCom
  4488  004960  22DA               	addwfc	fsr2h,f,c
  4489  004962  0E00               	movlw	0
  4490  004964  6EDE               	movwf	postinc2,c
  4491  004966  0E00               	movlw	0
  4492  004968  6EDD               	movwf	postdec2,c
  4493                           
  4494                           ; BSR set to: 2
  4495                           ;CommandHandler.c: 69:             }
  4496  00496A  4BAA               	infsnz	executeCommand@i& (0+255),f,b
  4497  00496C  2BAB               	incf	(executeCommand@i+1)& (0+255),f,b
  4498                           
  4499                           ; BSR set to: 2
  4500  00496E  BFAB               	btfsc	(executeCommand@i+1)& (0+255),7,b
  4501  004970  D7EF               	goto	l15577
  4502  004972  51AB               	movf	(executeCommand@i+1)& (0+255),w,b
  4503  004974  E104               	bnz	u19030
  4504  004976  0E14               	movlw	20
  4505  004978  5DAA               	subwf	executeCommand@i& (0+255),w,b
  4506  00497A  A0D8               	btfss	status,0,c
  4507  00497C  D7E9               	goto	l15577
  4508  00497E                     u19030:
  4509                           
  4510                           ; BSR set to: 2
  4511                           ;CommandHandler.c: 72:             FilaPop(strCommand);
  4512  00497E  0E28               	movlw	low executeCommand@strCommand
  4513  004980  0100               	movlb	0	; () banked
  4514  004982  6F97               	movwf	FilaPop@str& (0+255),b
  4515  004984  0E02               	movlw	high executeCommand@strCommand
  4516  004986  6F98               	movwf	(FilaPop@str+1)& (0+255),b
  4517  004988  ECC7  F03D         	call	_FilaPop	;wreg free
  4518                           
  4519                           ;CommandHandler.c: 74:             numTokens=getTokens(TokensCom,strCommand);
  4520  00498C  0E00               	movlw	low executeCommand@TokensCom
  4521  00498E  6F9C               	movwf	getTokens@token& (0+255),b
  4522  004990  0E02               	movlw	high executeCommand@TokensCom
  4523  004992  6F9D               	movwf	(getTokens@token+1)& (0+255),b
  4524  004994  0E28               	movlw	low executeCommand@strCommand
  4525  004996  6F9E               	movwf	getTokens@str& (0+255),b
  4526  004998  0E02               	movlw	high executeCommand@strCommand
  4527  00499A  6F9F               	movwf	(getTokens@str+1)& (0+255),b
  4528  00499C  EC28  F03A         	call	_getTokens	;wreg free
  4529  0049A0  0101               	movlb	1	; () banked
  4530  0049A2  6FBA               	movwf	??_executeCommand& (0+255),b
  4531  0049A4  51BA               	movf	??_executeCommand& (0+255),w,b
  4532  0049A6  0102               	movlb	2	; () banked
  4533  0049A8  6FAC               	movwf	executeCommand@numTokens& (0+255),b
  4534  0049AA  6BAD               	clrf	(executeCommand@numTokens+1)& (0+255),b
  4535                           
  4536                           ; BSR set to: 2
  4537                           ;CommandHandler.c: 76:             getComands(comando,TokensCom,numTokens);
  4538  0049AC  0E46               	movlw	low executeCommand@comando
  4539  0049AE  0101               	movlb	1	; () banked
  4540  0049B0  6F47               	movwf	getComands@comandos& (0+255),b
  4541  0049B2  0E02               	movlw	high executeCommand@comando
  4542  0049B4  6F48               	movwf	(getComands@comandos+1)& (0+255),b
  4543  0049B6  0E00               	movlw	low executeCommand@TokensCom
  4544  0049B8  6F49               	movwf	getComands@tokens& (0+255),b
  4545  0049BA  0E02               	movlw	high executeCommand@TokensCom
  4546  0049BC  6F4A               	movwf	(getComands@tokens+1)& (0+255),b
  4547  0049BE  C2AC  F14B         	movff	executeCommand@numTokens,getComands@size
  4548  0049C2  ECA1  F031         	call	_getComands	;wreg free
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;CommandHandler.c: 77:             sprintf(writeBuffer,"%c \n",(int)comando[1].code);
  4552  0049C6  0E82               	movlw	low _writeBuffer
  4553  0049C8  6F9C               	movwf	sprintf@s& (0+255),b
  4554  0049CA  0E03               	movlw	high _writeBuffer
  4555  0049CC  6F9D               	movwf	(sprintf@s+1)& (0+255),b
  4556  0049CE  0ECE               	movlw	low STR_3
  4557  0049D0  6F9E               	movwf	sprintf@fmt& (0+255),b
  4558  0049D2  C24B  F19F         	movff	executeCommand@comando+5,?_sprintf+3
  4559  0049D6  6BA0               	clrf	(?_sprintf+4)& (0+255),b
  4560  0049D8  ECA1  F03D         	call	_sprintf	;wreg free
  4561                           
  4562                           ; BSR set to: 1
  4563                           ;CommandHandler.c: 78:             if(comando[0].code=='G'){
  4564  0049DC  0E47               	movlw	71
  4565  0049DE  0102               	movlb	2	; () banked
  4566  0049E0  1946               	xorwf	executeCommand@comando& (0+255),w,b
  4567  0049E2  B4D8               	btfsc	status,2,c
  4568  0049E4  D033               	goto	l15611
  4569  0049E6  D051               	goto	l15613
  4570  0049E8                     l15593:
  4571                           
  4572                           ; BSR set to: 1
  4573                           ;CommandHandler.c: 82:                      feed=400;
  4574  0049E8  0E00               	movlw	0
  4575  0049EA  0102               	movlb	2	; () banked
  4576  0049EC  6FEE               	movwf	_feed& (0+255),b
  4577  0049EE  0E00               	movlw	0
  4578  0049F0  6FEF               	movwf	(_feed+1)& (0+255),b
  4579  0049F2  0EC8               	movlw	200
  4580  0049F4  6FF0               	movwf	(_feed+2)& (0+255),b
  4581  0049F6  0E43               	movlw	67
  4582  0049F8  6FF1               	movwf	(_feed+3)& (0+255),b
  4583                           
  4584                           ;CommandHandler.c: 83:                      feed_state=g01;
  4585  0049FA  0E01               	movlw	1
  4586  0049FC  0101               	movlb	1	; () banked
  4587  0049FE                     L1:
  4588  0049FE  6FD8               	movwf	_feed_state& (0+255),b
  4589                           
  4590                           ; BSR set to: 1
  4591                           ;CommandHandler.c: 84:                      G_01(&comando[1],numTokens);
  4592  004A00  0E4B               	movlw	low (executeCommand@comando+5)
  4593  004A02  6F3C               	movwf	G_01@axis& (0+255),b
  4594  004A04  0E02               	movlw	high (executeCommand@comando+5)
  4595  004A06  6F3D               	movwf	(G_01@axis+1)& (0+255),b
  4596  004A08  C2AC  F13E         	movff	executeCommand@numTokens,G_01@n
  4597  004A0C  C2AD  F13F         	movff	executeCommand@numTokens+1,G_01@n+1
  4598  004A10  EC66  F023         	call	_G_01	;wreg free
  4599                           
  4600                           ;CommandHandler.c: 85:                      break;
  4601  004A14  D03A               	goto	l15613
  4602  004A16                     l15597:
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;CommandHandler.c: 87:                      feed_state=g01;
  4606  004A16  0E01               	movlw	1
  4607  004A18  D7F2               	goto	L1
  4608  004A1A                     l15601:
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;CommandHandler.c: 91:                      G_53(&comando[1],numTokens);
  4612  004A1A  0E4B               	movlw	low (executeCommand@comando+5)
  4613  004A1C  0100               	movlb	0	; () banked
  4614  004A1E  6F92               	movwf	G_53@axis& (0+255),b
  4615  004A20  0E02               	movlw	high (executeCommand@comando+5)
  4616  004A22  6F93               	movwf	(G_53@axis+1)& (0+255),b
  4617  004A24  C2AC  F094         	movff	executeCommand@numTokens,G_53@n
  4618  004A28  C2AD  F095         	movff	executeCommand@numTokens+1,G_53@n+1
  4619  004A2C  EC06  F036         	call	_G_53	;wreg free
  4620                           
  4621                           ;CommandHandler.c: 92:                      break;
  4622  004A30  D02C               	goto	l15613
  4623  004A32                     l15603:
  4624                           
  4625                           ; BSR set to: 1
  4626                           ;CommandHandler.c: 94:                      feed_state=g95;
  4627  004A32  0E5F               	movlw	95
  4628  004A34  D7E4               	goto	L1
  4629  004A36                     l15607:
  4630                           
  4631                           ; BSR set to: 1
  4632                           ;CommandHandler.c: 98:                      G_97(&comando[1],numTokens);
  4633  004A36  0E4B               	movlw	low (executeCommand@comando+5)
  4634  004A38  6F26               	movwf	G_97@axis& (0+255),b
  4635  004A3A  0E02               	movlw	high (executeCommand@comando+5)
  4636  004A3C  6F27               	movwf	(G_97@axis+1)& (0+255),b
  4637  004A3E  C2AC  F128         	movff	executeCommand@numTokens,G_97@n
  4638  004A42  C2AD  F129         	movff	executeCommand@numTokens+1,G_97@n+1
  4639  004A46  ECEC  F028         	call	_G_97	;wreg free
  4640                           
  4641                           ;CommandHandler.c: 99:                   break;
  4642  004A4A  D01F               	goto	l15613
  4643  004A4C                     l15611:
  4644                           
  4645                           ; BSR set to: 2
  4646  004A4C  C247  F126         	movff	executeCommand@comando+1,___fltol@f1
  4647  004A50  C248  F127         	movff	executeCommand@comando+2,___fltol@f1+1
  4648  004A54  C249  F128         	movff	executeCommand@comando+3,___fltol@f1+2
  4649  004A58  C24A  F129         	movff	executeCommand@comando+4,___fltol@f1+3
  4650  004A5C  EC7B  F032         	call	___fltol	;wreg free
  4651                           
  4652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4653                           ; Switch size 1, requested type "simple"
  4654                           ; Number of cases is 1, Range of values is 0 to 0
  4655                           ; switch strategies available:
  4656                           ; Name         Instructions Cycles
  4657                           ; simple_byte            4     3 (average)
  4658                           ;	Chosen strategy is simple_byte
  4659  004A60  0101               	movlb	1	; () banked
  4660  004A62  5127               	movf	(?___fltol+1)& (0+255),w,b
  4661  004A64  0A00               	xorlw	0	; case 0
  4662  004A66  A4D8               	btfss	status,2,c
  4663  004A68  D010               	goto	l15613
  4664                           
  4665                           ; BSR set to: 1
  4666                           ; Switch size 1, requested type "simple"
  4667                           ; Number of cases is 5, Range of values is 0 to 97
  4668                           ; switch strategies available:
  4669                           ; Name         Instructions Cycles
  4670                           ; simple_byte           16     9 (average)
  4671                           ;	Chosen strategy is simple_byte
  4672  004A6A  5126               	movf	?___fltol& (0+255),w,b
  4673  004A6C  0A00               	xorlw	0	; case 0
  4674  004A6E  B4D8               	btfsc	status,2,c
  4675  004A70  D7BB               	goto	l15593
  4676  004A72  0A01               	xorlw	1	; case 1
  4677  004A74  B4D8               	btfsc	status,2,c
  4678  004A76  D7CF               	goto	l15597
  4679  004A78  0A34               	xorlw	52	; case 53
  4680  004A7A  B4D8               	btfsc	status,2,c
  4681  004A7C  D7CE               	goto	l15601
  4682  004A7E  0A6A               	xorlw	106	; case 95
  4683  004A80  B4D8               	btfsc	status,2,c
  4684  004A82  D7D7               	goto	l15603
  4685  004A84  0A3E               	xorlw	62	; case 97
  4686  004A86  B4D8               	btfsc	status,2,c
  4687  004A88  D7D6               	goto	l15607
  4688  004A8A                     l15613:
  4689                           
  4690                           ;CommandHandler.c: 104:             if(comando[0].code=='M'){
  4691  004A8A  0E4D               	movlw	77
  4692  004A8C  0102               	movlb	2	; () banked
  4693  004A8E  1946               	xorwf	executeCommand@comando& (0+255),w,b
  4694  004A90  A4D8               	btfss	status,2,c
  4695  004A92  0012               	return	
  4696  004A94  D024               	goto	l15625
  4697  004A96                     l15617:
  4698                           
  4699                           ; BSR set to: 1
  4700                           ;CommandHandler.c: 107:                      M_3(((void*)0),0);
  4701  004A96  0E00               	movlw	0
  4702  004A98  0100               	movlb	0	; () banked
  4703  004A9A  6F8E               	movwf	M_3@axis& (0+255),b
  4704  004A9C  0E00               	movlw	0
  4705  004A9E  6F8F               	movwf	(M_3@axis+1)& (0+255),b
  4706  004AA0  0E00               	movlw	0
  4707  004AA2  6F91               	movwf	(M_3@n+1)& (0+255),b
  4708  004AA4  0E00               	movlw	0
  4709  004AA6  6F90               	movwf	M_3@n& (0+255),b
  4710  004AA8  ECB3  F002         	call	_M_3	;wreg free
  4711                           
  4712                           ;CommandHandler.c: 108:                      break;
  4713  004AAC  0012               	return	
  4714  004AAE                     l15619:
  4715                           
  4716                           ; BSR set to: 1
  4717                           ;CommandHandler.c: 110:                      M_4(((void*)0),0);
  4718  004AAE  0E00               	movlw	0
  4719  004AB0  0100               	movlb	0	; () banked
  4720  004AB2  6F8E               	movwf	M_4@axis& (0+255),b
  4721  004AB4  0E00               	movlw	0
  4722  004AB6  6F8F               	movwf	(M_4@axis+1)& (0+255),b
  4723  004AB8  0E00               	movlw	0
  4724  004ABA  6F91               	movwf	(M_4@n+1)& (0+255),b
  4725  004ABC  0E00               	movlw	0
  4726  004ABE  6F90               	movwf	M_4@n& (0+255),b
  4727  004AC0  ECAC  F002         	call	_M_4	;wreg free
  4728                           
  4729                           ;CommandHandler.c: 111:                      break;
  4730  004AC4  0012               	return	
  4731  004AC6                     l15621:
  4732                           
  4733                           ; BSR set to: 1
  4734                           ;CommandHandler.c: 113:                      M_5(((void*)0),0);
  4735  004AC6  0E00               	movlw	0
  4736  004AC8  0100               	movlb	0	; () banked
  4737  004ACA  6F8C               	movwf	M_5@axis& (0+255),b
  4738  004ACC  0E00               	movlw	0
  4739  004ACE  6F8D               	movwf	(M_5@axis+1)& (0+255),b
  4740  004AD0  0E00               	movlw	0
  4741  004AD2  6F8F               	movwf	(M_5@n+1)& (0+255),b
  4742  004AD4  0E00               	movlw	0
  4743  004AD6  6F8E               	movwf	M_5@n& (0+255),b
  4744  004AD8  ECF6  F002         	call	_M_5	;wreg free
  4745                           
  4746                           ;CommandHandler.c: 114:                      break;
  4747  004ADC  0012               	return	
  4748  004ADE                     l15625:
  4749                           
  4750                           ; BSR set to: 2
  4751  004ADE  C247  F126         	movff	executeCommand@comando+1,___fltol@f1
  4752  004AE2  C248  F127         	movff	executeCommand@comando+2,___fltol@f1+1
  4753  004AE6  C249  F128         	movff	executeCommand@comando+3,___fltol@f1+2
  4754  004AEA  C24A  F129         	movff	executeCommand@comando+4,___fltol@f1+3
  4755  004AEE  EC7B  F032         	call	___fltol	;wreg free
  4756                           
  4757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4758                           ; Switch size 1, requested type "simple"
  4759                           ; Number of cases is 1, Range of values is 0 to 0
  4760                           ; switch strategies available:
  4761                           ; Name         Instructions Cycles
  4762                           ; simple_byte            4     3 (average)
  4763                           ;	Chosen strategy is simple_byte
  4764  004AF2  0101               	movlb	1	; () banked
  4765  004AF4  5127               	movf	(?___fltol+1)& (0+255),w,b
  4766  004AF6  0A00               	xorlw	0	; case 0
  4767  004AF8  A4D8               	btfss	status,2,c
  4768  004AFA  0012               	return	
  4769                           
  4770                           ; BSR set to: 1
  4771                           ; Switch size 1, requested type "simple"
  4772                           ; Number of cases is 3, Range of values is 3 to 5
  4773                           ; switch strategies available:
  4774                           ; Name         Instructions Cycles
  4775                           ; simple_byte           10     6 (average)
  4776                           ;	Chosen strategy is simple_byte
  4777  004AFC  5126               	movf	?___fltol& (0+255),w,b
  4778  004AFE  0A03               	xorlw	3	; case 3
  4779  004B00  B4D8               	btfsc	status,2,c
  4780  004B02  D7C9               	goto	l15617
  4781  004B04  0A07               	xorlw	7	; case 4
  4782  004B06  B4D8               	btfsc	status,2,c
  4783  004B08  D7D2               	goto	l15619
  4784  004B0A  0A01               	xorlw	1	; case 5
  4785  004B0C  A4D8               	btfss	status,2,c
  4786  004B0E  0012               	return	
  4787  004B10  D7DA               	goto	l15621
  4788  004B12                     __end_of_executeCommand:
  4789                           	callstack 0
  4790                           
  4791 ;; *************** function _getTokens *****************
  4792 ;; Defined at:
  4793 ;;		line 7 in file "StringHandler.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  token           2   60[BANK0 ] PTR PTR unsigned char 
  4796 ;;		 -> executeCommand@TokensCom(40), 
  4797 ;;  str             2   62[BANK0 ] PTR unsigned char 
  4798 ;;		 -> executeCommand@strCommand(30), 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  s               2   68[BANK0 ] unsigned char [2]
  4801 ;;  i               1   70[BANK0 ] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      unsigned char 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 3F/0
  4808 ;;		On exit  : 3F/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4811 ;;      Params:         0       4       0       0       0       0       0       0       0
  4812 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4813 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4814 ;;      Totals:         0      11       0       0       0       0       0       0       0
  4815 ;;Total ram usage:       11 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 13
  4818 ;; This function calls:
  4819 ;;		_strtok
  4820 ;; This function is called by:
  4821 ;;		_executeCommand
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text25
  4826  007450                     __ptext25:
  4827                           	callstack 0
  4828  007450                     _getTokens:
  4829                           	callstack 16
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;StringHandler.c: 8:    char s[2]=" ";
  4833                           
  4834                           ;incstack = 0
  4835  007450  C2FC  F0A4         	movff	getTokens@F4807,getTokens@s
  4836  007454  C2FD  F0A5         	movff	getTokens@F4807+1,getTokens@s+1
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;StringHandler.c: 9:    token[0] = strtok(str, s);
  4840  007458  C09E  F098         	movff	getTokens@str,strtok@s
  4841  00745C  C09F  F099         	movff	getTokens@str+1,strtok@s+1
  4842  007460  0EA4               	movlw	low getTokens@s
  4843  007462  6F9A               	movwf	strtok@sep& (0+255),b
  4844  007464  6B9B               	clrf	(strtok@sep+1)& (0+255),b
  4845  007466  EC62  F036         	call	_strtok	;wreg free
  4846  00746A  C09C  FFD9         	movff	getTokens@token,fsr2l
  4847  00746E  C09D  FFDA         	movff	getTokens@token+1,fsr2h
  4848  007472  0100               	movlb	0	; () banked
  4849  007474  C098  FFDE         	movff	?_strtok,postinc2
  4850  007478  C099  FFDD         	movff	?_strtok+1,postdec2
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;StringHandler.c: 10:    uint8_t i=0;
  4854  00747C  0E00               	movlw	0
  4855  00747E  6FA6               	movwf	getTokens@i& (0+255),b
  4856                           
  4857                           ;StringHandler.c: 12:    while( token[i] != ((void*)0)) {
  4858  007480  D01B               	goto	l15111
  4859  007482                     l15107:
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;StringHandler.c: 13:       i++;
  4863  007482  2BA6               	incf	getTokens@i& (0+255),f,b
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;StringHandler.c: 14:       token[i] = strtok(((void*)0), s);
  4867  007484  0E00               	movlw	0
  4868  007486  6F98               	movwf	strtok@s& (0+255),b
  4869  007488  0E00               	movlw	0
  4870  00748A  6F99               	movwf	(strtok@s+1)& (0+255),b
  4871  00748C  0EA4               	movlw	low getTokens@s
  4872  00748E  6F9A               	movwf	strtok@sep& (0+255),b
  4873  007490  6B9B               	clrf	(strtok@sep+1)& (0+255),b
  4874  007492  EC62  F036         	call	_strtok	;wreg free
  4875  007496  0100               	movlb	0	; () banked
  4876  007498  51A6               	movf	getTokens@i& (0+255),w,b
  4877  00749A  0D02               	mullw	2
  4878  00749C  CFF3 F0A0          	movff	prodl,??_getTokens
  4879  0074A0  CFF4 F0A1          	movff	prodh,??_getTokens+1
  4880  0074A4  51A0               	movf	??_getTokens& (0+255),w,b
  4881  0074A6  259C               	addwf	getTokens@token& (0+255),w,b
  4882  0074A8  6ED9               	movwf	fsr2l,c
  4883  0074AA  51A1               	movf	(??_getTokens+1)& (0+255),w,b
  4884  0074AC  219D               	addwfc	(getTokens@token+1)& (0+255),w,b
  4885  0074AE  6EDA               	movwf	fsr2h,c
  4886  0074B0  C098  FFDE         	movff	?_strtok,postinc2
  4887  0074B4  C099  FFDD         	movff	?_strtok+1,postdec2
  4888  0074B8                     l15111:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;StringHandler.c: 12:    while( token[i] != ((void*)0)) {
  4892  0074B8  51A6               	movf	getTokens@i& (0+255),w,b
  4893  0074BA  0D02               	mullw	2
  4894  0074BC  CFF3 F0A0          	movff	prodl,??_getTokens
  4895  0074C0  CFF4 F0A1          	movff	prodh,??_getTokens+1
  4896  0074C4  51A0               	movf	??_getTokens& (0+255),w,b
  4897  0074C6  259C               	addwf	getTokens@token& (0+255),w,b
  4898  0074C8  6ED9               	movwf	fsr2l,c
  4899  0074CA  51A1               	movf	(??_getTokens+1)& (0+255),w,b
  4900  0074CC  219D               	addwfc	(getTokens@token+1)& (0+255),w,b
  4901  0074CE  6EDA               	movwf	fsr2h,c
  4902  0074D0  50DE               	movf	postinc2,w,c
  4903  0074D2  10DE               	iorwf	postinc2,w,c
  4904  0074D4  A4D8               	btfss	status,2,c
  4905  0074D6  D7D5               	goto	l15107
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;StringHandler.c: 16:    return i;
  4909  0074D8  51A6               	movf	getTokens@i& (0+255),w,b
  4910                           
  4911                           ; BSR set to: 0
  4912  0074DA  0012               	return		;funcret
  4913  0074DC                     __end_of_getTokens:
  4914                           	callstack 0
  4915                           
  4916 ;; *************** function _getComands *****************
  4917 ;; Defined at:
  4918 ;;		line 19 in file "StringHandler.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  comandos        2   71[BANK1 ] PTR struct Comando_T
  4921 ;;		 -> executeCommand@comando(100), 
  4922 ;;  tokens          2   73[BANK1 ] PTR PTR unsigned char 
  4923 ;;		 -> executeCommand@TokensCom(40), 
  4924 ;;  size            1   75[BANK1 ] unsigned char 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  i               1   92[BANK1 ] unsigned char 
  4927 ;;  buff           10   82[BANK1 ] unsigned char [10]
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 3F/1
  4934 ;;		On exit  : 3F/1
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4937 ;;      Params:         0       0       5       0       0       0       0       0       0
  4938 ;;      Locals:         0       0      11       0       0       0       0       0       0
  4939 ;;      Temps:          0       0       6       0       0       0       0       0       0
  4940 ;;      Totals:         0       0      22       0       0       0       0       0       0
  4941 ;;Total ram usage:       22 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 13
  4944 ;; This function calls:
  4945 ;;		_strcpy
  4946 ;;		_strtof
  4947 ;; This function is called by:
  4948 ;;		_executeCommand
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text26
  4953  006342                     __ptext26:
  4954                           	callstack 0
  4955  006342                     _getComands:
  4956                           	callstack 16
  4957                           
  4958                           ; BSR set to: 1
  4959                           ;StringHandler.c: 20:    char buff[10];;StringHandler.c: 21:    for(uint8_t i=0;i<size;i
      +                          ++){
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;incstack = 0
  4963  006342  0E00               	movlw	0
  4964  006344  6F5C               	movwf	getComands@i& (0+255),b
  4965  006346  D068               	goto	l15127
  4966  006348                     l15119:
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;StringHandler.c: 22:       comandos[i].code=tokens[i][0];
  4970  006348  515C               	movf	getComands@i& (0+255),w,b
  4971  00634A  0D02               	mullw	2
  4972  00634C  CFF3 F14C          	movff	prodl,??_getComands
  4973  006350  CFF4 F14D          	movff	prodh,??_getComands+1
  4974  006354  514C               	movf	??_getComands& (0+255),w,b
  4975  006356  2549               	addwf	getComands@tokens& (0+255),w,b
  4976  006358  6ED9               	movwf	fsr2l,c
  4977  00635A  514D               	movf	(??_getComands+1)& (0+255),w,b
  4978  00635C  214A               	addwfc	(getComands@tokens+1)& (0+255),w,b
  4979  00635E  6EDA               	movwf	fsr2h,c
  4980  006360  CFDE F14E          	movff	postinc2,??_getComands+2
  4981  006364  CFDD F14F          	movff	postdec2,??_getComands+3
  4982  006368  C14E  FFD9         	movff	??_getComands+2,fsr2l
  4983  00636C  C14F  FFDA         	movff	??_getComands+3,fsr2h
  4984  006370  515C               	movf	getComands@i& (0+255),w,b
  4985  006372  0D05               	mullw	5
  4986  006374  CFF3 F150          	movff	prodl,??_getComands+4
  4987  006378  CFF4 F151          	movff	prodh,??_getComands+5
  4988  00637C  5150               	movf	(??_getComands+4)& (0+255),w,b
  4989  00637E  2547               	addwf	getComands@comandos& (0+255),w,b
  4990  006380  6EE1               	movwf	fsr1l,c
  4991  006382  5151               	movf	(??_getComands+5)& (0+255),w,b
  4992  006384  2148               	addwfc	(getComands@comandos+1)& (0+255),w,b
  4993  006386  6EE2               	movwf	fsr1h,c
  4994  006388  CFDF FFE7          	movff	indf2,indf1
  4995                           
  4996                           ; BSR set to: 1
  4997                           ;StringHandler.c: 23:       strcpy(buff, &tokens[i][1]);
  4998  00638C  0E52               	movlw	low getComands@buff
  4999  00638E  0100               	movlb	0	; () banked
  5000  006390  6F8C               	movwf	strcpy@dest& (0+255),b
  5001  006392  0E01               	movlw	high getComands@buff
  5002  006394  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
  5003  006396  0101               	movlb	1	; () banked
  5004  006398  515C               	movf	getComands@i& (0+255),w,b
  5005  00639A  0D02               	mullw	2
  5006  00639C  CFF3 F14C          	movff	prodl,??_getComands
  5007  0063A0  CFF4 F14D          	movff	prodh,??_getComands+1
  5008  0063A4  514C               	movf	??_getComands& (0+255),w,b
  5009  0063A6  2549               	addwf	getComands@tokens& (0+255),w,b
  5010  0063A8  6ED9               	movwf	fsr2l,c
  5011  0063AA  514D               	movf	(??_getComands+1)& (0+255),w,b
  5012  0063AC  214A               	addwfc	(getComands@tokens+1)& (0+255),w,b
  5013  0063AE  6EDA               	movwf	fsr2h,c
  5014  0063B0  CFDE F14E          	movff	postinc2,??_getComands+2
  5015  0063B4  CFDD F14F          	movff	postdec2,??_getComands+3
  5016  0063B8  0E01               	movlw	1
  5017  0063BA  254E               	addwf	(??_getComands+2)& (0+255),w,b
  5018  0063BC  0100               	movlb	0	; () banked
  5019  0063BE  6F8E               	movwf	strcpy@src& (0+255),b
  5020  0063C0  0E00               	movlw	0
  5021  0063C2  0101               	movlb	1	; () banked
  5022  0063C4  214F               	addwfc	(??_getComands+3)& (0+255),w,b
  5023  0063C6  0100               	movlb	0	; () banked
  5024  0063C8  6F8F               	movwf	(strcpy@src+1)& (0+255),b
  5025  0063CA  ECD7  F03C         	call	_strcpy	;wreg free
  5026                           
  5027                           ;StringHandler.c: 24:  comandos[i].number=strtof(buff,((void*)0));
  5028  0063CE  0E52               	movlw	low getComands@buff
  5029  0063D0  0101               	movlb	1	; () banked
  5030  0063D2  6F32               	movwf	strtof@s& (0+255),b
  5031  0063D4  0E01               	movlw	high getComands@buff
  5032  0063D6  6F33               	movwf	(strtof@s+1)& (0+255),b
  5033  0063D8  0E00               	movlw	0
  5034  0063DA  6F34               	movwf	strtof@res& (0+255),b
  5035  0063DC  0E00               	movlw	0
  5036  0063DE  6F35               	movwf	(strtof@res+1)& (0+255),b
  5037  0063E0  EC78  F004         	call	_strtof	;wreg free
  5038  0063E4  0101               	movlb	1	; () banked
  5039  0063E6  515C               	movf	getComands@i& (0+255),w,b
  5040  0063E8  0D05               	mullw	5
  5041  0063EA  C147  F14C         	movff	getComands@comandos,??_getComands
  5042  0063EE  C148  F14D         	movff	getComands@comandos+1,??_getComands+1
  5043  0063F2  50F3               	movf	243,w,c
  5044  0063F4  274C               	addwf	??_getComands& (0+255),f,b
  5045  0063F6  50F4               	movf	244,w,c
  5046  0063F8  234D               	addwfc	(??_getComands+1)& (0+255),f,b
  5047  0063FA  0E01               	movlw	1
  5048  0063FC  254C               	addwf	??_getComands& (0+255),w,b
  5049  0063FE  6ED9               	movwf	fsr2l,c
  5050  006400  0E00               	movlw	0
  5051  006402  214D               	addwfc	(??_getComands+1)& (0+255),w,b
  5052  006404  6EDA               	movwf	fsr2h,c
  5053  006406  C132  FFDE         	movff	?_strtof,postinc2
  5054  00640A  C133  FFDE         	movff	?_strtof+1,postinc2
  5055  00640E  C134  FFDE         	movff	?_strtof+2,postinc2
  5056  006412  C135  FFDE         	movff	?_strtof+3,postinc2
  5057                           
  5058                           ; BSR set to: 1
  5059                           ;StringHandler.c: 25:    }
  5060  006416  2B5C               	incf	getComands@i& (0+255),f,b
  5061  006418                     l15127:
  5062                           
  5063                           ; BSR set to: 1
  5064  006418  514B               	movf	getComands@size& (0+255),w,b
  5065  00641A  5D5C               	subwf	getComands@i& (0+255),w,b
  5066  00641C  B0D8               	btfsc	status,0,c
  5067  00641E  0012               	return	
  5068  006420  D793               	goto	l15119
  5069  006422                     __end_of_getComands:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _strtof *****************
  5073 ;; Defined at:
  5074 ;;		line 95 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strtof.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  s               2   50[BANK1 ] PTR const unsigned char 
  5077 ;;		 -> getComands@buff(10), 
  5078 ;;  res             2   52[BANK1 ] PTR PTR unsigned char 
  5079 ;;		 -> NULL(0), 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  _u              4   66[BANK1 ] struct .
  5082 ;;  eexp            2   64[BANK1 ] int 
  5083 ;;  expon           2   62[BANK1 ] int 
  5084 ;;  i               1   70[BANK1 ] unsigned char 
  5085 ;;  flags           1   61[BANK1 ] unsigned char 
  5086 ;;  digit           1   60[BANK1 ] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  4   50[BANK1 ] float 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 3F/1
  5093 ;;		On exit  : 3E/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5096 ;;      Params:         0       0       4       0       0       0       0       0       0
  5097 ;;      Locals:         0       0      11       0       0       0       0       0       0
  5098 ;;      Temps:          0       0       6       0       0       0       0       0       0
  5099 ;;      Totals:         0       0      21       0       0       0       0       0       0
  5100 ;;Total ram usage:       21 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 12
  5103 ;; This function calls:
  5104 ;;		___fldiv
  5105 ;;		___fleq
  5106 ;;		___flge
  5107 ;;		___flmul
  5108 ;;		___flneg
  5109 ;;		___lmul
  5110 ;;		___wmul
  5111 ;;		___xxtofl
  5112 ;;		_isdigit
  5113 ;;		_isspace
  5114 ;;		_isxdigit
  5115 ;;		_nanf
  5116 ;;		_toupper
  5117 ;; This function is called by:
  5118 ;;		_getComands
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text27
  5123  0008F0                     __ptext27:
  5124                           	callstack 0
  5125  0008F0                     _strtof:
  5126                           	callstack 16
  5127                           
  5128                           ; BSR set to: 1
  5129                           
  5130                           ; BSR set to: 1
  5131                           ;incstack = 0
  5132  0008F0  5134               	movf	strtof@res& (0+255),w,b
  5133  0008F2  1135               	iorwf	(strtof@res+1)& (0+255),w,b
  5134  0008F4  B4D8               	btfsc	status,2,c
  5135  0008F6  D00B               	goto	l14545
  5136                           
  5137                           ; BSR set to: 1
  5138  0008F8  C134  FFD9         	movff	strtof@res,fsr2l
  5139  0008FC  C135  FFDA         	movff	strtof@res+1,fsr2h
  5140  000900  C132  FFDE         	movff	strtof@s,postinc2
  5141  000904  C133  FFDD         	movff	strtof@s+1,postdec2
  5142  000908  D002               	goto	l14545
  5143  00090A                     l14541:
  5144                           
  5145                           ; BSR set to: 1
  5146  00090A  4B32               	infsnz	strtof@s& (0+255),f,b
  5147  00090C  2B33               	incf	(strtof@s+1)& (0+255),f,b
  5148  00090E                     l14545:
  5149                           
  5150                           ; BSR set to: 1
  5151  00090E  C132  FFD9         	movff	strtof@s,fsr2l
  5152  000912  C133  FFDA         	movff	strtof@s+1,fsr2h
  5153  000916  0E20               	movlw	32
  5154  000918  18DE               	xorwf	postinc2,w,c
  5155  00091A  A4D8               	btfss	status,2,c
  5156  00091C  D002               	goto	u17340
  5157  00091E  0E01               	movlw	1
  5158  000920  D001               	goto	u17350
  5159  000922                     u17340:
  5160  000922  0E00               	movlw	0
  5161  000924                     u17350:
  5162  000924  6F40               	movwf	strtof@eexp& (0+255),b
  5163  000926  6B41               	clrf	(strtof@eexp+1)& (0+255),b
  5164  000928  5140               	movf	strtof@eexp& (0+255),w,b
  5165  00092A  1141               	iorwf	(strtof@eexp+1)& (0+255),w,b
  5166  00092C  A4D8               	btfss	status,2,c
  5167  00092E  D7ED               	goto	l14541
  5168                           
  5169                           ; BSR set to: 1
  5170  000930  0EF7               	movlw	247
  5171  000932  6F36               	movwf	??_strtof& (0+255),b
  5172  000934  0EFF               	movlw	255
  5173  000936  6F37               	movwf	(??_strtof+1)& (0+255),b
  5174  000938  C132  FFD9         	movff	strtof@s,fsr2l
  5175  00093C  C133  FFDA         	movff	strtof@s+1,fsr2h
  5176  000940  50DF               	movf	indf2,w,c
  5177  000942  6F38               	movwf	(??_strtof+2)& (0+255),b
  5178  000944  5138               	movf	(??_strtof+2)& (0+255),w,b
  5179  000946  6F40               	movwf	strtof@eexp& (0+255),b
  5180  000948  6B41               	clrf	(strtof@eexp+1)& (0+255),b
  5181  00094A  C140  F139         	movff	strtof@eexp,??_strtof+3
  5182  00094E  C141  F13A         	movff	strtof@eexp+1,??_strtof+4
  5183  000952  5136               	movf	??_strtof& (0+255),w,b
  5184  000954  2739               	addwf	(??_strtof+3)& (0+255),f,b
  5185  000956  5137               	movf	(??_strtof+1)& (0+255),w,b
  5186  000958  233A               	addwfc	(??_strtof+4)& (0+255),f,b
  5187  00095A  513A               	movf	(??_strtof+4)& (0+255),w,b
  5188  00095C  E104               	bnz	u17370
  5189  00095E  0E05               	movlw	5
  5190  000960  5D39               	subwf	(??_strtof+3)& (0+255),w,b
  5191  000962  A0D8               	btfss	status,0,c
  5192  000964  D7D2               	goto	l14541
  5193  000966                     u17370:
  5194                           
  5195                           ; BSR set to: 1
  5196  000966  0E00               	movlw	0
  5197  000968  6F3D               	movwf	strtof@flags& (0+255),b
  5198                           
  5199                           ; BSR set to: 1
  5200  00096A  0E2D               	movlw	45
  5201  00096C  1940               	xorwf	strtof@eexp& (0+255),w,b
  5202  00096E  1141               	iorwf	(strtof@eexp+1)& (0+255),w,b
  5203  000970  A4D8               	btfss	status,2,c
  5204  000972  D005               	goto	l14557
  5205                           
  5206                           ; BSR set to: 1
  5207  000974  0E01               	movlw	1
  5208  000976  6F3D               	movwf	strtof@flags& (0+255),b
  5209  000978                     l14555:
  5210                           
  5211                           ; BSR set to: 1
  5212  000978  4B32               	infsnz	strtof@s& (0+255),f,b
  5213  00097A  2B33               	incf	(strtof@s+1)& (0+255),f,b
  5214  00097C  D005               	goto	l14561
  5215  00097E                     l14557:
  5216                           
  5217                           ; BSR set to: 1
  5218  00097E  0E2B               	movlw	43
  5219  000980  1940               	xorwf	strtof@eexp& (0+255),w,b
  5220  000982  1141               	iorwf	(strtof@eexp+1)& (0+255),w,b
  5221  000984  B4D8               	btfsc	status,2,c
  5222  000986  D7F8               	goto	l14555
  5223  000988                     l14561:
  5224                           
  5225                           ; BSR set to: 1
  5226  000988  0E00               	movlw	0
  5227  00098A  6F46               	movwf	strtof@i& (0+255),b
  5228  00098C  D001               	goto	l14565
  5229  00098E                     l14563:
  5230                           
  5231                           ; BSR set to: 1
  5232  00098E  2B46               	incf	strtof@i& (0+255),f,b
  5233  000990                     l14565:
  5234                           
  5235                           ; BSR set to: 1
  5236  000990  5146               	movf	strtof@i& (0+255),w,b
  5237  000992  2532               	addwf	strtof@s& (0+255),w,b
  5238  000994  6ED9               	movwf	fsr2l,c
  5239  000996  0E00               	movlw	0
  5240  000998  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5241  00099A  6EDA               	movwf	fsr2h,c
  5242  00099C  50DF               	movf	indf2,w,c
  5243  00099E  B4D8               	btfsc	status,2,c
  5244  0009A0  D028               	goto	u17420
  5245                           
  5246                           ; BSR set to: 1
  5247  0009A2  5146               	movf	strtof@i& (0+255),w,b
  5248  0009A4  2532               	addwf	strtof@s& (0+255),w,b
  5249  0009A6  6ED9               	movwf	fsr2l,c
  5250  0009A8  0E00               	movlw	0
  5251  0009AA  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5252  0009AC  6EDA               	movwf	fsr2h,c
  5253  0009AE  50DF               	movf	indf2,w,c
  5254  0009B0  6F36               	movwf	??_strtof& (0+255),b
  5255  0009B2  5146               	movf	strtof@i& (0+255),w,b
  5256  0009B4  0FC5               	addlw	low STR_22
  5257  0009B6  6F37               	movwf	(??_strtof+1)& (0+255),b
  5258  0009B8  C137  FFF6         	movff	??_strtof+1,tblptrl
  5259  0009BC                     	if	1	;There is more than 1 active tblptr byte
  5260  0009BC  0E08               	movlw	high __smallconst
  5261  0009BE  6EF7               	movwf	tblptrh,c
  5262  0009C0                     	endif
  5263  0009C0                     	if	0	;tblptru may be non-zero
  5264  0009C0                     	endif
  5265  0009C0                     	if	0	;tblptru may be non-zero
  5266  0009C0                     	endif
  5267  0009C0  0008               	tblrd		*
  5268  0009C2  50F5               	movf	tablat,w,c
  5269  0009C4  1936               	xorwf	??_strtof& (0+255),w,b
  5270  0009C6  B4D8               	btfsc	status,2,c
  5271  0009C8  D7E2               	goto	l14563
  5272                           
  5273                           ; BSR set to: 1
  5274  0009CA  5146               	movf	strtof@i& (0+255),w,b
  5275  0009CC  2532               	addwf	strtof@s& (0+255),w,b
  5276  0009CE  6ED9               	movwf	fsr2l,c
  5277  0009D0  0E00               	movlw	0
  5278  0009D2  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5279  0009D4  6EDA               	movwf	fsr2h,c
  5280  0009D6  50DF               	movf	indf2,w,c
  5281  0009D8  6F36               	movwf	??_strtof& (0+255),b
  5282  0009DA  5146               	movf	strtof@i& (0+255),w,b
  5283  0009DC  0FBC               	addlw	low STR_23
  5284  0009DE  6F37               	movwf	(??_strtof+1)& (0+255),b
  5285  0009E0  C137  FFF6         	movff	??_strtof+1,tblptrl
  5286  0009E4                     	if	1	;There is more than 1 active tblptr byte
  5287  0009E4  0E08               	movlw	high __smallconst
  5288  0009E6  6EF7               	movwf	tblptrh,c
  5289  0009E8                     	endif
  5290  0009E8                     	if	0	;tblptru may be non-zero
  5291  0009E8                     	endif
  5292  0009E8                     	if	0	;tblptru may be non-zero
  5293  0009E8                     	endif
  5294  0009E8  0008               	tblrd		*
  5295  0009EA  50F5               	movf	tablat,w,c
  5296  0009EC  1936               	xorwf	??_strtof& (0+255),w,b
  5297  0009EE  B4D8               	btfsc	status,2,c
  5298  0009F0  D7CE               	goto	l14563
  5299  0009F2                     u17420:
  5300                           
  5301                           ; BSR set to: 1
  5302  0009F2  0E02               	movlw	2
  5303  0009F4  6546               	cpfsgt	strtof@i& (0+255),b
  5304  0009F6  D023               	goto	l14583
  5305                           
  5306                           ; BSR set to: 1
  5307  0009F8  0E00               	movlw	0
  5308  0009FA  6F42               	movwf	strtof@_u& (0+255),b
  5309  0009FC  0E00               	movlw	0
  5310  0009FE  6F43               	movwf	(strtof@_u+1)& (0+255),b
  5311  000A00  0E80               	movlw	128
  5312  000A02  6F44               	movwf	(strtof@_u+2)& (0+255),b
  5313  000A04  0E7F               	movlw	127
  5314  000A06  6F45               	movwf	(strtof@_u+3)& (0+255),b
  5315                           
  5316                           ; BSR set to: 1
  5317  000A08  5134               	movf	strtof@res& (0+255),w,b
  5318  000A0A  1135               	iorwf	(strtof@res+1)& (0+255),w,b
  5319  000A0C  B4D8               	btfsc	status,2,c
  5320  000A0E  EFC7  F00A         	goto	l2496
  5321                           
  5322                           ; BSR set to: 1
  5323  000A12  0E08               	movlw	8
  5324  000A14  1946               	xorwf	strtof@i& (0+255),w,b
  5325  000A16  B4D8               	btfsc	status,2,c
  5326  000A18  D002               	goto	l14581
  5327                           
  5328                           ; BSR set to: 1
  5329  000A1A  0E03               	movlw	3
  5330  000A1C  6F46               	movwf	strtof@i& (0+255),b
  5331  000A1E                     l14581:
  5332                           
  5333                           ; BSR set to: 1
  5334  000A1E  5146               	movf	strtof@i& (0+255),w,b
  5335  000A20  2532               	addwf	strtof@s& (0+255),w,b
  5336  000A22  6F36               	movwf	??_strtof& (0+255),b
  5337  000A24  0E00               	movlw	0
  5338  000A26  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5339  000A28  6F37               	movwf	(??_strtof+1)& (0+255),b
  5340  000A2A  C134  FFD9         	movff	strtof@res,fsr2l
  5341  000A2E  C135  FFDA         	movff	strtof@res+1,fsr2h
  5342  000A32  C136  FFDE         	movff	??_strtof,postinc2
  5343  000A36  C137  FFDD         	movff	??_strtof+1,postdec2
  5344  000A3A  EFC7  F00A         	goto	l2496
  5345  000A3E                     l14583:
  5346                           
  5347                           ; BSR set to: 1
  5348  000A3E  0E00               	movlw	0
  5349  000A40  6F46               	movwf	strtof@i& (0+255),b
  5350  000A42  D001               	goto	l14587
  5351  000A44                     l14585:
  5352                           
  5353                           ; BSR set to: 1
  5354  000A44  2B46               	incf	strtof@i& (0+255),f,b
  5355  000A46                     l14587:
  5356                           
  5357                           ; BSR set to: 1
  5358  000A46  5146               	movf	strtof@i& (0+255),w,b
  5359  000A48  2532               	addwf	strtof@s& (0+255),w,b
  5360  000A4A  6ED9               	movwf	fsr2l,c
  5361  000A4C  0E00               	movlw	0
  5362  000A4E  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5363  000A50  6EDA               	movwf	fsr2h,c
  5364  000A52  50DF               	movf	indf2,w,c
  5365  000A54  B4D8               	btfsc	status,2,c
  5366  000A56  D028               	goto	u17480
  5367                           
  5368                           ; BSR set to: 1
  5369  000A58  5146               	movf	strtof@i& (0+255),w,b
  5370  000A5A  2532               	addwf	strtof@s& (0+255),w,b
  5371  000A5C  6ED9               	movwf	fsr2l,c
  5372  000A5E  0E00               	movlw	0
  5373  000A60  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5374  000A62  6EDA               	movwf	fsr2h,c
  5375  000A64  50DF               	movf	indf2,w,c
  5376  000A66  6F36               	movwf	??_strtof& (0+255),b
  5377  000A68  5146               	movf	strtof@i& (0+255),w,b
  5378  000A6A  0FE4               	addlw	low STR_9
  5379  000A6C  6F37               	movwf	(??_strtof+1)& (0+255),b
  5380  000A6E  C137  FFF6         	movff	??_strtof+1,tblptrl
  5381  000A72                     	if	1	;There is more than 1 active tblptr byte
  5382  000A72  0E08               	movlw	high __smallconst
  5383  000A74  6EF7               	movwf	tblptrh,c
  5384  000A76                     	endif
  5385  000A76                     	if	0	;tblptru may be non-zero
  5386  000A76                     	endif
  5387  000A76                     	if	0	;tblptru may be non-zero
  5388  000A76                     	endif
  5389  000A76  0008               	tblrd		*
  5390  000A78  50F5               	movf	tablat,w,c
  5391  000A7A  1936               	xorwf	??_strtof& (0+255),w,b
  5392  000A7C  B4D8               	btfsc	status,2,c
  5393  000A7E  D7E2               	goto	l14585
  5394                           
  5395                           ; BSR set to: 1
  5396  000A80  5146               	movf	strtof@i& (0+255),w,b
  5397  000A82  2532               	addwf	strtof@s& (0+255),w,b
  5398  000A84  6ED9               	movwf	fsr2l,c
  5399  000A86  0E00               	movlw	0
  5400  000A88  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5401  000A8A  6EDA               	movwf	fsr2h,c
  5402  000A8C  50DF               	movf	indf2,w,c
  5403  000A8E  6F36               	movwf	??_strtof& (0+255),b
  5404  000A90  5146               	movf	strtof@i& (0+255),w,b
  5405  000A92  0FDC               	addlw	low STR_8
  5406  000A94  6F37               	movwf	(??_strtof+1)& (0+255),b
  5407  000A96  C137  FFF6         	movff	??_strtof+1,tblptrl
  5408  000A9A                     	if	1	;There is more than 1 active tblptr byte
  5409  000A9A  0E08               	movlw	high __smallconst
  5410  000A9C  6EF7               	movwf	tblptrh,c
  5411  000A9E                     	endif
  5412  000A9E                     	if	0	;tblptru may be non-zero
  5413  000A9E                     	endif
  5414  000A9E                     	if	0	;tblptru may be non-zero
  5415  000A9E                     	endif
  5416  000A9E  0008               	tblrd		*
  5417  000AA0  50F5               	movf	tablat,w,c
  5418  000AA2  1936               	xorwf	??_strtof& (0+255),w,b
  5419  000AA4  B4D8               	btfsc	status,2,c
  5420  000AA6  D7CE               	goto	l14585
  5421  000AA8                     u17480:
  5422                           
  5423                           ; BSR set to: 1
  5424  000AA8  0E03               	movlw	3
  5425  000AAA  1946               	xorwf	strtof@i& (0+255),w,b
  5426  000AAC  A4D8               	btfss	status,2,c
  5427  000AAE  D055               	goto	l14617
  5428                           
  5429                           ; BSR set to: 1
  5430  000AB0  0ED2               	movlw	low (STR_3+4)
  5431  000AB2  0100               	movlb	0	; () banked
  5432  000AB4  6F8C               	movwf	nanf@s& (0+255),b
  5433  000AB6  ECF9  F001         	call	_nanf	;wreg free
  5434  000ABA  C08C  F142         	movff	?_nanf,strtof@_u
  5435  000ABE  C08D  F143         	movff	?_nanf+1,strtof@_u+1
  5436  000AC2  C08E  F144         	movff	?_nanf+2,strtof@_u+2
  5437  000AC6  C08F  F145         	movff	?_nanf+3,strtof@_u+3
  5438                           
  5439                           ; BSR set to: 0
  5440  000ACA  0101               	movlb	1	; () banked
  5441  000ACC  5134               	movf	strtof@res& (0+255),w,b
  5442  000ACE  1135               	iorwf	(strtof@res+1)& (0+255),w,b
  5443  000AD0  B4D8               	btfsc	status,2,c
  5444  000AD2  EFC7  F00A         	goto	l2496
  5445                           
  5446                           ; BSR set to: 1
  5447  000AD6  5146               	movf	strtof@i& (0+255),w,b
  5448  000AD8  2732               	addwf	strtof@s& (0+255),f,b
  5449  000ADA  0E00               	movlw	0
  5450  000ADC  2333               	addwfc	(strtof@s+1)& (0+255),f,b
  5451                           
  5452                           ; BSR set to: 1
  5453  000ADE  C132  FFD9         	movff	strtof@s,fsr2l
  5454  000AE2  C133  FFDA         	movff	strtof@s+1,fsr2h
  5455  000AE6  0E28               	movlw	40
  5456  000AE8  18DE               	xorwf	postinc2,w,c
  5457  000AEA  A4D8               	btfss	status,2,c
  5458  000AEC  D02C               	goto	l14615
  5459                           
  5460                           ; BSR set to: 1
  5461  000AEE  0E00               	movlw	0
  5462  000AF0  6F46               	movwf	strtof@i& (0+255),b
  5463  000AF2  D001               	goto	l14607
  5464  000AF4                     l14605:
  5465                           
  5466                           ; BSR set to: 1
  5467  000AF4  2B46               	incf	strtof@i& (0+255),f,b
  5468  000AF6                     l14607:
  5469                           
  5470                           ; BSR set to: 1
  5471  000AF6  5146               	movf	strtof@i& (0+255),w,b
  5472  000AF8  2532               	addwf	strtof@s& (0+255),w,b
  5473  000AFA  6ED9               	movwf	fsr2l,c
  5474  000AFC  0E00               	movlw	0
  5475  000AFE  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5476  000B00  6EDA               	movwf	fsr2h,c
  5477  000B02  50DF               	movf	indf2,w,c
  5478  000B04  B4D8               	btfsc	status,2,c
  5479  000B06  D00A               	goto	u17530
  5480                           
  5481                           ; BSR set to: 1
  5482  000B08  5146               	movf	strtof@i& (0+255),w,b
  5483  000B0A  2532               	addwf	strtof@s& (0+255),w,b
  5484  000B0C  6ED9               	movwf	fsr2l,c
  5485  000B0E  0E00               	movlw	0
  5486  000B10  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5487  000B12  6EDA               	movwf	fsr2h,c
  5488  000B14  0E29               	movlw	41
  5489  000B16  18DE               	xorwf	postinc2,w,c
  5490  000B18  A4D8               	btfss	status,2,c
  5491  000B1A  D7EC               	goto	l14605
  5492  000B1C                     u17530:
  5493                           
  5494                           ; BSR set to: 1
  5495  000B1C  5146               	movf	strtof@i& (0+255),w,b
  5496  000B1E  2532               	addwf	strtof@s& (0+255),w,b
  5497  000B20  6ED9               	movwf	fsr2l,c
  5498  000B22  0E00               	movlw	0
  5499  000B24  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5500  000B26  6EDA               	movwf	fsr2h,c
  5501  000B28  0E29               	movlw	41
  5502  000B2A  18DE               	xorwf	postinc2,w,c
  5503  000B2C  A4D8               	btfss	status,2,c
  5504  000B2E  D00B               	goto	l14615
  5505                           
  5506                           ; BSR set to: 1
  5507  000B30  5146               	movf	strtof@i& (0+255),w,b
  5508  000B32  6F36               	movwf	??_strtof& (0+255),b
  5509  000B34  6B37               	clrf	(??_strtof+1)& (0+255),b
  5510  000B36  0E01               	movlw	1
  5511  000B38  2736               	addwf	??_strtof& (0+255),f,b
  5512  000B3A  0E00               	movlw	0
  5513  000B3C  2337               	addwfc	(??_strtof+1)& (0+255),f,b
  5514  000B3E  5136               	movf	??_strtof& (0+255),w,b
  5515  000B40  2732               	addwf	strtof@s& (0+255),f,b
  5516  000B42  5137               	movf	(??_strtof+1)& (0+255),w,b
  5517  000B44  2333               	addwfc	(strtof@s+1)& (0+255),f,b
  5518  000B46                     l14615:
  5519                           
  5520                           ; BSR set to: 1
  5521  000B46  C134  FFD9         	movff	strtof@res,fsr2l
  5522  000B4A  C135  FFDA         	movff	strtof@res+1,fsr2h
  5523  000B4E  C132  FFDE         	movff	strtof@s,postinc2
  5524  000B52  C133  FFDD         	movff	strtof@s+1,postdec2
  5525  000B56  EFC7  F00A         	goto	l2496
  5526  000B5A                     l14617:
  5527                           
  5528                           ; BSR set to: 1
  5529  000B5A  0E00               	movlw	0
  5530  000B5C  6F41               	movwf	(strtof@eexp+1)& (0+255),b
  5531  000B5E  0E00               	movlw	0
  5532  000B60  6F40               	movwf	strtof@eexp& (0+255),b
  5533  000B62  0E00               	movlw	0
  5534  000B64  6F42               	movwf	strtof@_u& (0+255),b
  5535  000B66  0E00               	movlw	0
  5536  000B68  6F43               	movwf	(strtof@_u+1)& (0+255),b
  5537  000B6A  0E00               	movlw	0
  5538  000B6C  6F44               	movwf	(strtof@_u+2)& (0+255),b
  5539  000B6E  0E00               	movlw	0
  5540  000B70  6F45               	movwf	(strtof@_u+3)& (0+255),b
  5541  000B72  0E00               	movlw	0
  5542  000B74  6F3F               	movwf	(strtof@expon+1)& (0+255),b
  5543  000B76  0E00               	movlw	0
  5544  000B78  6F3E               	movwf	strtof@expon& (0+255),b
  5545  000B7A  0E00               	movlw	0
  5546  000B7C  6F46               	movwf	strtof@i& (0+255),b
  5547  000B7E  D001               	goto	l14621
  5548  000B80                     l14619:
  5549                           
  5550                           ; BSR set to: 1
  5551  000B80  2B46               	incf	strtof@i& (0+255),f,b
  5552  000B82                     l14621:
  5553                           
  5554                           ; BSR set to: 1
  5555  000B82  5146               	movf	strtof@i& (0+255),w,b
  5556  000B84  2532               	addwf	strtof@s& (0+255),w,b
  5557  000B86  6ED9               	movwf	fsr2l,c
  5558  000B88  0E00               	movlw	0
  5559  000B8A  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5560  000B8C  6EDA               	movwf	fsr2h,c
  5561  000B8E  0E30               	movlw	48
  5562  000B90  18DE               	xorwf	postinc2,w,c
  5563  000B92  B4D8               	btfsc	status,2,c
  5564  000B94  D7F5               	goto	l14619
  5565                           
  5566                           ; BSR set to: 1
  5567  000B96  5146               	movf	strtof@i& (0+255),w,b
  5568  000B98  B4D8               	btfsc	status,2,c
  5569  000B9A  D2A3               	goto	l2581
  5570                           
  5571                           ; BSR set to: 1
  5572  000B9C  5146               	movf	strtof@i& (0+255),w,b
  5573  000B9E  2532               	addwf	strtof@s& (0+255),w,b
  5574  000BA0  6ED9               	movwf	fsr2l,c
  5575  000BA2  0E00               	movlw	0
  5576  000BA4  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5577  000BA6  6EDA               	movwf	fsr2h,c
  5578  000BA8  0E78               	movlw	120
  5579  000BAA  18DE               	xorwf	postinc2,w,c
  5580  000BAC  B4D8               	btfsc	status,2,c
  5581  000BAE  D00A               	goto	u17580
  5582                           
  5583                           ; BSR set to: 1
  5584  000BB0  5146               	movf	strtof@i& (0+255),w,b
  5585  000BB2  2532               	addwf	strtof@s& (0+255),w,b
  5586  000BB4  6ED9               	movwf	fsr2l,c
  5587  000BB6  0E00               	movlw	0
  5588  000BB8  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5589  000BBA  6EDA               	movwf	fsr2h,c
  5590  000BBC  0E58               	movlw	88
  5591  000BBE  18DE               	xorwf	postinc2,w,c
  5592  000BC0  A4D8               	btfss	status,2,c
  5593  000BC2  D28F               	goto	l2581
  5594  000BC4                     u17580:
  5595                           
  5596                           ; BSR set to: 1
  5597  000BC4  5146               	movf	strtof@i& (0+255),w,b
  5598  000BC6  6F36               	movwf	??_strtof& (0+255),b
  5599  000BC8  6B37               	clrf	(??_strtof+1)& (0+255),b
  5600  000BCA  0E01               	movlw	1
  5601  000BCC  2736               	addwf	??_strtof& (0+255),f,b
  5602  000BCE  0E00               	movlw	0
  5603  000BD0  2337               	addwfc	(??_strtof+1)& (0+255),f,b
  5604  000BD2  5136               	movf	??_strtof& (0+255),w,b
  5605  000BD4  2732               	addwf	strtof@s& (0+255),f,b
  5606  000BD6  5137               	movf	(??_strtof+1)& (0+255),w,b
  5607  000BD8  2333               	addwfc	(strtof@s+1)& (0+255),f,b
  5608                           
  5609                           ; BSR set to: 1
  5610  000BDA  0E00               	movlw	0
  5611  000BDC  6F46               	movwf	strtof@i& (0+255),b
  5612  000BDE  D001               	goto	l14635
  5613  000BE0                     l14633:
  5614                           
  5615                           ; BSR set to: 1
  5616  000BE0  2B46               	incf	strtof@i& (0+255),f,b
  5617  000BE2                     l14635:
  5618                           
  5619                           ; BSR set to: 1
  5620  000BE2  5146               	movf	strtof@i& (0+255),w,b
  5621  000BE4  2532               	addwf	strtof@s& (0+255),w,b
  5622  000BE6  6ED9               	movwf	fsr2l,c
  5623  000BE8  0E00               	movlw	0
  5624  000BEA  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5625  000BEC  6EDA               	movwf	fsr2h,c
  5626  000BEE  0E30               	movlw	48
  5627  000BF0  18DE               	xorwf	postinc2,w,c
  5628  000BF2  B4D8               	btfsc	status,2,c
  5629  000BF4  D7F5               	goto	l14633
  5630                           
  5631                           ; BSR set to: 1
  5632  000BF6  0E00               	movlw	0
  5633  000BF8  6F46               	movwf	strtof@i& (0+255),b
  5634  000BFA                     l14639:
  5635                           
  5636                           ; BSR set to: 1
  5637  000BFA  5146               	movf	strtof@i& (0+255),w,b
  5638  000BFC  2532               	addwf	strtof@s& (0+255),w,b
  5639  000BFE  6ED9               	movwf	fsr2l,c
  5640  000C00  0E00               	movlw	0
  5641  000C02  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5642  000C04  6EDA               	movwf	fsr2h,c
  5643  000C06  0E70               	movlw	112
  5644  000C08  18DE               	xorwf	postinc2,w,c
  5645  000C0A  B4D8               	btfsc	status,2,c
  5646  000C0C  D12C               	goto	l14709
  5647                           
  5648                           ; BSR set to: 1
  5649  000C0E  5146               	movf	strtof@i& (0+255),w,b
  5650  000C10  2532               	addwf	strtof@s& (0+255),w,b
  5651  000C12  6ED9               	movwf	fsr2l,c
  5652  000C14  0E00               	movlw	0
  5653  000C16  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5654  000C18  6EDA               	movwf	fsr2h,c
  5655  000C1A  0E50               	movlw	80
  5656  000C1C  18DE               	xorwf	postinc2,w,c
  5657  000C1E  B4D8               	btfsc	status,2,c
  5658  000C20  D122               	goto	l14709
  5659                           
  5660                           ; BSR set to: 1
  5661  000C22  5146               	movf	strtof@i& (0+255),w,b
  5662  000C24  2532               	addwf	strtof@s& (0+255),w,b
  5663  000C26  6ED9               	movwf	fsr2l,c
  5664  000C28  0E00               	movlw	0
  5665  000C2A  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5666  000C2C  6EDA               	movwf	fsr2h,c
  5667  000C2E  0E2E               	movlw	46
  5668  000C30  18DE               	xorwf	postinc2,w,c
  5669  000C32  A4D8               	btfss	status,2,c
  5670  000C34  D002               	goto	l14651
  5671                           
  5672                           ; BSR set to: 1
  5673  000C36  893D               	bsf	strtof@flags& (0+255),4,b
  5674  000C38  D115               	goto	L2
  5675  000C3A                     l14651:
  5676                           
  5677                           ; BSR set to: 1
  5678  000C3A  5146               	movf	strtof@i& (0+255),w,b
  5679  000C3C  2532               	addwf	strtof@s& (0+255),w,b
  5680  000C3E  6ED9               	movwf	fsr2l,c
  5681  000C40  0E00               	movlw	0
  5682  000C42  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5683  000C44  6EDA               	movwf	fsr2h,c
  5684  000C46  50DF               	movf	indf2,w,c
  5685  000C48  6F36               	movwf	??_strtof& (0+255),b
  5686  000C4A  5136               	movf	??_strtof& (0+255),w,b
  5687  000C4C  0100               	movlb	0	; () banked
  5688  000C4E  6F92               	movwf	isxdigit@c& (0+255),b
  5689  000C50  6B93               	clrf	(isxdigit@c+1)& (0+255),b
  5690  000C52  ECF6  F03B         	call	_isxdigit	;wreg free
  5691  000C56  5192               	movf	?_isxdigit& (0+255),w,b
  5692  000C58  1193               	iorwf	(?_isxdigit+1)& (0+255),w,b
  5693  000C5A  B4D8               	btfsc	status,2,c
  5694  000C5C  D061               	goto	l14671
  5695                           
  5696                           ; BSR set to: 0
  5697  000C5E  0E00               	movlw	0
  5698  000C60  0101               	movlb	1	; () banked
  5699  000C62  6F3C               	movwf	strtof@digit& (0+255),b
  5700                           
  5701                           ; BSR set to: 1
  5702  000C64  0ED0               	movlw	208
  5703  000C66  6F36               	movwf	??_strtof& (0+255),b
  5704  000C68  0EFF               	movlw	255
  5705  000C6A  6F37               	movwf	(??_strtof+1)& (0+255),b
  5706  000C6C  5146               	movf	strtof@i& (0+255),w,b
  5707  000C6E  2532               	addwf	strtof@s& (0+255),w,b
  5708  000C70  6ED9               	movwf	fsr2l,c
  5709  000C72  0E00               	movlw	0
  5710  000C74  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5711  000C76  6EDA               	movwf	fsr2h,c
  5712  000C78  50DF               	movf	indf2,w,c
  5713  000C7A  6F38               	movwf	(??_strtof+2)& (0+255),b
  5714  000C7C  6B39               	clrf	(??_strtof+3)& (0+255),b
  5715  000C7E  5136               	movf	??_strtof& (0+255),w,b
  5716  000C80  2738               	addwf	(??_strtof+2)& (0+255),f,b
  5717  000C82  5137               	movf	(??_strtof+1)& (0+255),w,b
  5718  000C84  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  5719  000C86  5139               	movf	(??_strtof+3)& (0+255),w,b
  5720  000C88  E10D               	bnz	l14661
  5721  000C8A  0E0A               	movlw	10
  5722  000C8C  5D38               	subwf	(??_strtof+2)& (0+255),w,b
  5723  000C8E  B0D8               	btfsc	status,0,c
  5724  000C90  D009               	goto	l14661
  5725                           
  5726                           ; BSR set to: 1
  5727  000C92  5146               	movf	strtof@i& (0+255),w,b
  5728  000C94  2532               	addwf	strtof@s& (0+255),w,b
  5729  000C96  6ED9               	movwf	fsr2l,c
  5730  000C98  0E00               	movlw	0
  5731  000C9A  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5732  000C9C  6EDA               	movwf	fsr2h,c
  5733  000C9E  50DF               	movf	indf2,w,c
  5734  000CA0  0FD0               	addlw	208
  5735  000CA2  D011               	goto	L3
  5736  000CA4                     l14661:
  5737                           
  5738                           ; BSR set to: 1
  5739  000CA4  5146               	movf	strtof@i& (0+255),w,b
  5740  000CA6  2532               	addwf	strtof@s& (0+255),w,b
  5741  000CA8  6ED9               	movwf	fsr2l,c
  5742  000CAA  0E00               	movlw	0
  5743  000CAC  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5744  000CAE  6EDA               	movwf	fsr2h,c
  5745  000CB0  50DF               	movf	indf2,w,c
  5746  000CB2  6F36               	movwf	??_strtof& (0+255),b
  5747  000CB4  5136               	movf	??_strtof& (0+255),w,b
  5748  000CB6  0100               	movlb	0	; () banked
  5749  000CB8  6F92               	movwf	toupper@c& (0+255),b
  5750  000CBA  6B93               	clrf	(toupper@c+1)& (0+255),b
  5751  000CBC  EC34  F03F         	call	_toupper	;wreg free
  5752  000CC0  5192               	movf	?_toupper& (0+255),w,b
  5753  000CC2  0FC9               	addlw	201
  5754  000CC4  0101               	movlb	1	; () banked
  5755  000CC6                     L3:
  5756  000CC6  6F3C               	movwf	strtof@digit& (0+255),b
  5757                           
  5758                           ; BSR set to: 1
  5759  000CC8  BF41               	btfsc	(strtof@eexp+1)& (0+255),7,b
  5760  000CCA  D006               	goto	u17650
  5761  000CCC  5141               	movf	(strtof@eexp+1)& (0+255),w,b
  5762  000CCE  E121               	bnz	l14667
  5763  000CD0  0E08               	movlw	8
  5764  000CD2  5D40               	subwf	strtof@eexp& (0+255),w,b
  5765  000CD4  B0D8               	btfsc	status,0,c
  5766  000CD6  D01D               	goto	l14667
  5767  000CD8                     u17650:
  5768                           
  5769                           ; BSR set to: 1
  5770  000CD8  5140               	movf	strtof@eexp& (0+255),w,b
  5771  000CDA  0807               	sublw	7
  5772  000CDC  6F36               	movwf	??_strtof& (0+255),b
  5773  000CDE  90D8               	bcf	status,0,c
  5774  000CE0  3736               	rlcf	??_strtof& (0+255),f,b
  5775  000CE2  90D8               	bcf	status,0,c
  5776  000CE4  3736               	rlcf	??_strtof& (0+255),f,b
  5777  000CE6  C13C  F137         	movff	strtof@digit,??_strtof+1
  5778  000CEA  6B38               	clrf	(??_strtof+2)& (0+255),b
  5779  000CEC  6B39               	clrf	(??_strtof+3)& (0+255),b
  5780  000CEE  6B3A               	clrf	(??_strtof+4)& (0+255),b
  5781  000CF0  2B36               	incf	??_strtof& (0+255),f,b
  5782  000CF2  D005               	goto	u17660
  5783  000CF4                     u17665:
  5784  000CF4  90D8               	bcf	status,0,c
  5785  000CF6  3737               	rlcf	(??_strtof+1)& (0+255),f,b
  5786  000CF8  3738               	rlcf	(??_strtof+2)& (0+255),f,b
  5787  000CFA  3739               	rlcf	(??_strtof+3)& (0+255),f,b
  5788  000CFC  373A               	rlcf	(??_strtof+4)& (0+255),f,b
  5789  000CFE                     u17660:
  5790  000CFE  2F36               	decfsz	??_strtof& (0+255),f,b
  5791  000D00  D7F9               	goto	u17665
  5792  000D02  5137               	movf	(??_strtof+1)& (0+255),w,b
  5793  000D04  1342               	iorwf	strtof@_u& (0+255),f,b
  5794  000D06  5138               	movf	(??_strtof+2)& (0+255),w,b
  5795  000D08  1343               	iorwf	(strtof@_u+1)& (0+255),f,b
  5796  000D0A  5139               	movf	(??_strtof+3)& (0+255),w,b
  5797  000D0C  1344               	iorwf	(strtof@_u+2)& (0+255),f,b
  5798  000D0E  513A               	movf	(??_strtof+4)& (0+255),w,b
  5799  000D10  1345               	iorwf	(strtof@_u+3)& (0+255),f,b
  5800  000D12                     l14667:
  5801                           
  5802                           ; BSR set to: 1
  5803  000D12  4B40               	infsnz	strtof@eexp& (0+255),f,b
  5804  000D14  2B41               	incf	(strtof@eexp+1)& (0+255),f,b
  5805                           
  5806                           ; BSR set to: 1
  5807  000D16  0E04               	movlw	4
  5808  000D18  273E               	addwf	strtof@expon& (0+255),f,b
  5809  000D1A  0E00               	movlw	0
  5810  000D1C  233F               	addwfc	(strtof@expon+1)& (0+255),f,b
  5811  000D1E  D00A               	goto	l14675
  5812  000D20                     l14671:
  5813                           
  5814                           ; BSR set to: 0
  5815  000D20  0E00               	movlw	0
  5816  000D22  0101               	movlb	1	; () banked
  5817  000D24  6F32               	movwf	?_strtof& (0+255),b
  5818  000D26  0E00               	movlw	0
  5819  000D28  6F33               	movwf	(?_strtof+1)& (0+255),b
  5820  000D2A  0E00               	movlw	0
  5821  000D2C  6F34               	movwf	(?_strtof+2)& (0+255),b
  5822  000D2E  0E00               	movlw	0
  5823  000D30  6F35               	movwf	(?_strtof+3)& (0+255),b
  5824  000D32  0012               	return	
  5825  000D34                     l14675:
  5826                           
  5827                           ; BSR set to: 1
  5828  000D34  2B46               	incf	strtof@i& (0+255),f,b
  5829  000D36  D761               	goto	l14639
  5830  000D38                     l14677:
  5831                           
  5832                           ; BSR set to: 1
  5833  000D38  5146               	movf	strtof@i& (0+255),w,b
  5834  000D3A  2532               	addwf	strtof@s& (0+255),w,b
  5835  000D3C  6ED9               	movwf	fsr2l,c
  5836  000D3E  0E00               	movlw	0
  5837  000D40  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5838  000D42  6EDA               	movwf	fsr2h,c
  5839  000D44  0E70               	movlw	112
  5840  000D46  18DE               	xorwf	postinc2,w,c
  5841  000D48  B4D8               	btfsc	status,2,c
  5842  000D4A  D08F               	goto	u17750
  5843                           
  5844                           ; BSR set to: 1
  5845  000D4C  5146               	movf	strtof@i& (0+255),w,b
  5846  000D4E  2532               	addwf	strtof@s& (0+255),w,b
  5847  000D50  6ED9               	movwf	fsr2l,c
  5848  000D52  0E00               	movlw	0
  5849  000D54  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5850  000D56  6EDA               	movwf	fsr2h,c
  5851  000D58  0E50               	movlw	80
  5852  000D5A  18DE               	xorwf	postinc2,w,c
  5853  000D5C  B4D8               	btfsc	status,2,c
  5854  000D5E  D085               	goto	u17750
  5855                           
  5856                           ; BSR set to: 1
  5857  000D60  5146               	movf	strtof@i& (0+255),w,b
  5858  000D62  2532               	addwf	strtof@s& (0+255),w,b
  5859  000D64  6ED9               	movwf	fsr2l,c
  5860  000D66  0E00               	movlw	0
  5861  000D68  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5862  000D6A  6EDA               	movwf	fsr2h,c
  5863  000D6C  0E30               	movlw	48
  5864  000D6E  18DE               	xorwf	postinc2,w,c
  5865  000D70  A4D8               	btfss	status,2,c
  5866  000D72  D009               	goto	l14689
  5867                           
  5868                           ; BSR set to: 1
  5869  000D74  5140               	movf	strtof@eexp& (0+255),w,b
  5870  000D76  1141               	iorwf	(strtof@eexp+1)& (0+255),w,b
  5871  000D78  A4D8               	btfss	status,2,c
  5872  000D7A  D005               	goto	l14689
  5873                           
  5874                           ; BSR set to: 1
  5875  000D7C  0EFC               	movlw	252
  5876  000D7E  273E               	addwf	strtof@expon& (0+255),f,b
  5877  000D80  0EFF               	movlw	255
  5878  000D82  233F               	addwfc	(strtof@expon+1)& (0+255),f,b
  5879  000D84  D06E               	goto	l14707
  5880  000D86                     l14689:
  5881                           
  5882                           ; BSR set to: 1
  5883  000D86  5146               	movf	strtof@i& (0+255),w,b
  5884  000D88  2532               	addwf	strtof@s& (0+255),w,b
  5885  000D8A  6ED9               	movwf	fsr2l,c
  5886  000D8C  0E00               	movlw	0
  5887  000D8E  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5888  000D90  6EDA               	movwf	fsr2h,c
  5889  000D92  50DF               	movf	indf2,w,c
  5890  000D94  6F36               	movwf	??_strtof& (0+255),b
  5891  000D96  5136               	movf	??_strtof& (0+255),w,b
  5892  000D98  0100               	movlb	0	; () banked
  5893  000D9A  6F92               	movwf	isxdigit@c& (0+255),b
  5894  000D9C  6B93               	clrf	(isxdigit@c+1)& (0+255),b
  5895  000D9E  ECF6  F03B         	call	_isxdigit	;wreg free
  5896  000DA2  5192               	movf	?_isxdigit& (0+255),w,b
  5897  000DA4  1193               	iorwf	(?_isxdigit+1)& (0+255),w,b
  5898  000DA6  B4D8               	btfsc	status,2,c
  5899  000DA8  D05C               	goto	l14707
  5900                           
  5901                           ; BSR set to: 0
  5902  000DAA  0E00               	movlw	0
  5903  000DAC  0101               	movlb	1	; () banked
  5904  000DAE  6F3C               	movwf	strtof@digit& (0+255),b
  5905                           
  5906                           ; BSR set to: 1
  5907  000DB0  0ED0               	movlw	208
  5908  000DB2  6F36               	movwf	??_strtof& (0+255),b
  5909  000DB4  0EFF               	movlw	255
  5910  000DB6  6F37               	movwf	(??_strtof+1)& (0+255),b
  5911  000DB8  5146               	movf	strtof@i& (0+255),w,b
  5912  000DBA  2532               	addwf	strtof@s& (0+255),w,b
  5913  000DBC  6ED9               	movwf	fsr2l,c
  5914  000DBE  0E00               	movlw	0
  5915  000DC0  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5916  000DC2  6EDA               	movwf	fsr2h,c
  5917  000DC4  50DF               	movf	indf2,w,c
  5918  000DC6  6F38               	movwf	(??_strtof+2)& (0+255),b
  5919  000DC8  6B39               	clrf	(??_strtof+3)& (0+255),b
  5920  000DCA  5136               	movf	??_strtof& (0+255),w,b
  5921  000DCC  2738               	addwf	(??_strtof+2)& (0+255),f,b
  5922  000DCE  5137               	movf	(??_strtof+1)& (0+255),w,b
  5923  000DD0  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  5924  000DD2  5139               	movf	(??_strtof+3)& (0+255),w,b
  5925  000DD4  E10D               	bnz	l14699
  5926  000DD6  0E0A               	movlw	10
  5927  000DD8  5D38               	subwf	(??_strtof+2)& (0+255),w,b
  5928  000DDA  B0D8               	btfsc	status,0,c
  5929  000DDC  D009               	goto	l14699
  5930                           
  5931                           ; BSR set to: 1
  5932  000DDE  5146               	movf	strtof@i& (0+255),w,b
  5933  000DE0  2532               	addwf	strtof@s& (0+255),w,b
  5934  000DE2  6ED9               	movwf	fsr2l,c
  5935  000DE4  0E00               	movlw	0
  5936  000DE6  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5937  000DE8  6EDA               	movwf	fsr2h,c
  5938  000DEA  50DF               	movf	indf2,w,c
  5939  000DEC  0FD0               	addlw	208
  5940  000DEE  D011               	goto	L4
  5941  000DF0                     l14699:
  5942                           
  5943                           ; BSR set to: 1
  5944  000DF0  5146               	movf	strtof@i& (0+255),w,b
  5945  000DF2  2532               	addwf	strtof@s& (0+255),w,b
  5946  000DF4  6ED9               	movwf	fsr2l,c
  5947  000DF6  0E00               	movlw	0
  5948  000DF8  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  5949  000DFA  6EDA               	movwf	fsr2h,c
  5950  000DFC  50DF               	movf	indf2,w,c
  5951  000DFE  6F36               	movwf	??_strtof& (0+255),b
  5952  000E00  5136               	movf	??_strtof& (0+255),w,b
  5953  000E02  0100               	movlb	0	; () banked
  5954  000E04  6F92               	movwf	toupper@c& (0+255),b
  5955  000E06  6B93               	clrf	(toupper@c+1)& (0+255),b
  5956  000E08  EC34  F03F         	call	_toupper	;wreg free
  5957  000E0C  5192               	movf	?_toupper& (0+255),w,b
  5958  000E0E  0FC9               	addlw	201
  5959  000E10  0101               	movlb	1	; () banked
  5960  000E12                     L4:
  5961  000E12  6F3C               	movwf	strtof@digit& (0+255),b
  5962                           
  5963                           ; BSR set to: 1
  5964  000E14  BF41               	btfsc	(strtof@eexp+1)& (0+255),7,b
  5965  000E16  D006               	goto	u17730
  5966  000E18  5141               	movf	(strtof@eexp+1)& (0+255),w,b
  5967  000E1A  E121               	bnz	l14705
  5968  000E1C  0E08               	movlw	8
  5969  000E1E  5D40               	subwf	strtof@eexp& (0+255),w,b
  5970  000E20  B0D8               	btfsc	status,0,c
  5971  000E22  D01D               	goto	l14705
  5972  000E24                     u17730:
  5973                           
  5974                           ; BSR set to: 1
  5975  000E24  5140               	movf	strtof@eexp& (0+255),w,b
  5976  000E26  0807               	sublw	7
  5977  000E28  6F36               	movwf	??_strtof& (0+255),b
  5978  000E2A  90D8               	bcf	status,0,c
  5979  000E2C  3736               	rlcf	??_strtof& (0+255),f,b
  5980  000E2E  90D8               	bcf	status,0,c
  5981  000E30  3736               	rlcf	??_strtof& (0+255),f,b
  5982  000E32  C13C  F137         	movff	strtof@digit,??_strtof+1
  5983  000E36  6B38               	clrf	(??_strtof+2)& (0+255),b
  5984  000E38  6B39               	clrf	(??_strtof+3)& (0+255),b
  5985  000E3A  6B3A               	clrf	(??_strtof+4)& (0+255),b
  5986  000E3C  2B36               	incf	??_strtof& (0+255),f,b
  5987  000E3E  D005               	goto	u17740
  5988  000E40                     u17745:
  5989  000E40  90D8               	bcf	status,0,c
  5990  000E42  3737               	rlcf	(??_strtof+1)& (0+255),f,b
  5991  000E44  3738               	rlcf	(??_strtof+2)& (0+255),f,b
  5992  000E46  3739               	rlcf	(??_strtof+3)& (0+255),f,b
  5993  000E48  373A               	rlcf	(??_strtof+4)& (0+255),f,b
  5994  000E4A                     u17740:
  5995  000E4A  2F36               	decfsz	??_strtof& (0+255),f,b
  5996  000E4C  D7F9               	goto	u17745
  5997  000E4E  5137               	movf	(??_strtof+1)& (0+255),w,b
  5998  000E50  1342               	iorwf	strtof@_u& (0+255),f,b
  5999  000E52  5138               	movf	(??_strtof+2)& (0+255),w,b
  6000  000E54  1343               	iorwf	(strtof@_u+1)& (0+255),f,b
  6001  000E56  5139               	movf	(??_strtof+3)& (0+255),w,b
  6002  000E58  1344               	iorwf	(strtof@_u+2)& (0+255),f,b
  6003  000E5A  513A               	movf	(??_strtof+4)& (0+255),w,b
  6004  000E5C  1345               	iorwf	(strtof@_u+3)& (0+255),f,b
  6005  000E5E                     l14705:
  6006                           
  6007                           ; BSR set to: 1
  6008  000E5E  4B40               	infsnz	strtof@eexp& (0+255),f,b
  6009  000E60  2B41               	incf	(strtof@eexp+1)& (0+255),f,b
  6010  000E62                     l14707:
  6011  000E62  0101               	movlb	1	; () banked
  6012  000E64                     L2:
  6013  000E64  2B46               	incf	strtof@i& (0+255),f,b
  6014  000E66                     l14709:
  6015                           
  6016                           ; BSR set to: 1
  6017  000E66  B93D               	btfsc	strtof@flags& (0+255),4,b
  6018  000E68  D767               	goto	l14677
  6019  000E6A                     u17750:
  6020                           
  6021                           ; BSR set to: 1
  6022  000E6A  5146               	movf	strtof@i& (0+255),w,b
  6023  000E6C  2532               	addwf	strtof@s& (0+255),w,b
  6024  000E6E  6ED9               	movwf	fsr2l,c
  6025  000E70  0E00               	movlw	0
  6026  000E72  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6027  000E74  6EDA               	movwf	fsr2h,c
  6028  000E76  0E70               	movlw	112
  6029  000E78  18DE               	xorwf	postinc2,w,c
  6030  000E7A  B4D8               	btfsc	status,2,c
  6031  000E7C  D013               	goto	l14719
  6032                           
  6033                           ; BSR set to: 1
  6034  000E7E  5146               	movf	strtof@i& (0+255),w,b
  6035  000E80  2532               	addwf	strtof@s& (0+255),w,b
  6036  000E82  6ED9               	movwf	fsr2l,c
  6037  000E84  0E00               	movlw	0
  6038  000E86  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6039  000E88  6EDA               	movwf	fsr2h,c
  6040  000E8A  0E50               	movlw	80
  6041  000E8C  18DE               	xorwf	postinc2,w,c
  6042  000E8E  B4D8               	btfsc	status,2,c
  6043  000E90  D009               	goto	l14719
  6044                           
  6045                           ; BSR set to: 1
  6046  000E92  0E00               	movlw	0
  6047  000E94  6F32               	movwf	?_strtof& (0+255),b
  6048  000E96  0E00               	movlw	0
  6049  000E98  6F33               	movwf	(?_strtof+1)& (0+255),b
  6050  000E9A  0E00               	movlw	0
  6051  000E9C  6F34               	movwf	(?_strtof+2)& (0+255),b
  6052  000E9E  0E00               	movlw	0
  6053  000EA0  6F35               	movwf	(?_strtof+3)& (0+255),b
  6054  000EA2  0012               	return	
  6055  000EA4                     l14719:
  6056                           
  6057                           ; BSR set to: 1
  6058  000EA4  2B46               	incf	strtof@i& (0+255),f,b
  6059                           
  6060                           ; BSR set to: 1
  6061  000EA6  5146               	movf	strtof@i& (0+255),w,b
  6062  000EA8  2532               	addwf	strtof@s& (0+255),w,b
  6063  000EAA  6ED9               	movwf	fsr2l,c
  6064  000EAC  0E00               	movlw	0
  6065  000EAE  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6066  000EB0  6EDA               	movwf	fsr2h,c
  6067  000EB2  0E2B               	movlw	43
  6068  000EB4  18DE               	xorwf	postinc2,w,c
  6069  000EB6  B4D8               	btfsc	status,2,c
  6070  000EB8  D00B               	goto	L5
  6071                           
  6072                           ; BSR set to: 1
  6073                           
  6074                           ; BSR set to: 1
  6075  000EBA  5146               	movf	strtof@i& (0+255),w,b
  6076  000EBC  2532               	addwf	strtof@s& (0+255),w,b
  6077  000EBE  6ED9               	movwf	fsr2l,c
  6078  000EC0  0E00               	movlw	0
  6079  000EC2  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6080  000EC4  6EDA               	movwf	fsr2h,c
  6081  000EC6  0E2D               	movlw	45
  6082  000EC8  18DE               	xorwf	postinc2,w,c
  6083  000ECA  A4D8               	btfss	status,2,c
  6084  000ECC  D002               	goto	l14729
  6085                           
  6086                           ; BSR set to: 1
  6087  000ECE  873D               	bsf	strtof@flags& (0+255),3,b
  6088  000ED0                     L5:
  6089  000ED0  2B46               	incf	strtof@i& (0+255),f,b
  6090  000ED2                     l14729:
  6091                           
  6092                           ; BSR set to: 1
  6093  000ED2  5146               	movf	strtof@i& (0+255),w,b
  6094  000ED4  2732               	addwf	strtof@s& (0+255),f,b
  6095  000ED6  0E00               	movlw	0
  6096  000ED8  2333               	addwfc	(strtof@s+1)& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 1
  6099  000EDA  0E00               	movlw	0
  6100  000EDC  6F46               	movwf	strtof@i& (0+255),b
  6101  000EDE  D001               	goto	l14735
  6102  000EE0                     l14733:
  6103                           
  6104                           ; BSR set to: 1
  6105  000EE0  2B46               	incf	strtof@i& (0+255),f,b
  6106  000EE2                     l14735:
  6107                           
  6108                           ; BSR set to: 1
  6109  000EE2  5146               	movf	strtof@i& (0+255),w,b
  6110  000EE4  2532               	addwf	strtof@s& (0+255),w,b
  6111  000EE6  6ED9               	movwf	fsr2l,c
  6112  000EE8  0E00               	movlw	0
  6113  000EEA  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6114  000EEC  6EDA               	movwf	fsr2h,c
  6115  000EEE  0E30               	movlw	48
  6116  000EF0  18DE               	xorwf	postinc2,w,c
  6117  000EF2  B4D8               	btfsc	status,2,c
  6118  000EF4  D7F5               	goto	l14733
  6119                           
  6120                           ; BSR set to: 1
  6121  000EF6  0E00               	movlw	0
  6122  000EF8  6F41               	movwf	(strtof@eexp+1)& (0+255),b
  6123  000EFA  0E00               	movlw	0
  6124  000EFC  6F40               	movwf	strtof@eexp& (0+255),b
  6125  000EFE  D029               	goto	l14749
  6126  000F00                     l14739:
  6127                           
  6128                           ; BSR set to: 1
  6129  000F00  5146               	movf	strtof@i& (0+255),w,b
  6130  000F02  B4D8               	btfsc	status,2,c
  6131  000F04  D00F               	goto	l14743
  6132                           
  6133                           ; BSR set to: 1
  6134  000F06  C140  F08C         	movff	strtof@eexp,___wmul@multiplier
  6135  000F0A  C141  F08D         	movff	strtof@eexp+1,___wmul@multiplier+1
  6136  000F0E  0E00               	movlw	0
  6137  000F10  0100               	movlb	0	; () banked
  6138  000F12  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6139  000F14  0E0A               	movlw	10
  6140  000F16  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6141  000F18  ECB0  F001         	call	___wmul	;wreg free
  6142  000F1C  C08C  F140         	movff	?___wmul,strtof@eexp
  6143  000F20  C08D  F141         	movff	?___wmul+1,strtof@eexp+1
  6144  000F24                     l14743:
  6145  000F24  0ED0               	movlw	208
  6146  000F26  0101               	movlb	1	; () banked
  6147  000F28  6F36               	movwf	??_strtof& (0+255),b
  6148  000F2A  0EFF               	movlw	255
  6149  000F2C  6F37               	movwf	(??_strtof+1)& (0+255),b
  6150  000F2E  5146               	movf	strtof@i& (0+255),w,b
  6151  000F30  2532               	addwf	strtof@s& (0+255),w,b
  6152  000F32  6ED9               	movwf	fsr2l,c
  6153  000F34  0E00               	movlw	0
  6154  000F36  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6155  000F38  6EDA               	movwf	fsr2h,c
  6156  000F3A  50DF               	movf	indf2,w,c
  6157  000F3C  6F38               	movwf	(??_strtof+2)& (0+255),b
  6158  000F3E  6B39               	clrf	(??_strtof+3)& (0+255),b
  6159  000F40  5136               	movf	??_strtof& (0+255),w,b
  6160  000F42  2738               	addwf	(??_strtof+2)& (0+255),f,b
  6161  000F44  5137               	movf	(??_strtof+1)& (0+255),w,b
  6162  000F46  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  6163  000F48  5138               	movf	(??_strtof+2)& (0+255),w,b
  6164  000F4A  2740               	addwf	strtof@eexp& (0+255),f,b
  6165  000F4C  5139               	movf	(??_strtof+3)& (0+255),w,b
  6166  000F4E  2341               	addwfc	(strtof@eexp+1)& (0+255),f,b
  6167                           
  6168                           ; BSR set to: 1
  6169  000F50  2B46               	incf	strtof@i& (0+255),f,b
  6170  000F52                     l14749:
  6171                           
  6172                           ; BSR set to: 1
  6173  000F52  0ED0               	movlw	208
  6174  000F54  6F36               	movwf	??_strtof& (0+255),b
  6175  000F56  0EFF               	movlw	255
  6176  000F58  6F37               	movwf	(??_strtof+1)& (0+255),b
  6177  000F5A  5146               	movf	strtof@i& (0+255),w,b
  6178  000F5C  2532               	addwf	strtof@s& (0+255),w,b
  6179  000F5E  6ED9               	movwf	fsr2l,c
  6180  000F60  0E00               	movlw	0
  6181  000F62  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6182  000F64  6EDA               	movwf	fsr2h,c
  6183  000F66  50DF               	movf	indf2,w,c
  6184  000F68  6F38               	movwf	(??_strtof+2)& (0+255),b
  6185  000F6A  6B39               	clrf	(??_strtof+3)& (0+255),b
  6186  000F6C  5136               	movf	??_strtof& (0+255),w,b
  6187  000F6E  2738               	addwf	(??_strtof+2)& (0+255),f,b
  6188  000F70  5137               	movf	(??_strtof+1)& (0+255),w,b
  6189  000F72  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  6190  000F74  5139               	movf	(??_strtof+3)& (0+255),w,b
  6191  000F76  E104               	bnz	u17820
  6192  000F78  0E0A               	movlw	10
  6193  000F7A  5D38               	subwf	(??_strtof+2)& (0+255),w,b
  6194  000F7C  A0D8               	btfss	status,0,c
  6195  000F7E  D7C0               	goto	l14739
  6196  000F80                     u17820:
  6197                           
  6198                           ; BSR set to: 1
  6199  000F80  5146               	movf	strtof@i& (0+255),w,b
  6200  000F82  A4D8               	btfss	status,2,c
  6201  000F84  D009               	goto	l2570
  6202                           
  6203                           ; BSR set to: 1
  6204  000F86  0E00               	movlw	0
  6205  000F88  6F32               	movwf	?_strtof& (0+255),b
  6206  000F8A  0E00               	movlw	0
  6207  000F8C  6F33               	movwf	(?_strtof+1)& (0+255),b
  6208  000F8E  0E00               	movlw	0
  6209  000F90  6F34               	movwf	(?_strtof+2)& (0+255),b
  6210  000F92  0E00               	movlw	0
  6211  000F94  6F35               	movwf	(?_strtof+3)& (0+255),b
  6212  000F96  0012               	return	
  6213  000F98                     l2570:
  6214                           
  6215                           ; BSR set to: 1
  6216  000F98  A73D               	btfss	strtof@flags& (0+255),3,b
  6217  000F9A  D004               	goto	l14759
  6218                           
  6219                           ; BSR set to: 1
  6220  000F9C  6D40               	negf	strtof@eexp& (0+255),b
  6221  000F9E  1F41               	comf	(strtof@eexp+1)& (0+255),f,b
  6222  000FA0  B0D8               	btfsc	status,0,c
  6223  000FA2  2B41               	incf	(strtof@eexp+1)& (0+255),f,b
  6224  000FA4                     l14759:
  6225                           
  6226                           ; BSR set to: 1
  6227  000FA4  5140               	movf	strtof@eexp& (0+255),w,b
  6228  000FA6  273E               	addwf	strtof@expon& (0+255),f,b
  6229  000FA8  5141               	movf	(strtof@eexp+1)& (0+255),w,b
  6230  000FAA  233F               	addwfc	(strtof@expon+1)& (0+255),f,b
  6231                           
  6232                           ; BSR set to: 1
  6233  000FAC  5134               	movf	strtof@res& (0+255),w,b
  6234  000FAE  1135               	iorwf	(strtof@res+1)& (0+255),w,b
  6235  000FB0  B4D8               	btfsc	status,2,c
  6236  000FB2  D00E               	goto	l14765
  6237                           
  6238                           ; BSR set to: 1
  6239  000FB4  5146               	movf	strtof@i& (0+255),w,b
  6240  000FB6  2532               	addwf	strtof@s& (0+255),w,b
  6241  000FB8  6F36               	movwf	??_strtof& (0+255),b
  6242  000FBA  0E00               	movlw	0
  6243  000FBC  2133               	addwfc	(strtof@s+1)& (0+255),w,b
  6244  000FBE  6F37               	movwf	(??_strtof+1)& (0+255),b
  6245  000FC0  C134  FFD9         	movff	strtof@res,fsr2l
  6246  000FC4  C135  FFDA         	movff	strtof@res+1,fsr2h
  6247  000FC8  C136  FFDE         	movff	??_strtof,postinc2
  6248  000FCC  C137  FFDD         	movff	??_strtof+1,postdec2
  6249  000FD0                     l14765:
  6250                           
  6251                           ; BSR set to: 1
  6252  000FD0  5142               	movf	strtof@_u& (0+255),w,b
  6253  000FD2  1143               	iorwf	(strtof@_u+1)& (0+255),w,b
  6254  000FD4  1144               	iorwf	(strtof@_u+2)& (0+255),w,b
  6255  000FD6  1145               	iorwf	(strtof@_u+3)& (0+255),w,b
  6256  000FD8  A4D8               	btfss	status,2,c
  6257  000FDA  D009               	goto	l14771
  6258                           
  6259                           ; BSR set to: 1
  6260  000FDC  0E00               	movlw	0
  6261  000FDE  6F32               	movwf	?_strtof& (0+255),b
  6262  000FE0  0E00               	movlw	0
  6263  000FE2  6F33               	movwf	(?_strtof+1)& (0+255),b
  6264  000FE4  0E00               	movlw	0
  6265  000FE6  6F34               	movwf	(?_strtof+2)& (0+255),b
  6266  000FE8  0E00               	movlw	0
  6267  000FEA  6F35               	movwf	(?_strtof+3)& (0+255),b
  6268  000FEC  0012               	return	
  6269  000FEE                     l14771:
  6270                           
  6271                           ; BSR set to: 1
  6272  000FEE  0E80               	movlw	128
  6273  000FF0  6542               	cpfsgt	strtof@_u& (0+255),b
  6274  000FF2  D011               	goto	l14777
  6275                           
  6276                           ; BSR set to: 1
  6277  000FF4  0E00               	movlw	0
  6278  000FF6  2742               	addwf	strtof@_u& (0+255),f,b
  6279  000FF8  0E01               	movlw	1
  6280  000FFA  2343               	addwfc	(strtof@_u+1)& (0+255),f,b
  6281  000FFC  0E00               	movlw	0
  6282  000FFE  2344               	addwfc	(strtof@_u+2)& (0+255),f,b
  6283  001000  0E00               	movlw	0
  6284  001002  2345               	addwfc	(strtof@_u+3)& (0+255),f,b
  6285  001004  D008               	goto	l14777
  6286  001006                     l14775:
  6287                           
  6288                           ; BSR set to: 1
  6289  001006  90D8               	bcf	status,0,c
  6290  001008  3742               	rlcf	strtof@_u& (0+255),f,b
  6291  00100A  3743               	rlcf	(strtof@_u+1)& (0+255),f,b
  6292  00100C  3744               	rlcf	(strtof@_u+2)& (0+255),f,b
  6293  00100E  3745               	rlcf	(strtof@_u+3)& (0+255),f,b
  6294  001010  073E               	decf	strtof@expon& (0+255),f,b
  6295  001012  A0D8               	btfss	status,0,c
  6296  001014  073F               	decf	(strtof@expon+1)& (0+255),f,b
  6297  001016                     l14777:
  6298                           
  6299                           ; BSR set to: 1
  6300  001016  AF45               	btfss	(strtof@_u+3)& (0+255),7,b
  6301  001018  D7F6               	goto	l14775
  6302                           
  6303                           ; BSR set to: 1
  6304  00101A  AF3F               	btfss	(strtof@expon+1)& (0+255),7,b
  6305  00101C  D012               	goto	l14783
  6306  00101E  0E83               	movlw	131
  6307  001020  5D3E               	subwf	strtof@expon& (0+255),w,b
  6308  001022  0EFF               	movlw	255
  6309  001024  593F               	subwfb	(strtof@expon+1)& (0+255),w,b
  6310  001026  B0D8               	btfsc	status,0,c
  6311  001028  D00C               	goto	l14783
  6312                           
  6313                           ; BSR set to: 1
  6314  00102A  0EFF               	movlw	255
  6315  00102C  6F3F               	movwf	(strtof@expon+1)& (0+255),b
  6316  00102E  0E81               	movlw	129
  6317  001030  6F3E               	movwf	strtof@expon& (0+255),b
  6318  001032  0E00               	movlw	0
  6319  001034  6F42               	movwf	strtof@_u& (0+255),b
  6320  001036  0E00               	movlw	0
  6321  001038  6F43               	movwf	(strtof@_u+1)& (0+255),b
  6322  00103A  0E00               	movlw	0
  6323  00103C  6F44               	movwf	(strtof@_u+2)& (0+255),b
  6324  00103E  0E00               	movlw	0
  6325  001040  6F45               	movwf	(strtof@_u+3)& (0+255),b
  6326  001042                     l14783:
  6327                           
  6328                           ; BSR set to: 1
  6329  001042  0E81               	movlw	129
  6330  001044  193E               	xorwf	strtof@expon& (0+255),w,b
  6331  001046  E103               	bnz	u17900
  6332  001048  293F               	incf	(strtof@expon+1)& (0+255),w,b
  6333  00104A  B4D8               	btfsc	status,2,c
  6334  00104C  D008               	goto	l14787
  6335  00104E                     u17900:
  6336                           
  6337                           ; BSR set to: 1
  6338  00104E  90D8               	bcf	status,0,c
  6339  001050  3742               	rlcf	strtof@_u& (0+255),f,b
  6340  001052  3743               	rlcf	(strtof@_u+1)& (0+255),f,b
  6341  001054  3744               	rlcf	(strtof@_u+2)& (0+255),f,b
  6342  001056  3745               	rlcf	(strtof@_u+3)& (0+255),f,b
  6343  001058  073E               	decf	strtof@expon& (0+255),f,b
  6344  00105A  A0D8               	btfss	status,0,c
  6345  00105C  073F               	decf	(strtof@expon+1)& (0+255),f,b
  6346  00105E                     l14787:
  6347                           
  6348                           ; BSR set to: 1
  6349  00105E  BF3F               	btfsc	(strtof@expon+1)& (0+255),7,b
  6350  001060  D012               	goto	l14791
  6351  001062  513F               	movf	(strtof@expon+1)& (0+255),w,b
  6352  001064  E104               	bnz	u17910
  6353  001066  0E80               	movlw	128
  6354  001068  5D3E               	subwf	strtof@expon& (0+255),w,b
  6355  00106A  A0D8               	btfss	status,0,c
  6356  00106C  D00C               	goto	l14791
  6357  00106E                     u17910:
  6358                           
  6359                           ; BSR set to: 1
  6360  00106E  0E00               	movlw	0
  6361  001070  6F42               	movwf	strtof@_u& (0+255),b
  6362  001072  0E00               	movlw	0
  6363  001074  6F43               	movwf	(strtof@_u+1)& (0+255),b
  6364  001076  0E00               	movlw	0
  6365  001078  6F44               	movwf	(strtof@_u+2)& (0+255),b
  6366  00107A  0E00               	movlw	0
  6367  00107C  6F45               	movwf	(strtof@_u+3)& (0+255),b
  6368  00107E  0E00               	movlw	0
  6369  001080  6F3F               	movwf	(strtof@expon+1)& (0+255),b
  6370  001082  0E80               	movlw	128
  6371  001084  6F3E               	movwf	strtof@expon& (0+255),b
  6372  001086                     l14791:
  6373                           
  6374                           ; BSR set to: 1
  6375  001086  0E09               	movlw	9
  6376  001088  6F36               	movwf	??_strtof& (0+255),b
  6377  00108A                     u17925:
  6378  00108A  90D8               	bcf	status,0,c
  6379  00108C  3345               	rrcf	(strtof@_u+3)& (0+255),f,b
  6380  00108E  3344               	rrcf	(strtof@_u+2)& (0+255),f,b
  6381  001090  3343               	rrcf	(strtof@_u+1)& (0+255),f,b
  6382  001092  3342               	rrcf	strtof@_u& (0+255),f,b
  6383  001094  2F36               	decfsz	??_strtof& (0+255),f,b
  6384  001096  D7F9               	goto	u17925
  6385                           
  6386                           ; BSR set to: 1
  6387  001098  0EFF               	movlw	255
  6388  00109A  1742               	andwf	strtof@_u& (0+255),f,b
  6389  00109C  0EFF               	movlw	255
  6390  00109E  1743               	andwf	(strtof@_u+1)& (0+255),f,b
  6391  0010A0  0E7F               	movlw	127
  6392  0010A2  1744               	andwf	(strtof@_u+2)& (0+255),f,b
  6393  0010A4  0E00               	movlw	0
  6394  0010A6  1745               	andwf	(strtof@_u+3)& (0+255),f,b
  6395                           
  6396                           ; BSR set to: 1
  6397  0010A8  0E7F               	movlw	127
  6398  0010AA  253E               	addwf	strtof@expon& (0+255),w,b
  6399  0010AC  6F36               	movwf	??_strtof& (0+255),b
  6400  0010AE  0E00               	movlw	0
  6401  0010B0  213F               	addwfc	(strtof@expon+1)& (0+255),w,b
  6402  0010B2  6F37               	movwf	(??_strtof+1)& (0+255),b
  6403  0010B4  0EFF               	movlw	255
  6404  0010B6  1536               	andwf	??_strtof& (0+255),w,b
  6405  0010B8  6F38               	movwf	(??_strtof+2)& (0+255),b
  6406  0010BA  6B39               	clrf	(??_strtof+3)& (0+255),b
  6407  0010BC  6B3A               	clrf	(??_strtof+4)& (0+255),b
  6408  0010BE  6B3B               	clrf	(??_strtof+5)& (0+255),b
  6409  0010C0  0E17               	movlw	23
  6410  0010C2                     u17935:
  6411  0010C2  90D8               	bcf	status,0,c
  6412  0010C4  3738               	rlcf	(??_strtof+2)& (0+255),f,b
  6413  0010C6  3739               	rlcf	(??_strtof+3)& (0+255),f,b
  6414  0010C8  373A               	rlcf	(??_strtof+4)& (0+255),f,b
  6415  0010CA  373B               	rlcf	(??_strtof+5)& (0+255),f,b
  6416  0010CC  2EE8               	decfsz	wreg,f,c
  6417  0010CE  D7F9               	goto	u17935
  6418  0010D0  5138               	movf	(??_strtof+2)& (0+255),w,b
  6419  0010D2  1342               	iorwf	strtof@_u& (0+255),f,b
  6420  0010D4  5139               	movf	(??_strtof+3)& (0+255),w,b
  6421  0010D6  1343               	iorwf	(strtof@_u+1)& (0+255),f,b
  6422  0010D8  513A               	movf	(??_strtof+4)& (0+255),w,b
  6423  0010DA  1344               	iorwf	(strtof@_u+2)& (0+255),f,b
  6424  0010DC  513B               	movf	(??_strtof+5)& (0+255),w,b
  6425  0010DE  1345               	iorwf	(strtof@_u+3)& (0+255),f,b
  6426  0010E0  D256               	goto	l2496
  6427  0010E2                     l2581:
  6428                           
  6429                           ; BSR set to: 1
  6430  0010E2  B93D               	btfsc	strtof@flags& (0+255),4,b
  6431  0010E4  D00A               	goto	l14803
  6432                           
  6433                           ; BSR set to: 1
  6434  0010E6  C132  FFD9         	movff	strtof@s,fsr2l
  6435  0010EA  C133  FFDA         	movff	strtof@s+1,fsr2h
  6436  0010EE  0E2E               	movlw	46
  6437  0010F0  18DE               	xorwf	postinc2,w,c
  6438  0010F2  A4D8               	btfss	status,2,c
  6439  0010F4  D002               	goto	l14803
  6440                           
  6441                           ; BSR set to: 1
  6442  0010F6  893D               	bsf	strtof@flags& (0+255),4,b
  6443  0010F8  D051               	goto	l2590
  6444  0010FA                     l14803:
  6445                           
  6446                           ; BSR set to: 1
  6447  0010FA  0ED0               	movlw	208
  6448  0010FC  6F36               	movwf	??_strtof& (0+255),b
  6449  0010FE  0EFF               	movlw	255
  6450  001100  6F37               	movwf	(??_strtof+1)& (0+255),b
  6451  001102  C132  FFD9         	movff	strtof@s,fsr2l
  6452  001106  C133  FFDA         	movff	strtof@s+1,fsr2h
  6453  00110A  50DF               	movf	indf2,w,c
  6454  00110C  6F38               	movwf	(??_strtof+2)& (0+255),b
  6455  00110E  6B39               	clrf	(??_strtof+3)& (0+255),b
  6456  001110  5136               	movf	??_strtof& (0+255),w,b
  6457  001112  2738               	addwf	(??_strtof+2)& (0+255),f,b
  6458  001114  5137               	movf	(??_strtof+1)& (0+255),w,b
  6459  001116  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  6460  001118  5139               	movf	(??_strtof+3)& (0+255),w,b
  6461  00111A  E143               	bnz	l14821
  6462  00111C  0E0A               	movlw	10
  6463  00111E  5D38               	subwf	(??_strtof+2)& (0+255),w,b
  6464  001120  B0D8               	btfsc	status,0,c
  6465  001122  D03F               	goto	l14821
  6466                           
  6467                           ; BSR set to: 1
  6468  001124  833D               	bsf	strtof@flags& (0+255),1,b
  6469                           
  6470                           ; BSR set to: 1
  6471  001126  0E09               	movlw	9
  6472  001128  1940               	xorwf	strtof@eexp& (0+255),w,b
  6473  00112A  1141               	iorwf	(strtof@eexp+1)& (0+255),w,b
  6474  00112C  B4D8               	btfsc	status,2,c
  6475  00112E  D032               	goto	l2588
  6476                           
  6477                           ; BSR set to: 1
  6478  001130  A93D               	btfss	strtof@flags& (0+255),4,b
  6479  001132  D003               	goto	l2589
  6480                           
  6481                           ; BSR set to: 1
  6482  001134  073E               	decf	strtof@expon& (0+255),f,b
  6483  001136  A0D8               	btfss	status,0,c
  6484  001138  073F               	decf	(strtof@expon+1)& (0+255),f,b
  6485  00113A                     l2589:
  6486                           
  6487                           ; BSR set to: 1
  6488  00113A  4B40               	infsnz	strtof@eexp& (0+255),f,b
  6489  00113C  2B41               	incf	(strtof@eexp+1)& (0+255),f,b
  6490                           
  6491                           ; BSR set to: 1
  6492  00113E  C142  F08C         	movff	strtof@_u,___lmul@multiplier
  6493  001142  C143  F08D         	movff	strtof@_u+1,___lmul@multiplier+1
  6494  001146  C144  F08E         	movff	strtof@_u+2,___lmul@multiplier+2
  6495  00114A  C145  F08F         	movff	strtof@_u+3,___lmul@multiplier+3
  6496  00114E  0E0A               	movlw	10
  6497  001150  0100               	movlb	0	; () banked
  6498  001152  6F90               	movwf	___lmul@multiplicand& (0+255),b
  6499  001154  0E00               	movlw	0
  6500  001156  6F91               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6501  001158  0E00               	movlw	0
  6502  00115A  6F92               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6503  00115C  0E00               	movlw	0
  6504  00115E  6F93               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6505  001160  ECAC  F03C         	call	___lmul	;wreg free
  6506  001164  C08C  F142         	movff	?___lmul,strtof@_u
  6507  001168  C08D  F143         	movff	?___lmul+1,strtof@_u+1
  6508  00116C  C08E  F144         	movff	?___lmul+2,strtof@_u+2
  6509  001170  C08F  F145         	movff	?___lmul+3,strtof@_u+3
  6510                           
  6511                           ; BSR set to: 0
  6512  001174  C132  FFD9         	movff	strtof@s,fsr2l
  6513  001178  C133  FFDA         	movff	strtof@s+1,fsr2h
  6514  00117C  50DF               	movf	indf2,w,c
  6515  00117E  0101               	movlb	1	; () banked
  6516  001180  6F36               	movwf	??_strtof& (0+255),b
  6517  001182  0ED0               	movlw	208
  6518  001184  2736               	addwf	??_strtof& (0+255),f,b
  6519  001186  5136               	movf	??_strtof& (0+255),w,b
  6520  001188  2742               	addwf	strtof@_u& (0+255),f,b
  6521  00118A  0E00               	movlw	0
  6522  00118C  2343               	addwfc	(strtof@_u+1)& (0+255),f,b
  6523  00118E  2344               	addwfc	(strtof@_u+2)& (0+255),f,b
  6524  001190  2345               	addwfc	(strtof@_u+3)& (0+255),f,b
  6525  001192  D004               	goto	l2590
  6526  001194                     l2588:
  6527                           
  6528                           ; BSR set to: 1
  6529  001194  B93D               	btfsc	strtof@flags& (0+255),4,b
  6530  001196  D002               	goto	l2590
  6531                           
  6532                           ; BSR set to: 1
  6533  001198  4B3E               	infsnz	strtof@expon& (0+255),f,b
  6534  00119A  2B3F               	incf	(strtof@expon+1)& (0+255),f,b
  6535  00119C                     l2590:
  6536                           
  6537                           ; BSR set to: 1
  6538  00119C  4B32               	infsnz	strtof@s& (0+255),f,b
  6539  00119E  2B33               	incf	(strtof@s+1)& (0+255),f,b
  6540  0011A0  D7A0               	goto	l2581
  6541  0011A2                     l14821:
  6542                           
  6543                           ; BSR set to: 1
  6544  0011A2  0E00               	movlw	0
  6545  0011A4  6F41               	movwf	(strtof@eexp+1)& (0+255),b
  6546  0011A6  0E00               	movlw	0
  6547  0011A8  6F40               	movwf	strtof@eexp& (0+255),b
  6548                           
  6549                           ; BSR set to: 1
  6550  0011AA  C132  FFD9         	movff	strtof@s,fsr2l
  6551  0011AE  C133  FFDA         	movff	strtof@s+1,fsr2h
  6552  0011B2  0E65               	movlw	101
  6553  0011B4  18DE               	xorwf	postinc2,w,c
  6554  0011B6  B4D8               	btfsc	status,2,c
  6555  0011B8  D008               	goto	u18010
  6556                           
  6557                           ; BSR set to: 1
  6558  0011BA  C132  FFD9         	movff	strtof@s,fsr2l
  6559  0011BE  C133  FFDA         	movff	strtof@s+1,fsr2h
  6560  0011C2  0E45               	movlw	69
  6561  0011C4  18DE               	xorwf	postinc2,w,c
  6562  0011C6  A4D8               	btfss	status,2,c
  6563  0011C8  D0AE               	goto	l14865
  6564  0011CA                     u18010:
  6565                           
  6566                           ; BSR set to: 1
  6567  0011CA  4B32               	infsnz	strtof@s& (0+255),f,b
  6568  0011CC  2B33               	incf	(strtof@s+1)& (0+255),f,b
  6569  0011CE  C132  FFD9         	movff	strtof@s,fsr2l
  6570  0011D2  C133  FFDA         	movff	strtof@s+1,fsr2h
  6571  0011D6  0E2D               	movlw	45
  6572  0011D8  18DE               	xorwf	postinc2,w,c
  6573  0011DA  A4D8               	btfss	status,2,c
  6574  0011DC  D002               	goto	l14831
  6575                           
  6576                           ; BSR set to: 1
  6577  0011DE  873D               	bsf	strtof@flags& (0+255),3,b
  6578  0011E0  D008               	goto	u18030
  6579  0011E2                     l14831:
  6580                           
  6581                           ; BSR set to: 1
  6582  0011E2  C132  FFD9         	movff	strtof@s,fsr2l
  6583  0011E6  C133  FFDA         	movff	strtof@s+1,fsr2h
  6584  0011EA  0E2B               	movlw	43
  6585  0011EC  18DE               	xorwf	postinc2,w,c
  6586  0011EE  A4D8               	btfss	status,2,c
  6587  0011F0  D002               	goto	l14837
  6588  0011F2                     u18030:
  6589                           
  6590                           ; BSR set to: 1
  6591  0011F2  4B32               	infsnz	strtof@s& (0+255),f,b
  6592  0011F4  2B33               	incf	(strtof@s+1)& (0+255),f,b
  6593  0011F6                     l14837:
  6594                           
  6595                           ; BSR set to: 1
  6596  0011F6  C132  FFD9         	movff	strtof@s,fsr2l
  6597  0011FA  C133  FFDA         	movff	strtof@s+1,fsr2h
  6598  0011FE  0E30               	movlw	48
  6599  001200  18DE               	xorwf	postinc2,w,c
  6600  001202  B4D8               	btfsc	status,2,c
  6601  001204  D7F6               	goto	u18030
  6602                           
  6603                           ; BSR set to: 1
  6604  001206  0ED0               	movlw	208
  6605  001208  6F36               	movwf	??_strtof& (0+255),b
  6606  00120A  0EFF               	movlw	255
  6607  00120C  6F37               	movwf	(??_strtof+1)& (0+255),b
  6608  00120E  C132  FFD9         	movff	strtof@s,fsr2l
  6609  001212  C133  FFDA         	movff	strtof@s+1,fsr2h
  6610  001216  50DF               	movf	indf2,w,c
  6611  001218  6F38               	movwf	(??_strtof+2)& (0+255),b
  6612  00121A  6B39               	clrf	(??_strtof+3)& (0+255),b
  6613  00121C  5136               	movf	??_strtof& (0+255),w,b
  6614  00121E  2738               	addwf	(??_strtof+2)& (0+255),f,b
  6615  001220  5137               	movf	(??_strtof+1)& (0+255),w,b
  6616  001222  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  6617  001224  5139               	movf	(??_strtof+3)& (0+255),w,b
  6618  001226  E179               	bnz	l14861
  6619  001228  0E0A               	movlw	10
  6620  00122A  5D38               	subwf	(??_strtof+2)& (0+255),w,b
  6621  00122C  B0D8               	btfsc	status,0,c
  6622  00122E  D075               	goto	l14861
  6623                           
  6624                           ; BSR set to: 1
  6625  001230  C132  FFD9         	movff	strtof@s,fsr2l
  6626  001234  C133  FFDA         	movff	strtof@s+1,fsr2h
  6627  001238  50DF               	movf	indf2,w,c
  6628  00123A  6F36               	movwf	??_strtof& (0+255),b
  6629  00123C  0ED0               	movlw	208
  6630  00123E  2736               	addwf	??_strtof& (0+255),f,b
  6631  001240  5136               	movf	??_strtof& (0+255),w,b
  6632  001242  6F40               	movwf	strtof@eexp& (0+255),b
  6633  001244  6B41               	clrf	(strtof@eexp+1)& (0+255),b
  6634                           
  6635                           ; BSR set to: 1
  6636  001246  4B32               	infsnz	strtof@s& (0+255),f,b
  6637  001248  2B33               	incf	(strtof@s+1)& (0+255),f,b
  6638                           
  6639                           ; BSR set to: 1
  6640  00124A  0ED0               	movlw	208
  6641  00124C  6F36               	movwf	??_strtof& (0+255),b
  6642  00124E  0EFF               	movlw	255
  6643  001250  6F37               	movwf	(??_strtof+1)& (0+255),b
  6644  001252  C132  FFD9         	movff	strtof@s,fsr2l
  6645  001256  C133  FFDA         	movff	strtof@s+1,fsr2h
  6646  00125A  50DF               	movf	indf2,w,c
  6647  00125C  6F38               	movwf	(??_strtof+2)& (0+255),b
  6648  00125E  6B39               	clrf	(??_strtof+3)& (0+255),b
  6649  001260  5136               	movf	??_strtof& (0+255),w,b
  6650  001262  2738               	addwf	(??_strtof+2)& (0+255),f,b
  6651  001264  5137               	movf	(??_strtof+1)& (0+255),w,b
  6652  001266  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  6653  001268  5139               	movf	(??_strtof+3)& (0+255),w,b
  6654  00126A  E157               	bnz	l14861
  6655  00126C  0E0A               	movlw	10
  6656  00126E  5D38               	subwf	(??_strtof+2)& (0+255),w,b
  6657  001270  B0D8               	btfsc	status,0,c
  6658  001272  D053               	goto	l14861
  6659                           
  6660                           ; BSR set to: 1
  6661  001274  C132  FFD9         	movff	strtof@s,fsr2l
  6662  001278  C133  FFDA         	movff	strtof@s+1,fsr2h
  6663  00127C  50DF               	movf	indf2,w,c
  6664  00127E  6F36               	movwf	??_strtof& (0+255),b
  6665  001280  0ED0               	movlw	208
  6666  001282  2736               	addwf	??_strtof& (0+255),f,b
  6667  001284  C140  F08C         	movff	strtof@eexp,___wmul@multiplier
  6668  001288  C141  F08D         	movff	strtof@eexp+1,___wmul@multiplier+1
  6669  00128C  0E00               	movlw	0
  6670  00128E  0100               	movlb	0	; () banked
  6671  001290  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6672  001292  0E0A               	movlw	10
  6673  001294  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6674  001296  ECB0  F001         	call	___wmul	;wreg free
  6675  00129A  0101               	movlb	1	; () banked
  6676  00129C  5136               	movf	??_strtof& (0+255),w,b
  6677  00129E  0100               	movlb	0	; () banked
  6678  0012A0  258C               	addwf	?___wmul& (0+255),w,b
  6679  0012A2  0101               	movlb	1	; () banked
  6680  0012A4  6F40               	movwf	strtof@eexp& (0+255),b
  6681  0012A6  0E00               	movlw	0
  6682  0012A8  0100               	movlb	0	; () banked
  6683  0012AA  218D               	addwfc	(?___wmul+1)& (0+255),w,b
  6684  0012AC  0101               	movlb	1	; () banked
  6685  0012AE  6F41               	movwf	(strtof@eexp+1)& (0+255),b
  6686                           
  6687                           ; BSR set to: 1
  6688  0012B0  4B32               	infsnz	strtof@s& (0+255),f,b
  6689  0012B2  2B33               	incf	(strtof@s+1)& (0+255),f,b
  6690                           
  6691                           ; BSR set to: 1
  6692  0012B4  0ED0               	movlw	208
  6693  0012B6  6F36               	movwf	??_strtof& (0+255),b
  6694  0012B8  0EFF               	movlw	255
  6695  0012BA  6F37               	movwf	(??_strtof+1)& (0+255),b
  6696  0012BC  C132  FFD9         	movff	strtof@s,fsr2l
  6697  0012C0  C133  FFDA         	movff	strtof@s+1,fsr2h
  6698  0012C4  50DF               	movf	indf2,w,c
  6699  0012C6  6F38               	movwf	(??_strtof+2)& (0+255),b
  6700  0012C8  6B39               	clrf	(??_strtof+3)& (0+255),b
  6701  0012CA  5136               	movf	??_strtof& (0+255),w,b
  6702  0012CC  2738               	addwf	(??_strtof+2)& (0+255),f,b
  6703  0012CE  5137               	movf	(??_strtof+1)& (0+255),w,b
  6704  0012D0  2339               	addwfc	(??_strtof+3)& (0+255),f,b
  6705  0012D2  5139               	movf	(??_strtof+3)& (0+255),w,b
  6706  0012D4  E122               	bnz	l14861
  6707  0012D6  0E0A               	movlw	10
  6708  0012D8  5D38               	subwf	(??_strtof+2)& (0+255),w,b
  6709  0012DA  B0D8               	btfsc	status,0,c
  6710  0012DC  D01E               	goto	l14861
  6711                           
  6712                           ; BSR set to: 1
  6713  0012DE  C132  FFD9         	movff	strtof@s,fsr2l
  6714  0012E2  C133  FFDA         	movff	strtof@s+1,fsr2h
  6715  0012E6  50DF               	movf	indf2,w,c
  6716  0012E8  6F36               	movwf	??_strtof& (0+255),b
  6717  0012EA  0ED0               	movlw	208
  6718  0012EC  2736               	addwf	??_strtof& (0+255),f,b
  6719  0012EE  C140  F08C         	movff	strtof@eexp,___wmul@multiplier
  6720  0012F2  C141  F08D         	movff	strtof@eexp+1,___wmul@multiplier+1
  6721  0012F6  0E00               	movlw	0
  6722  0012F8  0100               	movlb	0	; () banked
  6723  0012FA  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6724  0012FC  0E0A               	movlw	10
  6725  0012FE  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6726  001300  ECB0  F001         	call	___wmul	;wreg free
  6727  001304  0101               	movlb	1	; () banked
  6728  001306  5136               	movf	??_strtof& (0+255),w,b
  6729  001308  0100               	movlb	0	; () banked
  6730  00130A  258C               	addwf	?___wmul& (0+255),w,b
  6731  00130C  0101               	movlb	1	; () banked
  6732  00130E  6F40               	movwf	strtof@eexp& (0+255),b
  6733  001310  0E00               	movlw	0
  6734  001312  0100               	movlb	0	; () banked
  6735  001314  218D               	addwfc	(?___wmul+1)& (0+255),w,b
  6736  001316  0101               	movlb	1	; () banked
  6737  001318  6F41               	movwf	(strtof@eexp+1)& (0+255),b
  6738  00131A                     l14861:
  6739                           
  6740                           ; BSR set to: 1
  6741  00131A  A73D               	btfss	strtof@flags& (0+255),3,b
  6742  00131C  D004               	goto	l14865
  6743                           
  6744                           ; BSR set to: 1
  6745  00131E  6D40               	negf	strtof@eexp& (0+255),b
  6746  001320  1F41               	comf	(strtof@eexp+1)& (0+255),f,b
  6747  001322  B0D8               	btfsc	status,0,c
  6748  001324  2B41               	incf	(strtof@eexp+1)& (0+255),f,b
  6749  001326                     l14865:
  6750                           
  6751                           ; BSR set to: 1
  6752  001326  5140               	movf	strtof@eexp& (0+255),w,b
  6753  001328  273E               	addwf	strtof@expon& (0+255),f,b
  6754  00132A  5141               	movf	(strtof@eexp+1)& (0+255),w,b
  6755  00132C  233F               	addwfc	(strtof@expon+1)& (0+255),f,b
  6756                           
  6757                           ; BSR set to: 1
  6758  00132E  5134               	movf	strtof@res& (0+255),w,b
  6759  001330  1135               	iorwf	(strtof@res+1)& (0+255),w,b
  6760  001332  A4D8               	btfss	status,2,c
  6761                           
  6762                           ; BSR set to: 1
  6763  001334  A33D               	btfss	strtof@flags& (0+255),1,b
  6764  001336  D008               	goto	l14873
  6765                           
  6766                           ; BSR set to: 1
  6767  001338  C134  FFD9         	movff	strtof@res,fsr2l
  6768  00133C  C135  FFDA         	movff	strtof@res+1,fsr2h
  6769  001340  C132  FFDE         	movff	strtof@s,postinc2
  6770  001344  C133  FFDD         	movff	strtof@s+1,postdec2
  6771  001348                     l14873:
  6772                           
  6773                           ; BSR set to: 1
  6774  001348  C142  F08C         	movff	strtof@_u,___xxtofl@val
  6775  00134C  C143  F08D         	movff	strtof@_u+1,___xxtofl@val+1
  6776  001350  C144  F08E         	movff	strtof@_u+2,___xxtofl@val+2
  6777  001354  C145  F08F         	movff	strtof@_u+3,___xxtofl@val+3
  6778  001358  0E00               	movlw	0
  6779  00135A  ECAA  F027         	call	___xxtofl
  6780  00135E  C08C  F142         	movff	?___xxtofl,strtof@_u
  6781  001362  C08D  F143         	movff	?___xxtofl+1,strtof@_u+1
  6782  001366  C08E  F144         	movff	?___xxtofl+2,strtof@_u+2
  6783  00136A  C08F  F145         	movff	?___xxtofl+3,strtof@_u+3
  6784                           
  6785                           ; BSR set to: 0
  6786  00136E  C142  F08C         	movff	strtof@_u,___fleq@ff1
  6787  001372  C143  F08D         	movff	strtof@_u+1,___fleq@ff1+1
  6788  001376  C144  F08E         	movff	strtof@_u+2,___fleq@ff1+2
  6789  00137A  C145  F08F         	movff	strtof@_u+3,___fleq@ff1+3
  6790  00137E  0E00               	movlw	0
  6791  001380  6F90               	movwf	___fleq@ff2& (0+255),b
  6792  001382  0E00               	movlw	0
  6793  001384  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  6794  001386  0E00               	movlw	0
  6795  001388  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  6796  00138A  0E00               	movlw	0
  6797  00138C  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  6798  00138E  EC6E  F03A         	call	___fleq	;wreg free
  6799  001392  A0D8               	btfss	status,0,c
  6800  001394  D00A               	goto	l14881
  6801                           
  6802                           ; BSR set to: 0
  6803  001396  0E00               	movlw	0
  6804  001398  0101               	movlb	1	; () banked
  6805  00139A  6F32               	movwf	?_strtof& (0+255),b
  6806  00139C  0E00               	movlw	0
  6807  00139E  6F33               	movwf	(?_strtof+1)& (0+255),b
  6808  0013A0  0E00               	movlw	0
  6809  0013A2  6F34               	movwf	(?_strtof+2)& (0+255),b
  6810  0013A4  0E00               	movlw	0
  6811  0013A6  6F35               	movwf	(?_strtof+3)& (0+255),b
  6812  0013A8  0012               	return	
  6813  0013AA                     l14881:
  6814                           
  6815                           ; BSR set to: 0
  6816  0013AA  0101               	movlb	1	; () banked
  6817  0013AC  AF3F               	btfss	(strtof@expon+1)& (0+255),7,b
  6818  0013AE  D075               	goto	l14909
  6819                           
  6820                           ; BSR set to: 1
  6821  0013B0  6D3E               	negf	strtof@expon& (0+255),b
  6822  0013B2  1F3F               	comf	(strtof@expon+1)& (0+255),f,b
  6823  0013B4  B0D8               	btfsc	status,0,c
  6824  0013B6  2B3F               	incf	(strtof@expon+1)& (0+255),f,b
  6825  0013B8  D01E               	goto	l14889
  6826  0013BA                     l14885:
  6827                           
  6828                           ; BSR set to: 1
  6829  0013BA  C142  F10D         	movff	strtof@_u,___fldiv@b
  6830  0013BE  C143  F10E         	movff	strtof@_u+1,___fldiv@b+1
  6831  0013C2  C144  F10F         	movff	strtof@_u+2,___fldiv@b+2
  6832  0013C6  C145  F110         	movff	strtof@_u+3,___fldiv@b+3
  6833  0013CA  0EF9               	movlw	249
  6834  0013CC  6F11               	movwf	___fldiv@a& (0+255),b
  6835  0013CE  0E02               	movlw	2
  6836  0013D0  6F12               	movwf	(___fldiv@a+1)& (0+255),b
  6837  0013D2  0E15               	movlw	21
  6838  0013D4  6F13               	movwf	(___fldiv@a+2)& (0+255),b
  6839  0013D6  0E50               	movlw	80
  6840  0013D8  6F14               	movwf	(___fldiv@a+3)& (0+255),b
  6841  0013DA  EC25  F01C         	call	___fldiv	;wreg free
  6842  0013DE  C10D  F142         	movff	?___fldiv,strtof@_u
  6843  0013E2  C10E  F143         	movff	?___fldiv+1,strtof@_u+1
  6844  0013E6  C10F  F144         	movff	?___fldiv+2,strtof@_u+2
  6845  0013EA  C110  F145         	movff	?___fldiv+3,strtof@_u+3
  6846                           
  6847                           ; BSR set to: 1
  6848  0013EE  0EF6               	movlw	246
  6849  0013F0  273E               	addwf	strtof@expon& (0+255),f,b
  6850  0013F2  0EFF               	movlw	255
  6851  0013F4  233F               	addwfc	(strtof@expon+1)& (0+255),f,b
  6852  0013F6                     l14889:
  6853                           
  6854                           ; BSR set to: 1
  6855  0013F6  BF3F               	btfsc	(strtof@expon+1)& (0+255),7,b
  6856  0013F8  D024               	goto	l14895
  6857  0013FA  513F               	movf	(strtof@expon+1)& (0+255),w,b
  6858  0013FC  E1DE               	bnz	l14885
  6859  0013FE  0E0A               	movlw	10
  6860  001400  5D3E               	subwf	strtof@expon& (0+255),w,b
  6861  001402  A0D8               	btfss	status,0,c
  6862  001404  D01E               	goto	l14895
  6863  001406  D7D9               	goto	l14885
  6864  001408                     l14891:
  6865                           
  6866                           ; BSR set to: 1
  6867  001408  C142  F10D         	movff	strtof@_u,___fldiv@b
  6868  00140C  C143  F10E         	movff	strtof@_u+1,___fldiv@b+1
  6869  001410  C144  F10F         	movff	strtof@_u+2,___fldiv@b+2
  6870  001414  C145  F110         	movff	strtof@_u+3,___fldiv@b+3
  6871  001418  0E00               	movlw	0
  6872  00141A  6F11               	movwf	___fldiv@a& (0+255),b
  6873  00141C  0E00               	movlw	0
  6874  00141E  6F12               	movwf	(___fldiv@a+1)& (0+255),b
  6875  001420  0E20               	movlw	32
  6876  001422  6F13               	movwf	(___fldiv@a+2)& (0+255),b
  6877  001424  0E41               	movlw	65
  6878  001426  6F14               	movwf	(___fldiv@a+3)& (0+255),b
  6879  001428  EC25  F01C         	call	___fldiv	;wreg free
  6880  00142C  C10D  F142         	movff	?___fldiv,strtof@_u
  6881  001430  C10E  F143         	movff	?___fldiv+1,strtof@_u+1
  6882  001434  C10F  F144         	movff	?___fldiv+2,strtof@_u+2
  6883  001438  C110  F145         	movff	?___fldiv+3,strtof@_u+3
  6884                           
  6885                           ; BSR set to: 1
  6886  00143C  073E               	decf	strtof@expon& (0+255),f,b
  6887  00143E  A0D8               	btfss	status,0,c
  6888  001440  073F               	decf	(strtof@expon+1)& (0+255),f,b
  6889  001442                     l14895:
  6890                           
  6891                           ; BSR set to: 1
  6892  001442  513E               	movf	strtof@expon& (0+255),w,b
  6893  001444  113F               	iorwf	(strtof@expon+1)& (0+255),w,b
  6894  001446  A4D8               	btfss	status,2,c
  6895  001448  D7DF               	goto	l14891
  6896                           
  6897                           ; BSR set to: 1
  6898  00144A  C142  F126         	movff	strtof@_u,___flge@ff1
  6899  00144E  C143  F127         	movff	strtof@_u+1,___flge@ff1+1
  6900  001452  C144  F128         	movff	strtof@_u+2,___flge@ff1+2
  6901  001456  C145  F129         	movff	strtof@_u+3,___flge@ff1+3
  6902  00145A  0E00               	movlw	0
  6903  00145C  6F2A               	movwf	___flge@ff2& (0+255),b
  6904  00145E  0E00               	movlw	0
  6905  001460  6F2B               	movwf	(___flge@ff2+1)& (0+255),b
  6906  001462  0E80               	movlw	128
  6907  001464  6F2C               	movwf	(___flge@ff2+2)& (0+255),b
  6908  001466  0E00               	movlw	0
  6909  001468  6F2D               	movwf	(___flge@ff2+3)& (0+255),b
  6910  00146A  ECE4  F032         	call	___flge	;wreg free
  6911  00146E  B0D8               	btfsc	status,0,c
  6912  001470  D08E               	goto	l2496
  6913                           
  6914                           ; BSR set to: 1
  6915  001472  A13D               	btfss	strtof@flags& (0+255),0,b
  6916  001474  D009               	goto	l14905
  6917                           
  6918                           ; BSR set to: 1
  6919  001476  0E00               	movlw	0
  6920  001478  6F32               	movwf	?_strtof& (0+255),b
  6921  00147A  0E00               	movlw	0
  6922  00147C  6F33               	movwf	(?_strtof+1)& (0+255),b
  6923  00147E  0E80               	movlw	128
  6924  001480  6F34               	movwf	(?_strtof+2)& (0+255),b
  6925  001482  0E80               	movlw	128
  6926  001484  6F35               	movwf	(?_strtof+3)& (0+255),b
  6927  001486  0012               	return	
  6928  001488                     l14905:
  6929                           
  6930                           ; BSR set to: 1
  6931  001488  0E00               	movlw	0
  6932  00148A  6F32               	movwf	?_strtof& (0+255),b
  6933  00148C  0E00               	movlw	0
  6934  00148E  6F33               	movwf	(?_strtof+1)& (0+255),b
  6935  001490  0E80               	movlw	128
  6936  001492  6F34               	movwf	(?_strtof+2)& (0+255),b
  6937  001494  0E00               	movlw	0
  6938  001496  6F35               	movwf	(?_strtof+3)& (0+255),b
  6939  001498  0012               	return	
  6940  00149A                     l14909:
  6941                           
  6942                           ; BSR set to: 1
  6943  00149A  BF3F               	btfsc	(strtof@expon+1)& (0+255),7,b
  6944  00149C  D078               	goto	l2496
  6945  00149E  513F               	movf	(strtof@expon+1)& (0+255),w,b
  6946  0014A0  E124               	bnz	l14917
  6947  0014A2  053E               	decf	strtof@expon& (0+255),w,b
  6948  0014A4  B0D8               	btfsc	status,0,c
  6949  0014A6  D021               	goto	l14917
  6950  0014A8  D072               	goto	l2496
  6951  0014AA                     l14913:
  6952                           
  6953                           ; BSR set to: 1
  6954  0014AA  C142  F09A         	movff	strtof@_u,___flmul@b
  6955  0014AE  C143  F09B         	movff	strtof@_u+1,___flmul@b+1
  6956  0014B2  C144  F09C         	movff	strtof@_u+2,___flmul@b+2
  6957  0014B6  C145  F09D         	movff	strtof@_u+3,___flmul@b+3
  6958  0014BA  0EF9               	movlw	249
  6959  0014BC  0100               	movlb	0	; () banked
  6960  0014BE  6F9E               	movwf	___flmul@a& (0+255),b
  6961  0014C0  0E02               	movlw	2
  6962  0014C2  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  6963  0014C4  0E15               	movlw	21
  6964  0014C6  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  6965  0014C8  0E50               	movlw	80
  6966  0014CA  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  6967  0014CC  ECD0  F012         	call	___flmul	;wreg free
  6968  0014D0  C09A  F142         	movff	?___flmul,strtof@_u
  6969  0014D4  C09B  F143         	movff	?___flmul+1,strtof@_u+1
  6970  0014D8  C09C  F144         	movff	?___flmul+2,strtof@_u+2
  6971  0014DC  C09D  F145         	movff	?___flmul+3,strtof@_u+3
  6972  0014E0  0101               	movlb	1	; () banked
  6973  0014E2  0EF6               	movlw	246
  6974  0014E4  273E               	addwf	strtof@expon& (0+255),f,b
  6975  0014E6  0EFF               	movlw	255
  6976  0014E8  233F               	addwfc	(strtof@expon+1)& (0+255),f,b
  6977  0014EA                     l14917:
  6978                           
  6979                           ; BSR set to: 1
  6980  0014EA  513F               	movf	(strtof@expon+1)& (0+255),w,b
  6981  0014EC  E1DE               	bnz	l14913
  6982  0014EE  0E0A               	movlw	10
  6983  0014F0  5D3E               	subwf	strtof@expon& (0+255),w,b
  6984  0014F2  A0D8               	btfss	status,0,c
  6985  0014F4  D020               	goto	l14923
  6986  0014F6  D7D9               	goto	l14913
  6987  0014F8                     l14919:
  6988                           
  6989                           ; BSR set to: 1
  6990  0014F8  C142  F09A         	movff	strtof@_u,___flmul@b
  6991  0014FC  C143  F09B         	movff	strtof@_u+1,___flmul@b+1
  6992  001500  C144  F09C         	movff	strtof@_u+2,___flmul@b+2
  6993  001504  C145  F09D         	movff	strtof@_u+3,___flmul@b+3
  6994  001508  0E00               	movlw	0
  6995  00150A  0100               	movlb	0	; () banked
  6996  00150C  6F9E               	movwf	___flmul@a& (0+255),b
  6997  00150E  0E00               	movlw	0
  6998  001510  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  6999  001512  0E20               	movlw	32
  7000  001514  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  7001  001516  0E41               	movlw	65
  7002  001518  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  7003  00151A  ECD0  F012         	call	___flmul	;wreg free
  7004  00151E  C09A  F142         	movff	?___flmul,strtof@_u
  7005  001522  C09B  F143         	movff	?___flmul+1,strtof@_u+1
  7006  001526  C09C  F144         	movff	?___flmul+2,strtof@_u+2
  7007  00152A  C09D  F145         	movff	?___flmul+3,strtof@_u+3
  7008  00152E  0101               	movlb	1	; () banked
  7009  001530  073E               	decf	strtof@expon& (0+255),f,b
  7010  001532  A0D8               	btfss	status,0,c
  7011  001534  073F               	decf	(strtof@expon+1)& (0+255),f,b
  7012  001536                     l14923:
  7013                           
  7014                           ; BSR set to: 1
  7015  001536  513E               	movf	strtof@expon& (0+255),w,b
  7016  001538  113F               	iorwf	(strtof@expon+1)& (0+255),w,b
  7017  00153A  A4D8               	btfss	status,2,c
  7018  00153C  D7DD               	goto	l14919
  7019                           
  7020                           ; BSR set to: 1
  7021  00153E  0EFF               	movlw	255
  7022  001540  6F26               	movwf	___flge@ff1& (0+255),b
  7023  001542  0EFF               	movlw	255
  7024  001544  6F27               	movwf	(___flge@ff1+1)& (0+255),b
  7025  001546  0E7F               	movlw	127
  7026  001548  6F28               	movwf	(___flge@ff1+2)& (0+255),b
  7027  00154A  0E7F               	movlw	127
  7028  00154C  6F29               	movwf	(___flge@ff1+3)& (0+255),b
  7029  00154E  C142  F12A         	movff	strtof@_u,___flge@ff2
  7030  001552  C143  F12B         	movff	strtof@_u+1,___flge@ff2+1
  7031  001556  C144  F12C         	movff	strtof@_u+2,___flge@ff2+2
  7032  00155A  C145  F12D         	movff	strtof@_u+3,___flge@ff2+3
  7033  00155E  ECE4  F032         	call	___flge	;wreg free
  7034  001562  B0D8               	btfsc	status,0,c
  7035  001564  D014               	goto	l2496
  7036                           
  7037                           ; BSR set to: 1
  7038  001566  A13D               	btfss	strtof@flags& (0+255),0,b
  7039  001568  D009               	goto	l14933
  7040                           
  7041                           ; BSR set to: 1
  7042  00156A  0E00               	movlw	0
  7043  00156C  6F32               	movwf	?_strtof& (0+255),b
  7044  00156E  0E00               	movlw	0
  7045  001570  6F33               	movwf	(?_strtof+1)& (0+255),b
  7046  001572  0E80               	movlw	128
  7047  001574  6F34               	movwf	(?_strtof+2)& (0+255),b
  7048  001576  0E80               	movlw	128
  7049  001578  6F35               	movwf	(?_strtof+3)& (0+255),b
  7050  00157A  0012               	return	
  7051  00157C                     l14933:
  7052                           
  7053                           ; BSR set to: 1
  7054  00157C  0E00               	movlw	0
  7055  00157E  6F32               	movwf	?_strtof& (0+255),b
  7056  001580  0E00               	movlw	0
  7057  001582  6F33               	movwf	(?_strtof+1)& (0+255),b
  7058  001584  0E80               	movlw	128
  7059  001586  6F34               	movwf	(?_strtof+2)& (0+255),b
  7060  001588  0E00               	movlw	0
  7061  00158A  6F35               	movwf	(?_strtof+3)& (0+255),b
  7062  00158C  0012               	return	
  7063  00158E                     l2496:
  7064                           
  7065                           ; BSR set to: 1
  7066  00158E  A13D               	btfss	strtof@flags& (0+255),0,b
  7067  001590  D012               	goto	l14939
  7068                           
  7069                           ; BSR set to: 1
  7070  001592  C142  F08C         	movff	strtof@_u,___flneg@f1
  7071  001596  C143  F08D         	movff	strtof@_u+1,___flneg@f1+1
  7072  00159A  C144  F08E         	movff	strtof@_u+2,___flneg@f1+2
  7073  00159E  C145  F08F         	movff	strtof@_u+3,___flneg@f1+3
  7074  0015A2  EC8A  F000         	call	___flneg	;wreg free
  7075  0015A6  C08C  F142         	movff	?___flneg,strtof@_u
  7076  0015AA  C08D  F143         	movff	?___flneg+1,strtof@_u+1
  7077  0015AE  C08E  F144         	movff	?___flneg+2,strtof@_u+2
  7078  0015B2  C08F  F145         	movff	?___flneg+3,strtof@_u+3
  7079  0015B6                     l14939:
  7080  0015B6  C142  F132         	movff	strtof@_u,?_strtof
  7081  0015BA  C143  F133         	movff	strtof@_u+1,?_strtof+1
  7082  0015BE  C144  F134         	movff	strtof@_u+2,?_strtof+2
  7083  0015C2  C145  F135         	movff	strtof@_u+3,?_strtof+3
  7084  0015C6  0012               	return		;funcret
  7085  0015C8                     __end_of_strtof:
  7086                           	callstack 0
  7087                           
  7088 ;; *************** function _toupper *****************
  7089 ;; Defined at:
  7090 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/toupper.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;  c               2   50[BANK0 ] int 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  2   50[BANK0 ] int 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 3F/0
  7101 ;;		On exit  : 3F/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7104 ;;      Params:         0       2       0       0       0       0       0       0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7106 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7107 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7108 ;;Total ram usage:        6 bytes
  7109 ;; Hardware stack levels used: 1
  7110 ;; Hardware stack levels required when called: 11
  7111 ;; This function calls:
  7112 ;;		_islower
  7113 ;; This function is called by:
  7114 ;;		_strtof
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text28
  7119  007E68                     __ptext28:
  7120                           	callstack 0
  7121  007E68                     _toupper:
  7122                           	callstack 16
  7123                           
  7124                           ; BSR set to: 0
  7125                           
  7126                           ; BSR set to: 0
  7127                           
  7128                           ;incstack = 0
  7129  007E68  0E9F               	movlw	159
  7130  007E6A  6F94               	movwf	??_toupper& (0+255),b
  7131  007E6C  0EFF               	movlw	255
  7132  007E6E  6F95               	movwf	(??_toupper+1)& (0+255),b
  7133  007E70  C092  F096         	movff	toupper@c,??_toupper+2
  7134  007E74  C093  F097         	movff	toupper@c+1,??_toupper+3
  7135  007E78  5194               	movf	??_toupper& (0+255),w,b
  7136  007E7A  2796               	addwf	(??_toupper+2)& (0+255),f,b
  7137  007E7C  5195               	movf	(??_toupper+1)& (0+255),w,b
  7138  007E7E  2397               	addwfc	(??_toupper+3)& (0+255),f,b
  7139  007E80  5197               	movf	(??_toupper+3)& (0+255),w,b
  7140  007E82  E109               	bnz	l2711
  7141  007E84  0E1A               	movlw	26
  7142  007E86  5D96               	subwf	(??_toupper+2)& (0+255),w,b
  7143  007E88  B0D8               	btfsc	status,0,c
  7144  007E8A  D005               	goto	l2711
  7145                           
  7146                           ; BSR set to: 0
  7147  007E8C  0E5F               	movlw	95
  7148  007E8E  1592               	andwf	toupper@c& (0+255),w,b
  7149  007E90  6F92               	movwf	?_toupper& (0+255),b
  7150  007E92  6B93               	clrf	(?_toupper+1)& (0+255),b
  7151  007E94  0012               	return	
  7152  007E96                     l2711:
  7153                           
  7154                           ; BSR set to: 0
  7155  007E96  C092  F092         	movff	toupper@c,?_toupper
  7156  007E9A  C093  F093         	movff	toupper@c+1,?_toupper+1
  7157                           
  7158                           ; BSR set to: 0
  7159  007E9E  0012               	return		;funcret
  7160  007EA0                     __end_of_toupper:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _islower *****************
  7164 ;; Defined at:
  7165 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/islower.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  c               2   44[BANK0 ] int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2   44[BANK0 ] int 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 3F/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7179 ;;      Params:         0       2       0       0       0       0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7181 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7182 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7183 ;;Total ram usage:        6 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 10
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_toupper
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text29
  7194  007F7C                     __ptext29:
  7195                           	callstack 0
  7196  007F7C                     _islower:
  7197                           	callstack 16
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;incstack = 0
  7201  007F7C  0E9F               	movlw	159
  7202  007F7E  0100               	movlb	0	; () banked
  7203  007F80  6F8E               	movwf	??_islower& (0+255),b
  7204  007F82  0EFF               	movlw	255
  7205  007F84  6F8F               	movwf	(??_islower+1)& (0+255),b
  7206  007F86  C08C  F090         	movff	islower@c,??_islower+2
  7207  007F8A  C08D  F091         	movff	islower@c+1,??_islower+3
  7208  007F8E  518E               	movf	??_islower& (0+255),w,b
  7209  007F90  2790               	addwf	(??_islower+2)& (0+255),f,b
  7210  007F92  518F               	movf	(??_islower+1)& (0+255),w,b
  7211  007F94  2391               	addwfc	(??_islower+3)& (0+255),f,b
  7212  007F96  5191               	movf	(??_islower+3)& (0+255),w,b
  7213  007F98  E106               	bnz	u10260
  7214  007F9A  0E1A               	movlw	26
  7215  007F9C  5D90               	subwf	(??_islower+2)& (0+255),w,b
  7216  007F9E  B0D8               	btfsc	status,0,c
  7217  007FA0  D002               	goto	u10260
  7218  007FA2  0E01               	movlw	1
  7219  007FA4  D001               	goto	u10270
  7220  007FA6                     u10260:
  7221  007FA6  0E00               	movlw	0
  7222  007FA8                     u10270:
  7223  007FA8  6F8C               	movwf	?_islower& (0+255),b
  7224  007FAA  6B8D               	clrf	(?_islower+1)& (0+255),b
  7225                           
  7226                           ; BSR set to: 0
  7227  007FAC  0012               	return		;funcret
  7228  007FAE                     __end_of_islower:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _nanf *****************
  7232 ;; Defined at:
  7233 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nanf.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  s               1   44[BANK0 ] PTR const unsigned char 
  7236 ;;		 -> STR_30(1), 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  u               4   48[BANK0 ] struct .
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  4   44[BANK0 ] float 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2
  7243 ;; Tracked objects:
  7244 ;;		On entry : 3F/0
  7245 ;;		On exit  : 3F/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7248 ;;      Params:         0       4       0       0       0       0       0       0       0
  7249 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7251 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7252 ;;Total ram usage:        8 bytes
  7253 ;; Hardware stack levels used: 1
  7254 ;; Hardware stack levels required when called: 10
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_strtof
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text30
  7263  0003F2                     __ptext30:
  7264                           	callstack 0
  7265  0003F2                     _nanf:
  7266                           	callstack 17
  7267                           
  7268                           ; BSR set to: 0
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;incstack = 0
  7272  0003F2  0EFF               	movlw	255
  7273  0003F4  6F90               	movwf	nanf@u& (0+255),b
  7274  0003F6  0EFF               	movlw	255
  7275  0003F8  6F91               	movwf	(nanf@u+1)& (0+255),b
  7276  0003FA  0EFF               	movlw	255
  7277  0003FC  6F92               	movwf	(nanf@u+2)& (0+255),b
  7278  0003FE  0E7F               	movlw	127
  7279  000400  6F93               	movwf	(nanf@u+3)& (0+255),b
  7280                           
  7281                           ; BSR set to: 0
  7282  000402  C090  F08C         	movff	nanf@u,?_nanf
  7283  000406  C091  F08D         	movff	nanf@u+1,?_nanf+1
  7284  00040A  C092  F08E         	movff	nanf@u+2,?_nanf+2
  7285  00040E  C093  F08F         	movff	nanf@u+3,?_nanf+3
  7286                           
  7287                           ; BSR set to: 0
  7288  000412  0012               	return		;funcret
  7289  000414                     __end_of_nanf:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _isxdigit *****************
  7293 ;; Defined at:
  7294 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isxdigit.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  c               2   50[BANK0 ] int 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  2   50[BANK0 ] int 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0
  7303 ;; Tracked objects:
  7304 ;;		On entry : 3F/0
  7305 ;;		On exit  : 3F/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7308 ;;      Params:         0       2       0       0       0       0       0       0       0
  7309 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7310 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7311 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7312 ;;Total ram usage:        7 bytes
  7313 ;; Hardware stack levels used: 1
  7314 ;; Hardware stack levels required when called: 11
  7315 ;; This function calls:
  7316 ;;		_isdigit
  7317 ;; This function is called by:
  7318 ;;		_strtof
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text31
  7323  0077EC                     __ptext31:
  7324                           	callstack 0
  7325  0077EC                     _isxdigit:
  7326                           	callstack 16
  7327                           
  7328                           ; BSR set to: 0
  7329                           
  7330                           ; BSR set to: 0
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;incstack = 0
  7334  0077EC  0E01               	movlw	1
  7335  0077EE  6F98               	movwf	_isxdigit$5148& (0+255),b
  7336                           
  7337                           ; BSR set to: 0
  7338  0077F0  0ED0               	movlw	208
  7339  0077F2  6F94               	movwf	??_isxdigit& (0+255),b
  7340  0077F4  0EFF               	movlw	255
  7341  0077F6  6F95               	movwf	(??_isxdigit+1)& (0+255),b
  7342  0077F8  C092  F096         	movff	isxdigit@c,??_isxdigit+2
  7343  0077FC  C093  F097         	movff	isxdigit@c+1,??_isxdigit+3
  7344  007800  5194               	movf	??_isxdigit& (0+255),w,b
  7345  007802  2796               	addwf	(??_isxdigit+2)& (0+255),f,b
  7346  007804  5195               	movf	(??_isxdigit+1)& (0+255),w,b
  7347  007806  2397               	addwfc	(??_isxdigit+3)& (0+255),f,b
  7348  007808  5197               	movf	(??_isxdigit+3)& (0+255),w,b
  7349  00780A  E104               	bnz	u17150
  7350  00780C  0E0A               	movlw	10
  7351  00780E  5D96               	subwf	(??_isxdigit+2)& (0+255),w,b
  7352  007810  A0D8               	btfss	status,0,c
  7353  007812  D016               	goto	l14345
  7354  007814                     u17150:
  7355                           
  7356                           ; BSR set to: 0
  7357  007814  0E9F               	movlw	159
  7358  007816  6F94               	movwf	??_isxdigit& (0+255),b
  7359  007818  0EFF               	movlw	255
  7360  00781A  6F95               	movwf	(??_isxdigit+1)& (0+255),b
  7361  00781C  0E20               	movlw	32
  7362  00781E  1192               	iorwf	isxdigit@c& (0+255),w,b
  7363  007820  6F96               	movwf	(??_isxdigit+2)& (0+255),b
  7364  007822  0E00               	movlw	0
  7365  007824  1193               	iorwf	(isxdigit@c+1)& (0+255),w,b
  7366  007826  6F97               	movwf	(??_isxdigit+3)& (0+255),b
  7367  007828  5194               	movf	??_isxdigit& (0+255),w,b
  7368  00782A  2796               	addwf	(??_isxdigit+2)& (0+255),f,b
  7369  00782C  5195               	movf	(??_isxdigit+1)& (0+255),w,b
  7370  00782E  2397               	addwfc	(??_isxdigit+3)& (0+255),f,b
  7371  007830  5197               	movf	(??_isxdigit+3)& (0+255),w,b
  7372  007832  E104               	bnz	u17160
  7373  007834  0E06               	movlw	6
  7374  007836  5D96               	subwf	(??_isxdigit+2)& (0+255),w,b
  7375  007838  A0D8               	btfss	status,0,c
  7376  00783A  D002               	goto	l14345
  7377  00783C                     u17160:
  7378                           
  7379                           ; BSR set to: 0
  7380  00783C  0E00               	movlw	0
  7381  00783E  6F98               	movwf	_isxdigit$5148& (0+255),b
  7382  007840                     l14345:
  7383                           
  7384                           ; BSR set to: 0
  7385  007840  C098  F092         	movff	_isxdigit$5148,?_isxdigit
  7386  007844  6B93               	clrf	(?_isxdigit+1)& (0+255),b
  7387                           
  7388                           ; BSR set to: 0
  7389  007846  0012               	return		;funcret
  7390  007848                     __end_of_isxdigit:
  7391                           	callstack 0
  7392                           
  7393 ;; *************** function ___lmul *****************
  7394 ;; Defined at:
  7395 ;;		line 15 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/Umul32.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;  multiplier      4   44[BANK0 ] unsigned long 
  7398 ;;  multiplicand    4   48[BANK0 ] unsigned long 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  product         4   52[BANK0 ] unsigned long 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  4   44[BANK0 ] unsigned long 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0
  7405 ;; Tracked objects:
  7406 ;;		On entry : 3F/0
  7407 ;;		On exit  : 3F/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7410 ;;      Params:         0       8       0       0       0       0       0       0       0
  7411 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7413 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7414 ;;Total ram usage:       12 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 10
  7417 ;; This function calls:
  7418 ;;		Nothing
  7419 ;; This function is called by:
  7420 ;;		_strtof
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text32
  7425  007958                     __ptext32:
  7426                           	callstack 0
  7427  007958                     ___lmul:
  7428                           	callstack 17
  7429                           
  7430                           ; BSR set to: 0
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;incstack = 0
  7434  007958  0E00               	movlw	0
  7435  00795A  6F94               	movwf	___lmul@product& (0+255),b
  7436  00795C  0E00               	movlw	0
  7437  00795E  6F95               	movwf	(___lmul@product+1)& (0+255),b
  7438  007960  0E00               	movlw	0
  7439  007962  6F96               	movwf	(___lmul@product+2)& (0+255),b
  7440  007964  0E00               	movlw	0
  7441  007966  6F97               	movwf	(___lmul@product+3)& (0+255),b
  7442  007968                     l9997:
  7443                           
  7444                           ; BSR set to: 0
  7445  007968  A18C               	btfss	___lmul@multiplier& (0+255),0,b
  7446  00796A  D008               	goto	l10001
  7447                           
  7448                           ; BSR set to: 0
  7449  00796C  5190               	movf	___lmul@multiplicand& (0+255),w,b
  7450  00796E  2794               	addwf	___lmul@product& (0+255),f,b
  7451  007970  5191               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  7452  007972  2395               	addwfc	(___lmul@product+1)& (0+255),f,b
  7453  007974  5192               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  7454  007976  2396               	addwfc	(___lmul@product+2)& (0+255),f,b
  7455  007978  5193               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  7456  00797A  2397               	addwfc	(___lmul@product+3)& (0+255),f,b
  7457  00797C                     l10001:
  7458                           
  7459                           ; BSR set to: 0
  7460  00797C  90D8               	bcf	status,0,c
  7461  00797E  3790               	rlcf	___lmul@multiplicand& (0+255),f,b
  7462  007980  3791               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  7463  007982  3792               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  7464  007984  3793               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  7465                           
  7466                           ; BSR set to: 0
  7467  007986  90D8               	bcf	status,0,c
  7468  007988  338F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  7469  00798A  338E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  7470  00798C  338D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  7471  00798E  338C               	rrcf	___lmul@multiplier& (0+255),f,b
  7472  007990  518C               	movf	___lmul@multiplier& (0+255),w,b
  7473  007992  118D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  7474  007994  118E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  7475  007996  118F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  7476  007998  A4D8               	btfss	status,2,c
  7477  00799A  D7E6               	goto	l9997
  7478                           
  7479                           ; BSR set to: 0
  7480  00799C  C094  F08C         	movff	___lmul@product,?___lmul
  7481  0079A0  C095  F08D         	movff	___lmul@product+1,?___lmul+1
  7482  0079A4  C096  F08E         	movff	___lmul@product+2,?___lmul+2
  7483  0079A8  C097  F08F         	movff	___lmul@product+3,?___lmul+3
  7484                           
  7485                           ; BSR set to: 0
  7486  0079AC  0012               	return		;funcret
  7487  0079AE                     __end_of___lmul:
  7488                           	callstack 0
  7489                           
  7490 ;; *************** function _M_5 *****************
  7491 ;; Defined at:
  7492 ;;		line 82 in file "GCODE.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  axis            2   44[BANK0 ] PTR struct Comando_T
  7495 ;;		 -> NULL(0), 
  7496 ;;  n               2   46[BANK0 ] int 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 3F/0
  7505 ;;		On exit  : 3F/0
  7506 ;;		Unchanged: 3F/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7508 ;;      Params:         0       4       0       0       0       0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7511 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7512 ;;Total ram usage:        4 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; Hardware stack levels required when called: 11
  7515 ;; This function calls:
  7516 ;;		_apagarRotor
  7517 ;; This function is called by:
  7518 ;;		_executeCommand
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text33
  7523  0005EC                     __ptext33:
  7524                           	callstack 0
  7525  0005EC                     _M_5:
  7526                           	callstack 18
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;GCODE.c: 83:    apagarRotor();
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;incstack = 0
  7533  0005EC  EC07  F003         	call	_apagarRotor	;wreg free
  7534                           
  7535                           ; BSR set to: 0
  7536  0005F0  0012               	return		;funcret
  7537  0005F2                     __end_of_M_5:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _G_97 *****************
  7541 ;; Defined at:
  7542 ;;		line 58 in file "GCODE.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  axis            2   38[BANK1 ] PTR struct Comando_T
  7545 ;;		 -> executeCommand@comando(100), 
  7546 ;;  n               2   40[BANK1 ] int 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 3F/1
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7558 ;;      Params:         0       0       4       0       0       0       0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7560 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7561 ;;      Totals:         0       1       4       0       0       0       0       0       0
  7562 ;;Total ram usage:        5 bytes
  7563 ;; Hardware stack levels used: 1
  7564 ;; Hardware stack levels required when called: 12
  7565 ;; This function calls:
  7566 ;;		_M_3
  7567 ;;		_M_4
  7568 ;;		___fldiv
  7569 ;;		___fleq
  7570 ;;		_encenderRotor
  7571 ;; This function is called by:
  7572 ;;		_executeCommand
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text34
  7577  0051D8                     __ptext34:
  7578                           	callstack 0
  7579  0051D8                     _G_97:
  7580                           	callstack 17
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;GCODE.c: 59:    if(n==0) return;
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;incstack = 0
  7587  0051D8  5128               	movf	G_97@n& (0+255),w,b
  7588  0051DA  1129               	iorwf	(G_97@n+1)& (0+255),w,b
  7589  0051DC  B4D8               	btfsc	status,2,c
  7590  0051DE  0012               	return	
  7591                           
  7592                           ; BSR set to: 1
  7593                           ;GCODE.c: 60:    if(n>1){
  7594  0051E0  BF29               	btfsc	(G_97@n+1)& (0+255),7,b
  7595  0051E2  D064               	goto	l15195
  7596  0051E4  5129               	movf	(G_97@n+1)& (0+255),w,b
  7597  0051E6  E104               	bnz	u18480
  7598  0051E8  0E02               	movlw	2
  7599  0051EA  5D28               	subwf	G_97@n& (0+255),w,b
  7600  0051EC  A0D8               	btfss	status,0,c
  7601  0051EE  D05E               	goto	l15195
  7602  0051F0                     u18480:
  7603                           
  7604                           ; BSR set to: 1
  7605                           ;GCODE.c: 61:       if(axis[1].code == 'M'){
  7606  0051F0  EE20 F005          	lfsr	2,5
  7607  0051F4  5126               	movf	G_97@axis& (0+255),w,b
  7608  0051F6  26D9               	addwf	fsr2l,f,c
  7609  0051F8  5127               	movf	(G_97@axis+1)& (0+255),w,b
  7610  0051FA  22DA               	addwfc	fsr2h,f,c
  7611  0051FC  0E4D               	movlw	77
  7612  0051FE  18DE               	xorwf	postinc2,w,c
  7613  005200  A4D8               	btfss	status,2,c
  7614  005202  D054               	goto	l15195
  7615                           
  7616                           ; BSR set to: 1
  7617                           ;GCODE.c: 62:          if(axis[1].number==3) M_3(((void*)0),0);
  7618  005204  EE20 F006          	lfsr	2,6
  7619  005208  5126               	movf	G_97@axis& (0+255),w,b
  7620  00520A  26D9               	addwf	fsr2l,f,c
  7621  00520C  5127               	movf	(G_97@axis+1)& (0+255),w,b
  7622  00520E  22DA               	addwfc	fsr2h,f,c
  7623  005210  CFDE F08C          	movff	postinc2,___fleq@ff1
  7624  005214  CFDE F08D          	movff	postinc2,___fleq@ff1+1
  7625  005218  CFDE F08E          	movff	postinc2,___fleq@ff1+2
  7626  00521C  CFDE F08F          	movff	postinc2,___fleq@ff1+3
  7627  005220  0E00               	movlw	0
  7628  005222  0100               	movlb	0	; () banked
  7629  005224  6F90               	movwf	___fleq@ff2& (0+255),b
  7630  005226  0E00               	movlw	0
  7631  005228  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  7632  00522A  0E40               	movlw	64
  7633  00522C  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  7634  00522E  0E40               	movlw	64
  7635  005230  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  7636  005232  EC6E  F03A         	call	___fleq	;wreg free
  7637  005236  A0D8               	btfss	status,0,c
  7638  005238  D00A               	goto	l15189
  7639                           
  7640                           ; BSR set to: 0
  7641  00523A  0E00               	movlw	0
  7642  00523C  6F8E               	movwf	M_3@axis& (0+255),b
  7643  00523E  0E00               	movlw	0
  7644  005240  6F8F               	movwf	(M_3@axis+1)& (0+255),b
  7645  005242  0E00               	movlw	0
  7646  005244  6F91               	movwf	(M_3@n+1)& (0+255),b
  7647  005246  0E00               	movlw	0
  7648  005248  6F90               	movwf	M_3@n& (0+255),b
  7649  00524A  ECB3  F002         	call	_M_3	;wreg free
  7650  00524E                     l15189:
  7651                           
  7652                           ;GCODE.c: 63:          if(axis[1].number==4) M_4(((void*)0),0);
  7653  00524E  0101               	movlb	1	; () banked
  7654  005250  EE20 F006          	lfsr	2,6
  7655  005254  5126               	movf	G_97@axis& (0+255),w,b
  7656  005256  26D9               	addwf	fsr2l,f,c
  7657  005258  5127               	movf	(G_97@axis+1)& (0+255),w,b
  7658  00525A  22DA               	addwfc	fsr2h,f,c
  7659  00525C  CFDE F08C          	movff	postinc2,___fleq@ff1
  7660  005260  CFDE F08D          	movff	postinc2,___fleq@ff1+1
  7661  005264  CFDE F08E          	movff	postinc2,___fleq@ff1+2
  7662  005268  CFDE F08F          	movff	postinc2,___fleq@ff1+3
  7663  00526C  0E00               	movlw	0
  7664  00526E  0100               	movlb	0	; () banked
  7665  005270  6F90               	movwf	___fleq@ff2& (0+255),b
  7666  005272  0E00               	movlw	0
  7667  005274  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  7668  005276  0E80               	movlw	128
  7669  005278  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  7670  00527A  0E40               	movlw	64
  7671  00527C  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  7672  00527E  EC6E  F03A         	call	___fleq	;wreg free
  7673  005282  A0D8               	btfss	status,0,c
  7674  005284  D00A               	goto	l15193
  7675                           
  7676                           ; BSR set to: 0
  7677  005286  0E00               	movlw	0
  7678  005288  6F8E               	movwf	M_4@axis& (0+255),b
  7679  00528A  0E00               	movlw	0
  7680  00528C  6F8F               	movwf	(M_4@axis+1)& (0+255),b
  7681  00528E  0E00               	movlw	0
  7682  005290  6F91               	movwf	(M_4@n+1)& (0+255),b
  7683  005292  0E00               	movlw	0
  7684  005294  6F90               	movwf	M_4@n& (0+255),b
  7685  005296  ECAC  F002         	call	_M_4	;wreg free
  7686  00529A                     l15193:
  7687                           
  7688                           ;GCODE.c: 64:          _delay((unsigned long)((1)*(48000000/4000.0)));
  7689  00529A  0E10               	movlw	16
  7690  00529C  0100               	movlb	0	; () banked
  7691  00529E  6FA6               	movwf	??_G_97& (0+255),b
  7692  0052A0  0E94               	movlw	148
  7693  0052A2                     u19197:
  7694  0052A2  2EE8               	decfsz	wreg,f,c
  7695  0052A4  D7FE               	bra	u19197
  7696  0052A6  2FA6               	decfsz	??_G_97& (0+255),f,b
  7697  0052A8  D7FC               	bra	u19197
  7698  0052AA  F000               	nop	
  7699  0052AC                     l15195:
  7700                           
  7701                           ;GCODE.c: 67:    if(axis[0].code == 'S'){
  7702  0052AC  C126  FFD9         	movff	G_97@axis,fsr2l
  7703  0052B0  C127  FFDA         	movff	G_97@axis+1,fsr2h
  7704  0052B4  0E53               	movlw	83
  7705  0052B6  18DE               	xorwf	postinc2,w,c
  7706  0052B8  A4D8               	btfss	status,2,c
  7707  0052BA  0012               	return	
  7708                           
  7709                           ;GCODE.c: 68:       encenderRotor();
  7710  0052BC  EC03  F003         	call	_encenderRotor	;wreg free
  7711                           
  7712                           ;GCODE.c: 69:       S=axis[0].number;
  7713  0052C0  0101               	movlb	1	; () banked
  7714  0052C2  EE20 F001          	lfsr	2,1
  7715  0052C6  5126               	movf	G_97@axis& (0+255),w,b
  7716  0052C8  26D9               	addwf	fsr2l,f,c
  7717  0052CA  5127               	movf	(G_97@axis+1)& (0+255),w,b
  7718  0052CC  22DA               	addwfc	fsr2h,f,c
  7719  0052CE  CFDE F2F6          	movff	postinc2,_S
  7720  0052D2  CFDE F2F7          	movff	postinc2,_S+1
  7721  0052D6  CFDE F2F8          	movff	postinc2,_S+2
  7722  0052DA  CFDE F2F9          	movff	postinc2,_S+3
  7723                           
  7724                           ; BSR set to: 1
  7725                           ;GCODE.c: 70:       inverse_S = 1/S;
  7726  0052DE  0E00               	movlw	0
  7727  0052E0  6F0D               	movwf	___fldiv@b& (0+255),b
  7728  0052E2  0E00               	movlw	0
  7729  0052E4  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
  7730  0052E6  0E80               	movlw	128
  7731  0052E8  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
  7732  0052EA  0E3F               	movlw	63
  7733  0052EC  6F10               	movwf	(___fldiv@b+3)& (0+255),b
  7734  0052EE  C2F6  F111         	movff	_S,___fldiv@a
  7735  0052F2  C2F7  F112         	movff	_S+1,___fldiv@a+1
  7736  0052F6  C2F8  F113         	movff	_S+2,___fldiv@a+2
  7737  0052FA  C2F9  F114         	movff	_S+3,___fldiv@a+3
  7738  0052FE  EC25  F01C         	call	___fldiv	;wreg free
  7739  005302  C10D  F2F2         	movff	?___fldiv,_inverse_S
  7740  005306  C10E  F2F3         	movff	?___fldiv+1,_inverse_S+1
  7741  00530A  C10F  F2F4         	movff	?___fldiv+2,_inverse_S+2
  7742  00530E  C110  F2F5         	movff	?___fldiv+3,_inverse_S+3
  7743  005312  0012               	return		;funcret
  7744  005314                     __end_of_G_97:
  7745                           	callstack 0
  7746                           
  7747 ;; *************** function _encenderRotor *****************
  7748 ;; Defined at:
  7749 ;;		line 5 in file "rotor.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;		None
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		None
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/1
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0
  7764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7766 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7767 ;;Total ram usage:        0 bytes
  7768 ;; Hardware stack levels used: 1
  7769 ;; Hardware stack levels required when called: 10
  7770 ;; This function calls:
  7771 ;;		Nothing
  7772 ;; This function is called by:
  7773 ;;		_G_97
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text35
  7778  000606                     __ptext35:
  7779                           	callstack 0
  7780  000606                     _encenderRotor:
  7781                           	callstack 18
  7782                           
  7783                           ;rotor.c: 6:    LATCbits.LATC6 = 1;
  7784                           
  7785                           ;incstack = 0
  7786  000606  8C8B               	bsf	139,6,c	;volatile
  7787  000608  0012               	return		;funcret
  7788  00060A                     __end_of_encenderRotor:
  7789                           	callstack 0
  7790                           
  7791 ;; *************** function _M_4 *****************
  7792 ;; Defined at:
  7793 ;;		line 78 in file "GCODE.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  axis            2   46[BANK0 ] PTR struct Comando_T
  7796 ;;		 -> NULL(0), 
  7797 ;;  n               2   48[BANK0 ] int 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;		None
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      void 
  7802 ;; Registers used:
  7803 ;;		wreg, status,2, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 3F/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7809 ;;      Params:         0       4       0       0       0       0       0       0       0
  7810 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7812 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7813 ;;Total ram usage:        4 bytes
  7814 ;; Hardware stack levels used: 1
  7815 ;; Hardware stack levels required when called: 11
  7816 ;; This function calls:
  7817 ;;		_DireccionRotor
  7818 ;; This function is called by:
  7819 ;;		_G_97
  7820 ;;		_executeCommand
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text36
  7825  000558                     __ptext36:
  7826                           	callstack 0
  7827  000558                     _M_4:
  7828                           	callstack 18
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;GCODE.c: 79:    DireccionRotor(1);
  7832                           
  7833                           ;incstack = 0
  7834  000558  0E00               	movlw	0
  7835  00055A  6F8D               	movwf	(DireccionRotor@dir+1)& (0+255),b
  7836  00055C  0E01               	movlw	1
  7837  00055E  6F8C               	movwf	DireccionRotor@dir& (0+255),b
  7838  000560  ECC0  F002         	call	_DireccionRotor	;wreg free
  7839  000564  0012               	return		;funcret
  7840  000566                     __end_of_M_4:
  7841                           	callstack 0
  7842                           
  7843 ;; *************** function _M_3 *****************
  7844 ;; Defined at:
  7845 ;;		line 74 in file "GCODE.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  axis            2   46[BANK0 ] PTR struct Comando_T
  7848 ;;		 -> NULL(0), 
  7849 ;;  n               2   48[BANK0 ] int 
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;		None
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 3F/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7861 ;;      Params:         0       4       0       0       0       0       0       0       0
  7862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7864 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7865 ;;Total ram usage:        4 bytes
  7866 ;; Hardware stack levels used: 1
  7867 ;; Hardware stack levels required when called: 11
  7868 ;; This function calls:
  7869 ;;		_DireccionRotor
  7870 ;; This function is called by:
  7871 ;;		_G_97
  7872 ;;		_executeCommand
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text37
  7877  000566                     __ptext37:
  7878                           	callstack 0
  7879  000566                     _M_3:
  7880                           	callstack 18
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;GCODE.c: 75:    DireccionRotor(0);
  7884                           
  7885                           ;incstack = 0
  7886  000566  0E00               	movlw	0
  7887  000568  6F8D               	movwf	(DireccionRotor@dir+1)& (0+255),b
  7888  00056A  0E00               	movlw	0
  7889  00056C  6F8C               	movwf	DireccionRotor@dir& (0+255),b
  7890  00056E  ECC0  F002         	call	_DireccionRotor	;wreg free
  7891  000572  0012               	return		;funcret
  7892  000574                     __end_of_M_3:
  7893                           	callstack 0
  7894                           
  7895 ;; *************** function _DireccionRotor *****************
  7896 ;; Defined at:
  7897 ;;		line 13 in file "rotor.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  dir             2   44[BANK0 ] int 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      void 
  7904 ;; Registers used:
  7905 ;;		None
  7906 ;; Tracked objects:
  7907 ;;		On entry : 3F/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7911 ;;      Params:         0       2       0       0       0       0       0       0       0
  7912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7914 ;;      Totals:         0       2       0       0       0       0       0       0       0
  7915 ;;Total ram usage:        2 bytes
  7916 ;; Hardware stack levels used: 1
  7917 ;; Hardware stack levels required when called: 10
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_M_3
  7922 ;;		_M_4
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text38
  7927  000580                     __ptext38:
  7928                           	callstack 0
  7929  000580                     _DireccionRotor:
  7930                           	callstack 18
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;rotor.c: 14:    LATAbits.LATA7 = dir;
  7934                           
  7935                           ;incstack = 0
  7936  000580  B18C               	btfsc	DireccionRotor@dir& (0+255),0,b
  7937  000582  D002               	bra	u10895
  7938  000584  9E89               	bcf	137,7,c	;volatile
  7939  000586  D001               	bra	u10896
  7940  000588                     u10895:
  7941  000588  8E89               	bsf	137,7,c	;volatile
  7942  00058A                     u10896:
  7943  00058A  0012               	return		;funcret
  7944  00058C                     __end_of_DireccionRotor:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _G_53 *****************
  7948 ;; Defined at:
  7949 ;;		line 46 in file "GCODE.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  axis            2   50[BANK0 ] PTR struct Comando_T
  7952 ;;		 -> executeCommand@comando(100), 
  7953 ;;  n               2   52[BANK0 ] int 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  i               2   56[BANK0 ] int 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 3F/0
  7962 ;;		On exit  : 3F/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7965 ;;      Params:         0       4       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7968 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        8 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; Hardware stack levels required when called: 11
  7972 ;; This function calls:
  7973 ;;		___wmul
  7974 ;; This function is called by:
  7975 ;;		_executeCommand
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           	psect	text39
  7980  006C0C                     __ptext39:
  7981                           	callstack 0
  7982  006C0C                     _G_53:
  7983                           	callstack 18
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;GCODE.c: 47:    for(int i=0;i<n;i++){
  7987                           
  7988                           ;incstack = 0
  7989  006C0C  0E00               	movlw	0
  7990  006C0E  6F99               	movwf	(G_53@i+1)& (0+255),b
  7991  006C10  0E00               	movlw	0
  7992  006C12  6F98               	movwf	G_53@i& (0+255),b
  7993  006C14  D04A               	goto	l15171
  7994  006C16                     l15163:
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;GCODE.c: 48:       if(axis[i].code =='Z' || axis[i].code == 'z'){
  7998  006C16  C098  F08C         	movff	G_53@i,___wmul@multiplier
  7999  006C1A  C099  F08D         	movff	G_53@i+1,___wmul@multiplier+1
  8000  006C1E  0E00               	movlw	0
  8001  006C20  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8002  006C22  0E05               	movlw	5
  8003  006C24  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8004  006C26  ECB0  F001         	call	___wmul	;wreg free
  8005  006C2A  518C               	movf	?___wmul& (0+255),w,b
  8006  006C2C  2592               	addwf	G_53@axis& (0+255),w,b
  8007  006C2E  6ED9               	movwf	fsr2l,c
  8008  006C30  518D               	movf	(?___wmul+1)& (0+255),w,b
  8009  006C32  2193               	addwfc	(G_53@axis+1)& (0+255),w,b
  8010  006C34  6EDA               	movwf	fsr2h,c
  8011  006C36  0E5A               	movlw	90
  8012  006C38  18DE               	xorwf	postinc2,w,c
  8013  006C3A  B4D8               	btfsc	status,2,c
  8014  006C3C  D014               	goto	u18450
  8015                           
  8016                           ; BSR set to: 0
  8017  006C3E  C098  F08C         	movff	G_53@i,___wmul@multiplier
  8018  006C42  C099  F08D         	movff	G_53@i+1,___wmul@multiplier+1
  8019  006C46  0E00               	movlw	0
  8020  006C48  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8021  006C4A  0E05               	movlw	5
  8022  006C4C  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8023  006C4E  ECB0  F001         	call	___wmul	;wreg free
  8024  006C52  518C               	movf	?___wmul& (0+255),w,b
  8025  006C54  2592               	addwf	G_53@axis& (0+255),w,b
  8026  006C56  6ED9               	movwf	fsr2l,c
  8027  006C58  518D               	movf	(?___wmul+1)& (0+255),w,b
  8028  006C5A  2193               	addwfc	(G_53@axis+1)& (0+255),w,b
  8029  006C5C  6EDA               	movwf	fsr2h,c
  8030  006C5E  0E7A               	movlw	122
  8031  006C60  18DE               	xorwf	postinc2,w,c
  8032  006C62  A4D8               	btfss	status,2,c
  8033  006C64  D020               	goto	l15169
  8034  006C66                     u18450:
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;GCODE.c: 49:          pos_relativa_Z=axis[i].number;
  8038  006C66  C098  F08C         	movff	G_53@i,___wmul@multiplier
  8039  006C6A  C099  F08D         	movff	G_53@i+1,___wmul@multiplier+1
  8040  006C6E  0E00               	movlw	0
  8041  006C70  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8042  006C72  0E05               	movlw	5
  8043  006C74  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8044  006C76  ECB0  F001         	call	___wmul	;wreg free
  8045  006C7A  C092  F096         	movff	G_53@axis,??_G_53
  8046  006C7E  C093  F097         	movff	G_53@axis+1,??_G_53+1
  8047  006C82  518C               	movf	?___wmul& (0+255),w,b
  8048  006C84  2796               	addwf	??_G_53& (0+255),f,b
  8049  006C86  518D               	movf	(?___wmul+1)& (0+255),w,b
  8050  006C88  2397               	addwfc	(??_G_53+1)& (0+255),f,b
  8051  006C8A  0E01               	movlw	1
  8052  006C8C  2596               	addwf	??_G_53& (0+255),w,b
  8053  006C8E  6ED9               	movwf	fsr2l,c
  8054  006C90  0E00               	movlw	0
  8055  006C92  2197               	addwfc	(??_G_53+1)& (0+255),w,b
  8056  006C94  6EDA               	movwf	fsr2h,c
  8057  006C96  CFDE F0BC          	movff	postinc2,_pos_relativa_Z
  8058  006C9A  CFDE F0BD          	movff	postinc2,_pos_relativa_Z+1
  8059  006C9E  CFDE F0BE          	movff	postinc2,_pos_relativa_Z+2
  8060  006CA2  CFDE F0BF          	movff	postinc2,_pos_relativa_Z+3
  8061  006CA6                     l15169:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;GCODE.c: 51:    }
  8065  006CA6  4B98               	infsnz	G_53@i& (0+255),f,b
  8066  006CA8  2B99               	incf	(G_53@i+1)& (0+255),f,b
  8067  006CAA                     l15171:
  8068                           
  8069                           ; BSR set to: 0
  8070  006CAA  5194               	movf	G_53@n& (0+255),w,b
  8071  006CAC  5D98               	subwf	G_53@i& (0+255),w,b
  8072  006CAE  5199               	movf	(G_53@i+1)& (0+255),w,b
  8073  006CB0  0A80               	xorlw	128
  8074  006CB2  6F96               	movwf	??_G_53& (0+255),b
  8075  006CB4  5195               	movf	(G_53@n+1)& (0+255),w,b
  8076  006CB6  0A80               	xorlw	128
  8077  006CB8  5996               	subwfb	??_G_53& (0+255),w,b
  8078  006CBA  A0D8               	btfss	status,0,c
  8079  006CBC  D7AC               	goto	l15163
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;GCODE.c: 52:    angulo=0;
  8083  006CBE  0E00               	movlw	0
  8084  006CC0  6FC9               	movwf	_angulo& (0+255),b
  8085                           
  8086                           ; BSR set to: 0
  8087  006CC2  0012               	return		;funcret
  8088  006CC4                     __end_of_G_53:
  8089                           	callstack 0
  8090                           
  8091 ;; *************** function _G_01 *****************
  8092 ;; Defined at:
  8093 ;;		line 26 in file "GCODE.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  axis            2   60[BANK1 ] PTR struct Comando_T
  8096 ;;		 -> executeCommand@comando(100), 
  8097 ;;  n               2   62[BANK1 ] int 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  i               2   72[BANK1 ] int 
  8100 ;;  i               2   70[BANK1 ] int 
  8101 ;;  distancia       4   66[BANK1 ] float 
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  1    wreg      void 
  8104 ;; Registers used:
  8105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8106 ;; Tracked objects:
  8107 ;;		On entry : 3F/1
  8108 ;;		On exit  : 3F/1
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8111 ;;      Params:         0       0       4       0       0       0       0       0       0
  8112 ;;      Locals:         0       0       8       0       0       0       0       0       0
  8113 ;;      Temps:          0       0       2       0       0       0       0       0       0
  8114 ;;      Totals:         0       0      14       0       0       0       0       0       0
  8115 ;;Total ram usage:       14 bytes
  8116 ;; Hardware stack levels used: 1
  8117 ;; Hardware stack levels required when called: 12
  8118 ;; This function calls:
  8119 ;;		_TMR2_SetInterruptHandler
  8120 ;;		___fldiv
  8121 ;;		___flsub
  8122 ;;		___wmul
  8123 ;;		_mover_2
  8124 ;; This function is called by:
  8125 ;;		_executeCommand
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text40
  8130  0046CC                     __ptext40:
  8131                           	callstack 0
  8132  0046CC                     _G_01:
  8133                           	callstack 17
  8134                           
  8135                           ; BSR set to: 1
  8136                           ;GCODE.c: 27:    if(axis==((void*)0))return;
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;incstack = 0
  8140  0046CC  513C               	movf	G_01@axis& (0+255),w,b
  8141  0046CE  113D               	iorwf	(G_01@axis+1)& (0+255),w,b
  8142  0046D0  B4D8               	btfsc	status,2,c
  8143  0046D2  0012               	return	
  8144                           
  8145                           ; BSR set to: 1
  8146                           ;GCODE.c: 28:    TMR2_SetInterruptHandler(G01_TMR2_ISR);
  8147  0046D4  0E96               	movlw	low _G01_TMR2_ISR
  8148  0046D6  0100               	movlb	0	; () banked
  8149  0046D8  6F8C               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  8150  0046DA  0E32               	movlw	high _G01_TMR2_ISR
  8151  0046DC  6F8D               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8152  0046DE  ECDF  F002         	call	_TMR2_SetInterruptHandler	;wreg free
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;GCODE.c: 29:    float distancia;;GCODE.c: 30:    for(int i=0;i<n;i++){
  8156  0046E2  0E00               	movlw	0
  8157  0046E4  0101               	movlb	1	; () banked
  8158  0046E6  6F47               	movwf	(G_01@i+1)& (0+255),b
  8159  0046E8  0E00               	movlw	0
  8160  0046EA  6F46               	movwf	G_01@i& (0+255),b
  8161  0046EC  D03E               	goto	l15143
  8162  0046EE                     l15137:
  8163                           
  8164                           ; BSR set to: 1
  8165                           ;GCODE.c: 31:       if(axis[i].code=='F'){
  8166  0046EE  C146  F08C         	movff	G_01@i,___wmul@multiplier
  8167  0046F2  C147  F08D         	movff	G_01@i+1,___wmul@multiplier+1
  8168  0046F6  0E00               	movlw	0
  8169  0046F8  0100               	movlb	0	; () banked
  8170  0046FA  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8171  0046FC  0E05               	movlw	5
  8172  0046FE  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8173  004700  ECB0  F001         	call	___wmul	;wreg free
  8174  004704  518C               	movf	?___wmul& (0+255),w,b
  8175  004706  0101               	movlb	1	; () banked
  8176  004708  253C               	addwf	G_01@axis& (0+255),w,b
  8177  00470A  6ED9               	movwf	fsr2l,c
  8178  00470C  0100               	movlb	0	; () banked
  8179  00470E  518D               	movf	(?___wmul+1)& (0+255),w,b
  8180  004710  0101               	movlb	1	; () banked
  8181  004712  213D               	addwfc	(G_01@axis+1)& (0+255),w,b
  8182  004714  6EDA               	movwf	fsr2h,c
  8183  004716  0E46               	movlw	70
  8184  004718  18DE               	xorwf	postinc2,w,c
  8185  00471A  A4D8               	btfss	status,2,c
  8186  00471C  D024               	goto	l15141
  8187                           
  8188                           ; BSR set to: 1
  8189                           ;GCODE.c: 32:          feed=axis[i].number;
  8190  00471E  C146  F08C         	movff	G_01@i,___wmul@multiplier
  8191  004722  C147  F08D         	movff	G_01@i+1,___wmul@multiplier+1
  8192  004726  0E00               	movlw	0
  8193  004728  0100               	movlb	0	; () banked
  8194  00472A  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8195  00472C  0E05               	movlw	5
  8196  00472E  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8197  004730  ECB0  F001         	call	___wmul	;wreg free
  8198  004734  C13C  F140         	movff	G_01@axis,??_G_01
  8199  004738  C13D  F141         	movff	G_01@axis+1,??_G_01+1
  8200  00473C  518C               	movf	?___wmul& (0+255),w,b
  8201  00473E  0101               	movlb	1	; () banked
  8202  004740  2740               	addwf	??_G_01& (0+255),f,b
  8203  004742  0100               	movlb	0	; () banked
  8204  004744  518D               	movf	(?___wmul+1)& (0+255),w,b
  8205  004746  0101               	movlb	1	; () banked
  8206  004748  2341               	addwfc	(??_G_01+1)& (0+255),f,b
  8207  00474A  0E01               	movlw	1
  8208  00474C  2540               	addwf	??_G_01& (0+255),w,b
  8209  00474E  6ED9               	movwf	fsr2l,c
  8210  004750  0E00               	movlw	0
  8211  004752  2141               	addwfc	(??_G_01+1)& (0+255),w,b
  8212  004754  6EDA               	movwf	fsr2h,c
  8213  004756  CFDE F2EE          	movff	postinc2,_feed
  8214  00475A  CFDE F2EF          	movff	postinc2,_feed+1
  8215  00475E  CFDE F2F0          	movff	postinc2,_feed+2
  8216  004762  CFDE F2F1          	movff	postinc2,_feed+3
  8217  004766                     l15141:
  8218                           
  8219                           ; BSR set to: 1
  8220                           ;GCODE.c: 34:    }
  8221  004766  4B46               	infsnz	G_01@i& (0+255),f,b
  8222  004768  2B47               	incf	(G_01@i+1)& (0+255),f,b
  8223  00476A                     l15143:
  8224                           
  8225                           ; BSR set to: 1
  8226  00476A  513E               	movf	G_01@n& (0+255),w,b
  8227  00476C  5D46               	subwf	G_01@i& (0+255),w,b
  8228  00476E  5147               	movf	(G_01@i+1)& (0+255),w,b
  8229  004770  0A80               	xorlw	128
  8230  004772  6F40               	movwf	??_G_01& (0+255),b
  8231  004774  513F               	movf	(G_01@n+1)& (0+255),w,b
  8232  004776  0A80               	xorlw	128
  8233  004778  5940               	subwfb	??_G_01& (0+255),w,b
  8234  00477A  A0D8               	btfss	status,0,c
  8235  00477C  D7B8               	goto	l15137
  8236                           
  8237                           ; BSR set to: 1
  8238                           ;GCODE.c: 35:    inverse_time_feed=1/feed;
  8239  00477E  0E00               	movlw	0
  8240  004780  6F0D               	movwf	___fldiv@b& (0+255),b
  8241  004782  0E00               	movlw	0
  8242  004784  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
  8243  004786  0E80               	movlw	128
  8244  004788  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
  8245  00478A  0E3F               	movlw	63
  8246  00478C  6F10               	movwf	(___fldiv@b+3)& (0+255),b
  8247  00478E  C2EE  F111         	movff	_feed,___fldiv@a
  8248  004792  C2EF  F112         	movff	_feed+1,___fldiv@a+1
  8249  004796  C2F0  F113         	movff	_feed+2,___fldiv@a+2
  8250  00479A  C2F1  F114         	movff	_feed+3,___fldiv@a+3
  8251  00479E  EC25  F01C         	call	___fldiv	;wreg free
  8252  0047A2  C10D  F2EA         	movff	?___fldiv,_inverse_time_feed
  8253  0047A6  C10E  F2EB         	movff	?___fldiv+1,_inverse_time_feed+1
  8254  0047AA  C10F  F2EC         	movff	?___fldiv+2,_inverse_time_feed+2
  8255  0047AE  C110  F2ED         	movff	?___fldiv+3,_inverse_time_feed+3
  8256                           
  8257                           ; BSR set to: 1
  8258                           ;GCODE.c: 36:    for(int i=0;i<n;i++){
  8259  0047B2  0E00               	movlw	0
  8260  0047B4  6F49               	movwf	(G_01@i_3943+1)& (0+255),b
  8261  0047B6  0E00               	movlw	0
  8262  0047B8  6F48               	movwf	G_01@i_3943& (0+255),b
  8263  0047BA  D096               	goto	l15159
  8264  0047BC                     l15149:
  8265                           
  8266                           ; BSR set to: 1
  8267                           ;GCODE.c: 37:       if(axis[i].code =='Z' || axis[i].code == 'z'){
  8268  0047BC  C148  F08C         	movff	G_01@i_3943,___wmul@multiplier
  8269  0047C0  C149  F08D         	movff	G_01@i_3943+1,___wmul@multiplier+1
  8270  0047C4  0E00               	movlw	0
  8271  0047C6  0100               	movlb	0	; () banked
  8272  0047C8  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8273  0047CA  0E05               	movlw	5
  8274  0047CC  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8275  0047CE  ECB0  F001         	call	___wmul	;wreg free
  8276  0047D2  518C               	movf	?___wmul& (0+255),w,b
  8277  0047D4  0101               	movlb	1	; () banked
  8278  0047D6  253C               	addwf	G_01@axis& (0+255),w,b
  8279  0047D8  6ED9               	movwf	fsr2l,c
  8280  0047DA  0100               	movlb	0	; () banked
  8281  0047DC  518D               	movf	(?___wmul+1)& (0+255),w,b
  8282  0047DE  0101               	movlb	1	; () banked
  8283  0047E0  213D               	addwfc	(G_01@axis+1)& (0+255),w,b
  8284  0047E2  6EDA               	movwf	fsr2h,c
  8285  0047E4  0E5A               	movlw	90
  8286  0047E6  18DE               	xorwf	postinc2,w,c
  8287  0047E8  B4D8               	btfsc	status,2,c
  8288  0047EA  D018               	goto	u18420
  8289                           
  8290                           ; BSR set to: 1
  8291  0047EC  C148  F08C         	movff	G_01@i_3943,___wmul@multiplier
  8292  0047F0  C149  F08D         	movff	G_01@i_3943+1,___wmul@multiplier+1
  8293  0047F4  0E00               	movlw	0
  8294  0047F6  0100               	movlb	0	; () banked
  8295  0047F8  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8296  0047FA  0E05               	movlw	5
  8297  0047FC  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8298  0047FE  ECB0  F001         	call	___wmul	;wreg free
  8299  004802  518C               	movf	?___wmul& (0+255),w,b
  8300  004804  0101               	movlb	1	; () banked
  8301  004806  253C               	addwf	G_01@axis& (0+255),w,b
  8302  004808  6ED9               	movwf	fsr2l,c
  8303  00480A  0100               	movlb	0	; () banked
  8304  00480C  518D               	movf	(?___wmul+1)& (0+255),w,b
  8305  00480E  0101               	movlb	1	; () banked
  8306  004810  213D               	addwfc	(G_01@axis+1)& (0+255),w,b
  8307  004812  6EDA               	movwf	fsr2h,c
  8308  004814  0E7A               	movlw	122
  8309  004816  18DE               	xorwf	postinc2,w,c
  8310  004818  A4D8               	btfss	status,2,c
  8311  00481A  D063               	goto	l15157
  8312  00481C                     u18420:
  8313                           
  8314                           ; BSR set to: 1
  8315                           ;GCODE.c: 38:          distancia = axis[i].number - pos_relativa_Z;
  8316  00481C  C148  F08C         	movff	G_01@i_3943,___wmul@multiplier
  8317  004820  C149  F08D         	movff	G_01@i_3943+1,___wmul@multiplier+1
  8318  004824  0E00               	movlw	0
  8319  004826  0100               	movlb	0	; () banked
  8320  004828  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8321  00482A  0E05               	movlw	5
  8322  00482C  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8323  00482E  ECB0  F001         	call	___wmul	;wreg free
  8324  004832  C13C  F140         	movff	G_01@axis,??_G_01
  8325  004836  C13D  F141         	movff	G_01@axis+1,??_G_01+1
  8326  00483A  518C               	movf	?___wmul& (0+255),w,b
  8327  00483C  0101               	movlb	1	; () banked
  8328  00483E  2740               	addwf	??_G_01& (0+255),f,b
  8329  004840  0100               	movlb	0	; () banked
  8330  004842  518D               	movf	(?___wmul+1)& (0+255),w,b
  8331  004844  0101               	movlb	1	; () banked
  8332  004846  2341               	addwfc	(??_G_01+1)& (0+255),f,b
  8333  004848  0E01               	movlw	1
  8334  00484A  2540               	addwf	??_G_01& (0+255),w,b
  8335  00484C  6ED9               	movwf	fsr2l,c
  8336  00484E  0E00               	movlw	0
  8337  004850  2141               	addwfc	(??_G_01+1)& (0+255),w,b
  8338  004852  6EDA               	movwf	fsr2h,c
  8339  004854  CFDE F10D          	movff	postinc2,___flsub@b
  8340  004858  CFDE F10E          	movff	postinc2,___flsub@b+1
  8341  00485C  CFDE F10F          	movff	postinc2,___flsub@b+2
  8342  004860  CFDE F110          	movff	postinc2,___flsub@b+3
  8343  004864  C0BC  F111         	movff	_pos_relativa_Z,___flsub@a
  8344  004868  C0BD  F112         	movff	_pos_relativa_Z+1,___flsub@a+1
  8345  00486C  C0BE  F113         	movff	_pos_relativa_Z+2,___flsub@a+2
  8346  004870  C0BF  F114         	movff	_pos_relativa_Z+3,___flsub@a+3
  8347  004874  ECEC  F03D         	call	___flsub	;wreg free
  8348  004878  C10D  F142         	movff	?___flsub,G_01@distancia
  8349  00487C  C10E  F143         	movff	?___flsub+1,G_01@distancia+1
  8350  004880  C10F  F144         	movff	?___flsub+2,G_01@distancia+2
  8351  004884  C110  F145         	movff	?___flsub+3,G_01@distancia+3
  8352                           
  8353                           ;GCODE.c: 39:          objetivo_Z=axis[i].number;
  8354  004888  C148  F08C         	movff	G_01@i_3943,___wmul@multiplier
  8355  00488C  C149  F08D         	movff	G_01@i_3943+1,___wmul@multiplier+1
  8356  004890  0E00               	movlw	0
  8357  004892  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8358  004894  0E05               	movlw	5
  8359  004896  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  8360  004898  ECB0  F001         	call	___wmul	;wreg free
  8361  00489C  C13C  F140         	movff	G_01@axis,??_G_01
  8362  0048A0  C13D  F141         	movff	G_01@axis+1,??_G_01+1
  8363  0048A4  518C               	movf	?___wmul& (0+255),w,b
  8364  0048A6  0101               	movlb	1	; () banked
  8365  0048A8  2740               	addwf	??_G_01& (0+255),f,b
  8366  0048AA  0100               	movlb	0	; () banked
  8367  0048AC  518D               	movf	(?___wmul+1)& (0+255),w,b
  8368  0048AE  0101               	movlb	1	; () banked
  8369  0048B0  2341               	addwfc	(??_G_01+1)& (0+255),f,b
  8370  0048B2  0E01               	movlw	1
  8371  0048B4  2540               	addwf	??_G_01& (0+255),w,b
  8372  0048B6  6ED9               	movwf	fsr2l,c
  8373  0048B8  0E00               	movlw	0
  8374  0048BA  2141               	addwfc	(??_G_01+1)& (0+255),w,b
  8375  0048BC  6EDA               	movwf	fsr2h,c
  8376  0048BE  CFDE F2C0          	movff	postinc2,_objetivo_Z
  8377  0048C2  CFDE F2C1          	movff	postinc2,_objetivo_Z+1
  8378  0048C6  CFDE F2C2          	movff	postinc2,_objetivo_Z+2
  8379  0048CA  CFDE F2C3          	movff	postinc2,_objetivo_Z+3
  8380                           
  8381                           ; BSR set to: 1
  8382                           ;GCODE.c: 40:          mover_2(distancia);
  8383  0048CE  C142  F132         	movff	G_01@distancia,mover_2@distancia
  8384  0048D2  C143  F133         	movff	G_01@distancia+1,mover_2@distancia+1
  8385  0048D6  C144  F134         	movff	G_01@distancia+2,mover_2@distancia+2
  8386  0048DA  C145  F135         	movff	G_01@distancia+3,mover_2@distancia+3
  8387  0048DE  EC43  F022         	call	_mover_2	;wreg free
  8388  0048E2                     l15157:
  8389                           
  8390                           ;GCODE.c: 42:    }
  8391  0048E2  0101               	movlb	1	; () banked
  8392  0048E4  4B48               	infsnz	G_01@i_3943& (0+255),f,b
  8393  0048E6  2B49               	incf	(G_01@i_3943+1)& (0+255),f,b
  8394  0048E8                     l15159:
  8395                           
  8396                           ; BSR set to: 1
  8397  0048E8  513E               	movf	G_01@n& (0+255),w,b
  8398  0048EA  5D48               	subwf	G_01@i_3943& (0+255),w,b
  8399  0048EC  5149               	movf	(G_01@i_3943+1)& (0+255),w,b
  8400  0048EE  0A80               	xorlw	128
  8401  0048F0  6F40               	movwf	??_G_01& (0+255),b
  8402  0048F2  513F               	movf	(G_01@n+1)& (0+255),w,b
  8403  0048F4  0A80               	xorlw	128
  8404  0048F6  5940               	subwfb	??_G_01& (0+255),w,b
  8405  0048F8  B0D8               	btfsc	status,0,c
  8406  0048FA  0012               	return	
  8407  0048FC  D75F               	goto	l15149
  8408  0048FE                     __end_of_G_01:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _mover_2 *****************
  8412 ;; Defined at:
  8413 ;;		line 151 in file "guia.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  distancia       4   50[BANK1 ] float 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8422 ;; Tracked objects:
  8423 ;;		On entry : 3F/1
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8427 ;;      Params:         0       0       4       0       0       0       0       0       0
  8428 ;;      Locals:         0       0       4       0       0       0       0       0       0
  8429 ;;      Temps:          0       0       2       0       0       0       0       0       0
  8430 ;;      Totals:         0       0      10       0       0       0       0       0       0
  8431 ;;Total ram usage:       10 bytes
  8432 ;; Hardware stack levels used: 1
  8433 ;; Hardware stack levels required when called: 11
  8434 ;; This function calls:
  8435 ;;		_TMR2_LoadPeriodRegister
  8436 ;;		_TMR2_StartTimer
  8437 ;;		_TMR2_WriteTimer
  8438 ;;		___fldiv
  8439 ;;		___fleq
  8440 ;;		___flge
  8441 ;;		___flmul
  8442 ;;		___flneg
  8443 ;;		___fltol
  8444 ;;		___xxtofl
  8445 ;;		_setMicroStep
  8446 ;; This function is called by:
  8447 ;;		_G_01
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text41
  8452  004486                     __ptext41:
  8453                           	callstack 0
  8454  004486                     _mover_2:
  8455                           	callstack 17
  8456                           
  8457                           ; BSR set to: 1
  8458                           
  8459                           ; BSR set to: 1
  8460                           ;guia.c: 152:    while(busy==1){};
  8461                           
  8462                           ; BSR set to: 1
  8463                           ;incstack = 0
  8464  004486  05D4               	decf	_busy& (0+255),w,b
  8465  004488  B4D8               	btfsc	status,2,c
  8466  00448A  D7FD               	goto	__ptext41
  8467                           
  8468                           ; BSR set to: 1
  8469                           ;guia.c: 153:    if(distancia==0)return;
  8470  00448C  C132  F08C         	movff	mover_2@distancia,___fleq@ff1
  8471  004490  C133  F08D         	movff	mover_2@distancia+1,___fleq@ff1+1
  8472  004494  C134  F08E         	movff	mover_2@distancia+2,___fleq@ff1+2
  8473  004498  C135  F08F         	movff	mover_2@distancia+3,___fleq@ff1+3
  8474  00449C  0E00               	movlw	0
  8475  00449E  0100               	movlb	0	; () banked
  8476  0044A0  6F90               	movwf	___fleq@ff2& (0+255),b
  8477  0044A2  0E00               	movlw	0
  8478  0044A4  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  8479  0044A6  0E00               	movlw	0
  8480  0044A8  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  8481  0044AA  0E00               	movlw	0
  8482  0044AC  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  8483  0044AE  EC6E  F03A         	call	___fleq	;wreg free
  8484  0044B2  B0D8               	btfsc	status,0,c
  8485  0044B4  0012               	return	
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;guia.c: 154:    busy=1;
  8489  0044B6  0E01               	movlw	1
  8490  0044B8  0101               	movlb	1	; () banked
  8491  0044BA  6FD4               	movwf	_busy& (0+255),b
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;guia.c: 155:    LATBbits.LATB0=0;
  8495  0044BC  908A               	bcf	138,0,c	;volatile
  8496                           
  8497                           ; BSR set to: 1
  8498                           ;guia.c: 156:    if(distancia<0){
  8499  0044BE  AF35               	btfss	(mover_2@distancia+3)& (0+255),7,b
  8500  0044C0  D014               	goto	l1207
  8501                           
  8502                           ; BSR set to: 1
  8503                           ;guia.c: 157:       PORTBbits.RB7=0;
  8504  0044C2  9E81               	bcf	129,7,c	;volatile
  8505                           
  8506                           ; BSR set to: 1
  8507                           ;guia.c: 158:       distancia = -distancia;
  8508  0044C4  C132  F08C         	movff	mover_2@distancia,___flneg@f1
  8509  0044C8  C133  F08D         	movff	mover_2@distancia+1,___flneg@f1+1
  8510  0044CC  C134  F08E         	movff	mover_2@distancia+2,___flneg@f1+2
  8511  0044D0  C135  F08F         	movff	mover_2@distancia+3,___flneg@f1+3
  8512  0044D4  EC8A  F000         	call	___flneg	;wreg free
  8513  0044D8  C08C  F132         	movff	?___flneg,mover_2@distancia
  8514  0044DC  C08D  F133         	movff	?___flneg+1,mover_2@distancia+1
  8515  0044E0  C08E  F134         	movff	?___flneg+2,mover_2@distancia+2
  8516  0044E4  C08F  F135         	movff	?___flneg+3,mover_2@distancia+3
  8517                           
  8518                           ;guia.c: 159:    }
  8519  0044E8  D0D9               	goto	l14979
  8520  0044EA                     l1207:
  8521                           
  8522                           ; BSR set to: 1
  8523  0044EA  8E81               	bsf	129,7,c	;volatile
  8524  0044EC  D0D7               	goto	l14979
  8525  0044EE                     l14961:
  8526                           
  8527                           ; BSR set to: 1
  8528                           ;guia.c: 165:          ustep=1;
  8529  0044EE  0E01               	movlw	1
  8530  0044F0  0100               	movlb	0	; () banked
  8531  0044F2  6FD3               	movwf	_ustep& (0+255),b
  8532                           
  8533                           ;guia.c: 167:          while(((46665*60/(2*31)*inverse_time_feed/ustep)>255)){
  8534  0044F4  D00A               	goto	l14967
  8535  0044F6                     l14963:
  8536                           
  8537                           ; BSR set to: 1
  8538                           ;guia.c: 168:             ustep=ustep<<1;
  8539  0044F6  0100               	movlb	0	; () banked
  8540  0044F8  51D3               	movf	_ustep& (0+255),w,b
  8541  0044FA  25D3               	addwf	_ustep& (0+255),w,b
  8542  0044FC  6FD3               	movwf	_ustep& (0+255),b
  8543                           
  8544                           ;guia.c: 169:             if(ustep>16){
  8545  0044FE  0E10               	movlw	16
  8546  004500  65D3               	cpfsgt	_ustep& (0+255),b
  8547  004502  D003               	goto	l14967
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;guia.c: 170:                ustep=16;
  8551  004504  0E10               	movlw	16
  8552  004506  6FD3               	movwf	_ustep& (0+255),b
  8553                           
  8554                           ;guia.c: 171:                break;
  8555  004508  D042               	goto	u18270
  8556  00450A                     l14967:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;guia.c: 167:          while(((46665*60/(2*31)*inverse_time_feed/ustep)>255)){
  8560  00450A  0E00               	movlw	0
  8561  00450C  0101               	movlb	1	; () banked
  8562  00450E  6F26               	movwf	___flge@ff1& (0+255),b
  8563  004510  0E00               	movlw	0
  8564  004512  6F27               	movwf	(___flge@ff1+1)& (0+255),b
  8565  004514  0E7F               	movlw	127
  8566  004516  6F28               	movwf	(___flge@ff1+2)& (0+255),b
  8567  004518  0E43               	movlw	67
  8568  00451A  6F29               	movwf	(___flge@ff1+3)& (0+255),b
  8569  00451C  0100               	movlb	0	; () banked
  8570  00451E  51D3               	movf	_ustep& (0+255),w,b
  8571  004520  6F8C               	movwf	___xxtofl@val& (0+255),b
  8572  004522  6B8D               	clrf	(___xxtofl@val+1)& (0+255),b
  8573  004524  6B8E               	clrf	(___xxtofl@val+2)& (0+255),b
  8574  004526  6B8F               	clrf	(___xxtofl@val+3)& (0+255),b
  8575  004528  0E01               	movlw	1
  8576  00452A  ECAA  F027         	call	___xxtofl
  8577  00452E  C08C  F111         	movff	?___xxtofl,___fldiv@a
  8578  004532  C08D  F112         	movff	?___xxtofl+1,___fldiv@a+1
  8579  004536  C08E  F113         	movff	?___xxtofl+2,___fldiv@a+2
  8580  00453A  C08F  F114         	movff	?___xxtofl+3,___fldiv@a+3
  8581  00453E  0E00               	movlw	0
  8582  004540  6F9E               	movwf	___flmul@a& (0+255),b
  8583  004542  0E67               	movlw	103
  8584  004544  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  8585  004546  0E30               	movlw	48
  8586  004548  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  8587  00454A  0E47               	movlw	71
  8588  00454C  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  8589  00454E  C2EA  F09A         	movff	_inverse_time_feed,___flmul@b
  8590  004552  C2EB  F09B         	movff	_inverse_time_feed+1,___flmul@b+1
  8591  004556  C2EC  F09C         	movff	_inverse_time_feed+2,___flmul@b+2
  8592  00455A  C2ED  F09D         	movff	_inverse_time_feed+3,___flmul@b+3
  8593  00455E  ECD0  F012         	call	___flmul	;wreg free
  8594  004562  C09A  F10D         	movff	?___flmul,___fldiv@b
  8595  004566  C09B  F10E         	movff	?___flmul+1,___fldiv@b+1
  8596  00456A  C09C  F10F         	movff	?___flmul+2,___fldiv@b+2
  8597  00456E  C09D  F110         	movff	?___flmul+3,___fldiv@b+3
  8598  004572  EC25  F01C         	call	___fldiv	;wreg free
  8599  004576  C10D  F12A         	movff	?___fldiv,___flge@ff2
  8600  00457A  C10E  F12B         	movff	?___fldiv+1,___flge@ff2+1
  8601  00457E  C10F  F12C         	movff	?___fldiv+2,___flge@ff2+2
  8602  004582  C110  F12D         	movff	?___fldiv+3,___flge@ff2+3
  8603  004586  ECE4  F032         	call	___flge	;wreg free
  8604  00458A  A0D8               	btfss	status,0,c
  8605  00458C  D7B4               	goto	l14963
  8606  00458E                     u18270:
  8607                           
  8608                           ;guia.c: 174:          pasos =(int) (distancia * 31 * ustep);
  8609  00458E  0E00               	movlw	0
  8610  004590  0100               	movlb	0	; () banked
  8611  004592  6F9E               	movwf	___flmul@a& (0+255),b
  8612  004594  0E00               	movlw	0
  8613  004596  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  8614  004598  0EF8               	movlw	248
  8615  00459A  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  8616  00459C  0E41               	movlw	65
  8617  00459E  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  8618  0045A0  C132  F09A         	movff	mover_2@distancia,___flmul@b
  8619  0045A4  C133  F09B         	movff	mover_2@distancia+1,___flmul@b+1
  8620  0045A8  C134  F09C         	movff	mover_2@distancia+2,___flmul@b+2
  8621  0045AC  C135  F09D         	movff	mover_2@distancia+3,___flmul@b+3
  8622  0045B0  ECD0  F012         	call	___flmul	;wreg free
  8623  0045B4  C09A  F138         	movff	?___flmul,_mover_2$5637
  8624  0045B8  C09B  F139         	movff	?___flmul+1,_mover_2$5637+1
  8625  0045BC  C09C  F13A         	movff	?___flmul+2,_mover_2$5637+2
  8626  0045C0  C09D  F13B         	movff	?___flmul+3,_mover_2$5637+3
  8627                           
  8628                           ;guia.c: 174:          pasos =(int) (distancia * 31 * ustep);
  8629  0045C4  0100               	movlb	0	; () banked
  8630  0045C6  51D3               	movf	_ustep& (0+255),w,b
  8631  0045C8  6F8C               	movwf	___xxtofl@val& (0+255),b
  8632  0045CA  6B8D               	clrf	(___xxtofl@val+1)& (0+255),b
  8633  0045CC  6B8E               	clrf	(___xxtofl@val+2)& (0+255),b
  8634  0045CE  6B8F               	clrf	(___xxtofl@val+3)& (0+255),b
  8635  0045D0  0E01               	movlw	1
  8636  0045D2  ECAA  F027         	call	___xxtofl
  8637  0045D6  C08C  F09E         	movff	?___xxtofl,___flmul@a
  8638  0045DA  C08D  F09F         	movff	?___xxtofl+1,___flmul@a+1
  8639  0045DE  C08E  F0A0         	movff	?___xxtofl+2,___flmul@a+2
  8640  0045E2  C08F  F0A1         	movff	?___xxtofl+3,___flmul@a+3
  8641  0045E6  C138  F09A         	movff	_mover_2$5637,___flmul@b
  8642  0045EA  C139  F09B         	movff	_mover_2$5637+1,___flmul@b+1
  8643  0045EE  C13A  F09C         	movff	_mover_2$5637+2,___flmul@b+2
  8644  0045F2  C13B  F09D         	movff	_mover_2$5637+3,___flmul@b+3
  8645  0045F6  ECD0  F012         	call	___flmul	;wreg free
  8646  0045FA  C09A  F126         	movff	?___flmul,___fltol@f1
  8647  0045FE  C09B  F127         	movff	?___flmul+1,___fltol@f1+1
  8648  004602  C09C  F128         	movff	?___flmul+2,___fltol@f1+2
  8649  004606  C09D  F129         	movff	?___flmul+3,___fltol@f1+3
  8650  00460A  EC7B  F032         	call	___fltol	;wreg free
  8651  00460E  C126  F1C7         	movff	?___fltol,_pasos	;volatile
  8652  004612  C127  F1C8         	movff	?___fltol+1,_pasos+1	;volatile
  8653                           
  8654                           ;guia.c: 175:          setMicroStep(ustep);
  8655  004616  0100               	movlb	0	; () banked
  8656  004618  51D3               	movf	_ustep& (0+255),w,b
  8657  00461A  EC62  F03B         	call	_setMicroStep
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;guia.c: 176:          TMR2_LoadPeriodRegister((uint8_t)(46665*60/(2*31)*inverse_time_fe
      +                          ed/ustep));
  8661  00461E  51D3               	movf	_ustep& (0+255),w,b
  8662  004620  6F8C               	movwf	___xxtofl@val& (0+255),b
  8663  004622  6B8D               	clrf	(___xxtofl@val+1)& (0+255),b
  8664  004624  6B8E               	clrf	(___xxtofl@val+2)& (0+255),b
  8665  004626  6B8F               	clrf	(___xxtofl@val+3)& (0+255),b
  8666  004628  0E01               	movlw	1
  8667  00462A  ECAA  F027         	call	___xxtofl
  8668  00462E  C08C  F111         	movff	?___xxtofl,___fldiv@a
  8669  004632  C08D  F112         	movff	?___xxtofl+1,___fldiv@a+1
  8670  004636  C08E  F113         	movff	?___xxtofl+2,___fldiv@a+2
  8671  00463A  C08F  F114         	movff	?___xxtofl+3,___fldiv@a+3
  8672  00463E  0E00               	movlw	0
  8673  004640  6F9E               	movwf	___flmul@a& (0+255),b
  8674  004642  0E67               	movlw	103
  8675  004644  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  8676  004646  0E30               	movlw	48
  8677  004648  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  8678  00464A  0E47               	movlw	71
  8679  00464C  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  8680  00464E  C2EA  F09A         	movff	_inverse_time_feed,___flmul@b
  8681  004652  C2EB  F09B         	movff	_inverse_time_feed+1,___flmul@b+1
  8682  004656  C2EC  F09C         	movff	_inverse_time_feed+2,___flmul@b+2
  8683  00465A  C2ED  F09D         	movff	_inverse_time_feed+3,___flmul@b+3
  8684  00465E  ECD0  F012         	call	___flmul	;wreg free
  8685  004662  C09A  F10D         	movff	?___flmul,___fldiv@b
  8686  004666  C09B  F10E         	movff	?___flmul+1,___fldiv@b+1
  8687  00466A  C09C  F10F         	movff	?___flmul+2,___fldiv@b+2
  8688  00466E  C09D  F110         	movff	?___flmul+3,___fldiv@b+3
  8689  004672  EC25  F01C         	call	___fldiv	;wreg free
  8690  004676  C10D  F126         	movff	?___fldiv,___fltol@f1
  8691  00467A  C10E  F127         	movff	?___fldiv+1,___fltol@f1+1
  8692  00467E  C10F  F128         	movff	?___fldiv+2,___fltol@f1+2
  8693  004682  C110  F129         	movff	?___fldiv+3,___fltol@f1+3
  8694  004686  EC7B  F032         	call	___fltol	;wreg free
  8695  00468A  0101               	movlb	1	; () banked
  8696  00468C  5126               	movf	?___fltol& (0+255),w,b
  8697  00468E  ECDA  F002         	call	_TMR2_LoadPeriodRegister
  8698                           
  8699                           ;guia.c: 177:          break;
  8700  004692  D013               	goto	l14981
  8701  004694                     l14975:
  8702                           
  8703                           ; BSR set to: 1
  8704                           ;guia.c: 194:          TMR2_LoadPeriodRegister(255);
  8705  004694  0EFF               	movlw	255
  8706  004696  ECDA  F002         	call	_TMR2_LoadPeriodRegister
  8707                           
  8708                           ;guia.c: 195:       break;
  8709  00469A  D00F               	goto	l14981
  8710  00469C                     l14979:
  8711  00469C  0101               	movlb	1	; () banked
  8712  00469E  51D8               	movf	_feed_state& (0+255),w,b
  8713  0046A0  6F36               	movwf	??_mover_2& (0+255),b
  8714  0046A2  6B37               	clrf	(??_mover_2+1)& (0+255),b
  8715                           
  8716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8717                           ; Switch size 1, requested type "simple"
  8718                           ; Number of cases is 1, Range of values is 0 to 0
  8719                           ; switch strategies available:
  8720                           ; Name         Instructions Cycles
  8721                           ; simple_byte            4     3 (average)
  8722                           ;	Chosen strategy is simple_byte
  8723  0046A4  5137               	movf	(??_mover_2+1)& (0+255),w,b
  8724  0046A6  0A00               	xorlw	0	; case 0
  8725  0046A8  A4D8               	btfss	status,2,c
  8726  0046AA  D007               	goto	l14981
  8727                           
  8728                           ; BSR set to: 1
  8729                           ; Switch size 1, requested type "simple"
  8730                           ; Number of cases is 2, Range of values is 1 to 95
  8731                           ; switch strategies available:
  8732                           ; Name         Instructions Cycles
  8733                           ; simple_byte            7     4 (average)
  8734                           ;	Chosen strategy is simple_byte
  8735  0046AC  5136               	movf	??_mover_2& (0+255),w,b
  8736  0046AE  0A01               	xorlw	1	; case 1
  8737  0046B0  B4D8               	btfsc	status,2,c
  8738  0046B2  D71D               	goto	l14961
  8739  0046B4  0A5E               	xorlw	94	; case 95
  8740  0046B6  B4D8               	btfsc	status,2,c
  8741  0046B8  D7ED               	goto	l14975
  8742  0046BA                     l14981:
  8743                           
  8744                           ;guia.c: 204:    flag=0;
  8745  0046BA  0E00               	movlw	0
  8746  0046BC  0101               	movlb	1	; () banked
  8747  0046BE  6FD2               	movwf	_flag& (0+255),b
  8748                           
  8749                           ; BSR set to: 1
  8750                           ;guia.c: 205:    TMR2_WriteTimer(0);
  8751  0046C0  0E00               	movlw	0
  8752  0046C2  ECD5  F002         	call	_TMR2_WriteTimer
  8753                           
  8754                           ;guia.c: 208:    TMR2_StartTimer();
  8755  0046C6  EC05  F003         	call	_TMR2_StartTimer	;wreg free
  8756  0046CA  0012               	return		;funcret
  8757  0046CC                     __end_of_mover_2:
  8758                           	callstack 0
  8759                           
  8760 ;; *************** function _setMicroStep *****************
  8761 ;; Defined at:
  8762 ;;		line 212 in file "guia.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  ustep           1    wreg     unsigned char 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  ustep           1   46[BANK0 ] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2, status,0
  8771 ;; Tracked objects:
  8772 ;;		On entry : 3F/0
  8773 ;;		On exit  : 3F/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8776 ;;      Params:         0       0       0       0       0       0       0       0       0
  8777 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8778 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8779 ;;      Totals:         0       3       0       0       0       0       0       0       0
  8780 ;;Total ram usage:        3 bytes
  8781 ;; Hardware stack levels used: 1
  8782 ;; Hardware stack levels required when called: 10
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_mover_2
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text42
  8791  0076C4                     __ptext42:
  8792                           	callstack 0
  8793  0076C4                     _setMicroStep:
  8794                           	callstack 17
  8795                           
  8796                           ;incstack = 0
  8797                           ;setMicroStep@ustep stored from wreg
  8798  0076C4  6F8E               	movwf	setMicroStep@ustep& (0+255),b
  8799                           
  8800                           ;guia.c: 217:    switch(ustep){
  8801  0076C6  D018               	goto	l9969
  8802  0076C8                     l1221:
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;guia.c: 219:          LATBbits.LATB1=0;
  8806  0076C8  928A               	bcf	138,1,c	;volatile
  8807                           
  8808                           ;guia.c: 220:          LATBbits.LATB2=0;
  8809  0076CA  948A               	bcf	138,2,c	;volatile
  8810                           
  8811                           ;guia.c: 221:          LATBbits.LATB3=0;
  8812  0076CC  968A               	bcf	138,3,c	;volatile
  8813                           
  8814                           ;guia.c: 222:          break;
  8815  0076CE  0012               	return	
  8816  0076D0                     l1223:
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;guia.c: 224:          LATBbits.LATB1=1;
  8820  0076D0  828A               	bsf	138,1,c	;volatile
  8821                           
  8822                           ;guia.c: 225:          LATBbits.LATB2=0;
  8823  0076D2  948A               	bcf	138,2,c	;volatile
  8824                           
  8825                           ;guia.c: 226:          LATBbits.LATB3=0;
  8826  0076D4  968A               	bcf	138,3,c	;volatile
  8827                           
  8828                           ;guia.c: 227:          break;
  8829  0076D6  0012               	return	
  8830  0076D8                     l1224:
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;guia.c: 229:          LATBbits.LATB1=0;
  8834  0076D8  928A               	bcf	138,1,c	;volatile
  8835                           
  8836                           ;guia.c: 230:          LATBbits.LATB2=1;
  8837  0076DA  848A               	bsf	138,2,c	;volatile
  8838                           
  8839                           ;guia.c: 231:          LATBbits.LATB3=0;
  8840  0076DC  968A               	bcf	138,3,c	;volatile
  8841                           
  8842                           ;guia.c: 232:          break;
  8843  0076DE  0012               	return	
  8844  0076E0                     l1225:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;guia.c: 234:          LATBbits.LATB1=1;
  8848  0076E0  828A               	bsf	138,1,c	;volatile
  8849                           
  8850                           ;guia.c: 235:          LATBbits.LATB2=1;
  8851  0076E2  848A               	bsf	138,2,c	;volatile
  8852                           
  8853                           ;guia.c: 236:          LATBbits.LATB3=0;
  8854  0076E4  968A               	bcf	138,3,c	;volatile
  8855                           
  8856                           ;guia.c: 237:          break;
  8857  0076E6  0012               	return	
  8858  0076E8                     l1226:
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;guia.c: 239:          LATBbits.LATB1=1;
  8862  0076E8  828A               	bsf	138,1,c	;volatile
  8863                           
  8864                           ;guia.c: 240:          LATBbits.LATB2=1;
  8865  0076EA  848A               	bsf	138,2,c	;volatile
  8866                           
  8867                           ;guia.c: 241:          LATBbits.LATB3=1;
  8868  0076EC  868A               	bsf	138,3,c	;volatile
  8869                           
  8870                           ;guia.c: 242:          break;
  8871  0076EE  0012               	return	
  8872  0076F0                     l1227:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;guia.c: 244:          LATBbits.LATB1=1;
  8876  0076F0  828A               	bsf	138,1,c	;volatile
  8877                           
  8878                           ;guia.c: 245:          LATBbits.LATB2=1;
  8879  0076F2  848A               	bsf	138,2,c	;volatile
  8880                           
  8881                           ;guia.c: 246:          LATBbits.LATB3=1;
  8882  0076F4  868A               	bsf	138,3,c	;volatile
  8883                           
  8884                           ;guia.c: 247:          break;
  8885  0076F6  0012               	return	
  8886  0076F8                     l9969:
  8887  0076F8  0100               	movlb	0	; () banked
  8888  0076FA  518E               	movf	setMicroStep@ustep& (0+255),w,b
  8889  0076FC  6F8C               	movwf	??_setMicroStep& (0+255),b
  8890  0076FE  6B8D               	clrf	(??_setMicroStep+1)& (0+255),b
  8891                           
  8892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8893                           ; Switch size 1, requested type "simple"
  8894                           ; Number of cases is 1, Range of values is 0 to 0
  8895                           ; switch strategies available:
  8896                           ; Name         Instructions Cycles
  8897                           ; simple_byte            4     3 (average)
  8898                           ;	Chosen strategy is simple_byte
  8899  007700  518D               	movf	(??_setMicroStep+1)& (0+255),w,b
  8900  007702  0A00               	xorlw	0	; case 0
  8901  007704  A4D8               	btfss	status,2,c
  8902  007706  D7F4               	goto	l1227
  8903                           
  8904                           ; BSR set to: 0
  8905                           ; Switch size 1, requested type "simple"
  8906                           ; Number of cases is 5, Range of values is 1 to 16
  8907                           ; switch strategies available:
  8908                           ; Name         Instructions Cycles
  8909                           ; simple_byte           16     9 (average)
  8910                           ;	Chosen strategy is simple_byte
  8911  007708  518C               	movf	??_setMicroStep& (0+255),w,b
  8912  00770A  0A01               	xorlw	1	; case 1
  8913  00770C  B4D8               	btfsc	status,2,c
  8914  00770E  D7DC               	goto	l1221
  8915  007710  0A03               	xorlw	3	; case 2
  8916  007712  B4D8               	btfsc	status,2,c
  8917  007714  D7DD               	goto	l1223
  8918  007716  0A06               	xorlw	6	; case 4
  8919  007718  B4D8               	btfsc	status,2,c
  8920  00771A  D7DE               	goto	l1224
  8921  00771C  0A0C               	xorlw	12	; case 8
  8922  00771E  B4D8               	btfsc	status,2,c
  8923  007720  D7DF               	goto	l1225
  8924  007722  0A18               	xorlw	24	; case 16
  8925  007724  B4D8               	btfsc	status,2,c
  8926  007726  D7E0               	goto	l1226
  8927  007728  D7E3               	goto	l1227
  8928  00772A                     __end_of_setMicroStep:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function ___xxtofl *****************
  8932 ;; Defined at:
  8933 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  sign            1    wreg     unsigned char 
  8936 ;;  val             4   44[BANK0 ] long 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  sign            1   52[BANK0 ] unsigned char 
  8939 ;;  arg             4   54[BANK0 ] unsigned long 
  8940 ;;  exp             1   53[BANK0 ] unsigned char 
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  4   44[BANK0 ] unsigned char 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0
  8945 ;; Tracked objects:
  8946 ;;		On entry : 3E/1
  8947 ;;		On exit  : 3F/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8950 ;;      Params:         0       4       0       0       0       0       0       0       0
  8951 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8952 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8953 ;;      Totals:         0      14       0       0       0       0       0       0       0
  8954 ;;Total ram usage:       14 bytes
  8955 ;; Hardware stack levels used: 1
  8956 ;; Hardware stack levels required when called: 10
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_mover_2
  8961 ;;		_strtof
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           	psect	text43
  8966  004F54                     __ptext43:
  8967                           	callstack 0
  8968  004F54                     ___xxtofl:
  8969                           	callstack 17
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;incstack = 0
  8973                           ;___xxtofl@sign stored from wreg
  8974  004F54  0100               	movlb	0	; () banked
  8975  004F56  6F94               	movwf	___xxtofl@sign& (0+255),b
  8976  004F58  0100               	movlb	0	; () banked
  8977  004F5A  5194               	movf	___xxtofl@sign& (0+255),w,b
  8978  004F5C  A4D8               	btfss	status,2,c
  8979                           
  8980                           ; BSR set to: 0
  8981  004F5E  AF8F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8982  004F60  D01A               	goto	l2068
  8983                           
  8984                           ; BSR set to: 0
  8985  004F62  C08C  F090         	movff	___xxtofl@val,??___xxtofl
  8986  004F66  C08D  F091         	movff	___xxtofl@val+1,??___xxtofl+1
  8987  004F6A  C08E  F092         	movff	___xxtofl@val+2,??___xxtofl+2
  8988  004F6E  C08F  F093         	movff	___xxtofl@val+3,??___xxtofl+3
  8989  004F72  1F90               	comf	??___xxtofl& (0+255),f,b
  8990  004F74  1F91               	comf	(??___xxtofl+1)& (0+255),f,b
  8991  004F76  1F92               	comf	(??___xxtofl+2)& (0+255),f,b
  8992  004F78  1F93               	comf	(??___xxtofl+3)& (0+255),f,b
  8993  004F7A  2B90               	incf	??___xxtofl& (0+255),f,b
  8994  004F7C  0E00               	movlw	0
  8995  004F7E  2391               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8996  004F80  2392               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8997  004F82  2393               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8998  004F84  C090  F096         	movff	??___xxtofl,___xxtofl@arg
  8999  004F88  C091  F097         	movff	??___xxtofl+1,___xxtofl@arg+1
  9000  004F8C  C092  F098         	movff	??___xxtofl+2,___xxtofl@arg+2
  9001  004F90  C093  F099         	movff	??___xxtofl+3,___xxtofl@arg+3
  9002  004F94  D008               	goto	l10011
  9003  004F96                     l2068:
  9004                           
  9005                           ; BSR set to: 0
  9006  004F96  C08C  F096         	movff	___xxtofl@val,___xxtofl@arg
  9007  004F9A  C08D  F097         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9008  004F9E  C08E  F098         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9009  004FA2  C08F  F099         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9010  004FA6                     l10011:
  9011                           
  9012                           ; BSR set to: 0
  9013  004FA6  518C               	movf	___xxtofl@val& (0+255),w,b
  9014  004FA8  118D               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9015  004FAA  118E               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9016  004FAC  118F               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9017  004FAE  A4D8               	btfss	status,2,c
  9018  004FB0  D009               	goto	l10017
  9019                           
  9020                           ; BSR set to: 0
  9021  004FB2  0E00               	movlw	0
  9022  004FB4  6F8C               	movwf	?___xxtofl& (0+255),b
  9023  004FB6  0E00               	movlw	0
  9024  004FB8  6F8D               	movwf	(?___xxtofl+1)& (0+255),b
  9025  004FBA  0E00               	movlw	0
  9026  004FBC  6F8E               	movwf	(?___xxtofl+2)& (0+255),b
  9027  004FBE  0E00               	movlw	0
  9028  004FC0  6F8F               	movwf	(?___xxtofl+3)& (0+255),b
  9029  004FC2  0012               	return	
  9030  004FC4                     l10017:
  9031                           
  9032                           ; BSR set to: 0
  9033  004FC4  0E96               	movlw	150
  9034  004FC6  6F95               	movwf	___xxtofl@exp& (0+255),b
  9035  004FC8  D006               	goto	l10021
  9036  004FCA                     l10019:
  9037                           
  9038                           ; BSR set to: 0
  9039  004FCA  2B95               	incf	___xxtofl@exp& (0+255),f,b
  9040  004FCC  90D8               	bcf	status,0,c
  9041  004FCE  3399               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9042  004FD0  3398               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9043  004FD2  3397               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9044  004FD4  3396               	rrcf	___xxtofl@arg& (0+255),f,b
  9045  004FD6                     l10021:
  9046                           
  9047                           ; BSR set to: 0
  9048  004FD6  0E00               	movlw	0
  9049  004FD8  1596               	andwf	___xxtofl@arg& (0+255),w,b
  9050  004FDA  6F90               	movwf	??___xxtofl& (0+255),b
  9051  004FDC  0E00               	movlw	0
  9052  004FDE  1597               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9053  004FE0  6F91               	movwf	(??___xxtofl+1)& (0+255),b
  9054  004FE2  0E00               	movlw	0
  9055  004FE4  1598               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9056  004FE6  6F92               	movwf	(??___xxtofl+2)& (0+255),b
  9057  004FE8  0EFE               	movlw	254
  9058  004FEA  1599               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9059  004FEC  6F93               	movwf	(??___xxtofl+3)& (0+255),b
  9060  004FEE  5190               	movf	??___xxtofl& (0+255),w,b
  9061  004FF0  1191               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9062  004FF2  1192               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9063  004FF4  1193               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9064  004FF6  B4D8               	btfsc	status,2,c
  9065  004FF8  D00D               	goto	l2075
  9066  004FFA  D7E7               	goto	l10019
  9067  004FFC                     l10023:
  9068                           
  9069                           ; BSR set to: 0
  9070  004FFC  2B95               	incf	___xxtofl@exp& (0+255),f,b
  9071                           
  9072                           ; BSR set to: 0
  9073  004FFE  0E01               	movlw	1
  9074  005000  2796               	addwf	___xxtofl@arg& (0+255),f,b
  9075  005002  0E00               	movlw	0
  9076  005004  2397               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9077  005006  2398               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9078  005008  2399               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9079                           
  9080                           ; BSR set to: 0
  9081  00500A  90D8               	bcf	status,0,c
  9082  00500C  3399               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9083  00500E  3398               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9084  005010  3397               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9085  005012  3396               	rrcf	___xxtofl@arg& (0+255),f,b
  9086  005014                     l2075:
  9087                           
  9088                           ; BSR set to: 0
  9089  005014  0E00               	movlw	0
  9090  005016  1596               	andwf	___xxtofl@arg& (0+255),w,b
  9091  005018  6F90               	movwf	??___xxtofl& (0+255),b
  9092  00501A  0E00               	movlw	0
  9093  00501C  1597               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9094  00501E  6F91               	movwf	(??___xxtofl+1)& (0+255),b
  9095  005020  0E00               	movlw	0
  9096  005022  1598               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9097  005024  6F92               	movwf	(??___xxtofl+2)& (0+255),b
  9098  005026  0EFF               	movlw	255
  9099  005028  1599               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9100  00502A  6F93               	movwf	(??___xxtofl+3)& (0+255),b
  9101  00502C  5190               	movf	??___xxtofl& (0+255),w,b
  9102  00502E  1191               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9103  005030  1192               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9104  005032  1193               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9105  005034  B4D8               	btfsc	status,2,c
  9106  005036  D007               	goto	l10031
  9107  005038  D7E1               	goto	l10023
  9108  00503A                     l10029:
  9109                           
  9110                           ; BSR set to: 0
  9111  00503A  0795               	decf	___xxtofl@exp& (0+255),f,b
  9112  00503C  90D8               	bcf	status,0,c
  9113  00503E  3796               	rlcf	___xxtofl@arg& (0+255),f,b
  9114  005040  3797               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9115  005042  3798               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9116  005044  3799               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9117  005046                     l10031:
  9118                           
  9119                           ; BSR set to: 0
  9120  005046  BF98               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9121  005048  D003               	goto	u11010
  9122                           
  9123                           ; BSR set to: 0
  9124  00504A  0E02               	movlw	2
  9125  00504C  6195               	cpfslt	___xxtofl@exp& (0+255),b
  9126  00504E  D7F5               	goto	l10029
  9127  005050                     u11010:
  9128                           
  9129                           ; BSR set to: 0
  9130  005050  A195               	btfss	___xxtofl@exp& (0+255),0,b
  9131                           
  9132                           ; BSR set to: 0
  9133  005052  9F98               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9134                           
  9135                           ; BSR set to: 0
  9136  005054  90D8               	bcf	status,0,c
  9137  005056  3395               	rrcf	___xxtofl@exp& (0+255),f,b
  9138                           
  9139                           ; BSR set to: 0
  9140  005058  C095  F090         	movff	___xxtofl@exp,??___xxtofl
  9141  00505C  6B91               	clrf	(??___xxtofl+1)& (0+255),b
  9142  00505E  6B92               	clrf	(??___xxtofl+2)& (0+255),b
  9143  005060  6B93               	clrf	(??___xxtofl+3)& (0+255),b
  9144  005062  C090  F093         	movff	??___xxtofl,??___xxtofl+3
  9145  005066  6B92               	clrf	(??___xxtofl+2)& (0+255),b
  9146  005068  6B91               	clrf	(??___xxtofl+1)& (0+255),b
  9147  00506A  6B90               	clrf	??___xxtofl& (0+255),b
  9148  00506C  5190               	movf	??___xxtofl& (0+255),w,b
  9149  00506E  1396               	iorwf	___xxtofl@arg& (0+255),f,b
  9150  005070  5191               	movf	(??___xxtofl+1)& (0+255),w,b
  9151  005072  1397               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9152  005074  5192               	movf	(??___xxtofl+2)& (0+255),w,b
  9153  005076  1398               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9154  005078  5193               	movf	(??___xxtofl+3)& (0+255),w,b
  9155  00507A  1399               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9156                           
  9157                           ; BSR set to: 0
  9158  00507C  5194               	movf	___xxtofl@sign& (0+255),w,b
  9159  00507E  A4D8               	btfss	status,2,c
  9160                           
  9161                           ; BSR set to: 0
  9162  005080  AF8F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9163  005082  D001               	goto	l10047
  9164                           
  9165                           ; BSR set to: 0
  9166  005084  8F99               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9167  005086                     l10047:
  9168                           
  9169                           ; BSR set to: 0
  9170  005086  C096  F08C         	movff	___xxtofl@arg,?___xxtofl
  9171  00508A  C097  F08D         	movff	___xxtofl@arg+1,?___xxtofl+1
  9172  00508E  C098  F08E         	movff	___xxtofl@arg+2,?___xxtofl+2
  9173  005092  C099  F08F         	movff	___xxtofl@arg+3,?___xxtofl+3
  9174                           
  9175                           ; BSR set to: 0
  9176  005096  0012               	return		;funcret
  9177  005098                     __end_of___xxtofl:
  9178                           	callstack 0
  9179                           
  9180 ;; *************** function _TMR2_WriteTimer *****************
  9181 ;; Defined at:
  9182 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  timerVal        1    wreg     unsigned char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  timerVal        1   44[BANK0 ] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg
  9191 ;; Tracked objects:
  9192 ;;		On entry : 3F/1
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9196 ;;      Params:         0       0       0       0       0       0       0       0       0
  9197 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9199 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9200 ;;Total ram usage:        1 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; Hardware stack levels required when called: 10
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_mover_2
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text44
  9211  0005AA                     __ptext44:
  9212                           	callstack 0
  9213  0005AA                     _TMR2_WriteTimer:
  9214                           	callstack 17
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;incstack = 0
  9218                           ;TMR2_WriteTimer@timerVal stored from wreg
  9219  0005AA  0100               	movlb	0	; () banked
  9220  0005AC  6F8C               	movwf	TMR2_WriteTimer@timerVal& (0+255),b
  9221                           
  9222                           ;mcc_generated_files/tmr2.c: 108: void TMR2_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr2.c: 109: {;mcc_generated_files/tmr2.c: 111:     TMR2 = timerVal;
  9223  0005AE  C08C  FFBC         	movff	TMR2_WriteTimer@timerVal,4028	;volatile
  9224  0005B2  0012               	return		;funcret
  9225  0005B4                     __end_of_TMR2_WriteTimer:
  9226                           	callstack 0
  9227                           
  9228 ;; *************** function _TMR2_StartTimer *****************
  9229 ;; Defined at:
  9230 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;		None
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		None
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/1
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9244 ;;      Params:         0       0       0       0       0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9248 ;;Total ram usage:        0 bytes
  9249 ;; Hardware stack levels used: 1
  9250 ;; Hardware stack levels required when called: 10
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_mover_2
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text45
  9259  00060A                     __ptext45:
  9260                           	callstack 0
  9261  00060A                     _TMR2_StartTimer:
  9262                           	callstack 17
  9263                           
  9264                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  9265                           
  9266                           ;incstack = 0
  9267  00060A  84BA               	bsf	186,2,c	;volatile
  9268  00060C  0012               	return		;funcret
  9269  00060E                     __end_of_TMR2_StartTimer:
  9270                           	callstack 0
  9271                           
  9272 ;; *************** function _TMR2_LoadPeriodRegister *****************
  9273 ;; Defined at:
  9274 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  periodVal       1    wreg     unsigned char 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  periodVal       1   44[BANK0 ] unsigned char 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg
  9283 ;; Tracked objects:
  9284 ;;		On entry : 3F/1
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0
  9289 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9291 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9292 ;;Total ram usage:        1 bytes
  9293 ;; Hardware stack levels used: 1
  9294 ;; Hardware stack levels required when called: 10
  9295 ;; This function calls:
  9296 ;;		Nothing
  9297 ;; This function is called by:
  9298 ;;		_mover_2
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text46
  9303  0005B4                     __ptext46:
  9304                           	callstack 0
  9305  0005B4                     _TMR2_LoadPeriodRegister:
  9306                           	callstack 17
  9307                           
  9308                           ;incstack = 0
  9309                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  9310  0005B4  0100               	movlb	0	; () banked
  9311  0005B6  6F8C               	movwf	TMR2_LoadPeriodRegister@periodVal& (0+255),b
  9312                           
  9313                           ;mcc_generated_files/tmr2.c: 114: void TMR2_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr2.c: 115: {;mcc_generated_files/tmr2.c: 116:    PR2 = periodVal;
  9314  0005B8  C08C  FFBB         	movff	TMR2_LoadPeriodRegister@periodVal,4027	;volatile
  9315  0005BC  0012               	return		;funcret
  9316  0005BE                     __end_of_TMR2_LoadPeriodRegister:
  9317                           	callstack 0
  9318                           
  9319 ;; *************** function _TMR2_SetInterruptHandler *****************
  9320 ;; Defined at:
  9321 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
  9324 ;;		 -> G01_TMR2_ISR(1), TMR2_DefaultInterruptHandler(1), 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;		None
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2, status,0
  9331 ;; Tracked objects:
  9332 ;;		On entry : 3F/0
  9333 ;;		On exit  : 3F/0
  9334 ;;		Unchanged: 3F/0
  9335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9336 ;;      Params:         0       2       0       0       0       0       0       0       0
  9337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9339 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9340 ;;Total ram usage:        2 bytes
  9341 ;; Hardware stack levels used: 1
  9342 ;; Hardware stack levels required when called: 10
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_TMR2_Initialize
  9347 ;;		_G_01
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text47
  9352  0005BE                     __ptext47:
  9353                           	callstack 0
  9354  0005BE                     _TMR2_SetInterruptHandler:
  9355                           	callstack 17
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  9359                           
  9360                           ;incstack = 0
  9361  0005BE  C08C  F2DA         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9362  0005C2  C08D  F2DB         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9363                           
  9364                           ; BSR set to: 0
  9365  0005C6  0012               	return		;funcret
  9366  0005C8                     __end_of_TMR2_SetInterruptHandler:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function _FilaPop *****************
  9370 ;; Defined at:
  9371 ;;		line 30 in file "fila.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  str             2   55[BANK0 ] PTR unsigned char 
  9374 ;;		 -> executeCommand@strCommand(30), 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  2   55[BANK0 ] int 
  9379 ;; Registers used:
  9380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : 3F/0
  9383 ;;		On exit  : 3F/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9386 ;;      Params:         0       2       0       0       0       0       0       0       0
  9387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9389 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9390 ;;Total ram usage:        2 bytes
  9391 ;; Hardware stack levels used: 1
  9392 ;; Hardware stack levels required when called: 11
  9393 ;; This function calls:
  9394 ;;		___lbmod
  9395 ;;		_memcpy
  9396 ;; This function is called by:
  9397 ;;		_executeCommand
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text48
  9402  007B8E                     __ptext48:
  9403                           	callstack 0
  9404  007B8E                     _FilaPop:
  9405                           	callstack 18
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;fila.c: 31:    if(largo>0){
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;incstack = 0
  9412  007B8E  51C8               	movf	_largo& (0+255),w,b
  9413  007B90  B4D8               	btfsc	status,2,c
  9414  007B92  0012               	return	
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;fila.c: 32:          memcpy(str,fila[cola],32);
  9418  007B94  C097  F08C         	movff	FilaPop@str,memcpy@d1
  9419  007B98  C098  F08D         	movff	FilaPop@str+1,memcpy@d1+1
  9420  007B9C  0101               	movlb	1	; () banked
  9421  007B9E  51D5               	movf	_cola& (0+255),w,b
  9422  007BA0  0D20               	mullw	32
  9423  007BA2  0E80               	movlw	low _fila
  9424  007BA4  24F3               	addwf	243,w,c
  9425  007BA6  0100               	movlb	0	; () banked
  9426  007BA8  6F8E               	movwf	memcpy@s1& (0+255),b
  9427  007BAA  0E05               	movlw	high _fila
  9428  007BAC  20F4               	addwfc	prodh,w,c
  9429  007BAE  6F8F               	movwf	(memcpy@s1+1)& (0+255),b
  9430  007BB0  0E00               	movlw	0
  9431  007BB2  6F91               	movwf	(memcpy@n+1)& (0+255),b
  9432  007BB4  0E20               	movlw	32
  9433  007BB6  6F90               	movwf	memcpy@n& (0+255),b
  9434  007BB8  EC33  F03E         	call	_memcpy	;wreg free
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;fila.c: 33:          cola++;
  9438  007BBC  0101               	movlb	1	; () banked
  9439  007BBE  2BD5               	incf	_cola& (0+255),f,b
  9440                           
  9441                           ; BSR set to: 1
  9442                           ;fila.c: 34:          cola=cola%20;
  9443  007BC0  0E14               	movlw	20
  9444  007BC2  0100               	movlb	0	; () banked
  9445  007BC4  6F8C               	movwf	___lbmod@divisor& (0+255),b
  9446  007BC6  0101               	movlb	1	; () banked
  9447  007BC8  51D5               	movf	_cola& (0+255),w,b
  9448  007BCA  EC17  F001         	call	___lbmod
  9449  007BCE  0101               	movlb	1	; () banked
  9450  007BD0  6FD5               	movwf	_cola& (0+255),b
  9451                           
  9452                           ; BSR set to: 1
  9453                           ;fila.c: 35:          largo--;
  9454  007BD2  0100               	movlb	0	; () banked
  9455  007BD4  07C8               	decf	_largo& (0+255),f,b
  9456                           
  9457                           ; BSR set to: 0
  9458  007BD6  0012               	return		;funcret
  9459  007BD8                     __end_of_FilaPop:
  9460                           	callstack 0
  9461                           
  9462 ;; *************** function _USBCommandFetch *****************
  9463 ;; Defined at:
  9464 ;;		line 15 in file "CommandHandler.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;		None
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;  readTokens     64    0[BANK2 ] PTR unsigned char [32]
  9469 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  9470 ;;  i               2   68[BANK2 ] int 
  9471 ;;  s               2   64[BANK2 ] unsigned char [2]
  9472 ;;  lastTokenFla    2   66[BANK2 ] int 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 3E/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9482 ;;      Params:         0       0       0       0       0       0       0       0       0
  9483 ;;      Locals:         0       0       0      70       0       0       0       0       0
  9484 ;;      Temps:          0       0       4       0       0       0       0       0       0
  9485 ;;      Totals:         0       0       4      70       0       0       0       0       0
  9486 ;;Total ram usage:       74 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 18
  9489 ;; This function calls:
  9490 ;;		_Fila_Agregar
  9491 ;;		_MCC_USB_READ
  9492 ;;		_ParadaEmergencia
  9493 ;;		_memset
  9494 ;;		_sprintf
  9495 ;;		_strcpy
  9496 ;;		_strlen
  9497 ;;		_strtok
  9498 ;; This function is called by:
  9499 ;;		_main
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text49
  9504  00422A                     __ptext49:
  9505                           	callstack 0
  9506  00422A                     _USBCommandFetch:
  9507                           	callstack 12
  9508                           
  9509                           ;CommandHandler.c: 16:    char* readTokens[32];;CommandHandler.c: 17:    char s[2]="\n";
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;incstack = 0
  9513  00422A  C2FA  F240         	movff	USBCommandFetch@F5851,USBCommandFetch@s
  9514  00422E  C2FB  F241         	movff	USBCommandFetch@F5851+1,USBCommandFetch@s+1
  9515                           
  9516                           ;CommandHandler.c: 19:    int lastTokenFlag=0;
  9517  004232  0E00               	movlw	0
  9518  004234  0102               	movlb	2	; () banked
  9519  004236  6F43               	movwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),b
  9520  004238  0E00               	movlw	0
  9521  00423A  6F42               	movwf	USBCommandFetch@lastTokenFlag& (0+255),b
  9522                           
  9523                           ; BSR set to: 2
  9524                           ;CommandHandler.c: 20:    if(largo<15){
  9525  00423C  0E0F               	movlw	15
  9526  00423E  0100               	movlb	0	; () banked
  9527  004240  61C8               	cpfslt	_largo& (0+255),b
  9528  004242  0012               	return	
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;CommandHandler.c: 21:          MCC_USB_READ();
  9532  004244  EC0A  F002         	call	_MCC_USB_READ	;wreg free
  9533                           
  9534                           ;CommandHandler.c: 23:          if(readBuffer[0]=='E'){
  9535  004248  0E45               	movlw	69
  9536  00424A  0103               	movlb	3	; () banked
  9537  00424C  1962               	xorwf	_readBuffer& (0+255),w,b
  9538  00424E  B4D8               	btfsc	status,2,c
  9539                           
  9540                           ; BSR set to: 3
  9541                           ;CommandHandler.c: 24:             ParadaEmergencia();
  9542  004250  EC9C  F001         	call	_ParadaEmergencia	;wreg free
  9543                           
  9544                           ;CommandHandler.c: 26:          if(numBytesRead>0){
  9545  004254  0101               	movlb	1	; () banked
  9546  004256  51D7               	movf	_numBytesRead& (0+255),w,b
  9547  004258  B4D8               	btfsc	status,2,c
  9548  00425A  0012               	return	
  9549                           
  9550                           ; BSR set to: 1
  9551                           ;CommandHandler.c: 27:             memset(readTokens,0,32);
  9552  00425C  0E00               	movlw	low USBCommandFetch@readTokens
  9553  00425E  0100               	movlb	0	; () banked
  9554  004260  6F8C               	movwf	memset@dest& (0+255),b
  9555  004262  0E02               	movlw	high USBCommandFetch@readTokens
  9556  004264  6F8D               	movwf	(memset@dest+1)& (0+255),b
  9557  004266  0E00               	movlw	0
  9558  004268  6F8F               	movwf	(memset@c+1)& (0+255),b
  9559  00426A  0E00               	movlw	0
  9560  00426C  6F8E               	movwf	memset@c& (0+255),b
  9561  00426E  0E00               	movlw	0
  9562  004270  6F91               	movwf	(memset@n+1)& (0+255),b
  9563  004272  0E20               	movlw	32
  9564  004274  6F90               	movwf	memset@n& (0+255),b
  9565  004276  EC25  F02A         	call	_memset	;wreg free
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;CommandHandler.c: 28:             if(readBuffer[numBytesRead-1]!=0x0A){
  9569  00427A  0E61               	movlw	low (_readBuffer+65535)
  9570  00427C  0101               	movlb	1	; () banked
  9571  00427E  25D7               	addwf	_numBytesRead& (0+255),w,b
  9572  004280  6ED9               	movwf	fsr2l,c
  9573  004282  6ADA               	clrf	fsr2h,c
  9574  004284  0E03               	movlw	high (_readBuffer+65535)
  9575  004286  22DA               	addwfc	fsr2h,f,c
  9576  004288  0E0A               	movlw	10
  9577  00428A  18DE               	xorwf	postinc2,w,c
  9578  00428C  B4D8               	btfsc	status,2,c
  9579  00428E  D005               	goto	l15531
  9580                           
  9581                           ; BSR set to: 1
  9582                           ;CommandHandler.c: 29:                lastTokenFlag=1;
  9583  004290  0E00               	movlw	0
  9584  004292  0102               	movlb	2	; () banked
  9585  004294  6F43               	movwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),b
  9586  004296  0E01               	movlw	1
  9587  004298  D004               	goto	L6
  9588  00429A                     l15531:
  9589                           
  9590                           ; BSR set to: 1
  9591                           ;CommandHandler.c: 32:                lastTokenFlag=0;
  9592  00429A  0E00               	movlw	0
  9593  00429C  0102               	movlb	2	; () banked
  9594  00429E  6F43               	movwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),b
  9595  0042A0  0E00               	movlw	0
  9596  0042A2                     L6:
  9597  0042A2  6F42               	movwf	USBCommandFetch@lastTokenFlag& (0+255),b
  9598                           
  9599                           ; BSR set to: 2
  9600                           ;CommandHandler.c: 35:             readTokens[0]=strtok(readBuffer,s);
  9601  0042A4  0E62               	movlw	low _readBuffer
  9602  0042A6  0100               	movlb	0	; () banked
  9603  0042A8  6F98               	movwf	strtok@s& (0+255),b
  9604  0042AA  0E03               	movlw	high _readBuffer
  9605  0042AC  6F99               	movwf	(strtok@s+1)& (0+255),b
  9606  0042AE  0E40               	movlw	low USBCommandFetch@s
  9607  0042B0  6F9A               	movwf	strtok@sep& (0+255),b
  9608  0042B2  0E02               	movlw	high USBCommandFetch@s
  9609  0042B4  6F9B               	movwf	(strtok@sep+1)& (0+255),b
  9610  0042B6  EC62  F036         	call	_strtok	;wreg free
  9611  0042BA  C098  F200         	movff	?_strtok,USBCommandFetch@readTokens
  9612  0042BE  C099  F201         	movff	?_strtok+1,USBCommandFetch@readTokens+1
  9613                           
  9614                           ;CommandHandler.c: 36:             sprintf(lastToken,"%s%s",lastToken,readTokens[0]);
  9615  0042C2  0EA2               	movlw	low _lastToken
  9616  0042C4  0101               	movlb	1	; () banked
  9617  0042C6  6F9C               	movwf	sprintf@s& (0+255),b
  9618  0042C8  0E03               	movlw	high _lastToken
  9619  0042CA  6F9D               	movwf	(sprintf@s+1)& (0+255),b
  9620  0042CC  0ED3               	movlw	low STR_2
  9621  0042CE  6F9E               	movwf	sprintf@fmt& (0+255),b
  9622  0042D0  0EA2               	movlw	low _lastToken
  9623  0042D2  6F9F               	movwf	(?_sprintf+3)& (0+255),b
  9624  0042D4  0E03               	movlw	high _lastToken
  9625  0042D6  6FA0               	movwf	(?_sprintf+4)& (0+255),b
  9626  0042D8  C200  F1A1         	movff	USBCommandFetch@readTokens,?_sprintf+5
  9627  0042DC  C201  F1A2         	movff	USBCommandFetch@readTokens+1,?_sprintf+6
  9628  0042E0  ECA1  F03D         	call	_sprintf	;wreg free
  9629                           
  9630                           ; BSR set to: 1
  9631                           ;CommandHandler.c: 37:             Fila_Agregar(lastToken,strlen(lastToken));
  9632  0042E4  0EA2               	movlw	low _lastToken
  9633  0042E6  0100               	movlb	0	; () banked
  9634  0042E8  6F97               	movwf	Fila_Agregar@comando& (0+255),b
  9635  0042EA  0E03               	movlw	high _lastToken
  9636  0042EC  6F98               	movwf	(Fila_Agregar@comando+1)& (0+255),b
  9637  0042EE  0EA2               	movlw	low _lastToken
  9638  0042F0  6F8C               	movwf	strlen@s& (0+255),b
  9639  0042F2  0E03               	movlw	high _lastToken
  9640  0042F4  6F8D               	movwf	(strlen@s+1)& (0+255),b
  9641  0042F6  ECE9  F000         	call	_strlen	;wreg free
  9642  0042FA  C08C  F099         	movff	?_strlen,Fila_Agregar@nBytes
  9643  0042FE  C08D  F09A         	movff	?_strlen+1,Fila_Agregar@nBytes+1
  9644  004302  EC7F  F03C         	call	_Fila_Agregar	;wreg free
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;CommandHandler.c: 38:             readTokens[1]=strtok(((void*)0),s);
  9648  004306  0E00               	movlw	0
  9649  004308  6F98               	movwf	strtok@s& (0+255),b
  9650  00430A  0E00               	movlw	0
  9651  00430C  6F99               	movwf	(strtok@s+1)& (0+255),b
  9652  00430E  0E40               	movlw	low USBCommandFetch@s
  9653  004310  6F9A               	movwf	strtok@sep& (0+255),b
  9654  004312  0E02               	movlw	high USBCommandFetch@s
  9655  004314  6F9B               	movwf	(strtok@sep+1)& (0+255),b
  9656  004316  EC62  F036         	call	_strtok	;wreg free
  9657  00431A  C098  F202         	movff	?_strtok,USBCommandFetch@readTokens+2
  9658  00431E  C099  F203         	movff	?_strtok+1,USBCommandFetch@readTokens+3
  9659                           
  9660                           ;CommandHandler.c: 39:             i=1;
  9661  004322  0E00               	movlw	0
  9662  004324  0102               	movlb	2	; () banked
  9663  004326  6F45               	movwf	(USBCommandFetch@i+1)& (0+255),b
  9664  004328  0E01               	movlw	1
  9665  00432A  6F44               	movwf	USBCommandFetch@i& (0+255),b
  9666                           
  9667                           ;CommandHandler.c: 40:             while(readTokens[i]!=((void*)0)){
  9668  00432C  D079               	goto	l15555
  9669  00432E                     l15543:
  9670                           
  9671                           ; BSR set to: 2
  9672                           ;CommandHandler.c: 41:                readTokens[i+1]=strtok(((void*)0),s);
  9673  00432E  0E00               	movlw	0
  9674  004330  0100               	movlb	0	; () banked
  9675  004332  6F98               	movwf	strtok@s& (0+255),b
  9676  004334  0E00               	movlw	0
  9677  004336  6F99               	movwf	(strtok@s+1)& (0+255),b
  9678  004338  0E40               	movlw	low USBCommandFetch@s
  9679  00433A  6F9A               	movwf	strtok@sep& (0+255),b
  9680  00433C  0E02               	movlw	high USBCommandFetch@s
  9681  00433E  6F9B               	movwf	(strtok@sep+1)& (0+255),b
  9682  004340  EC62  F036         	call	_strtok	;wreg free
  9683  004344  C244  F1BA         	movff	USBCommandFetch@i,??_USBCommandFetch
  9684  004348  C245  F1BB         	movff	USBCommandFetch@i+1,??_USBCommandFetch+1
  9685  00434C  90D8               	bcf	status,0,c
  9686  00434E  0101               	movlb	1	; () banked
  9687  004350  37BA               	rlcf	??_USBCommandFetch& (0+255),f,b
  9688  004352  37BB               	rlcf	(??_USBCommandFetch+1)& (0+255),f,b
  9689  004354  0E02               	movlw	2
  9690  004356  27BA               	addwf	??_USBCommandFetch& (0+255),f,b
  9691  004358  0E00               	movlw	0
  9692  00435A  23BB               	addwfc	(??_USBCommandFetch+1)& (0+255),f,b
  9693  00435C  0E00               	movlw	low USBCommandFetch@readTokens
  9694  00435E  25BA               	addwf	??_USBCommandFetch& (0+255),w,b
  9695  004360  6ED9               	movwf	fsr2l,c
  9696  004362  0E02               	movlw	high USBCommandFetch@readTokens
  9697  004364  21BB               	addwfc	(??_USBCommandFetch+1)& (0+255),w,b
  9698  004366  6EDA               	movwf	fsr2h,c
  9699  004368  0100               	movlb	0	; () banked
  9700  00436A  C098  FFDE         	movff	?_strtok,postinc2
  9701  00436E  C099  FFDD         	movff	?_strtok+1,postdec2
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;CommandHandler.c: 42:                if(readTokens[i+1]!=((void*)0)||lastTokenFlag==0){
  9705  004372  C244  F1BA         	movff	USBCommandFetch@i,??_USBCommandFetch
  9706  004376  C245  F1BB         	movff	USBCommandFetch@i+1,??_USBCommandFetch+1
  9707  00437A  90D8               	bcf	status,0,c
  9708  00437C  0101               	movlb	1	; () banked
  9709  00437E  37BA               	rlcf	??_USBCommandFetch& (0+255),f,b
  9710  004380  37BB               	rlcf	(??_USBCommandFetch+1)& (0+255),f,b
  9711  004382  0E02               	movlw	2
  9712  004384  27BA               	addwf	??_USBCommandFetch& (0+255),f,b
  9713  004386  0E00               	movlw	0
  9714  004388  23BB               	addwfc	(??_USBCommandFetch+1)& (0+255),f,b
  9715  00438A  0E00               	movlw	low USBCommandFetch@readTokens
  9716  00438C  25BA               	addwf	??_USBCommandFetch& (0+255),w,b
  9717  00438E  6ED9               	movwf	fsr2l,c
  9718  004390  0E02               	movlw	high USBCommandFetch@readTokens
  9719  004392  21BB               	addwfc	(??_USBCommandFetch+1)& (0+255),w,b
  9720  004394  6EDA               	movwf	fsr2h,c
  9721  004396  50DE               	movf	postinc2,w,c
  9722  004398  10DE               	iorwf	postinc2,w,c
  9723  00439A  A4D8               	btfss	status,2,c
  9724  00439C  D005               	goto	u18980
  9725                           
  9726                           ; BSR set to: 1
  9727  00439E  0102               	movlb	2	; () banked
  9728  0043A0  5142               	movf	USBCommandFetch@lastTokenFlag& (0+255),w,b
  9729  0043A2  1143               	iorwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),w,b
  9730  0043A4  A4D8               	btfss	status,2,c
  9731  0043A6  D024               	goto	l15551
  9732  0043A8                     u18980:
  9733                           
  9734                           ;CommandHandler.c: 43:                   Fila_Agregar(readTokens[i],strlen(readTokens[i]
      +                          ));
  9735  0043A8  90D8               	bcf	status,0,c
  9736  0043AA  0102               	movlb	2	; () banked
  9737  0043AC  3544               	rlcf	USBCommandFetch@i& (0+255),w,b
  9738  0043AE  6ED9               	movwf	fsr2l,c
  9739  0043B0  3545               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  9740  0043B2  6EDA               	movwf	fsr2h,c
  9741  0043B4  0E00               	movlw	low USBCommandFetch@readTokens
  9742  0043B6  26D9               	addwf	fsr2l,f,c
  9743  0043B8  0E02               	movlw	high USBCommandFetch@readTokens
  9744  0043BA  22DA               	addwfc	fsr2h,f,c
  9745  0043BC  CFDE F097          	movff	postinc2,Fila_Agregar@comando
  9746  0043C0  CFDD F098          	movff	postdec2,Fila_Agregar@comando+1
  9747  0043C4  90D8               	bcf	status,0,c
  9748  0043C6  3544               	rlcf	USBCommandFetch@i& (0+255),w,b
  9749  0043C8  6ED9               	movwf	fsr2l,c
  9750  0043CA  3545               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  9751  0043CC  6EDA               	movwf	fsr2h,c
  9752  0043CE  0E00               	movlw	low USBCommandFetch@readTokens
  9753  0043D0  26D9               	addwf	fsr2l,f,c
  9754  0043D2  0E02               	movlw	high USBCommandFetch@readTokens
  9755  0043D4  22DA               	addwfc	fsr2h,f,c
  9756  0043D6  CFDE F08C          	movff	postinc2,strlen@s
  9757  0043DA  CFDD F08D          	movff	postdec2,strlen@s+1
  9758  0043DE  ECE9  F000         	call	_strlen	;wreg free
  9759  0043E2  C08C  F099         	movff	?_strlen,Fila_Agregar@nBytes
  9760  0043E6  C08D  F09A         	movff	?_strlen+1,Fila_Agregar@nBytes+1
  9761  0043EA  EC7F  F03C         	call	_Fila_Agregar	;wreg free
  9762                           
  9763                           ;CommandHandler.c: 44:                }
  9764  0043EE  D015               	goto	l15553
  9765  0043F0                     l15551:
  9766                           
  9767                           ; BSR set to: 2
  9768  0043F0  0EA2               	movlw	low _lastToken
  9769  0043F2  0100               	movlb	0	; () banked
  9770  0043F4  6F8C               	movwf	strcpy@dest& (0+255),b
  9771  0043F6  0E03               	movlw	high _lastToken
  9772  0043F8  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
  9773  0043FA  90D8               	bcf	status,0,c
  9774  0043FC  0102               	movlb	2	; () banked
  9775  0043FE  3544               	rlcf	USBCommandFetch@i& (0+255),w,b
  9776  004400  6ED9               	movwf	fsr2l,c
  9777  004402  3545               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  9778  004404  6EDA               	movwf	fsr2h,c
  9779  004406  0E00               	movlw	low USBCommandFetch@readTokens
  9780  004408  26D9               	addwf	fsr2l,f,c
  9781  00440A  0E02               	movlw	high USBCommandFetch@readTokens
  9782  00440C  22DA               	addwfc	fsr2h,f,c
  9783  00440E  CFDE F08E          	movff	postinc2,strcpy@src
  9784  004412  CFDD F08F          	movff	postdec2,strcpy@src+1
  9785  004416  ECD7  F03C         	call	_strcpy	;wreg free
  9786  00441A                     l15553:
  9787                           
  9788                           ;CommandHandler.c: 46:                i++;
  9789  00441A  0102               	movlb	2	; () banked
  9790  00441C  4B44               	infsnz	USBCommandFetch@i& (0+255),f,b
  9791  00441E  2B45               	incf	(USBCommandFetch@i+1)& (0+255),f,b
  9792  004420                     l15555:
  9793                           
  9794                           ; BSR set to: 2
  9795                           ;CommandHandler.c: 40:             while(readTokens[i]!=((void*)0)){
  9796  004420  90D8               	bcf	status,0,c
  9797  004422  3544               	rlcf	USBCommandFetch@i& (0+255),w,b
  9798  004424  6ED9               	movwf	fsr2l,c
  9799  004426  3545               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  9800  004428  6EDA               	movwf	fsr2h,c
  9801  00442A  0E00               	movlw	low USBCommandFetch@readTokens
  9802  00442C  26D9               	addwf	fsr2l,f,c
  9803  00442E  0E02               	movlw	high USBCommandFetch@readTokens
  9804  004430  22DA               	addwfc	fsr2h,f,c
  9805  004432  50DE               	movf	postinc2,w,c
  9806  004434  10DE               	iorwf	postinc2,w,c
  9807  004436  A4D8               	btfss	status,2,c
  9808  004438  D77A               	goto	l15543
  9809                           
  9810                           ; BSR set to: 2
  9811                           ;CommandHandler.c: 48:             if(lastTokenFlag==0){
  9812  00443A  5142               	movf	USBCommandFetch@lastTokenFlag& (0+255),w,b
  9813  00443C  1143               	iorwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),w,b
  9814  00443E  A4D8               	btfss	status,2,c
  9815  004440  D00F               	goto	l15561
  9816                           
  9817                           ; BSR set to: 2
  9818                           ;CommandHandler.c: 49:                memset(lastToken,0,sizeof(lastToken));
  9819  004442  0EA2               	movlw	low _lastToken
  9820  004444  0100               	movlb	0	; () banked
  9821  004446  6F8C               	movwf	memset@dest& (0+255),b
  9822  004448  0E03               	movlw	high _lastToken
  9823  00444A  6F8D               	movwf	(memset@dest+1)& (0+255),b
  9824  00444C  0E00               	movlw	0
  9825  00444E  6F8F               	movwf	(memset@c+1)& (0+255),b
  9826  004450  0E00               	movlw	0
  9827  004452  6F8E               	movwf	memset@c& (0+255),b
  9828  004454  0E00               	movlw	0
  9829  004456  6F91               	movwf	(memset@n+1)& (0+255),b
  9830  004458  0E1E               	movlw	30
  9831  00445A  6F90               	movwf	memset@n& (0+255),b
  9832  00445C  EC25  F02A         	call	_memset	;wreg free
  9833  004460                     l15561:
  9834                           
  9835                           ;CommandHandler.c: 51:             numBytesRead=0;
  9836  004460  0E00               	movlw	0
  9837  004462  0101               	movlb	1	; () banked
  9838  004464  6FD7               	movwf	_numBytesRead& (0+255),b
  9839                           
  9840                           ; BSR set to: 1
  9841                           ;CommandHandler.c: 52:             memset(readBuffer,0,sizeof(readBuffer));
  9842  004466  0E62               	movlw	low _readBuffer
  9843  004468  0100               	movlb	0	; () banked
  9844  00446A  6F8C               	movwf	memset@dest& (0+255),b
  9845  00446C  0E03               	movlw	high _readBuffer
  9846  00446E  6F8D               	movwf	(memset@dest+1)& (0+255),b
  9847  004470  0E00               	movlw	0
  9848  004472  6F8F               	movwf	(memset@c+1)& (0+255),b
  9849  004474  0E00               	movlw	0
  9850  004476  6F8E               	movwf	memset@c& (0+255),b
  9851  004478  0E00               	movlw	0
  9852  00447A  6F91               	movwf	(memset@n+1)& (0+255),b
  9853  00447C  0E20               	movlw	32
  9854  00447E  6F90               	movwf	memset@n& (0+255),b
  9855  004480  EC25  F02A         	call	_memset	;wreg free
  9856  004484  0012               	return		;funcret
  9857  004486                     __end_of_USBCommandFetch:
  9858                           	callstack 0
  9859                           
  9860 ;; *************** function _strtok *****************
  9861 ;; Defined at:
  9862 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strtok.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  s               2   56[BANK0 ] PTR unsigned char 
  9865 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  9866 ;;  sep             2   58[BANK0 ] PTR const unsigned char 
  9867 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;		None
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  2   56[BANK0 ] PTR unsigned char 
  9872 ;; Registers used:
  9873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9874 ;; Tracked objects:
  9875 ;;		On entry : 3F/0
  9876 ;;		On exit  : 3E/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9879 ;;      Params:         0       4       0       0       0       0       0       0       0
  9880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9882 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9883 ;;Total ram usage:        4 bytes
  9884 ;; Hardware stack levels used: 1
  9885 ;; Hardware stack levels required when called: 12
  9886 ;; This function calls:
  9887 ;;		_strcspn
  9888 ;;		_strspn
  9889 ;; This function is called by:
  9890 ;;		_getTokens
  9891 ;;		_USBCommandFetch
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text50
  9896  006CC4                     __ptext50:
  9897                           	callstack 0
  9898  006CC4                     _strtok:
  9899                           	callstack 16
  9900                           
  9901                           ; BSR set to: 0
  9902                           
  9903                           ;incstack = 0
  9904  006CC4  5198               	movf	strtok@s& (0+255),w,b
  9905  006CC6  1199               	iorwf	(strtok@s+1)& (0+255),w,b
  9906  006CC8  A4D8               	btfss	status,2,c
  9907  006CCA  D00D               	goto	l14517
  9908                           
  9909                           ; BSR set to: 0
  9910  006CCC  C1C5  F098         	movff	strtok@p,strtok@s
  9911  006CD0  C1C6  F099         	movff	strtok@p+1,strtok@s+1
  9912  006CD4  5198               	movf	strtok@s& (0+255),w,b
  9913  006CD6  1199               	iorwf	(strtok@s+1)& (0+255),w,b
  9914  006CD8  A4D8               	btfss	status,2,c
  9915  006CDA  D005               	goto	l14517
  9916                           
  9917                           ; BSR set to: 0
  9918  006CDC  0E00               	movlw	0
  9919  006CDE  6F98               	movwf	?_strtok& (0+255),b
  9920  006CE0  0E00               	movlw	0
  9921  006CE2  6F99               	movwf	(?_strtok+1)& (0+255),b
  9922  006CE4  0012               	return	
  9923  006CE6                     l14517:
  9924                           
  9925                           ; BSR set to: 0
  9926  006CE6  C098  F091         	movff	strtok@s,strspn@s
  9927  006CEA  C099  F092         	movff	strtok@s+1,strspn@s+1
  9928  006CEE  C09A  F093         	movff	strtok@sep,strspn@c
  9929  006CF2  C09B  F094         	movff	strtok@sep+1,strspn@c+1
  9930  006CF6  EC2A  F03D         	call	_strspn	;wreg free
  9931  006CFA  5191               	movf	?_strspn& (0+255),w,b
  9932  006CFC  2798               	addwf	strtok@s& (0+255),f,b
  9933  006CFE  5192               	movf	(?_strspn+1)& (0+255),w,b
  9934  006D00  2399               	addwfc	(strtok@s+1)& (0+255),f,b
  9935                           
  9936                           ; BSR set to: 0
  9937  006D02  C098  FFD9         	movff	strtok@s,fsr2l
  9938  006D06  C099  FFDA         	movff	strtok@s+1,fsr2h
  9939  006D0A  50DF               	movf	indf2,w,c
  9940  006D0C  A4D8               	btfss	status,2,c
  9941  006D0E  D00A               	goto	l14525
  9942                           
  9943                           ; BSR set to: 0
  9944  006D10  0E00               	movlw	0
  9945  006D12  0101               	movlb	1	; () banked
  9946  006D14  6FC5               	movwf	strtok@p& (0+255),b
  9947  006D16  0E00               	movlw	0
  9948  006D18  6FC6               	movwf	(strtok@p+1)& (0+255),b
  9949  006D1A  C1C5  F098         	movff	strtok@p,?_strtok
  9950  006D1E  C1C6  F099         	movff	strtok@p+1,?_strtok+1
  9951  006D22  0012               	return	
  9952  006D24                     l14525:
  9953                           
  9954                           ; BSR set to: 0
  9955  006D24  C098  F091         	movff	strtok@s,strcspn@s
  9956  006D28  C099  F092         	movff	strtok@s+1,strcspn@s+1
  9957  006D2C  C09A  F093         	movff	strtok@sep,strcspn@c
  9958  006D30  C09B  F094         	movff	strtok@sep+1,strcspn@c+1
  9959  006D34  EC52  F03D         	call	_strcspn	;wreg free
  9960  006D38  5191               	movf	?_strcspn& (0+255),w,b
  9961  006D3A  2598               	addwf	strtok@s& (0+255),w,b
  9962  006D3C  0101               	movlb	1	; () banked
  9963  006D3E  6FC5               	movwf	strtok@p& (0+255),b
  9964  006D40  0100               	movlb	0	; () banked
  9965  006D42  5192               	movf	(?_strcspn+1)& (0+255),w,b
  9966  006D44  2199               	addwfc	(strtok@s+1)& (0+255),w,b
  9967  006D46  0101               	movlb	1	; () banked
  9968  006D48  6FC6               	movwf	(strtok@p+1)& (0+255),b
  9969                           
  9970                           ; BSR set to: 1
  9971  006D4A  C1C5  FFD9         	movff	strtok@p,fsr2l
  9972  006D4E  C1C6  FFDA         	movff	strtok@p+1,fsr2h
  9973  006D52  50DF               	movf	indf2,w,c
  9974  006D54  B4D8               	btfsc	status,2,c
  9975  006D56  D009               	goto	l14533
  9976                           
  9977                           ; BSR set to: 1
  9978  006D58  C1C5  FFD9         	movff	strtok@p,fsr2l
  9979  006D5C  C1C6  FFDA         	movff	strtok@p+1,fsr2h
  9980  006D60  0E00               	movlw	0
  9981  006D62  6EDF               	movwf	indf2,c
  9982                           
  9983                           ; BSR set to: 1
  9984  006D64  4BC5               	infsnz	strtok@p& (0+255),f,b
  9985  006D66  2BC6               	incf	(strtok@p+1)& (0+255),f,b
  9986  006D68  D004               	goto	l2669
  9987  006D6A                     l14533:
  9988                           
  9989                           ; BSR set to: 1
  9990  006D6A  0E00               	movlw	0
  9991  006D6C  6FC5               	movwf	strtok@p& (0+255),b
  9992  006D6E  0E00               	movlw	0
  9993  006D70  6FC6               	movwf	(strtok@p+1)& (0+255),b
  9994  006D72                     l2669:
  9995                           
  9996                           ; BSR set to: 1
  9997  006D72  C098  F098         	movff	strtok@s,?_strtok
  9998  006D76  C099  F099         	movff	strtok@s+1,?_strtok+1
  9999  006D7A  0012               	return		;funcret
 10000  006D7C                     __end_of_strtok:
 10001                           	callstack 0
 10002                           
 10003 ;; *************** function _strspn *****************
 10004 ;; Defined at:
 10005 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strspn.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  s               2   49[BANK0 ] PTR const unsigned char 
 10008 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
 10009 ;;  c               2   51[BANK0 ] PTR const unsigned char 
 10010 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  i               2   54[BANK0 ] unsigned int 
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  2   49[BANK0 ] unsigned int 
 10015 ;; Registers used:
 10016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 3F/0
 10019 ;;		On exit  : 3F/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10022 ;;      Params:         0       4       0       0       0       0       0       0       0
 10023 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10024 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10025 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10026 ;;Total ram usage:        7 bytes
 10027 ;; Hardware stack levels used: 1
 10028 ;; Hardware stack levels required when called: 11
 10029 ;; This function calls:
 10030 ;;		_strchr
 10031 ;; This function is called by:
 10032 ;;		_strtok
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text51
 10037  007A54                     __ptext51:
 10038                           	callstack 0
 10039  007A54                     _strspn:
 10040                           	callstack 16
 10041                           
 10042                           ; BSR set to: 0
 10043                           
 10044                           ;incstack = 0
 10045  007A54  0E00               	movlw	0
 10046  007A56  6F97               	movwf	(strspn@i+1)& (0+255),b
 10047  007A58  0E00               	movlw	0
 10048  007A5A  6F96               	movwf	strspn@i& (0+255),b
 10049  007A5C  D004               	goto	l14353
 10050  007A5E                     l14351:
 10051                           
 10052                           ; BSR set to: 0
 10053  007A5E  4B91               	infsnz	strspn@s& (0+255),f,b
 10054  007A60  2B92               	incf	(strspn@s+1)& (0+255),f,b
 10055  007A62  4B96               	infsnz	strspn@i& (0+255),f,b
 10056  007A64  2B97               	incf	(strspn@i+1)& (0+255),f,b
 10057  007A66                     l14353:
 10058                           
 10059                           ; BSR set to: 0
 10060  007A66  C091  FFD9         	movff	strspn@s,fsr2l
 10061  007A6A  C092  FFDA         	movff	strspn@s+1,fsr2h
 10062  007A6E  50DF               	movf	indf2,w,c
 10063  007A70  B4D8               	btfsc	status,2,c
 10064  007A72  D013               	goto	u17180
 10065                           
 10066                           ; BSR set to: 0
 10067  007A74  C093  F08C         	movff	strspn@c,strchr@s
 10068  007A78  C094  F08D         	movff	strspn@c+1,strchr@s+1
 10069  007A7C  C091  FFD9         	movff	strspn@s,fsr2l
 10070  007A80  C092  FFDA         	movff	strspn@s+1,fsr2h
 10071  007A84  50DF               	movf	indf2,w,c
 10072  007A86  6F95               	movwf	??_strspn& (0+255),b
 10073  007A88  5195               	movf	??_strspn& (0+255),w,b
 10074  007A8A  6F8E               	movwf	strchr@c& (0+255),b
 10075  007A8C  6B8F               	clrf	(strchr@c+1)& (0+255),b
 10076  007A8E  EC88  F03F         	call	_strchr	;wreg free
 10077  007A92  518C               	movf	?_strchr& (0+255),w,b
 10078  007A94  118D               	iorwf	(?_strchr+1)& (0+255),w,b
 10079  007A96  A4D8               	btfss	status,2,c
 10080  007A98  D7E2               	goto	l14351
 10081  007A9A                     u17180:
 10082                           
 10083                           ; BSR set to: 0
 10084  007A9A  C096  F091         	movff	strspn@i,?_strspn
 10085  007A9E  C097  F092         	movff	strspn@i+1,?_strspn+1
 10086                           
 10087                           ; BSR set to: 0
 10088  007AA2  0012               	return		;funcret
 10089  007AA4                     __end_of_strspn:
 10090                           	callstack 0
 10091                           
 10092 ;; *************** function _strcspn *****************
 10093 ;; Defined at:
 10094 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strcspn.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  s               2   49[BANK0 ] PTR const unsigned char 
 10097 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
 10098 ;;  c               2   51[BANK0 ] PTR const unsigned char 
 10099 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  i               2   54[BANK0 ] unsigned int 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  2   49[BANK0 ] unsigned int 
 10104 ;; Registers used:
 10105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10106 ;; Tracked objects:
 10107 ;;		On entry : 3F/0
 10108 ;;		On exit  : 3F/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10111 ;;      Params:         0       4       0       0       0       0       0       0       0
 10112 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10113 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10114 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10115 ;;Total ram usage:        7 bytes
 10116 ;; Hardware stack levels used: 1
 10117 ;; Hardware stack levels required when called: 11
 10118 ;; This function calls:
 10119 ;;		_strchr
 10120 ;; This function is called by:
 10121 ;;		_strtok
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           	psect	text52
 10126  007AA4                     __ptext52:
 10127                           	callstack 0
 10128  007AA4                     _strcspn:
 10129                           	callstack 16
 10130                           
 10131                           ; BSR set to: 0
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;incstack = 0
 10135  007AA4  0E00               	movlw	0
 10136  007AA6  6F97               	movwf	(strcspn@i+1)& (0+255),b
 10137  007AA8  0E00               	movlw	0
 10138  007AAA  6F96               	movwf	strcspn@i& (0+255),b
 10139  007AAC  D004               	goto	l14361
 10140  007AAE                     l14359:
 10141                           
 10142                           ; BSR set to: 0
 10143  007AAE  4B91               	infsnz	strcspn@s& (0+255),f,b
 10144  007AB0  2B92               	incf	(strcspn@s+1)& (0+255),f,b
 10145  007AB2  4B96               	infsnz	strcspn@i& (0+255),f,b
 10146  007AB4  2B97               	incf	(strcspn@i+1)& (0+255),f,b
 10147  007AB6                     l14361:
 10148                           
 10149                           ; BSR set to: 0
 10150  007AB6  C091  FFD9         	movff	strcspn@s,fsr2l
 10151  007ABA  C092  FFDA         	movff	strcspn@s+1,fsr2h
 10152  007ABE  50DF               	movf	indf2,w,c
 10153  007AC0  B4D8               	btfsc	status,2,c
 10154  007AC2  D013               	goto	u17200
 10155                           
 10156                           ; BSR set to: 0
 10157  007AC4  C093  F08C         	movff	strcspn@c,strchr@s
 10158  007AC8  C094  F08D         	movff	strcspn@c+1,strchr@s+1
 10159  007ACC  C091  FFD9         	movff	strcspn@s,fsr2l
 10160  007AD0  C092  FFDA         	movff	strcspn@s+1,fsr2h
 10161  007AD4  50DF               	movf	indf2,w,c
 10162  007AD6  6F95               	movwf	??_strcspn& (0+255),b
 10163  007AD8  5195               	movf	??_strcspn& (0+255),w,b
 10164  007ADA  6F8E               	movwf	strchr@c& (0+255),b
 10165  007ADC  6B8F               	clrf	(strchr@c+1)& (0+255),b
 10166  007ADE  EC88  F03F         	call	_strchr	;wreg free
 10167  007AE2  518C               	movf	?_strchr& (0+255),w,b
 10168  007AE4  118D               	iorwf	(?_strchr+1)& (0+255),w,b
 10169  007AE6  B4D8               	btfsc	status,2,c
 10170  007AE8  D7E2               	goto	l14359
 10171  007AEA                     u17200:
 10172                           
 10173                           ; BSR set to: 0
 10174  007AEA  C096  F091         	movff	strcspn@i,?_strcspn
 10175  007AEE  C097  F092         	movff	strcspn@i+1,?_strcspn+1
 10176                           
 10177                           ; BSR set to: 0
 10178  007AF2  0012               	return		;funcret
 10179  007AF4                     __end_of_strcspn:
 10180                           	callstack 0
 10181                           
 10182 ;; *************** function _strchr *****************
 10183 ;; Defined at:
 10184 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strchr.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  s               2   44[BANK0 ] PTR const unsigned char 
 10187 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
 10188 ;;  c               2   46[BANK0 ] int 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  2   44[BANK0 ] PTR unsigned char 
 10193 ;; Registers used:
 10194 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10195 ;; Tracked objects:
 10196 ;;		On entry : 3F/0
 10197 ;;		On exit  : 3F/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10200 ;;      Params:         0       4       0       0       0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10202 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10203 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10204 ;;Total ram usage:        5 bytes
 10205 ;; Hardware stack levels used: 1
 10206 ;; Hardware stack levels required when called: 10
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_strcspn
 10211 ;;		_strspn
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text53
 10216  007F10                     __ptext53:
 10217                           	callstack 0
 10218  007F10                     _strchr:
 10219                           	callstack 16
 10220                           
 10221                           ; BSR set to: 0
 10222                           
 10223                           ; BSR set to: 0
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;incstack = 0
 10227  007F10  C08C  FFD9         	movff	strchr@s,fsr2l
 10228  007F14  C08D  FFDA         	movff	strchr@s+1,fsr2h
 10229  007F18  518E               	movf	strchr@c& (0+255),w,b
 10230  007F1A  18DE               	xorwf	postinc2,w,c
 10231  007F1C  A4D8               	btfss	status,2,c
 10232  007F1E  D005               	goto	l14087
 10233                           
 10234                           ; BSR set to: 0
 10235  007F20  C08C  F08C         	movff	strchr@s,?_strchr
 10236  007F24  C08D  F08D         	movff	strchr@s+1,?_strchr+1
 10237  007F28  0012               	return	
 10238  007F2A                     l14087:
 10239                           
 10240                           ; BSR set to: 0
 10241  007F2A  C08C  FFD9         	movff	strchr@s,fsr2l
 10242  007F2E  C08D  FFDA         	movff	strchr@s+1,fsr2h
 10243  007F32  4B8C               	infsnz	strchr@s& (0+255),f,b
 10244  007F34  2B8D               	incf	(strchr@s+1)& (0+255),f,b
 10245  007F36  50DF               	movf	indf2,w,c
 10246  007F38  A4D8               	btfss	status,2,c
 10247  007F3A  D7EA               	goto	__ptext53
 10248                           
 10249                           ; BSR set to: 0
 10250  007F3C  0E00               	movlw	0
 10251  007F3E  6F8C               	movwf	?_strchr& (0+255),b
 10252  007F40  0E00               	movlw	0
 10253  007F42  6F8D               	movwf	(?_strchr+1)& (0+255),b
 10254                           
 10255                           ; BSR set to: 0
 10256  007F44  0012               	return		;funcret
 10257  007F46                     __end_of_strchr:
 10258                           	callstack 0
 10259                           
 10260 ;; *************** function _sprintf *****************
 10261 ;; Defined at:
 10262 ;;		line 9 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  s               2  156[BANK1 ] PTR unsigned char 
 10265 ;;		 -> lastToken(30), writeBuffer(32), 
 10266 ;;  fmt             1  158[BANK1 ] PTR const unsigned char 
 10267 ;;		 -> STR_3(5), STR_2(5), STR_1(20), 
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;  f              11  175[BANK1 ] struct _IO_FILE
 10270 ;;  ap              2  173[BANK1 ] PTR void [1]
 10271 ;;		 -> ?_sprintf(2), 
 10272 ;;  ret             2    0        int 
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  2  156[BANK1 ] int 
 10275 ;; Registers used:
 10276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 3F/1
 10279 ;;		On exit  : 3F/1
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10282 ;;      Params:         0       0      17       0       0       0       0       0       0
 10283 ;;      Locals:         0       0      13       0       0       0       0       0       0
 10284 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10285 ;;      Totals:         0       0      30       0       0       0       0       0       0
 10286 ;;Total ram usage:       30 bytes
 10287 ;; Hardware stack levels used: 1
 10288 ;; Hardware stack levels required when called: 17
 10289 ;; This function calls:
 10290 ;;		_vfprintf
 10291 ;; This function is called by:
 10292 ;;		_main
 10293 ;;		_USBCommandFetch
 10294 ;;		_executeCommand
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text54
 10299  007B42                     __ptext54:
 10300                           	callstack 0
 10301  007B42                     _sprintf:
 10302                           	callstack 13
 10303                           
 10304                           ; BSR set to: 1
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;incstack = 0
 10308  007B42  0E9F               	movlw	low (?_sprintf+3)
 10309  007B44  6FAD               	movwf	sprintf@ap& (0+255),b
 10310  007B46  0E01               	movlw	high (?_sprintf+3)
 10311  007B48  6FAE               	movwf	(sprintf@ap+1)& (0+255),b
 10312  007B4A  C19C  F1AF         	movff	sprintf@s,sprintf@f
 10313  007B4E  C19D  F1B0         	movff	sprintf@s+1,sprintf@f+1
 10314                           
 10315                           ; BSR set to: 1
 10316  007B52  0E00               	movlw	0
 10317  007B54  6FB3               	movwf	(sprintf@f+4)& (0+255),b
 10318  007B56  0E00               	movlw	0
 10319  007B58  6FB2               	movwf	(sprintf@f+3)& (0+255),b
 10320                           
 10321                           ; BSR set to: 1
 10322  007B5A  0E00               	movlw	0
 10323  007B5C  6FB9               	movwf	(sprintf@f+10)& (0+255),b
 10324  007B5E  0E00               	movlw	0
 10325  007B60  6FB8               	movwf	(sprintf@f+9)& (0+255),b
 10326                           
 10327                           ; BSR set to: 1
 10328  007B62  0EAF               	movlw	low sprintf@f
 10329  007B64  6F96               	movwf	vfprintf@fp& (0+255),b
 10330  007B66  0E01               	movlw	high sprintf@f
 10331  007B68  6F97               	movwf	(vfprintf@fp+1)& (0+255),b
 10332  007B6A  C19E  F198         	movff	sprintf@fmt,vfprintf@fmt
 10333  007B6E  0EAD               	movlw	low sprintf@ap
 10334  007B70  6F99               	movwf	vfprintf@ap& (0+255),b
 10335  007B72  0E01               	movlw	high sprintf@ap
 10336  007B74  6F9A               	movwf	(vfprintf@ap+1)& (0+255),b
 10337  007B76  EC52  F03C         	call	_vfprintf	;wreg free
 10338                           
 10339                           ; BSR set to: 2
 10340  007B7A  0101               	movlb	1	; () banked
 10341  007B7C  51B2               	movf	(sprintf@f+3)& (0+255),w,b
 10342  007B7E  259C               	addwf	sprintf@s& (0+255),w,b
 10343  007B80  6ED9               	movwf	fsr2l,c
 10344  007B82  51B3               	movf	(sprintf@f+4)& (0+255),w,b
 10345  007B84  219D               	addwfc	(sprintf@s+1)& (0+255),w,b
 10346  007B86  6EDA               	movwf	fsr2h,c
 10347  007B88  0E00               	movlw	0
 10348  007B8A  6EDF               	movwf	indf2,c
 10349                           
 10350                           ; BSR set to: 1
 10351  007B8C  0012               	return		;funcret
 10352  007B8E                     __end_of_sprintf:
 10353                           	callstack 0
 10354                           
 10355 ;; *************** function _vfprintf *****************
 10356 ;; Defined at:
 10357 ;;		line 1390 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;  fp              2  150[BANK1 ] PTR struct _IO_FILE
 10360 ;;		 -> sprintf@f(11), 
 10361 ;;  fmt             1  152[BANK1 ] PTR const unsigned char 
 10362 ;;		 -> STR_3(5), STR_2(5), STR_1(20), 
 10363 ;;  ap              2  153[BANK1 ] PTR PTR void 
 10364 ;;		 -> sprintf@ap(2), 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;  cfmt            1  155[BANK1 ] PTR unsigned char 
 10367 ;;		 -> STR_3(5), STR_2(5), STR_1(20), 
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  2  150[BANK1 ] int 
 10370 ;; Registers used:
 10371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10372 ;; Tracked objects:
 10373 ;;		On entry : 3F/1
 10374 ;;		On exit  : 3F/2
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10377 ;;      Params:         0       0       5       0       0       0       0       0       0
 10378 ;;      Locals:         0       0       1       0       0       0       0       0       0
 10379 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10380 ;;      Totals:         0       0       6       0       0       0       0       0       0
 10381 ;;Total ram usage:        6 bytes
 10382 ;; Hardware stack levels used: 1
 10383 ;; Hardware stack levels required when called: 16
 10384 ;; This function calls:
 10385 ;;		_vfpfcnvrt
 10386 ;; This function is called by:
 10387 ;;		_sprintf
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391                           	psect	text55
 10392  0078A4                     __ptext55:
 10393                           	callstack 0
 10394  0078A4                     _vfprintf:
 10395                           	callstack 13
 10396                           
 10397                           ; BSR set to: 1
 10398                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.36/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;incstack = 0
 10402  0078A4  C198  F19B         	movff	vfprintf@fmt,vfprintf@cfmt
 10403                           
 10404                           ; BSR set to: 1
 10405                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
 10406  0078A8  0E00               	movlw	0
 10407  0078AA  0102               	movlb	2	; () banked
 10408  0078AC  6FCF               	movwf	(_nout+1)& (0+255),b
 10409  0078AE  0E00               	movlw	0
 10410  0078B0  6FCE               	movwf	_nout& (0+255),b
 10411                           
 10412                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
 10413  0078B2  D017               	goto	l15017
 10414  0078B4                     l15015:
 10415                           
 10416                           ; BSR set to: 2
 10417                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 10418  0078B4  C196  F178         	movff	vfprintf@fp,vfpfcnvrt@fp
 10419  0078B8  C197  F179         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10420  0078BC  0E9B               	movlw	low vfprintf@cfmt
 10421  0078BE  0101               	movlb	1	; () banked
 10422  0078C0  6F7A               	movwf	vfpfcnvrt@fmt& (0+255),b
 10423  0078C2  0E01               	movlw	high vfprintf@cfmt
 10424  0078C4  6F7B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 10425  0078C6  C199  F17C         	movff	vfprintf@ap,vfpfcnvrt@ap
 10426  0078CA  C19A  F17D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10427  0078CE  EC23  F010         	call	_vfpfcnvrt	;wreg free
 10428  0078D2  0101               	movlb	1	; () banked
 10429  0078D4  5178               	movf	?_vfpfcnvrt& (0+255),w,b
 10430  0078D6  0102               	movlb	2	; () banked
 10431  0078D8  27CE               	addwf	_nout& (0+255),f,b
 10432  0078DA  0101               	movlb	1	; () banked
 10433  0078DC  5179               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 10434  0078DE  0102               	movlb	2	; () banked
 10435  0078E0  23CF               	addwfc	(_nout+1)& (0+255),f,b
 10436  0078E2                     l15017:
 10437                           
 10438                           ; BSR set to: 2
 10439                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
 10440  0078E2  C19B  FFF6         	movff	vfprintf@cfmt,tblptrl
 10441  0078E6                     	if	1	;There is more than 1 active tblptr byte
 10442  0078E6  0E08               	movlw	high __smallconst
 10443  0078E8  6EF7               	movwf	tblptrh,c
 10444  0078EA                     	endif
 10445  0078EA                     	if	0	;tblptru may be non-zero
 10446  0078EA                     	endif
 10447  0078EA                     	if	0	;tblptru may be non-zero
 10448  0078EA                     	endif
 10449  0078EA  0008               	tblrd		*
 10450  0078EC  50F5               	movf	tablat,w,c
 10451  0078EE  0900               	iorlw	0
 10452  0078F0  A4D8               	btfss	status,2,c
 10453  0078F2  D7E0               	goto	l15015
 10454                           
 10455                           ; BSR set to: 2
 10456                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
 10457  0078F4  C2CE  F196         	movff	_nout,?_vfprintf
 10458  0078F8  C2CF  F197         	movff	_nout+1,?_vfprintf+1
 10459                           
 10460                           ; BSR set to: 2
 10461  0078FC  0012               	return		;funcret
 10462  0078FE                     __end_of_vfprintf:
 10463                           	callstack 0
 10464                           
 10465 ;; *************** function _vfpfcnvrt *****************
 10466 ;; Defined at:
 10467 ;;		line 692 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  fp              2  120[BANK1 ] PTR struct _IO_FILE
 10470 ;;		 -> sprintf@f(11), 
 10471 ;;  fmt             2  122[BANK1 ] PTR PTR unsigned char 
 10472 ;;		 -> vfprintf@cfmt(1), 
 10473 ;;  ap              2  124[BANK1 ] PTR PTR void 
 10474 ;;		 -> sprintf@ap(2), 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  ll              8  130[BANK1 ] long long 
 10477 ;;  llu             8    0        unsigned long long 
 10478 ;;  f               4  142[BANK1 ] unsigned long long 
 10479 ;;  ct              3  146[BANK1 ] unsigned char [3]
 10480 ;;  vp              3    0        PTR void 
 10481 ;;  cp              2  138[BANK1 ] PTR unsigned char 
 10482 ;;		 -> ?_sprintf(2), executeCommand@comando.number(4), executeCommand@strCommand(30), lastToken(30), 
 10483 ;;		 -> readBuffer(32), Encoder_ISR@salida(4), Encoder_ISR@tics(4), ustep(1), 
 10484 ;;		 -> NULL(0), 
 10485 ;;  i               2    0        int 
 10486 ;;  done            2    0        int 
 10487 ;;  c               1  149[BANK1 ] unsigned char 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  2  120[BANK1 ] int 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 3F/1
 10494 ;;		On exit  : 3E/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10497 ;;      Params:         0       0       6       0       0       0       0       0       0
 10498 ;;      Locals:         0       0      20       0       0       0       0       0       0
 10499 ;;      Temps:          0       0       4       0       0       0       0       0       0
 10500 ;;      Totals:         0       0      30       0       0       0       0       0       0
 10501 ;;Total ram usage:       30 bytes
 10502 ;; Hardware stack levels used: 1
 10503 ;; Hardware stack levels required when called: 15
 10504 ;; This function calls:
 10505 ;;		_atoi
 10506 ;;		_ctoa
 10507 ;;		_dtoa
 10508 ;;		_efgtoa
 10509 ;;		_fputc
 10510 ;;		_isdigit
 10511 ;;		_isupper
 10512 ;;		_stoa
 10513 ;;		_strncmp
 10514 ;;		_tolower
 10515 ;; This function is called by:
 10516 ;;		_vfprintf
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           	psect	text56
 10521  002046                     __ptext56:
 10522                           	callstack 0
 10523  002046                     _vfpfcnvrt:
 10524                           	callstack 13
 10525                           
 10526                           ; BSR set to: 1
 10527                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.36/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.36/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.36/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.36/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
 10528                           
 10529                           ; BSR set to: 2
 10530                           ;incstack = 0
 10531  002046  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10532  00204A  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10533  00204E  CFDF FFF6          	movff	indf2,tblptrl
 10534  002052                     	if	1	;There is more than 1 active tblptr byte
 10535  002052  0E08               	movlw	high __smallconst
 10536  002054  6EF7               	movwf	tblptrh,c
 10537  002056                     	endif
 10538  002056                     	if	0	;tblptru may be non-zero
 10539  002056                     	endif
 10540  002056                     	if	0	;tblptru may be non-zero
 10541  002056                     	endif
 10542  002056  0008               	tblrd		*
 10543  002058  50F5               	movf	tablat,w,c
 10544  00205A  0A25               	xorlw	37
 10545  00205C  A4D8               	btfss	status,2,c
 10546  00205E  D287               	goto	l14323
 10547                           
 10548                           ; BSR set to: 1
 10549                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
 10550  002060  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10551  002064  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10552  002068  2ADF               	incf	indf2,f,c
 10553                           
 10554                           ; BSR set to: 1
 10555                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
 10556  00206A  0E00               	movlw	0
 10557  00206C  0100               	movlb	0	; () banked
 10558  00206E  6FC1               	movwf	(_width+1)& (0+255),b
 10559  002070  0E00               	movlw	0
 10560  002072  6FC0               	movwf	_width& (0+255),b
 10561  002074  C0C0  F0C4         	movff	_width,_flags
 10562  002078  C0C1  F0C5         	movff	_width+1,_flags+1
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
 10566  00207C  69C2               	setf	_prec& (0+255),b
 10567  00207E  69C3               	setf	(_prec+1)& (0+255),b
 10568                           
 10569                           ; BSR set to: 0
 10570                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*f
      +                          mt)[0] == '.') {
 10571  002080  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10572  002084  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10573  002088  CFDF FFF6          	movff	indf2,tblptrl
 10574  00208C                     	if	1	;There is more than 1 active tblptr byte
 10575  00208C  0E08               	movlw	high __smallconst
 10576  00208E  6EF7               	movwf	tblptrh,c
 10577  002090                     	endif
 10578  002090                     	if	0	;tblptru may be non-zero
 10579  002090                     	endif
 10580  002090                     	if	0	;tblptru may be non-zero
 10581  002090                     	endif
 10582  002090  0008               	tblrd		*
 10583  002092  50F5               	movf	tablat,w,c
 10584  002094  0A2E               	xorlw	46
 10585  002096  A4D8               	btfss	status,2,c
 10586  002098  D05D               	goto	u17020
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             pre
      +                          c = 0;
 10590  00209A  0E00               	movlw	0
 10591  00209C  6FC3               	movwf	(_prec+1)& (0+255),b
 10592  00209E  0E00               	movlw	0
 10593  0020A0  6FC2               	movwf	_prec& (0+255),b
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*
      +                          fmt;
 10597  0020A2  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10598  0020A6  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10599  0020AA  2ADF               	incf	indf2,f,c
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if 
      +                          ((*fmt)[0] == '*') {
 10603  0020AC  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10604  0020B0  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10605  0020B4  CFDF FFF6          	movff	indf2,tblptrl
 10606  0020B8                     	if	1	;There is more than 1 active tblptr byte
 10607  0020B8  0E08               	movlw	high __smallconst
 10608  0020BA  6EF7               	movwf	tblptrh,c
 10609  0020BC                     	endif
 10610  0020BC                     	if	0	;tblptru may be non-zero
 10611  0020BC                     	endif
 10612  0020BC                     	if	0	;tblptru may be non-zero
 10613  0020BC                     	endif
 10614  0020BC  0008               	tblrd		*
 10615  0020BE  50F5               	movf	tablat,w,c
 10616  0020C0  0A2A               	xorlw	42
 10617  0020C2  A4D8               	btfss	status,2,c
 10618  0020C4  D01A               	goto	l14219
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                
      +                           ++*fmt;
 10622  0020C6  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10623  0020CA  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10624  0020CE  2ADF               	incf	indf2,f,c
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 10628  0020D0  C17C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10629  0020D4  C17D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10630  0020D8  CFDF F17E          	movff	indf2,??_vfpfcnvrt
 10631  0020DC  0E02               	movlw	2
 10632  0020DE  26DE               	addwf	postinc2,f,c
 10633  0020E0  CFDF F17F          	movff	indf2,??_vfpfcnvrt+1
 10634  0020E4  0E00               	movlw	0
 10635  0020E6  22DD               	addwfc	postdec2,f,c
 10636  0020E8  C17E  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10637  0020EC  C17F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10638  0020F0  CFDE F0C2          	movff	postinc2,_prec
 10639  0020F4  CFDD F0C3          	movff	postdec2,_prec+1
 10640                           
 10641                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } e
      +                          lse {
 10642  0020F8  D02D               	goto	u17020
 10643  0020FA                     l14219:
 10644                           
 10645                           ; BSR set to: 0
 10646                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                
      +                           prec = atoi(*fmt);
 10647  0020FA  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10648  0020FE  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10649  002102  50DF               	movf	indf2,w,c
 10650  002104  6F93               	movwf	atoi@s& (0+255),b
 10651  002106  EC3D  F02E         	call	_atoi	;wreg free
 10652  00210A  C093  F0C2         	movff	?_atoi,_prec
 10653  00210E  C094  F0C3         	movff	?_atoi+1,_prec+1
 10654                           
 10655                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
 10656  002112  D005               	goto	l14225
 10657  002114                     l14221:
 10658                           
 10659                           ; BSR set to: 1
 10660                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                
      +                               ++*fmt;
 10661  002114  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10662  002118  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10663  00211C  2ADF               	incf	indf2,f,c
 10664  00211E                     l14225:
 10665  00211E  0ED0               	movlw	208
 10666  002120  0101               	movlb	1	; () banked
 10667  002122  6F7E               	movwf	??_vfpfcnvrt& (0+255),b
 10668  002124  0EFF               	movlw	255
 10669  002126  6F7F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10670  002128  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10671  00212C  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10672  002130  CFDF FFF6          	movff	indf2,tblptrl
 10673  002134                     	if	1	;There is more than 1 active tblptr byte
 10674  002134  0E08               	movlw	high __smallconst
 10675  002136  6EF7               	movwf	tblptrh,c
 10676  002138                     	endif
 10677  002138                     	if	0	;tblptru may be non-zero
 10678  002138                     	endif
 10679  002138                     	if	0	;tblptru may be non-zero
 10680  002138                     	endif
 10681  002138  0008               	tblrd		*
 10682  00213A  50F5               	movf	tablat,w,c
 10683  00213C  6F80               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10684  00213E  6B81               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10685  002140  517E               	movf	??_vfpfcnvrt& (0+255),w,b
 10686  002142  2780               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10687  002144  517F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10688  002146  2381               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10689  002148  5181               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10690  00214A  E104               	bnz	u17020
 10691  00214C  0E0A               	movlw	10
 10692  00214E  5D80               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10693  002150  A0D8               	btfss	status,0,c
 10694  002152  D7E0               	goto	l14221
 10695  002154                     u17020:
 10696                           
 10697                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] =
      +                           (char)tolower((int)(*fmt)[0]);
 10698  002154  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10699  002158  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10700  00215C  CFDF FFF6          	movff	indf2,tblptrl
 10701  002160                     	if	1	;There is more than 1 active tblptr byte
 10702  002160  0E08               	movlw	high __smallconst
 10703  002162  6EF7               	movwf	tblptrh,c
 10704  002164                     	endif
 10705  002164                     	if	0	;tblptru may be non-zero
 10706  002164                     	endif
 10707  002164                     	if	0	;tblptru may be non-zero
 10708  002164                     	endif
 10709  002164  0008               	tblrd		*
 10710  002166  50F5               	movf	tablat,w,c
 10711  002168  0100               	movlb	0	; () banked
 10712  00216A  6F92               	movwf	tolower@c& (0+255),b
 10713  00216C  6B93               	clrf	(tolower@c+1)& (0+255),b
 10714  00216E  EC17  F03F         	call	_tolower	;wreg free
 10715  002172  5192               	movf	?_tolower& (0+255),w,b
 10716  002174  0101               	movlb	1	; () banked
 10717  002176  6F92               	movwf	vfpfcnvrt@ct& (0+255),b
 10718                           
 10719                           ; BSR set to: 1
 10720                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[
      +                          0]) {
 10721  002178  5192               	movf	vfpfcnvrt@ct& (0+255),w,b
 10722  00217A  B4D8               	btfsc	status,2,c
 10723  00217C  D02F               	goto	l14237
 10724                           
 10725                           ; BSR set to: 1
 10726                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[
      +                          1] = (char)tolower((int)(*fmt)[1]);
 10727  00217E  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10728  002182  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10729  002186  50DF               	movf	indf2,w,c
 10730  002188  6F7E               	movwf	??_vfpfcnvrt& (0+255),b
 10731  00218A  0E01               	movlw	1
 10732  00218C  277E               	addwf	??_vfpfcnvrt& (0+255),f,b
 10733  00218E  C17E  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10734  002192                     	if	1	;There is more than 1 active tblptr byte
 10735  002192  0E08               	movlw	high __smallconst
 10736  002194  6EF7               	movwf	tblptrh,c
 10737  002196                     	endif
 10738  002196                     	if	0	;tblptru may be non-zero
 10739  002196                     	endif
 10740  002196                     	if	0	;tblptru may be non-zero
 10741  002196                     	endif
 10742  002196  0008               	tblrd		*
 10743  002198  50F5               	movf	tablat,w,c
 10744  00219A  0100               	movlb	0	; () banked
 10745  00219C  6F92               	movwf	tolower@c& (0+255),b
 10746  00219E  6B93               	clrf	(tolower@c+1)& (0+255),b
 10747  0021A0  EC17  F03F         	call	_tolower	;wreg free
 10748  0021A4  5192               	movf	?_tolower& (0+255),w,b
 10749  0021A6  0101               	movlb	1	; () banked
 10750  0021A8  6F93               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
 10751                           
 10752                           ; BSR set to: 1
 10753                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if 
      +                          (ct[1]) {
 10754  0021AA  5193               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
 10755  0021AC  B4D8               	btfsc	status,2,c
 10756  0021AE  D016               	goto	l14237
 10757                           
 10758                           ; BSR set to: 1
 10759                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                
      +                           ct[2] = (char)tolower((int)(*fmt)[2]);
 10760  0021B0  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10761  0021B4  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10762  0021B8  50DF               	movf	indf2,w,c
 10763  0021BA  6F7E               	movwf	??_vfpfcnvrt& (0+255),b
 10764  0021BC  0E02               	movlw	2
 10765  0021BE  277E               	addwf	??_vfpfcnvrt& (0+255),f,b
 10766  0021C0  C17E  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10767  0021C4                     	if	1	;There is more than 1 active tblptr byte
 10768  0021C4  0E08               	movlw	high __smallconst
 10769  0021C6  6EF7               	movwf	tblptrh,c
 10770  0021C8                     	endif
 10771  0021C8                     	if	0	;tblptru may be non-zero
 10772  0021C8                     	endif
 10773  0021C8                     	if	0	;tblptru may be non-zero
 10774  0021C8                     	endif
 10775  0021C8  0008               	tblrd		*
 10776  0021CA  50F5               	movf	tablat,w,c
 10777  0021CC  0100               	movlb	0	; () banked
 10778  0021CE  6F92               	movwf	tolower@c& (0+255),b
 10779  0021D0  6B93               	clrf	(tolower@c+1)& (0+255),b
 10780  0021D2  EC17  F03F         	call	_tolower	;wreg free
 10781  0021D6  5192               	movf	?_tolower& (0+255),w,b
 10782  0021D8  0101               	movlb	1	; () banked
 10783  0021DA  6F94               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
 10784  0021DC                     l14237:
 10785                           
 10786                           ; BSR set to: 1
 10787                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
 10788  0021DC  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10789  0021E0  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10790  0021E4  CFDF FFF6          	movff	indf2,tblptrl
 10791  0021E8                     	if	1	;There is more than 1 active tblptr byte
 10792  0021E8  0E08               	movlw	high __smallconst
 10793  0021EA  6EF7               	movwf	tblptrh,c
 10794  0021EC                     	endif
 10795  0021EC                     	if	0	;tblptru may be non-zero
 10796  0021EC                     	endif
 10797  0021EC                     	if	0	;tblptru may be non-zero
 10798  0021EC                     	endif
 10799  0021EC  0008               	tblrd		*
 10800  0021EE  50F5               	movf	tablat,w,c
 10801  0021F0  0A63               	xorlw	99
 10802  0021F2  A4D8               	btfss	status,2,c
 10803  0021F4  D024               	goto	l14247
 10804                           
 10805                           ; BSR set to: 1
 10806                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
 10807  0021F6  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10808  0021FA  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10809  0021FE  2ADF               	incf	indf2,f,c
 10810                           
 10811                           ; BSR set to: 1
 10812                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10813  002200  C17C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10814  002204  C17D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10815  002208  CFDF F17E          	movff	indf2,??_vfpfcnvrt
 10816  00220C  0E02               	movlw	2
 10817  00220E  26DE               	addwf	postinc2,f,c
 10818  002210  CFDF F17F          	movff	indf2,??_vfpfcnvrt+1
 10819  002214  0E00               	movlw	0
 10820  002216  22DD               	addwfc	postdec2,f,c
 10821  002218  C17E  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10822  00221C  C17F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10823  002220  50DF               	movf	indf2,w,c
 10824  002222  6F95               	movwf	vfpfcnvrt@c& (0+255),b
 10825                           
 10826                           ; BSR set to: 1
 10827                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
 10828  002224  C178  F095         	movff	vfpfcnvrt@fp,ctoa@fp
 10829  002228  C179  F096         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10830  00222C  C195  F097         	movff	vfpfcnvrt@c,ctoa@c
 10831  002230  EC67  F038         	call	_ctoa	;wreg free
 10832  002234  C095  F178         	movff	?_ctoa,?_vfpfcnvrt
 10833  002238  C096  F179         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10834  00223C  0012               	return	
 10835  00223E                     l14247:
 10836                           
 10837                           ; BSR set to: 1
 10838                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 10839  00223E  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10840  002242  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10841  002246  CFDF FFF6          	movff	indf2,tblptrl
 10842  00224A                     	if	1	;There is more than 1 active tblptr byte
 10843  00224A  0E08               	movlw	high __smallconst
 10844  00224C  6EF7               	movwf	tblptrh,c
 10845  00224E                     	endif
 10846  00224E                     	if	0	;tblptru may be non-zero
 10847  00224E                     	endif
 10848  00224E                     	if	0	;tblptru may be non-zero
 10849  00224E                     	endif
 10850  00224E  0008               	tblrd		*
 10851  002250  50F5               	movf	tablat,w,c
 10852  002252  0A64               	xorlw	100
 10853  002254  B4D8               	btfsc	status,2,c
 10854  002256  D00D               	goto	u17070
 10855                           
 10856                           ; BSR set to: 1
 10857  002258  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10858  00225C  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10859  002260  CFDF FFF6          	movff	indf2,tblptrl
 10860  002264                     	if	1	;There is more than 1 active tblptr byte
 10861  002264  0E08               	movlw	high __smallconst
 10862  002266  6EF7               	movwf	tblptrh,c
 10863  002268                     	endif
 10864  002268                     	if	0	;tblptru may be non-zero
 10865  002268                     	endif
 10866  002268                     	if	0	;tblptru may be non-zero
 10867  002268                     	endif
 10868  002268  0008               	tblrd		*
 10869  00226A  50F5               	movf	tablat,w,c
 10870  00226C  0A69               	xorlw	105
 10871  00226E  A4D8               	btfss	status,2,c
 10872  002270  D03D               	goto	l14259
 10873  002272                     u17070:
 10874                           
 10875                           ; BSR set to: 1
 10876                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
 10877  002272  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10878  002276  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10879  00227A  2ADF               	incf	indf2,f,c
 10880                           
 10881                           ; BSR set to: 1
 10882                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10883  00227C  C17C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10884  002280  C17D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10885  002284  CFDF F17E          	movff	indf2,??_vfpfcnvrt
 10886  002288  0E02               	movlw	2
 10887  00228A  26DE               	addwf	postinc2,f,c
 10888  00228C  CFDF F17F          	movff	indf2,??_vfpfcnvrt+1
 10889  002290  0E00               	movlw	0
 10890  002292  22DD               	addwfc	postdec2,f,c
 10891  002294  C17E  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10892  002298  C17F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10893  00229C  CFDE F182          	movff	postinc2,vfpfcnvrt@ll
 10894  0022A0  CFDD F183          	movff	postdec2,vfpfcnvrt@ll+1
 10895  0022A4  0E00               	movlw	0
 10896  0022A6  BF83               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10897  0022A8  0EFF               	movlw	-1
 10898  0022AA  6F84               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10899  0022AC  6F85               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10900  0022AE  6F86               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10901  0022B0  6F87               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10902  0022B2  6F88               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10903  0022B4  6F89               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10904                           
 10905                           ; BSR set to: 1
 10906                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
 10907  0022B6  C178  F100         	movff	vfpfcnvrt@fp,dtoa@fp
 10908  0022BA  C179  F101         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10909  0022BE  C182  F102         	movff	vfpfcnvrt@ll,dtoa@d
 10910  0022C2  C183  F103         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10911  0022C6  C184  F104         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10912  0022CA  C185  F105         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10913  0022CE  C186  F106         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10914  0022D2  C187  F107         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10915  0022D6  C188  F108         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10916  0022DA  C189  F109         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10917  0022DE  ECAE  F01E         	call	_dtoa	;wreg free
 10918  0022E2  C100  F178         	movff	?_dtoa,?_vfpfcnvrt
 10919  0022E6  C101  F179         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10920  0022EA  0012               	return	
 10921  0022EC                     l14259:
 10922                           
 10923                           ; BSR set to: 1
 10924                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[
      +                          0] == 'f') {
 10925  0022EC  0E66               	movlw	102
 10926  0022EE  1992               	xorwf	vfpfcnvrt@ct& (0+255),w,b
 10927  0022F0  A4D8               	btfss	status,2,c
 10928  0022F2  D03D               	goto	l14271
 10929                           
 10930                           ; BSR set to: 1
 10931                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c =
      +                           (*fmt)[0];
 10932  0022F4  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10933  0022F8  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10934  0022FC  CFDF FFF6          	movff	indf2,tblptrl
 10935  002300                     	if	1	;There is more than 1 active tblptr byte
 10936  002300  0E08               	movlw	high __smallconst
 10937  002302  6EF7               	movwf	tblptrh,c
 10938  002304                     	endif
 10939  002304                     	if	0	;tblptru may be non-zero
 10940  002304                     	endif
 10941  002304                     	if	0	;tblptru may be non-zero
 10942  002304                     	endif
 10943  002304  0008               	tblrd		*
 10944  002306  CFF5 F195          	movff	tablat,vfpfcnvrt@c
 10945                           
 10946                           ; BSR set to: 1
 10947                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*
      +                          fmt;
 10948  00230A  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10949  00230E  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10950  002312  2ADF               	incf	indf2,f,c
 10951                           
 10952                           ; BSR set to: 1
 10953                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10954  002314  C17C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10955  002318  C17D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10956  00231C  CFDF F17E          	movff	indf2,??_vfpfcnvrt
 10957  002320  0E04               	movlw	4
 10958  002322  26DE               	addwf	postinc2,f,c
 10959  002324  CFDF F17F          	movff	indf2,??_vfpfcnvrt+1
 10960  002328  0E00               	movlw	0
 10961  00232A  22DD               	addwfc	postdec2,f,c
 10962  00232C  C17E  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10963  002330  C17F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10964  002334  CFDE F18E          	movff	postinc2,vfpfcnvrt@f
 10965  002338  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+1
 10966  00233C  CFDE F190          	movff	postinc2,vfpfcnvrt@f+2
 10967  002340  CFDE F191          	movff	postinc2,vfpfcnvrt@f+3
 10968                           
 10969                           ; BSR set to: 1
 10970                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             ret
      +                          urn efgtoa(fp, f, c);
 10971  002344  C178  F13A         	movff	vfpfcnvrt@fp,efgtoa@fp
 10972  002348  C179  F13B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 10973  00234C  C18E  F13C         	movff	vfpfcnvrt@f,efgtoa@f
 10974  002350  C18F  F13D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
 10975  002354  C190  F13E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
 10976  002358  C191  F13F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
 10977  00235C  C195  F140         	movff	vfpfcnvrt@c,efgtoa@c
 10978  002360  ECE4  F00A         	call	_efgtoa	;wreg free
 10979  002364  C13A  F178         	movff	?_efgtoa,?_vfpfcnvrt
 10980  002368  C13B  F179         	movff	?_efgtoa+1,?_vfpfcnvrt+1
 10981  00236C  0012               	return	
 10982  00236E                     l14271:
 10983                           
 10984                           ; BSR set to: 1
 10985                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10986  00236E  0E92               	movlw	low vfpfcnvrt@ct
 10987  002370  0100               	movlb	0	; () banked
 10988  002372  6F8C               	movwf	strncmp@_l& (0+255),b
 10989  002374  0E01               	movlw	high vfpfcnvrt@ct
 10990  002376  6F8D               	movwf	(strncmp@_l+1)& (0+255),b
 10991  002378  0EEC               	movlw	low STR_12
 10992  00237A  6F8E               	movwf	strncmp@_r& (0+255),b
 10993  00237C  0E00               	movlw	0
 10994  00237E  6F90               	movwf	(strncmp@n+1)& (0+255),b
 10995  002380  0E02               	movlw	2
 10996  002382  6F8F               	movwf	strncmp@n& (0+255),b
 10997  002384  ECBD  F030         	call	_strncmp	;wreg free
 10998  002388  518C               	movf	?_strncmp& (0+255),w,b
 10999  00238A  118D               	iorwf	(?_strncmp+1)& (0+255),w,b
 11000  00238C  A4D8               	btfss	status,2,c
 11001  00238E  D05B               	goto	l14289
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c =
      +                           (*fmt)[1];
 11005  002390  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11006  002394  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11007  002398  50DF               	movf	indf2,w,c
 11008  00239A  0101               	movlb	1	; () banked
 11009  00239C  6F7E               	movwf	??_vfpfcnvrt& (0+255),b
 11010  00239E  0E01               	movlw	1
 11011  0023A0  277E               	addwf	??_vfpfcnvrt& (0+255),f,b
 11012  0023A2  C17E  FFF6         	movff	??_vfpfcnvrt,tblptrl
 11013  0023A6                     	if	1	;There is more than 1 active tblptr byte
 11014  0023A6  0E08               	movlw	high __smallconst
 11015  0023A8  6EF7               	movwf	tblptrh,c
 11016  0023AA                     	endif
 11017  0023AA                     	if	0	;tblptru may be non-zero
 11018  0023AA                     	endif
 11019  0023AA                     	if	0	;tblptru may be non-zero
 11020  0023AA                     	endif
 11021  0023AA  0008               	tblrd		*
 11022  0023AC  CFF5 F195          	movff	tablat,vfpfcnvrt@c
 11023                           
 11024                           ; BSR set to: 1
 11025                           
 11026                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if 
      +                          ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11027  0023B0  0EBF               	movlw	191
 11028  0023B2  6F7E               	movwf	??_vfpfcnvrt& (0+255),b
 11029  0023B4  0EFF               	movlw	255
 11030  0023B6  6F7F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 11031  0023B8  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11032  0023BC  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11033  0023C0  CFDF FFF6          	movff	indf2,tblptrl
 11034  0023C4                     	if	1	;There is more than 1 active tblptr byte
 11035  0023C4  0E08               	movlw	high __smallconst
 11036  0023C6  6EF7               	movwf	tblptrh,c
 11037  0023C8                     	endif
 11038  0023C8                     	if	0	;tblptru may be non-zero
 11039  0023C8                     	endif
 11040  0023C8                     	if	0	;tblptru may be non-zero
 11041  0023C8                     	endif
 11042  0023C8  0008               	tblrd		*
 11043  0023CA  50F5               	movf	tablat,w,c
 11044  0023CC  6F80               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 11045  0023CE  6B81               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 11046  0023D0  517E               	movf	??_vfpfcnvrt& (0+255),w,b
 11047  0023D2  2780               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 11048  0023D4  517F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 11049  0023D6  2381               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 11050  0023D8  5181               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 11051  0023DA  E102               	bnz	l14281
 11052  0023DC  0E1A               	movlw	26
 11053  0023DE  5D80               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 11054  0023E0                     l14281:
 11055                           
 11056                           ; BSR set to: 1
 11057                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11058  0023E0  C17C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11059  0023E4  C17D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11060  0023E8  CFDF F17E          	movff	indf2,??_vfpfcnvrt
 11061  0023EC  0E04               	movlw	4
 11062  0023EE  26DE               	addwf	postinc2,f,c
 11063  0023F0  CFDF F17F          	movff	indf2,??_vfpfcnvrt+1
 11064  0023F4  0E00               	movlw	0
 11065  0023F6  22DD               	addwfc	postdec2,f,c
 11066  0023F8  C17E  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11067  0023FC  C17F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11068  002400  CFDE F18E          	movff	postinc2,vfpfcnvrt@f
 11069  002404  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+1
 11070  002408  CFDE F190          	movff	postinc2,vfpfcnvrt@f+2
 11071  00240C  CFDE F191          	movff	postinc2,vfpfcnvrt@f+3
 11072                           
 11073                           ; BSR set to: 1
 11074                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
 11075  002410  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11076  002414  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11077  002418  0E02               	movlw	2
 11078  00241A  26DF               	addwf	indf2,f,c
 11079                           
 11080                           ; BSR set to: 1
 11081                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 960:             ret
      +                          urn efgtoa(fp, f, c);
 11082  00241C  C178  F13A         	movff	vfpfcnvrt@fp,efgtoa@fp
 11083  002420  C179  F13B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 11084  002424  C18E  F13C         	movff	vfpfcnvrt@f,efgtoa@f
 11085  002428  C18F  F13D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
 11086  00242C  C190  F13E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
 11087  002430  C191  F13F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
 11088  002434  C195  F140         	movff	vfpfcnvrt@c,efgtoa@c
 11089  002438  ECE4  F00A         	call	_efgtoa	;wreg free
 11090  00243C  C13A  F178         	movff	?_efgtoa,?_vfpfcnvrt
 11091  002440  C13B  F179         	movff	?_efgtoa+1,?_vfpfcnvrt+1
 11092  002444  0012               	return	
 11093  002446                     l14289:
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*f
      +                          mt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
 11097  002446  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11098  00244A  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11099  00244E  CFDF FFF6          	movff	indf2,tblptrl
 11100  002452                     	if	1	;There is more than 1 active tblptr byte
 11101  002452  0E08               	movlw	high __smallconst
 11102  002454  6EF7               	movwf	tblptrh,c
 11103  002456                     	endif
 11104  002456                     	if	0	;tblptru may be non-zero
 11105  002456                     	endif
 11106  002456                     	if	0	;tblptru may be non-zero
 11107  002456                     	endif
 11108  002456  0008               	tblrd		*
 11109  002458  50F5               	movf	tablat,w,c
 11110  00245A  0A73               	xorlw	115
 11111  00245C  B4D8               	btfsc	status,2,c
 11112  00245E  D01A               	goto	u17120
 11113                           
 11114                           ; BSR set to: 0
 11115  002460  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11116  002464  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11117  002468  50DF               	movf	indf2,w,c
 11118  00246A  0101               	movlb	1	; () banked
 11119  00246C  6F7E               	movwf	??_vfpfcnvrt& (0+255),b
 11120  00246E  C17E  F08C         	movff	??_vfpfcnvrt,strncmp@_l
 11121  002472  0100               	movlb	0	; () banked
 11122  002474  518C               	movf	strncmp@_l& (0+255),w,b
 11123  002476  A4D8               	btfss	status,2,c
 11124  002478  0E08               	movlw	high __smallconst
 11125  00247A  6F8D               	movwf	(strncmp@_l+1)& (0+255),b
 11126  00247C  0EE8               	movlw	low STR_17
 11127  00247E  6F8E               	movwf	strncmp@_r& (0+255),b
 11128  002480  0E00               	movlw	0
 11129  002482  6F90               	movwf	(strncmp@n+1)& (0+255),b
 11130  002484  0E03               	movlw	3
 11131  002486  6F8F               	movwf	strncmp@n& (0+255),b
 11132  002488  ECBD  F030         	call	_strncmp	;wreg free
 11133  00248C  518C               	movf	?_strncmp& (0+255),w,b
 11134  00248E  118D               	iorwf	(?_strncmp+1)& (0+255),w,b
 11135  002490  A4D8               	btfss	status,2,c
 11136  002492  D040               	goto	l14307
 11137  002494                     u17120:
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fm
      +                          t[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
 11141  002494  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11142  002498  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11143  00249C  CFDF FFF6          	movff	indf2,tblptrl
 11144  0024A0                     	if	1	;There is more than 1 active tblptr byte
 11145  0024A0  0E08               	movlw	high __smallconst
 11146  0024A2  6EF7               	movwf	tblptrh,c
 11147  0024A4                     	endif
 11148  0024A4                     	if	0	;tblptru may be non-zero
 11149  0024A4                     	endif
 11150  0024A4                     	if	0	;tblptru may be non-zero
 11151  0024A4                     	endif
 11152  0024A4  0008               	tblrd		*
 11153  0024A6  50F5               	movf	tablat,w,c
 11154  0024A8  0A73               	xorlw	115
 11155  0024AA  B4D8               	btfsc	status,2,c
 11156  0024AC  D005               	goto	l14297
 11157                           
 11158                           ; BSR set to: 0
 11159  0024AE  0E00               	movlw	0
 11160  0024B0  0101               	movlb	1	; () banked
 11161  0024B2  6F8D               	movwf	(_vfpfcnvrt$4950+1)& (0+255),b
 11162  0024B4  0E03               	movlw	3
 11163  0024B6  D004               	goto	L7
 11164  0024B8                     l14297:
 11165                           
 11166                           ; BSR set to: 0
 11167  0024B8  0E00               	movlw	0
 11168  0024BA  0101               	movlb	1	; () banked
 11169  0024BC  6F8D               	movwf	(_vfpfcnvrt$4950+1)& (0+255),b
 11170  0024BE  0E01               	movlw	1
 11171  0024C0                     L7:
 11172  0024C0  6F8C               	movwf	_vfpfcnvrt$4950& (0+255),b
 11173                           
 11174                           ; BSR set to: 1
 11175  0024C2  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11176  0024C6  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11177  0024CA  518C               	movf	_vfpfcnvrt$4950& (0+255),w,b
 11178  0024CC  26DF               	addwf	indf2,f,c
 11179                           
 11180                           ; BSR set to: 1
 11181                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 11182  0024CE  C17C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11183  0024D2  C17D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11184  0024D6  CFDF F17E          	movff	indf2,??_vfpfcnvrt
 11185  0024DA  0E02               	movlw	2
 11186  0024DC  26DE               	addwf	postinc2,f,c
 11187  0024DE  CFDF F17F          	movff	indf2,??_vfpfcnvrt+1
 11188  0024E2  0E00               	movlw	0
 11189  0024E4  22DD               	addwfc	postdec2,f,c
 11190  0024E6  C17E  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11191  0024EA  C17F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11192  0024EE  CFDE F18A          	movff	postinc2,vfpfcnvrt@cp
 11193  0024F2  CFDD F18B          	movff	postdec2,vfpfcnvrt@cp+1
 11194                           
 11195                           ; BSR set to: 1
 11196                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             re
      +                          turn stoa(fp, cp);
 11197  0024F6  C178  F095         	movff	vfpfcnvrt@fp,stoa@fp
 11198  0024FA  C179  F096         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11199  0024FE  C18A  F097         	movff	vfpfcnvrt@cp,stoa@s
 11200  002502  C18B  F098         	movff	vfpfcnvrt@cp+1,stoa@s+1
 11201  002506  EC5E  F026         	call	_stoa	;wreg free
 11202  00250A  C095  F178         	movff	?_stoa,?_vfpfcnvrt
 11203  00250E  C096  F179         	movff	?_stoa+1,?_vfpfcnvrt+1
 11204  002512  0012               	return	
 11205  002514                     l14307:
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
 11209  002514  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11210  002518  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11211  00251C  CFDF FFF6          	movff	indf2,tblptrl
 11212  002520                     	if	1	;There is more than 1 active tblptr byte
 11213  002520  0E08               	movlw	high __smallconst
 11214  002522  6EF7               	movwf	tblptrh,c
 11215  002524                     	endif
 11216  002524                     	if	0	;tblptru may be non-zero
 11217  002524                     	endif
 11218  002524                     	if	0	;tblptru may be non-zero
 11219  002524                     	endif
 11220  002524  0008               	tblrd		*
 11221  002526  50F5               	movf	tablat,w,c
 11222  002528  0A25               	xorlw	37
 11223  00252A  A4D8               	btfss	status,2,c
 11224  00252C  D015               	goto	l14317
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
 11228  00252E  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11229  002532  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11230  002536  2ADF               	incf	indf2,f,c
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
 11234  002538  0E00               	movlw	0
 11235  00253A  6F8D               	movwf	(fputc@c+1)& (0+255),b
 11236  00253C  0E25               	movlw	37
 11237  00253E  6F8C               	movwf	fputc@c& (0+255),b
 11238  002540  C178  F08E         	movff	vfpfcnvrt@fp,fputc@fp
 11239  002544  C179  F08F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11240  002548  ECC8  F037         	call	_fputc	;wreg free
 11241  00254C                     l14313:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
 11245  00254C  0E00               	movlw	0
 11246  00254E  0101               	movlb	1	; () banked
 11247  002550  6F79               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 11248  002552  0E01               	movlw	1
 11249  002554  6F78               	movwf	?_vfpfcnvrt& (0+255),b
 11250  002556  0012               	return	
 11251  002558                     l14317:
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
 11255  002558  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11256  00255C  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11257  002560  2ADF               	incf	indf2,f,c
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
 11261  002562  0E00               	movlw	0
 11262  002564  0101               	movlb	1	; () banked
 11263  002566  6F79               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 11264  002568  0E00               	movlw	0
 11265  00256A  6F78               	movwf	?_vfpfcnvrt& (0+255),b
 11266  00256C  0012               	return	
 11267  00256E                     l14323:
 11268                           
 11269                           ; BSR set to: 1
 11270                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
 11271  00256E  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11272  002572  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11273  002576  CFDF FFF6          	movff	indf2,tblptrl
 11274  00257A                     	if	1	;There is more than 1 active tblptr byte
 11275  00257A  0E08               	movlw	high __smallconst
 11276  00257C  6EF7               	movwf	tblptrh,c
 11277  00257E                     	endif
 11278  00257E                     	if	0	;tblptru may be non-zero
 11279  00257E                     	endif
 11280  00257E                     	if	0	;tblptru may be non-zero
 11281  00257E                     	endif
 11282  00257E  0008               	tblrd		*
 11283  002580  50F5               	movf	tablat,w,c
 11284  002582  0100               	movlb	0	; () banked
 11285  002584  6F8C               	movwf	fputc@c& (0+255),b
 11286  002586  6B8D               	clrf	(fputc@c+1)& (0+255),b
 11287  002588  C178  F08E         	movff	vfpfcnvrt@fp,fputc@fp
 11288  00258C  C179  F08F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11289  002590  ECC8  F037         	call	_fputc	;wreg free
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
 11293  002594  C17A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11294  002598  C17B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11295  00259C  2ADF               	incf	indf2,f,c
 11296  00259E  D7D6               	goto	l14313
 11297  0025A0                     __end_of_vfpfcnvrt:
 11298                           	callstack 0
 11299                           
 11300 ;; *************** function _strncmp *****************
 11301 ;; Defined at:
 11302 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;  _l              2   44[BANK0 ] PTR const unsigned char 
 11305 ;;		 -> vfpfcnvrt@ct(3), STR_3(5), STR_2(5), STR_1(20), 
 11306 ;;  _r              1   46[BANK0 ] PTR const unsigned char 
 11307 ;;		 -> STR_19(4), STR_14(3), 
 11308 ;;  n               2   47[BANK0 ] unsigned int 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  l               2   50[BANK0 ] PTR const unsigned char 
 11311 ;;		 -> vfpfcnvrt@ct(3), STR_3(5), STR_2(5), STR_1(20), 
 11312 ;;  r               1   52[BANK0 ] PTR const unsigned char 
 11313 ;;		 -> STR_19(4), STR_14(3), 
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  2   44[BANK0 ] int 
 11316 ;; Registers used:
 11317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11318 ;; Tracked objects:
 11319 ;;		On entry : 3F/0
 11320 ;;		On exit  : 3F/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11323 ;;      Params:         0       5       0       0       0       0       0       0       0
 11324 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11325 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11326 ;;      Totals:         0       9       0       0       0       0       0       0       0
 11327 ;;Total ram usage:        9 bytes
 11328 ;; Hardware stack levels used: 1
 11329 ;; Hardware stack levels required when called: 10
 11330 ;; This function calls:
 11331 ;;		Nothing
 11332 ;; This function is called by:
 11333 ;;		_vfpfcnvrt
 11334 ;; This function uses a non-reentrant model
 11335 ;;
 11336                           
 11337                           	psect	text57
 11338  00617A                     __ptext57:
 11339                           	callstack 0
 11340  00617A                     _strncmp:
 11341                           	callstack 17
 11342                           
 11343                           ; BSR set to: 0
 11344                           
 11345                           ;incstack = 0
 11346  00617A  C08C  F092         	movff	strncmp@_l,strncmp@l
 11347  00617E  C08D  F093         	movff	strncmp@_l+1,strncmp@l+1
 11348  006182  C08E  F094         	movff	strncmp@_r,strncmp@r
 11349  006186  078F               	decf	strncmp@n& (0+255),f,b
 11350  006188  A0D8               	btfss	status,0,c
 11351  00618A  0790               	decf	(strncmp@n+1)& (0+255),f,b
 11352  00618C  298F               	incf	strncmp@n& (0+255),w,b
 11353  00618E  E10F               	bnz	l14069
 11354  006190  2990               	incf	(strncmp@n+1)& (0+255),w,b
 11355  006192  A4D8               	btfss	status,2,c
 11356  006194  D00C               	goto	l14069
 11357                           
 11358                           ; BSR set to: 0
 11359  006196  0E00               	movlw	0
 11360  006198  6F8D               	movwf	(?_strncmp+1)& (0+255),b
 11361  00619A  0E00               	movlw	0
 11362  00619C  6F8C               	movwf	?_strncmp& (0+255),b
 11363  00619E  0012               	return	
 11364  0061A0                     l14067:
 11365  0061A0  0100               	movlb	0	; () banked
 11366  0061A2  4B92               	infsnz	strncmp@l& (0+255),f,b
 11367  0061A4  2B93               	incf	(strncmp@l+1)& (0+255),f,b
 11368  0061A6  2B94               	incf	strncmp@r& (0+255),f,b
 11369  0061A8  078F               	decf	strncmp@n& (0+255),f,b
 11370  0061AA  A0D8               	btfss	status,0,c
 11371  0061AC  0790               	decf	(strncmp@n+1)& (0+255),f,b
 11372  0061AE                     l14069:
 11373                           
 11374                           ; BSR set to: 0
 11375  0061AE  C092  FFF6         	movff	strncmp@l,tblptrl
 11376  0061B2  C093  FFF7         	movff	strncmp@l+1,tblptrh
 11377  0061B6  6AF8               	clrf	tblptru,c
 11378  0061B8  0E07               	movlw	(high __ramtop+-1)
 11379  0061BA  64F7               	cpfsgt	tblptrh,c
 11380  0061BC  D003               	bra	u16827
 11381  0061BE  0008               	tblrd		*
 11382  0061C0  50F5               	movf	tablat,w,c
 11383  0061C2  D005               	bra	u16820
 11384  0061C4                     u16827:
 11385  0061C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11386  0061C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11387  0061CC  50E7               	movf	indf1,w,c
 11388  0061CE                     u16820:
 11389  0061CE  0900               	iorlw	0
 11390  0061D0  B4D8               	btfsc	status,2,c
 11391  0061D2  D028               	goto	u16860
 11392  0061D4  C094  FFF6         	movff	strncmp@r,tblptrl
 11393  0061D8                     	if	1	;There is more than 1 active tblptr byte
 11394  0061D8  0E08               	movlw	high __smallconst
 11395  0061DA  6EF7               	movwf	tblptrh,c
 11396  0061DC                     	endif
 11397  0061DC                     	if	0	;tblptru may be non-zero
 11398  0061DC                     	endif
 11399  0061DC                     	if	0	;tblptru may be non-zero
 11400  0061DC                     	endif
 11401  0061DC  0008               	tblrd		*
 11402  0061DE  50F5               	movf	tablat,w,c
 11403  0061E0  0900               	iorlw	0
 11404  0061E2  B4D8               	btfsc	status,2,c
 11405  0061E4  D01F               	goto	u16860
 11406  0061E6  0100               	movlb	0	; () banked
 11407  0061E8  518F               	movf	strncmp@n& (0+255),w,b
 11408  0061EA  1190               	iorwf	(strncmp@n+1)& (0+255),w,b
 11409  0061EC  B4D8               	btfsc	status,2,c
 11410  0061EE  D01A               	goto	u16860
 11411                           
 11412                           ; BSR set to: 0
 11413  0061F0  C094  FFF6         	movff	strncmp@r,tblptrl
 11414  0061F4                     	if	1	;There is more than 1 active tblptr byte
 11415  0061F4  0E08               	movlw	high __smallconst
 11416  0061F6  6EF7               	movwf	tblptrh,c
 11417  0061F8                     	endif
 11418  0061F8                     	if	0	;tblptru may be non-zero
 11419  0061F8                     	endif
 11420  0061F8                     	if	0	;tblptru may be non-zero
 11421  0061F8                     	endif
 11422  0061F8  0008               	tblrd		*
 11423  0061FA  CFF5 F091          	movff	tablat,??_strncmp
 11424  0061FE  C092  FFF6         	movff	strncmp@l,tblptrl
 11425  006202  C093  FFF7         	movff	strncmp@l+1,tblptrh
 11426  006206  6AF8               	clrf	tblptru,c
 11427  006208  0E07               	movlw	(high __ramtop+-1)
 11428  00620A  64F7               	cpfsgt	tblptrh,c
 11429  00620C  D003               	bra	u16867
 11430  00620E  0008               	tblrd		*
 11431  006210  50F5               	movf	tablat,w,c
 11432  006212  D005               	bra	u16865
 11433  006214                     u16867:
 11434  006214  CFF6 FFE1          	movff	tblptrl,fsr1l
 11435  006218  CFF7 FFE2          	movff	tblptrh,fsr1h
 11436  00621C  50E7               	movf	indf1,w,c
 11437  00621E                     u16865:
 11438  00621E  1991               	xorwf	??_strncmp& (0+255),w,b
 11439  006220  B4D8               	btfsc	status,2,c
 11440  006222  D7BE               	goto	l14067
 11441  006224                     u16860:
 11442  006224  C092  FFF6         	movff	strncmp@l,tblptrl
 11443  006228  C093  FFF7         	movff	strncmp@l+1,tblptrh
 11444  00622C  6AF8               	clrf	tblptru,c
 11445  00622E  0E07               	movlw	(high __ramtop+-1)
 11446  006230  64F7               	cpfsgt	tblptrh,c
 11447  006232  D003               	bra	u16877
 11448  006234  0008               	tblrd		*
 11449  006236  50F5               	movf	tablat,w,c
 11450  006238  D005               	bra	u16870
 11451  00623A                     u16877:
 11452  00623A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11453  00623E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11454  006242  50E7               	movf	indf1,w,c
 11455  006244                     u16870:
 11456  006244  0100               	movlb	0	; () banked
 11457  006246  6F91               	movwf	??_strncmp& (0+255),b
 11458  006248  C094  FFF6         	movff	strncmp@r,tblptrl
 11459  00624C                     	if	1	;There is more than 1 active tblptr byte
 11460  00624C  0E08               	movlw	high __smallconst
 11461  00624E  6EF7               	movwf	tblptrh,c
 11462  006250                     	endif
 11463  006250                     	if	0	;tblptru may be non-zero
 11464  006250                     	endif
 11465  006250                     	if	0	;tblptru may be non-zero
 11466  006250                     	endif
 11467  006250  0008               	tblrd		*
 11468  006252  50F5               	movf	tablat,w,c
 11469  006254  5D91               	subwf	??_strncmp& (0+255),w,b
 11470  006256  6F8C               	movwf	?_strncmp& (0+255),b
 11471  006258  6B8D               	clrf	(?_strncmp+1)& (0+255),b
 11472  00625A  A0D8               	btfss	status,0,c
 11473  00625C  078D               	decf	(?_strncmp+1)& (0+255),f,b
 11474                           
 11475                           ; BSR set to: 0
 11476  00625E  0012               	return		;funcret
 11477  006260                     __end_of_strncmp:
 11478                           	callstack 0
 11479                           
 11480 ;; *************** function _stoa *****************
 11481 ;; Defined at:
 11482 ;;		line 568 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
 11485 ;;		 -> sprintf@f(11), 
 11486 ;;  s               2   55[BANK0 ] PTR unsigned char 
 11487 ;;		 -> ?_sprintf(2), executeCommand@comando.number(4), executeCommand@strCommand(30), lastToken(30), 
 11488 ;;		 -> readBuffer(32), Encoder_ISR@salida(4), Encoder_ISR@tics(4), ustep(1), 
 11489 ;;		 -> NULL(0), 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  nuls            7    0[BANK1 ] unsigned char [7]
 11492 ;;  l               2   15[BANK1 ] int 
 11493 ;;  p               2   13[BANK1 ] int 
 11494 ;;  cp              2   11[BANK1 ] PTR unsigned char 
 11495 ;;		 -> stoa@nuls(7), ?_sprintf(2), executeCommand@comando.number(4), executeCommand@strCommand(30), 
 11496 ;;		 -> lastToken(30), readBuffer(32), Encoder_ISR@salida(4), Encoder_ISR@tics(4), 
 11497 ;;		 -> ustep(1), NULL(0), 
 11498 ;;  w               2    9[BANK1 ] int 
 11499 ;;  i               2    7[BANK1 ] int 
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  2   53[BANK0 ] int 
 11502 ;; Registers used:
 11503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11504 ;; Tracked objects:
 11505 ;;		On entry : 3F/1
 11506 ;;		On exit  : 3F/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11509 ;;      Params:         0       4       0       0       0       0       0       0       0
 11510 ;;      Locals:         0       0      17       0       0       0       0       0       0
 11511 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11512 ;;      Totals:         0       5      17       0       0       0       0       0       0
 11513 ;;Total ram usage:       22 bytes
 11514 ;; Hardware stack levels used: 1
 11515 ;; Hardware stack levels required when called: 12
 11516 ;; This function calls:
 11517 ;;		_fputc
 11518 ;;		_strlen
 11519 ;; This function is called by:
 11520 ;;		_vfpfcnvrt
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text58
 11525  004CBC                     __ptext58:
 11526                           	callstack 0
 11527  004CBC                     _stoa:
 11528                           	callstack 15
 11529                           
 11530                           ; BSR set to: 1
 11531                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 5
      +                          69: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *
      +                          cp, nuls[] = "(null)";
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;incstack = 0
 11535  004CBC  EE23  F0C8         	lfsr	2,stoa@F1177
 11536  004CC0  EE11  F000         	lfsr	1,stoa@nuls
 11537  004CC4  0E06               	movlw	6
 11538  004CC6                     u16681:
 11539  004CC6  CFDB FFE3          	movff	plusw2,plusw1
 11540  004CCA  06E8               	decf	wreg,f,c
 11541  004CCC  E2FC               	bc	u16681
 11542                           
 11543                           ; BSR set to: 1
 11544                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
 11545  004CCE  C097  F10B         	movff	stoa@s,stoa@cp
 11546  004CD2  C098  F10C         	movff	stoa@s+1,stoa@cp+1
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
 11550  004CD6  510B               	movf	stoa@cp& (0+255),w,b
 11551  004CD8  110C               	iorwf	(stoa@cp+1)& (0+255),w,b
 11552  004CDA  A4D8               	btfss	status,2,c
 11553  004CDC  D004               	goto	l13995
 11554                           
 11555                           ; BSR set to: 1
 11556                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nu
      +                          ls;
 11557  004CDE  0E00               	movlw	low stoa@nuls
 11558  004CE0  6F0B               	movwf	stoa@cp& (0+255),b
 11559  004CE2  0E01               	movlw	high stoa@nuls
 11560  004CE4  6F0C               	movwf	(stoa@cp+1)& (0+255),b
 11561  004CE6                     l13995:
 11562                           
 11563                           ; BSR set to: 1
 11564                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)st
      +                          rlen(cp);
 11565  004CE6  C10B  F08C         	movff	stoa@cp,strlen@s
 11566  004CEA  C10C  F08D         	movff	stoa@cp+1,strlen@s+1
 11567  004CEE  ECE9  F000         	call	_strlen	;wreg free
 11568  004CF2  C08C  F10F         	movff	?_strlen,stoa@l
 11569  004CF6  C08D  F110         	movff	?_strlen+1,stoa@l+1
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
 11573  004CFA  C0C2  F10D         	movff	_prec,stoa@p
 11574  004CFE  C0C3  F10E         	movff	_prec+1,stoa@p+1
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 11578  004D02  0101               	movlb	1	; () banked
 11579  004D04  BF0E               	btfsc	(stoa@p+1)& (0+255),7,b
 11580  004D06  D011               	goto	l2293
 11581                           
 11582                           ; BSR set to: 1
 11583  004D08  510F               	movf	stoa@l& (0+255),w,b
 11584  004D0A  5D0D               	subwf	stoa@p& (0+255),w,b
 11585  004D0C  510E               	movf	(stoa@p+1)& (0+255),w,b
 11586  004D0E  0A80               	xorlw	128
 11587  004D10  0100               	movlb	0	; () banked
 11588  004D12  6F99               	movwf	??_stoa& (0+255),b
 11589  004D14  0101               	movlb	1	; () banked
 11590  004D16  5110               	movf	(stoa@l+1)& (0+255),w,b
 11591  004D18  0A80               	xorlw	128
 11592  004D1A  0100               	movlb	0	; () banked
 11593  004D1C  5999               	subwfb	??_stoa& (0+255),w,b
 11594  004D1E  B0D8               	btfsc	status,0,c
 11595  004D20  D004               	goto	l2293
 11596                           
 11597                           ; BSR set to: 0
 11598  004D22  C10D  F10F         	movff	stoa@p,stoa@l
 11599  004D26  C10E  F110         	movff	stoa@p+1,stoa@l+1
 11600  004D2A                     l2293:
 11601                           
 11602                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
 11603  004D2A  C10F  F10D         	movff	stoa@l,stoa@p
 11604  004D2E  C110  F10E         	movff	stoa@l+1,stoa@p+1
 11605                           
 11606                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
 11607  004D32  C0C0  F109         	movff	_width,stoa@w
 11608  004D36  C0C1  F10A         	movff	_width+1,stoa@w+1
 11609                           
 11610                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags
      +                           & (1 << 0))) {
 11611  004D3A  0100               	movlb	0	; () banked
 11612  004D3C  A1C4               	btfss	_flags& (0+255),0,b
 11613  004D3E  D00E               	goto	l14009
 11614  004D40  D01B               	goto	u16730
 11615  004D42                     l14005:
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fpu
      +                          tc(' ', fp);
 11619  004D42  0E00               	movlw	0
 11620  004D44  6F8D               	movwf	(fputc@c+1)& (0+255),b
 11621  004D46  0E20               	movlw	32
 11622  004D48  6F8C               	movwf	fputc@c& (0+255),b
 11623  004D4A  C095  F08E         	movff	stoa@fp,fputc@fp
 11624  004D4E  C096  F08F         	movff	stoa@fp+1,fputc@fp+1
 11625  004D52  ECC8  F037         	call	_fputc	;wreg free
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l
      +                          ;
 11629  004D56  0101               	movlb	1	; () banked
 11630  004D58  4B0F               	infsnz	stoa@l& (0+255),f,b
 11631  004D5A  2B10               	incf	(stoa@l+1)& (0+255),f,b
 11632  004D5C                     l14009:
 11633                           
 11634                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (
      +                          l < w) {
 11635  004D5C  0101               	movlb	1	; () banked
 11636  004D5E  5109               	movf	stoa@w& (0+255),w,b
 11637  004D60  5D0F               	subwf	stoa@l& (0+255),w,b
 11638  004D62  5110               	movf	(stoa@l+1)& (0+255),w,b
 11639  004D64  0A80               	xorlw	128
 11640  004D66  0100               	movlb	0	; () banked
 11641  004D68  6F99               	movwf	??_stoa& (0+255),b
 11642  004D6A  0101               	movlb	1	; () banked
 11643  004D6C  510A               	movf	(stoa@w+1)& (0+255),w,b
 11644  004D6E  0A80               	xorlw	128
 11645  004D70  0100               	movlb	0	; () banked
 11646  004D72  5999               	subwfb	??_stoa& (0+255),w,b
 11647  004D74  A0D8               	btfss	status,0,c
 11648  004D76  D7E5               	goto	l14005
 11649  004D78                     u16730:
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
 11653  004D78  0E00               	movlw	0
 11654  004D7A  0101               	movlb	1	; () banked
 11655  004D7C  6F08               	movwf	(stoa@i+1)& (0+255),b
 11656  004D7E  0E00               	movlw	0
 11657  004D80  6F07               	movwf	stoa@i& (0+255),b
 11658                           
 11659                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 11660  004D82  D014               	goto	l14019
 11661  004D84                     l14013:
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*
      +                          cp, fp);
 11665  004D84  C10B  FFD9         	movff	stoa@cp,fsr2l
 11666  004D88  C10C  FFDA         	movff	stoa@cp+1,fsr2h
 11667  004D8C  50DF               	movf	indf2,w,c
 11668  004D8E  6F99               	movwf	??_stoa& (0+255),b
 11669  004D90  5199               	movf	??_stoa& (0+255),w,b
 11670  004D92  6F8C               	movwf	fputc@c& (0+255),b
 11671  004D94  6B8D               	clrf	(fputc@c+1)& (0+255),b
 11672  004D96  C095  F08E         	movff	stoa@fp,fputc@fp
 11673  004D9A  C096  F08F         	movff	stoa@fp+1,fputc@fp+1
 11674  004D9E  ECC8  F037         	call	_fputc	;wreg free
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
 11678  004DA2  0101               	movlb	1	; () banked
 11679  004DA4  4B0B               	infsnz	stoa@cp& (0+255),f,b
 11680  004DA6  2B0C               	incf	(stoa@cp+1)& (0+255),f,b
 11681                           
 11682                           ; BSR set to: 1
 11683                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
 11684  004DA8  4B07               	infsnz	stoa@i& (0+255),f,b
 11685  004DAA  2B08               	incf	(stoa@i+1)& (0+255),f,b
 11686  004DAC                     l14019:
 11687                           
 11688                           ; BSR set to: 1
 11689                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 11690  004DAC  510D               	movf	stoa@p& (0+255),w,b
 11691  004DAE  5D07               	subwf	stoa@i& (0+255),w,b
 11692  004DB0  5108               	movf	(stoa@i+1)& (0+255),w,b
 11693  004DB2  0A80               	xorlw	128
 11694  004DB4  0100               	movlb	0	; () banked
 11695  004DB6  6F99               	movwf	??_stoa& (0+255),b
 11696  004DB8  0101               	movlb	1	; () banked
 11697  004DBA  510E               	movf	(stoa@p+1)& (0+255),w,b
 11698  004DBC  0A80               	xorlw	128
 11699  004DBE  0100               	movlb	0	; () banked
 11700  004DC0  5999               	subwfb	??_stoa& (0+255),w,b
 11701  004DC2  A0D8               	btfss	status,0,c
 11702  004DC4  D7DF               	goto	l14013
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags &
      +                           (1 << 0)) {
 11706  004DC6  B1C4               	btfsc	_flags& (0+255),0,b
 11707  004DC8  D00E               	goto	l14027
 11708  004DCA  D01B               	goto	u16760
 11709  004DCC                     l14023:
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fpu
      +                          tc(' ', fp);
 11713  004DCC  0E00               	movlw	0
 11714  004DCE  6F8D               	movwf	(fputc@c+1)& (0+255),b
 11715  004DD0  0E20               	movlw	32
 11716  004DD2  6F8C               	movwf	fputc@c& (0+255),b
 11717  004DD4  C095  F08E         	movff	stoa@fp,fputc@fp
 11718  004DD8  C096  F08F         	movff	stoa@fp+1,fputc@fp+1
 11719  004DDC  ECC8  F037         	call	_fputc	;wreg free
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l
      +                          ;
 11723  004DE0  0101               	movlb	1	; () banked
 11724  004DE2  4B0F               	infsnz	stoa@l& (0+255),f,b
 11725  004DE4  2B10               	incf	(stoa@l+1)& (0+255),f,b
 11726  004DE6                     l14027:
 11727                           
 11728                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (
      +                          l < w) {
 11729  004DE6  0101               	movlb	1	; () banked
 11730  004DE8  5109               	movf	stoa@w& (0+255),w,b
 11731  004DEA  5D0F               	subwf	stoa@l& (0+255),w,b
 11732  004DEC  5110               	movf	(stoa@l+1)& (0+255),w,b
 11733  004DEE  0A80               	xorlw	128
 11734  004DF0  0100               	movlb	0	; () banked
 11735  004DF2  6F99               	movwf	??_stoa& (0+255),b
 11736  004DF4  0101               	movlb	1	; () banked
 11737  004DF6  510A               	movf	(stoa@w+1)& (0+255),w,b
 11738  004DF8  0A80               	xorlw	128
 11739  004DFA  0100               	movlb	0	; () banked
 11740  004DFC  5999               	subwfb	??_stoa& (0+255),w,b
 11741  004DFE  A0D8               	btfss	status,0,c
 11742  004E00  D7E5               	goto	l14023
 11743  004E02                     u16760:
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
 11747                           
 11748                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
 11749  004E02  C10F  F095         	movff	stoa@l,?_stoa
 11750  004E06  C110  F096         	movff	stoa@l+1,?_stoa+1
 11751                           
 11752                           ; BSR set to: 0
 11753  004E0A  0012               	return		;funcret
 11754  004E0C                     __end_of_stoa:
 11755                           	callstack 0
 11756                           
 11757 ;; *************** function _efgtoa *****************
 11758 ;; Defined at:
 11759 ;;		line 332 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  fp              2   58[BANK1 ] PTR struct _IO_FILE
 11762 ;;		 -> sprintf@f(11), 
 11763 ;;  f               4   60[BANK1 ] PTR struct _IO_FILE
 11764 ;;  c               1   64[BANK1 ] unsigned char 
 11765 ;; Auto vars:     Size  Location     Type
 11766 ;;  u               4  116[BANK1 ] unsigned char 
 11767 ;;  g               4  108[BANK1 ] unsigned char 
 11768 ;;  l               4  102[BANK1 ] unsigned char 
 11769 ;;  h               4   98[BANK1 ] unsigned char 
 11770 ;;  ou              4   84[BANK1 ] unsigned char 
 11771 ;;  n               2  114[BANK1 ] int 
 11772 ;;  e               2  112[BANK1 ] int 
 11773 ;;  i               2  106[BANK1 ] int 
 11774 ;;  w               2   94[BANK1 ] int 
 11775 ;;  p               2   92[BANK1 ] int 
 11776 ;;  sign            2   90[BANK1 ] int 
 11777 ;;  d               2   88[BANK1 ] int 
 11778 ;;  m               2   82[BANK1 ] int 
 11779 ;;  ne              2   80[BANK1 ] int 
 11780 ;;  pp              2   78[BANK1 ] int 
 11781 ;;  t               2   76[BANK1 ] int 
 11782 ;;  mode            1   97[BANK1 ] unsigned char 
 11783 ;;  nmode           1   96[BANK1 ] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  2   58[BANK1 ] int 
 11786 ;; Registers used:
 11787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11788 ;; Tracked objects:
 11789 ;;		On entry : 3F/1
 11790 ;;		On exit  : 3F/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11793 ;;      Params:         0       0       7       0       0       0       0       0       0
 11794 ;;      Locals:         0       0      50       0       0       0       0       0       0
 11795 ;;      Temps:          0       0       5       0       0       0       0       0       0
 11796 ;;      Totals:         0       0      62       0       0       0       0       0       0
 11797 ;;Total ram usage:       62 bytes
 11798 ;; Hardware stack levels used: 1
 11799 ;; Hardware stack levels required when called: 14
 11800 ;; This function calls:
 11801 ;;		___awdiv
 11802 ;;		___awmod
 11803 ;;		___fladd
 11804 ;;		___fldiv
 11805 ;;		___fleq
 11806 ;;		___flge
 11807 ;;		___flmul
 11808 ;;		___flneg
 11809 ;;		___flsub
 11810 ;;		___fltol
 11811 ;;		___fpclassifyf
 11812 ;;		_floorf
 11813 ;;		_isupper
 11814 ;;		_pad
 11815 ;;		_strcpy
 11816 ;;		_tolower
 11817 ;; This function is called by:
 11818 ;;		_vfpfcnvrt
 11819 ;; This function uses a non-reentrant model
 11820 ;;
 11821                           
 11822                           	psect	text59
 11823  0015C8                     __ptext59:
 11824                           	callstack 0
 11825  0015C8                     _efgtoa:
 11826                           	callstack 13
 11827                           
 11828                           ; BSR set to: 1
 11829                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.36/pic/sources/c99/co
      +                          mmon/doprnt.c: 333: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c:
      +                           334:     char mode, nmode;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/dop
      +                          rnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .36/pic/sources/c99/common/doprnt.c: 336:     long double g, h, l, ou, u;
 11830                           
 11831                           ; BSR set to: 0
 11832                           ;incstack = 0
 11833  0015C8  0E00               	movlw	0
 11834  0015CA  6F5B               	movwf	(efgtoa@sign+1)& (0+255),b
 11835  0015CC  0E00               	movlw	0
 11836  0015CE  6F5A               	movwf	efgtoa@sign& (0+255),b
 11837                           
 11838                           ; BSR set to: 1
 11839                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
 11840  0015D0  C13C  F16C         	movff	efgtoa@f,efgtoa@g
 11841  0015D4  C13D  F16D         	movff	efgtoa@f+1,efgtoa@g+1
 11842  0015D8  C13E  F16E         	movff	efgtoa@f+2,efgtoa@g+2
 11843  0015DC  C13F  F16F         	movff	efgtoa@f+3,efgtoa@g+3
 11844                           
 11845                           ; BSR set to: 1
 11846                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0
      +                          ) {
 11847  0015E0  AF6F               	btfss	(efgtoa@g+3)& (0+255),7,b
 11848  0015E2  D016               	goto	l13691
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 
      +                          1;
 11852  0015E4  0E00               	movlw	0
 11853  0015E6  6F5B               	movwf	(efgtoa@sign+1)& (0+255),b
 11854  0015E8  0E01               	movlw	1
 11855  0015EA  6F5A               	movwf	efgtoa@sign& (0+255),b
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
 11859  0015EC  C16C  F08C         	movff	efgtoa@g,___flneg@f1
 11860  0015F0  C16D  F08D         	movff	efgtoa@g+1,___flneg@f1+1
 11861  0015F4  C16E  F08E         	movff	efgtoa@g+2,___flneg@f1+2
 11862  0015F8  C16F  F08F         	movff	efgtoa@g+3,___flneg@f1+3
 11863  0015FC  EC8A  F000         	call	___flneg	;wreg free
 11864  001600  C08C  F16C         	movff	?___flneg,efgtoa@g
 11865  001604  C08D  F16D         	movff	?___flneg+1,efgtoa@g+1
 11866  001608  C08E  F16E         	movff	?___flneg+2,efgtoa@g+2
 11867  00160C  C08F  F16F         	movff	?___flneg+3,efgtoa@g+3
 11868  001610                     l13691:
 11869                           
 11870                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
 11871  001610  0E00               	movlw	0
 11872  001612  0101               	movlb	1	; () banked
 11873  001614  6F73               	movwf	(efgtoa@n+1)& (0+255),b
 11874  001616  0E00               	movlw	0
 11875  001618  6F72               	movwf	efgtoa@n& (0+255),b
 11876                           
 11877                           ; BSR set to: 1
 11878                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
 11879  00161A  C0C0  F15E         	movff	_width,efgtoa@w
 11880  00161E  C0C1  F15F         	movff	_width+1,efgtoa@w+1
 11881                           
 11882                           ; BSR set to: 1
 11883                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign ||
      +                           (flags & (1 << 2))) {
 11884  001622  515A               	movf	efgtoa@sign& (0+255),w,b
 11885  001624  115B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 11886  001626  A4D8               	btfss	status,2,c
 11887  001628  D003               	goto	u16220
 11888                           
 11889                           ; BSR set to: 1
 11890  00162A  0100               	movlb	0	; () banked
 11891  00162C  A5C4               	btfss	_flags& (0+255),2,b
 11892  00162E  D014               	goto	l13711
 11893  001630                     u16220:
 11894                           
 11895                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n]
      +                           = sign ? '-' : '+';
 11896  001630  0101               	movlb	1	; () banked
 11897  001632  515A               	movf	efgtoa@sign& (0+255),w,b
 11898  001634  115B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 11899  001636  A4D8               	btfss	status,2,c
 11900  001638  D004               	goto	l13703
 11901                           
 11902                           ; BSR set to: 1
 11903  00163A  0E00               	movlw	0
 11904  00163C  6F47               	movwf	(_efgtoa$4909+1)& (0+255),b
 11905  00163E  0E2B               	movlw	43
 11906  001640  D003               	goto	L8
 11907  001642                     l13703:
 11908                           
 11909                           ; BSR set to: 1
 11910  001642  0E00               	movlw	0
 11911  001644  6F47               	movwf	(_efgtoa$4909+1)& (0+255),b
 11912  001646  0E2D               	movlw	45
 11913  001648                     L8:
 11914  001648  6F46               	movwf	_efgtoa$4909& (0+255),b
 11915                           
 11916                           ; BSR set to: 1
 11917  00164A  C146  F312         	movff	_efgtoa$4909,_dbuf
 11918                           
 11919                           ; BSR set to: 1
 11920                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
 11921  00164E  4B72               	infsnz	efgtoa@n& (0+255),f,b
 11922  001650  2B73               	incf	(efgtoa@n+1)& (0+255),f,b
 11923                           
 11924                           ; BSR set to: 1
 11925                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
 11926  001652  075E               	decf	efgtoa@w& (0+255),f,b
 11927  001654  A0D8               	btfss	status,0,c
 11928  001656  075F               	decf	(efgtoa@w+1)& (0+255),f,b
 11929  001658                     l13711:
 11930                           
 11931                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpc
      +                          lassifyf(g) == 1 )) {
 11932  001658  C16C  F08C         	movff	efgtoa@g,___fpclassifyf@x
 11933  00165C  C16D  F08D         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11934  001660  C16E  F08E         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11935  001664  C16F  F08F         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11936  001668  EC1E  F034         	call	___fpclassifyf	;wreg free
 11937  00166C  058C               	decf	?___fpclassifyf& (0+255),w,b
 11938  00166E  118D               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 11939  001670  A4D8               	btfss	status,2,c
 11940  001672  D04E               	goto	l13729
 11941                           
 11942                           ; BSR set to: 0
 11943  001674  0EBF               	movlw	191
 11944  001676  0101               	movlb	1	; () banked
 11945  001678  6F41               	movwf	??_efgtoa& (0+255),b
 11946  00167A  0EFF               	movlw	255
 11947  00167C  6F42               	movwf	(??_efgtoa+1)& (0+255),b
 11948  00167E  5140               	movf	efgtoa@c& (0+255),w,b
 11949  001680  6F43               	movwf	(??_efgtoa+2)& (0+255),b
 11950  001682  6B44               	clrf	(??_efgtoa+3)& (0+255),b
 11951  001684  5141               	movf	??_efgtoa& (0+255),w,b
 11952  001686  2743               	addwf	(??_efgtoa+2)& (0+255),f,b
 11953  001688  5142               	movf	(??_efgtoa+1)& (0+255),w,b
 11954  00168A  2344               	addwfc	(??_efgtoa+3)& (0+255),f,b
 11955  00168C  5144               	movf	(??_efgtoa+3)& (0+255),w,b
 11956  00168E  E116               	bnz	l13721
 11957  001690  0E1A               	movlw	26
 11958  001692  5D43               	subwf	(??_efgtoa+2)& (0+255),w,b
 11959  001694  B0D8               	btfsc	status,0,c
 11960  001696  D012               	goto	l13721
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             str
      +                          cpy(&dbuf[n], "INF");
 11964  001698  0E12               	movlw	low _dbuf
 11965  00169A  2572               	addwf	efgtoa@n& (0+255),w,b
 11966  00169C  0100               	movlb	0	; () banked
 11967  00169E  6F8C               	movwf	strcpy@dest& (0+255),b
 11968  0016A0  0E03               	movlw	high _dbuf
 11969  0016A2  0101               	movlb	1	; () banked
 11970  0016A4  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11971  0016A6  0100               	movlb	0	; () banked
 11972  0016A8  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 11973  0016AA  0ED8               	movlw	low STR_4
 11974  0016AC  6F8E               	movwf	strcpy@src& (0+255),b
 11975  0016AE  518E               	movf	strcpy@src& (0+255),w,b
 11976  0016B0  A4D8               	btfss	status,2,c
 11977  0016B2  0E08               	movlw	high __smallconst
 11978  0016B4  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 11979  0016B6  ECD7  F03C         	call	_strcpy	;wreg free
 11980                           
 11981                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else 
      +                          {
 11982  0016BA  D011               	goto	l13723
 11983  0016BC                     l13721:
 11984                           
 11985                           ; BSR set to: 1
 11986                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             str
      +                          cpy(&dbuf[n], "inf");
 11987  0016BC  0E12               	movlw	low _dbuf
 11988  0016BE  2572               	addwf	efgtoa@n& (0+255),w,b
 11989  0016C0  0100               	movlb	0	; () banked
 11990  0016C2  6F8C               	movwf	strcpy@dest& (0+255),b
 11991  0016C4  0E03               	movlw	high _dbuf
 11992  0016C6  0101               	movlb	1	; () banked
 11993  0016C8  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11994  0016CA  0100               	movlb	0	; () banked
 11995  0016CC  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 11996  0016CE  0EE0               	movlw	low STR_5
 11997  0016D0  6F8E               	movwf	strcpy@src& (0+255),b
 11998  0016D2  518E               	movf	strcpy@src& (0+255),w,b
 11999  0016D4  A4D8               	btfss	status,2,c
 12000  0016D6  0E08               	movlw	high __smallconst
 12001  0016D8  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 12002  0016DA  ECD7  F03C         	call	_strcpy	;wreg free
 12003  0016DE                     l13723:
 12004                           
 12005                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 12006  0016DE  0101               	movlb	1	; () banked
 12007  0016E0  0EFD               	movlw	253
 12008  0016E2  275E               	addwf	efgtoa@w& (0+255),f,b
 12009  0016E4  0EFF               	movlw	255
 12010  0016E6  235F               	addwfc	(efgtoa@w+1)& (0+255),f,b
 12011                           
 12012                           ; BSR set to: 1
 12013                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return 
      +                          pad(fp, &dbuf[0], w);
 12014  0016E8  C13A  F09C         	movff	efgtoa@fp,pad@fp
 12015  0016EC  C13B  F09D         	movff	efgtoa@fp+1,pad@fp+1
 12016  0016F0  0E12               	movlw	low _dbuf
 12017  0016F2  0100               	movlb	0	; () banked
 12018  0016F4  6F9E               	movwf	pad@buf& (0+255),b
 12019  0016F6  0E03               	movlw	high _dbuf
 12020  0016F8  6F9F               	movwf	(pad@buf+1)& (0+255),b
 12021  0016FA  C15E  F0A0         	movff	efgtoa@w,pad@p
 12022  0016FE  C15F  F0A1         	movff	efgtoa@w+1,pad@p+1
 12023  001702  ECB5  F038         	call	_pad	;wreg free
 12024  001706  C09C  F13A         	movff	?_pad,?_efgtoa
 12025  00170A  C09D  F13B         	movff	?_pad+1,?_efgtoa+1
 12026  00170E  0012               	return	
 12027  001710                     l13729:
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpc
      +                          lassifyf(g) == 0 )) {
 12031  001710  C16C  F08C         	movff	efgtoa@g,___fpclassifyf@x
 12032  001714  C16D  F08D         	movff	efgtoa@g+1,___fpclassifyf@x+1
 12033  001718  C16E  F08E         	movff	efgtoa@g+2,___fpclassifyf@x+2
 12034  00171C  C16F  F08F         	movff	efgtoa@g+3,___fpclassifyf@x+3
 12035  001720  EC1E  F034         	call	___fpclassifyf	;wreg free
 12036  001724  518C               	movf	?___fpclassifyf& (0+255),w,b
 12037  001726  118D               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 12038  001728  A4D8               	btfss	status,2,c
 12039  00172A  D04E               	goto	l13747
 12040                           
 12041                           ; BSR set to: 0
 12042  00172C  0EBF               	movlw	191
 12043  00172E  0101               	movlb	1	; () banked
 12044  001730  6F41               	movwf	??_efgtoa& (0+255),b
 12045  001732  0EFF               	movlw	255
 12046  001734  6F42               	movwf	(??_efgtoa+1)& (0+255),b
 12047  001736  5140               	movf	efgtoa@c& (0+255),w,b
 12048  001738  6F43               	movwf	(??_efgtoa+2)& (0+255),b
 12049  00173A  6B44               	clrf	(??_efgtoa+3)& (0+255),b
 12050  00173C  5141               	movf	??_efgtoa& (0+255),w,b
 12051  00173E  2743               	addwf	(??_efgtoa+2)& (0+255),f,b
 12052  001740  5142               	movf	(??_efgtoa+1)& (0+255),w,b
 12053  001742  2344               	addwfc	(??_efgtoa+3)& (0+255),f,b
 12054  001744  5144               	movf	(??_efgtoa+3)& (0+255),w,b
 12055  001746  E116               	bnz	l13739
 12056  001748  0E1A               	movlw	26
 12057  00174A  5D43               	subwf	(??_efgtoa+2)& (0+255),w,b
 12058  00174C  B0D8               	btfsc	status,0,c
 12059  00174E  D012               	goto	l13739
 12060                           
 12061                           ; BSR set to: 1
 12062                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             str
      +                          cpy(&dbuf[n], "NAN");
 12063  001750  0E12               	movlw	low _dbuf
 12064  001752  2572               	addwf	efgtoa@n& (0+255),w,b
 12065  001754  0100               	movlb	0	; () banked
 12066  001756  6F8C               	movwf	strcpy@dest& (0+255),b
 12067  001758  0E03               	movlw	high _dbuf
 12068  00175A  0101               	movlb	1	; () banked
 12069  00175C  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12070  00175E  0100               	movlb	0	; () banked
 12071  001760  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 12072  001762  0EDC               	movlw	low STR_8
 12073  001764  6F8E               	movwf	strcpy@src& (0+255),b
 12074  001766  518E               	movf	strcpy@src& (0+255),w,b
 12075  001768  A4D8               	btfss	status,2,c
 12076  00176A  0E08               	movlw	high __smallconst
 12077  00176C  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 12078  00176E  ECD7  F03C         	call	_strcpy	;wreg free
 12079                           
 12080                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else 
      +                          {
 12081  001772  D011               	goto	l13741
 12082  001774                     l13739:
 12083                           
 12084                           ; BSR set to: 1
 12085                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             str
      +                          cpy(&dbuf[n], "nan");
 12086  001774  0E12               	movlw	low _dbuf
 12087  001776  2572               	addwf	efgtoa@n& (0+255),w,b
 12088  001778  0100               	movlb	0	; () banked
 12089  00177A  6F8C               	movwf	strcpy@dest& (0+255),b
 12090  00177C  0E03               	movlw	high _dbuf
 12091  00177E  0101               	movlb	1	; () banked
 12092  001780  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12093  001782  0100               	movlb	0	; () banked
 12094  001784  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 12095  001786  0EE4               	movlw	low STR_9
 12096  001788  6F8E               	movwf	strcpy@src& (0+255),b
 12097  00178A  518E               	movf	strcpy@src& (0+255),w,b
 12098  00178C  A4D8               	btfss	status,2,c
 12099  00178E  0E08               	movlw	high __smallconst
 12100  001790  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 12101  001792  ECD7  F03C         	call	_strcpy	;wreg free
 12102  001796                     l13741:
 12103                           
 12104                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 371:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 12105  001796  0101               	movlb	1	; () banked
 12106  001798  0EFD               	movlw	253
 12107  00179A  275E               	addwf	efgtoa@w& (0+255),f,b
 12108  00179C  0EFF               	movlw	255
 12109  00179E  235F               	addwfc	(efgtoa@w+1)& (0+255),f,b
 12110                           
 12111                           ; BSR set to: 1
 12112                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 372:         return 
      +                          pad(fp, &dbuf[0], w);
 12113  0017A0  C13A  F09C         	movff	efgtoa@fp,pad@fp
 12114  0017A4  C13B  F09D         	movff	efgtoa@fp+1,pad@fp+1
 12115  0017A8  0E12               	movlw	low _dbuf
 12116  0017AA  0100               	movlb	0	; () banked
 12117  0017AC  6F9E               	movwf	pad@buf& (0+255),b
 12118  0017AE  0E03               	movlw	high _dbuf
 12119  0017B0  6F9F               	movwf	(pad@buf+1)& (0+255),b
 12120  0017B2  C15E  F0A0         	movff	efgtoa@w,pad@p
 12121  0017B6  C15F  F0A1         	movff	efgtoa@w+1,pad@p+1
 12122  0017BA  ECB5  F038         	call	_pad	;wreg free
 12123  0017BE  C09C  F13A         	movff	?_pad,?_efgtoa
 12124  0017C2  C09D  F13B         	movff	?_pad+1,?_efgtoa+1
 12125  0017C6  0012               	return	
 12126  0017C8                     l13747:
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
 12130  0017C8  0E00               	movlw	0
 12131  0017CA  0101               	movlb	1	; () banked
 12132  0017CC  6F74               	movwf	efgtoa@u& (0+255),b
 12133  0017CE  0E00               	movlw	0
 12134  0017D0  6F75               	movwf	(efgtoa@u+1)& (0+255),b
 12135  0017D2  0E80               	movlw	128
 12136  0017D4  6F76               	movwf	(efgtoa@u+2)& (0+255),b
 12137  0017D6  0E3F               	movlw	63
 12138  0017D8  6F77               	movwf	(efgtoa@u+3)& (0+255),b
 12139                           
 12140                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
 12141  0017DA  0E00               	movlw	0
 12142  0017DC  6F71               	movwf	(efgtoa@e+1)& (0+255),b
 12143  0017DE  0E00               	movlw	0
 12144  0017E0  6F70               	movwf	efgtoa@e& (0+255),b
 12145                           
 12146                           ; BSR set to: 1
 12147                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 
      +                          0.0)) {
 12148  0017E2  C16C  F08C         	movff	efgtoa@g,___fleq@ff1
 12149  0017E6  C16D  F08D         	movff	efgtoa@g+1,___fleq@ff1+1
 12150  0017EA  C16E  F08E         	movff	efgtoa@g+2,___fleq@ff1+2
 12151  0017EE  C16F  F08F         	movff	efgtoa@g+3,___fleq@ff1+3
 12152  0017F2  0E00               	movlw	0
 12153  0017F4  0100               	movlb	0	; () banked
 12154  0017F6  6F90               	movwf	___fleq@ff2& (0+255),b
 12155  0017F8  0E00               	movlw	0
 12156  0017FA  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
 12157  0017FC  0E00               	movlw	0
 12158  0017FE  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
 12159  001800  0E00               	movlw	0
 12160  001802  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
 12161  001804  EC6E  F03A         	call	___fleq	;wreg free
 12162  001808  A0D8               	btfss	status,0,c
 12163  00180A  D01F               	goto	l13757
 12164  00180C  D077               	goto	u16300
 12165  00180E                     l13753:
 12166                           
 12167                           ; BSR set to: 1
 12168                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u =
      +                           u*10.0;
 12169  00180E  C174  F09A         	movff	efgtoa@u,___flmul@b
 12170  001812  C175  F09B         	movff	efgtoa@u+1,___flmul@b+1
 12171  001816  C176  F09C         	movff	efgtoa@u+2,___flmul@b+2
 12172  00181A  C177  F09D         	movff	efgtoa@u+3,___flmul@b+3
 12173  00181E  0E00               	movlw	0
 12174  001820  0100               	movlb	0	; () banked
 12175  001822  6F9E               	movwf	___flmul@a& (0+255),b
 12176  001824  0E00               	movlw	0
 12177  001826  6F9F               	movwf	(___flmul@a+1)& (0+255),b
 12178  001828  0E20               	movlw	32
 12179  00182A  6FA0               	movwf	(___flmul@a+2)& (0+255),b
 12180  00182C  0E41               	movlw	65
 12181  00182E  6FA1               	movwf	(___flmul@a+3)& (0+255),b
 12182  001830  ECD0  F012         	call	___flmul	;wreg free
 12183  001834  C09A  F174         	movff	?___flmul,efgtoa@u
 12184  001838  C09B  F175         	movff	?___flmul+1,efgtoa@u+1
 12185  00183C  C09C  F176         	movff	?___flmul+2,efgtoa@u+2
 12186  001840  C09D  F177         	movff	?___flmul+3,efgtoa@u+3
 12187                           
 12188                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e
      +                          ;
 12189  001844  0101               	movlb	1	; () banked
 12190  001846  4B70               	infsnz	efgtoa@e& (0+255),f,b
 12191  001848  2B71               	incf	(efgtoa@e+1)& (0+255),f,b
 12192  00184A                     l13757:
 12193                           
 12194                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (
      +                          !(g < (u*10.0))) {
 12195  00184A  C16C  F126         	movff	efgtoa@g,___flge@ff1
 12196  00184E  C16D  F127         	movff	efgtoa@g+1,___flge@ff1+1
 12197  001852  C16E  F128         	movff	efgtoa@g+2,___flge@ff1+2
 12198  001856  C16F  F129         	movff	efgtoa@g+3,___flge@ff1+3
 12199  00185A  0E00               	movlw	0
 12200  00185C  0100               	movlb	0	; () banked
 12201  00185E  6F9E               	movwf	___flmul@a& (0+255),b
 12202  001860  0E00               	movlw	0
 12203  001862  6F9F               	movwf	(___flmul@a+1)& (0+255),b
 12204  001864  0E20               	movlw	32
 12205  001866  6FA0               	movwf	(___flmul@a+2)& (0+255),b
 12206  001868  0E41               	movlw	65
 12207  00186A  6FA1               	movwf	(___flmul@a+3)& (0+255),b
 12208  00186C  C174  F09A         	movff	efgtoa@u,___flmul@b
 12209  001870  C175  F09B         	movff	efgtoa@u+1,___flmul@b+1
 12210  001874  C176  F09C         	movff	efgtoa@u+2,___flmul@b+2
 12211  001878  C177  F09D         	movff	efgtoa@u+3,___flmul@b+3
 12212  00187C  ECD0  F012         	call	___flmul	;wreg free
 12213  001880  C09A  F12A         	movff	?___flmul,___flge@ff2
 12214  001884  C09B  F12B         	movff	?___flmul+1,___flge@ff2+1
 12215  001888  C09C  F12C         	movff	?___flmul+2,___flge@ff2+2
 12216  00188C  C09D  F12D         	movff	?___flmul+3,___flge@ff2+3
 12217  001890  ECE4  F032         	call	___flge	;wreg free
 12218  001894  A0D8               	btfss	status,0,c
 12219  001896  D01E               	goto	l13763
 12220  001898  D7BA               	goto	l13753
 12221  00189A                     l13759:
 12222                           
 12223                           ; BSR set to: 1
 12224                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u =
      +                           u/10.0;
 12225  00189A  C174  F10D         	movff	efgtoa@u,___fldiv@b
 12226  00189E  C175  F10E         	movff	efgtoa@u+1,___fldiv@b+1
 12227  0018A2  C176  F10F         	movff	efgtoa@u+2,___fldiv@b+2
 12228  0018A6  C177  F110         	movff	efgtoa@u+3,___fldiv@b+3
 12229  0018AA  0E00               	movlw	0
 12230  0018AC  6F11               	movwf	___fldiv@a& (0+255),b
 12231  0018AE  0E00               	movlw	0
 12232  0018B0  6F12               	movwf	(___fldiv@a+1)& (0+255),b
 12233  0018B2  0E20               	movlw	32
 12234  0018B4  6F13               	movwf	(___fldiv@a+2)& (0+255),b
 12235  0018B6  0E41               	movlw	65
 12236  0018B8  6F14               	movwf	(___fldiv@a+3)& (0+255),b
 12237  0018BA  EC25  F01C         	call	___fldiv	;wreg free
 12238  0018BE  C10D  F174         	movff	?___fldiv,efgtoa@u
 12239  0018C2  C10E  F175         	movff	?___fldiv+1,efgtoa@u+1
 12240  0018C6  C10F  F176         	movff	?___fldiv+2,efgtoa@u+2
 12241  0018CA  C110  F177         	movff	?___fldiv+3,efgtoa@u+3
 12242                           
 12243                           ; BSR set to: 1
 12244                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e
      +                          ;
 12245  0018CE  0770               	decf	efgtoa@e& (0+255),f,b
 12246  0018D0  A0D8               	btfss	status,0,c
 12247  0018D2  0771               	decf	(efgtoa@e+1)& (0+255),f,b
 12248  0018D4                     l13763:
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (
      +                          g < u) {
 12252  0018D4  C16C  F126         	movff	efgtoa@g,___flge@ff1
 12253  0018D8  C16D  F127         	movff	efgtoa@g+1,___flge@ff1+1
 12254  0018DC  C16E  F128         	movff	efgtoa@g+2,___flge@ff1+2
 12255  0018E0  C16F  F129         	movff	efgtoa@g+3,___flge@ff1+3
 12256  0018E4  C174  F12A         	movff	efgtoa@u,___flge@ff2
 12257  0018E8  C175  F12B         	movff	efgtoa@u+1,___flge@ff2+1
 12258  0018EC  C176  F12C         	movff	efgtoa@u+2,___flge@ff2+2
 12259  0018F0  C177  F12D         	movff	efgtoa@u+3,___flge@ff2+3
 12260  0018F4  ECE4  F032         	call	___flge	;wreg free
 12261  0018F8  A0D8               	btfss	status,0,c
 12262  0018FA  D7CF               	goto	l13759
 12263  0018FC                     u16300:
 12264                           
 12265                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (cha
      +                          r)tolower((int)c);
 12266  0018FC  C140  F092         	movff	efgtoa@c,tolower@c
 12267  001900  0100               	movlb	0	; () banked
 12268  001902  6B93               	clrf	(tolower@c+1)& (0+255),b
 12269  001904  EC17  F03F         	call	_tolower	;wreg free
 12270  001908  5192               	movf	?_tolower& (0+255),w,b
 12271  00190A  0101               	movlb	1	; () banked
 12272  00190C  6F61               	movwf	efgtoa@mode& (0+255),b
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mod
      +                          e;
 12276  00190E  C161  F160         	movff	efgtoa@mode,efgtoa@nmode
 12277                           
 12278                           ; BSR set to: 1
 12279                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode ==
      +                           'g') {
 12280  001912  0E67               	movlw	103
 12281  001914  1961               	xorwf	efgtoa@mode& (0+255),w,b
 12282  001916  A4D8               	btfss	status,2,c
 12283  001918  D01B               	goto	l13779
 12284                           
 12285                           ; BSR set to: 1
 12286                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0
      +                          ) {
 12287  00191A  0100               	movlb	0	; () banked
 12288  00191C  51C2               	movf	_prec& (0+255),w,b
 12289  00191E  11C3               	iorwf	(_prec+1)& (0+255),w,b
 12290  001920  A4D8               	btfss	status,2,c
 12291  001922  D004               	goto	l13775
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
 12295  001924  0E00               	movlw	0
 12296  001926  6FC3               	movwf	(_prec+1)& (0+255),b
 12297  001928  0E01               	movlw	1
 12298  00192A  6FC2               	movwf	_prec& (0+255),b
 12299  00192C                     l13775:
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 
      +                          < prec) ? prec : 6;
 12303  00192C  BFC3               	btfsc	(_prec+1)& (0+255),7,b
 12304  00192E  D005               	goto	u16330
 12305  001930  51C3               	movf	(_prec+1)& (0+255),w,b
 12306  001932  E109               	bnz	l2229
 12307  001934  05C2               	decf	_prec& (0+255),w,b
 12308  001936  B0D8               	btfsc	status,0,c
 12309  001938  D006               	goto	l2229
 12310  00193A                     u16330:
 12311                           
 12312                           ; BSR set to: 0
 12313  00193A  0E00               	movlw	0
 12314  00193C  0101               	movlb	1	; () banked
 12315  00193E  6F5D               	movwf	(efgtoa@p+1)& (0+255),b
 12316  001940  0E06               	movlw	6
 12317  001942  6F5C               	movwf	efgtoa@p& (0+255),b
 12318  001944  D009               	goto	l13785
 12319  001946                     l2229:
 12320                           
 12321                           ; BSR set to: 0
 12322  001946  C0C2  F15C         	movff	_prec,efgtoa@p
 12323  00194A  C0C3  F15D         	movff	_prec+1,efgtoa@p+1
 12324  00194E  D004               	goto	l13785
 12325  001950                     l13779:
 12326                           
 12327                           ; BSR set to: 1
 12328                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (pr
      +                          ec < 0) ? 6 : prec;
 12329  001950  0100               	movlb	0	; () banked
 12330  001952  AFC3               	btfss	(_prec+1)& (0+255),7,b
 12331  001954  D7F8               	goto	l2229
 12332  001956  D7F1               	goto	u16330
 12333  001958                     l13785:
 12334                           
 12335                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode ==
      +                           'g') {
 12336  001958  0E67               	movlw	103
 12337  00195A  0101               	movlb	1	; () banked
 12338  00195C  1961               	xorwf	efgtoa@mode& (0+255),w,b
 12339  00195E  A4D8               	btfss	status,2,c
 12340  001960  D022               	goto	l13795
 12341                           
 12342                           ; BSR set to: 1
 12343                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
 12344  001962  AF71               	btfss	(efgtoa@e+1)& (0+255),7,b
 12345  001964  D006               	goto	u16360
 12346  001966  0EFC               	movlw	252
 12347  001968  5D70               	subwf	efgtoa@e& (0+255),w,b
 12348  00196A  0EFF               	movlw	255
 12349  00196C  5971               	subwfb	(efgtoa@e+1)& (0+255),w,b
 12350  00196E  A0D8               	btfss	status,0,c
 12351  001970  D018               	goto	l13793
 12352  001972                     u16360:
 12353                           
 12354                           ; BSR set to: 1
 12355  001972  0EFF               	movlw	255
 12356  001974  6F41               	movwf	??_efgtoa& (0+255),b
 12357  001976  0EFF               	movlw	255
 12358  001978  6F42               	movwf	(??_efgtoa+1)& (0+255),b
 12359  00197A  C15C  F143         	movff	efgtoa@p,??_efgtoa+2
 12360  00197E  C15D  F144         	movff	efgtoa@p+1,??_efgtoa+3
 12361  001982  5141               	movf	??_efgtoa& (0+255),w,b
 12362  001984  2743               	addwf	(??_efgtoa+2)& (0+255),f,b
 12363  001986  5142               	movf	(??_efgtoa+1)& (0+255),w,b
 12364  001988  2344               	addwfc	(??_efgtoa+3)& (0+255),f,b
 12365  00198A  5170               	movf	efgtoa@e& (0+255),w,b
 12366  00198C  5D43               	subwf	(??_efgtoa+2)& (0+255),w,b
 12367  00198E  5144               	movf	(??_efgtoa+3)& (0+255),w,b
 12368  001990  0A80               	xorlw	128
 12369  001992  6F45               	movwf	(??_efgtoa+4)& (0+255),b
 12370  001994  5171               	movf	(efgtoa@e+1)& (0+255),w,b
 12371  001996  0A80               	xorlw	128
 12372  001998  5945               	subwfb	(??_efgtoa+4)& (0+255),w,b
 12373  00199A  A0D8               	btfss	status,0,c
 12374  00199C  D002               	goto	l13793
 12375                           
 12376                           ; BSR set to: 1
 12377                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmo
      +                          de = 'f';
 12378  00199E  0E66               	movlw	102
 12379  0019A0  D001               	goto	L9
 12380  0019A2                     l13793:
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmo
      +                          de = 'e';
 12384  0019A2  0E65               	movlw	101
 12385  0019A4                     L9:
 12386  0019A4  6F60               	movwf	efgtoa@nmode& (0+255),b
 12387  0019A6                     l13795:
 12388                           
 12389                           ; BSR set to: 1
 12390                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
 12391  0019A6  C15C  F152         	movff	efgtoa@p,efgtoa@m
 12392  0019AA  C15D  F153         	movff	efgtoa@p+1,efgtoa@m+1
 12393                           
 12394                           ; BSR set to: 1
 12395                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
 12396  0019AE  0E67               	movlw	103
 12397  0019B0  1961               	xorwf	efgtoa@mode& (0+255),w,b
 12398  0019B2  A4D8               	btfss	status,2,c
 12399  0019B4  D005               	goto	u16400
 12400                           
 12401                           ; BSR set to: 1
 12402  0019B6  0E66               	movlw	102
 12403  0019B8  1960               	xorwf	efgtoa@nmode& (0+255),w,b
 12404  0019BA  B4D8               	btfsc	status,2,c
 12405                           
 12406                           ; BSR set to: 1
 12407  0019BC  AF71               	btfss	(efgtoa@e+1)& (0+255),7,b
 12408  0019BE  D002               	goto	l13805
 12409  0019C0                     u16400:
 12410                           
 12411                           ; BSR set to: 1
 12412                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
 12413  0019C0  4B52               	infsnz	efgtoa@m& (0+255),f,b
 12414  0019C2  2B53               	incf	(efgtoa@m+1)& (0+255),f,b
 12415  0019C4                     l13805:
 12416                           
 12417                           ; BSR set to: 1
 12418                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode =
      +                          = 'f') {
 12419  0019C4  0E66               	movlw	102
 12420  0019C6  1960               	xorwf	efgtoa@nmode& (0+255),w,b
 12421  0019C8  A4D8               	btfss	status,2,c
 12422  0019CA  D016               	goto	l13815
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e <
      +                           0) {
 12426  0019CC  AF71               	btfss	(efgtoa@e+1)& (0+255),7,b
 12427  0019CE  D00C               	goto	l13811
 12428                           
 12429                           ; BSR set to: 1
 12430                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u =
      +                           1.0;
 12431  0019D0  0E00               	movlw	0
 12432  0019D2  6F74               	movwf	efgtoa@u& (0+255),b
 12433  0019D4  0E00               	movlw	0
 12434  0019D6  6F75               	movwf	(efgtoa@u+1)& (0+255),b
 12435  0019D8  0E80               	movlw	128
 12436  0019DA  6F76               	movwf	(efgtoa@u+2)& (0+255),b
 12437  0019DC  0E3F               	movlw	63
 12438  0019DE  6F77               	movwf	(efgtoa@u+3)& (0+255),b
 12439                           
 12440                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e =
      +                           0;
 12441  0019E0  0E00               	movlw	0
 12442  0019E2  6F71               	movwf	(efgtoa@e+1)& (0+255),b
 12443  0019E4  0E00               	movlw	0
 12444  0019E6  6F70               	movwf	efgtoa@e& (0+255),b
 12445  0019E8                     l13811:
 12446                           
 12447                           ; BSR set to: 1
 12448                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(m
      +                          ode == 'g')) {
 12449  0019E8  0E67               	movlw	103
 12450  0019EA  1961               	xorwf	efgtoa@mode& (0+255),w,b
 12451  0019EC  B4D8               	btfsc	status,2,c
 12452  0019EE  D004               	goto	l13815
 12453                           
 12454                           ; BSR set to: 1
 12455                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m +
      +                          = e;
 12456  0019F0  5170               	movf	efgtoa@e& (0+255),w,b
 12457  0019F2  2752               	addwf	efgtoa@m& (0+255),f,b
 12458  0019F4  5171               	movf	(efgtoa@e+1)& (0+255),w,b
 12459  0019F6  2353               	addwfc	(efgtoa@m+1)& (0+255),f,b
 12460  0019F8                     l13815:
 12461                           
 12462                           ; BSR set to: 1
 12463                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
 12464  0019F8  0E00               	movlw	0
 12465  0019FA  6F6B               	movwf	(efgtoa@i+1)& (0+255),b
 12466  0019FC  0E00               	movlw	0
 12467  0019FE  6F6A               	movwf	efgtoa@i& (0+255),b
 12468                           
 12469                           ; BSR set to: 1
 12470                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
 12471  001A00  C16C  F162         	movff	efgtoa@g,efgtoa@h
 12472  001A04  C16D  F163         	movff	efgtoa@g+1,efgtoa@h+1
 12473  001A08  C16E  F164         	movff	efgtoa@g+2,efgtoa@h+2
 12474  001A0C  C16F  F165         	movff	efgtoa@g+3,efgtoa@h+3
 12475                           
 12476                           ; BSR set to: 1
 12477                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
 12478  001A10  C174  F154         	movff	efgtoa@u,efgtoa@ou
 12479  001A14  C175  F155         	movff	efgtoa@u+1,efgtoa@ou+1
 12480  001A18  C176  F156         	movff	efgtoa@u+2,efgtoa@ou+2
 12481  001A1C  C177  F157         	movff	efgtoa@u+3,efgtoa@ou+3
 12482                           
 12483                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
 12484  001A20  D07B               	goto	l13829
 12485  001A22                     l13821:
 12486                           
 12487                           ; BSR set to: 1
 12488                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = flo
      +                          orf(h/u);
 12489  001A22  C162  F10D         	movff	efgtoa@h,___fldiv@b
 12490  001A26  C163  F10E         	movff	efgtoa@h+1,___fldiv@b+1
 12491  001A2A  C164  F10F         	movff	efgtoa@h+2,___fldiv@b+2
 12492  001A2E  C165  F110         	movff	efgtoa@h+3,___fldiv@b+3
 12493  001A32  C174  F111         	movff	efgtoa@u,___fldiv@a
 12494  001A36  C175  F112         	movff	efgtoa@u+1,___fldiv@a+1
 12495  001A3A  C176  F113         	movff	efgtoa@u+2,___fldiv@a+2
 12496  001A3E  C177  F114         	movff	efgtoa@u+3,___fldiv@a+3
 12497  001A42  EC25  F01C         	call	___fldiv	;wreg free
 12498  001A46  C10D  F126         	movff	?___fldiv,floorf@x
 12499  001A4A  C10E  F127         	movff	?___fldiv+1,floorf@x+1
 12500  001A4E  C10F  F128         	movff	?___fldiv+2,floorf@x+2
 12501  001A52  C110  F129         	movff	?___fldiv+3,floorf@x+3
 12502  001A56  EC89  F025         	call	_floorf	;wreg free
 12503  001A5A  C126  F166         	movff	?_floorf,efgtoa@l
 12504  001A5E  C127  F167         	movff	?_floorf+1,efgtoa@l+1
 12505  001A62  C128  F168         	movff	?_floorf+2,efgtoa@l+2
 12506  001A66  C129  F169         	movff	?_floorf+3,efgtoa@l+3
 12507                           
 12508                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (in
      +                          t)l;
 12509  001A6A  C166  F126         	movff	efgtoa@l,___fltol@f1
 12510  001A6E  C167  F127         	movff	efgtoa@l+1,___fltol@f1+1
 12511  001A72  C168  F128         	movff	efgtoa@l+2,___fltol@f1+2
 12512  001A76  C169  F129         	movff	efgtoa@l+3,___fltol@f1+3
 12513  001A7A  EC7B  F032         	call	___fltol	;wreg free
 12514  001A7E  C126  F158         	movff	?___fltol,efgtoa@d
 12515  001A82  C127  F159         	movff	?___fltol+1,efgtoa@d+1
 12516                           
 12517                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*
      +                          u;
 12518  001A86  C162  F10D         	movff	efgtoa@h,___flsub@b
 12519  001A8A  C163  F10E         	movff	efgtoa@h+1,___flsub@b+1
 12520  001A8E  C164  F10F         	movff	efgtoa@h+2,___flsub@b+2
 12521  001A92  C165  F110         	movff	efgtoa@h+3,___flsub@b+3
 12522  001A96  C174  F09E         	movff	efgtoa@u,___flmul@a
 12523  001A9A  C175  F09F         	movff	efgtoa@u+1,___flmul@a+1
 12524  001A9E  C176  F0A0         	movff	efgtoa@u+2,___flmul@a+2
 12525  001AA2  C177  F0A1         	movff	efgtoa@u+3,___flmul@a+3
 12526  001AA6  C166  F09A         	movff	efgtoa@l,___flmul@b
 12527  001AAA  C167  F09B         	movff	efgtoa@l+1,___flmul@b+1
 12528  001AAE  C168  F09C         	movff	efgtoa@l+2,___flmul@b+2
 12529  001AB2  C169  F09D         	movff	efgtoa@l+3,___flmul@b+3
 12530  001AB6  ECD0  F012         	call	___flmul	;wreg free
 12531  001ABA  C09A  F111         	movff	?___flmul,___flsub@a
 12532  001ABE  C09B  F112         	movff	?___flmul+1,___flsub@a+1
 12533  001AC2  C09C  F113         	movff	?___flmul+2,___flsub@a+2
 12534  001AC6  C09D  F114         	movff	?___flmul+3,___flsub@a+3
 12535  001ACA  ECEC  F03D         	call	___flsub	;wreg free
 12536  001ACE  C10D  F162         	movff	?___flsub,efgtoa@h
 12537  001AD2  C10E  F163         	movff	?___flsub+1,efgtoa@h+1
 12538  001AD6  C10F  F164         	movff	?___flsub+2,efgtoa@h+2
 12539  001ADA  C110  F165         	movff	?___flsub+3,efgtoa@h+3
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/1
      +                          0.0;
 12543  001ADE  C174  F10D         	movff	efgtoa@u,___fldiv@b
 12544  001AE2  C175  F10E         	movff	efgtoa@u+1,___fldiv@b+1
 12545  001AE6  C176  F10F         	movff	efgtoa@u+2,___fldiv@b+2
 12546  001AEA  C177  F110         	movff	efgtoa@u+3,___fldiv@b+3
 12547  001AEE  0E00               	movlw	0
 12548  001AF0  0101               	movlb	1	; () banked
 12549  001AF2  6F11               	movwf	___fldiv@a& (0+255),b
 12550  001AF4  0E00               	movlw	0
 12551  001AF6  6F12               	movwf	(___fldiv@a+1)& (0+255),b
 12552  001AF8  0E20               	movlw	32
 12553  001AFA  6F13               	movwf	(___fldiv@a+2)& (0+255),b
 12554  001AFC  0E41               	movlw	65
 12555  001AFE  6F14               	movwf	(___fldiv@a+3)& (0+255),b
 12556  001B00  EC25  F01C         	call	___fldiv	;wreg free
 12557  001B04  C10D  F174         	movff	?___fldiv,efgtoa@u
 12558  001B08  C10E  F175         	movff	?___fldiv+1,efgtoa@u+1
 12559  001B0C  C10F  F176         	movff	?___fldiv+2,efgtoa@u+2
 12560  001B10  C110  F177         	movff	?___fldiv+3,efgtoa@u+3
 12561                           
 12562                           ; BSR set to: 1
 12563                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
 12564  001B14  4B6A               	infsnz	efgtoa@i& (0+255),f,b
 12565  001B16  2B6B               	incf	(efgtoa@i+1)& (0+255),f,b
 12566  001B18                     l13829:
 12567                           
 12568                           ; BSR set to: 1
 12569                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
 12570  001B18  5152               	movf	efgtoa@m& (0+255),w,b
 12571  001B1A  5D6A               	subwf	efgtoa@i& (0+255),w,b
 12572  001B1C  516B               	movf	(efgtoa@i+1)& (0+255),w,b
 12573  001B1E  0A80               	xorlw	128
 12574  001B20  6F41               	movwf	??_efgtoa& (0+255),b
 12575  001B22  5153               	movf	(efgtoa@m+1)& (0+255),w,b
 12576  001B24  0A80               	xorlw	128
 12577  001B26  5941               	subwfb	??_efgtoa& (0+255),w,b
 12578  001B28  A0D8               	btfss	status,0,c
 12579  001B2A  D77B               	goto	l13821
 12580                           
 12581                           ; BSR set to: 1
 12582                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
 12583  001B2C  C174  F09A         	movff	efgtoa@u,___flmul@b
 12584  001B30  C175  F09B         	movff	efgtoa@u+1,___flmul@b+1
 12585  001B34  C176  F09C         	movff	efgtoa@u+2,___flmul@b+2
 12586  001B38  C177  F09D         	movff	efgtoa@u+3,___flmul@b+3
 12587  001B3C  0E00               	movlw	0
 12588  001B3E  0100               	movlb	0	; () banked
 12589  001B40  6F9E               	movwf	___flmul@a& (0+255),b
 12590  001B42  0E00               	movlw	0
 12591  001B44  6F9F               	movwf	(___flmul@a+1)& (0+255),b
 12592  001B46  0EA0               	movlw	160
 12593  001B48  6FA0               	movwf	(___flmul@a+2)& (0+255),b
 12594  001B4A  0E40               	movlw	64
 12595  001B4C  6FA1               	movwf	(___flmul@a+3)& (0+255),b
 12596  001B4E  ECD0  F012         	call	___flmul	;wreg free
 12597  001B52  C09A  F166         	movff	?___flmul,efgtoa@l
 12598  001B56  C09B  F167         	movff	?___flmul+1,efgtoa@l+1
 12599  001B5A  C09C  F168         	movff	?___flmul+2,efgtoa@l+2
 12600  001B5E  C09D  F169         	movff	?___flmul+3,efgtoa@l+3
 12601                           
 12602                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) 
      +                          {
 12603  001B62  C162  F126         	movff	efgtoa@h,___flge@ff1
 12604  001B66  C163  F127         	movff	efgtoa@h+1,___flge@ff1+1
 12605  001B6A  C164  F128         	movff	efgtoa@h+2,___flge@ff1+2
 12606  001B6E  C165  F129         	movff	efgtoa@h+3,___flge@ff1+3
 12607  001B72  C166  F12A         	movff	efgtoa@l,___flge@ff2
 12608  001B76  C167  F12B         	movff	efgtoa@l+1,___flge@ff2+1
 12609  001B7A  C168  F12C         	movff	efgtoa@l+2,___flge@ff2+2
 12610  001B7E  C169  F12D         	movff	efgtoa@l+3,___flge@ff2+3
 12611  001B82  ECE4  F032         	call	___flge	;wreg free
 12612  001B86  A0D8               	btfss	status,0,c
 12613  001B88  D017               	goto	u16470
 12614                           
 12615                           ; BSR set to: 1
 12616                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h 
      +                          == l) && !(d % 2)) {
 12617                           
 12618                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
 12619                           
 12620                           ; BSR set to: 1
 12621                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0
      +                          ;
 12622  001B8A  C162  F08C         	movff	efgtoa@h,___fleq@ff1
 12623  001B8E  C163  F08D         	movff	efgtoa@h+1,___fleq@ff1+1
 12624  001B92  C164  F08E         	movff	efgtoa@h+2,___fleq@ff1+2
 12625  001B96  C165  F08F         	movff	efgtoa@h+3,___fleq@ff1+3
 12626  001B9A  C166  F090         	movff	efgtoa@l,___fleq@ff2
 12627  001B9E  C167  F091         	movff	efgtoa@l+1,___fleq@ff2+1
 12628  001BA2  C168  F092         	movff	efgtoa@l+2,___fleq@ff2+2
 12629  001BA6  C169  F093         	movff	efgtoa@l+3,___fleq@ff2+3
 12630  001BAA  EC6E  F03A         	call	___fleq	;wreg free
 12631  001BAE  A0D8               	btfss	status,0,c
 12632  001BB0  D00B               	goto	l13843
 12633                           
 12634                           ; BSR set to: 0
 12635  001BB2  0101               	movlb	1	; () banked
 12636  001BB4  B158               	btfsc	efgtoa@d& (0+255),0,b
 12637  001BB6  D008               	goto	l13843
 12638  001BB8                     u16470:
 12639                           
 12640                           ; BSR set to: 1
 12641                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l =
      +                           0.0;
 12642  001BB8  0E00               	movlw	0
 12643  001BBA  6F66               	movwf	efgtoa@l& (0+255),b
 12644  001BBC  0E00               	movlw	0
 12645  001BBE  6F67               	movwf	(efgtoa@l+1)& (0+255),b
 12646  001BC0  0E00               	movlw	0
 12647  001BC2  6F68               	movwf	(efgtoa@l+2)& (0+255),b
 12648  001BC4  0E00               	movlw	0
 12649  001BC6  6F69               	movwf	(efgtoa@l+3)& (0+255),b
 12650  001BC8                     l13843:
 12651                           
 12652                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
 12653  001BC8  C16C  F08C         	movff	efgtoa@g,___fladd@b
 12654  001BCC  C16D  F08D         	movff	efgtoa@g+1,___fladd@b+1
 12655  001BD0  C16E  F08E         	movff	efgtoa@g+2,___fladd@b+2
 12656  001BD4  C16F  F08F         	movff	efgtoa@g+3,___fladd@b+3
 12657  001BD8  C166  F090         	movff	efgtoa@l,___fladd@a
 12658  001BDC  C167  F091         	movff	efgtoa@l+1,___fladd@a+1
 12659  001BE0  C168  F092         	movff	efgtoa@l+2,___fladd@a+2
 12660  001BE4  C169  F093         	movff	efgtoa@l+3,___fladd@a+3
 12661  001BE8  EC3E  F016         	call	___fladd	;wreg free
 12662  001BEC  C08C  F162         	movff	?___fladd,efgtoa@h
 12663  001BF0  C08D  F163         	movff	?___fladd+1,efgtoa@h+1
 12664  001BF4  C08E  F164         	movff	?___fladd+2,efgtoa@h+2
 12665  001BF8  C08F  F165         	movff	?___fladd+3,efgtoa@h+3
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*1
      +                          0.0)) {
 12669  001BFC  C162  F126         	movff	efgtoa@h,___flge@ff1
 12670  001C00  C163  F127         	movff	efgtoa@h+1,___flge@ff1+1
 12671  001C04  C164  F128         	movff	efgtoa@h+2,___flge@ff1+2
 12672  001C08  C165  F129         	movff	efgtoa@h+3,___flge@ff1+3
 12673  001C0C  0E00               	movlw	0
 12674  001C0E  6F9E               	movwf	___flmul@a& (0+255),b
 12675  001C10  0E00               	movlw	0
 12676  001C12  6F9F               	movwf	(___flmul@a+1)& (0+255),b
 12677  001C14  0E20               	movlw	32
 12678  001C16  6FA0               	movwf	(___flmul@a+2)& (0+255),b
 12679  001C18  0E41               	movlw	65
 12680  001C1A  6FA1               	movwf	(___flmul@a+3)& (0+255),b
 12681  001C1C  C154  F09A         	movff	efgtoa@ou,___flmul@b
 12682  001C20  C155  F09B         	movff	efgtoa@ou+1,___flmul@b+1
 12683  001C24  C156  F09C         	movff	efgtoa@ou+2,___flmul@b+2
 12684  001C28  C157  F09D         	movff	efgtoa@ou+3,___flmul@b+3
 12685  001C2C  ECD0  F012         	call	___flmul	;wreg free
 12686  001C30  C09A  F12A         	movff	?___flmul,___flge@ff2
 12687  001C34  C09B  F12B         	movff	?___flmul+1,___flge@ff2+1
 12688  001C38  C09C  F12C         	movff	?___flmul+2,___flge@ff2+2
 12689  001C3C  C09D  F12D         	movff	?___flmul+3,___flge@ff2+3
 12690  001C40  ECE4  F032         	call	___flge	;wreg free
 12691  001C44  A0D8               	btfss	status,0,c
 12692  001C46  D024               	goto	l13855
 12693                           
 12694                           ; BSR set to: 1
 12695                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
 12696  001C48  4B70               	infsnz	efgtoa@e& (0+255),f,b
 12697  001C4A  2B71               	incf	(efgtoa@e+1)& (0+255),f,b
 12698                           
 12699                           ; BSR set to: 1
 12700                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
 12701  001C4C  C154  F09A         	movff	efgtoa@ou,___flmul@b
 12702  001C50  C155  F09B         	movff	efgtoa@ou+1,___flmul@b+1
 12703  001C54  C156  F09C         	movff	efgtoa@ou+2,___flmul@b+2
 12704  001C58  C157  F09D         	movff	efgtoa@ou+3,___flmul@b+3
 12705  001C5C  0E00               	movlw	0
 12706  001C5E  0100               	movlb	0	; () banked
 12707  001C60  6F9E               	movwf	___flmul@a& (0+255),b
 12708  001C62  0E00               	movlw	0
 12709  001C64  6F9F               	movwf	(___flmul@a+1)& (0+255),b
 12710  001C66  0E20               	movlw	32
 12711  001C68  6FA0               	movwf	(___flmul@a+2)& (0+255),b
 12712  001C6A  0E41               	movlw	65
 12713  001C6C  6FA1               	movwf	(___flmul@a+3)& (0+255),b
 12714  001C6E  ECD0  F012         	call	___flmul	;wreg free
 12715  001C72  C09A  F154         	movff	?___flmul,efgtoa@ou
 12716  001C76  C09B  F155         	movff	?___flmul+1,efgtoa@ou+1
 12717  001C7A  C09C  F156         	movff	?___flmul+2,efgtoa@ou+2
 12718  001C7E  C09D  F157         	movff	?___flmul+3,efgtoa@ou+3
 12719                           
 12720                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 
      +                          'f') {
 12721  001C82  0E66               	movlw	102
 12722  001C84  0101               	movlb	1	; () banked
 12723  001C86  1960               	xorwf	efgtoa@nmode& (0+255),w,b
 12724  001C88  A4D8               	btfss	status,2,c
 12725  001C8A  D002               	goto	l13855
 12726                           
 12727                           ; BSR set to: 1
 12728                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
 12729  001C8C  4B52               	infsnz	efgtoa@m& (0+255),f,b
 12730  001C8E  2B53               	incf	(efgtoa@m+1)& (0+255),f,b
 12731  001C90                     l13855:
 12732                           
 12733                           ; BSR set to: 1
 12734                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
 12735  001C90  C154  F174         	movff	efgtoa@ou,efgtoa@u
 12736  001C94  C155  F175         	movff	efgtoa@ou+1,efgtoa@u+1
 12737  001C98  C156  F176         	movff	efgtoa@ou+2,efgtoa@u+2
 12738  001C9C  C157  F177         	movff	efgtoa@ou+3,efgtoa@u+3
 12739                           
 12740                           ; BSR set to: 1
 12741                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode
      +                           == 'e') ? 0 : e;
 12742  001CA0  0E65               	movlw	101
 12743  001CA2  1960               	xorwf	efgtoa@nmode& (0+255),w,b
 12744  001CA4  B4D8               	btfsc	status,2,c
 12745  001CA6  D005               	goto	l13861
 12746                           
 12747                           ; BSR set to: 1
 12748  001CA8  C170  F150         	movff	efgtoa@e,efgtoa@ne
 12749  001CAC  C171  F151         	movff	efgtoa@e+1,efgtoa@ne+1
 12750  001CB0  D004               	goto	l2257
 12751  001CB2                     l13861:
 12752                           
 12753                           ; BSR set to: 1
 12754  001CB2  0E00               	movlw	0
 12755  001CB4  6F51               	movwf	(efgtoa@ne+1)& (0+255),b
 12756  001CB6  0E00               	movlw	0
 12757  001CB8  6F50               	movwf	efgtoa@ne& (0+255),b
 12758  001CBA                     l2257:
 12759                           
 12760                           ; BSR set to: 1
 12761                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
 12762  001CBA  0E00               	movlw	0
 12763  001CBC  6F4F               	movwf	(efgtoa@pp+1)& (0+255),b
 12764  001CBE  0E00               	movlw	0
 12765  001CC0  6F4E               	movwf	efgtoa@pp& (0+255),b
 12766                           
 12767                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
 12768  001CC2  0E00               	movlw	0
 12769  001CC4  6F4D               	movwf	(efgtoa@t+1)& (0+255),b
 12770  001CC6  0E00               	movlw	0
 12771  001CC8  6F4C               	movwf	efgtoa@t& (0+255),b
 12772                           
 12773                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
 12774  001CCA  0E00               	movlw	0
 12775  001CCC  6F6B               	movwf	(efgtoa@i+1)& (0+255),b
 12776  001CCE  0E00               	movlw	0
 12777  001CD0  6F6A               	movwf	efgtoa@i& (0+255),b
 12778                           
 12779                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
 12780  001CD2  D0C8               	goto	l13911
 12781  001CD4                     l13863:
 12782                           
 12783                           ; BSR set to: 1
 12784                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = flo
      +                          orf(h/u);
 12785  001CD4  C162  F10D         	movff	efgtoa@h,___fldiv@b
 12786  001CD8  C163  F10E         	movff	efgtoa@h+1,___fldiv@b+1
 12787  001CDC  C164  F10F         	movff	efgtoa@h+2,___fldiv@b+2
 12788  001CE0  C165  F110         	movff	efgtoa@h+3,___fldiv@b+3
 12789  001CE4  C174  F111         	movff	efgtoa@u,___fldiv@a
 12790  001CE8  C175  F112         	movff	efgtoa@u+1,___fldiv@a+1
 12791  001CEC  C176  F113         	movff	efgtoa@u+2,___fldiv@a+2
 12792  001CF0  C177  F114         	movff	efgtoa@u+3,___fldiv@a+3
 12793  001CF4  EC25  F01C         	call	___fldiv	;wreg free
 12794  001CF8  C10D  F126         	movff	?___fldiv,floorf@x
 12795  001CFC  C10E  F127         	movff	?___fldiv+1,floorf@x+1
 12796  001D00  C10F  F128         	movff	?___fldiv+2,floorf@x+2
 12797  001D04  C110  F129         	movff	?___fldiv+3,floorf@x+3
 12798  001D08  EC89  F025         	call	_floorf	;wreg free
 12799  001D0C  C126  F166         	movff	?_floorf,efgtoa@l
 12800  001D10  C127  F167         	movff	?_floorf+1,efgtoa@l+1
 12801  001D14  C128  F168         	movff	?_floorf+2,efgtoa@l+2
 12802  001D18  C129  F169         	movff	?_floorf+3,efgtoa@l+3
 12803                           
 12804                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (in
      +                          t)l;
 12805  001D1C  C166  F126         	movff	efgtoa@l,___fltol@f1
 12806  001D20  C167  F127         	movff	efgtoa@l+1,___fltol@f1+1
 12807  001D24  C168  F128         	movff	efgtoa@l+2,___fltol@f1+2
 12808  001D28  C169  F129         	movff	efgtoa@l+3,___fltol@f1+3
 12809  001D2C  EC7B  F032         	call	___fltol	;wreg free
 12810  001D30  C126  F158         	movff	?___fltol,efgtoa@d
 12811  001D34  C127  F159         	movff	?___fltol+1,efgtoa@d+1
 12812                           
 12813                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12814  001D38  0100               	movlb	0	; () banked
 12815  001D3A  B9C4               	btfsc	_flags& (0+255),4,b
 12816  001D3C  D00D               	goto	l13875
 12817                           
 12818                           ; BSR set to: 0
 12819  001D3E  0101               	movlb	1	; () banked
 12820  001D40  5158               	movf	efgtoa@d& (0+255),w,b
 12821  001D42  1159               	iorwf	(efgtoa@d+1)& (0+255),w,b
 12822  001D44  A4D8               	btfss	status,2,c
 12823  001D46  D008               	goto	l13875
 12824                           
 12825                           ; BSR set to: 1
 12826  001D48  0E67               	movlw	103
 12827  001D4A  1961               	xorwf	efgtoa@mode& (0+255),w,b
 12828  001D4C  B4D8               	btfsc	status,2,c
 12829                           
 12830                           ; BSR set to: 1
 12831  001D4E  AF51               	btfss	(efgtoa@ne+1)& (0+255),7,b
 12832  001D50  D003               	goto	l13875
 12833                           
 12834                           ; BSR set to: 1
 12835                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t
      +                          ;
 12836  001D52  4B4C               	infsnz	efgtoa@t& (0+255),f,b
 12837  001D54  2B4D               	incf	(efgtoa@t+1)& (0+255),f,b
 12838                           
 12839                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else 
      +                          {
 12840  001D56  D03A               	goto	l13903
 12841  001D58                     l13875:
 12842                           
 12843                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if 
      +                          (!pp && (ne < 0)) {
 12844  001D58  0101               	movlb	1	; () banked
 12845  001D5A  514E               	movf	efgtoa@pp& (0+255),w,b
 12846  001D5C  114F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 12847  001D5E  B4D8               	btfsc	status,2,c
 12848                           
 12849                           ; BSR set to: 1
 12850  001D60  AF51               	btfss	(efgtoa@ne+1)& (0+255),7,b
 12851  001D62  D022               	goto	l13895
 12852                           
 12853                           ; BSR set to: 1
 12854                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                
      +                           dbuf[n++] = '.';
 12855  001D64  0E12               	movlw	low _dbuf
 12856  001D66  2572               	addwf	efgtoa@n& (0+255),w,b
 12857  001D68  6ED9               	movwf	fsr2l,c
 12858  001D6A  0E03               	movlw	high _dbuf
 12859  001D6C  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12860  001D6E  6EDA               	movwf	fsr2h,c
 12861  001D70  0E2E               	movlw	46
 12862  001D72  6EDF               	movwf	indf2,c
 12863                           
 12864                           ; BSR set to: 1
 12865  001D74  4B72               	infsnz	efgtoa@n& (0+255),f,b
 12866  001D76  2B73               	incf	(efgtoa@n+1)& (0+255),f,b
 12867                           
 12868                           ; BSR set to: 1
 12869                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                
      +                           --w;
 12870  001D78  075E               	decf	efgtoa@w& (0+255),f,b
 12871  001D7A  A0D8               	btfss	status,0,c
 12872  001D7C  075F               	decf	(efgtoa@w+1)& (0+255),f,b
 12873                           
 12874                           ; BSR set to: 1
 12875                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                
      +                           pp = 1;
 12876  001D7E  0E00               	movlw	0
 12877  001D80  6F4F               	movwf	(efgtoa@pp+1)& (0+255),b
 12878  001D82  0E01               	movlw	1
 12879  001D84  6F4E               	movwf	efgtoa@pp& (0+255),b
 12880  001D86  D010               	goto	l13895
 12881  001D88                     l13887:
 12882                           
 12883                           ; BSR set to: 1
 12884                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                
      +                           dbuf[n++] = '0';
 12885  001D88  0E12               	movlw	low _dbuf
 12886  001D8A  2572               	addwf	efgtoa@n& (0+255),w,b
 12887  001D8C  6ED9               	movwf	fsr2l,c
 12888  001D8E  0E03               	movlw	high _dbuf
 12889  001D90  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12890  001D92  6EDA               	movwf	fsr2h,c
 12891  001D94  0E30               	movlw	48
 12892  001D96  6EDF               	movwf	indf2,c
 12893                           
 12894                           ; BSR set to: 1
 12895  001D98  4B72               	infsnz	efgtoa@n& (0+255),f,b
 12896  001D9A  2B73               	incf	(efgtoa@n+1)& (0+255),f,b
 12897                           
 12898                           ; BSR set to: 1
 12899                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                
      +                           --w;
 12900  001D9C  075E               	decf	efgtoa@w& (0+255),f,b
 12901  001D9E  A0D8               	btfss	status,0,c
 12902  001DA0  075F               	decf	(efgtoa@w+1)& (0+255),f,b
 12903                           
 12904                           ; BSR set to: 1
 12905                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                
      +                           --t;
 12906  001DA2  074C               	decf	efgtoa@t& (0+255),f,b
 12907  001DA4  A0D8               	btfss	status,0,c
 12908  001DA6  074D               	decf	(efgtoa@t+1)& (0+255),f,b
 12909  001DA8                     l13895:
 12910                           
 12911                           ; BSR set to: 1
 12912                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             whi
      +                          le (t) {
 12913  001DA8  514C               	movf	efgtoa@t& (0+255),w,b
 12914  001DAA  114D               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12915  001DAC  A4D8               	btfss	status,2,c
 12916  001DAE  D7EC               	goto	l13887
 12917                           
 12918                           ; BSR set to: 1
 12919                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbu
      +                          f[n++] = (char)((int)'0' + d);
 12920  001DB0  0E12               	movlw	low _dbuf
 12921  001DB2  2572               	addwf	efgtoa@n& (0+255),w,b
 12922  001DB4  6ED9               	movwf	fsr2l,c
 12923  001DB6  0E03               	movlw	high _dbuf
 12924  001DB8  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12925  001DBA  6EDA               	movwf	fsr2h,c
 12926  001DBC  5158               	movf	efgtoa@d& (0+255),w,b
 12927  001DBE  0F30               	addlw	48
 12928  001DC0  6EDF               	movwf	indf2,c
 12929                           
 12930                           ; BSR set to: 1
 12931  001DC2  4B72               	infsnz	efgtoa@n& (0+255),f,b
 12932  001DC4  2B73               	incf	(efgtoa@n+1)& (0+255),f,b
 12933                           
 12934                           ; BSR set to: 1
 12935                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w
      +                          ;
 12936  001DC6  075E               	decf	efgtoa@w& (0+255),f,b
 12937  001DC8  A0D8               	btfss	status,0,c
 12938  001DCA  075F               	decf	(efgtoa@w+1)& (0+255),f,b
 12939  001DCC                     l13903:
 12940                           
 12941                           ; BSR set to: 1
 12942                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*
      +                          u;
 12943  001DCC  C162  F10D         	movff	efgtoa@h,___flsub@b
 12944  001DD0  C163  F10E         	movff	efgtoa@h+1,___flsub@b+1
 12945  001DD4  C164  F10F         	movff	efgtoa@h+2,___flsub@b+2
 12946  001DD8  C165  F110         	movff	efgtoa@h+3,___flsub@b+3
 12947  001DDC  C174  F09E         	movff	efgtoa@u,___flmul@a
 12948  001DE0  C175  F09F         	movff	efgtoa@u+1,___flmul@a+1
 12949  001DE4  C176  F0A0         	movff	efgtoa@u+2,___flmul@a+2
 12950  001DE8  C177  F0A1         	movff	efgtoa@u+3,___flmul@a+3
 12951  001DEC  C166  F09A         	movff	efgtoa@l,___flmul@b
 12952  001DF0  C167  F09B         	movff	efgtoa@l+1,___flmul@b+1
 12953  001DF4  C168  F09C         	movff	efgtoa@l+2,___flmul@b+2
 12954  001DF8  C169  F09D         	movff	efgtoa@l+3,___flmul@b+3
 12955  001DFC  ECD0  F012         	call	___flmul	;wreg free
 12956  001E00  C09A  F111         	movff	?___flmul,___flsub@a
 12957  001E04  C09B  F112         	movff	?___flmul+1,___flsub@a+1
 12958  001E08  C09C  F113         	movff	?___flmul+2,___flsub@a+2
 12959  001E0C  C09D  F114         	movff	?___flmul+3,___flsub@a+3
 12960  001E10  ECEC  F03D         	call	___flsub	;wreg free
 12961  001E14  C10D  F162         	movff	?___flsub,efgtoa@h
 12962  001E18  C10E  F163         	movff	?___flsub+1,efgtoa@h+1
 12963  001E1C  C10F  F164         	movff	?___flsub+2,efgtoa@h+2
 12964  001E20  C110  F165         	movff	?___flsub+3,efgtoa@h+3
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/1
      +                          0.0;
 12968  001E24  C174  F10D         	movff	efgtoa@u,___fldiv@b
 12969  001E28  C175  F10E         	movff	efgtoa@u+1,___fldiv@b+1
 12970  001E2C  C176  F10F         	movff	efgtoa@u+2,___fldiv@b+2
 12971  001E30  C177  F110         	movff	efgtoa@u+3,___fldiv@b+3
 12972  001E34  0E00               	movlw	0
 12973  001E36  0101               	movlb	1	; () banked
 12974  001E38  6F11               	movwf	___fldiv@a& (0+255),b
 12975  001E3A  0E00               	movlw	0
 12976  001E3C  6F12               	movwf	(___fldiv@a+1)& (0+255),b
 12977  001E3E  0E20               	movlw	32
 12978  001E40  6F13               	movwf	(___fldiv@a+2)& (0+255),b
 12979  001E42  0E41               	movlw	65
 12980  001E44  6F14               	movwf	(___fldiv@a+3)& (0+255),b
 12981  001E46  EC25  F01C         	call	___fldiv	;wreg free
 12982  001E4A  C10D  F174         	movff	?___fldiv,efgtoa@u
 12983  001E4E  C10E  F175         	movff	?___fldiv+1,efgtoa@u+1
 12984  001E52  C10F  F176         	movff	?___fldiv+2,efgtoa@u+2
 12985  001E56  C110  F177         	movff	?___fldiv+3,efgtoa@u+3
 12986                           
 12987                           ; BSR set to: 1
 12988                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
 12989  001E5A  0750               	decf	efgtoa@ne& (0+255),f,b
 12990  001E5C  A0D8               	btfss	status,0,c
 12991  001E5E  0751               	decf	(efgtoa@ne+1)& (0+255),f,b
 12992                           
 12993                           ; BSR set to: 1
 12994                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
 12995  001E60  4B6A               	infsnz	efgtoa@i& (0+255),f,b
 12996  001E62  2B6B               	incf	(efgtoa@i+1)& (0+255),f,b
 12997  001E64                     l13911:
 12998                           
 12999                           ; BSR set to: 1
 13000                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
 13001  001E64  5152               	movf	efgtoa@m& (0+255),w,b
 13002  001E66  5D6A               	subwf	efgtoa@i& (0+255),w,b
 13003  001E68  516B               	movf	(efgtoa@i+1)& (0+255),w,b
 13004  001E6A  0A80               	xorlw	128
 13005  001E6C  6F41               	movwf	??_efgtoa& (0+255),b
 13006  001E6E  5153               	movf	(efgtoa@m+1)& (0+255),w,b
 13007  001E70  0A80               	xorlw	128
 13008  001E72  5941               	subwfb	??_efgtoa& (0+255),w,b
 13009  001E74  B0D8               	btfsc	status,0,c
 13010  001E76  D008               	goto	u16590
 13011                           
 13012                           ; BSR set to: 1
 13013  001E78  BF73               	btfsc	(efgtoa@n+1)& (0+255),7,b
 13014  001E7A  D72C               	goto	l13863
 13015  001E7C  5173               	movf	(efgtoa@n+1)& (0+255),w,b
 13016  001E7E  E104               	bnz	u16590
 13017  001E80  0E4B               	movlw	75
 13018  001E82  5D72               	subwf	efgtoa@n& (0+255),w,b
 13019  001E84  A0D8               	btfss	status,0,c
 13020  001E86  D726               	goto	l13863
 13021  001E88                     u16590:
 13022                           
 13023                           ; BSR set to: 1
 13024                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && 
      +                          (flags & (1 << 4))) {
 13025  001E88  514E               	movf	efgtoa@pp& (0+255),w,b
 13026  001E8A  114F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 13027  001E8C  A4D8               	btfss	status,2,c
 13028  001E8E  D00E               	goto	l13923
 13029                           
 13030                           ; BSR set to: 1
 13031  001E90  0100               	movlb	0	; () banked
 13032  001E92  A9C4               	btfss	_flags& (0+255),4,b
 13033  001E94  D00B               	goto	l13923
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n+
      +                          +] = '.';
 13037  001E96  0E12               	movlw	low _dbuf
 13038  001E98  0101               	movlb	1	; () banked
 13039  001E9A  2572               	addwf	efgtoa@n& (0+255),w,b
 13040  001E9C  6ED9               	movwf	fsr2l,c
 13041  001E9E  0E03               	movlw	high _dbuf
 13042  001EA0  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13043  001EA2  6EDA               	movwf	fsr2h,c
 13044  001EA4  0E2E               	movlw	46
 13045  001EA6  6EDF               	movwf	indf2,c
 13046                           
 13047                           ; BSR set to: 1
 13048  001EA8  4B72               	infsnz	efgtoa@n& (0+255),f,b
 13049  001EAA  2B73               	incf	(efgtoa@n+1)& (0+255),f,b
 13050  001EAC                     l13923:
 13051                           
 13052                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '
      +                          \0';
 13053  001EAC  0E12               	movlw	low _dbuf
 13054  001EAE  0101               	movlb	1	; () banked
 13055  001EB0  2572               	addwf	efgtoa@n& (0+255),w,b
 13056  001EB2  6ED9               	movwf	fsr2l,c
 13057  001EB4  0E03               	movlw	high _dbuf
 13058  001EB6  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13059  001EB8  6EDA               	movwf	fsr2h,c
 13060  001EBA  0E00               	movlw	0
 13061  001EBC  6EDF               	movwf	indf2,c
 13062                           
 13063                           ; BSR set to: 1
 13064                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode =
      +                          = 'e') {
 13065  001EBE  0E65               	movlw	101
 13066  001EC0  1960               	xorwf	efgtoa@nmode& (0+255),w,b
 13067  001EC2  A4D8               	btfss	status,2,c
 13068  001EC4  D0AC               	goto	l13983
 13069                           
 13070                           ; BSR set to: 1
 13071                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = siz
      +                          eof(dbuf) - 1;
 13072  001EC6  0E00               	movlw	0
 13073  001EC8  6F6B               	movwf	(efgtoa@i+1)& (0+255),b
 13074  001ECA  0E4F               	movlw	79
 13075  001ECC  6F6A               	movwf	efgtoa@i& (0+255),b
 13076                           
 13077                           ; BSR set to: 1
 13078                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i]
      +                           = '\0';
 13079  001ECE  0E12               	movlw	low _dbuf
 13080  001ED0  256A               	addwf	efgtoa@i& (0+255),w,b
 13081  001ED2  6ED9               	movwf	fsr2l,c
 13082  001ED4  0E03               	movlw	high _dbuf
 13083  001ED6  216B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13084  001ED8  6EDA               	movwf	fsr2h,c
 13085  001EDA  0E00               	movlw	0
 13086  001EDC  6EDF               	movwf	indf2,c
 13087                           
 13088                           ; BSR set to: 1
 13089                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 
      +                          0;
 13090  001EDE  0E00               	movlw	0
 13091  001EE0  6F5B               	movwf	(efgtoa@sign+1)& (0+255),b
 13092  001EE2  0E00               	movlw	0
 13093  001EE4  6F5A               	movwf	efgtoa@sign& (0+255),b
 13094                           
 13095                           ; BSR set to: 1
 13096                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e <
      +                           0) {
 13097  001EE6  AF71               	btfss	(efgtoa@e+1)& (0+255),7,b
 13098  001EE8  D008               	goto	l13939
 13099                           
 13100                           ; BSR set to: 1
 13101                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sig
      +                          n = 1;
 13102  001EEA  0E00               	movlw	0
 13103  001EEC  6F5B               	movwf	(efgtoa@sign+1)& (0+255),b
 13104  001EEE  0E01               	movlw	1
 13105  001EF0  6F5A               	movwf	efgtoa@sign& (0+255),b
 13106                           
 13107                           ; BSR set to: 1
 13108                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e =
      +                           -e;
 13109  001EF2  6D70               	negf	efgtoa@e& (0+255),b
 13110  001EF4  1F71               	comf	(efgtoa@e+1)& (0+255),f,b
 13111  001EF6  B0D8               	btfsc	status,0,c
 13112  001EF8  2B71               	incf	(efgtoa@e+1)& (0+255),f,b
 13113  001EFA                     l13939:
 13114                           
 13115                           ; BSR set to: 1
 13116                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
 13117  001EFA  0E00               	movlw	0
 13118  001EFC  6F5D               	movwf	(efgtoa@p+1)& (0+255),b
 13119  001EFE  0E02               	movlw	2
 13120  001F00  6F5C               	movwf	efgtoa@p& (0+255),b
 13121                           
 13122                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
 13123  001F02  D02C               	goto	l13951
 13124  001F04                     l13941:
 13125                           
 13126                           ; BSR set to: 1
 13127                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i
      +                          ;
 13128  001F04  076A               	decf	efgtoa@i& (0+255),f,b
 13129  001F06  A0D8               	btfss	status,0,c
 13130  001F08  076B               	decf	(efgtoa@i+1)& (0+255),f,b
 13131                           
 13132                           ; BSR set to: 1
 13133                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbu
      +                          f[i] = '0' + (e % 10);
 13134  001F0A  0E12               	movlw	low _dbuf
 13135  001F0C  256A               	addwf	efgtoa@i& (0+255),w,b
 13136  001F0E  6ED9               	movwf	fsr2l,c
 13137  001F10  0E03               	movlw	high _dbuf
 13138  001F12  216B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13139  001F14  6EDA               	movwf	fsr2h,c
 13140  001F16  C170  F08C         	movff	efgtoa@e,___awmod@dividend
 13141  001F1A  C171  F08D         	movff	efgtoa@e+1,___awmod@dividend+1
 13142  001F1E  0E00               	movlw	0
 13143  001F20  0100               	movlb	0	; () banked
 13144  001F22  6F8F               	movwf	(___awmod@divisor+1)& (0+255),b
 13145  001F24  0E0A               	movlw	10
 13146  001F26  6F8E               	movwf	___awmod@divisor& (0+255),b
 13147  001F28  ECF6  F03A         	call	___awmod	;wreg free
 13148  001F2C  518C               	movf	?___awmod& (0+255),w,b
 13149  001F2E  0F30               	addlw	48
 13150  001F30  6EDF               	movwf	indf2,c
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e =
      +                           e / 10;
 13154  001F32  C170  F08C         	movff	efgtoa@e,___awdiv@dividend
 13155  001F36  C171  F08D         	movff	efgtoa@e+1,___awdiv@dividend+1
 13156  001F3A  0E00               	movlw	0
 13157  001F3C  6F8F               	movwf	(___awdiv@divisor+1)& (0+255),b
 13158  001F3E  0E0A               	movlw	10
 13159  001F40  6F8E               	movwf	___awdiv@divisor& (0+255),b
 13160  001F42  ECB4  F03A         	call	___awdiv	;wreg free
 13161  001F46  C08C  F170         	movff	?___awdiv,efgtoa@e
 13162  001F4A  C08D  F171         	movff	?___awdiv+1,efgtoa@e+1
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p
      +                          ;
 13166  001F4E  0101               	movlb	1	; () banked
 13167  001F50  075C               	decf	efgtoa@p& (0+255),f,b
 13168  001F52  A0D8               	btfss	status,0,c
 13169  001F54  075D               	decf	(efgtoa@p+1)& (0+255),f,b
 13170                           
 13171                           ; BSR set to: 1
 13172                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w
      +                          ;
 13173  001F56  075E               	decf	efgtoa@w& (0+255),f,b
 13174  001F58  A0D8               	btfss	status,0,c
 13175  001F5A  075F               	decf	(efgtoa@w+1)& (0+255),f,b
 13176  001F5C                     l13951:
 13177                           
 13178                           ; BSR set to: 1
 13179                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
 13180  001F5C  5170               	movf	efgtoa@e& (0+255),w,b
 13181  001F5E  1171               	iorwf	(efgtoa@e+1)& (0+255),w,b
 13182  001F60  A4D8               	btfss	status,2,c
 13183  001F62  D7D0               	goto	l13941
 13184                           
 13185                           ; BSR set to: 1
 13186  001F64  BF5D               	btfsc	(efgtoa@p+1)& (0+255),7,b
 13187  001F66  D005               	goto	u16650
 13188  001F68  515D               	movf	(efgtoa@p+1)& (0+255),w,b
 13189  001F6A  E1CC               	bnz	l13941
 13190  001F6C  055C               	decf	efgtoa@p& (0+255),w,b
 13191  001F6E  B0D8               	btfsc	status,0,c
 13192  001F70  D7C9               	goto	l13941
 13193  001F72                     u16650:
 13194                           
 13195                           ; BSR set to: 1
 13196                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
 13197  001F72  076A               	decf	efgtoa@i& (0+255),f,b
 13198  001F74  A0D8               	btfss	status,0,c
 13199  001F76  076B               	decf	(efgtoa@i+1)& (0+255),f,b
 13200                           
 13201                           ; BSR set to: 1
 13202                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i]
      +                           = sign ? '-' : '+';
 13203  001F78  515A               	movf	efgtoa@sign& (0+255),w,b
 13204  001F7A  115B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 13205  001F7C  A4D8               	btfss	status,2,c
 13206  001F7E  D004               	goto	l13961
 13207                           
 13208                           ; BSR set to: 1
 13209  001F80  0E00               	movlw	0
 13210  001F82  6F49               	movwf	(_efgtoa$4916+1)& (0+255),b
 13211  001F84  0E2B               	movlw	43
 13212  001F86  D003               	goto	L10
 13213  001F88                     l13961:
 13214                           
 13215                           ; BSR set to: 1
 13216  001F88  0E00               	movlw	0
 13217  001F8A  6F49               	movwf	(_efgtoa$4916+1)& (0+255),b
 13218  001F8C  0E2D               	movlw	45
 13219  001F8E                     L10:
 13220  001F8E  6F48               	movwf	_efgtoa$4916& (0+255),b
 13221                           
 13222                           ; BSR set to: 1
 13223  001F90  0E12               	movlw	low _dbuf
 13224  001F92  256A               	addwf	efgtoa@i& (0+255),w,b
 13225  001F94  6ED9               	movwf	fsr2l,c
 13226  001F96  0E03               	movlw	high _dbuf
 13227  001F98  216B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13228  001F9A  6EDA               	movwf	fsr2h,c
 13229  001F9C  C148  FFDF         	movff	_efgtoa$4916,indf2
 13230                           
 13231                           ; BSR set to: 1
 13232                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
 13233  001FA0  075E               	decf	efgtoa@w& (0+255),f,b
 13234  001FA2  A0D8               	btfss	status,0,c
 13235  001FA4  075F               	decf	(efgtoa@w+1)& (0+255),f,b
 13236                           
 13237                           ; BSR set to: 1
 13238                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
 13239  001FA6  076A               	decf	efgtoa@i& (0+255),f,b
 13240  001FA8  A0D8               	btfss	status,0,c
 13241  001FAA  076B               	decf	(efgtoa@i+1)& (0+255),f,b
 13242                           
 13243                           ; BSR set to: 1
 13244                           
 13245                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i]
      +                           = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13246  001FAC  0EBF               	movlw	191
 13247  001FAE  6F41               	movwf	??_efgtoa& (0+255),b
 13248  001FB0  0EFF               	movlw	255
 13249  001FB2  6F42               	movwf	(??_efgtoa+1)& (0+255),b
 13250  001FB4  5140               	movf	efgtoa@c& (0+255),w,b
 13251  001FB6  6F43               	movwf	(??_efgtoa+2)& (0+255),b
 13252  001FB8  6B44               	clrf	(??_efgtoa+3)& (0+255),b
 13253  001FBA  5141               	movf	??_efgtoa& (0+255),w,b
 13254  001FBC  2743               	addwf	(??_efgtoa+2)& (0+255),f,b
 13255  001FBE  5142               	movf	(??_efgtoa+1)& (0+255),w,b
 13256  001FC0  2344               	addwfc	(??_efgtoa+3)& (0+255),f,b
 13257  001FC2  5144               	movf	(??_efgtoa+3)& (0+255),w,b
 13258  001FC4  E104               	bnz	u16670
 13259  001FC6  0E1A               	movlw	26
 13260  001FC8  5D43               	subwf	(??_efgtoa+2)& (0+255),w,b
 13261  001FCA  A0D8               	btfss	status,0,c
 13262  001FCC  D004               	goto	l13975
 13263  001FCE                     u16670:
 13264                           
 13265                           ; BSR set to: 1
 13266  001FCE  0E00               	movlw	0
 13267  001FD0  6F4B               	movwf	(_efgtoa$4917+1)& (0+255),b
 13268  001FD2  0E65               	movlw	101
 13269  001FD4  D003               	goto	L11
 13270  001FD6                     l13975:
 13271                           
 13272                           ; BSR set to: 1
 13273  001FD6  0E00               	movlw	0
 13274  001FD8  6F4B               	movwf	(_efgtoa$4917+1)& (0+255),b
 13275  001FDA  0E45               	movlw	69
 13276  001FDC                     L11:
 13277  001FDC  6F4A               	movwf	_efgtoa$4917& (0+255),b
 13278                           
 13279                           ; BSR set to: 1
 13280  001FDE  0E12               	movlw	low _dbuf
 13281  001FE0  256A               	addwf	efgtoa@i& (0+255),w,b
 13282  001FE2  6ED9               	movwf	fsr2l,c
 13283  001FE4  0E03               	movlw	high _dbuf
 13284  001FE6  216B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13285  001FE8  6EDA               	movwf	fsr2h,c
 13286  001FEA  C14A  FFDF         	movff	_efgtoa$4917,indf2
 13287                           
 13288                           ; BSR set to: 1
 13289                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
 13290  001FEE  075E               	decf	efgtoa@w& (0+255),f,b
 13291  001FF0  A0D8               	btfss	status,0,c
 13292  001FF2  075F               	decf	(efgtoa@w+1)& (0+255),f,b
 13293                           
 13294                           ; BSR set to: 1
 13295                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
 13296  001FF4  0E12               	movlw	low _dbuf
 13297  001FF6  2572               	addwf	efgtoa@n& (0+255),w,b
 13298  001FF8  0100               	movlb	0	; () banked
 13299  001FFA  6F8C               	movwf	strcpy@dest& (0+255),b
 13300  001FFC  0E03               	movlw	high _dbuf
 13301  001FFE  0101               	movlb	1	; () banked
 13302  002000  2173               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13303  002002  0100               	movlb	0	; () banked
 13304  002004  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 13305  002006  0E12               	movlw	low _dbuf
 13306  002008  0101               	movlb	1	; () banked
 13307  00200A  256A               	addwf	efgtoa@i& (0+255),w,b
 13308  00200C  0100               	movlb	0	; () banked
 13309  00200E  6F8E               	movwf	strcpy@src& (0+255),b
 13310  002010  0E03               	movlw	high _dbuf
 13311  002012  0101               	movlb	1	; () banked
 13312  002014  216B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13313  002016  0100               	movlb	0	; () banked
 13314  002018  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 13315  00201A  ECD7  F03C         	call	_strcpy	;wreg free
 13316  00201E                     l13983:
 13317                           
 13318                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 524:     return pad(
      +                          fp, &dbuf[0], w);
 13319  00201E  C13A  F09C         	movff	efgtoa@fp,pad@fp
 13320  002022  C13B  F09D         	movff	efgtoa@fp+1,pad@fp+1
 13321  002026  0E12               	movlw	low _dbuf
 13322  002028  0100               	movlb	0	; () banked
 13323  00202A  6F9E               	movwf	pad@buf& (0+255),b
 13324  00202C  0E03               	movlw	high _dbuf
 13325  00202E  6F9F               	movwf	(pad@buf+1)& (0+255),b
 13326  002030  C15E  F0A0         	movff	efgtoa@w,pad@p
 13327  002034  C15F  F0A1         	movff	efgtoa@w+1,pad@p+1
 13328  002038  ECB5  F038         	call	_pad	;wreg free
 13329  00203C  C09C  F13A         	movff	?_pad,?_efgtoa
 13330  002040  C09D  F13B         	movff	?_pad+1,?_efgtoa+1
 13331                           
 13332                           ; BSR set to: 0
 13333  002044  0012               	return		;funcret
 13334  002046                     __end_of_efgtoa:
 13335                           	callstack 0
 13336                           
 13337 ;; *************** function _tolower *****************
 13338 ;; Defined at:
 13339 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;  c               2   50[BANK0 ] int 
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  2   50[BANK0 ] int 
 13346 ;; Registers used:
 13347 ;;		wreg, status,2, status,0
 13348 ;; Tracked objects:
 13349 ;;		On entry : 3F/0
 13350 ;;		On exit  : 3F/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13353 ;;      Params:         0       2       0       0       0       0       0       0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13355 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13356 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13357 ;;Total ram usage:        6 bytes
 13358 ;; Hardware stack levels used: 1
 13359 ;; Hardware stack levels required when called: 11
 13360 ;; This function calls:
 13361 ;;		_isupper
 13362 ;; This function is called by:
 13363 ;;		_efgtoa
 13364 ;;		_vfpfcnvrt
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368                           	psect	text60
 13369  007E2E                     __ptext60:
 13370                           	callstack 0
 13371  007E2E                     _tolower:
 13372                           	callstack 16
 13373                           
 13374                           ; BSR set to: 0
 13375                           
 13376                           ; BSR set to: 0
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;incstack = 0
 13380  007E2E  0EBF               	movlw	191
 13381  007E30  6F94               	movwf	??_tolower& (0+255),b
 13382  007E32  0EFF               	movlw	255
 13383  007E34  6F95               	movwf	(??_tolower+1)& (0+255),b
 13384  007E36  C092  F096         	movff	tolower@c,??_tolower+2
 13385  007E3A  C093  F097         	movff	tolower@c+1,??_tolower+3
 13386  007E3E  5194               	movf	??_tolower& (0+255),w,b
 13387  007E40  2796               	addwf	(??_tolower+2)& (0+255),f,b
 13388  007E42  5195               	movf	(??_tolower+1)& (0+255),w,b
 13389  007E44  2397               	addwfc	(??_tolower+3)& (0+255),f,b
 13390  007E46  5197               	movf	(??_tolower+3)& (0+255),w,b
 13391  007E48  E10A               	bnz	l2700
 13392  007E4A  0E1A               	movlw	26
 13393  007E4C  5D96               	subwf	(??_tolower+2)& (0+255),w,b
 13394  007E4E  B0D8               	btfsc	status,0,c
 13395  007E50  D006               	goto	l2700
 13396                           
 13397                           ; BSR set to: 0
 13398  007E52  0E20               	movlw	32
 13399  007E54  1192               	iorwf	tolower@c& (0+255),w,b
 13400  007E56  6F92               	movwf	?_tolower& (0+255),b
 13401  007E58  5193               	movf	(tolower@c+1)& (0+255),w,b
 13402  007E5A  6F93               	movwf	(?_tolower+1)& (0+255),b
 13403  007E5C  0012               	return	
 13404  007E5E                     l2700:
 13405                           
 13406                           ; BSR set to: 0
 13407  007E5E  C092  F092         	movff	tolower@c,?_tolower
 13408  007E62  C093  F093         	movff	tolower@c+1,?_tolower+1
 13409                           
 13410                           ; BSR set to: 0
 13411  007E66  0012               	return		;funcret
 13412  007E68                     __end_of_tolower:
 13413                           	callstack 0
 13414                           
 13415 ;; *************** function _isupper *****************
 13416 ;; Defined at:
 13417 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  c               2   44[BANK0 ] int 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;		None
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  2   44[BANK0 ] int 
 13424 ;; Registers used:
 13425 ;;		wreg, status,2, status,0
 13426 ;; Tracked objects:
 13427 ;;		On entry : 0/0
 13428 ;;		On exit  : 3F/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13431 ;;      Params:         0       2       0       0       0       0       0       0       0
 13432 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13433 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13434 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13435 ;;Total ram usage:        6 bytes
 13436 ;; Hardware stack levels used: 1
 13437 ;; Hardware stack levels required when called: 10
 13438 ;; This function calls:
 13439 ;;		Nothing
 13440 ;; This function is called by:
 13441 ;;		_efgtoa
 13442 ;;		_vfpfcnvrt
 13443 ;;		_tolower
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           	psect	text61
 13448  007FAE                     __ptext61:
 13449                           	callstack 0
 13450  007FAE                     _isupper:
 13451                           	callstack 16
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;incstack = 0
 13455  007FAE  0EBF               	movlw	191
 13456  007FB0  0100               	movlb	0	; () banked
 13457  007FB2  6F8E               	movwf	??_isupper& (0+255),b
 13458  007FB4  0EFF               	movlw	255
 13459  007FB6  6F8F               	movwf	(??_isupper+1)& (0+255),b
 13460  007FB8  C08C  F090         	movff	isupper@c,??_isupper+2
 13461  007FBC  C08D  F091         	movff	isupper@c+1,??_isupper+3
 13462  007FC0  518E               	movf	??_isupper& (0+255),w,b
 13463  007FC2  2790               	addwf	(??_isupper+2)& (0+255),f,b
 13464  007FC4  518F               	movf	(??_isupper+1)& (0+255),w,b
 13465  007FC6  2391               	addwfc	(??_isupper+3)& (0+255),f,b
 13466  007FC8  5191               	movf	(??_isupper+3)& (0+255),w,b
 13467  007FCA  E106               	bnz	u14800
 13468  007FCC  0E1A               	movlw	26
 13469  007FCE  5D90               	subwf	(??_isupper+2)& (0+255),w,b
 13470  007FD0  B0D8               	btfsc	status,0,c
 13471  007FD2  D002               	goto	u14800
 13472  007FD4  0E01               	movlw	1
 13473  007FD6  D001               	goto	u14810
 13474  007FD8                     u14800:
 13475  007FD8  0E00               	movlw	0
 13476  007FDA                     u14810:
 13477  007FDA  6F8C               	movwf	?_isupper& (0+255),b
 13478  007FDC  6B8D               	clrf	(?_isupper+1)& (0+255),b
 13479                           
 13480                           ; BSR set to: 0
 13481  007FDE  0012               	return		;funcret
 13482  007FE0                     __end_of_isupper:
 13483                           	callstack 0
 13484                           
 13485 ;; *************** function _strcpy *****************
 13486 ;; Defined at:
 13487 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  dest            2   44[BANK0 ] PTR unsigned char 
 13490 ;;		 -> dbuf(80), lastToken(30), getComands@buff(10), 
 13491 ;;  src             2   46[BANK0 ] PTR const unsigned char 
 13492 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 13493 ;;		 -> dbuf(80), executeCommand@strCommand(30), readBuffer(32), NULL(0), 
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;  d               2   52[BANK0 ] PTR unsigned char 
 13496 ;;		 -> dbuf(80), lastToken(30), getComands@buff(10), 
 13497 ;;  s               2   50[BANK0 ] PTR const unsigned char 
 13498 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 13499 ;;		 -> dbuf(80), executeCommand@strCommand(30), readBuffer(32), NULL(0), 
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  2   44[BANK0 ] PTR unsigned char 
 13502 ;; Registers used:
 13503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13504 ;; Tracked objects:
 13505 ;;		On entry : 3D/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13509 ;;      Params:         0       4       0       0       0       0       0       0       0
 13510 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13511 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13512 ;;      Totals:         0      10       0       0       0       0       0       0       0
 13513 ;;Total ram usage:       10 bytes
 13514 ;; Hardware stack levels used: 1
 13515 ;; Hardware stack levels required when called: 10
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		_getComands
 13520 ;;		_USBCommandFetch
 13521 ;;		_efgtoa
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           	psect	text62
 13526  0079AE                     __ptext62:
 13527                           	callstack 0
 13528  0079AE                     _strcpy:
 13529                           	callstack 16
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;incstack = 0
 13533  0079AE  C08E  F092         	movff	strcpy@src,strcpy@s
 13534  0079B2  C08F  F093         	movff	strcpy@src+1,strcpy@s+1
 13535  0079B6  C08C  F094         	movff	strcpy@dest,strcpy@d
 13536  0079BA  C08D  F095         	movff	strcpy@dest+1,strcpy@d+1
 13537  0079BE                     l12887:
 13538  0079BE  0100               	movlb	0	; () banked
 13539  0079C0  5192               	movf	strcpy@s& (0+255),w,b
 13540  0079C2  6F90               	movwf	??_strcpy& (0+255),b
 13541  0079C4  5193               	movf	(strcpy@s+1)& (0+255),w,b
 13542  0079C6  6F91               	movwf	(??_strcpy+1)& (0+255),b
 13543  0079C8  4B92               	infsnz	strcpy@s& (0+255),f,b
 13544  0079CA  2B93               	incf	(strcpy@s+1)& (0+255),f,b
 13545  0079CC  C090  FFF6         	movff	??_strcpy,tblptrl
 13546  0079D0  C091  FFF7         	movff	??_strcpy+1,tblptrh
 13547  0079D4  6AF8               	clrf	tblptru,c
 13548  0079D6  C094  FFD9         	movff	strcpy@d,fsr2l
 13549  0079DA  C095  FFDA         	movff	strcpy@d+1,fsr2h
 13550  0079DE  4B94               	infsnz	strcpy@d& (0+255),f,b
 13551  0079E0  2B95               	incf	(strcpy@d+1)& (0+255),f,b
 13552  0079E2  0E07               	movlw	(high __ramtop+-1)
 13553  0079E4  64F7               	cpfsgt	tblptrh,c
 13554  0079E6  D003               	bra	u14827
 13555  0079E8  0008               	tblrd		*
 13556  0079EA  50F5               	movf	tablat,w,c
 13557  0079EC  D005               	bra	u14820
 13558  0079EE                     u14827:
 13559  0079EE  CFF6 FFE1          	movff	tblptrl,fsr1l
 13560  0079F2  CFF7 FFE2          	movff	tblptrh,fsr1h
 13561  0079F6  50E7               	movf	indf1,w,c
 13562  0079F8                     u14820:
 13563  0079F8  6EDF               	movwf	indf2,c
 13564  0079FA  50DF               	movf	indf2,w,c
 13565  0079FC  B4D8               	btfsc	status,2,c
 13566  0079FE  0012               	return	
 13567  007A00  D7DE               	goto	l12887
 13568  007A02                     __end_of_strcpy:
 13569                           	callstack 0
 13570                           
 13571 ;; *************** function _floorf *****************
 13572 ;; Defined at:
 13573 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
 13574 ;; Parameters:    Size  Location     Type
 13575 ;;  x               4   38[BANK1 ] float 
 13576 ;; Auto vars:     Size  Location     Type
 13577 ;;  u               4   54[BANK1 ] struct .
 13578 ;;  m               4   48[BANK1 ] unsigned long 
 13579 ;;  e               2   52[BANK1 ] int 
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  4   38[BANK1 ] float 
 13582 ;; Registers used:
 13583 ;;		wreg, status,2, status,0
 13584 ;; Tracked objects:
 13585 ;;		On entry : 3F/1
 13586 ;;		On exit  : 3F/1
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13589 ;;      Params:         0       0       4       0       0       0       0       0       0
 13590 ;;      Locals:         0       0      10       0       0       0       0       0       0
 13591 ;;      Temps:          0       0       6       0       0       0       0       0       0
 13592 ;;      Totals:         0       0      20       0       0       0       0       0       0
 13593 ;;Total ram usage:       20 bytes
 13594 ;; Hardware stack levels used: 1
 13595 ;; Hardware stack levels required when called: 10
 13596 ;; This function calls:
 13597 ;;		Nothing
 13598 ;; This function is called by:
 13599 ;;		_efgtoa
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603                           	psect	text63
 13604  004B12                     __ptext63:
 13605                           	callstack 0
 13606  004B12                     _floorf:
 13607                           	callstack 16
 13608                           
 13609                           ; BSR set to: 1
 13610                           
 13611                           ;incstack = 0
 13612  004B12  C2B4  F136         	movff	floorf@F526,floorf@u
 13613  004B16  C2B5  F137         	movff	floorf@F526+1,floorf@u+1
 13614  004B1A  C2B6  F138         	movff	floorf@F526+2,floorf@u+2
 13615  004B1E  C2B7  F139         	movff	floorf@F526+3,floorf@u+3
 13616  004B22  C126  F136         	movff	floorf@x,floorf@u
 13617  004B26  C127  F137         	movff	floorf@x+1,floorf@u+1
 13618  004B2A  C128  F138         	movff	floorf@x+2,floorf@u+2
 13619  004B2E  C129  F139         	movff	floorf@x+3,floorf@u+3
 13620                           
 13621                           ; BSR set to: 1
 13622  004B32  0E81               	movlw	129
 13623  004B34  6F2A               	movwf	??_floorf& (0+255),b
 13624  004B36  0EFF               	movlw	255
 13625  004B38  6F2B               	movwf	(??_floorf+1)& (0+255),b
 13626  004B3A  C136  F12C         	movff	floorf@u,??_floorf+2
 13627  004B3E  C137  F12D         	movff	floorf@u+1,??_floorf+3
 13628  004B42  C138  F12E         	movff	floorf@u+2,??_floorf+4
 13629  004B46  C139  F12F         	movff	floorf@u+3,??_floorf+5
 13630  004B4A  0E18               	movlw	24
 13631  004B4C  D005               	goto	u15790
 13632  004B4E                     u15795:
 13633  004B4E  90D8               	bcf	status,0,c
 13634  004B50  332F               	rrcf	(??_floorf+5)& (0+255),f,b
 13635  004B52  332E               	rrcf	(??_floorf+4)& (0+255),f,b
 13636  004B54  332D               	rrcf	(??_floorf+3)& (0+255),f,b
 13637  004B56  332C               	rrcf	(??_floorf+2)& (0+255),f,b
 13638  004B58                     u15790:
 13639  004B58  2EE8               	decfsz	wreg,f,c
 13640  004B5A  D7F9               	goto	u15795
 13641  004B5C  512C               	movf	(??_floorf+2)& (0+255),w,b
 13642  004B5E  252A               	addwf	??_floorf& (0+255),w,b
 13643  004B60  6F34               	movwf	floorf@e& (0+255),b
 13644  004B62  0E00               	movlw	0
 13645  004B64  212B               	addwfc	(??_floorf+1)& (0+255),w,b
 13646  004B66  6F35               	movwf	(floorf@e+1)& (0+255),b
 13647  004B68  BF35               	btfsc	(floorf@e+1)& (0+255),7,b
 13648  004B6A  D00F               	goto	l13483
 13649  004B6C  5135               	movf	(floorf@e+1)& (0+255),w,b
 13650  004B6E  E104               	bnz	u15800
 13651  004B70  0E17               	movlw	23
 13652  004B72  5D34               	subwf	floorf@e& (0+255),w,b
 13653  004B74  A0D8               	btfss	status,0,c
 13654  004B76  D009               	goto	l13483
 13655  004B78                     u15800:
 13656                           
 13657                           ; BSR set to: 1
 13658  004B78  C126  F126         	movff	floorf@x,?_floorf
 13659  004B7C  C127  F127         	movff	floorf@x+1,?_floorf+1
 13660  004B80  C128  F128         	movff	floorf@x+2,?_floorf+2
 13661  004B84  C129  F129         	movff	floorf@x+3,?_floorf+3
 13662  004B88  0012               	return	
 13663  004B8A                     l13483:
 13664                           
 13665                           ; BSR set to: 1
 13666  004B8A  BF35               	btfsc	(floorf@e+1)& (0+255),7,b
 13667  004B8C  D05C               	goto	l13493
 13668                           
 13669                           ; BSR set to: 1
 13670  004B8E  C134  F12A         	movff	floorf@e,??_floorf
 13671  004B92  0EFF               	movlw	255
 13672  004B94  6F2B               	movwf	(??_floorf+1)& (0+255),b
 13673  004B96  0EFF               	movlw	255
 13674  004B98  6F2C               	movwf	(??_floorf+2)& (0+255),b
 13675  004B9A  0E7F               	movlw	127
 13676  004B9C  6F2D               	movwf	(??_floorf+3)& (0+255),b
 13677  004B9E  0E00               	movlw	0
 13678  004BA0  6F2E               	movwf	(??_floorf+4)& (0+255),b
 13679  004BA2                     u15825:
 13680  004BA2  672A               	tstfsz	??_floorf& (0+255),b
 13681  004BA4  D001               	goto	u15826
 13682  004BA6  D007               	goto	u15827
 13683  004BA8                     u15826:
 13684  004BA8  352E               	rlcf	(??_floorf+4)& (0+255),w,b
 13685  004BAA  332E               	rrcf	(??_floorf+4)& (0+255),f,b
 13686  004BAC  332D               	rrcf	(??_floorf+3)& (0+255),f,b
 13687  004BAE  332C               	rrcf	(??_floorf+2)& (0+255),f,b
 13688  004BB0  332B               	rrcf	(??_floorf+1)& (0+255),f,b
 13689  004BB2  2F2A               	decfsz	??_floorf& (0+255),f,b
 13690  004BB4  D7F6               	goto	u15825
 13691  004BB6                     u15827:
 13692  004BB6  C12B  F130         	movff	??_floorf+1,floorf@m
 13693  004BBA  C12C  F131         	movff	??_floorf+2,floorf@m+1
 13694  004BBE  C12D  F132         	movff	??_floorf+3,floorf@m+2
 13695  004BC2  C12E  F133         	movff	??_floorf+4,floorf@m+3
 13696  004BC6  0101               	movlb	1	; () banked
 13697  004BC8  5130               	movf	floorf@m& (0+255),w,b
 13698  004BCA  1536               	andwf	floorf@u& (0+255),w,b
 13699  004BCC  6F2A               	movwf	??_floorf& (0+255),b
 13700  004BCE  5131               	movf	(floorf@m+1)& (0+255),w,b
 13701  004BD0  1537               	andwf	(floorf@u+1)& (0+255),w,b
 13702  004BD2  6F2B               	movwf	(??_floorf+1)& (0+255),b
 13703  004BD4  5132               	movf	(floorf@m+2)& (0+255),w,b
 13704  004BD6  1538               	andwf	(floorf@u+2)& (0+255),w,b
 13705  004BD8  6F2C               	movwf	(??_floorf+2)& (0+255),b
 13706  004BDA  5133               	movf	(floorf@m+3)& (0+255),w,b
 13707  004BDC  1539               	andwf	(floorf@u+3)& (0+255),w,b
 13708  004BDE  6F2D               	movwf	(??_floorf+3)& (0+255),b
 13709  004BE0  512A               	movf	??_floorf& (0+255),w,b
 13710  004BE2  112B               	iorwf	(??_floorf+1)& (0+255),w,b
 13711  004BE4  112C               	iorwf	(??_floorf+2)& (0+255),w,b
 13712  004BE6  112D               	iorwf	(??_floorf+3)& (0+255),w,b
 13713  004BE8  B4D8               	btfsc	status,2,c
 13714  004BEA  D7C6               	goto	u15800
 13715                           
 13716                           ; BSR set to: 1
 13717  004BEC  C136  F12A         	movff	floorf@u,??_floorf
 13718  004BF0  C137  F12B         	movff	floorf@u+1,??_floorf+1
 13719  004BF4  C138  F12C         	movff	floorf@u+2,??_floorf+2
 13720  004BF8  C139  F12D         	movff	floorf@u+3,??_floorf+3
 13721  004BFC  0E20               	movlw	32
 13722  004BFE  D005               	goto	u15840
 13723  004C00                     u15845:
 13724  004C00  90D8               	bcf	status,0,c
 13725  004C02  332D               	rrcf	(??_floorf+3)& (0+255),f,b
 13726  004C04  332C               	rrcf	(??_floorf+2)& (0+255),f,b
 13727  004C06  332B               	rrcf	(??_floorf+1)& (0+255),f,b
 13728  004C08  332A               	rrcf	??_floorf& (0+255),f,b
 13729  004C0A                     u15840:
 13730  004C0A  2EE8               	decfsz	wreg,f,c
 13731  004C0C  D7F9               	goto	u15845
 13732  004C0E  512A               	movf	??_floorf& (0+255),w,b
 13733  004C10  B4D8               	btfsc	status,2,c
 13734  004C12  D008               	goto	l2397
 13735                           
 13736                           ; BSR set to: 1
 13737  004C14  5130               	movf	floorf@m& (0+255),w,b
 13738  004C16  2736               	addwf	floorf@u& (0+255),f,b
 13739  004C18  5131               	movf	(floorf@m+1)& (0+255),w,b
 13740  004C1A  2337               	addwfc	(floorf@u+1)& (0+255),f,b
 13741  004C1C  5132               	movf	(floorf@m+2)& (0+255),w,b
 13742  004C1E  2338               	addwfc	(floorf@u+2)& (0+255),f,b
 13743  004C20  5133               	movf	(floorf@m+3)& (0+255),w,b
 13744  004C22  2339               	addwfc	(floorf@u+3)& (0+255),f,b
 13745  004C24                     l2397:
 13746                           
 13747                           ; BSR set to: 1
 13748  004C24  1D30               	comf	floorf@m& (0+255),w,b
 13749  004C26  6F2A               	movwf	??_floorf& (0+255),b
 13750  004C28  1D31               	comf	(floorf@m+1)& (0+255),w,b
 13751  004C2A  6F2B               	movwf	(??_floorf+1)& (0+255),b
 13752  004C2C  1D32               	comf	(floorf@m+2)& (0+255),w,b
 13753  004C2E  6F2C               	movwf	(??_floorf+2)& (0+255),b
 13754  004C30  1D33               	comf	(floorf@m+3)& (0+255),w,b
 13755  004C32  6F2D               	movwf	(??_floorf+3)& (0+255),b
 13756  004C34  512A               	movf	??_floorf& (0+255),w,b
 13757  004C36  1736               	andwf	floorf@u& (0+255),f,b
 13758  004C38  512B               	movf	(??_floorf+1)& (0+255),w,b
 13759  004C3A  1737               	andwf	(floorf@u+1)& (0+255),f,b
 13760  004C3C  512C               	movf	(??_floorf+2)& (0+255),w,b
 13761  004C3E  1738               	andwf	(floorf@u+2)& (0+255),f,b
 13762  004C40  512D               	movf	(??_floorf+3)& (0+255),w,b
 13763  004C42  1739               	andwf	(floorf@u+3)& (0+255),f,b
 13764  004C44  D032               	goto	l13501
 13765  004C46                     l13493:
 13766                           
 13767                           ; BSR set to: 1
 13768  004C46  C136  F12A         	movff	floorf@u,??_floorf
 13769  004C4A  C137  F12B         	movff	floorf@u+1,??_floorf+1
 13770  004C4E  C138  F12C         	movff	floorf@u+2,??_floorf+2
 13771  004C52  C139  F12D         	movff	floorf@u+3,??_floorf+3
 13772  004C56  0E20               	movlw	32
 13773  004C58  D005               	goto	u15860
 13774  004C5A                     u15865:
 13775  004C5A  90D8               	bcf	status,0,c
 13776  004C5C  332D               	rrcf	(??_floorf+3)& (0+255),f,b
 13777  004C5E  332C               	rrcf	(??_floorf+2)& (0+255),f,b
 13778  004C60  332B               	rrcf	(??_floorf+1)& (0+255),f,b
 13779  004C62  332A               	rrcf	??_floorf& (0+255),f,b
 13780  004C64                     u15860:
 13781  004C64  2EE8               	decfsz	wreg,f,c
 13782  004C66  D7F9               	goto	u15865
 13783  004C68  672A               	tstfsz	??_floorf& (0+255),b
 13784  004C6A  D008               	goto	l13497
 13785                           
 13786                           ; BSR set to: 1
 13787  004C6C  0E00               	movlw	0
 13788  004C6E  6F36               	movwf	floorf@u& (0+255),b
 13789  004C70  0E00               	movlw	0
 13790  004C72  6F37               	movwf	(floorf@u+1)& (0+255),b
 13791  004C74  0E00               	movlw	0
 13792  004C76  6F38               	movwf	(floorf@u+2)& (0+255),b
 13793  004C78  0E00               	movlw	0
 13794  004C7A  D016               	goto	L12
 13795  004C7C                     l13497:
 13796                           
 13797                           ; BSR set to: 1
 13798  004C7C  90D8               	bcf	status,0,c
 13799  004C7E  3536               	rlcf	floorf@u& (0+255),w,b
 13800  004C80  6F2A               	movwf	??_floorf& (0+255),b
 13801  004C82  3537               	rlcf	(floorf@u+1)& (0+255),w,b
 13802  004C84  6F2B               	movwf	(??_floorf+1)& (0+255),b
 13803  004C86  3538               	rlcf	(floorf@u+2)& (0+255),w,b
 13804  004C88  6F2C               	movwf	(??_floorf+2)& (0+255),b
 13805  004C8A  3539               	rlcf	(floorf@u+3)& (0+255),w,b
 13806  004C8C  6F2D               	movwf	(??_floorf+3)& (0+255),b
 13807  004C8E  512A               	movf	??_floorf& (0+255),w,b
 13808  004C90  112B               	iorwf	(??_floorf+1)& (0+255),w,b
 13809  004C92  112C               	iorwf	(??_floorf+2)& (0+255),w,b
 13810  004C94  112D               	iorwf	(??_floorf+3)& (0+255),w,b
 13811  004C96  B4D8               	btfsc	status,2,c
 13812  004C98  D008               	goto	l13501
 13813                           
 13814                           ; BSR set to: 1
 13815  004C9A  0E00               	movlw	0
 13816  004C9C  6F36               	movwf	floorf@u& (0+255),b
 13817  004C9E  0E00               	movlw	0
 13818  004CA0  6F37               	movwf	(floorf@u+1)& (0+255),b
 13819  004CA2  0E80               	movlw	128
 13820  004CA4  6F38               	movwf	(floorf@u+2)& (0+255),b
 13821  004CA6  0EBF               	movlw	191
 13822  004CA8                     L12:
 13823  004CA8  6F39               	movwf	(floorf@u+3)& (0+255),b
 13824  004CAA                     l13501:
 13825                           
 13826                           ; BSR set to: 1
 13827  004CAA  C136  F126         	movff	floorf@u,?_floorf
 13828  004CAE  C137  F127         	movff	floorf@u+1,?_floorf+1
 13829  004CB2  C138  F128         	movff	floorf@u+2,?_floorf+2
 13830  004CB6  C139  F129         	movff	floorf@u+3,?_floorf+3
 13831                           
 13832                           ; BSR set to: 1
 13833  004CBA  0012               	return		;funcret
 13834  004CBC                     __end_of_floorf:
 13835                           	callstack 0
 13836                           
 13837 ;; *************** function ___fpclassifyf *****************
 13838 ;; Defined at:
 13839 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;  x               4   44[BANK0 ] float 
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;  u               4   54[BANK0 ] struct .
 13844 ;;  e               2   52[BANK0 ] int 
 13845 ;; Return value:  Size  Location     Type
 13846 ;;                  2   44[BANK0 ] int 
 13847 ;; Registers used:
 13848 ;;		wreg, status,2, status,0
 13849 ;; Tracked objects:
 13850 ;;		On entry : 3E/0
 13851 ;;		On exit  : 3F/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13854 ;;      Params:         0       4       0       0       0       0       0       0       0
 13855 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13856 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13857 ;;      Totals:         0      14       0       0       0       0       0       0       0
 13858 ;;Total ram usage:       14 bytes
 13859 ;; Hardware stack levels used: 1
 13860 ;; Hardware stack levels required when called: 10
 13861 ;; This function calls:
 13862 ;;		Nothing
 13863 ;; This function is called by:
 13864 ;;		_efgtoa
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text64
 13869  00683C                     __ptext64:
 13870                           	callstack 0
 13871  00683C                     ___fpclassifyf:
 13872                           	callstack 16
 13873                           
 13874                           ; BSR set to: 1
 13875                           ;incstack = 0
 13876  00683C  C2B8  F096         	movff	___fpclassifyf@F465,___fpclassifyf@u
 13877  006840  C2B9  F097         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 13878  006844  C2BA  F098         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 13879  006848  C2BB  F099         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 13880  00684C  C08C  F096         	movff	___fpclassifyf@x,___fpclassifyf@u
 13881  006850  C08D  F097         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13882  006854  C08E  F098         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13883  006858  C08F  F099         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13884  00685C  C096  F090         	movff	___fpclassifyf@u,??___fpclassifyf
 13885  006860  C097  F091         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13886  006864  C098  F092         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13887  006868  C099  F093         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13888  00686C  0E18               	movlw	24
 13889  00686E  D006               	goto	u15710
 13890  006870                     u15715:
 13891  006870  0100               	movlb	0	; () banked
 13892  006872  90D8               	bcf	status,0,c
 13893  006874  3393               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 13894  006876  3392               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 13895  006878  3391               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 13896  00687A  3390               	rrcf	??___fpclassifyf& (0+255),f,b
 13897  00687C                     u15710:
 13898  00687C  2EE8               	decfsz	wreg,f,c
 13899  00687E  D7F8               	goto	u15715
 13900  006880  5190               	movf	??___fpclassifyf& (0+255),w,b
 13901  006882  6F94               	movwf	___fpclassifyf@e& (0+255),b
 13902  006884  6B95               	clrf	(___fpclassifyf@e+1)& (0+255),b
 13903  006886  5194               	movf	___fpclassifyf@e& (0+255),w,b
 13904  006888  1195               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 13905  00688A  A4D8               	btfss	status,2,c
 13906  00688C  D019               	goto	l13457
 13907                           
 13908                           ; BSR set to: 0
 13909  00688E  90D8               	bcf	status,0,c
 13910  006890  3596               	rlcf	___fpclassifyf@u& (0+255),w,b
 13911  006892  6F90               	movwf	??___fpclassifyf& (0+255),b
 13912  006894  3597               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 13913  006896  6F91               	movwf	(??___fpclassifyf+1)& (0+255),b
 13914  006898  3598               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 13915  00689A  6F92               	movwf	(??___fpclassifyf+2)& (0+255),b
 13916  00689C  3599               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 13917  00689E  6F93               	movwf	(??___fpclassifyf+3)& (0+255),b
 13918  0068A0  5190               	movf	??___fpclassifyf& (0+255),w,b
 13919  0068A2  1191               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 13920  0068A4  1192               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 13921  0068A6  1193               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 13922  0068A8  A4D8               	btfss	status,2,c
 13923  0068AA  D005               	goto	l13453
 13924                           
 13925                           ; BSR set to: 0
 13926  0068AC  0E00               	movlw	0
 13927  0068AE  6F8D               	movwf	(?___fpclassifyf+1)& (0+255),b
 13928  0068B0  0E02               	movlw	2
 13929  0068B2  6F8C               	movwf	?___fpclassifyf& (0+255),b
 13930  0068B4  0012               	return	
 13931  0068B6                     l13453:
 13932                           
 13933                           ; BSR set to: 0
 13934  0068B6  0E00               	movlw	0
 13935  0068B8  6F8D               	movwf	(?___fpclassifyf+1)& (0+255),b
 13936  0068BA  0E03               	movlw	3
 13937  0068BC  6F8C               	movwf	?___fpclassifyf& (0+255),b
 13938  0068BE  0012               	return	
 13939  0068C0                     l13457:
 13940                           
 13941                           ; BSR set to: 0
 13942  0068C0  2994               	incf	___fpclassifyf@e& (0+255),w,b
 13943  0068C2  1195               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 13944  0068C4  A4D8               	btfss	status,2,c
 13945  0068C6  D01C               	goto	l13463
 13946                           
 13947                           ; BSR set to: 0
 13948  0068C8  C096  F090         	movff	___fpclassifyf@u,??___fpclassifyf
 13949  0068CC  C097  F091         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13950  0068D0  C098  F092         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13951  0068D4  C099  F093         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13952  0068D8  0E09               	movlw	9
 13953  0068DA                     u15755:
 13954  0068DA  90D8               	bcf	status,0,c
 13955  0068DC  3790               	rlcf	??___fpclassifyf& (0+255),f,b
 13956  0068DE  3791               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 13957  0068E0  3792               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 13958  0068E2  3793               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 13959  0068E4  2EE8               	decfsz	wreg,f,c
 13960  0068E6  D7F9               	goto	u15755
 13961  0068E8  5190               	movf	??___fpclassifyf& (0+255),w,b
 13962  0068EA  1191               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 13963  0068EC  1192               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 13964  0068EE  1193               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 13965  0068F0  A4D8               	btfss	status,2,c
 13966  0068F2  D002               	goto	u15760
 13967  0068F4  0E01               	movlw	1
 13968  0068F6  D001               	goto	u15770
 13969  0068F8                     u15760:
 13970  0068F8  0E00               	movlw	0
 13971  0068FA                     u15770:
 13972  0068FA  6F8C               	movwf	?___fpclassifyf& (0+255),b
 13973  0068FC  6B8D               	clrf	(?___fpclassifyf+1)& (0+255),b
 13974  0068FE  0012               	return	
 13975  006900                     l13463:
 13976                           
 13977                           ; BSR set to: 0
 13978  006900  0E00               	movlw	0
 13979  006902  6F8D               	movwf	(?___fpclassifyf+1)& (0+255),b
 13980  006904  0E04               	movlw	4
 13981  006906  6F8C               	movwf	?___fpclassifyf& (0+255),b
 13982                           
 13983                           ; BSR set to: 0
 13984  006908  0012               	return		;funcret
 13985  00690A                     __end_of___fpclassifyf:
 13986                           	callstack 0
 13987                           
 13988 ;; *************** function ___fltol *****************
 13989 ;; Defined at:
 13990 ;;		line 43 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
 13991 ;; Parameters:    Size  Location     Type
 13992 ;;  f1              4   38[BANK1 ] int 
 13993 ;; Auto vars:     Size  Location     Type
 13994 ;;  exp1            1   71[BANK0 ] unsigned char 
 13995 ;;  sign1           1   70[BANK0 ] unsigned char 
 13996 ;; Return value:  Size  Location     Type
 13997 ;;                  4   38[BANK1 ] long 
 13998 ;; Registers used:
 13999 ;;		wreg, status,2, status,0
 14000 ;; Tracked objects:
 14001 ;;		On entry : 3C/2
 14002 ;;		On exit  : 3E/0
 14003 ;;		Unchanged: 0/0
 14004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14005 ;;      Params:         0       0       4       0       0       0       0       0       0
 14006 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14007 ;;      Temps:          0       0       4       0       0       0       0       0       0
 14008 ;;      Totals:         0       2       8       0       0       0       0       0       0
 14009 ;;Total ram usage:       10 bytes
 14010 ;; Hardware stack levels used: 1
 14011 ;; Hardware stack levels required when called: 10
 14012 ;; This function calls:
 14013 ;;		Nothing
 14014 ;; This function is called by:
 14015 ;;		_mover_2
 14016 ;;		_executeCommand
 14017 ;;		_efgtoa
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text65
 14022  0064F6                     __ptext65:
 14023                           	callstack 0
 14024  0064F6                     ___fltol:
 14025                           	callstack 16
 14026                           
 14027                           ; BSR set to: 0
 14028                           ;incstack = 0
 14029  0064F6  0101               	movlb	1	; () banked
 14030  0064F8  3528               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14031  0064FA  3529               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14032  0064FC  0100               	movlb	0	; () banked
 14033  0064FE  6FA7               	movwf	___fltol@exp1& (0+255),b
 14034  006500  51A7               	movf	___fltol@exp1& (0+255),w,b
 14035  006502  A4D8               	btfss	status,2,c
 14036  006504  D00A               	goto	l13381
 14037  006506                     u15590:
 14038                           
 14039                           ; BSR set to: 0
 14040  006506  0E00               	movlw	0
 14041  006508  0101               	movlb	1	; () banked
 14042  00650A  6F26               	movwf	?___fltol& (0+255),b
 14043  00650C  0E00               	movlw	0
 14044  00650E  6F27               	movwf	(?___fltol+1)& (0+255),b
 14045  006510  0E00               	movlw	0
 14046  006512  6F28               	movwf	(?___fltol+2)& (0+255),b
 14047  006514  0E00               	movlw	0
 14048  006516  6F29               	movwf	(?___fltol+3)& (0+255),b
 14049  006518  0012               	return	
 14050  00651A                     l13381:
 14051                           
 14052                           ; BSR set to: 0
 14053  00651A  C126  F12A         	movff	___fltol@f1,??___fltol
 14054  00651E  C127  F12B         	movff	___fltol@f1+1,??___fltol+1
 14055  006522  C128  F12C         	movff	___fltol@f1+2,??___fltol+2
 14056  006526  C129  F12D         	movff	___fltol@f1+3,??___fltol+3
 14057  00652A  0E20               	movlw	32
 14058  00652C  D006               	goto	u15600
 14059  00652E                     u15605:
 14060  00652E  0101               	movlb	1	; () banked
 14061  006530  90D8               	bcf	status,0,c
 14062  006532  332D               	rrcf	(??___fltol+3)& (0+255),f,b
 14063  006534  332C               	rrcf	(??___fltol+2)& (0+255),f,b
 14064  006536  332B               	rrcf	(??___fltol+1)& (0+255),f,b
 14065  006538  332A               	rrcf	??___fltol& (0+255),f,b
 14066  00653A                     u15600:
 14067  00653A  2EE8               	decfsz	wreg,f,c
 14068  00653C  D7F8               	goto	u15605
 14069  00653E  512A               	movf	??___fltol& (0+255),w,b
 14070  006540  0100               	movlb	0	; () banked
 14071  006542  6FA6               	movwf	___fltol@sign1& (0+255),b
 14072                           
 14073                           ; BSR set to: 0
 14074  006544  0101               	movlb	1	; () banked
 14075  006546  8F28               	bsf	(___fltol@f1+2)& (0+255),7,b
 14076                           
 14077                           ; BSR set to: 1
 14078  006548  0EFF               	movlw	255
 14079  00654A  1726               	andwf	___fltol@f1& (0+255),f,b
 14080  00654C  0EFF               	movlw	255
 14081  00654E  1727               	andwf	(___fltol@f1+1)& (0+255),f,b
 14082  006550  0EFF               	movlw	255
 14083  006552  1728               	andwf	(___fltol@f1+2)& (0+255),f,b
 14084  006554  0E00               	movlw	0
 14085  006556  1729               	andwf	(___fltol@f1+3)& (0+255),f,b
 14086                           
 14087                           ; BSR set to: 1
 14088  006558  0E96               	movlw	150
 14089  00655A  0100               	movlb	0	; () banked
 14090  00655C  5FA7               	subwf	___fltol@exp1& (0+255),f,b
 14091                           
 14092                           ; BSR set to: 0
 14093  00655E  AFA7               	btfss	___fltol@exp1& (0+255),7,b
 14094  006560  D00F               	goto	l13401
 14095                           
 14096                           ; BSR set to: 0
 14097  006562  51A7               	movf	___fltol@exp1& (0+255),w,b
 14098  006564  0A80               	xorlw	128
 14099  006566  0F97               	addlw	151
 14100  006568  A0D8               	btfss	status,0,c
 14101  00656A  D7CD               	goto	u15590
 14102  00656C                     l13397:
 14103                           
 14104                           ; BSR set to: 0
 14105  00656C  0101               	movlb	1	; () banked
 14106  00656E  90D8               	bcf	status,0,c
 14107  006570  3329               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14108  006572  3328               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14109  006574  3327               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14110  006576  3326               	rrcf	___fltol@f1& (0+255),f,b
 14111                           
 14112                           ; BSR set to: 1
 14113  006578  0100               	movlb	0	; () banked
 14114  00657A  3FA7               	incfsz	___fltol@exp1& (0+255),f,b
 14115  00657C  D7F7               	goto	l13397
 14116  00657E  D00F               	goto	u15640
 14117  006580                     l13401:
 14118                           
 14119                           ; BSR set to: 0
 14120  006580  0E1F               	movlw	31
 14121  006582  65A7               	cpfsgt	___fltol@exp1& (0+255),b
 14122  006584  D009               	goto	l13409
 14123  006586  D7BF               	goto	u15590
 14124  006588                     l13407:
 14125                           
 14126                           ; BSR set to: 0
 14127  006588  0101               	movlb	1	; () banked
 14128  00658A  90D8               	bcf	status,0,c
 14129  00658C  3726               	rlcf	___fltol@f1& (0+255),f,b
 14130  00658E  3727               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14131  006590  3728               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14132  006592  3729               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14133  006594  0100               	movlb	0	; () banked
 14134  006596  07A7               	decf	___fltol@exp1& (0+255),f,b
 14135  006598                     l13409:
 14136                           
 14137                           ; BSR set to: 0
 14138  006598  51A7               	movf	___fltol@exp1& (0+255),w,b
 14139  00659A  A4D8               	btfss	status,2,c
 14140  00659C  D7F5               	goto	l13407
 14141  00659E                     u15640:
 14142                           
 14143                           ; BSR set to: 0
 14144  00659E  51A6               	movf	___fltol@sign1& (0+255),w,b
 14145  0065A0  B4D8               	btfsc	status,2,c
 14146  0065A2  D009               	goto	l13415
 14147                           
 14148                           ; BSR set to: 0
 14149  0065A4  0101               	movlb	1	; () banked
 14150  0065A6  1F29               	comf	(___fltol@f1+3)& (0+255),f,b
 14151  0065A8  1F28               	comf	(___fltol@f1+2)& (0+255),f,b
 14152  0065AA  1F27               	comf	(___fltol@f1+1)& (0+255),f,b
 14153  0065AC  6D26               	negf	___fltol@f1& (0+255),b
 14154  0065AE  0E00               	movlw	0
 14155  0065B0  2327               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14156  0065B2  2328               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14157  0065B4  2329               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14158  0065B6                     l13415:
 14159  0065B6  C126  F126         	movff	___fltol@f1,?___fltol
 14160  0065BA  C127  F127         	movff	___fltol@f1+1,?___fltol+1
 14161  0065BE  C128  F128         	movff	___fltol@f1+2,?___fltol+2
 14162  0065C2  C129  F129         	movff	___fltol@f1+3,?___fltol+3
 14163  0065C6  0012               	return		;funcret
 14164  0065C8                     __end_of___fltol:
 14165                           	callstack 0
 14166                           
 14167 ;; *************** function ___flsub *****************
 14168 ;; Defined at:
 14169 ;;		line 245 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 14170 ;; Parameters:    Size  Location     Type
 14171 ;;  b               4   13[BANK1 ] long 
 14172 ;;  a               4   17[BANK1 ] long 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  4   13[BANK1 ] long 
 14177 ;; Registers used:
 14178 ;;		wreg, status,2, status,0, cstack
 14179 ;; Tracked objects:
 14180 ;;		On entry : 3E/1
 14181 ;;		On exit  : 3F/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14184 ;;      Params:         0       0       8       0       0       0       0       0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14187 ;;      Totals:         0       0       8       0       0       0       0       0       0
 14188 ;;Total ram usage:        8 bytes
 14189 ;; Hardware stack levels used: 1
 14190 ;; Hardware stack levels required when called: 11
 14191 ;; This function calls:
 14192 ;;		___fladd
 14193 ;; This function is called by:
 14194 ;;		_G_01
 14195 ;;		_efgtoa
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text66
 14200  007BD8                     __ptext66:
 14201                           	callstack 0
 14202  007BD8                     ___flsub:
 14203                           	callstack 15
 14204                           
 14205                           ;incstack = 0
 14206  007BD8  0E00               	movlw	0
 14207  007BDA  0101               	movlb	1	; () banked
 14208  007BDC  1B11               	xorwf	___flsub@a& (0+255),f,b
 14209  007BDE  0E00               	movlw	0
 14210  007BE0  1B12               	xorwf	(___flsub@a+1)& (0+255),f,b
 14211  007BE2  0E00               	movlw	0
 14212  007BE4  1B13               	xorwf	(___flsub@a+2)& (0+255),f,b
 14213  007BE6  0E80               	movlw	128
 14214  007BE8  1B14               	xorwf	(___flsub@a+3)& (0+255),f,b
 14215                           
 14216                           ; BSR set to: 1
 14217  007BEA  C10D  F08C         	movff	___flsub@b,___fladd@b
 14218  007BEE  C10E  F08D         	movff	___flsub@b+1,___fladd@b+1
 14219  007BF2  C10F  F08E         	movff	___flsub@b+2,___fladd@b+2
 14220  007BF6  C110  F08F         	movff	___flsub@b+3,___fladd@b+3
 14221  007BFA  C111  F090         	movff	___flsub@a,___fladd@a
 14222  007BFE  C112  F091         	movff	___flsub@a+1,___fladd@a+1
 14223  007C02  C113  F092         	movff	___flsub@a+2,___fladd@a+2
 14224  007C06  C114  F093         	movff	___flsub@a+3,___fladd@a+3
 14225  007C0A  EC3E  F016         	call	___fladd	;wreg free
 14226  007C0E  C08C  F10D         	movff	?___fladd,?___flsub
 14227  007C12  C08D  F10E         	movff	?___fladd+1,?___flsub+1
 14228  007C16  C08E  F10F         	movff	?___fladd+2,?___flsub+2
 14229  007C1A  C08F  F110         	movff	?___fladd+3,?___flsub+3
 14230                           
 14231                           ; BSR set to: 0
 14232  007C1E  0012               	return		;funcret
 14233  007C20                     __end_of___flsub:
 14234                           	callstack 0
 14235                           
 14236 ;; *************** function ___fladd *****************
 14237 ;; Defined at:
 14238 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 14239 ;; Parameters:    Size  Location     Type
 14240 ;;  b               4   44[BANK0 ] long 
 14241 ;;  a               4   48[BANK0 ] long 
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;  grs             1   59[BANK0 ] unsigned char 
 14244 ;;  bexp            1   58[BANK0 ] unsigned char 
 14245 ;;  aexp            1   57[BANK0 ] unsigned char 
 14246 ;;  signs           1   56[BANK0 ] unsigned char 
 14247 ;; Return value:  Size  Location     Type
 14248 ;;                  4   44[BANK0 ] unsigned char 
 14249 ;; Registers used:
 14250 ;;		wreg, status,2, status,0
 14251 ;; Tracked objects:
 14252 ;;		On entry : 3E/1
 14253 ;;		On exit  : 3F/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14256 ;;      Params:         0       8       0       0       0       0       0       0       0
 14257 ;;      Locals:         0       4       0       0       0       0       0       0       0
 14258 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14259 ;;      Totals:         0      16       0       0       0       0       0       0       0
 14260 ;;Total ram usage:       16 bytes
 14261 ;; Hardware stack levels used: 1
 14262 ;; Hardware stack levels required when called: 10
 14263 ;; This function calls:
 14264 ;;		Nothing
 14265 ;; This function is called by:
 14266 ;;		___flsub
 14267 ;;		_efgtoa
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text67
 14272  002C7C                     __ptext67:
 14273                           	callstack 0
 14274  002C7C                     ___fladd:
 14275                           	callstack 15
 14276                           
 14277                           ; BSR set to: 0
 14278                           ;incstack = 0
 14279  002C7C  0100               	movlb	0	; () banked
 14280  002C7E  518F               	movf	(___fladd@b+3)& (0+255),w,b
 14281  002C80  0B80               	andlw	128
 14282  002C82  6F98               	movwf	___fladd@signs& (0+255),b
 14283  002C84  518F               	movf	(___fladd@b+3)& (0+255),w,b
 14284  002C86  258F               	addwf	(___fladd@b+3)& (0+255),w,b
 14285  002C88  6F9A               	movwf	___fladd@bexp& (0+255),b
 14286                           
 14287                           ; BSR set to: 0
 14288  002C8A  BF8E               	btfsc	(___fladd@b+2)& (0+255),7,b
 14289                           
 14290                           ; BSR set to: 0
 14291  002C8C  819A               	bsf	___fladd@bexp& (0+255),0,b
 14292                           
 14293                           ; BSR set to: 0
 14294  002C8E  519A               	movf	___fladd@bexp& (0+255),w,b
 14295  002C90  B4D8               	btfsc	status,2,c
 14296  002C92  D00D               	goto	l12687
 14297                           
 14298                           ; BSR set to: 0
 14299  002C94  299A               	incf	___fladd@bexp& (0+255),w,b
 14300  002C96  A4D8               	btfss	status,2,c
 14301  002C98  D008               	goto	l12683
 14302                           
 14303                           ; BSR set to: 0
 14304  002C9A  0E00               	movlw	0
 14305  002C9C  6F8C               	movwf	___fladd@b& (0+255),b
 14306  002C9E  0E00               	movlw	0
 14307  002CA0  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 14308  002CA2  0E00               	movlw	0
 14309  002CA4  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 14310  002CA6  0E00               	movlw	0
 14311  002CA8  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 14312  002CAA                     l12683:
 14313                           
 14314                           ; BSR set to: 0
 14315  002CAA  8F8E               	bsf	(___fladd@b+2)& (0+255),7,b
 14316  002CAC  D006               	goto	L13
 14317  002CAE                     l12687:
 14318                           
 14319                           ; BSR set to: 0
 14320  002CAE  0E00               	movlw	0
 14321  002CB0  6F8C               	movwf	___fladd@b& (0+255),b
 14322  002CB2  0E00               	movlw	0
 14323  002CB4  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 14324  002CB6  0E00               	movlw	0
 14325  002CB8  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 14326  002CBA                     L13:
 14327  002CBA  0E00               	movlw	0
 14328  002CBC  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 14329                           
 14330                           ; BSR set to: 0
 14331  002CBE  5193               	movf	(___fladd@a+3)& (0+255),w,b
 14332  002CC0  0B80               	andlw	128
 14333  002CC2  6F99               	movwf	___fladd@aexp& (0+255),b
 14334                           
 14335                           ; BSR set to: 0
 14336  002CC4  5198               	movf	___fladd@signs& (0+255),w,b
 14337  002CC6  1999               	xorwf	___fladd@aexp& (0+255),w,b
 14338  002CC8  A4D8               	btfss	status,2,c
 14339                           
 14340                           ; BSR set to: 0
 14341  002CCA  8D98               	bsf	___fladd@signs& (0+255),6,b
 14342                           
 14343                           ; BSR set to: 0
 14344  002CCC  5193               	movf	(___fladd@a+3)& (0+255),w,b
 14345  002CCE  2593               	addwf	(___fladd@a+3)& (0+255),w,b
 14346  002CD0  6F99               	movwf	___fladd@aexp& (0+255),b
 14347                           
 14348                           ; BSR set to: 0
 14349  002CD2  BF92               	btfsc	(___fladd@a+2)& (0+255),7,b
 14350                           
 14351                           ; BSR set to: 0
 14352  002CD4  8199               	bsf	___fladd@aexp& (0+255),0,b
 14353                           
 14354                           ; BSR set to: 0
 14355  002CD6  5199               	movf	___fladd@aexp& (0+255),w,b
 14356  002CD8  B4D8               	btfsc	status,2,c
 14357  002CDA  D00D               	goto	l12711
 14358                           
 14359                           ; BSR set to: 0
 14360  002CDC  2999               	incf	___fladd@aexp& (0+255),w,b
 14361  002CDE  A4D8               	btfss	status,2,c
 14362  002CE0  D008               	goto	l12707
 14363                           
 14364                           ; BSR set to: 0
 14365  002CE2  0E00               	movlw	0
 14366  002CE4  6F90               	movwf	___fladd@a& (0+255),b
 14367  002CE6  0E00               	movlw	0
 14368  002CE8  6F91               	movwf	(___fladd@a+1)& (0+255),b
 14369  002CEA  0E00               	movlw	0
 14370  002CEC  6F92               	movwf	(___fladd@a+2)& (0+255),b
 14371  002CEE  0E00               	movlw	0
 14372  002CF0  6F93               	movwf	(___fladd@a+3)& (0+255),b
 14373  002CF2                     l12707:
 14374                           
 14375                           ; BSR set to: 0
 14376  002CF2  8F92               	bsf	(___fladd@a+2)& (0+255),7,b
 14377  002CF4  D006               	goto	L14
 14378  002CF6                     l12711:
 14379                           
 14380                           ; BSR set to: 0
 14381  002CF6  0E00               	movlw	0
 14382  002CF8  6F90               	movwf	___fladd@a& (0+255),b
 14383  002CFA  0E00               	movlw	0
 14384  002CFC  6F91               	movwf	(___fladd@a+1)& (0+255),b
 14385  002CFE  0E00               	movlw	0
 14386  002D00  6F92               	movwf	(___fladd@a+2)& (0+255),b
 14387  002D02                     L14:
 14388  002D02  0E00               	movlw	0
 14389  002D04  6F93               	movwf	(___fladd@a+3)& (0+255),b
 14390                           
 14391                           ; BSR set to: 0
 14392  002D06  519A               	movf	___fladd@bexp& (0+255),w,b
 14393  002D08  5D99               	subwf	___fladd@aexp& (0+255),w,b
 14394  002D0A  B0D8               	btfsc	status,0,c
 14395  002D0C  D022               	goto	l12749
 14396                           
 14397                           ; BSR set to: 0
 14398  002D0E  AD98               	btfss	___fladd@signs& (0+255),6,b
 14399  002D10  D002               	goto	l12719
 14400                           
 14401                           ; BSR set to: 0
 14402  002D12  0E80               	movlw	128
 14403  002D14  1B98               	xorwf	___fladd@signs& (0+255),f,b
 14404  002D16                     l12719:
 14405                           
 14406                           ; BSR set to: 0
 14407  002D16  C09A  F09B         	movff	___fladd@bexp,___fladd@grs
 14408                           
 14409                           ; BSR set to: 0
 14410  002D1A  C099  F09A         	movff	___fladd@aexp,___fladd@bexp
 14411                           
 14412                           ; BSR set to: 0
 14413  002D1E  C09B  F099         	movff	___fladd@grs,___fladd@aexp
 14414                           
 14415                           ; BSR set to: 0
 14416  002D22  C08C  F09B         	movff	___fladd@b,___fladd@grs
 14417                           
 14418                           ; BSR set to: 0
 14419  002D26  C090  F08C         	movff	___fladd@a,___fladd@b
 14420                           
 14421                           ; BSR set to: 0
 14422  002D2A  C09B  F090         	movff	___fladd@grs,___fladd@a
 14423                           
 14424                           ; BSR set to: 0
 14425  002D2E  C08D  F09B         	movff	___fladd@b+1,___fladd@grs
 14426                           
 14427                           ; BSR set to: 0
 14428  002D32  C091  F08D         	movff	___fladd@a+1,___fladd@b+1
 14429                           
 14430                           ; BSR set to: 0
 14431  002D36  C09B  F091         	movff	___fladd@grs,___fladd@a+1
 14432                           
 14433                           ; BSR set to: 0
 14434  002D3A  C08E  F09B         	movff	___fladd@b+2,___fladd@grs
 14435                           
 14436                           ; BSR set to: 0
 14437  002D3E  C092  F08E         	movff	___fladd@a+2,___fladd@b+2
 14438                           
 14439                           ; BSR set to: 0
 14440  002D42  C09B  F092         	movff	___fladd@grs,___fladd@a+2
 14441                           
 14442                           ; BSR set to: 0
 14443  002D46  C08F  F09B         	movff	___fladd@b+3,___fladd@grs
 14444                           
 14445                           ; BSR set to: 0
 14446  002D4A  C093  F08F         	movff	___fladd@a+3,___fladd@b+3
 14447                           
 14448                           ; BSR set to: 0
 14449  002D4E  C09B  F093         	movff	___fladd@grs,___fladd@a+3
 14450  002D52                     l12749:
 14451                           
 14452                           ; BSR set to: 0
 14453  002D52  0E00               	movlw	0
 14454  002D54  6F9B               	movwf	___fladd@grs& (0+255),b
 14455                           
 14456                           ; BSR set to: 0
 14457  002D56  519A               	movf	___fladd@bexp& (0+255),w,b
 14458  002D58  C099  F094         	movff	___fladd@aexp,??___fladd
 14459  002D5C  6B95               	clrf	(??___fladd+1)& (0+255),b
 14460  002D5E  5F94               	subwf	??___fladd& (0+255),f,b
 14461  002D60  0E00               	movlw	0
 14462  002D62  5B95               	subwfb	(??___fladd+1)& (0+255),f,b
 14463  002D64  BF95               	btfsc	(??___fladd+1)& (0+255),7,b
 14464  002D66  D02C               	goto	l1942
 14465  002D68  5195               	movf	(??___fladd+1)& (0+255),w,b
 14466  002D6A  E104               	bnz	u14490
 14467  002D6C  0E1A               	movlw	26
 14468  002D6E  5D94               	subwf	??___fladd& (0+255),w,b
 14469  002D70  A0D8               	btfss	status,0,c
 14470  002D72  D026               	goto	l1942
 14471  002D74                     u14490:
 14472                           
 14473                           ; BSR set to: 0
 14474  002D74  518C               	movf	___fladd@b& (0+255),w,b
 14475  002D76  118D               	iorwf	(___fladd@b+1)& (0+255),w,b
 14476  002D78  118E               	iorwf	(___fladd@b+2)& (0+255),w,b
 14477  002D7A  118F               	iorwf	(___fladd@b+3)& (0+255),w,b
 14478  002D7C  B4D8               	btfsc	status,2,c
 14479  002D7E  D002               	goto	u14500
 14480  002D80  0E01               	movlw	1
 14481  002D82  D001               	goto	u14510
 14482  002D84                     u14500:
 14483  002D84  0E00               	movlw	0
 14484  002D86                     u14510:
 14485  002D86  6F9B               	movwf	___fladd@grs& (0+255),b
 14486                           
 14487                           ; BSR set to: 0
 14488  002D88  0E00               	movlw	0
 14489  002D8A  6F8C               	movwf	___fladd@b& (0+255),b
 14490  002D8C  0E00               	movlw	0
 14491  002D8E  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 14492  002D90  0E00               	movlw	0
 14493  002D92  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 14494  002D94  0E00               	movlw	0
 14495  002D96  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 14496                           
 14497                           ; BSR set to: 0
 14498  002D98  C099  F09A         	movff	___fladd@aexp,___fladd@bexp
 14499  002D9C  D015               	goto	u14540
 14500  002D9E                     l1943:
 14501                           
 14502                           ; BSR set to: 0
 14503  002D9E  A19B               	btfss	___fladd@grs& (0+255),0,b
 14504  002DA0  D005               	goto	l12761
 14505                           
 14506                           ; BSR set to: 0
 14507  002DA2  90D8               	bcf	status,0,c
 14508  002DA4  319B               	rrcf	___fladd@grs& (0+255),w,b
 14509  002DA6  0901               	iorlw	1
 14510  002DA8  6F9B               	movwf	___fladd@grs& (0+255),b
 14511  002DAA  D002               	goto	l12763
 14512  002DAC                     l12761:
 14513                           
 14514                           ; BSR set to: 0
 14515  002DAC  90D8               	bcf	status,0,c
 14516  002DAE  339B               	rrcf	___fladd@grs& (0+255),f,b
 14517  002DB0                     l12763:
 14518                           
 14519                           ; BSR set to: 0
 14520  002DB0  B18C               	btfsc	___fladd@b& (0+255),0,b
 14521                           
 14522                           ; BSR set to: 0
 14523  002DB2  8F9B               	bsf	___fladd@grs& (0+255),7,b
 14524                           
 14525                           ; BSR set to: 0
 14526  002DB4  358F               	rlcf	(___fladd@b+3)& (0+255),w,b
 14527  002DB6  338F               	rrcf	(___fladd@b+3)& (0+255),f,b
 14528  002DB8  338E               	rrcf	(___fladd@b+2)& (0+255),f,b
 14529  002DBA  338D               	rrcf	(___fladd@b+1)& (0+255),f,b
 14530  002DBC  338C               	rrcf	___fladd@b& (0+255),f,b
 14531                           
 14532                           ; BSR set to: 0
 14533  002DBE  2B9A               	incf	___fladd@bexp& (0+255),f,b
 14534  002DC0                     l1942:
 14535                           
 14536                           ; BSR set to: 0
 14537  002DC0  5199               	movf	___fladd@aexp& (0+255),w,b
 14538  002DC2  5D9A               	subwf	___fladd@bexp& (0+255),w,b
 14539  002DC4  A0D8               	btfss	status,0,c
 14540  002DC6  D7EB               	goto	l1943
 14541  002DC8                     u14540:
 14542                           
 14543                           ; BSR set to: 0
 14544  002DC8  BD98               	btfsc	___fladd@signs& (0+255),6,b
 14545  002DCA  D028               	goto	l12795
 14546                           
 14547                           ; BSR set to: 0
 14548  002DCC  519A               	movf	___fladd@bexp& (0+255),w,b
 14549  002DCE  A4D8               	btfss	status,2,c
 14550  002DD0  D009               	goto	l12777
 14551                           
 14552                           ; BSR set to: 0
 14553  002DD2  0E00               	movlw	0
 14554  002DD4  6F8C               	movwf	?___fladd& (0+255),b
 14555  002DD6  0E00               	movlw	0
 14556  002DD8  6F8D               	movwf	(?___fladd+1)& (0+255),b
 14557  002DDA  0E00               	movlw	0
 14558  002DDC  6F8E               	movwf	(?___fladd+2)& (0+255),b
 14559  002DDE  0E00               	movlw	0
 14560  002DE0  6F8F               	movwf	(?___fladd+3)& (0+255),b
 14561  002DE2  0012               	return	
 14562  002DE4                     l12777:
 14563                           
 14564                           ; BSR set to: 0
 14565  002DE4  5190               	movf	___fladd@a& (0+255),w,b
 14566  002DE6  278C               	addwf	___fladd@b& (0+255),f,b
 14567  002DE8  5191               	movf	(___fladd@a+1)& (0+255),w,b
 14568  002DEA  238D               	addwfc	(___fladd@b+1)& (0+255),f,b
 14569  002DEC  5192               	movf	(___fladd@a+2)& (0+255),w,b
 14570  002DEE  238E               	addwfc	(___fladd@b+2)& (0+255),f,b
 14571  002DF0  5193               	movf	(___fladd@a+3)& (0+255),w,b
 14572  002DF2  238F               	addwfc	(___fladd@b+3)& (0+255),f,b
 14573                           
 14574                           ; BSR set to: 0
 14575  002DF4  A18F               	btfss	(___fladd@b+3)& (0+255),0,b
 14576  002DF6  D071               	goto	u14670
 14577                           
 14578                           ; BSR set to: 0
 14579  002DF8  A19B               	btfss	___fladd@grs& (0+255),0,b
 14580  002DFA  D005               	goto	l12785
 14581                           
 14582                           ; BSR set to: 0
 14583  002DFC  90D8               	bcf	status,0,c
 14584  002DFE  319B               	rrcf	___fladd@grs& (0+255),w,b
 14585  002E00  0901               	iorlw	1
 14586  002E02  6F9B               	movwf	___fladd@grs& (0+255),b
 14587  002E04  D002               	goto	l12787
 14588  002E06                     l12785:
 14589                           
 14590                           ; BSR set to: 0
 14591  002E06  90D8               	bcf	status,0,c
 14592  002E08  339B               	rrcf	___fladd@grs& (0+255),f,b
 14593  002E0A                     l12787:
 14594                           
 14595                           ; BSR set to: 0
 14596  002E0A  B18C               	btfsc	___fladd@b& (0+255),0,b
 14597                           
 14598                           ; BSR set to: 0
 14599  002E0C  8F9B               	bsf	___fladd@grs& (0+255),7,b
 14600                           
 14601                           ; BSR set to: 0
 14602  002E0E  358F               	rlcf	(___fladd@b+3)& (0+255),w,b
 14603  002E10  338F               	rrcf	(___fladd@b+3)& (0+255),f,b
 14604  002E12  338E               	rrcf	(___fladd@b+2)& (0+255),f,b
 14605  002E14  338D               	rrcf	(___fladd@b+1)& (0+255),f,b
 14606  002E16  338C               	rrcf	___fladd@b& (0+255),f,b
 14607                           
 14608                           ; BSR set to: 0
 14609  002E18  2B9A               	incf	___fladd@bexp& (0+255),f,b
 14610  002E1A  D05F               	goto	u14670
 14611  002E1C                     l12795:
 14612                           
 14613                           ; BSR set to: 0
 14614  002E1C  5190               	movf	___fladd@a& (0+255),w,b
 14615  002E1E  5D8C               	subwf	___fladd@b& (0+255),w,b
 14616  002E20  5191               	movf	(___fladd@a+1)& (0+255),w,b
 14617  002E22  598D               	subwfb	(___fladd@b+1)& (0+255),w,b
 14618  002E24  5192               	movf	(___fladd@a+2)& (0+255),w,b
 14619  002E26  598E               	subwfb	(___fladd@b+2)& (0+255),w,b
 14620  002E28  518F               	movf	(___fladd@b+3)& (0+255),w,b
 14621  002E2A  0A80               	xorlw	128
 14622  002E2C  6F94               	movwf	??___fladd& (0+255),b
 14623  002E2E  5193               	movf	(___fladd@a+3)& (0+255),w,b
 14624  002E30  0A80               	xorlw	128
 14625  002E32  5994               	subwfb	??___fladd& (0+255),w,b
 14626  002E34  B0D8               	btfsc	status,0,c
 14627  002E36  D025               	goto	l12805
 14628                           
 14629                           ; BSR set to: 0
 14630  002E38  518C               	movf	___fladd@b& (0+255),w,b
 14631  002E3A  5D90               	subwf	___fladd@a& (0+255),w,b
 14632  002E3C  6F94               	movwf	??___fladd& (0+255),b
 14633  002E3E  518D               	movf	(___fladd@b+1)& (0+255),w,b
 14634  002E40  5991               	subwfb	(___fladd@a+1)& (0+255),w,b
 14635  002E42  6F95               	movwf	(??___fladd+1)& (0+255),b
 14636  002E44  518E               	movf	(___fladd@b+2)& (0+255),w,b
 14637  002E46  5992               	subwfb	(___fladd@a+2)& (0+255),w,b
 14638  002E48  6F96               	movwf	(??___fladd+2)& (0+255),b
 14639  002E4A  518F               	movf	(___fladd@b+3)& (0+255),w,b
 14640  002E4C  5993               	subwfb	(___fladd@a+3)& (0+255),w,b
 14641  002E4E  6F97               	movwf	(??___fladd+3)& (0+255),b
 14642  002E50  0EFF               	movlw	255
 14643  002E52  2594               	addwf	??___fladd& (0+255),w,b
 14644  002E54  6F8C               	movwf	___fladd@b& (0+255),b
 14645  002E56  0EFF               	movlw	255
 14646  002E58  2195               	addwfc	(??___fladd+1)& (0+255),w,b
 14647  002E5A  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 14648  002E5C  0EFF               	movlw	255
 14649  002E5E  2196               	addwfc	(??___fladd+2)& (0+255),w,b
 14650  002E60  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 14651  002E62  0EFF               	movlw	255
 14652  002E64  2197               	addwfc	(??___fladd+3)& (0+255),w,b
 14653  002E66  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 14654  002E68  0E80               	movlw	128
 14655  002E6A  1B98               	xorwf	___fladd@signs& (0+255),f,b
 14656                           
 14657                           ; BSR set to: 0
 14658  002E6C  6D9B               	negf	___fladd@grs& (0+255),b
 14659                           
 14660                           ; BSR set to: 0
 14661  002E6E  519B               	movf	___fladd@grs& (0+255),w,b
 14662  002E70  A4D8               	btfss	status,2,c
 14663  002E72  D00F               	goto	l1958
 14664                           
 14665                           ; BSR set to: 0
 14666  002E74  0E01               	movlw	1
 14667  002E76  278C               	addwf	___fladd@b& (0+255),f,b
 14668  002E78  0E00               	movlw	0
 14669  002E7A  238D               	addwfc	(___fladd@b+1)& (0+255),f,b
 14670  002E7C  238E               	addwfc	(___fladd@b+2)& (0+255),f,b
 14671  002E7E  238F               	addwfc	(___fladd@b+3)& (0+255),f,b
 14672  002E80  D008               	goto	l1958
 14673  002E82                     l12805:
 14674                           
 14675                           ; BSR set to: 0
 14676  002E82  5190               	movf	___fladd@a& (0+255),w,b
 14677  002E84  5F8C               	subwf	___fladd@b& (0+255),f,b
 14678  002E86  5191               	movf	(___fladd@a+1)& (0+255),w,b
 14679  002E88  5B8D               	subwfb	(___fladd@b+1)& (0+255),f,b
 14680  002E8A  5192               	movf	(___fladd@a+2)& (0+255),w,b
 14681  002E8C  5B8E               	subwfb	(___fladd@b+2)& (0+255),f,b
 14682  002E8E  5193               	movf	(___fladd@a+3)& (0+255),w,b
 14683  002E90  5B8F               	subwfb	(___fladd@b+3)& (0+255),f,b
 14684  002E92                     l1958:
 14685                           
 14686                           ; BSR set to: 0
 14687  002E92  518C               	movf	___fladd@b& (0+255),w,b
 14688  002E94  118D               	iorwf	(___fladd@b+1)& (0+255),w,b
 14689  002E96  118E               	iorwf	(___fladd@b+2)& (0+255),w,b
 14690  002E98  118F               	iorwf	(___fladd@b+3)& (0+255),w,b
 14691  002E9A  A4D8               	btfss	status,2,c
 14692  002E9C  D01C               	goto	l12829
 14693                           
 14694                           ; BSR set to: 0
 14695  002E9E  519B               	movf	___fladd@grs& (0+255),w,b
 14696  002EA0  A4D8               	btfss	status,2,c
 14697  002EA2  D019               	goto	l12829
 14698                           
 14699                           ; BSR set to: 0
 14700  002EA4  0E00               	movlw	0
 14701  002EA6  6F8C               	movwf	?___fladd& (0+255),b
 14702  002EA8  0E00               	movlw	0
 14703  002EAA  6F8D               	movwf	(?___fladd+1)& (0+255),b
 14704  002EAC  0E00               	movlw	0
 14705  002EAE  6F8E               	movwf	(?___fladd+2)& (0+255),b
 14706  002EB0  0E00               	movlw	0
 14707  002EB2  6F8F               	movwf	(?___fladd+3)& (0+255),b
 14708  002EB4  0012               	return	
 14709  002EB6                     l12813:
 14710                           
 14711                           ; BSR set to: 0
 14712  002EB6  90D8               	bcf	status,0,c
 14713  002EB8  378C               	rlcf	___fladd@b& (0+255),f,b
 14714  002EBA  378D               	rlcf	(___fladd@b+1)& (0+255),f,b
 14715  002EBC  378E               	rlcf	(___fladd@b+2)& (0+255),f,b
 14716  002EBE  378F               	rlcf	(___fladd@b+3)& (0+255),f,b
 14717                           
 14718                           ; BSR set to: 0
 14719  002EC0  BF9B               	btfsc	___fladd@grs& (0+255),7,b
 14720                           
 14721                           ; BSR set to: 0
 14722  002EC2  818C               	bsf	___fladd@b& (0+255),0,b
 14723                           
 14724                           ; BSR set to: 0
 14725  002EC4  A19B               	btfss	___fladd@grs& (0+255),0,b
 14726  002EC6  D002               	goto	l12823
 14727                           
 14728                           ; BSR set to: 0
 14729  002EC8  80D8               	bsf	status,0,c
 14730  002ECA  D001               	goto	L15
 14731  002ECC                     l12823:
 14732                           
 14733                           ; BSR set to: 0
 14734  002ECC  90D8               	bcf	status,0,c
 14735  002ECE                     L15:
 14736  002ECE  379B               	rlcf	___fladd@grs& (0+255),f,b
 14737                           
 14738                           ; BSR set to: 0
 14739  002ED0  519A               	movf	___fladd@bexp& (0+255),w,b
 14740  002ED2  A4D8               	btfss	status,2,c
 14741                           
 14742                           ; BSR set to: 0
 14743  002ED4  079A               	decf	___fladd@bexp& (0+255),f,b
 14744  002ED6                     l12829:
 14745                           
 14746                           ; BSR set to: 0
 14747  002ED6  AF8E               	btfss	(___fladd@b+2)& (0+255),7,b
 14748  002ED8  D7EE               	goto	l12813
 14749  002EDA                     u14670:
 14750                           
 14751                           ; BSR set to: 0
 14752  002EDA  0E00               	movlw	0
 14753  002EDC  6F99               	movwf	___fladd@aexp& (0+255),b
 14754                           
 14755                           ; BSR set to: 0
 14756  002EDE  AF9B               	btfss	___fladd@grs& (0+255),7,b
 14757  002EE0  D00B               	goto	l1967
 14758                           
 14759                           ; BSR set to: 0
 14760  002EE2  C09B  F094         	movff	___fladd@grs,??___fladd
 14761  002EE6  0E7F               	movlw	127
 14762  002EE8  1794               	andwf	??___fladd& (0+255),f,b
 14763  002EEA  B4D8               	btfsc	status,2,c
 14764  002EEC  D003               	goto	l1968
 14765  002EEE                     u14690:
 14766                           
 14767                           ; BSR set to: 0
 14768  002EEE  0E01               	movlw	1
 14769  002EF0  6F99               	movwf	___fladd@aexp& (0+255),b
 14770  002EF2  D002               	goto	l1967
 14771  002EF4                     l1968:
 14772                           
 14773                           ; BSR set to: 0
 14774  002EF4  B18C               	btfsc	___fladd@b& (0+255),0,b
 14775  002EF6  D7FB               	goto	u14690
 14776  002EF8                     l1967:
 14777                           
 14778                           ; BSR set to: 0
 14779  002EF8  5199               	movf	___fladd@aexp& (0+255),w,b
 14780  002EFA  B4D8               	btfsc	status,2,c
 14781  002EFC  D020               	goto	l12849
 14782                           
 14783                           ; BSR set to: 0
 14784  002EFE  0E01               	movlw	1
 14785  002F00  278C               	addwf	___fladd@b& (0+255),f,b
 14786  002F02  0E00               	movlw	0
 14787  002F04  238D               	addwfc	(___fladd@b+1)& (0+255),f,b
 14788  002F06  238E               	addwfc	(___fladd@b+2)& (0+255),f,b
 14789  002F08  238F               	addwfc	(___fladd@b+3)& (0+255),f,b
 14790                           
 14791                           ; BSR set to: 0
 14792  002F0A  A18F               	btfss	(___fladd@b+3)& (0+255),0,b
 14793  002F0C  D018               	goto	l12849
 14794                           
 14795                           ; BSR set to: 0
 14796  002F0E  C08C  F094         	movff	___fladd@b,??___fladd
 14797  002F12  C08D  F095         	movff	___fladd@b+1,??___fladd+1
 14798  002F16  C08E  F096         	movff	___fladd@b+2,??___fladd+2
 14799  002F1A  C08F  F097         	movff	___fladd@b+3,??___fladd+3
 14800  002F1E  3597               	rlcf	(??___fladd+3)& (0+255),w,b
 14801  002F20  3397               	rrcf	(??___fladd+3)& (0+255),f,b
 14802  002F22  3396               	rrcf	(??___fladd+2)& (0+255),f,b
 14803  002F24  3395               	rrcf	(??___fladd+1)& (0+255),f,b
 14804  002F26  3394               	rrcf	??___fladd& (0+255),f,b
 14805  002F28  C094  F08C         	movff	??___fladd,___fladd@b
 14806  002F2C  C095  F08D         	movff	??___fladd+1,___fladd@b+1
 14807  002F30  C096  F08E         	movff	??___fladd+2,___fladd@b+2
 14808  002F34  C097  F08F         	movff	??___fladd+3,___fladd@b+3
 14809  002F38  299A               	incf	___fladd@bexp& (0+255),w,b
 14810  002F3A  A4D8               	btfss	status,2,c
 14811                           
 14812                           ; BSR set to: 0
 14813  002F3C  2B9A               	incf	___fladd@bexp& (0+255),f,b
 14814  002F3E                     l12849:
 14815                           
 14816                           ; BSR set to: 0
 14817  002F3E  299A               	incf	___fladd@bexp& (0+255),w,b
 14818  002F40  B4D8               	btfsc	status,2,c
 14819  002F42  D003               	goto	u14750
 14820                           
 14821                           ; BSR set to: 0
 14822  002F44  519A               	movf	___fladd@bexp& (0+255),w,b
 14823  002F46  A4D8               	btfss	status,2,c
 14824  002F48  D00D               	goto	l12857
 14825  002F4A                     u14750:
 14826                           
 14827                           ; BSR set to: 0
 14828  002F4A  0E00               	movlw	0
 14829  002F4C  6F8C               	movwf	___fladd@b& (0+255),b
 14830  002F4E  0E00               	movlw	0
 14831  002F50  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 14832  002F52  0E00               	movlw	0
 14833  002F54  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 14834  002F56  0E00               	movlw	0
 14835  002F58  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 14836  002F5A  519A               	movf	___fladd@bexp& (0+255),w,b
 14837  002F5C  A4D8               	btfss	status,2,c
 14838  002F5E  D002               	goto	l12857
 14839                           
 14840                           ; BSR set to: 0
 14841  002F60  0E00               	movlw	0
 14842  002F62  6F98               	movwf	___fladd@signs& (0+255),b
 14843  002F64                     l12857:
 14844                           
 14845                           ; BSR set to: 0
 14846  002F64  A19A               	btfss	___fladd@bexp& (0+255),0,b
 14847  002F66  D002               	goto	l12861
 14848                           
 14849                           ; BSR set to: 0
 14850  002F68  8F8E               	bsf	(___fladd@b+2)& (0+255),7,b
 14851  002F6A  D001               	goto	l12863
 14852  002F6C                     l12861:
 14853                           
 14854                           ; BSR set to: 0
 14855  002F6C  9F8E               	bcf	(___fladd@b+2)& (0+255),7,b
 14856  002F6E                     l12863:
 14857                           
 14858                           ; BSR set to: 0
 14859  002F6E  90D8               	bcf	status,0,c
 14860  002F70  319A               	rrcf	___fladd@bexp& (0+255),w,b
 14861  002F72  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 14862                           
 14863                           ; BSR set to: 0
 14864  002F74  BF98               	btfsc	___fladd@signs& (0+255),7,b
 14865                           
 14866                           ; BSR set to: 0
 14867  002F76  8F8F               	bsf	(___fladd@b+3)& (0+255),7,b
 14868                           
 14869                           ; BSR set to: 0
 14870  002F78  C08C  F08C         	movff	___fladd@b,?___fladd
 14871  002F7C  C08D  F08D         	movff	___fladd@b+1,?___fladd+1
 14872  002F80  C08E  F08E         	movff	___fladd@b+2,?___fladd+2
 14873  002F84  C08F  F08F         	movff	___fladd@b+3,?___fladd+3
 14874                           
 14875                           ; BSR set to: 0
 14876  002F88  0012               	return		;funcret
 14877  002F8A                     __end_of___fladd:
 14878                           	callstack 0
 14879                           
 14880 ;; *************** function ___flneg *****************
 14881 ;; Defined at:
 14882 ;;		line 15 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
 14883 ;; Parameters:    Size  Location     Type
 14884 ;;  f1              4   44[BANK0 ] unsigned char 
 14885 ;; Auto vars:     Size  Location     Type
 14886 ;;		None
 14887 ;; Return value:  Size  Location     Type
 14888 ;;                  4   44[BANK0 ] unsigned char 
 14889 ;; Registers used:
 14890 ;;		wreg, status,2, status,0
 14891 ;; Tracked objects:
 14892 ;;		On entry : 3F/1
 14893 ;;		On exit  : 3F/0
 14894 ;;		Unchanged: 0/0
 14895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14896 ;;      Params:         0       4       0       0       0       0       0       0       0
 14897 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14899 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14900 ;;Total ram usage:        4 bytes
 14901 ;; Hardware stack levels used: 1
 14902 ;; Hardware stack levels required when called: 10
 14903 ;; This function calls:
 14904 ;;		Nothing
 14905 ;; This function is called by:
 14906 ;;		_mover_2
 14907 ;;		_efgtoa
 14908 ;;		_strtof
 14909 ;; This function uses a non-reentrant model
 14910 ;;
 14911                           
 14912                           	psect	text68
 14913  000114                     __ptext68:
 14914                           	callstack 0
 14915  000114                     ___flneg:
 14916                           	callstack 16
 14917                           
 14918                           ; BSR set to: 1
 14919                           
 14920                           ; BSR set to: 0
 14921                           ;incstack = 0
 14922  000114  0100               	movlb	0	; () banked
 14923  000116  518C               	movf	___flneg@f1& (0+255),w,b
 14924  000118  118D               	iorwf	(___flneg@f1+1)& (0+255),w,b
 14925  00011A  118E               	iorwf	(___flneg@f1+2)& (0+255),w,b
 14926  00011C  118F               	iorwf	(___flneg@f1+3)& (0+255),w,b
 14927  00011E  B4D8               	btfsc	status,2,c
 14928  000120  D008               	goto	l13371
 14929                           
 14930                           ; BSR set to: 0
 14931  000122  0E00               	movlw	0
 14932  000124  1B8C               	xorwf	___flneg@f1& (0+255),f,b
 14933  000126  0E00               	movlw	0
 14934  000128  1B8D               	xorwf	(___flneg@f1+1)& (0+255),f,b
 14935  00012A  0E00               	movlw	0
 14936  00012C  1B8E               	xorwf	(___flneg@f1+2)& (0+255),f,b
 14937  00012E  0E80               	movlw	128
 14938  000130  1B8F               	xorwf	(___flneg@f1+3)& (0+255),f,b
 14939  000132                     l13371:
 14940                           
 14941                           ; BSR set to: 0
 14942  000132  C08C  F08C         	movff	___flneg@f1,?___flneg
 14943  000136  C08D  F08D         	movff	___flneg@f1+1,?___flneg+1
 14944  00013A  C08E  F08E         	movff	___flneg@f1+2,?___flneg+2
 14945  00013E  C08F  F08F         	movff	___flneg@f1+3,?___flneg+3
 14946                           
 14947                           ; BSR set to: 0
 14948  000142  0012               	return		;funcret
 14949  000144                     __end_of___flneg:
 14950                           	callstack 0
 14951                           
 14952 ;; *************** function ___flmul *****************
 14953 ;; Defined at:
 14954 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 14955 ;; Parameters:    Size  Location     Type
 14956 ;;  b               4   58[BANK0 ] unsigned char 
 14957 ;;  a               4   62[BANK0 ] unsigned char 
 14958 ;; Auto vars:     Size  Location     Type
 14959 ;;  prod            4    7[BANK1 ] struct .
 14960 ;;  grs             4    3[BANK1 ] unsigned long 
 14961 ;;  temp            2   11[BANK1 ] struct .
 14962 ;;  bexp            1    2[BANK1 ] unsigned char 
 14963 ;;  aexp            1    1[BANK1 ] unsigned char 
 14964 ;;  sign            1    0[BANK1 ] unsigned char 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  4   58[BANK0 ] unsigned char 
 14967 ;; Registers used:
 14968 ;;		wreg, status,2, status,0, prodl, prodh
 14969 ;; Tracked objects:
 14970 ;;		On entry : 3E/0
 14971 ;;		On exit  : 3E/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14974 ;;      Params:         0       8       0       0       0       0       0       0       0
 14975 ;;      Locals:         0       0      13       0       0       0       0       0       0
 14976 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14977 ;;      Totals:         0      12      13       0       0       0       0       0       0
 14978 ;;Total ram usage:       25 bytes
 14979 ;; Hardware stack levels used: 1
 14980 ;; Hardware stack levels required when called: 10
 14981 ;; This function calls:
 14982 ;;		Nothing
 14983 ;; This function is called by:
 14984 ;;		_mover_2
 14985 ;;		_efgtoa
 14986 ;;		_strtof
 14987 ;; This function uses a non-reentrant model
 14988 ;;
 14989                           
 14990                           	psect	text69
 14991  0025A0                     __ptext69:
 14992                           	callstack 0
 14993  0025A0                     ___flmul:
 14994                           	callstack 16
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;incstack = 0
 14998  0025A0  0100               	movlb	0	; () banked
 14999  0025A2  519D               	movf	(___flmul@b+3)& (0+255),w,b
 15000  0025A4  0B80               	andlw	128
 15001  0025A6  0101               	movlb	1	; () banked
 15002  0025A8  6F00               	movwf	___flmul@sign& (0+255),b
 15003  0025AA  0100               	movlb	0	; () banked
 15004  0025AC  519D               	movf	(___flmul@b+3)& (0+255),w,b
 15005  0025AE  259D               	addwf	(___flmul@b+3)& (0+255),w,b
 15006  0025B0  0101               	movlb	1	; () banked
 15007  0025B2  6F02               	movwf	___flmul@bexp& (0+255),b
 15008                           
 15009                           ; BSR set to: 1
 15010  0025B4  0100               	movlb	0	; () banked
 15011  0025B6  AF9C               	btfss	(___flmul@b+2)& (0+255),7,b
 15012  0025B8  D002               	goto	l13119
 15013                           
 15014                           ; BSR set to: 0
 15015  0025BA  0101               	movlb	1	; () banked
 15016  0025BC  8102               	bsf	___flmul@bexp& (0+255),0,b
 15017  0025BE                     l13119:
 15018  0025BE  0101               	movlb	1	; () banked
 15019  0025C0  5102               	movf	___flmul@bexp& (0+255),w,b
 15020  0025C2  B4D8               	btfsc	status,2,c
 15021  0025C4  D00F               	goto	l13127
 15022                           
 15023                           ; BSR set to: 1
 15024  0025C6  2902               	incf	___flmul@bexp& (0+255),w,b
 15025  0025C8  A4D8               	btfss	status,2,c
 15026  0025CA  D009               	goto	l13125
 15027                           
 15028                           ; BSR set to: 1
 15029  0025CC  0E00               	movlw	0
 15030  0025CE  0100               	movlb	0	; () banked
 15031  0025D0  6F9A               	movwf	___flmul@b& (0+255),b
 15032  0025D2  0E00               	movlw	0
 15033  0025D4  6F9B               	movwf	(___flmul@b+1)& (0+255),b
 15034  0025D6  0E00               	movlw	0
 15035  0025D8  6F9C               	movwf	(___flmul@b+2)& (0+255),b
 15036  0025DA  0E00               	movlw	0
 15037  0025DC  6F9D               	movwf	(___flmul@b+3)& (0+255),b
 15038  0025DE                     l13125:
 15039  0025DE  0100               	movlb	0	; () banked
 15040  0025E0  8F9C               	bsf	(___flmul@b+2)& (0+255),7,b
 15041  0025E2  D009               	goto	l13129
 15042  0025E4                     l13127:
 15043                           
 15044                           ; BSR set to: 1
 15045  0025E4  0E00               	movlw	0
 15046  0025E6  0100               	movlb	0	; () banked
 15047  0025E8  6F9A               	movwf	___flmul@b& (0+255),b
 15048  0025EA  0E00               	movlw	0
 15049  0025EC  6F9B               	movwf	(___flmul@b+1)& (0+255),b
 15050  0025EE  0E00               	movlw	0
 15051  0025F0  6F9C               	movwf	(___flmul@b+2)& (0+255),b
 15052  0025F2  0E00               	movlw	0
 15053  0025F4  6F9D               	movwf	(___flmul@b+3)& (0+255),b
 15054  0025F6                     l13129:
 15055                           
 15056                           ; BSR set to: 0
 15057  0025F6  51A1               	movf	(___flmul@a+3)& (0+255),w,b
 15058  0025F8  0B80               	andlw	128
 15059  0025FA  0101               	movlb	1	; () banked
 15060  0025FC  1B00               	xorwf	___flmul@sign& (0+255),f,b
 15061                           
 15062                           ; BSR set to: 1
 15063  0025FE  0100               	movlb	0	; () banked
 15064  002600  51A1               	movf	(___flmul@a+3)& (0+255),w,b
 15065  002602  25A1               	addwf	(___flmul@a+3)& (0+255),w,b
 15066  002604  0101               	movlb	1	; () banked
 15067  002606  6F01               	movwf	___flmul@aexp& (0+255),b
 15068                           
 15069                           ; BSR set to: 1
 15070  002608  0100               	movlb	0	; () banked
 15071  00260A  AFA0               	btfss	(___flmul@a+2)& (0+255),7,b
 15072  00260C  D002               	goto	l13137
 15073                           
 15074                           ; BSR set to: 0
 15075  00260E  0101               	movlb	1	; () banked
 15076  002610  8101               	bsf	___flmul@aexp& (0+255),0,b
 15077  002612                     l13137:
 15078  002612  0101               	movlb	1	; () banked
 15079  002614  5101               	movf	___flmul@aexp& (0+255),w,b
 15080  002616  B4D8               	btfsc	status,2,c
 15081  002618  D00F               	goto	l13145
 15082                           
 15083                           ; BSR set to: 1
 15084  00261A  2901               	incf	___flmul@aexp& (0+255),w,b
 15085  00261C  A4D8               	btfss	status,2,c
 15086  00261E  D009               	goto	l13143
 15087                           
 15088                           ; BSR set to: 1
 15089  002620  0E00               	movlw	0
 15090  002622  0100               	movlb	0	; () banked
 15091  002624  6F9E               	movwf	___flmul@a& (0+255),b
 15092  002626  0E00               	movlw	0
 15093  002628  6F9F               	movwf	(___flmul@a+1)& (0+255),b
 15094  00262A  0E00               	movlw	0
 15095  00262C  6FA0               	movwf	(___flmul@a+2)& (0+255),b
 15096  00262E  0E00               	movlw	0
 15097  002630  6FA1               	movwf	(___flmul@a+3)& (0+255),b
 15098  002632                     l13143:
 15099  002632  0100               	movlb	0	; () banked
 15100  002634  8FA0               	bsf	(___flmul@a+2)& (0+255),7,b
 15101  002636  D009               	goto	l2027
 15102  002638                     l13145:
 15103                           
 15104                           ; BSR set to: 1
 15105  002638  0E00               	movlw	0
 15106  00263A  0100               	movlb	0	; () banked
 15107  00263C  6F9E               	movwf	___flmul@a& (0+255),b
 15108  00263E  0E00               	movlw	0
 15109  002640  6F9F               	movwf	(___flmul@a+1)& (0+255),b
 15110  002642  0E00               	movlw	0
 15111  002644  6FA0               	movwf	(___flmul@a+2)& (0+255),b
 15112  002646  0E00               	movlw	0
 15113  002648  6FA1               	movwf	(___flmul@a+3)& (0+255),b
 15114  00264A                     l2027:
 15115                           
 15116                           ; BSR set to: 0
 15117  00264A  0101               	movlb	1	; () banked
 15118  00264C  5101               	movf	___flmul@aexp& (0+255),w,b
 15119  00264E  B4D8               	btfsc	status,2,c
 15120  002650  D003               	goto	u15270
 15121                           
 15122                           ; BSR set to: 1
 15123  002652  5102               	movf	___flmul@bexp& (0+255),w,b
 15124  002654  A4D8               	btfss	status,2,c
 15125  002656  D00A               	goto	l13153
 15126  002658                     u15270:
 15127                           
 15128                           ; BSR set to: 1
 15129  002658  0E00               	movlw	0
 15130  00265A  0100               	movlb	0	; () banked
 15131  00265C  6F9A               	movwf	?___flmul& (0+255),b
 15132  00265E  0E00               	movlw	0
 15133  002660  6F9B               	movwf	(?___flmul+1)& (0+255),b
 15134  002662  0E00               	movlw	0
 15135  002664  6F9C               	movwf	(?___flmul+2)& (0+255),b
 15136  002666  0E00               	movlw	0
 15137  002668  6F9D               	movwf	(?___flmul+3)& (0+255),b
 15138  00266A  0012               	return	
 15139  00266C                     l13153:
 15140                           
 15141                           ; BSR set to: 1
 15142  00266C  0100               	movlb	0	; () banked
 15143  00266E  51A0               	movf	(___flmul@a+2)& (0+255),w,b
 15144  002670  039A               	mulwf	___flmul@b& (0+255),b
 15145  002672  CFF3 F10B          	movff	prodl,___flmul@temp
 15146  002676  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15147                           
 15148                           ; BSR set to: 0
 15149  00267A  0101               	movlb	1	; () banked
 15150  00267C  510B               	movf	___flmul@temp& (0+255),w,b
 15151  00267E  6F03               	movwf	___flmul@grs& (0+255),b
 15152  002680  6B04               	clrf	(___flmul@grs+1)& (0+255),b
 15153  002682  6B05               	clrf	(___flmul@grs+2)& (0+255),b
 15154  002684  6B06               	clrf	(___flmul@grs+3)& (0+255),b
 15155                           
 15156                           ; BSR set to: 1
 15157  002686  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15158  002688  6F07               	movwf	___flmul@prod& (0+255),b
 15159  00268A  6B08               	clrf	(___flmul@prod+1)& (0+255),b
 15160  00268C  6B09               	clrf	(___flmul@prod+2)& (0+255),b
 15161  00268E  6B0A               	clrf	(___flmul@prod+3)& (0+255),b
 15162  002690  0100               	movlb	0	; () banked
 15163  002692  519F               	movf	(___flmul@a+1)& (0+255),w,b
 15164  002694  039B               	mulwf	(___flmul@b+1)& (0+255),b
 15165  002696  CFF3 F10B          	movff	prodl,___flmul@temp
 15166  00269A  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15167                           
 15168                           ; BSR set to: 0
 15169  00269E  0101               	movlb	1	; () banked
 15170  0026A0  510B               	movf	___flmul@temp& (0+255),w,b
 15171  0026A2  2703               	addwf	___flmul@grs& (0+255),f,b
 15172  0026A4  0E00               	movlw	0
 15173  0026A6  2304               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15174  0026A8  2305               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15175  0026AA  2306               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15176                           
 15177                           ; BSR set to: 1
 15178  0026AC  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15179  0026AE  2707               	addwf	___flmul@prod& (0+255),f,b
 15180  0026B0  0E00               	movlw	0
 15181  0026B2  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15182  0026B4  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15183  0026B6  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15184  0026B8  0100               	movlb	0	; () banked
 15185  0026BA  519E               	movf	___flmul@a& (0+255),w,b
 15186  0026BC  039C               	mulwf	(___flmul@b+2)& (0+255),b
 15187  0026BE  CFF3 F10B          	movff	prodl,___flmul@temp
 15188  0026C2  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15189                           
 15190                           ; BSR set to: 0
 15191  0026C6  0101               	movlb	1	; () banked
 15192  0026C8  510B               	movf	___flmul@temp& (0+255),w,b
 15193  0026CA  2703               	addwf	___flmul@grs& (0+255),f,b
 15194  0026CC  0E00               	movlw	0
 15195  0026CE  2304               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15196  0026D0  2305               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15197  0026D2  2306               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15198                           
 15199                           ; BSR set to: 1
 15200  0026D4  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15201  0026D6  2707               	addwf	___flmul@prod& (0+255),f,b
 15202  0026D8  0E00               	movlw	0
 15203  0026DA  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15204  0026DC  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15205  0026DE  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15206                           
 15207                           ; BSR set to: 1
 15208  0026E0  C105  F106         	movff	___flmul@grs+2,___flmul@grs+3
 15209  0026E4  C104  F105         	movff	___flmul@grs+1,___flmul@grs+2
 15210  0026E8  C103  F104         	movff	___flmul@grs,___flmul@grs+1
 15211  0026EC  6B03               	clrf	___flmul@grs& (0+255),b
 15212                           
 15213                           ; BSR set to: 1
 15214  0026EE  0100               	movlb	0	; () banked
 15215  0026F0  519E               	movf	___flmul@a& (0+255),w,b
 15216  0026F2  039B               	mulwf	(___flmul@b+1)& (0+255),b
 15217  0026F4  CFF3 F10B          	movff	prodl,___flmul@temp
 15218  0026F8  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15219                           
 15220                           ; BSR set to: 0
 15221  0026FC  0101               	movlb	1	; () banked
 15222  0026FE  510B               	movf	___flmul@temp& (0+255),w,b
 15223  002700  2703               	addwf	___flmul@grs& (0+255),f,b
 15224  002702  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15225  002704  2304               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15226  002706  0E00               	movlw	0
 15227  002708  2305               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15228  00270A  0E00               	movlw	0
 15229  00270C  2306               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15230                           
 15231                           ; BSR set to: 1
 15232  00270E  0100               	movlb	0	; () banked
 15233  002710  519F               	movf	(___flmul@a+1)& (0+255),w,b
 15234  002712  039A               	mulwf	___flmul@b& (0+255),b
 15235  002714  CFF3 F10B          	movff	prodl,___flmul@temp
 15236  002718  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15237                           
 15238                           ; BSR set to: 0
 15239  00271C  0101               	movlb	1	; () banked
 15240  00271E  510B               	movf	___flmul@temp& (0+255),w,b
 15241  002720  2703               	addwf	___flmul@grs& (0+255),f,b
 15242  002722  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15243  002724  2304               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15244  002726  0E00               	movlw	0
 15245  002728  2305               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15246  00272A  0E00               	movlw	0
 15247  00272C  2306               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15248                           
 15249                           ; BSR set to: 1
 15250  00272E  C105  F106         	movff	___flmul@grs+2,___flmul@grs+3
 15251  002732  C104  F105         	movff	___flmul@grs+1,___flmul@grs+2
 15252  002736  C103  F104         	movff	___flmul@grs,___flmul@grs+1
 15253  00273A  6B03               	clrf	___flmul@grs& (0+255),b
 15254  00273C  0100               	movlb	0	; () banked
 15255  00273E  519E               	movf	___flmul@a& (0+255),w,b
 15256  002740  039A               	mulwf	___flmul@b& (0+255),b
 15257  002742  CFF3 F10B          	movff	prodl,___flmul@temp
 15258  002746  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15259                           
 15260                           ; BSR set to: 0
 15261  00274A  0101               	movlb	1	; () banked
 15262  00274C  510B               	movf	___flmul@temp& (0+255),w,b
 15263  00274E  2703               	addwf	___flmul@grs& (0+255),f,b
 15264  002750  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15265  002752  2304               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15266  002754  0E00               	movlw	0
 15267  002756  2305               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15268  002758  0E00               	movlw	0
 15269  00275A  2306               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15270                           
 15271                           ; BSR set to: 1
 15272  00275C  0100               	movlb	0	; () banked
 15273  00275E  51A0               	movf	(___flmul@a+2)& (0+255),w,b
 15274  002760  039B               	mulwf	(___flmul@b+1)& (0+255),b
 15275  002762  CFF3 F10B          	movff	prodl,___flmul@temp
 15276  002766  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15277  00276A  0101               	movlb	1	; () banked
 15278  00276C  510B               	movf	___flmul@temp& (0+255),w,b
 15279  00276E  2707               	addwf	___flmul@prod& (0+255),f,b
 15280  002770  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15281  002772  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15282  002774  0E00               	movlw	0
 15283  002776  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15284  002778  0E00               	movlw	0
 15285  00277A  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15286                           
 15287                           ; BSR set to: 1
 15288  00277C  0100               	movlb	0	; () banked
 15289  00277E  519F               	movf	(___flmul@a+1)& (0+255),w,b
 15290  002780  039C               	mulwf	(___flmul@b+2)& (0+255),b
 15291  002782  CFF3 F10B          	movff	prodl,___flmul@temp
 15292  002786  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15293                           
 15294                           ; BSR set to: 0
 15295  00278A  0101               	movlb	1	; () banked
 15296  00278C  510B               	movf	___flmul@temp& (0+255),w,b
 15297  00278E  2707               	addwf	___flmul@prod& (0+255),f,b
 15298  002790  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15299  002792  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15300  002794  0E00               	movlw	0
 15301  002796  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15302  002798  0E00               	movlw	0
 15303  00279A  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15304  00279C  0100               	movlb	0	; () banked
 15305  00279E  51A0               	movf	(___flmul@a+2)& (0+255),w,b
 15306  0027A0  039C               	mulwf	(___flmul@b+2)& (0+255),b
 15307  0027A2  CFF3 F10B          	movff	prodl,___flmul@temp
 15308  0027A6  CFF4 F10C          	movff	prodh,___flmul@temp+1
 15309                           
 15310                           ; BSR set to: 0
 15311  0027AA  0101               	movlb	1	; () banked
 15312  0027AC  510B               	movf	___flmul@temp& (0+255),w,b
 15313  0027AE  0100               	movlb	0	; () banked
 15314  0027B0  6FA2               	movwf	??___flmul& (0+255),b
 15315  0027B2  0101               	movlb	1	; () banked
 15316  0027B4  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15317  0027B6  0100               	movlb	0	; () banked
 15318  0027B8  6FA3               	movwf	(??___flmul+1)& (0+255),b
 15319  0027BA  6BA4               	clrf	(??___flmul+2)& (0+255),b
 15320  0027BC  6BA5               	clrf	(??___flmul+3)& (0+255),b
 15321  0027BE  C0A4  F0A5         	movff	??___flmul+2,??___flmul+3
 15322  0027C2  C0A3  F0A4         	movff	??___flmul+1,??___flmul+2
 15323  0027C6  C0A2  F0A3         	movff	??___flmul,??___flmul+1
 15324  0027CA  6BA2               	clrf	??___flmul& (0+255),b
 15325  0027CC  51A2               	movf	??___flmul& (0+255),w,b
 15326  0027CE  0101               	movlb	1	; () banked
 15327  0027D0  2707               	addwf	___flmul@prod& (0+255),f,b
 15328  0027D2  0100               	movlb	0	; () banked
 15329  0027D4  51A3               	movf	(??___flmul+1)& (0+255),w,b
 15330  0027D6  0101               	movlb	1	; () banked
 15331  0027D8  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15332  0027DA  0100               	movlb	0	; () banked
 15333  0027DC  51A4               	movf	(??___flmul+2)& (0+255),w,b
 15334  0027DE  0101               	movlb	1	; () banked
 15335  0027E0  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15336  0027E2  0100               	movlb	0	; () banked
 15337  0027E4  51A5               	movf	(??___flmul+3)& (0+255),w,b
 15338  0027E6  0101               	movlb	1	; () banked
 15339  0027E8  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15340                           
 15341                           ; BSR set to: 1
 15342  0027EA  5106               	movf	(___flmul@grs+3)& (0+255),w,b
 15343  0027EC  2707               	addwf	___flmul@prod& (0+255),f,b
 15344  0027EE  0E00               	movlw	0
 15345  0027F0  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15346  0027F2  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15347  0027F4  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15348                           
 15349                           ; BSR set to: 1
 15350  0027F6  C105  F106         	movff	___flmul@grs+2,___flmul@grs+3
 15351  0027FA  C104  F105         	movff	___flmul@grs+1,___flmul@grs+2
 15352  0027FE  C103  F104         	movff	___flmul@grs,___flmul@grs+1
 15353  002802  6B03               	clrf	___flmul@grs& (0+255),b
 15354                           
 15355                           ; BSR set to: 1
 15356  002804  5101               	movf	___flmul@aexp& (0+255),w,b
 15357  002806  C102  F0A2         	movff	___flmul@bexp,??___flmul
 15358  00280A  0100               	movlb	0	; () banked
 15359  00280C  6BA3               	clrf	(??___flmul+1)& (0+255),b
 15360  00280E  27A2               	addwf	??___flmul& (0+255),f,b
 15361  002810  0E00               	movlw	0
 15362  002812  23A3               	addwfc	(??___flmul+1)& (0+255),f,b
 15363  002814  0E82               	movlw	130
 15364  002816  25A2               	addwf	??___flmul& (0+255),w,b
 15365  002818  0101               	movlb	1	; () banked
 15366  00281A  6F0B               	movwf	___flmul@temp& (0+255),b
 15367  00281C  0EFF               	movlw	255
 15368  00281E  0100               	movlb	0	; () banked
 15369  002820  21A3               	addwfc	(??___flmul+1)& (0+255),w,b
 15370  002822  0101               	movlb	1	; () banked
 15371  002824  6F0C               	movwf	(___flmul@temp+1)& (0+255),b
 15372  002826  D00F               	goto	l13201
 15373  002828                     l13195:
 15374                           
 15375                           ; BSR set to: 1
 15376  002828  90D8               	bcf	status,0,c
 15377  00282A  3707               	rlcf	___flmul@prod& (0+255),f,b
 15378  00282C  3708               	rlcf	(___flmul@prod+1)& (0+255),f,b
 15379  00282E  3709               	rlcf	(___flmul@prod+2)& (0+255),f,b
 15380  002830  370A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 15381                           
 15382                           ; BSR set to: 1
 15383  002832  BF06               	btfsc	(___flmul@grs+3)& (0+255),7,b
 15384                           
 15385                           ; BSR set to: 1
 15386  002834  8107               	bsf	___flmul@prod& (0+255),0,b
 15387                           
 15388                           ; BSR set to: 1
 15389  002836  90D8               	bcf	status,0,c
 15390  002838  3703               	rlcf	___flmul@grs& (0+255),f,b
 15391  00283A  3704               	rlcf	(___flmul@grs+1)& (0+255),f,b
 15392  00283C  3705               	rlcf	(___flmul@grs+2)& (0+255),f,b
 15393  00283E  3706               	rlcf	(___flmul@grs+3)& (0+255),f,b
 15394  002840  070B               	decf	___flmul@temp& (0+255),f,b
 15395  002842  A0D8               	btfss	status,0,c
 15396  002844  070C               	decf	(___flmul@temp+1)& (0+255),f,b
 15397  002846                     l13201:
 15398                           
 15399                           ; BSR set to: 1
 15400  002846  AF09               	btfss	(___flmul@prod+2)& (0+255),7,b
 15401  002848  D7EF               	goto	l13195
 15402                           
 15403                           ; BSR set to: 1
 15404  00284A  0E00               	movlw	0
 15405  00284C  6F01               	movwf	___flmul@aexp& (0+255),b
 15406                           
 15407                           ; BSR set to: 1
 15408  00284E  AF06               	btfss	(___flmul@grs+3)& (0+255),7,b
 15409  002850  D020               	goto	l2036
 15410                           
 15411                           ; BSR set to: 1
 15412  002852  0EFF               	movlw	255
 15413  002854  1503               	andwf	___flmul@grs& (0+255),w,b
 15414  002856  0100               	movlb	0	; () banked
 15415  002858  6FA2               	movwf	??___flmul& (0+255),b
 15416  00285A  0EFF               	movlw	255
 15417  00285C  0101               	movlb	1	; () banked
 15418  00285E  1504               	andwf	(___flmul@grs+1)& (0+255),w,b
 15419  002860  0100               	movlb	0	; () banked
 15420  002862  6FA3               	movwf	(??___flmul+1)& (0+255),b
 15421  002864  0EFF               	movlw	255
 15422  002866  0101               	movlb	1	; () banked
 15423  002868  1505               	andwf	(___flmul@grs+2)& (0+255),w,b
 15424  00286A  0100               	movlb	0	; () banked
 15425  00286C  6FA4               	movwf	(??___flmul+2)& (0+255),b
 15426  00286E  0E7F               	movlw	127
 15427  002870  0101               	movlb	1	; () banked
 15428  002872  1506               	andwf	(___flmul@grs+3)& (0+255),w,b
 15429  002874  0100               	movlb	0	; () banked
 15430  002876  6FA5               	movwf	(??___flmul+3)& (0+255),b
 15431  002878  51A2               	movf	??___flmul& (0+255),w,b
 15432  00287A  11A3               	iorwf	(??___flmul+1)& (0+255),w,b
 15433  00287C  11A4               	iorwf	(??___flmul+2)& (0+255),w,b
 15434  00287E  11A5               	iorwf	(??___flmul+3)& (0+255),w,b
 15435  002880  B4D8               	btfsc	status,2,c
 15436  002882  D004               	goto	l2037
 15437  002884                     u15310:
 15438  002884  0E01               	movlw	1
 15439  002886  0101               	movlb	1	; () banked
 15440  002888  6F01               	movwf	___flmul@aexp& (0+255),b
 15441  00288A  D003               	goto	l2036
 15442  00288C                     l2037:
 15443                           
 15444                           ; BSR set to: 0
 15445  00288C  0101               	movlb	1	; () banked
 15446  00288E  B107               	btfsc	___flmul@prod& (0+255),0,b
 15447  002890  D7F9               	goto	u15310
 15448  002892                     l2036:
 15449                           
 15450                           ; BSR set to: 1
 15451  002892  5101               	movf	___flmul@aexp& (0+255),w,b
 15452  002894  B4D8               	btfsc	status,2,c
 15453  002896  D021               	goto	l13221
 15454                           
 15455                           ; BSR set to: 1
 15456  002898  0E01               	movlw	1
 15457  00289A  2707               	addwf	___flmul@prod& (0+255),f,b
 15458  00289C  0E00               	movlw	0
 15459  00289E  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15460  0028A0  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15461  0028A2  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15462                           
 15463                           ; BSR set to: 1
 15464  0028A4  A10A               	btfss	(___flmul@prod+3)& (0+255),0,b
 15465  0028A6  D019               	goto	l13221
 15466                           
 15467                           ; BSR set to: 1
 15468  0028A8  C107  F0A2         	movff	___flmul@prod,??___flmul
 15469  0028AC  C108  F0A3         	movff	___flmul@prod+1,??___flmul+1
 15470  0028B0  C109  F0A4         	movff	___flmul@prod+2,??___flmul+2
 15471  0028B4  C10A  F0A5         	movff	___flmul@prod+3,??___flmul+3
 15472  0028B8  0100               	movlb	0	; () banked
 15473  0028BA  35A5               	rlcf	(??___flmul+3)& (0+255),w,b
 15474  0028BC  33A5               	rrcf	(??___flmul+3)& (0+255),f,b
 15475  0028BE  33A4               	rrcf	(??___flmul+2)& (0+255),f,b
 15476  0028C0  33A3               	rrcf	(??___flmul+1)& (0+255),f,b
 15477  0028C2  33A2               	rrcf	??___flmul& (0+255),f,b
 15478  0028C4  C0A2  F107         	movff	??___flmul,___flmul@prod
 15479  0028C8  C0A3  F108         	movff	??___flmul+1,___flmul@prod+1
 15480  0028CC  C0A4  F109         	movff	??___flmul+2,___flmul@prod+2
 15481  0028D0  C0A5  F10A         	movff	??___flmul+3,___flmul@prod+3
 15482                           
 15483                           ; BSR set to: 0
 15484  0028D4  0101               	movlb	1	; () banked
 15485  0028D6  4B0B               	infsnz	___flmul@temp& (0+255),f,b
 15486  0028D8  2B0C               	incf	(___flmul@temp+1)& (0+255),f,b
 15487  0028DA                     l13221:
 15488                           
 15489                           ; BSR set to: 1
 15490  0028DA  BF0C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15491  0028DC  D00D               	goto	l13225
 15492  0028DE  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15493  0028E0  E103               	bnz	u15350
 15494  0028E2  290B               	incf	___flmul@temp& (0+255),w,b
 15495  0028E4  A0D8               	btfss	status,0,c
 15496  0028E6  D008               	goto	l13225
 15497  0028E8                     u15350:
 15498                           
 15499                           ; BSR set to: 1
 15500  0028E8  0E00               	movlw	0
 15501  0028EA  6F07               	movwf	___flmul@prod& (0+255),b
 15502  0028EC  0E00               	movlw	0
 15503  0028EE  6F08               	movwf	(___flmul@prod+1)& (0+255),b
 15504  0028F0  0E80               	movlw	128
 15505  0028F2  6F09               	movwf	(___flmul@prod+2)& (0+255),b
 15506  0028F4  0E7F               	movlw	127
 15507  0028F6  D020               	goto	L16
 15508  0028F8                     l13225:
 15509                           
 15510                           ; BSR set to: 1
 15511  0028F8  BF0C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15512  0028FA  D005               	goto	u15360
 15513  0028FC  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 15514  0028FE  E10E               	bnz	l2044
 15515  002900  050B               	decf	___flmul@temp& (0+255),w,b
 15516  002902  B0D8               	btfsc	status,0,c
 15517  002904  D00B               	goto	l2044
 15518  002906                     u15360:
 15519                           
 15520                           ; BSR set to: 1
 15521  002906  0E00               	movlw	0
 15522  002908  6F07               	movwf	___flmul@prod& (0+255),b
 15523  00290A  0E00               	movlw	0
 15524  00290C  6F08               	movwf	(___flmul@prod+1)& (0+255),b
 15525  00290E  0E00               	movlw	0
 15526  002910  6F09               	movwf	(___flmul@prod+2)& (0+255),b
 15527  002912  0E00               	movlw	0
 15528  002914  6F0A               	movwf	(___flmul@prod+3)& (0+255),b
 15529  002916  0E00               	movlw	0
 15530  002918  6F00               	movwf	___flmul@sign& (0+255),b
 15531  00291A  D00F               	goto	l13237
 15532  00291C                     l2044:
 15533                           
 15534                           ; BSR set to: 1
 15535  00291C  C10B  F102         	movff	___flmul@temp,___flmul@bexp
 15536                           
 15537                           ; BSR set to: 1
 15538  002920  0EFF               	movlw	255
 15539  002922  1707               	andwf	___flmul@prod& (0+255),f,b
 15540  002924  0EFF               	movlw	255
 15541  002926  1708               	andwf	(___flmul@prod+1)& (0+255),f,b
 15542  002928  0E7F               	movlw	127
 15543  00292A  1709               	andwf	(___flmul@prod+2)& (0+255),f,b
 15544  00292C  0E00               	movlw	0
 15545  00292E  170A               	andwf	(___flmul@prod+3)& (0+255),f,b
 15546                           
 15547                           ; BSR set to: 1
 15548  002930  B102               	btfsc	___flmul@bexp& (0+255),0,b
 15549                           
 15550                           ; BSR set to: 1
 15551  002932  8F09               	bsf	(___flmul@prod+2)& (0+255),7,b
 15552                           
 15553                           ; BSR set to: 1
 15554  002934  90D8               	bcf	status,0,c
 15555  002936  3102               	rrcf	___flmul@bexp& (0+255),w,b
 15556  002938                     L16:
 15557  002938  6F0A               	movwf	(___flmul@prod+3)& (0+255),b
 15558  00293A                     l13237:
 15559                           
 15560                           ; BSR set to: 1
 15561  00293A  5100               	movf	___flmul@sign& (0+255),w,b
 15562  00293C  130A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15563                           
 15564                           ; BSR set to: 1
 15565  00293E  C107  F09A         	movff	___flmul@prod,?___flmul
 15566  002942  C108  F09B         	movff	___flmul@prod+1,?___flmul+1
 15567  002946  C109  F09C         	movff	___flmul@prod+2,?___flmul+2
 15568  00294A  C10A  F09D         	movff	___flmul@prod+3,?___flmul+3
 15569  00294E  0012               	return		;funcret
 15570  002950                     __end_of___flmul:
 15571                           	callstack 0
 15572                           
 15573 ;; *************** function ___flge *****************
 15574 ;; Defined at:
 15575 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;  ff1             4   38[BANK1 ] unsigned char 
 15578 ;;  ff2             4   42[BANK1 ] unsigned char 
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;		None               void
 15583 ;; Registers used:
 15584 ;;		wreg, status,2, status,0
 15585 ;; Tracked objects:
 15586 ;;		On entry : 3E/1
 15587 ;;		On exit  : 3F/1
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15590 ;;      Params:         0       0       8       0       0       0       0       0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15592 ;;      Temps:          0       0       4       0       0       0       0       0       0
 15593 ;;      Totals:         0       0      12       0       0       0       0       0       0
 15594 ;;Total ram usage:       12 bytes
 15595 ;; Hardware stack levels used: 1
 15596 ;; Hardware stack levels required when called: 10
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_mover_2
 15601 ;;		_efgtoa
 15602 ;;		_strtof
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606                           	psect	text70
 15607  0065C8                     __ptext70:
 15608                           	callstack 0
 15609  0065C8                     ___flge:
 15610                           	callstack 16
 15611                           
 15612                           ;incstack = 0
 15613  0065C8  0E00               	movlw	0
 15614  0065CA  0101               	movlb	1	; () banked
 15615  0065CC  1526               	andwf	___flge@ff1& (0+255),w,b
 15616  0065CE  6F2E               	movwf	??___flge& (0+255),b
 15617  0065D0  0E00               	movlw	0
 15618  0065D2  1527               	andwf	(___flge@ff1+1)& (0+255),w,b
 15619  0065D4  6F2F               	movwf	(??___flge+1)& (0+255),b
 15620  0065D6  0E80               	movlw	128
 15621  0065D8  1528               	andwf	(___flge@ff1+2)& (0+255),w,b
 15622  0065DA  6F30               	movwf	(??___flge+2)& (0+255),b
 15623  0065DC  0E7F               	movlw	127
 15624  0065DE  1529               	andwf	(___flge@ff1+3)& (0+255),w,b
 15625  0065E0  6F31               	movwf	(??___flge+3)& (0+255),b
 15626  0065E2  512E               	movf	??___flge& (0+255),w,b
 15627  0065E4  112F               	iorwf	(??___flge+1)& (0+255),w,b
 15628  0065E6  1130               	iorwf	(??___flge+2)& (0+255),w,b
 15629  0065E8  1131               	iorwf	(??___flge+3)& (0+255),w,b
 15630  0065EA  A4D8               	btfss	status,2,c
 15631  0065EC  D008               	goto	l13349
 15632                           
 15633                           ; BSR set to: 1
 15634  0065EE  0E00               	movlw	0
 15635  0065F0  6F26               	movwf	___flge@ff1& (0+255),b
 15636  0065F2  0E00               	movlw	0
 15637  0065F4  6F27               	movwf	(___flge@ff1+1)& (0+255),b
 15638  0065F6  0E00               	movlw	0
 15639  0065F8  6F28               	movwf	(___flge@ff1+2)& (0+255),b
 15640  0065FA  0E00               	movlw	0
 15641  0065FC  6F29               	movwf	(___flge@ff1+3)& (0+255),b
 15642  0065FE                     l13349:
 15643                           
 15644                           ; BSR set to: 1
 15645  0065FE  0E00               	movlw	0
 15646  006600  152A               	andwf	___flge@ff2& (0+255),w,b
 15647  006602  6F2E               	movwf	??___flge& (0+255),b
 15648  006604  0E00               	movlw	0
 15649  006606  152B               	andwf	(___flge@ff2+1)& (0+255),w,b
 15650  006608  6F2F               	movwf	(??___flge+1)& (0+255),b
 15651  00660A  0E80               	movlw	128
 15652  00660C  152C               	andwf	(___flge@ff2+2)& (0+255),w,b
 15653  00660E  6F30               	movwf	(??___flge+2)& (0+255),b
 15654  006610  0E7F               	movlw	127
 15655  006612  152D               	andwf	(___flge@ff2+3)& (0+255),w,b
 15656  006614  6F31               	movwf	(??___flge+3)& (0+255),b
 15657  006616  512E               	movf	??___flge& (0+255),w,b
 15658  006618  112F               	iorwf	(??___flge+1)& (0+255),w,b
 15659  00661A  1130               	iorwf	(??___flge+2)& (0+255),w,b
 15660  00661C  1131               	iorwf	(??___flge+3)& (0+255),w,b
 15661  00661E  A4D8               	btfss	status,2,c
 15662  006620  D008               	goto	l13353
 15663                           
 15664                           ; BSR set to: 1
 15665  006622  0E00               	movlw	0
 15666  006624  6F2A               	movwf	___flge@ff2& (0+255),b
 15667  006626  0E00               	movlw	0
 15668  006628  6F2B               	movwf	(___flge@ff2+1)& (0+255),b
 15669  00662A  0E00               	movlw	0
 15670  00662C  6F2C               	movwf	(___flge@ff2+2)& (0+255),b
 15671  00662E  0E00               	movlw	0
 15672  006630  6F2D               	movwf	(___flge@ff2+3)& (0+255),b
 15673  006632                     l13353:
 15674                           
 15675                           ; BSR set to: 1
 15676  006632  AF29               	btfss	(___flge@ff1+3)& (0+255),7,b
 15677  006634  D009               	goto	l13357
 15678                           
 15679                           ; BSR set to: 1
 15680  006636  6D26               	negf	___flge@ff1& (0+255),b
 15681  006638  1F27               	comf	(___flge@ff1+1)& (0+255),f,b
 15682  00663A  B0D8               	btfsc	status,0,c
 15683  00663C  2B27               	incf	(___flge@ff1+1)& (0+255),f,b
 15684  00663E  1F28               	comf	(___flge@ff1+2)& (0+255),f,b
 15685  006640  B0D8               	btfsc	status,0,c
 15686  006642  2B28               	incf	(___flge@ff1+2)& (0+255),f,b
 15687  006644  0E80               	movlw	128
 15688  006646  5729               	subfwb	(___flge@ff1+3)& (0+255),f,b
 15689  006648                     l13357:
 15690                           
 15691                           ; BSR set to: 1
 15692  006648  AF2D               	btfss	(___flge@ff2+3)& (0+255),7,b
 15693  00664A  D009               	goto	l1678
 15694                           
 15695                           ; BSR set to: 1
 15696  00664C  6D2A               	negf	___flge@ff2& (0+255),b
 15697  00664E  1F2B               	comf	(___flge@ff2+1)& (0+255),f,b
 15698  006650  B0D8               	btfsc	status,0,c
 15699  006652  2B2B               	incf	(___flge@ff2+1)& (0+255),f,b
 15700  006654  1F2C               	comf	(___flge@ff2+2)& (0+255),f,b
 15701  006656  B0D8               	btfsc	status,0,c
 15702  006658  2B2C               	incf	(___flge@ff2+2)& (0+255),f,b
 15703  00665A  0E80               	movlw	128
 15704  00665C  572D               	subfwb	(___flge@ff2+3)& (0+255),f,b
 15705  00665E                     l1678:
 15706                           
 15707                           ; BSR set to: 1
 15708  00665E  0E00               	movlw	0
 15709  006660  1B26               	xorwf	___flge@ff1& (0+255),f,b
 15710  006662  0E00               	movlw	0
 15711  006664  1B27               	xorwf	(___flge@ff1+1)& (0+255),f,b
 15712  006666  0E00               	movlw	0
 15713  006668  1B28               	xorwf	(___flge@ff1+2)& (0+255),f,b
 15714  00666A  0E80               	movlw	128
 15715  00666C  1B29               	xorwf	(___flge@ff1+3)& (0+255),f,b
 15716  00666E  0E00               	movlw	0
 15717  006670  1B2A               	xorwf	___flge@ff2& (0+255),f,b
 15718  006672  0E00               	movlw	0
 15719  006674  1B2B               	xorwf	(___flge@ff2+1)& (0+255),f,b
 15720  006676  0E00               	movlw	0
 15721  006678  1B2C               	xorwf	(___flge@ff2+2)& (0+255),f,b
 15722  00667A  0E80               	movlw	128
 15723  00667C  1B2D               	xorwf	(___flge@ff2+3)& (0+255),f,b
 15724  00667E  512A               	movf	___flge@ff2& (0+255),w,b
 15725  006680  5D26               	subwf	___flge@ff1& (0+255),w,b
 15726  006682  512B               	movf	(___flge@ff2+1)& (0+255),w,b
 15727  006684  5927               	subwfb	(___flge@ff1+1)& (0+255),w,b
 15728  006686  512C               	movf	(___flge@ff2+2)& (0+255),w,b
 15729  006688  5928               	subwfb	(___flge@ff1+2)& (0+255),w,b
 15730  00668A  512D               	movf	(___flge@ff2+3)& (0+255),w,b
 15731  00668C  5929               	subwfb	(___flge@ff1+3)& (0+255),w,b
 15732  00668E  B0D8               	btfsc	status,0,c
 15733  006690  D002               	goto	l13363
 15734                           
 15735                           ; BSR set to: 1
 15736  006692  90D8               	bcf	status,0,c
 15737  006694  0012               	return	
 15738  006696                     l13363:
 15739                           
 15740                           ; BSR set to: 1
 15741  006696  80D8               	bsf	status,0,c
 15742                           
 15743                           ; BSR set to: 1
 15744  006698  0012               	return		;funcret
 15745  00669A                     __end_of___flge:
 15746                           	callstack 0
 15747                           
 15748 ;; *************** function ___fleq *****************
 15749 ;; Defined at:
 15750 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
 15751 ;; Parameters:    Size  Location     Type
 15752 ;;  ff1             4   44[BANK0 ] unsigned char 
 15753 ;;  ff2             4   48[BANK0 ] unsigned char 
 15754 ;; Auto vars:     Size  Location     Type
 15755 ;;		None
 15756 ;; Return value:  Size  Location     Type
 15757 ;;		None               void
 15758 ;; Registers used:
 15759 ;;		wreg, status,2, status,0
 15760 ;; Tracked objects:
 15761 ;;		On entry : 3E/0
 15762 ;;		On exit  : 3F/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15765 ;;      Params:         0       8       0       0       0       0       0       0       0
 15766 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15767 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15768 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15769 ;;Total ram usage:       12 bytes
 15770 ;; Hardware stack levels used: 1
 15771 ;; Hardware stack levels required when called: 10
 15772 ;; This function calls:
 15773 ;;		Nothing
 15774 ;; This function is called by:
 15775 ;;		_G_97
 15776 ;;		_mover_2
 15777 ;;		_efgtoa
 15778 ;;		_strtof
 15779 ;; This function uses a non-reentrant model
 15780 ;;
 15781                           
 15782                           	psect	text71
 15783  0074DC                     __ptext71:
 15784                           	callstack 0
 15785  0074DC                     ___fleq:
 15786                           	callstack 16
 15787                           
 15788                           ; BSR set to: 1
 15789                           ;incstack = 0
 15790  0074DC  0E00               	movlw	0
 15791  0074DE  0100               	movlb	0	; () banked
 15792  0074E0  158C               	andwf	___fleq@ff1& (0+255),w,b
 15793  0074E2  6F94               	movwf	??___fleq& (0+255),b
 15794  0074E4  0E00               	movlw	0
 15795  0074E6  158D               	andwf	(___fleq@ff1+1)& (0+255),w,b
 15796  0074E8  6F95               	movwf	(??___fleq+1)& (0+255),b
 15797  0074EA  0E80               	movlw	128
 15798  0074EC  158E               	andwf	(___fleq@ff1+2)& (0+255),w,b
 15799  0074EE  6F96               	movwf	(??___fleq+2)& (0+255),b
 15800  0074F0  0E7F               	movlw	127
 15801  0074F2  158F               	andwf	(___fleq@ff1+3)& (0+255),w,b
 15802  0074F4  6F97               	movwf	(??___fleq+3)& (0+255),b
 15803  0074F6  5194               	movf	??___fleq& (0+255),w,b
 15804  0074F8  1195               	iorwf	(??___fleq+1)& (0+255),w,b
 15805  0074FA  1196               	iorwf	(??___fleq+2)& (0+255),w,b
 15806  0074FC  1197               	iorwf	(??___fleq+3)& (0+255),w,b
 15807  0074FE  A4D8               	btfss	status,2,c
 15808  007500  D008               	goto	l13333
 15809                           
 15810                           ; BSR set to: 0
 15811  007502  0E00               	movlw	0
 15812  007504  6F8C               	movwf	___fleq@ff1& (0+255),b
 15813  007506  0E00               	movlw	0
 15814  007508  6F8D               	movwf	(___fleq@ff1+1)& (0+255),b
 15815  00750A  0E00               	movlw	0
 15816  00750C  6F8E               	movwf	(___fleq@ff1+2)& (0+255),b
 15817  00750E  0E00               	movlw	0
 15818  007510  6F8F               	movwf	(___fleq@ff1+3)& (0+255),b
 15819  007512                     l13333:
 15820                           
 15821                           ; BSR set to: 0
 15822  007512  0E00               	movlw	0
 15823  007514  1590               	andwf	___fleq@ff2& (0+255),w,b
 15824  007516  6F94               	movwf	??___fleq& (0+255),b
 15825  007518  0E00               	movlw	0
 15826  00751A  1591               	andwf	(___fleq@ff2+1)& (0+255),w,b
 15827  00751C  6F95               	movwf	(??___fleq+1)& (0+255),b
 15828  00751E  0E80               	movlw	128
 15829  007520  1592               	andwf	(___fleq@ff2+2)& (0+255),w,b
 15830  007522  6F96               	movwf	(??___fleq+2)& (0+255),b
 15831  007524  0E7F               	movlw	127
 15832  007526  1593               	andwf	(___fleq@ff2+3)& (0+255),w,b
 15833  007528  6F97               	movwf	(??___fleq+3)& (0+255),b
 15834  00752A  5194               	movf	??___fleq& (0+255),w,b
 15835  00752C  1195               	iorwf	(??___fleq+1)& (0+255),w,b
 15836  00752E  1196               	iorwf	(??___fleq+2)& (0+255),w,b
 15837  007530  1197               	iorwf	(??___fleq+3)& (0+255),w,b
 15838  007532  A4D8               	btfss	status,2,c
 15839  007534  D008               	goto	l13337
 15840                           
 15841                           ; BSR set to: 0
 15842  007536  0E00               	movlw	0
 15843  007538  6F90               	movwf	___fleq@ff2& (0+255),b
 15844  00753A  0E00               	movlw	0
 15845  00753C  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
 15846  00753E  0E00               	movlw	0
 15847  007540  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
 15848  007542  0E00               	movlw	0
 15849  007544  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
 15850  007546                     l13337:
 15851                           
 15852                           ; BSR set to: 0
 15853  007546  5190               	movf	___fleq@ff2& (0+255),w,b
 15854  007548  198C               	xorwf	___fleq@ff1& (0+255),w,b
 15855  00754A  E10A               	bnz	u15520
 15856  00754C  5191               	movf	(___fleq@ff2+1)& (0+255),w,b
 15857  00754E  198D               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 15858  007550  E107               	bnz	u15520
 15859  007552  5192               	movf	(___fleq@ff2+2)& (0+255),w,b
 15860  007554  198E               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 15861  007556  E104               	bnz	u15520
 15862  007558  5193               	movf	(___fleq@ff2+3)& (0+255),w,b
 15863  00755A  198F               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 15864  00755C  B4D8               	btfsc	status,2,c
 15865  00755E  D002               	goto	l13341
 15866  007560                     u15520:
 15867                           
 15868                           ; BSR set to: 0
 15869  007560  90D8               	bcf	status,0,c
 15870  007562  0012               	return	
 15871  007564                     l13341:
 15872                           
 15873                           ; BSR set to: 0
 15874  007564  80D8               	bsf	status,0,c
 15875                           
 15876                           ; BSR set to: 0
 15877  007566  0012               	return		;funcret
 15878  007568                     __end_of___fleq:
 15879                           	callstack 0
 15880                           
 15881 ;; *************** function ___fldiv *****************
 15882 ;; Defined at:
 15883 ;;		line 11 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;  b               4   13[BANK1 ] unsigned char 
 15886 ;;  a               4   17[BANK1 ] unsigned char 
 15887 ;; Auto vars:     Size  Location     Type
 15888 ;;  grs             4   32[BANK1 ] unsigned long 
 15889 ;;  rem             4   25[BANK1 ] unsigned long 
 15890 ;;  new_exp         2   30[BANK1 ] short 
 15891 ;;  aexp            1   37[BANK1 ] unsigned char 
 15892 ;;  bexp            1   36[BANK1 ] unsigned char 
 15893 ;;  sign            1   29[BANK1 ] unsigned char 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  4   13[BANK1 ] unsigned char 
 15896 ;; Registers used:
 15897 ;;		wreg, status,2, status,0
 15898 ;; Tracked objects:
 15899 ;;		On entry : 3E/1
 15900 ;;		On exit  : 3F/1
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15903 ;;      Params:         0       0       8       0       0       0       0       0       0
 15904 ;;      Locals:         0       0      13       0       0       0       0       0       0
 15905 ;;      Temps:          0       0       4       0       0       0       0       0       0
 15906 ;;      Totals:         0       0      25       0       0       0       0       0       0
 15907 ;;Total ram usage:       25 bytes
 15908 ;; Hardware stack levels used: 1
 15909 ;; Hardware stack levels required when called: 10
 15910 ;; This function calls:
 15911 ;;		Nothing
 15912 ;; This function is called by:
 15913 ;;		_G_01
 15914 ;;		_G_97
 15915 ;;		_mover_2
 15916 ;;		_efgtoa
 15917 ;;		_strtof
 15918 ;; This function uses a non-reentrant model
 15919 ;;
 15920                           
 15921                           	psect	text72
 15922  00384A                     __ptext72:
 15923                           	callstack 0
 15924  00384A                     ___fldiv:
 15925                           	callstack 16
 15926                           
 15927                           ; BSR set to: 0
 15928                           ;incstack = 0
 15929  00384A  0101               	movlb	1	; () banked
 15930  00384C  5110               	movf	(___fldiv@b+3)& (0+255),w,b
 15931  00384E  0B80               	andlw	128
 15932  003850  6F1D               	movwf	___fldiv@sign& (0+255),b
 15933  003852  5110               	movf	(___fldiv@b+3)& (0+255),w,b
 15934  003854  2510               	addwf	(___fldiv@b+3)& (0+255),w,b
 15935  003856  6F24               	movwf	___fldiv@bexp& (0+255),b
 15936                           
 15937                           ; BSR set to: 1
 15938  003858  BF0F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15939                           
 15940                           ; BSR set to: 1
 15941  00385A  8124               	bsf	___fldiv@bexp& (0+255),0,b
 15942                           
 15943                           ; BSR set to: 1
 15944  00385C  5124               	movf	___fldiv@bexp& (0+255),w,b
 15945  00385E  B4D8               	btfsc	status,2,c
 15946  003860  D00D               	goto	l12991
 15947                           
 15948                           ; BSR set to: 1
 15949  003862  2924               	incf	___fldiv@bexp& (0+255),w,b
 15950  003864  A4D8               	btfss	status,2,c
 15951  003866  D008               	goto	l12987
 15952                           
 15953                           ; BSR set to: 1
 15954  003868  0E00               	movlw	0
 15955  00386A  6F0D               	movwf	___fldiv@b& (0+255),b
 15956  00386C  0E00               	movlw	0
 15957  00386E  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
 15958  003870  0E00               	movlw	0
 15959  003872  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
 15960  003874  0E00               	movlw	0
 15961  003876  6F10               	movwf	(___fldiv@b+3)& (0+255),b
 15962  003878                     l12987:
 15963                           
 15964                           ; BSR set to: 1
 15965  003878  8F0F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15966  00387A  D006               	goto	L17
 15967  00387C                     l12991:
 15968                           
 15969                           ; BSR set to: 1
 15970  00387C  0E00               	movlw	0
 15971  00387E  6F0D               	movwf	___fldiv@b& (0+255),b
 15972  003880  0E00               	movlw	0
 15973  003882  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
 15974  003884  0E00               	movlw	0
 15975  003886  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
 15976  003888                     L17:
 15977  003888  0E00               	movlw	0
 15978  00388A  6F10               	movwf	(___fldiv@b+3)& (0+255),b
 15979                           
 15980                           ; BSR set to: 1
 15981  00388C  5114               	movf	(___fldiv@a+3)& (0+255),w,b
 15982  00388E  0B80               	andlw	128
 15983  003890  1B1D               	xorwf	___fldiv@sign& (0+255),f,b
 15984                           
 15985                           ; BSR set to: 1
 15986  003892  5114               	movf	(___fldiv@a+3)& (0+255),w,b
 15987  003894  2514               	addwf	(___fldiv@a+3)& (0+255),w,b
 15988  003896  6F25               	movwf	___fldiv@aexp& (0+255),b
 15989                           
 15990                           ; BSR set to: 1
 15991  003898  BF13               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15992                           
 15993                           ; BSR set to: 1
 15994  00389A  8125               	bsf	___fldiv@aexp& (0+255),0,b
 15995                           
 15996                           ; BSR set to: 1
 15997  00389C  5125               	movf	___fldiv@aexp& (0+255),w,b
 15998  00389E  B4D8               	btfsc	status,2,c
 15999  0038A0  D00D               	goto	l13011
 16000                           
 16001                           ; BSR set to: 1
 16002  0038A2  2925               	incf	___fldiv@aexp& (0+255),w,b
 16003  0038A4  A4D8               	btfss	status,2,c
 16004  0038A6  D008               	goto	l13007
 16005                           
 16006                           ; BSR set to: 1
 16007  0038A8  0E00               	movlw	0
 16008  0038AA  6F11               	movwf	___fldiv@a& (0+255),b
 16009  0038AC  0E00               	movlw	0
 16010  0038AE  6F12               	movwf	(___fldiv@a+1)& (0+255),b
 16011  0038B0  0E00               	movlw	0
 16012  0038B2  6F13               	movwf	(___fldiv@a+2)& (0+255),b
 16013  0038B4  0E00               	movlw	0
 16014  0038B6  6F14               	movwf	(___fldiv@a+3)& (0+255),b
 16015  0038B8                     l13007:
 16016                           
 16017                           ; BSR set to: 1
 16018  0038B8  8F13               	bsf	(___fldiv@a+2)& (0+255),7,b
 16019  0038BA  D006               	goto	L18
 16020  0038BC                     l13011:
 16021                           
 16022                           ; BSR set to: 1
 16023  0038BC  0E00               	movlw	0
 16024  0038BE  6F11               	movwf	___fldiv@a& (0+255),b
 16025  0038C0  0E00               	movlw	0
 16026  0038C2  6F12               	movwf	(___fldiv@a+1)& (0+255),b
 16027  0038C4  0E00               	movlw	0
 16028  0038C6  6F13               	movwf	(___fldiv@a+2)& (0+255),b
 16029  0038C8                     L18:
 16030  0038C8  0E00               	movlw	0
 16031  0038CA  6F14               	movwf	(___fldiv@a+3)& (0+255),b
 16032                           
 16033                           ; BSR set to: 1
 16034  0038CC  5111               	movf	___fldiv@a& (0+255),w,b
 16035  0038CE  1112               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16036  0038D0  1113               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16037  0038D2  1114               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16038  0038D4  A4D8               	btfss	status,2,c
 16039  0038D6  D017               	goto	l13025
 16040                           
 16041                           ; BSR set to: 1
 16042  0038D8  0E00               	movlw	0
 16043  0038DA  6F0D               	movwf	___fldiv@b& (0+255),b
 16044  0038DC  0E00               	movlw	0
 16045  0038DE  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
 16046  0038E0  0E00               	movlw	0
 16047  0038E2  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
 16048  0038E4  0E00               	movlw	0
 16049  0038E6  6F10               	movwf	(___fldiv@b+3)& (0+255),b
 16050                           
 16051                           ; BSR set to: 1
 16052  0038E8  0E80               	movlw	128
 16053  0038EA  130F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16054  0038EC  0E7F               	movlw	127
 16055  0038EE  1310               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16056  0038F0                     l13019:
 16057                           
 16058                           ; BSR set to: 1
 16059  0038F0  511D               	movf	___fldiv@sign& (0+255),w,b
 16060  0038F2  1310               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16061                           
 16062                           ; BSR set to: 1
 16063  0038F4  C10D  F10D         	movff	___fldiv@b,?___fldiv
 16064  0038F8  C10E  F10E         	movff	___fldiv@b+1,?___fldiv+1
 16065  0038FC  C10F  F10F         	movff	___fldiv@b+2,?___fldiv+2
 16066  003900  C110  F110         	movff	___fldiv@b+3,?___fldiv+3
 16067  003904  0012               	return	
 16068  003906                     l13025:
 16069                           
 16070                           ; BSR set to: 1
 16071  003906  5124               	movf	___fldiv@bexp& (0+255),w,b
 16072  003908  A4D8               	btfss	status,2,c
 16073  00390A  D009               	goto	l13033
 16074                           
 16075                           ; BSR set to: 1
 16076                           
 16077                           ; BSR set to: 1
 16078  00390C  0E00               	movlw	0
 16079  00390E  6F0D               	movwf	?___fldiv& (0+255),b
 16080  003910  0E00               	movlw	0
 16081  003912  6F0E               	movwf	(?___fldiv+1)& (0+255),b
 16082  003914  0E00               	movlw	0
 16083  003916  6F0F               	movwf	(?___fldiv+2)& (0+255),b
 16084  003918  0E00               	movlw	0
 16085  00391A  6F10               	movwf	(?___fldiv+3)& (0+255),b
 16086  00391C  0012               	return	
 16087  00391E                     l13033:
 16088                           
 16089                           ; BSR set to: 1
 16090  00391E  5125               	movf	___fldiv@aexp& (0+255),w,b
 16091  003920  C124  F115         	movff	___fldiv@bexp,??___fldiv
 16092  003924  6B16               	clrf	(??___fldiv+1)& (0+255),b
 16093  003926  5F15               	subwf	??___fldiv& (0+255),f,b
 16094  003928  0E00               	movlw	0
 16095  00392A  5B16               	subwfb	(??___fldiv+1)& (0+255),f,b
 16096  00392C  0E7F               	movlw	127
 16097  00392E  2515               	addwf	??___fldiv& (0+255),w,b
 16098  003930  6F1E               	movwf	___fldiv@new_exp& (0+255),b
 16099  003932  0E00               	movlw	0
 16100  003934  2116               	addwfc	(??___fldiv+1)& (0+255),w,b
 16101  003936  6F1F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16102                           
 16103                           ; BSR set to: 1
 16104  003938  C10D  F119         	movff	___fldiv@b,___fldiv@rem
 16105  00393C  C10E  F11A         	movff	___fldiv@b+1,___fldiv@rem+1
 16106  003940  C10F  F11B         	movff	___fldiv@b+2,___fldiv@rem+2
 16107  003944  C110  F11C         	movff	___fldiv@b+3,___fldiv@rem+3
 16108                           
 16109                           ; BSR set to: 1
 16110  003948  0E00               	movlw	0
 16111  00394A  6F0D               	movwf	___fldiv@b& (0+255),b
 16112  00394C  0E00               	movlw	0
 16113  00394E  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
 16114  003950  0E00               	movlw	0
 16115  003952  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
 16116  003954  0E00               	movlw	0
 16117  003956  6F10               	movwf	(___fldiv@b+3)& (0+255),b
 16118                           
 16119                           ; BSR set to: 1
 16120  003958  0E00               	movlw	0
 16121  00395A  6F20               	movwf	___fldiv@grs& (0+255),b
 16122  00395C  0E00               	movlw	0
 16123  00395E  6F21               	movwf	(___fldiv@grs+1)& (0+255),b
 16124  003960  0E00               	movlw	0
 16125  003962  6F22               	movwf	(___fldiv@grs+2)& (0+255),b
 16126  003964  0E00               	movlw	0
 16127  003966  6F23               	movwf	(___fldiv@grs+3)& (0+255),b
 16128                           
 16129                           ; BSR set to: 1
 16130  003968  0E00               	movlw	0
 16131  00396A  6F25               	movwf	___fldiv@aexp& (0+255),b
 16132  00396C  D028               	goto	l1997
 16133  00396E                     l13043:
 16134                           
 16135                           ; BSR set to: 1
 16136  00396E  5125               	movf	___fldiv@aexp& (0+255),w,b
 16137  003970  B4D8               	btfsc	status,2,c
 16138  003972  D011               	goto	l13051
 16139                           
 16140                           ; BSR set to: 1
 16141  003974  90D8               	bcf	status,0,c
 16142  003976  3719               	rlcf	___fldiv@rem& (0+255),f,b
 16143  003978  371A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16144  00397A  371B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16145  00397C  371C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16146  00397E  90D8               	bcf	status,0,c
 16147  003980  370D               	rlcf	___fldiv@b& (0+255),f,b
 16148  003982  370E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16149  003984  370F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16150  003986  3710               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16151                           
 16152                           ; BSR set to: 1
 16153  003988  BF23               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 16154                           
 16155                           ; BSR set to: 1
 16156  00398A  810D               	bsf	___fldiv@b& (0+255),0,b
 16157                           
 16158                           ; BSR set to: 1
 16159  00398C  90D8               	bcf	status,0,c
 16160  00398E  3720               	rlcf	___fldiv@grs& (0+255),f,b
 16161  003990  3721               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16162  003992  3722               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16163  003994  3723               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16164  003996                     l13051:
 16165                           
 16166                           ; BSR set to: 1
 16167  003996  5111               	movf	___fldiv@a& (0+255),w,b
 16168  003998  5D19               	subwf	___fldiv@rem& (0+255),w,b
 16169  00399A  5112               	movf	(___fldiv@a+1)& (0+255),w,b
 16170  00399C  591A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16171  00399E  5113               	movf	(___fldiv@a+2)& (0+255),w,b
 16172  0039A0  591B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16173  0039A2  5114               	movf	(___fldiv@a+3)& (0+255),w,b
 16174  0039A4  591C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16175  0039A6  A0D8               	btfss	status,0,c
 16176  0039A8  D009               	goto	l13057
 16177                           
 16178                           ; BSR set to: 1
 16179  0039AA  8D23               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16180                           
 16181                           ; BSR set to: 1
 16182  0039AC  5111               	movf	___fldiv@a& (0+255),w,b
 16183  0039AE  5F19               	subwf	___fldiv@rem& (0+255),f,b
 16184  0039B0  5112               	movf	(___fldiv@a+1)& (0+255),w,b
 16185  0039B2  5B1A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16186  0039B4  5113               	movf	(___fldiv@a+2)& (0+255),w,b
 16187  0039B6  5B1B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16188  0039B8  5114               	movf	(___fldiv@a+3)& (0+255),w,b
 16189  0039BA  5B1C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16190  0039BC                     l13057:
 16191                           
 16192                           ; BSR set to: 1
 16193  0039BC  2B25               	incf	___fldiv@aexp& (0+255),f,b
 16194  0039BE                     l1997:
 16195                           
 16196                           ; BSR set to: 1
 16197  0039BE  0E19               	movlw	25
 16198  0039C0  6525               	cpfsgt	___fldiv@aexp& (0+255),b
 16199  0039C2  D7D5               	goto	l13043
 16200                           
 16201                           ; BSR set to: 1
 16202  0039C4  5119               	movf	___fldiv@rem& (0+255),w,b
 16203  0039C6  111A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16204  0039C8  111B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16205  0039CA  111C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16206  0039CC  B4D8               	btfsc	status,2,c
 16207  0039CE  D011               	goto	l13069
 16208                           
 16209                           ; BSR set to: 1
 16210  0039D0  8120               	bsf	___fldiv@grs& (0+255),0,b
 16211  0039D2  D00F               	goto	l13069
 16212  0039D4                     l13063:
 16213                           
 16214                           ; BSR set to: 1
 16215  0039D4  90D8               	bcf	status,0,c
 16216  0039D6  370D               	rlcf	___fldiv@b& (0+255),f,b
 16217  0039D8  370E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16218  0039DA  370F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16219  0039DC  3710               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16220                           
 16221                           ; BSR set to: 1
 16222  0039DE  BF23               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 16223                           
 16224                           ; BSR set to: 1
 16225  0039E0  810D               	bsf	___fldiv@b& (0+255),0,b
 16226                           
 16227                           ; BSR set to: 1
 16228  0039E2  90D8               	bcf	status,0,c
 16229  0039E4  3720               	rlcf	___fldiv@grs& (0+255),f,b
 16230  0039E6  3721               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16231  0039E8  3722               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16232  0039EA  3723               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16233  0039EC  071E               	decf	___fldiv@new_exp& (0+255),f,b
 16234  0039EE  A0D8               	btfss	status,0,c
 16235  0039F0  071F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16236  0039F2                     l13069:
 16237                           
 16238                           ; BSR set to: 1
 16239  0039F2  AF0F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16240  0039F4  D7EF               	goto	l13063
 16241                           
 16242                           ; BSR set to: 1
 16243  0039F6  0E00               	movlw	0
 16244  0039F8  6F25               	movwf	___fldiv@aexp& (0+255),b
 16245                           
 16246                           ; BSR set to: 1
 16247  0039FA  AF23               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16248  0039FC  D017               	goto	l2008
 16249                           
 16250                           ; BSR set to: 1
 16251  0039FE  0EFF               	movlw	255
 16252  003A00  1520               	andwf	___fldiv@grs& (0+255),w,b
 16253  003A02  6F15               	movwf	??___fldiv& (0+255),b
 16254  003A04  0EFF               	movlw	255
 16255  003A06  1521               	andwf	(___fldiv@grs+1)& (0+255),w,b
 16256  003A08  6F16               	movwf	(??___fldiv+1)& (0+255),b
 16257  003A0A  0EFF               	movlw	255
 16258  003A0C  1522               	andwf	(___fldiv@grs+2)& (0+255),w,b
 16259  003A0E  6F17               	movwf	(??___fldiv+2)& (0+255),b
 16260  003A10  0E7F               	movlw	127
 16261  003A12  1523               	andwf	(___fldiv@grs+3)& (0+255),w,b
 16262  003A14  6F18               	movwf	(??___fldiv+3)& (0+255),b
 16263  003A16  5115               	movf	??___fldiv& (0+255),w,b
 16264  003A18  1116               	iorwf	(??___fldiv+1)& (0+255),w,b
 16265  003A1A  1117               	iorwf	(??___fldiv+2)& (0+255),w,b
 16266  003A1C  1118               	iorwf	(??___fldiv+3)& (0+255),w,b
 16267  003A1E  B4D8               	btfsc	status,2,c
 16268  003A20  D003               	goto	l2009
 16269  003A22                     u15130:
 16270                           
 16271                           ; BSR set to: 1
 16272  003A22  0E01               	movlw	1
 16273  003A24  6F25               	movwf	___fldiv@aexp& (0+255),b
 16274  003A26  D002               	goto	l2008
 16275  003A28                     l2009:
 16276                           
 16277                           ; BSR set to: 1
 16278  003A28  B10D               	btfsc	___fldiv@b& (0+255),0,b
 16279  003A2A  D7FB               	goto	u15130
 16280  003A2C                     l2008:
 16281                           
 16282                           ; BSR set to: 1
 16283  003A2C  5125               	movf	___fldiv@aexp& (0+255),w,b
 16284  003A2E  B4D8               	btfsc	status,2,c
 16285  003A30  D01F               	goto	l13089
 16286                           
 16287                           ; BSR set to: 1
 16288  003A32  0E01               	movlw	1
 16289  003A34  270D               	addwf	___fldiv@b& (0+255),f,b
 16290  003A36  0E00               	movlw	0
 16291  003A38  230E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 16292  003A3A  230F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 16293  003A3C  2310               	addwfc	(___fldiv@b+3)& (0+255),f,b
 16294                           
 16295                           ; BSR set to: 1
 16296  003A3E  A110               	btfss	(___fldiv@b+3)& (0+255),0,b
 16297  003A40  D017               	goto	l13089
 16298                           
 16299                           ; BSR set to: 1
 16300  003A42  C10D  F115         	movff	___fldiv@b,??___fldiv
 16301  003A46  C10E  F116         	movff	___fldiv@b+1,??___fldiv+1
 16302  003A4A  C10F  F117         	movff	___fldiv@b+2,??___fldiv+2
 16303  003A4E  C110  F118         	movff	___fldiv@b+3,??___fldiv+3
 16304  003A52  3518               	rlcf	(??___fldiv+3)& (0+255),w,b
 16305  003A54  3318               	rrcf	(??___fldiv+3)& (0+255),f,b
 16306  003A56  3317               	rrcf	(??___fldiv+2)& (0+255),f,b
 16307  003A58  3316               	rrcf	(??___fldiv+1)& (0+255),f,b
 16308  003A5A  3315               	rrcf	??___fldiv& (0+255),f,b
 16309  003A5C  C115  F10D         	movff	??___fldiv,___fldiv@b
 16310  003A60  C116  F10E         	movff	??___fldiv+1,___fldiv@b+1
 16311  003A64  C117  F10F         	movff	??___fldiv+2,___fldiv@b+2
 16312  003A68  C118  F110         	movff	??___fldiv+3,___fldiv@b+3
 16313                           
 16314                           ; BSR set to: 1
 16315  003A6C  4B1E               	infsnz	___fldiv@new_exp& (0+255),f,b
 16316  003A6E  2B1F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 16317  003A70                     l13089:
 16318                           
 16319                           ; BSR set to: 1
 16320  003A70  BF1F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16321  003A72  D010               	goto	l13093
 16322  003A74  511F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16323  003A76  E103               	bnz	u15170
 16324  003A78  291E               	incf	___fldiv@new_exp& (0+255),w,b
 16325  003A7A  A0D8               	btfss	status,0,c
 16326  003A7C  D00B               	goto	l13093
 16327  003A7E                     u15170:
 16328                           
 16329                           ; BSR set to: 1
 16330  003A7E  0E00               	movlw	0
 16331  003A80  6F1F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16332  003A82  691E               	setf	___fldiv@new_exp& (0+255),b
 16333  003A84  0E00               	movlw	0
 16334  003A86  6F0D               	movwf	___fldiv@b& (0+255),b
 16335  003A88  0E00               	movlw	0
 16336  003A8A  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
 16337  003A8C  0E00               	movlw	0
 16338  003A8E  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
 16339  003A90  0E00               	movlw	0
 16340  003A92  6F10               	movwf	(___fldiv@b+3)& (0+255),b
 16341  003A94                     l13093:
 16342                           
 16343                           ; BSR set to: 1
 16344  003A94  BF1F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16345  003A96  D005               	goto	u15180
 16346  003A98  511F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16347  003A9A  E111               	bnz	l13097
 16348  003A9C  051E               	decf	___fldiv@new_exp& (0+255),w,b
 16349  003A9E  B0D8               	btfsc	status,0,c
 16350  003AA0  D00E               	goto	l13097
 16351  003AA2                     u15180:
 16352                           
 16353                           ; BSR set to: 1
 16354  003AA2  0E00               	movlw	0
 16355  003AA4  6F1F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16356  003AA6  0E00               	movlw	0
 16357  003AA8  6F1E               	movwf	___fldiv@new_exp& (0+255),b
 16358  003AAA  0E00               	movlw	0
 16359  003AAC  6F0D               	movwf	___fldiv@b& (0+255),b
 16360  003AAE  0E00               	movlw	0
 16361  003AB0  6F0E               	movwf	(___fldiv@b+1)& (0+255),b
 16362  003AB2  0E00               	movlw	0
 16363  003AB4  6F0F               	movwf	(___fldiv@b+2)& (0+255),b
 16364  003AB6  0E00               	movlw	0
 16365  003AB8  6F10               	movwf	(___fldiv@b+3)& (0+255),b
 16366  003ABA  0E00               	movlw	0
 16367  003ABC  6F1D               	movwf	___fldiv@sign& (0+255),b
 16368  003ABE                     l13097:
 16369                           
 16370                           ; BSR set to: 1
 16371  003ABE  C11E  F124         	movff	___fldiv@new_exp,___fldiv@bexp
 16372                           
 16373                           ; BSR set to: 1
 16374  003AC2  A124               	btfss	___fldiv@bexp& (0+255),0,b
 16375  003AC4  D002               	goto	l13103
 16376                           
 16377                           ; BSR set to: 1
 16378  003AC6  8F0F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16379  003AC8  D001               	goto	l13105
 16380  003ACA                     l13103:
 16381                           
 16382                           ; BSR set to: 1
 16383  003ACA  9F0F               	bcf	(___fldiv@b+2)& (0+255),7,b
 16384  003ACC                     l13105:
 16385                           
 16386                           ; BSR set to: 1
 16387  003ACC  90D8               	bcf	status,0,c
 16388  003ACE  3124               	rrcf	___fldiv@bexp& (0+255),w,b
 16389  003AD0  6F10               	movwf	(___fldiv@b+3)& (0+255),b
 16390  003AD2  D70E               	goto	l13019
 16391  003AD4                     __end_of___fldiv:
 16392                           	callstack 0
 16393                           
 16394 ;; *************** function ___awmod *****************
 16395 ;; Defined at:
 16396 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;  dividend        2   44[BANK0 ] int 
 16399 ;;  divisor         2   46[BANK0 ] int 
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;  sign            1   49[BANK0 ] unsigned char 
 16402 ;;  counter         1   48[BANK0 ] unsigned char 
 16403 ;; Return value:  Size  Location     Type
 16404 ;;                  2   44[BANK0 ] int 
 16405 ;; Registers used:
 16406 ;;		wreg, status,2, status,0
 16407 ;; Tracked objects:
 16408 ;;		On entry : 3F/0
 16409 ;;		On exit  : 3F/0
 16410 ;;		Unchanged: 0/0
 16411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16412 ;;      Params:         0       4       0       0       0       0       0       0       0
 16413 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16415 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16416 ;;Total ram usage:        6 bytes
 16417 ;; Hardware stack levels used: 1
 16418 ;; Hardware stack levels required when called: 10
 16419 ;; This function calls:
 16420 ;;		Nothing
 16421 ;; This function is called by:
 16422 ;;		_efgtoa
 16423 ;; This function uses a non-reentrant model
 16424 ;;
 16425                           
 16426                           	psect	text73
 16427  0075EC                     __ptext73:
 16428                           	callstack 0
 16429  0075EC                     ___awmod:
 16430                           	callstack 16
 16431                           
 16432                           ; BSR set to: 0
 16433                           
 16434                           ; BSR set to: 1
 16435                           ;incstack = 0
 16436  0075EC  0E00               	movlw	0
 16437  0075EE  6F91               	movwf	___awmod@sign& (0+255),b
 16438                           
 16439                           ; BSR set to: 0
 16440  0075F0  AF8D               	btfss	(___awmod@dividend+1)& (0+255),7,b
 16441  0075F2  D006               	goto	l13301
 16442                           
 16443                           ; BSR set to: 0
 16444  0075F4  6D8C               	negf	___awmod@dividend& (0+255),b
 16445  0075F6  1F8D               	comf	(___awmod@dividend+1)& (0+255),f,b
 16446  0075F8  B0D8               	btfsc	status,0,c
 16447  0075FA  2B8D               	incf	(___awmod@dividend+1)& (0+255),f,b
 16448                           
 16449                           ; BSR set to: 0
 16450  0075FC  0E01               	movlw	1
 16451  0075FE  6F91               	movwf	___awmod@sign& (0+255),b
 16452  007600                     l13301:
 16453                           
 16454                           ; BSR set to: 0
 16455  007600  AF8F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16456  007602  D004               	goto	l13305
 16457                           
 16458                           ; BSR set to: 0
 16459  007604  6D8E               	negf	___awmod@divisor& (0+255),b
 16460  007606  1F8F               	comf	(___awmod@divisor+1)& (0+255),f,b
 16461  007608  B0D8               	btfsc	status,0,c
 16462  00760A  2B8F               	incf	(___awmod@divisor+1)& (0+255),f,b
 16463  00760C                     l13305:
 16464                           
 16465                           ; BSR set to: 0
 16466  00760C  518E               	movf	___awmod@divisor& (0+255),w,b
 16467  00760E  118F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 16468  007610  B4D8               	btfsc	status,2,c
 16469  007612  D018               	goto	l13321
 16470                           
 16471                           ; BSR set to: 0
 16472  007614  0E01               	movlw	1
 16473  007616  6F90               	movwf	___awmod@counter& (0+255),b
 16474  007618  D004               	goto	l13311
 16475  00761A                     l13309:
 16476                           
 16477                           ; BSR set to: 0
 16478  00761A  90D8               	bcf	status,0,c
 16479  00761C  378E               	rlcf	___awmod@divisor& (0+255),f,b
 16480  00761E  378F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16481  007620  2B90               	incf	___awmod@counter& (0+255),f,b
 16482  007622                     l13311:
 16483                           
 16484                           ; BSR set to: 0
 16485  007622  AF8F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16486  007624  D7FA               	goto	l13309
 16487  007626                     u15470:
 16488                           
 16489                           ; BSR set to: 0
 16490  007626  518E               	movf	___awmod@divisor& (0+255),w,b
 16491  007628  5D8C               	subwf	___awmod@dividend& (0+255),w,b
 16492  00762A  518F               	movf	(___awmod@divisor+1)& (0+255),w,b
 16493  00762C  598D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16494  00762E  A0D8               	btfss	status,0,c
 16495  007630  D004               	goto	l13317
 16496                           
 16497                           ; BSR set to: 0
 16498  007632  518E               	movf	___awmod@divisor& (0+255),w,b
 16499  007634  5F8C               	subwf	___awmod@dividend& (0+255),f,b
 16500  007636  518F               	movf	(___awmod@divisor+1)& (0+255),w,b
 16501  007638  5B8D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16502  00763A                     l13317:
 16503                           
 16504                           ; BSR set to: 0
 16505  00763A  90D8               	bcf	status,0,c
 16506  00763C  338F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16507  00763E  338E               	rrcf	___awmod@divisor& (0+255),f,b
 16508                           
 16509                           ; BSR set to: 0
 16510  007640  2F90               	decfsz	___awmod@counter& (0+255),f,b
 16511  007642  D7F1               	goto	u15470
 16512  007644                     l13321:
 16513                           
 16514                           ; BSR set to: 0
 16515  007644  5191               	movf	___awmod@sign& (0+255),w,b
 16516  007646  B4D8               	btfsc	status,2,c
 16517  007648  D004               	goto	l13325
 16518                           
 16519                           ; BSR set to: 0
 16520  00764A  6D8C               	negf	___awmod@dividend& (0+255),b
 16521  00764C  1F8D               	comf	(___awmod@dividend+1)& (0+255),f,b
 16522  00764E  B0D8               	btfsc	status,0,c
 16523  007650  2B8D               	incf	(___awmod@dividend+1)& (0+255),f,b
 16524  007652                     l13325:
 16525                           
 16526                           ; BSR set to: 0
 16527  007652  C08C  F08C         	movff	___awmod@dividend,?___awmod
 16528  007656  C08D  F08D         	movff	___awmod@dividend+1,?___awmod+1
 16529                           
 16530                           ; BSR set to: 0
 16531  00765A  0012               	return		;funcret
 16532  00765C                     __end_of___awmod:
 16533                           	callstack 0
 16534                           
 16535 ;; *************** function ___awdiv *****************
 16536 ;; Defined at:
 16537 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
 16538 ;; Parameters:    Size  Location     Type
 16539 ;;  dividend        2   44[BANK0 ] int 
 16540 ;;  divisor         2   46[BANK0 ] int 
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;  quotient        2   50[BANK0 ] int 
 16543 ;;  sign            1   49[BANK0 ] unsigned char 
 16544 ;;  counter         1   48[BANK0 ] unsigned char 
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  2   44[BANK0 ] int 
 16547 ;; Registers used:
 16548 ;;		wreg, status,2, status,0
 16549 ;; Tracked objects:
 16550 ;;		On entry : 3F/0
 16551 ;;		On exit  : 3F/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16554 ;;      Params:         0       4       0       0       0       0       0       0       0
 16555 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16557 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16558 ;;Total ram usage:        8 bytes
 16559 ;; Hardware stack levels used: 1
 16560 ;; Hardware stack levels required when called: 10
 16561 ;; This function calls:
 16562 ;;		Nothing
 16563 ;; This function is called by:
 16564 ;;		_efgtoa
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text74
 16569  007568                     __ptext74:
 16570                           	callstack 0
 16571  007568                     ___awdiv:
 16572                           	callstack 16
 16573                           
 16574                           ; BSR set to: 0
 16575                           
 16576                           ; BSR set to: 0
 16577                           ;incstack = 0
 16578  007568  0E00               	movlw	0
 16579  00756A  6F91               	movwf	___awdiv@sign& (0+255),b
 16580                           
 16581                           ; BSR set to: 0
 16582  00756C  AF8F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16583  00756E  D006               	goto	l13257
 16584                           
 16585                           ; BSR set to: 0
 16586  007570  6D8E               	negf	___awdiv@divisor& (0+255),b
 16587  007572  1F8F               	comf	(___awdiv@divisor+1)& (0+255),f,b
 16588  007574  B0D8               	btfsc	status,0,c
 16589  007576  2B8F               	incf	(___awdiv@divisor+1)& (0+255),f,b
 16590                           
 16591                           ; BSR set to: 0
 16592  007578  0E01               	movlw	1
 16593  00757A  6F91               	movwf	___awdiv@sign& (0+255),b
 16594  00757C                     l13257:
 16595                           
 16596                           ; BSR set to: 0
 16597  00757C  AF8D               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 16598  00757E  D006               	goto	l13263
 16599                           
 16600                           ; BSR set to: 0
 16601  007580  6D8C               	negf	___awdiv@dividend& (0+255),b
 16602  007582  1F8D               	comf	(___awdiv@dividend+1)& (0+255),f,b
 16603  007584  B0D8               	btfsc	status,0,c
 16604  007586  2B8D               	incf	(___awdiv@dividend+1)& (0+255),f,b
 16605                           
 16606                           ; BSR set to: 0
 16607  007588  0E01               	movlw	1
 16608  00758A  1B91               	xorwf	___awdiv@sign& (0+255),f,b
 16609  00758C                     l13263:
 16610                           
 16611                           ; BSR set to: 0
 16612  00758C  0E00               	movlw	0
 16613  00758E  6F93               	movwf	(___awdiv@quotient+1)& (0+255),b
 16614  007590  0E00               	movlw	0
 16615  007592  6F92               	movwf	___awdiv@quotient& (0+255),b
 16616                           
 16617                           ; BSR set to: 0
 16618  007594  518E               	movf	___awdiv@divisor& (0+255),w,b
 16619  007596  118F               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 16620  007598  B4D8               	btfsc	status,2,c
 16621  00759A  D01C               	goto	l13285
 16622                           
 16623                           ; BSR set to: 0
 16624  00759C  0E01               	movlw	1
 16625  00759E  6F90               	movwf	___awdiv@counter& (0+255),b
 16626  0075A0  D004               	goto	l13271
 16627  0075A2                     l13269:
 16628                           
 16629                           ; BSR set to: 0
 16630  0075A2  90D8               	bcf	status,0,c
 16631  0075A4  378E               	rlcf	___awdiv@divisor& (0+255),f,b
 16632  0075A6  378F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 16633  0075A8  2B90               	incf	___awdiv@counter& (0+255),f,b
 16634  0075AA                     l13271:
 16635                           
 16636                           ; BSR set to: 0
 16637  0075AA  AF8F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16638  0075AC  D7FA               	goto	l13269
 16639  0075AE                     u15410:
 16640                           
 16641                           ; BSR set to: 0
 16642  0075AE  90D8               	bcf	status,0,c
 16643  0075B0  3792               	rlcf	___awdiv@quotient& (0+255),f,b
 16644  0075B2  3793               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16645                           
 16646                           ; BSR set to: 0
 16647  0075B4  518E               	movf	___awdiv@divisor& (0+255),w,b
 16648  0075B6  5D8C               	subwf	___awdiv@dividend& (0+255),w,b
 16649  0075B8  518F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16650  0075BA  598D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16651  0075BC  A0D8               	btfss	status,0,c
 16652  0075BE  D005               	goto	l13281
 16653                           
 16654                           ; BSR set to: 0
 16655  0075C0  518E               	movf	___awdiv@divisor& (0+255),w,b
 16656  0075C2  5F8C               	subwf	___awdiv@dividend& (0+255),f,b
 16657  0075C4  518F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16658  0075C6  5B8D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16659                           
 16660                           ; BSR set to: 0
 16661  0075C8  8192               	bsf	___awdiv@quotient& (0+255),0,b
 16662  0075CA                     l13281:
 16663                           
 16664                           ; BSR set to: 0
 16665  0075CA  90D8               	bcf	status,0,c
 16666  0075CC  338F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 16667  0075CE  338E               	rrcf	___awdiv@divisor& (0+255),f,b
 16668                           
 16669                           ; BSR set to: 0
 16670  0075D0  2F90               	decfsz	___awdiv@counter& (0+255),f,b
 16671  0075D2  D7ED               	goto	u15410
 16672  0075D4                     l13285:
 16673                           
 16674                           ; BSR set to: 0
 16675  0075D4  5191               	movf	___awdiv@sign& (0+255),w,b
 16676  0075D6  B4D8               	btfsc	status,2,c
 16677  0075D8  D004               	goto	l13289
 16678                           
 16679                           ; BSR set to: 0
 16680  0075DA  6D92               	negf	___awdiv@quotient& (0+255),b
 16681  0075DC  1F93               	comf	(___awdiv@quotient+1)& (0+255),f,b
 16682  0075DE  B0D8               	btfsc	status,0,c
 16683  0075E0  2B93               	incf	(___awdiv@quotient+1)& (0+255),f,b
 16684  0075E2                     l13289:
 16685                           
 16686                           ; BSR set to: 0
 16687  0075E2  C092  F08C         	movff	___awdiv@quotient,?___awdiv
 16688  0075E6  C093  F08D         	movff	___awdiv@quotient+1,?___awdiv+1
 16689                           
 16690                           ; BSR set to: 0
 16691  0075EA  0012               	return		;funcret
 16692  0075EC                     __end_of___awdiv:
 16693                           	callstack 0
 16694                           
 16695 ;; *************** function _dtoa *****************
 16696 ;; Defined at:
 16697 ;;		line 287 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 16700 ;;		 -> sprintf@f(11), 
 16701 ;;  d               8    2[BANK1 ] long long 
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;  n               8   26[BANK1 ] long long 
 16704 ;;  i               2   34[BANK1 ] int 
 16705 ;;  s               2   24[BANK1 ] int 
 16706 ;;  w               2   22[BANK1 ] int 
 16707 ;;  p               2   20[BANK1 ] int 
 16708 ;; Return value:  Size  Location     Type
 16709 ;;                  2    0[BANK1 ] int 
 16710 ;; Registers used:
 16711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16712 ;; Tracked objects:
 16713 ;;		On entry : 3F/1
 16714 ;;		On exit  : 3F/0
 16715 ;;		Unchanged: 0/0
 16716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16717 ;;      Params:         0       0      10       0       0       0       0       0       0
 16718 ;;      Locals:         0       0      18       0       0       0       0       0       0
 16719 ;;      Temps:          0       0       8       0       0       0       0       0       0
 16720 ;;      Totals:         0       0      36       0       0       0       0       0       0
 16721 ;;Total ram usage:       36 bytes
 16722 ;; Hardware stack levels used: 1
 16723 ;; Hardware stack levels required when called: 14
 16724 ;; This function calls:
 16725 ;;		___aodiv
 16726 ;;		___aomod
 16727 ;;		_abs
 16728 ;;		_pad
 16729 ;; This function is called by:
 16730 ;;		_vfpfcnvrt
 16731 ;; This function uses a non-reentrant model
 16732 ;;
 16733                           
 16734                           	psect	text75
 16735  003D5C                     __ptext75:
 16736                           	callstack 0
 16737  003D5C                     _dtoa:
 16738                           	callstack 13
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;incstack = 0
 16745  003D5C  C102  F11A         	movff	dtoa@d,dtoa@n
 16746  003D60  C103  F11B         	movff	dtoa@d+1,dtoa@n+1
 16747  003D64  C104  F11C         	movff	dtoa@d+2,dtoa@n+2
 16748  003D68  C105  F11D         	movff	dtoa@d+3,dtoa@n+3
 16749  003D6C  C106  F11E         	movff	dtoa@d+4,dtoa@n+4
 16750  003D70  C107  F11F         	movff	dtoa@d+5,dtoa@n+5
 16751  003D74  C108  F120         	movff	dtoa@d+6,dtoa@n+6
 16752  003D78  C109  F121         	movff	dtoa@d+7,dtoa@n+7
 16753                           
 16754                           ; BSR set to: 1
 16755                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
 16756  003D7C  AF21               	btfss	(dtoa@n+7)& (0+255),7,b
 16757  003D7E  D002               	goto	u16050
 16758  003D80  0E01               	movlw	1
 16759  003D82  D001               	goto	u16060
 16760  003D84                     u16050:
 16761  003D84  0E00               	movlw	0
 16762  003D86                     u16060:
 16763  003D86  6F18               	movwf	dtoa@s& (0+255),b
 16764  003D88  6B19               	clrf	(dtoa@s+1)& (0+255),b
 16765                           
 16766                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 16767  003D8A  5118               	movf	dtoa@s& (0+255),w,b
 16768  003D8C  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 16769  003D8E  B4D8               	btfsc	status,2,c
 16770  003D90  D010               	goto	l13625
 16771                           
 16772                           ; BSR set to: 1
 16773                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 16774  003D92  1F21               	comf	(dtoa@n+7)& (0+255),f,b
 16775  003D94  1F20               	comf	(dtoa@n+6)& (0+255),f,b
 16776  003D96  1F1F               	comf	(dtoa@n+5)& (0+255),f,b
 16777  003D98  1F1E               	comf	(dtoa@n+4)& (0+255),f,b
 16778  003D9A  1F1D               	comf	(dtoa@n+3)& (0+255),f,b
 16779  003D9C  1F1C               	comf	(dtoa@n+2)& (0+255),f,b
 16780  003D9E  1F1B               	comf	(dtoa@n+1)& (0+255),f,b
 16781  003DA0  6D1A               	negf	dtoa@n& (0+255),b
 16782  003DA2  0E00               	movlw	0
 16783  003DA4  231B               	addwfc	(dtoa@n+1)& (0+255),f,b
 16784  003DA6  231C               	addwfc	(dtoa@n+2)& (0+255),f,b
 16785  003DA8  231D               	addwfc	(dtoa@n+3)& (0+255),f,b
 16786  003DAA  231E               	addwfc	(dtoa@n+4)& (0+255),f,b
 16787  003DAC  231F               	addwfc	(dtoa@n+5)& (0+255),f,b
 16788  003DAE  2320               	addwfc	(dtoa@n+6)& (0+255),f,b
 16789  003DB0  2321               	addwfc	(dtoa@n+7)& (0+255),f,b
 16790  003DB2                     l13625:
 16791                           
 16792                           ; BSR set to: 1
 16793                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
 16794  003DB2  0100               	movlb	0	; () banked
 16795  003DB4  AFC3               	btfss	(_prec+1)& (0+255),7,b
 16796                           
 16797                           ; BSR set to: 0
 16798                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
 16799  003DB6  93C4               	bcf	_flags& (0+255),1,b
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
 16803  003DB8  BFC3               	btfsc	(_prec+1)& (0+255),7,b
 16804  003DBA  D005               	goto	u16090
 16805  003DBC  51C3               	movf	(_prec+1)& (0+255),w,b
 16806  003DBE  E109               	bnz	l2177
 16807  003DC0  05C2               	decf	_prec& (0+255),w,b
 16808  003DC2  B0D8               	btfsc	status,0,c
 16809  003DC4  D006               	goto	l2177
 16810  003DC6                     u16090:
 16811                           
 16812                           ; BSR set to: 0
 16813  003DC6  0E00               	movlw	0
 16814  003DC8  0101               	movlb	1	; () banked
 16815  003DCA  6F15               	movwf	(dtoa@p+1)& (0+255),b
 16816  003DCC  0E01               	movlw	1
 16817  003DCE  6F14               	movwf	dtoa@p& (0+255),b
 16818  003DD0  D004               	goto	l2179
 16819  003DD2                     l2177:
 16820                           
 16821                           ; BSR set to: 0
 16822  003DD2  C0C2  F114         	movff	_prec,dtoa@p
 16823  003DD6  C0C3  F115         	movff	_prec+1,dtoa@p+1
 16824  003DDA                     l2179:
 16825                           
 16826                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 304:     w = width;
 16827  003DDA  C0C0  F116         	movff	_width,dtoa@w
 16828  003DDE  C0C1  F117         	movff	_width+1,dtoa@w+1
 16829                           
 16830                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
 16831  003DE2  0101               	movlb	1	; () banked
 16832  003DE4  5118               	movf	dtoa@s& (0+255),w,b
 16833  003DE6  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 16834  003DE8  A4D8               	btfss	status,2,c
 16835  003DEA  D003               	goto	u16110
 16836                           
 16837                           ; BSR set to: 1
 16838  003DEC  0100               	movlb	0	; () banked
 16839  003DEE  A5C4               	btfss	_flags& (0+255),2,b
 16840  003DF0  D004               	goto	l13639
 16841  003DF2                     u16110:
 16842                           
 16843                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 306:         --w;
 16844  003DF2  0101               	movlb	1	; () banked
 16845  003DF4  0716               	decf	dtoa@w& (0+255),f,b
 16846  003DF6  A0D8               	btfss	status,0,c
 16847  003DF8  0717               	decf	(dtoa@w+1)& (0+255),f,b
 16848  003DFA                     l13639:
 16849                           
 16850                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
 16851  003DFA  0E00               	movlw	0
 16852  003DFC  0101               	movlb	1	; () banked
 16853  003DFE  6F23               	movwf	(dtoa@i+1)& (0+255),b
 16854  003E00  0E4F               	movlw	79
 16855  003E02  6F22               	movwf	dtoa@i& (0+255),b
 16856                           
 16857                           ; BSR set to: 1
 16858                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
 16859  003E04  0E00               	movlw	0
 16860  003E06  0103               	movlb	3	; () banked
 16861  003E08  6F61               	movwf	(_dbuf+79)& (0+255),b
 16862                           
 16863                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16864  003E0A  D080               	goto	l13653
 16865  003E0C                     l13643:
 16866                           
 16867                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 313:         --i;
 16868  003E0C  0101               	movlb	1	; () banked
 16869  003E0E  0722               	decf	dtoa@i& (0+255),f,b
 16870  003E10  A0D8               	btfss	status,0,c
 16871  003E12  0723               	decf	(dtoa@i+1)& (0+255),f,b
 16872                           
 16873                           ; BSR set to: 1
 16874                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
 16875  003E14  0E12               	movlw	low _dbuf
 16876  003E16  2522               	addwf	dtoa@i& (0+255),w,b
 16877  003E18  6ED9               	movwf	fsr2l,c
 16878  003E1A  0E03               	movlw	high _dbuf
 16879  003E1C  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 16880  003E1E  6EDA               	movwf	fsr2h,c
 16881  003E20  C11A  F08C         	movff	dtoa@n,___aomod@dividend
 16882  003E24  C11B  F08D         	movff	dtoa@n+1,___aomod@dividend+1
 16883  003E28  C11C  F08E         	movff	dtoa@n+2,___aomod@dividend+2
 16884  003E2C  C11D  F08F         	movff	dtoa@n+3,___aomod@dividend+3
 16885  003E30  C11E  F090         	movff	dtoa@n+4,___aomod@dividend+4
 16886  003E34  C11F  F091         	movff	dtoa@n+5,___aomod@dividend+5
 16887  003E38  C120  F092         	movff	dtoa@n+6,___aomod@dividend+6
 16888  003E3C  C121  F093         	movff	dtoa@n+7,___aomod@dividend+7
 16889  003E40  0E0A               	movlw	10
 16890  003E42  0100               	movlb	0	; () banked
 16891  003E44  6F94               	movwf	___aomod@divisor& (0+255),b
 16892  003E46  0E00               	movlw	0
 16893  003E48  6F95               	movwf	(___aomod@divisor+1)& (0+255),b
 16894  003E4A  0E00               	movlw	0
 16895  003E4C  6F96               	movwf	(___aomod@divisor+2)& (0+255),b
 16896  003E4E  0E00               	movlw	0
 16897  003E50  6F97               	movwf	(___aomod@divisor+3)& (0+255),b
 16898  003E52  0E00               	movlw	0
 16899  003E54  6F98               	movwf	(___aomod@divisor+4)& (0+255),b
 16900  003E56  0E00               	movlw	0
 16901  003E58  6F99               	movwf	(___aomod@divisor+5)& (0+255),b
 16902  003E5A  0E00               	movlw	0
 16903  003E5C  6F9A               	movwf	(___aomod@divisor+6)& (0+255),b
 16904  003E5E  0E00               	movlw	0
 16905  003E60  6F9B               	movwf	(___aomod@divisor+7)& (0+255),b
 16906  003E62  EC1A  F02D         	call	___aomod	;wreg free
 16907  003E66  C08C  F10A         	movff	?___aomod,??_dtoa
 16908  003E6A  C08D  F10B         	movff	?___aomod+1,??_dtoa+1
 16909  003E6E  C08E  F10C         	movff	?___aomod+2,??_dtoa+2
 16910  003E72  C08F  F10D         	movff	?___aomod+3,??_dtoa+3
 16911  003E76  C090  F10E         	movff	?___aomod+4,??_dtoa+4
 16912  003E7A  C091  F10F         	movff	?___aomod+5,??_dtoa+5
 16913  003E7E  C092  F110         	movff	?___aomod+6,??_dtoa+6
 16914  003E82  C093  F111         	movff	?___aomod+7,??_dtoa+7
 16915  003E86  C10A  F09E         	movff	??_dtoa,abs@a
 16916  003E8A  C10C  F09F         	movff	??_dtoa+2,abs@a+1
 16917  003E8E  EC58  F000         	call	_abs	;wreg free
 16918  003E92  519E               	movf	?_abs& (0+255),w,b
 16919  003E94  0F30               	addlw	48
 16920  003E96  6EDF               	movwf	indf2,c
 16921                           
 16922                           ; BSR set to: 0
 16923                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 315:         --p;
 16924  003E98  0101               	movlb	1	; () banked
 16925  003E9A  0714               	decf	dtoa@p& (0+255),f,b
 16926  003E9C  A0D8               	btfss	status,0,c
 16927  003E9E  0715               	decf	(dtoa@p+1)& (0+255),f,b
 16928                           
 16929                           ; BSR set to: 1
 16930                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 316:         --w;
 16931  003EA0  0716               	decf	dtoa@w& (0+255),f,b
 16932  003EA2  A0D8               	btfss	status,0,c
 16933  003EA4  0717               	decf	(dtoa@w+1)& (0+255),f,b
 16934                           
 16935                           ; BSR set to: 1
 16936                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
 16937  003EA6  C11A  F08C         	movff	dtoa@n,___aodiv@dividend
 16938  003EAA  C11B  F08D         	movff	dtoa@n+1,___aodiv@dividend+1
 16939  003EAE  C11C  F08E         	movff	dtoa@n+2,___aodiv@dividend+2
 16940  003EB2  C11D  F08F         	movff	dtoa@n+3,___aodiv@dividend+3
 16941  003EB6  C11E  F090         	movff	dtoa@n+4,___aodiv@dividend+4
 16942  003EBA  C11F  F091         	movff	dtoa@n+5,___aodiv@dividend+5
 16943  003EBE  C120  F092         	movff	dtoa@n+6,___aodiv@dividend+6
 16944  003EC2  C121  F093         	movff	dtoa@n+7,___aodiv@dividend+7
 16945  003EC6  0E0A               	movlw	10
 16946  003EC8  0100               	movlb	0	; () banked
 16947  003ECA  6F94               	movwf	___aodiv@divisor& (0+255),b
 16948  003ECC  0E00               	movlw	0
 16949  003ECE  6F95               	movwf	(___aodiv@divisor+1)& (0+255),b
 16950  003ED0  0E00               	movlw	0
 16951  003ED2  6F96               	movwf	(___aodiv@divisor+2)& (0+255),b
 16952  003ED4  0E00               	movlw	0
 16953  003ED6  6F97               	movwf	(___aodiv@divisor+3)& (0+255),b
 16954  003ED8  0E00               	movlw	0
 16955  003EDA  6F98               	movwf	(___aodiv@divisor+4)& (0+255),b
 16956  003EDC  0E00               	movlw	0
 16957  003EDE  6F99               	movwf	(___aodiv@divisor+5)& (0+255),b
 16958  003EE0  0E00               	movlw	0
 16959  003EE2  6F9A               	movwf	(___aodiv@divisor+6)& (0+255),b
 16960  003EE4  0E00               	movlw	0
 16961  003EE6  6F9B               	movwf	(___aodiv@divisor+7)& (0+255),b
 16962  003EE8  EC06  F027         	call	___aodiv	;wreg free
 16963  003EEC  C08C  F11A         	movff	?___aodiv,dtoa@n
 16964  003EF0  C08D  F11B         	movff	?___aodiv+1,dtoa@n+1
 16965  003EF4  C08E  F11C         	movff	?___aodiv+2,dtoa@n+2
 16966  003EF8  C08F  F11D         	movff	?___aodiv+3,dtoa@n+3
 16967  003EFC  C090  F11E         	movff	?___aodiv+4,dtoa@n+4
 16968  003F00  C091  F11F         	movff	?___aodiv+5,dtoa@n+5
 16969  003F04  C092  F120         	movff	?___aodiv+6,dtoa@n+6
 16970  003F08  C093  F121         	movff	?___aodiv+7,dtoa@n+7
 16971  003F0C                     l13653:
 16972                           
 16973                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16974  003F0C  0101               	movlb	1	; () banked
 16975  003F0E  BF23               	btfsc	(dtoa@i+1)& (0+255),7,b
 16976  003F10  D020               	goto	u16160
 16977  003F12  5123               	movf	(dtoa@i+1)& (0+255),w,b
 16978  003F14  E103               	bnz	u16120
 16979  003F16  0522               	decf	dtoa@i& (0+255),w,b
 16980  003F18  A0D8               	btfss	status,0,c
 16981  003F1A  D01B               	goto	u16160
 16982  003F1C                     u16120:
 16983                           
 16984                           ; BSR set to: 1
 16985  003F1C  511A               	movf	dtoa@n& (0+255),w,b
 16986  003F1E  111B               	iorwf	(dtoa@n+1)& (0+255),w,b
 16987  003F20  111C               	iorwf	(dtoa@n+2)& (0+255),w,b
 16988  003F22  111D               	iorwf	(dtoa@n+3)& (0+255),w,b
 16989  003F24  111E               	iorwf	(dtoa@n+4)& (0+255),w,b
 16990  003F26  111F               	iorwf	(dtoa@n+5)& (0+255),w,b
 16991  003F28  1120               	iorwf	(dtoa@n+6)& (0+255),w,b
 16992  003F2A  1121               	iorwf	(dtoa@n+7)& (0+255),w,b
 16993  003F2C  A4D8               	btfss	status,2,c
 16994  003F2E  D76E               	goto	l13643
 16995                           
 16996                           ; BSR set to: 1
 16997  003F30  BF15               	btfsc	(dtoa@p+1)& (0+255),7,b
 16998  003F32  D005               	goto	u16140
 16999  003F34  5115               	movf	(dtoa@p+1)& (0+255),w,b
 17000  003F36  E102               	bnz	u16141
 17001  003F38  0514               	decf	dtoa@p& (0+255),w,b
 17002  003F3A  B0D8               	btfsc	status,0,c
 17003  003F3C                     u16141:
 17004  003F3C  D767               	goto	l13643
 17005  003F3E                     u16140:
 17006                           
 17007                           ; BSR set to: 1
 17008  003F3E  BF17               	btfsc	(dtoa@w+1)& (0+255),7,b
 17009  003F40  D008               	goto	u16160
 17010  003F42  5117               	movf	(dtoa@w+1)& (0+255),w,b
 17011  003F44  E103               	bnz	u16150
 17012  003F46  0516               	decf	dtoa@w& (0+255),w,b
 17013  003F48  A0D8               	btfss	status,0,c
 17014  003F4A  D003               	goto	u16160
 17015  003F4C                     u16150:
 17016                           
 17017                           ; BSR set to: 1
 17018  003F4C  0100               	movlb	0	; () banked
 17019  003F4E  B3C4               	btfsc	_flags& (0+255),1,b
 17020  003F50  D75D               	goto	l13643
 17021  003F52                     u16160:
 17022                           
 17023                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
 17024  003F52  0101               	movlb	1	; () banked
 17025  003F54  5118               	movf	dtoa@s& (0+255),w,b
 17026  003F56  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 17027  003F58  A4D8               	btfss	status,2,c
 17028  003F5A  D003               	goto	u16180
 17029                           
 17030                           ; BSR set to: 1
 17031  003F5C  0100               	movlb	0	; () banked
 17032  003F5E  A5C4               	btfss	_flags& (0+255),2,b
 17033  003F60  D018               	goto	l13677
 17034  003F62                     u16180:
 17035                           
 17036                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 322:         --i;
 17037  003F62  0101               	movlb	1	; () banked
 17038  003F64  0722               	decf	dtoa@i& (0+255),f,b
 17039  003F66  A0D8               	btfss	status,0,c
 17040  003F68  0723               	decf	(dtoa@i+1)& (0+255),f,b
 17041                           
 17042                           ; BSR set to: 1
 17043                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
 17044  003F6A  5118               	movf	dtoa@s& (0+255),w,b
 17045  003F6C  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 17046  003F6E  A4D8               	btfss	status,2,c
 17047  003F70  D004               	goto	l13673
 17048                           
 17049                           ; BSR set to: 1
 17050  003F72  0E00               	movlw	0
 17051  003F74  6F13               	movwf	(_dtoa$4885+1)& (0+255),b
 17052  003F76  0E2B               	movlw	43
 17053  003F78  D003               	goto	L19
 17054  003F7A                     l13673:
 17055                           
 17056                           ; BSR set to: 1
 17057  003F7A  0E00               	movlw	0
 17058  003F7C  6F13               	movwf	(_dtoa$4885+1)& (0+255),b
 17059  003F7E  0E2D               	movlw	45
 17060  003F80                     L19:
 17061  003F80  6F12               	movwf	_dtoa$4885& (0+255),b
 17062                           
 17063                           ; BSR set to: 1
 17064  003F82  0E12               	movlw	low _dbuf
 17065  003F84  2522               	addwf	dtoa@i& (0+255),w,b
 17066  003F86  6ED9               	movwf	fsr2l,c
 17067  003F88  0E03               	movlw	high _dbuf
 17068  003F8A  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 17069  003F8C  6EDA               	movwf	fsr2h,c
 17070  003F8E  C112  FFDF         	movff	_dtoa$4885,indf2
 17071  003F92                     l13677:
 17072                           
 17073                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
 17074  003F92  C100  F09C         	movff	dtoa@fp,pad@fp
 17075  003F96  C101  F09D         	movff	dtoa@fp+1,pad@fp+1
 17076  003F9A  0E12               	movlw	low _dbuf
 17077  003F9C  0101               	movlb	1	; () banked
 17078  003F9E  2522               	addwf	dtoa@i& (0+255),w,b
 17079  003FA0  0100               	movlb	0	; () banked
 17080  003FA2  6F9E               	movwf	pad@buf& (0+255),b
 17081  003FA4  0E03               	movlw	high _dbuf
 17082  003FA6  0101               	movlb	1	; () banked
 17083  003FA8  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 17084  003FAA  0100               	movlb	0	; () banked
 17085  003FAC  6F9F               	movwf	(pad@buf+1)& (0+255),b
 17086  003FAE  C116  F0A0         	movff	dtoa@w,pad@p
 17087  003FB2  C117  F0A1         	movff	dtoa@w+1,pad@p+1
 17088  003FB6  ECB5  F038         	call	_pad	;wreg free
 17089  003FBA  C09C  F100         	movff	?_pad,?_dtoa
 17090  003FBE  C09D  F101         	movff	?_pad+1,?_dtoa+1
 17091                           
 17092                           ; BSR set to: 0
 17093  003FC2  0012               	return		;funcret
 17094  003FC4                     __end_of_dtoa:
 17095                           	callstack 0
 17096                           
 17097 ;; *************** function _pad *****************
 17098 ;; Defined at:
 17099 ;;		line 72 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 17100 ;; Parameters:    Size  Location     Type
 17101 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
 17102 ;;		 -> sprintf@f(11), 
 17103 ;;  buf             2   62[BANK0 ] PTR unsigned char 
 17104 ;;		 -> dbuf(80), 
 17105 ;;  p               2   64[BANK0 ] int 
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;  w               2   69[BANK0 ] int 
 17108 ;;  i               2   67[BANK0 ] int 
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  2   60[BANK0 ] int 
 17111 ;; Registers used:
 17112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17113 ;; Tracked objects:
 17114 ;;		On entry : 3F/0
 17115 ;;		On exit  : 3F/0
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17118 ;;      Params:         0       6       0       0       0       0       0       0       0
 17119 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17120 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17121 ;;      Totals:         0      11       0       0       0       0       0       0       0
 17122 ;;Total ram usage:       11 bytes
 17123 ;; Hardware stack levels used: 1
 17124 ;; Hardware stack levels required when called: 13
 17125 ;; This function calls:
 17126 ;;		_fputc
 17127 ;;		_fputs
 17128 ;;		_strlen
 17129 ;; This function is called by:
 17130 ;;		_dtoa
 17131 ;;		_efgtoa
 17132 ;; This function uses a non-reentrant model
 17133 ;;
 17134                           
 17135                           	psect	text76
 17136  00716A                     __ptext76:
 17137                           	callstack 0
 17138  00716A                     _pad:
 17139                           	callstack 13
 17140                           
 17141                           ; BSR set to: 0
 17142                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 17143                           
 17144                           ; BSR set to: 0
 17145                           ;incstack = 0
 17146  00716A  A1C4               	btfss	_flags& (0+255),0,b
 17147  00716C  D00A               	goto	l13423
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 17151  00716E  C09E  F095         	movff	pad@buf,fputs@s
 17152  007172  C09F  F096         	movff	pad@buf+1,fputs@s+1
 17153  007176  C09C  F097         	movff	pad@fp,fputs@fp
 17154  00717A  C09D  F098         	movff	pad@fp+1,fputs@fp+1
 17155  00717E  EC50  F03F         	call	_fputs	;wreg free
 17156  007182                     l13423:
 17157                           
 17158                           ; BSR set to: 0
 17159                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 17160  007182  BFA1               	btfsc	(pad@p+1)& (0+255),7,b
 17161  007184  D005               	goto	l13427
 17162                           
 17163                           ; BSR set to: 0
 17164  007186  C0A0  F0A5         	movff	pad@p,pad@w
 17165  00718A  C0A1  F0A6         	movff	pad@p+1,pad@w+1
 17166  00718E  D004               	goto	l2150
 17167  007190                     l13427:
 17168                           
 17169                           ; BSR set to: 0
 17170  007190  0E00               	movlw	0
 17171  007192  6FA6               	movwf	(pad@w+1)& (0+255),b
 17172  007194  0E00               	movlw	0
 17173  007196  6FA5               	movwf	pad@w& (0+255),b
 17174  007198                     l2150:
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17178  007198  0E00               	movlw	0
 17179  00719A  6FA4               	movwf	(pad@i+1)& (0+255),b
 17180  00719C  0E00               	movlw	0
 17181  00719E  6FA3               	movwf	pad@i& (0+255),b
 17182                           
 17183                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 17184  0071A0  D00C               	goto	l13433
 17185  0071A2                     l13429:
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 17189  0071A2  0E00               	movlw	0
 17190  0071A4  6F8D               	movwf	(fputc@c+1)& (0+255),b
 17191  0071A6  0E20               	movlw	32
 17192  0071A8  6F8C               	movwf	fputc@c& (0+255),b
 17193  0071AA  C09C  F08E         	movff	pad@fp,fputc@fp
 17194  0071AE  C09D  F08F         	movff	pad@fp+1,fputc@fp+1
 17195  0071B2  ECC8  F037         	call	_fputc	;wreg free
 17196                           
 17197                           ; BSR set to: 0
 17198                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17199  0071B6  4BA3               	infsnz	pad@i& (0+255),f,b
 17200  0071B8  2BA4               	incf	(pad@i+1)& (0+255),f,b
 17201  0071BA                     l13433:
 17202                           
 17203                           ; BSR set to: 0
 17204                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 17205  0071BA  51A5               	movf	pad@w& (0+255),w,b
 17206  0071BC  5DA3               	subwf	pad@i& (0+255),w,b
 17207  0071BE  51A4               	movf	(pad@i+1)& (0+255),w,b
 17208  0071C0  0A80               	xorlw	128
 17209  0071C2  6FA2               	movwf	??_pad& (0+255),b
 17210  0071C4  51A6               	movf	(pad@w+1)& (0+255),w,b
 17211  0071C6  0A80               	xorlw	128
 17212  0071C8  59A2               	subwfb	??_pad& (0+255),w,b
 17213  0071CA  A0D8               	btfss	status,0,c
 17214  0071CC  D7EA               	goto	l13429
 17215                           
 17216                           ; BSR set to: 0
 17217                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 17218  0071CE  B1C4               	btfsc	_flags& (0+255),0,b
 17219  0071D0  D00A               	goto	l13437
 17220                           
 17221                           ; BSR set to: 0
 17222                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 17223  0071D2  C09E  F095         	movff	pad@buf,fputs@s
 17224  0071D6  C09F  F096         	movff	pad@buf+1,fputs@s+1
 17225  0071DA  C09C  F097         	movff	pad@fp,fputs@fp
 17226  0071DE  C09D  F098         	movff	pad@fp+1,fputs@fp+1
 17227  0071E2  EC50  F03F         	call	_fputs	;wreg free
 17228  0071E6                     l13437:
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
 17232  0071E6  C09E  F08C         	movff	pad@buf,strlen@s
 17233  0071EA  C09F  F08D         	movff	pad@buf+1,strlen@s+1
 17234  0071EE  ECE9  F000         	call	_strlen	;wreg free
 17235  0071F2  51A5               	movf	pad@w& (0+255),w,b
 17236  0071F4  258C               	addwf	?_strlen& (0+255),w,b
 17237  0071F6  6F9C               	movwf	?_pad& (0+255),b
 17238  0071F8  51A6               	movf	(pad@w+1)& (0+255),w,b
 17239  0071FA  218D               	addwfc	(?_strlen+1)& (0+255),w,b
 17240  0071FC  6F9D               	movwf	(?_pad+1)& (0+255),b
 17241                           
 17242                           ; BSR set to: 0
 17243  0071FE  0012               	return		;funcret
 17244  007200                     __end_of_pad:
 17245                           	callstack 0
 17246                           
 17247 ;; *************** function _strlen *****************
 17248 ;; Defined at:
 17249 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 17250 ;; Parameters:    Size  Location     Type
 17251 ;;  s               2   44[BANK0 ] PTR const unsigned char 
 17252 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), executeCommand@comando.number(4), 
 17253 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), Encoder_ISR@salida(4), 
 17254 ;;		 -> Encoder_ISR@tics(4), ustep(1), NULL(0), 
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;  a               2   46[BANK0 ] PTR const unsigned char 
 17257 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), executeCommand@comando.number(4), 
 17258 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), Encoder_ISR@salida(4), 
 17259 ;;		 -> Encoder_ISR@tics(4), ustep(1), NULL(0), 
 17260 ;; Return value:  Size  Location     Type
 17261 ;;                  2   44[BANK0 ] unsigned int 
 17262 ;; Registers used:
 17263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17264 ;; Tracked objects:
 17265 ;;		On entry : 3C/0
 17266 ;;		On exit  : 3F/0
 17267 ;;		Unchanged: 0/0
 17268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17269 ;;      Params:         0       2       0       0       0       0       0       0       0
 17270 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17271 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17272 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17273 ;;Total ram usage:        4 bytes
 17274 ;; Hardware stack levels used: 1
 17275 ;; Hardware stack levels required when called: 10
 17276 ;; This function calls:
 17277 ;;		Nothing
 17278 ;; This function is called by:
 17279 ;;		_USBCommandFetch
 17280 ;;		_pad
 17281 ;;		_stoa
 17282 ;; This function uses a non-reentrant model
 17283 ;;
 17284                           
 17285                           	psect	text77
 17286  0001D2                     __ptext77:
 17287                           	callstack 0
 17288  0001D2                     _strlen:
 17289                           	callstack 16
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;incstack = 0
 17293  0001D2  C08C  F08E         	movff	strlen@s,strlen@a
 17294  0001D6  C08D  F08F         	movff	strlen@s+1,strlen@a+1
 17295  0001DA  D003               	goto	l12665
 17296  0001DC                     l12663:
 17297  0001DC  0100               	movlb	0	; () banked
 17298  0001DE  4B8C               	infsnz	strlen@s& (0+255),f,b
 17299  0001E0  2B8D               	incf	(strlen@s+1)& (0+255),f,b
 17300  0001E2                     l12665:
 17301  0001E2  C08C  FFD9         	movff	strlen@s,fsr2l
 17302  0001E6  C08D  FFDA         	movff	strlen@s+1,fsr2h
 17303  0001EA  50DF               	movf	indf2,w,c
 17304  0001EC  A4D8               	btfss	status,2,c
 17305  0001EE  D7F6               	goto	l12663
 17306  0001F0  0100               	movlb	0	; () banked
 17307  0001F2  518E               	movf	strlen@a& (0+255),w,b
 17308  0001F4  5D8C               	subwf	strlen@s& (0+255),w,b
 17309  0001F6  6F8C               	movwf	?_strlen& (0+255),b
 17310  0001F8  518F               	movf	(strlen@a+1)& (0+255),w,b
 17311  0001FA  598D               	subwfb	(strlen@s+1)& (0+255),w,b
 17312  0001FC  6F8D               	movwf	(?_strlen+1)& (0+255),b
 17313                           
 17314                           ; BSR set to: 0
 17315  0001FE  0012               	return		;funcret
 17316  000200                     __end_of_strlen:
 17317                           	callstack 0
 17318                           
 17319 ;; *************** function _fputs *****************
 17320 ;; Defined at:
 17321 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 17322 ;; Parameters:    Size  Location     Type
 17323 ;;  s               2   53[BANK0 ] PTR const unsigned char 
 17324 ;;		 -> dbuf(80), 
 17325 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
 17326 ;;		 -> sprintf@f(11), 
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;  i               2   58[BANK0 ] int 
 17329 ;;  c               1   57[BANK0 ] unsigned char 
 17330 ;; Return value:  Size  Location     Type
 17331 ;;                  2   53[BANK0 ] int 
 17332 ;; Registers used:
 17333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17334 ;; Tracked objects:
 17335 ;;		On entry : 3F/0
 17336 ;;		On exit  : 3F/0
 17337 ;;		Unchanged: 0/0
 17338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17339 ;;      Params:         0       4       0       0       0       0       0       0       0
 17340 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17341 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17342 ;;      Totals:         0       7       0       0       0       0       0       0       0
 17343 ;;Total ram usage:        7 bytes
 17344 ;; Hardware stack levels used: 1
 17345 ;; Hardware stack levels required when called: 12
 17346 ;; This function calls:
 17347 ;;		_fputc
 17348 ;; This function is called by:
 17349 ;;		_pad
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353                           	psect	text78
 17354  007EA0                     __ptext78:
 17355                           	callstack 0
 17356  007EA0                     _fputs:
 17357                           	callstack 13
 17358                           
 17359                           ; BSR set to: 0
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;incstack = 0
 17363  007EA0  0E00               	movlw	0
 17364  007EA2  6F9B               	movwf	(fputs@i+1)& (0+255),b
 17365  007EA4  0E00               	movlw	0
 17366  007EA6  6F9A               	movwf	fputs@i& (0+255),b
 17367  007EA8  D00B               	goto	l12879
 17368  007EAA                     l12875:
 17369                           
 17370                           ; BSR set to: 0
 17371  007EAA  C099  F08C         	movff	fputs@c,fputc@c
 17372  007EAE  6B8D               	clrf	(fputc@c+1)& (0+255),b
 17373  007EB0  C097  F08E         	movff	fputs@fp,fputc@fp
 17374  007EB4  C098  F08F         	movff	fputs@fp+1,fputc@fp+1
 17375  007EB8  ECC8  F037         	call	_fputc	;wreg free
 17376                           
 17377                           ; BSR set to: 0
 17378  007EBC  4B9A               	infsnz	fputs@i& (0+255),f,b
 17379  007EBE  2B9B               	incf	(fputs@i+1)& (0+255),f,b
 17380  007EC0                     l12879:
 17381                           
 17382                           ; BSR set to: 0
 17383  007EC0  519A               	movf	fputs@i& (0+255),w,b
 17384  007EC2  2595               	addwf	fputs@s& (0+255),w,b
 17385  007EC4  6ED9               	movwf	fsr2l,c
 17386  007EC6  519B               	movf	(fputs@i+1)& (0+255),w,b
 17387  007EC8  2196               	addwfc	(fputs@s+1)& (0+255),w,b
 17388  007ECA  6EDA               	movwf	fsr2h,c
 17389  007ECC  50DF               	movf	indf2,w,c
 17390  007ECE  6F99               	movwf	fputs@c& (0+255),b
 17391  007ED0  5199               	movf	fputs@c& (0+255),w,b
 17392  007ED2  B4D8               	btfsc	status,2,c
 17393  007ED4  0012               	return	
 17394  007ED6  D7E9               	goto	l12875
 17395  007ED8                     __end_of_fputs:
 17396                           	callstack 0
 17397                           
 17398 ;; *************** function _abs *****************
 17399 ;; Defined at:
 17400 ;;		line 1 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/abs.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;  a               2   62[BANK0 ] int 
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;		None
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  2   62[BANK0 ] int 
 17407 ;; Registers used:
 17408 ;;		wreg, status,2, status,0
 17409 ;; Tracked objects:
 17410 ;;		On entry : 3F/0
 17411 ;;		On exit  : 3F/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17414 ;;      Params:         0       2       0       0       0       0       0       0       0
 17415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17416 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17417 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17418 ;;Total ram usage:        4 bytes
 17419 ;; Hardware stack levels used: 1
 17420 ;; Hardware stack levels required when called: 10
 17421 ;; This function calls:
 17422 ;;		Nothing
 17423 ;; This function is called by:
 17424 ;;		_dtoa
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           	psect	text79
 17429  0000B0                     __ptext79:
 17430                           	callstack 0
 17431  0000B0                     _abs:
 17432                           	callstack 16
 17433                           
 17434                           ; BSR set to: 0
 17435                           
 17436                           ; BSR set to: 0
 17437                           ;incstack = 0
 17438  0000B0  BF9F               	btfsc	(abs@a+1)& (0+255),7,b
 17439  0000B2  D005               	goto	u15700
 17440  0000B4  519F               	movf	(abs@a+1)& (0+255),w,b
 17441  0000B6  E110               	bnz	l2360
 17442  0000B8  059E               	decf	abs@a& (0+255),w,b
 17443  0000BA  B0D8               	btfsc	status,0,c
 17444  0000BC  D00D               	goto	l2360
 17445  0000BE                     u15700:
 17446                           
 17447                           ; BSR set to: 0
 17448  0000BE  C09E  F0A0         	movff	abs@a,??_abs
 17449  0000C2  C09F  F0A1         	movff	abs@a+1,??_abs+1
 17450  0000C6  1FA0               	comf	??_abs& (0+255),f,b
 17451  0000C8  1FA1               	comf	(??_abs+1)& (0+255),f,b
 17452  0000CA  4BA0               	infsnz	??_abs& (0+255),f,b
 17453  0000CC  2BA1               	incf	(??_abs+1)& (0+255),f,b
 17454  0000CE  C0A0  F09E         	movff	??_abs,?_abs
 17455  0000D2  C0A1  F09F         	movff	??_abs+1,?_abs+1
 17456  0000D6  0012               	return	
 17457  0000D8                     l2360:
 17458                           
 17459                           ; BSR set to: 0
 17460  0000D8  C09E  F09E         	movff	abs@a,?_abs
 17461  0000DC  C09F  F09F         	movff	abs@a+1,?_abs+1
 17462                           
 17463                           ; BSR set to: 0
 17464  0000E0  0012               	return		;funcret
 17465  0000E2                     __end_of_abs:
 17466                           	callstack 0
 17467                           
 17468 ;; *************** function ___aomod *****************
 17469 ;; Defined at:
 17470 ;;		line 9 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/aomod.c"
 17471 ;; Parameters:    Size  Location     Type
 17472 ;;  dividend        8   44[BANK0 ] long long 
 17473 ;;  divisor         8   52[BANK0 ] long long 
 17474 ;; Auto vars:     Size  Location     Type
 17475 ;;  sign            1   61[BANK0 ] unsigned char 
 17476 ;;  counter         1   60[BANK0 ] unsigned char 
 17477 ;; Return value:  Size  Location     Type
 17478 ;;                  8   44[BANK0 ] long long 
 17479 ;; Registers used:
 17480 ;;		wreg, status,2, status,0
 17481 ;; Tracked objects:
 17482 ;;		On entry : 3F/0
 17483 ;;		On exit  : 3F/0
 17484 ;;		Unchanged: 0/0
 17485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17486 ;;      Params:         0      16       0       0       0       0       0       0       0
 17487 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17489 ;;      Totals:         0      18       0       0       0       0       0       0       0
 17490 ;;Total ram usage:       18 bytes
 17491 ;; Hardware stack levels used: 1
 17492 ;; Hardware stack levels required when called: 10
 17493 ;; This function calls:
 17494 ;;		Nothing
 17495 ;; This function is called by:
 17496 ;;		_dtoa
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500                           	psect	text80
 17501  005A34                     __ptext80:
 17502                           	callstack 0
 17503  005A34                     ___aomod:
 17504                           	callstack 16
 17505                           
 17506                           ; BSR set to: 0
 17507                           
 17508                           ; BSR set to: 0
 17509                           ;incstack = 0
 17510  005A34  0E00               	movlw	0
 17511  005A36  6F9D               	movwf	___aomod@sign& (0+255),b
 17512                           
 17513                           ; BSR set to: 0
 17514  005A38  AF93               	btfss	(___aomod@dividend+7)& (0+255),7,b
 17515  005A3A  D012               	goto	l12947
 17516                           
 17517                           ; BSR set to: 0
 17518  005A3C  1F93               	comf	(___aomod@dividend+7)& (0+255),f,b
 17519  005A3E  1F92               	comf	(___aomod@dividend+6)& (0+255),f,b
 17520  005A40  1F91               	comf	(___aomod@dividend+5)& (0+255),f,b
 17521  005A42  1F90               	comf	(___aomod@dividend+4)& (0+255),f,b
 17522  005A44  1F8F               	comf	(___aomod@dividend+3)& (0+255),f,b
 17523  005A46  1F8E               	comf	(___aomod@dividend+2)& (0+255),f,b
 17524  005A48  1F8D               	comf	(___aomod@dividend+1)& (0+255),f,b
 17525  005A4A  6D8C               	negf	___aomod@dividend& (0+255),b
 17526  005A4C  0E00               	movlw	0
 17527  005A4E  238D               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 17528  005A50  238E               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 17529  005A52  238F               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 17530  005A54  2390               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 17531  005A56  2391               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 17532  005A58  2392               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 17533  005A5A  2393               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 17534                           
 17535                           ; BSR set to: 0
 17536  005A5C  0E01               	movlw	1
 17537  005A5E  6F9D               	movwf	___aomod@sign& (0+255),b
 17538  005A60                     l12947:
 17539                           
 17540                           ; BSR set to: 0
 17541  005A60  AF9B               	btfss	(___aomod@divisor+7)& (0+255),7,b
 17542  005A62  D010               	goto	l12951
 17543                           
 17544                           ; BSR set to: 0
 17545  005A64  1F9B               	comf	(___aomod@divisor+7)& (0+255),f,b
 17546  005A66  1F9A               	comf	(___aomod@divisor+6)& (0+255),f,b
 17547  005A68  1F99               	comf	(___aomod@divisor+5)& (0+255),f,b
 17548  005A6A  1F98               	comf	(___aomod@divisor+4)& (0+255),f,b
 17549  005A6C  1F97               	comf	(___aomod@divisor+3)& (0+255),f,b
 17550  005A6E  1F96               	comf	(___aomod@divisor+2)& (0+255),f,b
 17551  005A70  1F95               	comf	(___aomod@divisor+1)& (0+255),f,b
 17552  005A72  6D94               	negf	___aomod@divisor& (0+255),b
 17553  005A74  0E00               	movlw	0
 17554  005A76  2395               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 17555  005A78  2396               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 17556  005A7A  2397               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 17557  005A7C  2398               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 17558  005A7E  2399               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 17559  005A80  239A               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 17560  005A82  239B               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 17561  005A84                     l12951:
 17562                           
 17563                           ; BSR set to: 0
 17564  005A84  5194               	movf	___aomod@divisor& (0+255),w,b
 17565  005A86  1195               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 17566  005A88  1196               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 17567  005A8A  1197               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 17568  005A8C  1198               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 17569  005A8E  1199               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 17570  005A90  119A               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 17571  005A92  119B               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 17572  005A94  B4D8               	btfsc	status,2,c
 17573  005A96  D03C               	goto	l12967
 17574                           
 17575                           ; BSR set to: 0
 17576  005A98  0E01               	movlw	1
 17577  005A9A  6F9C               	movwf	___aomod@counter& (0+255),b
 17578  005A9C  D00A               	goto	l12957
 17579  005A9E                     l12955:
 17580                           
 17581                           ; BSR set to: 0
 17582  005A9E  90D8               	bcf	status,0,c
 17583  005AA0  3794               	rlcf	___aomod@divisor& (0+255),f,b
 17584  005AA2  3795               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 17585  005AA4  3796               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 17586  005AA6  3797               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 17587  005AA8  3798               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 17588  005AAA  3799               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 17589  005AAC  379A               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 17590  005AAE  379B               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 17591  005AB0  2B9C               	incf	___aomod@counter& (0+255),f,b
 17592  005AB2                     l12957:
 17593                           
 17594                           ; BSR set to: 0
 17595  005AB2  AF9B               	btfss	(___aomod@divisor+7)& (0+255),7,b
 17596  005AB4  D7F4               	goto	l12955
 17597  005AB6                     u14940:
 17598                           
 17599                           ; BSR set to: 0
 17600  005AB6  5194               	movf	___aomod@divisor& (0+255),w,b
 17601  005AB8  5D8C               	subwf	___aomod@dividend& (0+255),w,b
 17602  005ABA  5195               	movf	(___aomod@divisor+1)& (0+255),w,b
 17603  005ABC  598D               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 17604  005ABE  5196               	movf	(___aomod@divisor+2)& (0+255),w,b
 17605  005AC0  598E               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 17606  005AC2  5197               	movf	(___aomod@divisor+3)& (0+255),w,b
 17607  005AC4  598F               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 17608  005AC6  5198               	movf	(___aomod@divisor+4)& (0+255),w,b
 17609  005AC8  5990               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 17610  005ACA  5199               	movf	(___aomod@divisor+5)& (0+255),w,b
 17611  005ACC  5991               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 17612  005ACE  519A               	movf	(___aomod@divisor+6)& (0+255),w,b
 17613  005AD0  5992               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 17614  005AD2  519B               	movf	(___aomod@divisor+7)& (0+255),w,b
 17615  005AD4  5993               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 17616  005AD6  A0D8               	btfss	status,0,c
 17617  005AD8  D010               	goto	l12963
 17618                           
 17619                           ; BSR set to: 0
 17620  005ADA  5194               	movf	___aomod@divisor& (0+255),w,b
 17621  005ADC  5F8C               	subwf	___aomod@dividend& (0+255),f,b
 17622  005ADE  5195               	movf	(___aomod@divisor+1)& (0+255),w,b
 17623  005AE0  5B8D               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 17624  005AE2  5196               	movf	(___aomod@divisor+2)& (0+255),w,b
 17625  005AE4  5B8E               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 17626  005AE6  5197               	movf	(___aomod@divisor+3)& (0+255),w,b
 17627  005AE8  5B8F               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 17628  005AEA  5198               	movf	(___aomod@divisor+4)& (0+255),w,b
 17629  005AEC  5B90               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 17630  005AEE  5199               	movf	(___aomod@divisor+5)& (0+255),w,b
 17631  005AF0  5B91               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 17632  005AF2  519A               	movf	(___aomod@divisor+6)& (0+255),w,b
 17633  005AF4  5B92               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 17634  005AF6  519B               	movf	(___aomod@divisor+7)& (0+255),w,b
 17635  005AF8  5B93               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 17636  005AFA                     l12963:
 17637                           
 17638                           ; BSR set to: 0
 17639  005AFA  90D8               	bcf	status,0,c
 17640  005AFC  339B               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 17641  005AFE  339A               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 17642  005B00  3399               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 17643  005B02  3398               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 17644  005B04  3397               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 17645  005B06  3396               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 17646  005B08  3395               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 17647  005B0A  3394               	rrcf	___aomod@divisor& (0+255),f,b
 17648                           
 17649                           ; BSR set to: 0
 17650  005B0C  2F9C               	decfsz	___aomod@counter& (0+255),f,b
 17651  005B0E  D7D3               	goto	u14940
 17652  005B10                     l12967:
 17653                           
 17654                           ; BSR set to: 0
 17655  005B10  519D               	movf	___aomod@sign& (0+255),w,b
 17656  005B12  B4D8               	btfsc	status,2,c
 17657  005B14  D010               	goto	l12971
 17658                           
 17659                           ; BSR set to: 0
 17660  005B16  1F93               	comf	(___aomod@dividend+7)& (0+255),f,b
 17661  005B18  1F92               	comf	(___aomod@dividend+6)& (0+255),f,b
 17662  005B1A  1F91               	comf	(___aomod@dividend+5)& (0+255),f,b
 17663  005B1C  1F90               	comf	(___aomod@dividend+4)& (0+255),f,b
 17664  005B1E  1F8F               	comf	(___aomod@dividend+3)& (0+255),f,b
 17665  005B20  1F8E               	comf	(___aomod@dividend+2)& (0+255),f,b
 17666  005B22  1F8D               	comf	(___aomod@dividend+1)& (0+255),f,b
 17667  005B24  6D8C               	negf	___aomod@dividend& (0+255),b
 17668  005B26  0E00               	movlw	0
 17669  005B28  238D               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 17670  005B2A  238E               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 17671  005B2C  238F               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 17672  005B2E  2390               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 17673  005B30  2391               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 17674  005B32  2392               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 17675  005B34  2393               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 17676  005B36                     l12971:
 17677                           
 17678                           ; BSR set to: 0
 17679  005B36  C08C  F08C         	movff	___aomod@dividend,?___aomod
 17680  005B3A  C08D  F08D         	movff	___aomod@dividend+1,?___aomod+1
 17681  005B3E  C08E  F08E         	movff	___aomod@dividend+2,?___aomod+2
 17682  005B42  C08F  F08F         	movff	___aomod@dividend+3,?___aomod+3
 17683  005B46  C090  F090         	movff	___aomod@dividend+4,?___aomod+4
 17684  005B4A  C091  F091         	movff	___aomod@dividend+5,?___aomod+5
 17685  005B4E  C092  F092         	movff	___aomod@dividend+6,?___aomod+6
 17686  005B52  C093  F093         	movff	___aomod@dividend+7,?___aomod+7
 17687                           
 17688                           ; BSR set to: 0
 17689  005B56  0012               	return		;funcret
 17690  005B58                     __end_of___aomod:
 17691                           	callstack 0
 17692                           
 17693 ;; *************** function ___aodiv *****************
 17694 ;; Defined at:
 17695 ;;		line 9 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/aodiv.c"
 17696 ;; Parameters:    Size  Location     Type
 17697 ;;  dividend        8   44[BANK0 ] long long 
 17698 ;;  divisor         8   52[BANK0 ] long long 
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;  quotient        8   62[BANK0 ] long long 
 17701 ;;  sign            1   61[BANK0 ] unsigned char 
 17702 ;;  counter         1   60[BANK0 ] unsigned char 
 17703 ;; Return value:  Size  Location     Type
 17704 ;;                  8   44[BANK0 ] long long 
 17705 ;; Registers used:
 17706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17707 ;; Tracked objects:
 17708 ;;		On entry : 3F/0
 17709 ;;		On exit  : 3F/0
 17710 ;;		Unchanged: 0/0
 17711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17712 ;;      Params:         0      16       0       0       0       0       0       0       0
 17713 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17714 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17715 ;;      Totals:         0      26       0       0       0       0       0       0       0
 17716 ;;Total ram usage:       26 bytes
 17717 ;; Hardware stack levels used: 1
 17718 ;; Hardware stack levels required when called: 10
 17719 ;; This function calls:
 17720 ;;		Nothing
 17721 ;; This function is called by:
 17722 ;;		_dtoa
 17723 ;; This function uses a non-reentrant model
 17724 ;;
 17725                           
 17726                           	psect	text81
 17727  004E0C                     __ptext81:
 17728                           	callstack 0
 17729  004E0C                     ___aodiv:
 17730                           	callstack 16
 17731                           
 17732                           ; BSR set to: 0
 17733                           
 17734                           ; BSR set to: 0
 17735                           ;incstack = 0
 17736  004E0C  0E00               	movlw	0
 17737  004E0E  6F9D               	movwf	___aodiv@sign& (0+255),b
 17738                           
 17739                           ; BSR set to: 0
 17740  004E10  AF9B               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 17741  004E12  D012               	goto	l12903
 17742                           
 17743                           ; BSR set to: 0
 17744  004E14  1F9B               	comf	(___aodiv@divisor+7)& (0+255),f,b
 17745  004E16  1F9A               	comf	(___aodiv@divisor+6)& (0+255),f,b
 17746  004E18  1F99               	comf	(___aodiv@divisor+5)& (0+255),f,b
 17747  004E1A  1F98               	comf	(___aodiv@divisor+4)& (0+255),f,b
 17748  004E1C  1F97               	comf	(___aodiv@divisor+3)& (0+255),f,b
 17749  004E1E  1F96               	comf	(___aodiv@divisor+2)& (0+255),f,b
 17750  004E20  1F95               	comf	(___aodiv@divisor+1)& (0+255),f,b
 17751  004E22  6D94               	negf	___aodiv@divisor& (0+255),b
 17752  004E24  0E00               	movlw	0
 17753  004E26  2395               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 17754  004E28  2396               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 17755  004E2A  2397               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 17756  004E2C  2398               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 17757  004E2E  2399               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 17758  004E30  239A               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 17759  004E32  239B               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 17760                           
 17761                           ; BSR set to: 0
 17762  004E34  0E01               	movlw	1
 17763  004E36  6F9D               	movwf	___aodiv@sign& (0+255),b
 17764  004E38                     l12903:
 17765                           
 17766                           ; BSR set to: 0
 17767  004E38  AF93               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 17768  004E3A  D012               	goto	l12909
 17769                           
 17770                           ; BSR set to: 0
 17771  004E3C  1F93               	comf	(___aodiv@dividend+7)& (0+255),f,b
 17772  004E3E  1F92               	comf	(___aodiv@dividend+6)& (0+255),f,b
 17773  004E40  1F91               	comf	(___aodiv@dividend+5)& (0+255),f,b
 17774  004E42  1F90               	comf	(___aodiv@dividend+4)& (0+255),f,b
 17775  004E44  1F8F               	comf	(___aodiv@dividend+3)& (0+255),f,b
 17776  004E46  1F8E               	comf	(___aodiv@dividend+2)& (0+255),f,b
 17777  004E48  1F8D               	comf	(___aodiv@dividend+1)& (0+255),f,b
 17778  004E4A  6D8C               	negf	___aodiv@dividend& (0+255),b
 17779  004E4C  0E00               	movlw	0
 17780  004E4E  238D               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 17781  004E50  238E               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 17782  004E52  238F               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 17783  004E54  2390               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 17784  004E56  2391               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 17785  004E58  2392               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 17786  004E5A  2393               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 17787                           
 17788                           ; BSR set to: 0
 17789  004E5C  0E01               	movlw	1
 17790  004E5E  1B9D               	xorwf	___aodiv@sign& (0+255),f,b
 17791  004E60                     l12909:
 17792                           
 17793                           ; BSR set to: 0
 17794  004E60  EE20  F09E         	lfsr	2,___aodiv@quotient
 17795  004E64  0E07               	movlw	7
 17796  004E66                     u14861:
 17797  004E66  6ADE               	clrf	postinc2,c
 17798  004E68  06E8               	decf	wreg,f,c
 17799  004E6A  E2FD               	bc	u14861
 17800                           
 17801                           ; BSR set to: 0
 17802  004E6C  5194               	movf	___aodiv@divisor& (0+255),w,b
 17803  004E6E  1195               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 17804  004E70  1196               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 17805  004E72  1197               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 17806  004E74  1198               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 17807  004E76  1199               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 17808  004E78  119A               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 17809  004E7A  119B               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 17810  004E7C  B4D8               	btfsc	status,2,c
 17811  004E7E  D046               	goto	l12931
 17812                           
 17813                           ; BSR set to: 0
 17814  004E80  0E01               	movlw	1
 17815  004E82  6F9C               	movwf	___aodiv@counter& (0+255),b
 17816  004E84  D00A               	goto	l12917
 17817  004E86                     l12915:
 17818                           
 17819                           ; BSR set to: 0
 17820  004E86  90D8               	bcf	status,0,c
 17821  004E88  3794               	rlcf	___aodiv@divisor& (0+255),f,b
 17822  004E8A  3795               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 17823  004E8C  3796               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 17824  004E8E  3797               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 17825  004E90  3798               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 17826  004E92  3799               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 17827  004E94  379A               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 17828  004E96  379B               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 17829  004E98  2B9C               	incf	___aodiv@counter& (0+255),f,b
 17830  004E9A                     l12917:
 17831                           
 17832                           ; BSR set to: 0
 17833  004E9A  AF9B               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 17834  004E9C  D7F4               	goto	l12915
 17835  004E9E                     u14880:
 17836                           
 17837                           ; BSR set to: 0
 17838  004E9E  90D8               	bcf	status,0,c
 17839  004EA0  379E               	rlcf	___aodiv@quotient& (0+255),f,b
 17840  004EA2  379F               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 17841  004EA4  37A0               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 17842  004EA6  37A1               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 17843  004EA8  37A2               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 17844  004EAA  37A3               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 17845  004EAC  37A4               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 17846  004EAE  37A5               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 17847                           
 17848                           ; BSR set to: 0
 17849  004EB0  5194               	movf	___aodiv@divisor& (0+255),w,b
 17850  004EB2  5D8C               	subwf	___aodiv@dividend& (0+255),w,b
 17851  004EB4  5195               	movf	(___aodiv@divisor+1)& (0+255),w,b
 17852  004EB6  598D               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 17853  004EB8  5196               	movf	(___aodiv@divisor+2)& (0+255),w,b
 17854  004EBA  598E               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 17855  004EBC  5197               	movf	(___aodiv@divisor+3)& (0+255),w,b
 17856  004EBE  598F               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 17857  004EC0  5198               	movf	(___aodiv@divisor+4)& (0+255),w,b
 17858  004EC2  5990               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 17859  004EC4  5199               	movf	(___aodiv@divisor+5)& (0+255),w,b
 17860  004EC6  5991               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 17861  004EC8  519A               	movf	(___aodiv@divisor+6)& (0+255),w,b
 17862  004ECA  5992               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 17863  004ECC  519B               	movf	(___aodiv@divisor+7)& (0+255),w,b
 17864  004ECE  5993               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 17865  004ED0  A0D8               	btfss	status,0,c
 17866  004ED2  D011               	goto	l12927
 17867                           
 17868                           ; BSR set to: 0
 17869  004ED4  5194               	movf	___aodiv@divisor& (0+255),w,b
 17870  004ED6  5F8C               	subwf	___aodiv@dividend& (0+255),f,b
 17871  004ED8  5195               	movf	(___aodiv@divisor+1)& (0+255),w,b
 17872  004EDA  5B8D               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 17873  004EDC  5196               	movf	(___aodiv@divisor+2)& (0+255),w,b
 17874  004EDE  5B8E               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 17875  004EE0  5197               	movf	(___aodiv@divisor+3)& (0+255),w,b
 17876  004EE2  5B8F               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 17877  004EE4  5198               	movf	(___aodiv@divisor+4)& (0+255),w,b
 17878  004EE6  5B90               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 17879  004EE8  5199               	movf	(___aodiv@divisor+5)& (0+255),w,b
 17880  004EEA  5B91               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 17881  004EEC  519A               	movf	(___aodiv@divisor+6)& (0+255),w,b
 17882  004EEE  5B92               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 17883  004EF0  519B               	movf	(___aodiv@divisor+7)& (0+255),w,b
 17884  004EF2  5B93               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 17885                           
 17886                           ; BSR set to: 0
 17887  004EF4  819E               	bsf	___aodiv@quotient& (0+255),0,b
 17888  004EF6                     l12927:
 17889                           
 17890                           ; BSR set to: 0
 17891  004EF6  90D8               	bcf	status,0,c
 17892  004EF8  339B               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 17893  004EFA  339A               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 17894  004EFC  3399               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 17895  004EFE  3398               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 17896  004F00  3397               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 17897  004F02  3396               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 17898  004F04  3395               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 17899  004F06  3394               	rrcf	___aodiv@divisor& (0+255),f,b
 17900                           
 17901                           ; BSR set to: 0
 17902  004F08  2F9C               	decfsz	___aodiv@counter& (0+255),f,b
 17903  004F0A  D7C9               	goto	u14880
 17904  004F0C                     l12931:
 17905                           
 17906                           ; BSR set to: 0
 17907  004F0C  519D               	movf	___aodiv@sign& (0+255),w,b
 17908  004F0E  B4D8               	btfsc	status,2,c
 17909  004F10  D010               	goto	l12935
 17910                           
 17911                           ; BSR set to: 0
 17912  004F12  1FA5               	comf	(___aodiv@quotient+7)& (0+255),f,b
 17913  004F14  1FA4               	comf	(___aodiv@quotient+6)& (0+255),f,b
 17914  004F16  1FA3               	comf	(___aodiv@quotient+5)& (0+255),f,b
 17915  004F18  1FA2               	comf	(___aodiv@quotient+4)& (0+255),f,b
 17916  004F1A  1FA1               	comf	(___aodiv@quotient+3)& (0+255),f,b
 17917  004F1C  1FA0               	comf	(___aodiv@quotient+2)& (0+255),f,b
 17918  004F1E  1F9F               	comf	(___aodiv@quotient+1)& (0+255),f,b
 17919  004F20  6D9E               	negf	___aodiv@quotient& (0+255),b
 17920  004F22  0E00               	movlw	0
 17921  004F24  239F               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 17922  004F26  23A0               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 17923  004F28  23A1               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 17924  004F2A  23A2               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 17925  004F2C  23A3               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 17926  004F2E  23A4               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 17927  004F30  23A5               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 17928  004F32                     l12935:
 17929                           
 17930                           ; BSR set to: 0
 17931  004F32  C09E  F08C         	movff	___aodiv@quotient,?___aodiv
 17932  004F36  C09F  F08D         	movff	___aodiv@quotient+1,?___aodiv+1
 17933  004F3A  C0A0  F08E         	movff	___aodiv@quotient+2,?___aodiv+2
 17934  004F3E  C0A1  F08F         	movff	___aodiv@quotient+3,?___aodiv+3
 17935  004F42  C0A2  F090         	movff	___aodiv@quotient+4,?___aodiv+4
 17936  004F46  C0A3  F091         	movff	___aodiv@quotient+5,?___aodiv+5
 17937  004F4A  C0A4  F092         	movff	___aodiv@quotient+6,?___aodiv+6
 17938  004F4E  C0A5  F093         	movff	___aodiv@quotient+7,?___aodiv+7
 17939                           
 17940                           ; BSR set to: 0
 17941  004F52  0012               	return		;funcret
 17942  004F54                     __end_of___aodiv:
 17943                           	callstack 0
 17944                           
 17945 ;; *************** function _ctoa *****************
 17946 ;; Defined at:
 17947 ;;		line 259 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 17948 ;; Parameters:    Size  Location     Type
 17949 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
 17950 ;;		 -> sprintf@f(11), 
 17951 ;;  c               1   55[BANK0 ] unsigned char 
 17952 ;; Auto vars:     Size  Location     Type
 17953 ;;  w               2   59[BANK0 ] int 
 17954 ;;  l               2   57[BANK0 ] int 
 17955 ;; Return value:  Size  Location     Type
 17956 ;;                  2   53[BANK0 ] int 
 17957 ;; Registers used:
 17958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17959 ;; Tracked objects:
 17960 ;;		On entry : 3F/1
 17961 ;;		On exit  : 3F/0
 17962 ;;		Unchanged: 0/0
 17963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17964 ;;      Params:         0       3       0       0       0       0       0       0       0
 17965 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17966 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17967 ;;      Totals:         0       8       0       0       0       0       0       0       0
 17968 ;;Total ram usage:        8 bytes
 17969 ;; Hardware stack levels used: 1
 17970 ;; Hardware stack levels required when called: 12
 17971 ;; This function calls:
 17972 ;;		_fputc
 17973 ;; This function is called by:
 17974 ;;		_vfpfcnvrt
 17975 ;; This function uses a non-reentrant model
 17976 ;;
 17977                           
 17978                           	psect	text82
 17979  0070CE                     __ptext82:
 17980                           	callstack 0
 17981  0070CE                     _ctoa:
 17982                           	callstack 15
 17983                           
 17984                           ; BSR set to: 1
 17985                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 17986                           
 17987                           ; BSR set to: 0
 17988                           ;incstack = 0
 17989  0070CE  0100               	movlb	0	; () banked
 17990  0070D0  51C0               	movf	_width& (0+255),w,b
 17991  0070D2  11C1               	iorwf	(_width+1)& (0+255),w,b
 17992  0070D4  A4D8               	btfss	status,2,c
 17993  0070D6  D005               	goto	l13595
 17994                           
 17995                           ; BSR set to: 0
 17996  0070D8  C0C0  F09B         	movff	_width,ctoa@w
 17997  0070DC  C0C1  F09C         	movff	_width+1,ctoa@w+1
 17998  0070E0  D006               	goto	l13597
 17999  0070E2                     l13595:
 18000                           
 18001                           ; BSR set to: 0
 18002  0070E2  0EFF               	movlw	255
 18003  0070E4  25C0               	addwf	_width& (0+255),w,b
 18004  0070E6  6F9B               	movwf	ctoa@w& (0+255),b
 18005  0070E8  0EFF               	movlw	255
 18006  0070EA  21C1               	addwfc	(_width+1)& (0+255),w,b
 18007  0070EC  6F9C               	movwf	(ctoa@w+1)& (0+255),b
 18008  0070EE                     l13597:
 18009                           
 18010                           ; BSR set to: 0
 18011                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
 18012  0070EE  A1C4               	btfss	_flags& (0+255),0,b
 18013  0070F0  D009               	goto	l13601
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
 18017  0070F2  C097  F08C         	movff	ctoa@c,fputc@c
 18018  0070F6  6B8D               	clrf	(fputc@c+1)& (0+255),b
 18019  0070F8  C095  F08E         	movff	ctoa@fp,fputc@fp
 18020  0070FC  C096  F08F         	movff	ctoa@fp+1,fputc@fp+1
 18021  007100  ECC8  F037         	call	_fputc	;wreg free
 18022  007104                     l13601:
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
 18026  007104  AF9C               	btfss	(ctoa@w+1)& (0+255),7,b
 18027  007106  D004               	goto	l2166
 18028                           
 18029                           ; BSR set to: 0
 18030  007108  0E00               	movlw	0
 18031  00710A  6F9C               	movwf	(ctoa@w+1)& (0+255),b
 18032  00710C  0E00               	movlw	0
 18033  00710E  6F9B               	movwf	ctoa@w& (0+255),b
 18034  007110                     l2166:
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 272:     l = 0;
 18038  007110  0E00               	movlw	0
 18039  007112  6F9A               	movwf	(ctoa@l+1)& (0+255),b
 18040  007114  0E00               	movlw	0
 18041  007116  6F99               	movwf	ctoa@l& (0+255),b
 18042                           
 18043                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 18044  007118  D00C               	goto	l13611
 18045  00711A                     l13607:
 18046                           
 18047                           ; BSR set to: 0
 18048                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
 18049  00711A  0E00               	movlw	0
 18050  00711C  6F8D               	movwf	(fputc@c+1)& (0+255),b
 18051  00711E  0E20               	movlw	32
 18052  007120  6F8C               	movwf	fputc@c& (0+255),b
 18053  007122  C095  F08E         	movff	ctoa@fp,fputc@fp
 18054  007126  C096  F08F         	movff	ctoa@fp+1,fputc@fp+1
 18055  00712A  ECC8  F037         	call	_fputc	;wreg free
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 275:         ++l;
 18059  00712E  4B99               	infsnz	ctoa@l& (0+255),f,b
 18060  007130  2B9A               	incf	(ctoa@l+1)& (0+255),f,b
 18061  007132                     l13611:
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 18065  007132  519B               	movf	ctoa@w& (0+255),w,b
 18066  007134  5D99               	subwf	ctoa@l& (0+255),w,b
 18067  007136  519A               	movf	(ctoa@l+1)& (0+255),w,b
 18068  007138  0A80               	xorlw	128
 18069  00713A  6F98               	movwf	??_ctoa& (0+255),b
 18070  00713C  519C               	movf	(ctoa@w+1)& (0+255),w,b
 18071  00713E  0A80               	xorlw	128
 18072  007140  5998               	subwfb	??_ctoa& (0+255),w,b
 18073  007142  A0D8               	btfss	status,0,c
 18074  007144  D7EA               	goto	l13607
 18075                           
 18076                           ; BSR set to: 0
 18077                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
 18078  007146  B1C4               	btfsc	_flags& (0+255),0,b
 18079  007148  D009               	goto	l13615
 18080                           
 18081                           ; BSR set to: 0
 18082                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
 18083  00714A  C097  F08C         	movff	ctoa@c,fputc@c
 18084  00714E  6B8D               	clrf	(fputc@c+1)& (0+255),b
 18085  007150  C095  F08E         	movff	ctoa@fp,fputc@fp
 18086  007154  C096  F08F         	movff	ctoa@fp+1,fputc@fp+1
 18087  007158  ECC8  F037         	call	_fputc	;wreg free
 18088  00715C                     l13615:
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 282:     return l+1;
 18092  00715C  0E01               	movlw	1
 18093  00715E  2599               	addwf	ctoa@l& (0+255),w,b
 18094  007160  6F95               	movwf	?_ctoa& (0+255),b
 18095  007162  0E00               	movlw	0
 18096  007164  219A               	addwfc	(ctoa@l+1)& (0+255),w,b
 18097  007166  6F96               	movwf	(?_ctoa+1)& (0+255),b
 18098                           
 18099                           ; BSR set to: 0
 18100  007168  0012               	return		;funcret
 18101  00716A                     __end_of_ctoa:
 18102                           	callstack 0
 18103                           
 18104 ;; *************** function _fputc *****************
 18105 ;; Defined at:
 18106 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 18107 ;; Parameters:    Size  Location     Type
 18108 ;;  c               2   44[BANK0 ] int 
 18109 ;;  fp              2   46[BANK0 ] PTR struct _IO_FILE
 18110 ;;		 -> sprintf@f(11), 
 18111 ;; Auto vars:     Size  Location     Type
 18112 ;;		None
 18113 ;; Return value:  Size  Location     Type
 18114 ;;                  2   44[BANK0 ] int 
 18115 ;; Registers used:
 18116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18117 ;; Tracked objects:
 18118 ;;		On entry : 3F/0
 18119 ;;		On exit  : 3F/0
 18120 ;;		Unchanged: 0/0
 18121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18122 ;;      Params:         0       4       0       0       0       0       0       0       0
 18123 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18124 ;;      Temps:          0       5       0       0       0       0       0       0       0
 18125 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18126 ;;Total ram usage:        9 bytes
 18127 ;; Hardware stack levels used: 1
 18128 ;; Hardware stack levels required when called: 11
 18129 ;; This function calls:
 18130 ;;		_putch
 18131 ;; This function is called by:
 18132 ;;		_pad
 18133 ;;		_ctoa
 18134 ;;		_stoa
 18135 ;;		_vfpfcnvrt
 18136 ;;		_fputs
 18137 ;; This function uses a non-reentrant model
 18138 ;;
 18139                           
 18140                           	psect	text83
 18141  006F90                     __ptext83:
 18142                           	callstack 0
 18143  006F90                     _fputc:
 18144                           	callstack 15
 18145                           
 18146                           ; BSR set to: 0
 18147                           
 18148                           ; BSR set to: 0
 18149                           ;incstack = 0
 18150  006F90  518E               	movf	fputc@fp& (0+255),w,b
 18151  006F92  118F               	iorwf	(fputc@fp+1)& (0+255),w,b
 18152  006F94  B4D8               	btfsc	status,2,c
 18153  006F96  D004               	goto	u14360
 18154                           
 18155                           ; BSR set to: 0
 18156  006F98  518E               	movf	fputc@fp& (0+255),w,b
 18157  006F9A  118F               	iorwf	(fputc@fp+1)& (0+255),w,b
 18158  006F9C  A4D8               	btfss	status,2,c
 18159  006F9E  D004               	goto	l12653
 18160  006FA0                     u14360:
 18161                           
 18162                           ; BSR set to: 0
 18163  006FA0  518C               	movf	fputc@c& (0+255),w,b
 18164  006FA2  ECFF  F03F         	call	_putch
 18165  006FA6  0012               	return	
 18166  006FA8                     l12653:
 18167                           
 18168                           ; BSR set to: 0
 18169  006FA8  EE20 F009          	lfsr	2,9
 18170  006FAC  518E               	movf	fputc@fp& (0+255),w,b
 18171  006FAE  26D9               	addwf	fsr2l,f,c
 18172  006FB0  518F               	movf	(fputc@fp+1)& (0+255),w,b
 18173  006FB2  22DA               	addwfc	fsr2h,f,c
 18174  006FB4  50DE               	movf	postinc2,w,c
 18175  006FB6  10DE               	iorwf	postinc2,w,c
 18176  006FB8  B4D8               	btfsc	status,2,c
 18177  006FBA  D016               	goto	u14380
 18178                           
 18179                           ; BSR set to: 0
 18180  006FBC  EE20 F009          	lfsr	2,9
 18181  006FC0  518E               	movf	fputc@fp& (0+255),w,b
 18182  006FC2  26D9               	addwf	fsr2l,f,c
 18183  006FC4  518F               	movf	(fputc@fp+1)& (0+255),w,b
 18184  006FC6  22DA               	addwfc	fsr2h,f,c
 18185  006FC8  EE10 F003          	lfsr	1,3
 18186  006FCC  518E               	movf	fputc@fp& (0+255),w,b
 18187  006FCE  26E1               	addwf	fsr1l,f,c
 18188  006FD0  518F               	movf	(fputc@fp+1)& (0+255),w,b
 18189  006FD2  22E2               	addwfc	fsr1h,f,c
 18190  006FD4  50DE               	movf	postinc2,w,c
 18191  006FD6  5CE6               	subwf	postinc1,w,c
 18192  006FD8  50E6               	movf	postinc1,w,c
 18193  006FDA  0A80               	xorlw	128
 18194  006FDC  6F94               	movwf	(??_fputc+4)& (0+255),b
 18195  006FDE  50DE               	movf	postinc2,w,c
 18196  006FE0  0A80               	xorlw	128
 18197  006FE2  5994               	subwfb	(??_fputc+4)& (0+255),w,b
 18198  006FE4  B0D8               	btfsc	status,0,c
 18199  006FE6  0012               	return	
 18200  006FE8                     u14380:
 18201                           
 18202                           ; BSR set to: 0
 18203  006FE8  EE20 F003          	lfsr	2,3
 18204  006FEC  518E               	movf	fputc@fp& (0+255),w,b
 18205  006FEE  26D9               	addwf	fsr2l,f,c
 18206  006FF0  518F               	movf	(fputc@fp+1)& (0+255),w,b
 18207  006FF2  22DA               	addwfc	fsr2h,f,c
 18208  006FF4  CFDE F090          	movff	postinc2,??_fputc
 18209  006FF8  CFDD F091          	movff	postdec2,??_fputc+1
 18210  006FFC  C08E  FFD9         	movff	fputc@fp,fsr2l
 18211  007000  C08F  FFDA         	movff	fputc@fp+1,fsr2h
 18212  007004  CFDE F092          	movff	postinc2,??_fputc+2
 18213  007008  CFDD F093          	movff	postdec2,??_fputc+3
 18214  00700C  5190               	movf	??_fputc& (0+255),w,b
 18215  00700E  2592               	addwf	(??_fputc+2)& (0+255),w,b
 18216  007010  6ED9               	movwf	fsr2l,c
 18217  007012  5191               	movf	(??_fputc+1)& (0+255),w,b
 18218  007014  2193               	addwfc	(??_fputc+3)& (0+255),w,b
 18219  007016  6EDA               	movwf	fsr2h,c
 18220  007018  C08C  FFDF         	movff	fputc@c,indf2
 18221  00701C  EE20 F003          	lfsr	2,3
 18222  007020  518E               	movf	fputc@fp& (0+255),w,b
 18223  007022  26D9               	addwf	fsr2l,f,c
 18224  007024  518F               	movf	(fputc@fp+1)& (0+255),w,b
 18225  007026  22DA               	addwfc	fsr2h,f,c
 18226  007028  2ADE               	incf	postinc2,f,c
 18227  00702A  0E00               	movlw	0
 18228  00702C  22DD               	addwfc	postdec2,f,c
 18229                           
 18230                           ; BSR set to: 0
 18231  00702E  0012               	return		;funcret
 18232  007030                     __end_of_fputc:
 18233                           	callstack 0
 18234                           
 18235 ;; *************** function _putch *****************
 18236 ;; Defined at:
 18237 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/putch.c"
 18238 ;; Parameters:    Size  Location     Type
 18239 ;;  c               1    wreg     unsigned char 
 18240 ;; Auto vars:     Size  Location     Type
 18241 ;;  c               1    0[COMRAM] unsigned char 
 18242 ;; Return value:  Size  Location     Type
 18243 ;;                  1    wreg      void 
 18244 ;; Registers used:
 18245 ;;		wreg
 18246 ;; Tracked objects:
 18247 ;;		On entry : 3F/0
 18248 ;;		On exit  : 3F/0
 18249 ;;		Unchanged: 3F/0
 18250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18251 ;;      Params:         0       0       0       0       0       0       0       0       0
 18252 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18253 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18254 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18255 ;;Total ram usage:        0 bytes
 18256 ;; Hardware stack levels used: 1
 18257 ;; Hardware stack levels required when called: 10
 18258 ;; This function calls:
 18259 ;;		Nothing
 18260 ;; This function is called by:
 18261 ;;		_fputc
 18262 ;; This function uses a non-reentrant model
 18263 ;;
 18264                           
 18265                           	psect	text84
 18266  007FFE                     __ptext84:
 18267                           	callstack 0
 18268  007FFE                     _putch:
 18269                           	callstack 15
 18270                           
 18271                           ; BSR set to: 0
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;incstack = 0
 18275  007FFE  0012               	return		;funcret
 18276  008000                     __end_of_putch:
 18277                           	callstack 0
 18278                           
 18279 ;; *************** function _atoi *****************
 18280 ;; Defined at:
 18281 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
 18282 ;; Parameters:    Size  Location     Type
 18283 ;;  s               1   51[BANK0 ] PTR const unsigned char 
 18284 ;;		 -> STR_3(5), STR_2(5), STR_1(20), 
 18285 ;; Auto vars:     Size  Location     Type
 18286 ;;  n               2   59[BANK0 ] int 
 18287 ;;  neg             2   57[BANK0 ] int 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  2   51[BANK0 ] int 
 18290 ;; Registers used:
 18291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 3F/0
 18294 ;;		On exit  : 3F/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18297 ;;      Params:         0       2       0       0       0       0       0       0       0
 18298 ;;      Locals:         0       4       0       0       0       0       0       0       0
 18299 ;;      Temps:          0       4       0       0       0       0       0       0       0
 18300 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18301 ;;Total ram usage:       10 bytes
 18302 ;; Hardware stack levels used: 1
 18303 ;; Hardware stack levels required when called: 11
 18304 ;; This function calls:
 18305 ;;		___wmul
 18306 ;;		_isdigit
 18307 ;;		_isspace
 18308 ;; This function is called by:
 18309 ;;		_vfpfcnvrt
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313                           	psect	text85
 18314  005C7A                     __ptext85:
 18315                           	callstack 0
 18316  005C7A                     _atoi:
 18317                           	callstack 16
 18318                           
 18319                           ; BSR set to: 0
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;incstack = 0
 18323  005C7A  0E00               	movlw	0
 18324  005C7C  6F9C               	movwf	(atoi@n+1)& (0+255),b
 18325  005C7E  0E00               	movlw	0
 18326  005C80  6F9B               	movwf	atoi@n& (0+255),b
 18327  005C82  0E00               	movlw	0
 18328  005C84  6F9A               	movwf	(atoi@neg+1)& (0+255),b
 18329  005C86  0E00               	movlw	0
 18330  005C88  6F99               	movwf	atoi@neg& (0+255),b
 18331  005C8A  D001               	goto	l14035
 18332  005C8C                     l14031:
 18333                           
 18334                           ; BSR set to: 0
 18335  005C8C  2B93               	incf	atoi@s& (0+255),f,b
 18336  005C8E                     l14035:
 18337                           
 18338                           ; BSR set to: 0
 18339  005C8E  C093  FFF6         	movff	atoi@s,tblptrl
 18340  005C92                     	if	1	;There is more than 1 active tblptr byte
 18341  005C92  0E08               	movlw	high __smallconst
 18342  005C94  6EF7               	movwf	tblptrh,c
 18343  005C96                     	endif
 18344  005C96                     	if	0	;tblptru may be non-zero
 18345  005C96                     	endif
 18346  005C96                     	if	0	;tblptru may be non-zero
 18347  005C96                     	endif
 18348  005C96  0008               	tblrd		*
 18349  005C98  50F5               	movf	tablat,w,c
 18350  005C9A  0A20               	xorlw	32
 18351  005C9C  B4D8               	btfsc	status,2,c
 18352  005C9E  D7F6               	goto	l14031
 18353                           
 18354                           ; BSR set to: 0
 18355  005CA0  0EF7               	movlw	247
 18356  005CA2  6F95               	movwf	??_atoi& (0+255),b
 18357  005CA4  0EFF               	movlw	255
 18358  005CA6  6F96               	movwf	(??_atoi+1)& (0+255),b
 18359  005CA8  C093  FFF6         	movff	atoi@s,tblptrl
 18360  005CAC                     	if	1	;There is more than 1 active tblptr byte
 18361  005CAC  0E08               	movlw	high __smallconst
 18362  005CAE  6EF7               	movwf	tblptrh,c
 18363  005CB0                     	endif
 18364  005CB0                     	if	0	;tblptru may be non-zero
 18365  005CB0                     	endif
 18366  005CB0                     	if	0	;tblptru may be non-zero
 18367  005CB0                     	endif
 18368  005CB0  0008               	tblrd		*
 18369  005CB2  50F5               	movf	tablat,w,c
 18370  005CB4  6F97               	movwf	(??_atoi+2)& (0+255),b
 18371  005CB6  6B98               	clrf	(??_atoi+3)& (0+255),b
 18372  005CB8  5195               	movf	??_atoi& (0+255),w,b
 18373  005CBA  2797               	addwf	(??_atoi+2)& (0+255),f,b
 18374  005CBC  5196               	movf	(??_atoi+1)& (0+255),w,b
 18375  005CBE  2398               	addwfc	(??_atoi+3)& (0+255),f,b
 18376  005CC0  5198               	movf	(??_atoi+3)& (0+255),w,b
 18377  005CC2  E10B               	bnz	l14043
 18378  005CC4  0E05               	movlw	5
 18379  005CC6  5D97               	subwf	(??_atoi+2)& (0+255),w,b
 18380  005CC8  B0D8               	btfsc	status,0,c
 18381  005CCA  D007               	goto	l14043
 18382  005CCC  D7DF               	goto	l14031
 18383  005CCE                     l14039:
 18384                           
 18385                           ; BSR set to: 0
 18386  005CCE  0E00               	movlw	0
 18387  005CD0  6F9A               	movwf	(atoi@neg+1)& (0+255),b
 18388  005CD2  0E01               	movlw	1
 18389  005CD4  6F99               	movwf	atoi@neg& (0+255),b
 18390  005CD6                     l14041:
 18391                           
 18392                           ; BSR set to: 0
 18393  005CD6  2B93               	incf	atoi@s& (0+255),f,b
 18394  005CD8  D02E               	goto	l14051
 18395  005CDA                     l14043:
 18396                           
 18397                           ; BSR set to: 0
 18398  005CDA  C093  FFF6         	movff	atoi@s,tblptrl
 18399  005CDE                     	if	1	;There is more than 1 active tblptr byte
 18400  005CDE  0E08               	movlw	high __smallconst
 18401  005CE0  6EF7               	movwf	tblptrh,c
 18402  005CE2                     	endif
 18403  005CE2                     	if	0	;tblptru may be non-zero
 18404  005CE2                     	endif
 18405  005CE2                     	if	0	;tblptru may be non-zero
 18406  005CE2                     	endif
 18407  005CE2  0008               	tblrd		*
 18408  005CE4  50F5               	movf	tablat,w,c
 18409  005CE6  6F95               	movwf	??_atoi& (0+255),b
 18410  005CE8  6B96               	clrf	(??_atoi+1)& (0+255),b
 18411                           
 18412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18413                           ; Switch size 1, requested type "simple"
 18414                           ; Number of cases is 1, Range of values is 0 to 0
 18415                           ; switch strategies available:
 18416                           ; Name         Instructions Cycles
 18417                           ; simple_byte            4     3 (average)
 18418                           ;	Chosen strategy is simple_byte
 18419  005CEA  5196               	movf	(??_atoi+1)& (0+255),w,b
 18420  005CEC  0A00               	xorlw	0	; case 0
 18421  005CEE  A4D8               	btfss	status,2,c
 18422  005CF0  D022               	goto	l14051
 18423                           
 18424                           ; BSR set to: 0
 18425                           ; Switch size 1, requested type "simple"
 18426                           ; Number of cases is 2, Range of values is 43 to 45
 18427                           ; switch strategies available:
 18428                           ; Name         Instructions Cycles
 18429                           ; simple_byte            7     4 (average)
 18430                           ;	Chosen strategy is simple_byte
 18431  005CF2  5195               	movf	??_atoi& (0+255),w,b
 18432  005CF4  0A2B               	xorlw	43	; case 43
 18433  005CF6  B4D8               	btfsc	status,2,c
 18434  005CF8  D7EE               	goto	l14041
 18435  005CFA  0A06               	xorlw	6	; case 45
 18436  005CFC  B4D8               	btfsc	status,2,c
 18437  005CFE  D7E7               	goto	l14039
 18438  005D00  D01A               	goto	l14051
 18439  005D02                     l14045:
 18440                           
 18441                           ; BSR set to: 0
 18442  005D02  C09B  F08C         	movff	atoi@n,___wmul@multiplier
 18443  005D06  C09C  F08D         	movff	atoi@n+1,___wmul@multiplier+1
 18444  005D0A  0E00               	movlw	0
 18445  005D0C  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18446  005D0E  0E0A               	movlw	10
 18447  005D10  6F8E               	movwf	___wmul@multiplicand& (0+255),b
 18448  005D12  ECB0  F001         	call	___wmul	;wreg free
 18449  005D16  C093  FFF6         	movff	atoi@s,tblptrl
 18450  005D1A                     	if	1	;There is more than 1 active tblptr byte
 18451  005D1A  0E08               	movlw	high __smallconst
 18452  005D1C  6EF7               	movwf	tblptrh,c
 18453  005D1E                     	endif
 18454  005D1E                     	if	0	;tblptru may be non-zero
 18455  005D1E                     	endif
 18456  005D1E                     	if	0	;tblptru may be non-zero
 18457  005D1E                     	endif
 18458  005D1E  0008               	tblrd		*
 18459  005D20  50F5               	movf	tablat,w,c
 18460  005D22  5F8C               	subwf	?___wmul& (0+255),f,b
 18461  005D24  0E00               	movlw	0
 18462  005D26  5B8D               	subwfb	(?___wmul+1)& (0+255),f,b
 18463  005D28  0E30               	movlw	48
 18464  005D2A  258C               	addwf	?___wmul& (0+255),w,b
 18465  005D2C  6F9B               	movwf	atoi@n& (0+255),b
 18466  005D2E  0E00               	movlw	0
 18467  005D30  218D               	addwfc	(?___wmul+1)& (0+255),w,b
 18468  005D32  6F9C               	movwf	(atoi@n+1)& (0+255),b
 18469  005D34  D7D0               	goto	l14041
 18470  005D36                     l14051:
 18471                           
 18472                           ; BSR set to: 0
 18473  005D36  0ED0               	movlw	208
 18474  005D38  6F95               	movwf	??_atoi& (0+255),b
 18475  005D3A  0EFF               	movlw	255
 18476  005D3C  6F96               	movwf	(??_atoi+1)& (0+255),b
 18477  005D3E  C093  FFF6         	movff	atoi@s,tblptrl
 18478  005D42                     	if	1	;There is more than 1 active tblptr byte
 18479  005D42  0E08               	movlw	high __smallconst
 18480  005D44  6EF7               	movwf	tblptrh,c
 18481  005D46                     	endif
 18482  005D46                     	if	0	;tblptru may be non-zero
 18483  005D46                     	endif
 18484  005D46                     	if	0	;tblptru may be non-zero
 18485  005D46                     	endif
 18486  005D46  0008               	tblrd		*
 18487  005D48  50F5               	movf	tablat,w,c
 18488  005D4A  6F97               	movwf	(??_atoi+2)& (0+255),b
 18489  005D4C  6B98               	clrf	(??_atoi+3)& (0+255),b
 18490  005D4E  5195               	movf	??_atoi& (0+255),w,b
 18491  005D50  2797               	addwf	(??_atoi+2)& (0+255),f,b
 18492  005D52  5196               	movf	(??_atoi+1)& (0+255),w,b
 18493  005D54  2398               	addwfc	(??_atoi+3)& (0+255),f,b
 18494  005D56  5198               	movf	(??_atoi+3)& (0+255),w,b
 18495  005D58  E104               	bnz	u16790
 18496  005D5A  0E0A               	movlw	10
 18497  005D5C  5D97               	subwf	(??_atoi+2)& (0+255),w,b
 18498  005D5E  A0D8               	btfss	status,0,c
 18499  005D60  D7D0               	goto	l14045
 18500  005D62                     u16790:
 18501                           
 18502                           ; BSR set to: 0
 18503  005D62  5199               	movf	atoi@neg& (0+255),w,b
 18504  005D64  119A               	iorwf	(atoi@neg+1)& (0+255),w,b
 18505  005D66  A4D8               	btfss	status,2,c
 18506  005D68  D00D               	goto	l2385
 18507                           
 18508                           ; BSR set to: 0
 18509  005D6A  C09B  F095         	movff	atoi@n,??_atoi
 18510  005D6E  C09C  F096         	movff	atoi@n+1,??_atoi+1
 18511  005D72  1F95               	comf	??_atoi& (0+255),f,b
 18512  005D74  1F96               	comf	(??_atoi+1)& (0+255),f,b
 18513  005D76  4B95               	infsnz	??_atoi& (0+255),f,b
 18514  005D78  2B96               	incf	(??_atoi+1)& (0+255),f,b
 18515  005D7A  C095  F093         	movff	??_atoi,?_atoi
 18516  005D7E  C096  F094         	movff	??_atoi+1,?_atoi+1
 18517  005D82  0012               	return	
 18518  005D84                     l2385:
 18519                           
 18520                           ; BSR set to: 0
 18521  005D84  C09B  F093         	movff	atoi@n,?_atoi
 18522  005D88  C09C  F094         	movff	atoi@n+1,?_atoi+1
 18523                           
 18524                           ; BSR set to: 0
 18525  005D8C  0012               	return		;funcret
 18526  005D8E                     __end_of_atoi:
 18527                           	callstack 0
 18528                           
 18529 ;; *************** function _isspace *****************
 18530 ;; Defined at:
 18531 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;  c               2   44[BANK0 ] int 
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;		None
 18536 ;; Return value:  Size  Location     Type
 18537 ;;                  2   44[BANK0 ] int 
 18538 ;; Registers used:
 18539 ;;		wreg, status,2, status,0
 18540 ;; Tracked objects:
 18541 ;;		On entry : 0/0
 18542 ;;		On exit  : 3F/0
 18543 ;;		Unchanged: 0/0
 18544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18545 ;;      Params:         0       2       0       0       0       0       0       0       0
 18546 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18547 ;;      Temps:          0       4       0       0       0       0       0       0       0
 18548 ;;      Totals:         0       7       0       0       0       0       0       0       0
 18549 ;;Total ram usage:        7 bytes
 18550 ;; Hardware stack levels used: 1
 18551 ;; Hardware stack levels required when called: 10
 18552 ;; This function calls:
 18553 ;;		Nothing
 18554 ;; This function is called by:
 18555 ;;		_atoi
 18556 ;;		_strtof
 18557 ;; This function uses a non-reentrant model
 18558 ;;
 18559                           
 18560                           	psect	text86
 18561  007D70                     __ptext86:
 18562                           	callstack 0
 18563  007D70                     _isspace:
 18564                           	callstack 16
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;incstack = 0
 18568  007D70  0E01               	movlw	1
 18569  007D72  0100               	movlb	0	; () banked
 18570  007D74  6F92               	movwf	_isspace$5016& (0+255),b
 18571                           
 18572                           ; BSR set to: 0
 18573  007D76  0E20               	movlw	32
 18574  007D78  198C               	xorwf	isspace@c& (0+255),w,b
 18575  007D7A  118D               	iorwf	(isspace@c+1)& (0+255),w,b
 18576  007D7C  B4D8               	btfsc	status,2,c
 18577  007D7E  D014               	goto	l13517
 18578                           
 18579                           ; BSR set to: 0
 18580  007D80  0EF7               	movlw	247
 18581  007D82  6F8E               	movwf	??_isspace& (0+255),b
 18582  007D84  0EFF               	movlw	255
 18583  007D86  6F8F               	movwf	(??_isspace+1)& (0+255),b
 18584  007D88  C08C  F090         	movff	isspace@c,??_isspace+2
 18585  007D8C  C08D  F091         	movff	isspace@c+1,??_isspace+3
 18586  007D90  518E               	movf	??_isspace& (0+255),w,b
 18587  007D92  2790               	addwf	(??_isspace+2)& (0+255),f,b
 18588  007D94  518F               	movf	(??_isspace+1)& (0+255),w,b
 18589  007D96  2391               	addwfc	(??_isspace+3)& (0+255),f,b
 18590  007D98  5191               	movf	(??_isspace+3)& (0+255),w,b
 18591  007D9A  E104               	bnz	u15920
 18592  007D9C  0E05               	movlw	5
 18593  007D9E  5D90               	subwf	(??_isspace+2)& (0+255),w,b
 18594  007DA0  A0D8               	btfss	status,0,c
 18595  007DA2  D002               	goto	l13517
 18596  007DA4                     u15920:
 18597                           
 18598                           ; BSR set to: 0
 18599  007DA4  0E00               	movlw	0
 18600  007DA6  6F92               	movwf	_isspace$5016& (0+255),b
 18601  007DA8                     l13517:
 18602                           
 18603                           ; BSR set to: 0
 18604  007DA8  C092  F08C         	movff	_isspace$5016,?_isspace
 18605  007DAC  6B8D               	clrf	(?_isspace+1)& (0+255),b
 18606                           
 18607                           ; BSR set to: 0
 18608  007DAE  0012               	return		;funcret
 18609  007DB0                     __end_of_isspace:
 18610                           	callstack 0
 18611                           
 18612 ;; *************** function _isdigit *****************
 18613 ;; Defined at:
 18614 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
 18615 ;; Parameters:    Size  Location     Type
 18616 ;;  c               2   44[BANK0 ] int 
 18617 ;; Auto vars:     Size  Location     Type
 18618 ;;		None
 18619 ;; Return value:  Size  Location     Type
 18620 ;;                  2   44[BANK0 ] int 
 18621 ;; Registers used:
 18622 ;;		wreg, status,2, status,0
 18623 ;; Tracked objects:
 18624 ;;		On entry : 0/0
 18625 ;;		On exit  : 3F/0
 18626 ;;		Unchanged: 0/0
 18627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18628 ;;      Params:         0       2       0       0       0       0       0       0       0
 18629 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18630 ;;      Temps:          0       4       0       0       0       0       0       0       0
 18631 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18632 ;;Total ram usage:        6 bytes
 18633 ;; Hardware stack levels used: 1
 18634 ;; Hardware stack levels required when called: 10
 18635 ;; This function calls:
 18636 ;;		Nothing
 18637 ;; This function is called by:
 18638 ;;		_vfpfcnvrt
 18639 ;;		_atoi
 18640 ;;		_strtof
 18641 ;;		_isxdigit
 18642 ;; This function uses a non-reentrant model
 18643 ;;
 18644                           
 18645                           	psect	text87
 18646  0000E2                     __ptext87:
 18647                           	callstack 0
 18648  0000E2                     _isdigit:
 18649                           	callstack 17
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;incstack = 0
 18653  0000E2  0ED0               	movlw	208
 18654  0000E4  0100               	movlb	0	; () banked
 18655  0000E6  6F8E               	movwf	??_isdigit& (0+255),b
 18656  0000E8  0EFF               	movlw	255
 18657  0000EA  6F8F               	movwf	(??_isdigit+1)& (0+255),b
 18658  0000EC  C08C  F090         	movff	isdigit@c,??_isdigit+2
 18659  0000F0  C08D  F091         	movff	isdigit@c+1,??_isdigit+3
 18660  0000F4  518E               	movf	??_isdigit& (0+255),w,b
 18661  0000F6  2790               	addwf	(??_isdigit+2)& (0+255),f,b
 18662  0000F8  518F               	movf	(??_isdigit+1)& (0+255),w,b
 18663  0000FA  2391               	addwfc	(??_isdigit+3)& (0+255),f,b
 18664  0000FC  5191               	movf	(??_isdigit+3)& (0+255),w,b
 18665  0000FE  E106               	bnz	u15890
 18666  000100  0E0A               	movlw	10
 18667  000102  5D90               	subwf	(??_isdigit+2)& (0+255),w,b
 18668  000104  B0D8               	btfsc	status,0,c
 18669  000106  D002               	goto	u15890
 18670  000108  0E01               	movlw	1
 18671  00010A  D001               	goto	u15900
 18672  00010C                     u15890:
 18673  00010C  0E00               	movlw	0
 18674  00010E                     u15900:
 18675  00010E  6F8C               	movwf	?_isdigit& (0+255),b
 18676  000110  6B8D               	clrf	(?_isdigit+1)& (0+255),b
 18677                           
 18678                           ; BSR set to: 0
 18679  000112  0012               	return		;funcret
 18680  000114                     __end_of_isdigit:
 18681                           	callstack 0
 18682                           
 18683 ;; *************** function ___wmul *****************
 18684 ;; Defined at:
 18685 ;;		line 15 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
 18686 ;; Parameters:    Size  Location     Type
 18687 ;;  multiplier      2   44[BANK0 ] unsigned int 
 18688 ;;  multiplicand    2   46[BANK0 ] unsigned int 
 18689 ;; Auto vars:     Size  Location     Type
 18690 ;;  product         2   48[BANK0 ] unsigned int 
 18691 ;; Return value:  Size  Location     Type
 18692 ;;                  2   44[BANK0 ] unsigned int 
 18693 ;; Registers used:
 18694 ;;		wreg, status,2, status,0, prodl, prodh
 18695 ;; Tracked objects:
 18696 ;;		On entry : 3F/0
 18697 ;;		On exit  : 3F/0
 18698 ;;		Unchanged: 0/0
 18699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18700 ;;      Params:         0       4       0       0       0       0       0       0       0
 18701 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18703 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18704 ;;Total ram usage:        6 bytes
 18705 ;; Hardware stack levels used: 1
 18706 ;; Hardware stack levels required when called: 10
 18707 ;; This function calls:
 18708 ;;		Nothing
 18709 ;; This function is called by:
 18710 ;;		_atoi
 18711 ;;		_strtof
 18712 ;;		_G_01
 18713 ;;		_G_53
 18714 ;; This function uses a non-reentrant model
 18715 ;;
 18716                           
 18717                           	psect	text88
 18718  000360                     __ptext88:
 18719                           	callstack 0
 18720  000360                     ___wmul:
 18721                           	callstack 16
 18722                           
 18723                           ; BSR set to: 0
 18724                           
 18725                           ; BSR set to: 0
 18726                           ;incstack = 0
 18727  000360  518C               	movf	___wmul@multiplier& (0+255),w,b
 18728  000362  038E               	mulwf	___wmul@multiplicand& (0+255),b
 18729  000364  CFF3 F090          	movff	prodl,___wmul@product
 18730  000368  CFF4 F091          	movff	prodh,___wmul@product+1
 18731  00036C  518C               	movf	___wmul@multiplier& (0+255),w,b
 18732  00036E  038F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 18733  000370  50F3               	movf	243,w,c
 18734  000372  2791               	addwf	(___wmul@product+1)& (0+255),f,b
 18735  000374  518D               	movf	(___wmul@multiplier+1)& (0+255),w,b
 18736  000376  038E               	mulwf	___wmul@multiplicand& (0+255),b
 18737  000378  50F3               	movf	243,w,c
 18738  00037A  2791               	addwf	(___wmul@product+1)& (0+255),f,b
 18739                           
 18740                           ; BSR set to: 0
 18741  00037C  C090  F08C         	movff	___wmul@product,?___wmul
 18742  000380  C091  F08D         	movff	___wmul@product+1,?___wmul+1
 18743                           
 18744                           ; BSR set to: 0
 18745  000384  0012               	return		;funcret
 18746  000386                     __end_of___wmul:
 18747                           	callstack 0
 18748                           
 18749 ;; *************** function _ParadaEmergencia *****************
 18750 ;; Defined at:
 18751 ;;		line 87 in file "GCODE.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;		None
 18754 ;; Auto vars:     Size  Location     Type
 18755 ;;		None
 18756 ;; Return value:  Size  Location     Type
 18757 ;;                  1    wreg      void 
 18758 ;; Registers used:
 18759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18760 ;; Tracked objects:
 18761 ;;		On entry : 3F/3
 18762 ;;		On exit  : 3F/0
 18763 ;;		Unchanged: 0/0
 18764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18765 ;;      Params:         0       0       0       0       0       0       0       0       0
 18766 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18767 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18768 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18769 ;;Total ram usage:        0 bytes
 18770 ;; Hardware stack levels used: 1
 18771 ;; Hardware stack levels required when called: 12
 18772 ;; This function calls:
 18773 ;;		_Fila_Init
 18774 ;;		_TMR2_StopTimer
 18775 ;;		_apagarRotor
 18776 ;; This function is called by:
 18777 ;;		_USBCommandFetch
 18778 ;; This function uses a non-reentrant model
 18779 ;;
 18780                           
 18781                           	psect	text89
 18782  000338                     __ptext89:
 18783                           	callstack 0
 18784  000338                     _ParadaEmergencia:
 18785                           	callstack 17
 18786                           
 18787                           ; BSR set to: 3
 18788                           ;GCODE.c: 88:    LATBbits.LATB0=1;
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;incstack = 0
 18792  000338  808A               	bsf	138,0,c	;volatile
 18793                           
 18794                           ; BSR set to: 3
 18795                           ;GCODE.c: 89:    TMR2_StopTimer();
 18796  00033A  EC09  F003         	call	_TMR2_StopTimer	;wreg free
 18797                           
 18798                           ;GCODE.c: 90:    Fila_Init();
 18799  00033E  EC00  F001         	call	_Fila_Init	;wreg free
 18800                           
 18801                           ; BSR set to: 0
 18802                           ;GCODE.c: 91:    busy=0;
 18803  000342  0E00               	movlw	0
 18804  000344  0101               	movlb	1	; () banked
 18805  000346  6FD4               	movwf	_busy& (0+255),b
 18806                           
 18807                           ; BSR set to: 1
 18808                           ;GCODE.c: 92:    pos_relativa_Z=0;
 18809  000348  0E00               	movlw	0
 18810  00034A  0100               	movlb	0	; () banked
 18811  00034C  6FBC               	movwf	_pos_relativa_Z& (0+255),b
 18812  00034E  0E00               	movlw	0
 18813  000350  6FBD               	movwf	(_pos_relativa_Z+1)& (0+255),b
 18814  000352  0E00               	movlw	0
 18815  000354  6FBE               	movwf	(_pos_relativa_Z+2)& (0+255),b
 18816  000356  0E00               	movlw	0
 18817  000358  6FBF               	movwf	(_pos_relativa_Z+3)& (0+255),b
 18818                           
 18819                           ; BSR set to: 0
 18820                           ;GCODE.c: 93:    apagarRotor();
 18821  00035A  EC07  F003         	call	_apagarRotor	;wreg free
 18822                           
 18823                           ; BSR set to: 0
 18824  00035E  0012               	return		;funcret
 18825  000360                     __end_of_ParadaEmergencia:
 18826                           	callstack 0
 18827                           
 18828 ;; *************** function _apagarRotor *****************
 18829 ;; Defined at:
 18830 ;;		line 9 in file "rotor.c"
 18831 ;; Parameters:    Size  Location     Type
 18832 ;;		None
 18833 ;; Auto vars:     Size  Location     Type
 18834 ;;		None
 18835 ;; Return value:  Size  Location     Type
 18836 ;;                  1    wreg      void 
 18837 ;; Registers used:
 18838 ;;		None
 18839 ;; Tracked objects:
 18840 ;;		On entry : 3F/0
 18841 ;;		On exit  : 3F/0
 18842 ;;		Unchanged: 3F/0
 18843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18844 ;;      Params:         0       0       0       0       0       0       0       0       0
 18845 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18847 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18848 ;;Total ram usage:        0 bytes
 18849 ;; Hardware stack levels used: 1
 18850 ;; Hardware stack levels required when called: 10
 18851 ;; This function calls:
 18852 ;;		Nothing
 18853 ;; This function is called by:
 18854 ;;		_M_5
 18855 ;;		_ParadaEmergencia
 18856 ;; This function uses a non-reentrant model
 18857 ;;
 18858                           
 18859                           	psect	text90
 18860  00060E                     __ptext90:
 18861                           	callstack 0
 18862  00060E                     _apagarRotor:
 18863                           	callstack 18
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;rotor.c: 10:    LATCbits.LATC6=0;
 18867                           
 18868                           ; BSR set to: 0
 18869                           ;incstack = 0
 18870  00060E  9C8B               	bcf	139,6,c	;volatile
 18871                           
 18872                           ; BSR set to: 0
 18873  000610  0012               	return		;funcret
 18874  000612                     __end_of_apagarRotor:
 18875                           	callstack 0
 18876                           
 18877 ;; *************** function _TMR2_StopTimer *****************
 18878 ;; Defined at:
 18879 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 18880 ;; Parameters:    Size  Location     Type
 18881 ;;		None
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;		None
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  1    wreg      void 
 18886 ;; Registers used:
 18887 ;;		None
 18888 ;; Tracked objects:
 18889 ;;		On entry : 3C/0
 18890 ;;		On exit  : 3C/0
 18891 ;;		Unchanged: 3C/0
 18892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18893 ;;      Params:         0       0       0       0       0       0       0       0       0
 18894 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18895 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18896 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18897 ;;Total ram usage:        0 bytes
 18898 ;; Hardware stack levels used: 1
 18899 ;; Hardware stack levels required when called: 10
 18900 ;; This function calls:
 18901 ;;		Nothing
 18902 ;; This function is called by:
 18903 ;;		_inicializar_Sistema
 18904 ;;		_ParadaEmergencia
 18905 ;; This function uses a non-reentrant model
 18906 ;;
 18907                           
 18908                           	psect	text91
 18909  000612                     __ptext91:
 18910                           	callstack 0
 18911  000612                     _TMR2_StopTimer:
 18912                           	callstack 19
 18913                           
 18914                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
 18915                           
 18916                           ; BSR set to: 0
 18917                           ;incstack = 0
 18918  000612  94BA               	bcf	186,2,c	;volatile
 18919  000614  0012               	return		;funcret
 18920  000616                     __end_of_TMR2_StopTimer:
 18921                           	callstack 0
 18922                           
 18923 ;; *************** function _Fila_Init *****************
 18924 ;; Defined at:
 18925 ;;		line 12 in file "fila.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;		None
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;		None
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  1    wreg      void 
 18932 ;; Registers used:
 18933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18934 ;; Tracked objects:
 18935 ;;		On entry : 3C/0
 18936 ;;		On exit  : 3F/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18939 ;;      Params:         0       0       0       0       0       0       0       0       0
 18940 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18941 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18942 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18943 ;;Total ram usage:        0 bytes
 18944 ;; Hardware stack levels used: 1
 18945 ;; Hardware stack levels required when called: 11
 18946 ;; This function calls:
 18947 ;;		_memset
 18948 ;; This function is called by:
 18949 ;;		_inicializar_Sistema
 18950 ;;		_ParadaEmergencia
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text92
 18955  000200                     __ptext92:
 18956                           	callstack 0
 18957  000200                     _Fila_Init:
 18958                           	callstack 18
 18959                           
 18960                           ;fila.c: 13:    cabeza=0;
 18961                           
 18962                           ;incstack = 0
 18963  000200  0E00               	movlw	0
 18964  000202  0101               	movlb	1	; () banked
 18965  000204  6FD6               	movwf	_cabeza& (0+255),b
 18966                           
 18967                           ;fila.c: 14:    cola=0;
 18968  000206  0E00               	movlw	0
 18969  000208  6FD5               	movwf	_cola& (0+255),b
 18970                           
 18971                           ;fila.c: 15:    largo=0;
 18972  00020A  0E00               	movlw	0
 18973  00020C  0100               	movlb	0	; () banked
 18974  00020E  6FC8               	movwf	_largo& (0+255),b
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;fila.c: 16:    memset(fila,0,sizeof(char)*32*20);
 18978  000210  0E80               	movlw	low _fila
 18979  000212  6F8C               	movwf	memset@dest& (0+255),b
 18980  000214  0E05               	movlw	high _fila
 18981  000216  6F8D               	movwf	(memset@dest+1)& (0+255),b
 18982  000218  0E00               	movlw	0
 18983  00021A  6F8F               	movwf	(memset@c+1)& (0+255),b
 18984  00021C  0E00               	movlw	0
 18985  00021E  6F8E               	movwf	memset@c& (0+255),b
 18986  000220  0E02               	movlw	2
 18987  000222  6F91               	movwf	(memset@n+1)& (0+255),b
 18988  000224  0E80               	movlw	128
 18989  000226  6F90               	movwf	memset@n& (0+255),b
 18990  000228  EC25  F02A         	call	_memset	;wreg free
 18991                           
 18992                           ; BSR set to: 0
 18993  00022C  0012               	return		;funcret
 18994  00022E                     __end_of_Fila_Init:
 18995                           	callstack 0
 18996                           
 18997 ;; *************** function _memset *****************
 18998 ;; Defined at:
 18999 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;  dest            2   44[BANK0 ] PTR void 
 19002 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), USBCommandFetch@readTokens(64), 
 19003 ;;		 -> readBuffer(32), fila(640), writeBuffer(32), USBAlternateInterface(2), 
 19004 ;;		 -> BDT(48), UEP1(1), 
 19005 ;;  c               2   46[BANK0 ] int 
 19006 ;;  n               2   48[BANK0 ] unsigned int 
 19007 ;; Auto vars:     Size  Location     Type
 19008 ;;  s               2   54[BANK0 ] PTR unsigned char 
 19009 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), USBCommandFetch@readTokens(64), 
 19010 ;;		 -> readBuffer(32), fila(640), writeBuffer(32), USBAlternateInterface(2), 
 19011 ;;		 -> BDT(48), UEP1(1), 
 19012 ;;  k               2   52[BANK0 ] unsigned int 
 19013 ;; Return value:  Size  Location     Type
 19014 ;;                  2   44[BANK0 ] PTR void 
 19015 ;; Registers used:
 19016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19017 ;; Tracked objects:
 19018 ;;		On entry : 3F/0
 19019 ;;		On exit  : 3F/0
 19020 ;;		Unchanged: 0/0
 19021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19022 ;;      Params:         0       6       0       0       0       0       0       0       0
 19023 ;;      Locals:         0       4       0       0       0       0       0       0       0
 19024 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19025 ;;      Totals:         0      12       0       0       0       0       0       0       0
 19026 ;;Total ram usage:       12 bytes
 19027 ;; Hardware stack levels used: 1
 19028 ;; Hardware stack levels required when called: 10
 19029 ;; This function calls:
 19030 ;;		Nothing
 19031 ;; This function is called by:
 19032 ;;		_USBDeviceInit
 19033 ;;		_main
 19034 ;;		_Fila_Init
 19035 ;;		_USBCommandFetch
 19036 ;;		_executeCommand
 19037 ;; This function uses a non-reentrant model
 19038 ;;
 19039                           
 19040                           	psect	text93
 19041  00544A                     __ptext93:
 19042                           	callstack 0
 19043  00544A                     _memset:
 19044                           	callstack 20
 19045                           
 19046                           ; BSR set to: 0
 19047                           
 19048                           ; BSR set to: 0
 19049                           ;incstack = 0
 19050  00544A  C08C  F096         	movff	memset@dest,memset@s
 19051  00544E  C08D  F097         	movff	memset@dest+1,memset@s+1
 19052  005452  5190               	movf	memset@n& (0+255),w,b
 19053  005454  1191               	iorwf	(memset@n+1)& (0+255),w,b
 19054  005456  B4D8               	btfsc	status,2,c
 19055  005458  0012               	return	
 19056                           
 19057                           ; BSR set to: 0
 19058  00545A  C096  FFD9         	movff	memset@s,fsr2l
 19059  00545E  C097  FFDA         	movff	memset@s+1,fsr2h
 19060  005462  C08E  FFDF         	movff	memset@c,indf2
 19061                           
 19062                           ; BSR set to: 0
 19063  005466  5190               	movf	memset@n& (0+255),w,b
 19064  005468  2596               	addwf	memset@s& (0+255),w,b
 19065  00546A  6F92               	movwf	??_memset& (0+255),b
 19066  00546C  5191               	movf	(memset@n+1)& (0+255),w,b
 19067  00546E  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19068  005470  6F93               	movwf	(??_memset+1)& (0+255),b
 19069  005472  0EFF               	movlw	255
 19070  005474  2592               	addwf	??_memset& (0+255),w,b
 19071  005476  6ED9               	movwf	fsr2l,c
 19072  005478  0EFF               	movlw	255
 19073  00547A  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19074  00547C  6EDA               	movwf	fsr2h,c
 19075  00547E  C08E  FFDF         	movff	memset@c,indf2
 19076  005482  5191               	movf	(memset@n+1)& (0+255),w,b
 19077  005484  E104               	bnz	l14103
 19078  005486  0E03               	movlw	3
 19079  005488  5D90               	subwf	memset@n& (0+255),w,b
 19080  00548A  A0D8               	btfss	status,0,c
 19081  00548C  0012               	return	
 19082  00548E                     l14103:
 19083                           
 19084                           ; BSR set to: 0
 19085  00548E  EE20 F001          	lfsr	2,1
 19086  005492  5196               	movf	memset@s& (0+255),w,b
 19087  005494  26D9               	addwf	fsr2l,f,c
 19088  005496  5197               	movf	(memset@s+1)& (0+255),w,b
 19089  005498  22DA               	addwfc	fsr2h,f,c
 19090  00549A  C08E  FFDF         	movff	memset@c,indf2
 19091  00549E  EE20 F002          	lfsr	2,2
 19092  0054A2  5196               	movf	memset@s& (0+255),w,b
 19093  0054A4  26D9               	addwf	fsr2l,f,c
 19094  0054A6  5197               	movf	(memset@s+1)& (0+255),w,b
 19095  0054A8  22DA               	addwfc	fsr2h,f,c
 19096  0054AA  C08E  FFDF         	movff	memset@c,indf2
 19097  0054AE  5190               	movf	memset@n& (0+255),w,b
 19098  0054B0  2596               	addwf	memset@s& (0+255),w,b
 19099  0054B2  6F92               	movwf	??_memset& (0+255),b
 19100  0054B4  5191               	movf	(memset@n+1)& (0+255),w,b
 19101  0054B6  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19102  0054B8  6F93               	movwf	(??_memset+1)& (0+255),b
 19103  0054BA  0EFE               	movlw	254
 19104  0054BC  2592               	addwf	??_memset& (0+255),w,b
 19105  0054BE  6ED9               	movwf	fsr2l,c
 19106  0054C0  0EFF               	movlw	255
 19107  0054C2  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19108  0054C4  6EDA               	movwf	fsr2h,c
 19109  0054C6  C08E  FFDF         	movff	memset@c,indf2
 19110  0054CA  5190               	movf	memset@n& (0+255),w,b
 19111  0054CC  2596               	addwf	memset@s& (0+255),w,b
 19112  0054CE  6F92               	movwf	??_memset& (0+255),b
 19113  0054D0  5191               	movf	(memset@n+1)& (0+255),w,b
 19114  0054D2  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19115  0054D4  6F93               	movwf	(??_memset+1)& (0+255),b
 19116  0054D6  0EFD               	movlw	253
 19117  0054D8  2592               	addwf	??_memset& (0+255),w,b
 19118  0054DA  6ED9               	movwf	fsr2l,c
 19119  0054DC  0EFF               	movlw	255
 19120  0054DE  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19121  0054E0  6EDA               	movwf	fsr2h,c
 19122  0054E2  C08E  FFDF         	movff	memset@c,indf2
 19123                           
 19124                           ; BSR set to: 0
 19125  0054E6  5191               	movf	(memset@n+1)& (0+255),w,b
 19126  0054E8  E104               	bnz	l14109
 19127  0054EA  0E07               	movlw	7
 19128  0054EC  5D90               	subwf	memset@n& (0+255),w,b
 19129  0054EE  A0D8               	btfss	status,0,c
 19130  0054F0  0012               	return	
 19131  0054F2                     l14109:
 19132                           
 19133                           ; BSR set to: 0
 19134  0054F2  EE20 F003          	lfsr	2,3
 19135  0054F6  5196               	movf	memset@s& (0+255),w,b
 19136  0054F8  26D9               	addwf	fsr2l,f,c
 19137  0054FA  5197               	movf	(memset@s+1)& (0+255),w,b
 19138  0054FC  22DA               	addwfc	fsr2h,f,c
 19139  0054FE  C08E  FFDF         	movff	memset@c,indf2
 19140  005502  5190               	movf	memset@n& (0+255),w,b
 19141  005504  2596               	addwf	memset@s& (0+255),w,b
 19142  005506  6F92               	movwf	??_memset& (0+255),b
 19143  005508  5191               	movf	(memset@n+1)& (0+255),w,b
 19144  00550A  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19145  00550C  6F93               	movwf	(??_memset+1)& (0+255),b
 19146  00550E  0EFC               	movlw	252
 19147  005510  2592               	addwf	??_memset& (0+255),w,b
 19148  005512  6ED9               	movwf	fsr2l,c
 19149  005514  0EFF               	movlw	255
 19150  005516  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19151  005518  6EDA               	movwf	fsr2h,c
 19152  00551A  C08E  FFDF         	movff	memset@c,indf2
 19153                           
 19154                           ; BSR set to: 0
 19155  00551E  5191               	movf	(memset@n+1)& (0+255),w,b
 19156  005520  E104               	bnz	l14115
 19157  005522  0E09               	movlw	9
 19158  005524  5D90               	subwf	memset@n& (0+255),w,b
 19159  005526  A0D8               	btfss	status,0,c
 19160  005528  0012               	return	
 19161  00552A                     l14115:
 19162                           
 19163                           ; BSR set to: 0
 19164  00552A  C096  F092         	movff	memset@s,??_memset
 19165  00552E  C097  F093         	movff	memset@s+1,??_memset+1
 19166  005532  1F92               	comf	??_memset& (0+255),f,b
 19167  005534  1F93               	comf	(??_memset+1)& (0+255),f,b
 19168  005536  4B92               	infsnz	??_memset& (0+255),f,b
 19169  005538  2B93               	incf	(??_memset+1)& (0+255),f,b
 19170  00553A  0E03               	movlw	3
 19171  00553C  1592               	andwf	??_memset& (0+255),w,b
 19172  00553E  6F94               	movwf	memset@k& (0+255),b
 19173  005540  6B95               	clrf	(memset@k+1)& (0+255),b
 19174  005542  5194               	movf	memset@k& (0+255),w,b
 19175  005544  2796               	addwf	memset@s& (0+255),f,b
 19176  005546  5195               	movf	(memset@k+1)& (0+255),w,b
 19177  005548  2397               	addwfc	(memset@s+1)& (0+255),f,b
 19178  00554A  5194               	movf	memset@k& (0+255),w,b
 19179  00554C  5F90               	subwf	memset@n& (0+255),f,b
 19180  00554E  5195               	movf	(memset@k+1)& (0+255),w,b
 19181  005550  5B91               	subwfb	(memset@n+1)& (0+255),f,b
 19182  005552  0EFC               	movlw	252
 19183  005554  1790               	andwf	memset@n& (0+255),f,b
 19184  005556  0EFF               	movlw	255
 19185  005558  1791               	andwf	(memset@n+1)& (0+255),f,b
 19186  00555A  D00B               	goto	l14123
 19187  00555C                     l14117:
 19188                           
 19189                           ; BSR set to: 0
 19190  00555C  C096  FFD9         	movff	memset@s,fsr2l
 19191  005560  C097  FFDA         	movff	memset@s+1,fsr2h
 19192  005564  C08E  FFDF         	movff	memset@c,indf2
 19193                           
 19194                           ; BSR set to: 0
 19195  005568  0790               	decf	memset@n& (0+255),f,b
 19196  00556A  A0D8               	btfss	status,0,c
 19197  00556C  0791               	decf	(memset@n+1)& (0+255),f,b
 19198                           
 19199                           ; BSR set to: 0
 19200  00556E  4B96               	infsnz	memset@s& (0+255),f,b
 19201  005570  2B97               	incf	(memset@s+1)& (0+255),f,b
 19202  005572                     l14123:
 19203                           
 19204                           ; BSR set to: 0
 19205  005572  5190               	movf	memset@n& (0+255),w,b
 19206  005574  1191               	iorwf	(memset@n+1)& (0+255),w,b
 19207  005576  B4D8               	btfsc	status,2,c
 19208  005578  0012               	return	
 19209  00557A  D7F0               	goto	l14117
 19210  00557C                     __end_of_memset:
 19211                           	callstack 0
 19212                           
 19213 ;; *************** function _MCC_USB_READ *****************
 19214 ;; Defined at:
 19215 ;;		line 140 in file "CommandHandler.c"
 19216 ;; Parameters:    Size  Location     Type
 19217 ;;		None
 19218 ;; Auto vars:     Size  Location     Type
 19219 ;;		None
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  1    wreg      void 
 19222 ;; Registers used:
 19223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19224 ;; Tracked objects:
 19225 ;;		On entry : 3F/0
 19226 ;;		On exit  : 3E/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19229 ;;      Params:         0       0       0       0       0       0       0       0       0
 19230 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19231 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19232 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19233 ;;Total ram usage:        0 bytes
 19234 ;; Hardware stack levels used: 1
 19235 ;; Hardware stack levels required when called: 12
 19236 ;; This function calls:
 19237 ;;		_getsUSBUSART
 19238 ;; This function is called by:
 19239 ;;		_USBCommandFetch
 19240 ;; This function uses a non-reentrant model
 19241 ;;
 19242                           
 19243                           	psect	text94
 19244  000414                     __ptext94:
 19245                           	callstack 0
 19246  000414                     _MCC_USB_READ:
 19247                           	callstack 17
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;CommandHandler.c: 142:     if( USBDeviceState < CONFIGURED_STATE )
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;incstack = 0
 19254  000414  0E20               	movlw	32
 19255  000416  605D               	cpfslt	_USBDeviceState^0,c
 19256  000418  D001               	goto	l1408
 19257  00041A  0012               	return	
 19258  00041C                     l1408:
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;CommandHandler.c: 146:     if( UCONbits.SUSPND== 1 )
 19262  00041C  B260               	btfsc	96,1,c	;volatile
 19263  00041E  0012               	return	
 19264                           
 19265                           ; BSR set to: 0
 19266                           ;CommandHandler.c: 150:       numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
 19267  000420  0E62               	movlw	low _readBuffer
 19268  000422  6F95               	movwf	getsUSBUSART@buffer& (0+255),b
 19269  000424  0E03               	movlw	high _readBuffer
 19270  000426  6F96               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 19271  000428  0E20               	movlw	32
 19272  00042A  6F97               	movwf	getsUSBUSART@len& (0+255),b
 19273  00042C  EC4B  F039         	call	_getsUSBUSART	;wreg free
 19274  000430  0101               	movlb	1	; () banked
 19275  000432  6FD7               	movwf	_numBytesRead& (0+255),b
 19276  000434  0012               	return		;funcret
 19277  000436                     __end_of_MCC_USB_READ:
 19278                           	callstack 0
 19279                           
 19280 ;; *************** function _getsUSBUSART *****************
 19281 ;; Defined at:
 19282 ;;		line 503 in file "mcc_generated_files/usb/usb_device_cdc.c"
 19283 ;; Parameters:    Size  Location     Type
 19284 ;;  buffer          2   53[BANK0 ] PTR unsigned char 
 19285 ;;		 -> readBuffer(32), 
 19286 ;;  len             1   55[BANK0 ] unsigned char 
 19287 ;; Auto vars:     Size  Location     Type
 19288 ;;		None
 19289 ;; Return value:  Size  Location     Type
 19290 ;;                  1    wreg      unsigned char 
 19291 ;; Registers used:
 19292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19293 ;; Tracked objects:
 19294 ;;		On entry : 3F/0
 19295 ;;		On exit  : 3F/0
 19296 ;;		Unchanged: 0/0
 19297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19298 ;;      Params:         0       3       0       0       0       0       0       0       0
 19299 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19300 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19301 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19302 ;;Total ram usage:        4 bytes
 19303 ;; Hardware stack levels used: 1
 19304 ;; Hardware stack levels required when called: 11
 19305 ;; This function calls:
 19306 ;;		_USBTransferOnePacket
 19307 ;; This function is called by:
 19308 ;;		_MCC_USB_READ
 19309 ;; This function uses a non-reentrant model
 19310 ;;
 19311                           
 19312                           	psect	text95
 19313  007296                     __ptext95:
 19314                           	callstack 0
 19315  007296                     _getsUSBUSART:
 19316                           	callstack 17
 19317                           
 19318                           ; BSR set to: 0
 19319                           ;mcc_generated_files/usb/usb_device_cdc.c: 503: uint8_t getsUSBUSART(uint8_t *buffer, ui
      +                          nt8_t len);mcc_generated_files/usb/usb_device_cdc.c: 504: {;mcc_generated_files/usb/usb_
      +                          device_cdc.c: 505:     cdc_rx_len = 0;
 19320                           
 19321                           ;incstack = 0
 19322  007296  0E00               	movlw	0
 19323  007298  6FCC               	movwf	_cdc_rx_len& (0+255),b
 19324                           
 19325                           ; BSR set to: 0
 19326                           ;mcc_generated_files/usb/usb_device_cdc.c: 507:     if(!((CDCDataOutHandle != 0x0000) &&
      +                           ((*(volatile uint8_t*)CDCDataOutHandle & 0x80) != 0x00)))
 19327  00729A  0101               	movlb	1	; () banked
 19328  00729C  51CB               	movf	_CDCDataOutHandle& (0+255),w,b
 19329  00729E  11CC               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 19330  0072A0  B4D8               	btfsc	status,2,c
 19331  0072A2  D006               	goto	u17260
 19332                           
 19333                           ; BSR set to: 1
 19334  0072A4  C1CB  FFD9         	movff	_CDCDataOutHandle,fsr2l
 19335  0072A8  C1CC  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 19336  0072AC  BEDF               	btfsc	indf2,7,c
 19337  0072AE  D03A               	goto	l14499
 19338  0072B0                     u17260:
 19339                           
 19340                           ; BSR set to: 1
 19341                           ;mcc_generated_files/usb/usb_device_cdc.c: 508:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 513:         if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 19342  0072B0  EE20 F001          	lfsr	2,1
 19343  0072B4  51CB               	movf	_CDCDataOutHandle& (0+255),w,b
 19344  0072B6  26D9               	addwf	fsr2l,f,c
 19345  0072B8  51CC               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 19346  0072BA  22DA               	addwfc	fsr2h,f,c
 19347  0072BC  0100               	movlb	0	; () banked
 19348  0072BE  5197               	movf	getsUSBUSART@len& (0+255),w,b
 19349  0072C0  5CDE               	subwf	postinc2,w,c
 19350  0072C2  B0D8               	btfsc	status,0,c
 19351  0072C4  D00A               	goto	l14489
 19352                           
 19353                           ; BSR set to: 0
 19354                           ;mcc_generated_files/usb/usb_device_cdc.c: 514:             len = (((volatile BDT_ENTRY*
      +                          )CDCDataOutHandle)->CNT);
 19355  0072C6  0101               	movlb	1	; () banked
 19356  0072C8  EE20 F001          	lfsr	2,1
 19357  0072CC  51CB               	movf	_CDCDataOutHandle& (0+255),w,b
 19358  0072CE  26D9               	addwf	fsr2l,f,c
 19359  0072D0  51CC               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 19360  0072D2  22DA               	addwfc	fsr2h,f,c
 19361  0072D4  50DF               	movf	indf2,w,c
 19362  0072D6  0100               	movlb	0	; () banked
 19363  0072D8  6F97               	movwf	getsUSBUSART@len& (0+255),b
 19364  0072DA                     l14489:
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;mcc_generated_files/usb/usb_device_cdc.c: 519:         for(cdc_rx_len = 0; cdc_rx_len <
      +                           len; cdc_rx_len++)
 19368  0072DA  0E00               	movlw	0
 19369  0072DC  6FCC               	movwf	_cdc_rx_len& (0+255),b
 19370  0072DE  D00F               	goto	l14495
 19371  0072E0                     l14491:
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;mcc_generated_files/usb/usb_device_cdc.c: 520:             buffer[cdc_rx_len] = cdc_dat
      +                          a_rx[cdc_rx_len];
 19375  0072E0  0E40               	movlw	64
 19376  0072E2  25CC               	addwf	_cdc_rx_len& (0+255),w,b
 19377  0072E4  6ED9               	movwf	fsr2l,c
 19378  0072E6  6ADA               	clrf	fsr2h,c
 19379  0072E8  0E05               	movlw	5
 19380  0072EA  22DA               	addwfc	fsr2h,f,c
 19381  0072EC  51CC               	movf	_cdc_rx_len& (0+255),w,b
 19382  0072EE  2595               	addwf	getsUSBUSART@buffer& (0+255),w,b
 19383  0072F0  6EE1               	movwf	fsr1l,c
 19384  0072F2  0E00               	movlw	0
 19385  0072F4  2196               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 19386  0072F6  6EE2               	movwf	fsr1h,c
 19387  0072F8  CFDF FFE7          	movff	indf2,indf1
 19388                           
 19389                           ; BSR set to: 0
 19390  0072FC  2BCC               	incf	_cdc_rx_len& (0+255),f,b
 19391  0072FE                     l14495:
 19392                           
 19393                           ; BSR set to: 0
 19394  0072FE  5197               	movf	getsUSBUSART@len& (0+255),w,b
 19395  007300  5DCC               	subwf	_cdc_rx_len& (0+255),w,b
 19396  007302  A0D8               	btfss	status,0,c
 19397  007304  D7ED               	goto	l14491
 19398                           
 19399                           ; BSR set to: 0
 19400                           ;mcc_generated_files/usb/usb_device_cdc.c: 526:         CDCDataOutHandle = USBTransferOn
      +                          ePacket(2,0,(uint8_t*)&cdc_data_rx,sizeof(cdc_data_rx));
 19401  007306  0E00               	movlw	0
 19402  007308  6F8C               	movwf	USBTransferOnePacket@dir& (0+255),b
 19403  00730A  0E40               	movlw	64
 19404  00730C  6F8D               	movwf	USBTransferOnePacket@data& (0+255),b
 19405  00730E  0E05               	movlw	5
 19406  007310  6F8E               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 19407  007312  0E40               	movlw	64
 19408  007314  6F8F               	movwf	USBTransferOnePacket@len& (0+255),b
 19409  007316  0E02               	movlw	2
 19410  007318  EC4B  F02F         	call	_USBTransferOnePacket
 19411  00731C  C08C  F1CB         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 19412  007320  C08D  F1CC         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 19413  007324                     l14499:
 19414                           
 19415                           ;mcc_generated_files/usb/usb_device_cdc.c: 530:     return cdc_rx_len;
 19416  007324  0100               	movlb	0	; () banked
 19417  007326  51CC               	movf	_cdc_rx_len& (0+255),w,b
 19418                           
 19419                           ; BSR set to: 0
 19420  007328  0012               	return		;funcret
 19421  00732A                     __end_of_getsUSBUSART:
 19422                           	callstack 0
 19423                           
 19424 ;; *************** function _Fila_Agregar *****************
 19425 ;; Defined at:
 19426 ;;		line 18 in file "fila.c"
 19427 ;; Parameters:    Size  Location     Type
 19428 ;;  comando         2   55[BANK0 ] PTR unsigned char 
 19429 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), NULL(0), 
 19430 ;;  nBytes          2   57[BANK0 ] int 
 19431 ;; Auto vars:     Size  Location     Type
 19432 ;;		None
 19433 ;; Return value:  Size  Location     Type
 19434 ;;                  2   55[BANK0 ] int 
 19435 ;; Registers used:
 19436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19437 ;; Tracked objects:
 19438 ;;		On entry : 3F/0
 19439 ;;		On exit  : 3F/0
 19440 ;;		Unchanged: 0/0
 19441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19442 ;;      Params:         0       4       0       0       0       0       0       0       0
 19443 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19444 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19445 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19446 ;;Total ram usage:        4 bytes
 19447 ;; Hardware stack levels used: 1
 19448 ;; Hardware stack levels required when called: 11
 19449 ;; This function calls:
 19450 ;;		___lbmod
 19451 ;;		_memcpy
 19452 ;; This function is called by:
 19453 ;;		_USBCommandFetch
 19454 ;; This function uses a non-reentrant model
 19455 ;;
 19456                           
 19457                           	psect	text96
 19458  0078FE                     __ptext96:
 19459                           	callstack 0
 19460  0078FE                     _Fila_Agregar:
 19461                           	callstack 18
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;fila.c: 19:    if(largo<20){
 19465                           
 19466                           ; BSR set to: 0
 19467                           ;incstack = 0
 19468  0078FE  0E14               	movlw	20
 19469  007900  61C8               	cpfslt	_largo& (0+255),b
 19470  007902  0012               	return	
 19471                           
 19472                           ; BSR set to: 0
 19473                           ;fila.c: 20:       if(nBytes<32){
 19474  007904  BF9A               	btfsc	(Fila_Agregar@nBytes+1)& (0+255),7,b
 19475  007906  D006               	goto	u18340
 19476  007908  519A               	movf	(Fila_Agregar@nBytes+1)& (0+255),w,b
 19477  00790A  E125               	bnz	l1028
 19478  00790C  0E20               	movlw	32
 19479  00790E  5D99               	subwf	Fila_Agregar@nBytes& (0+255),w,b
 19480  007910  B0D8               	btfsc	status,0,c
 19481  007912  0012               	return	
 19482  007914                     u18340:
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;fila.c: 21:          memcpy(fila[cabeza],comando,nBytes);
 19486  007914  0101               	movlb	1	; () banked
 19487  007916  51D6               	movf	_cabeza& (0+255),w,b
 19488  007918  0D20               	mullw	32
 19489  00791A  0E80               	movlw	low _fila
 19490  00791C  24F3               	addwf	243,w,c
 19491  00791E  0100               	movlb	0	; () banked
 19492  007920  6F8C               	movwf	memcpy@d1& (0+255),b
 19493  007922  0E05               	movlw	high _fila
 19494  007924  20F4               	addwfc	prodh,w,c
 19495  007926  6F8D               	movwf	(memcpy@d1+1)& (0+255),b
 19496  007928  C097  F08E         	movff	Fila_Agregar@comando,memcpy@s1
 19497  00792C  C098  F08F         	movff	Fila_Agregar@comando+1,memcpy@s1+1
 19498  007930  C099  F090         	movff	Fila_Agregar@nBytes,memcpy@n
 19499  007934  C09A  F091         	movff	Fila_Agregar@nBytes+1,memcpy@n+1
 19500  007938  EC33  F03E         	call	_memcpy	;wreg free
 19501                           
 19502                           ; BSR set to: 0
 19503                           ;fila.c: 22:          cabeza++;
 19504  00793C  0101               	movlb	1	; () banked
 19505  00793E  2BD6               	incf	_cabeza& (0+255),f,b
 19506                           
 19507                           ; BSR set to: 1
 19508                           ;fila.c: 23:          cabeza=cabeza%20;
 19509  007940  0E14               	movlw	20
 19510  007942  0100               	movlb	0	; () banked
 19511  007944  6F8C               	movwf	___lbmod@divisor& (0+255),b
 19512  007946  0101               	movlb	1	; () banked
 19513  007948  51D6               	movf	_cabeza& (0+255),w,b
 19514  00794A  EC17  F001         	call	___lbmod
 19515  00794E  0101               	movlb	1	; () banked
 19516  007950  6FD6               	movwf	_cabeza& (0+255),b
 19517                           
 19518                           ; BSR set to: 1
 19519                           ;fila.c: 24:          largo++;
 19520  007952  0100               	movlb	0	; () banked
 19521  007954  2BC8               	incf	_largo& (0+255),f,b
 19522  007956                     l1028:
 19523                           
 19524                           ; BSR set to: 0
 19525  007956  0012               	return		;funcret
 19526  007958                     __end_of_Fila_Agregar:
 19527                           	callstack 0
 19528                           
 19529 ;; *************** function _memcpy *****************
 19530 ;; Defined at:
 19531 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 19532 ;; Parameters:    Size  Location     Type
 19533 ;;  d1              2   44[BANK0 ] PTR void 
 19534 ;;		 -> executeCommand@strCommand(30), fila(640), SetupPkt(8), 
 19535 ;;  s1              2   46[BANK0 ] PTR const void 
 19536 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(640), 
 19537 ;;		 -> RAM(2047), NULL(0), 
 19538 ;;  n               2   48[BANK0 ] unsigned int 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;  s               2   53[BANK0 ] PTR const unsigned char 
 19541 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(640), 
 19542 ;;		 -> RAM(2047), NULL(0), 
 19543 ;;  d               2   51[BANK0 ] PTR unsigned char 
 19544 ;;		 -> executeCommand@strCommand(30), fila(640), SetupPkt(8), 
 19545 ;;  tmp             1   50[BANK0 ] unsigned char 
 19546 ;; Return value:  Size  Location     Type
 19547 ;;                  2   44[BANK0 ] PTR void 
 19548 ;; Registers used:
 19549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19550 ;; Tracked objects:
 19551 ;;		On entry : 3F/0
 19552 ;;		On exit  : 3F/0
 19553 ;;		Unchanged: 0/0
 19554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19555 ;;      Params:         0       6       0       0       0       0       0       0       0
 19556 ;;      Locals:         0       5       0       0       0       0       0       0       0
 19557 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19558 ;;      Totals:         0      11       0       0       0       0       0       0       0
 19559 ;;Total ram usage:       11 bytes
 19560 ;; Hardware stack levels used: 1
 19561 ;; Hardware stack levels required when called: 10
 19562 ;; This function calls:
 19563 ;;		Nothing
 19564 ;; This function is called by:
 19565 ;;		_Fila_Agregar
 19566 ;;		_FilaPop
 19567 ;; This function uses a non-reentrant model
 19568 ;;
 19569                           
 19570                           	psect	text97
 19571  007C66                     __ptext97:
 19572                           	callstack 0
 19573  007C66                     _memcpy:
 19574                           	callstack 18
 19575                           
 19576                           ; BSR set to: 0
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;incstack = 0
 19580  007C66  C08E  F095         	movff	memcpy@s1,memcpy@s
 19581  007C6A  C08F  F096         	movff	memcpy@s1+1,memcpy@s+1
 19582  007C6E  C08C  F093         	movff	memcpy@d1,memcpy@d
 19583  007C72  C08D  F094         	movff	memcpy@d1+1,memcpy@d+1
 19584  007C76  D010               	goto	l14451
 19585  007C78                     l14443:
 19586                           
 19587                           ; BSR set to: 0
 19588  007C78  C095  FFD9         	movff	memcpy@s,fsr2l
 19589  007C7C  C096  FFDA         	movff	memcpy@s+1,fsr2h
 19590  007C80  50DF               	movf	indf2,w,c
 19591  007C82  6F92               	movwf	memcpy@tmp& (0+255),b
 19592                           
 19593                           ; BSR set to: 0
 19594  007C84  4B95               	infsnz	memcpy@s& (0+255),f,b
 19595  007C86  2B96               	incf	(memcpy@s+1)& (0+255),f,b
 19596                           
 19597                           ; BSR set to: 0
 19598  007C88  C093  FFD9         	movff	memcpy@d,fsr2l
 19599  007C8C  C094  FFDA         	movff	memcpy@d+1,fsr2h
 19600  007C90  C092  FFDF         	movff	memcpy@tmp,indf2
 19601                           
 19602                           ; BSR set to: 0
 19603  007C94  4B93               	infsnz	memcpy@d& (0+255),f,b
 19604  007C96  2B94               	incf	(memcpy@d+1)& (0+255),f,b
 19605  007C98                     l14451:
 19606                           
 19607                           ; BSR set to: 0
 19608  007C98  0790               	decf	memcpy@n& (0+255),f,b
 19609  007C9A  A0D8               	btfss	status,0,c
 19610  007C9C  0791               	decf	(memcpy@n+1)& (0+255),f,b
 19611  007C9E  2990               	incf	memcpy@n& (0+255),w,b
 19612  007CA0  E1EB               	bnz	l14443
 19613  007CA2  2991               	incf	(memcpy@n+1)& (0+255),w,b
 19614  007CA4  B4D8               	btfsc	status,2,c
 19615  007CA6  0012               	return	
 19616  007CA8  D7E7               	goto	l14443
 19617  007CAA                     __end_of_memcpy:
 19618                           	callstack 0
 19619                           
 19620 ;; *************** function ___lbmod *****************
 19621 ;; Defined at:
 19622 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/lbmod.c"
 19623 ;; Parameters:    Size  Location     Type
 19624 ;;  dividend        1    wreg     unsigned char 
 19625 ;;  divisor         1   44[BANK0 ] unsigned char 
 19626 ;; Auto vars:     Size  Location     Type
 19627 ;;  dividend        1   45[BANK0 ] unsigned char 
 19628 ;;  rem             1   47[BANK0 ] unsigned char 
 19629 ;;  counter         1   46[BANK0 ] unsigned char 
 19630 ;; Return value:  Size  Location     Type
 19631 ;;                  1    wreg      unsigned char 
 19632 ;; Registers used:
 19633 ;;		wreg, status,2, status,0
 19634 ;; Tracked objects:
 19635 ;;		On entry : 3F/1
 19636 ;;		On exit  : 3F/0
 19637 ;;		Unchanged: 0/0
 19638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19639 ;;      Params:         0       1       0       0       0       0       0       0       0
 19640 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19641 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19642 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19643 ;;Total ram usage:        4 bytes
 19644 ;; Hardware stack levels used: 1
 19645 ;; Hardware stack levels required when called: 10
 19646 ;; This function calls:
 19647 ;;		Nothing
 19648 ;; This function is called by:
 19649 ;;		_Fila_Agregar
 19650 ;;		_FilaPop
 19651 ;; This function uses a non-reentrant model
 19652 ;;
 19653                           
 19654                           	psect	text98
 19655  00022E                     __ptext98:
 19656                           	callstack 0
 19657  00022E                     ___lbmod:
 19658                           	callstack 18
 19659                           
 19660                           ; BSR set to: 0
 19661                           ;incstack = 0
 19662                           ;___lbmod@dividend stored from wreg
 19663  00022E  0100               	movlb	0	; () banked
 19664  000230  6F8D               	movwf	___lbmod@dividend& (0+255),b
 19665  000232  0E08               	movlw	8
 19666  000234  0100               	movlb	0	; () banked
 19667  000236  6F8E               	movwf	___lbmod@counter& (0+255),b
 19668  000238  0E00               	movlw	0
 19669  00023A  6F8F               	movwf	___lbmod@rem& (0+255),b
 19670  00023C                     l14997:
 19671                           
 19672                           ; BSR set to: 0
 19673  00023C  90D8               	bcf	status,0,c
 19674  00023E  358D               	rlcf	___lbmod@dividend& (0+255),w,b
 19675  000240  358F               	rlcf	___lbmod@rem& (0+255),w,b
 19676  000242  6F8F               	movwf	___lbmod@rem& (0+255),b
 19677                           
 19678                           ; BSR set to: 0
 19679  000244  90D8               	bcf	status,0,c
 19680  000246  378D               	rlcf	___lbmod@dividend& (0+255),f,b
 19681                           
 19682                           ; BSR set to: 0
 19683  000248  518C               	movf	___lbmod@divisor& (0+255),w,b
 19684  00024A  5D8F               	subwf	___lbmod@rem& (0+255),w,b
 19685  00024C  A0D8               	btfss	status,0,c
 19686  00024E  D002               	goto	l15005
 19687                           
 19688                           ; BSR set to: 0
 19689  000250  518C               	movf	___lbmod@divisor& (0+255),w,b
 19690  000252  5F8F               	subwf	___lbmod@rem& (0+255),f,b
 19691  000254                     l15005:
 19692                           
 19693                           ; BSR set to: 0
 19694  000254  2F8E               	decfsz	___lbmod@counter& (0+255),f,b
 19695  000256  D7F2               	goto	l14997
 19696                           
 19697                           ; BSR set to: 0
 19698  000258  518F               	movf	___lbmod@rem& (0+255),w,b
 19699                           
 19700                           ; BSR set to: 0
 19701  00025A  0012               	return		;funcret
 19702  00025C                     __end_of___lbmod:
 19703                           	callstack 0
 19704                           
 19705 ;; *************** function _MCC_USB_WRITE *****************
 19706 ;; Defined at:
 19707 ;;		line 126 in file "CommandHandler.c"
 19708 ;; Parameters:    Size  Location     Type
 19709 ;;  str             2   47[BANK0 ] PTR unsigned char 
 19710 ;;		 -> writeBuffer(32), 
 19711 ;;  nBytes          2   49[BANK0 ] int 
 19712 ;; Auto vars:     Size  Location     Type
 19713 ;;		None
 19714 ;; Return value:  Size  Location     Type
 19715 ;;                  1    wreg      void 
 19716 ;; Registers used:
 19717 ;;		wreg, status,2, status,0, cstack
 19718 ;; Tracked objects:
 19719 ;;		On entry : 3F/0
 19720 ;;		On exit  : 3F/0
 19721 ;;		Unchanged: 0/0
 19722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19723 ;;      Params:         0       4       0       0       0       0       0       0       0
 19724 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19726 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19727 ;;Total ram usage:        4 bytes
 19728 ;; Hardware stack levels used: 1
 19729 ;; Hardware stack levels required when called: 11
 19730 ;; This function calls:
 19731 ;;		_putUSBUSART
 19732 ;; This function is called by:
 19733 ;;		_main
 19734 ;; This function uses a non-reentrant model
 19735 ;;
 19736                           
 19737                           	psect	text99
 19738  000386                     __ptext99:
 19739                           	callstack 0
 19740  000386                     _MCC_USB_WRITE:
 19741                           	callstack 19
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;CommandHandler.c: 127:    if( USBDeviceState < CONFIGURED_STATE )
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;incstack = 0
 19748  000386  0E20               	movlw	32
 19749  000388  605D               	cpfslt	_USBDeviceState^0,c
 19750  00038A  D001               	goto	l1402
 19751  00038C  0012               	return	
 19752  00038E                     l1402:
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;CommandHandler.c: 131:     if( UCONbits.SUSPND== 1 )
 19756  00038E  B260               	btfsc	96,1,c	;volatile
 19757  000390  0012               	return	
 19758                           
 19759                           ; BSR set to: 0
 19760                           ;CommandHandler.c: 135:    if( (cdc_trf_state == 0) == 1)
 19761  000392  51CB               	movf	_cdc_trf_state& (0+255),w,b
 19762  000394  A4D8               	btfss	status,2,c
 19763  000396  0012               	return	
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;CommandHandler.c: 136:     {;CommandHandler.c: 137:       putUSBUSART(str,nBytes);
 19767  000398  C08F  F08C         	movff	MCC_USB_WRITE@str,putUSBUSART@data
 19768  00039C  C090  F08D         	movff	MCC_USB_WRITE@str+1,putUSBUSART@data+1
 19769  0003A0  C091  F08E         	movff	MCC_USB_WRITE@nBytes,putUSBUSART@length
 19770  0003A4  ECD5  F001         	call	_putUSBUSART	;wreg free
 19771                           
 19772                           ; BSR set to: 0
 19773  0003A8  0012               	return		;funcret
 19774  0003AA                     __end_of_MCC_USB_WRITE:
 19775                           	callstack 0
 19776                           
 19777 ;; *************** function _putUSBUSART *****************
 19778 ;; Defined at:
 19779 ;;		line 574 in file "mcc_generated_files/usb/usb_device_cdc.c"
 19780 ;; Parameters:    Size  Location     Type
 19781 ;;  data            2   44[BANK0 ] PTR unsigned char 
 19782 ;;		 -> writeBuffer(32), 
 19783 ;;  length          1   46[BANK0 ] unsigned char 
 19784 ;; Auto vars:     Size  Location     Type
 19785 ;;		None
 19786 ;; Return value:  Size  Location     Type
 19787 ;;                  1    wreg      void 
 19788 ;; Registers used:
 19789 ;;		wreg, status,2, status,0
 19790 ;; Tracked objects:
 19791 ;;		On entry : 3F/0
 19792 ;;		On exit  : 3F/0
 19793 ;;		Unchanged: 0/0
 19794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19795 ;;      Params:         0       3       0       0       0       0       0       0       0
 19796 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19798 ;;      Totals:         0       3       0       0       0       0       0       0       0
 19799 ;;Total ram usage:        3 bytes
 19800 ;; Hardware stack levels used: 1
 19801 ;; Hardware stack levels required when called: 10
 19802 ;; This function calls:
 19803 ;;		Nothing
 19804 ;; This function is called by:
 19805 ;;		_MCC_USB_WRITE
 19806 ;; This function uses a non-reentrant model
 19807 ;;
 19808                           
 19809                           	psect	text100
 19810  0003AA                     __ptext100:
 19811                           	callstack 0
 19812  0003AA                     _putUSBUSART:
 19813                           	callstack 19
 19814                           
 19815                           ; BSR set to: 0
 19816                           ;mcc_generated_files/usb/usb_device_cdc.c: 574: void putUSBUSART(uint8_t *data, uint8_t 
      +                          length);mcc_generated_files/usb/usb_device_cdc.c: 575: {;mcc_generated_files/usb/usb_dev
      +                          ice_cdc.c: 599:     {PIE3bits.USBIE = 0;};
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;incstack = 0
 19820  0003AA  94A3               	bcf	163,2,c	;volatile
 19821                           
 19822                           ; BSR set to: 0
 19823                           ;mcc_generated_files/usb/usb_device_cdc.c: 600:     if(cdc_trf_state == 0)
 19824  0003AC  51CB               	movf	_cdc_trf_state& (0+255),w,b
 19825  0003AE  A4D8               	btfss	status,2,c
 19826  0003B0  D00C               	goto	l11561
 19827                           
 19828                           ; BSR set to: 0
 19829                           ;mcc_generated_files/usb/usb_device_cdc.c: 601:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 602:         { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
 19830  0003B2  C08C  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 19831  0003B6  C08D  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 19832                           
 19833                           ; BSR set to: 0
 19834  0003BA  C08E  F0CA         	movff	putUSBUSART@length,_cdc_tx_len
 19835                           
 19836                           ; BSR set to: 0
 19837  0003BE  0E01               	movlw	1
 19838  0003C0  0101               	movlb	1	; () banked
 19839  0003C2  6FDA               	movwf	_cdc_mem_type& (0+255),b
 19840                           
 19841                           ; BSR set to: 1
 19842  0003C4  0E01               	movlw	1
 19843  0003C6  0100               	movlb	0	; () banked
 19844  0003C8  6FCB               	movwf	_cdc_trf_state& (0+255),b
 19845  0003CA                     l11561:
 19846                           
 19847                           ; BSR set to: 0
 19848                           ;mcc_generated_files/usb/usb_device_cdc.c: 604:     {PIE3bits.USBIE = 1;};
 19849  0003CA  84A3               	bsf	163,2,c	;volatile
 19850                           
 19851                           ; BSR set to: 0
 19852  0003CC  0012               	return		;funcret
 19853  0003CE                     __end_of_putUSBUSART:
 19854                           	callstack 0
 19855                           
 19856 ;; *************** function _CDCTxService *****************
 19857 ;; Defined at:
 19858 ;;		line 854 in file "mcc_generated_files/usb/usb_device_cdc.c"
 19859 ;; Parameters:    Size  Location     Type
 19860 ;;		None
 19861 ;; Auto vars:     Size  Location     Type
 19862 ;;  byte_to_send    1   54[BANK0 ] unsigned char 
 19863 ;;  i               1   53[BANK0 ] unsigned char 
 19864 ;; Return value:  Size  Location     Type
 19865 ;;                  1    wreg      void 
 19866 ;; Registers used:
 19867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19868 ;; Tracked objects:
 19869 ;;		On entry : 3F/0
 19870 ;;		On exit  : 3D/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19873 ;;      Params:         0       0       0       0       0       0       0       0       0
 19874 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19876 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19877 ;;Total ram usage:        2 bytes
 19878 ;; Hardware stack levels used: 1
 19879 ;; Hardware stack levels required when called: 11
 19880 ;; This function calls:
 19881 ;;		_USBTransferOnePacket
 19882 ;; This function is called by:
 19883 ;;		_main
 19884 ;; This function uses a non-reentrant model
 19885 ;;
 19886                           
 19887                           	psect	text101
 19888  005B58                     __ptext101:
 19889                           	callstack 0
 19890  005B58                     _CDCTxService:
 19891                           	callstack 19
 19892                           
 19893                           ; BSR set to: 0
 19894                           ;mcc_generated_files/usb/usb_device_cdc.c: 856:     uint8_t byte_to_send;;mcc_generated_
      +                          files/usb/usb_device_cdc.c: 857:     uint8_t i;;mcc_generated_files/usb/usb_device_cdc.c
      +                          : 859:     {PIE3bits.USBIE = 0;};
 19895                           
 19896                           ; BSR set to: 0
 19897                           ;incstack = 0
 19898  005B58  94A3               	bcf	163,2,c	;volatile
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;mcc_generated_files/usb/usb_device_cdc.c: 861:     {};;mcc_generated_files/usb/usb_devi
      +                          ce_cdc.c: 863:     if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCDataInHan
      +                          dle & 0x80) != 0x00)))
 19902  005B5A  0102               	movlb	2	; () banked
 19903  005B5C  51E0               	movf	_CDCDataInHandle& (0+255),w,b
 19904  005B5E  11E1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 19905  005B60  B4D8               	btfsc	status,2,c
 19906  005B62  D008               	goto	l15415
 19907                           
 19908                           ; BSR set to: 2
 19909  005B64  C2E0  FFD9         	movff	_CDCDataInHandle,fsr2l
 19910  005B68  C2E1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 19911  005B6C  AEDF               	btfss	indf2,7,c
 19912  005B6E  D002               	goto	l15415
 19913                           
 19914                           ; BSR set to: 2
 19915                           ;mcc_generated_files/usb/usb_device_cdc.c: 864:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 865:         {PIE3bits.USBIE = 1;};
 19916  005B70  84A3               	bsf	163,2,c	;volatile
 19917                           
 19918                           ;mcc_generated_files/usb/usb_device_cdc.c: 866:         return;
 19919  005B72  0012               	return	
 19920  005B74                     l15415:
 19921                           
 19922                           ; BSR set to: 2
 19923                           ;mcc_generated_files/usb/usb_device_cdc.c: 874:     if(cdc_trf_state == 3)
 19924  005B74  0E03               	movlw	3
 19925  005B76  0100               	movlb	0	; () banked
 19926  005B78  19CB               	xorwf	_cdc_trf_state& (0+255),w,b
 19927  005B7A  A4D8               	btfss	status,2,c
 19928  005B7C  D002               	goto	l528
 19929                           
 19930                           ; BSR set to: 0
 19931                           ;mcc_generated_files/usb/usb_device_cdc.c: 875:         cdc_trf_state = 0;
 19932  005B7E  0E00               	movlw	0
 19933  005B80  6FCB               	movwf	_cdc_trf_state& (0+255),b
 19934  005B82                     l528:
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;mcc_generated_files/usb/usb_device_cdc.c: 880:     if(cdc_trf_state == 0)
 19938  005B82  51CB               	movf	_cdc_trf_state& (0+255),w,b
 19939  005B84  A4D8               	btfss	status,2,c
 19940  005B86  D002               	goto	l15421
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;mcc_generated_files/usb/usb_device_cdc.c: 881:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 882:         {PIE3bits.USBIE = 1;};
 19944  005B88  84A3               	bsf	163,2,c	;volatile
 19945                           
 19946                           ;mcc_generated_files/usb/usb_device_cdc.c: 883:         return;
 19947  005B8A  0012               	return	
 19948  005B8C                     l15421:
 19949                           
 19950                           ; BSR set to: 0
 19951                           ;mcc_generated_files/usb/usb_device_cdc.c: 889:     if(cdc_trf_state == 2)
 19952  005B8C  0E02               	movlw	2
 19953  005B8E  19CB               	xorwf	_cdc_trf_state& (0+255),w,b
 19954  005B90  A4D8               	btfss	status,2,c
 19955  005B92  D012               	goto	l15427
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;mcc_generated_files/usb/usb_device_cdc.c: 890:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 891:         CDCDataInHandle = USBTransferOnePacket(2,1,((void*)0),0);
 19959  005B94  0E01               	movlw	1
 19960  005B96  6F8C               	movwf	USBTransferOnePacket@dir& (0+255),b
 19961  005B98  0E00               	movlw	0
 19962  005B9A  6F8D               	movwf	USBTransferOnePacket@data& (0+255),b
 19963  005B9C  0E00               	movlw	0
 19964  005B9E  6F8E               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 19965  005BA0  0E00               	movlw	0
 19966  005BA2  6F8F               	movwf	USBTransferOnePacket@len& (0+255),b
 19967  005BA4  0E02               	movlw	2
 19968  005BA6  EC4B  F02F         	call	_USBTransferOnePacket
 19969  005BAA  C08C  F2E0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 19970  005BAE  C08D  F2E1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;mcc_generated_files/usb/usb_device_cdc.c: 893:         cdc_trf_state = 3;
 19974  005BB2  0E03               	movlw	3
 19975  005BB4  6FCB               	movwf	_cdc_trf_state& (0+255),b
 19976                           
 19977                           ;mcc_generated_files/usb/usb_device_cdc.c: 894:     }
 19978  005BB6  D05F               	goto	l15471
 19979  005BB8                     l15427:
 19980                           
 19981                           ; BSR set to: 0
 19982  005BB8  05CB               	decf	_cdc_trf_state& (0+255),w,b
 19983  005BBA  A4D8               	btfss	status,2,c
 19984  005BBC  D05C               	goto	l15471
 19985                           
 19986                           ; BSR set to: 0
 19987                           ;mcc_generated_files/usb/usb_device_cdc.c: 896:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 900:      if(cdc_tx_len > sizeof(cdc_data_tx))
 19988  005BBE  0E40               	movlw	64
 19989  005BC0  65CA               	cpfsgt	_cdc_tx_len& (0+255),b
 19990  005BC2  D003               	goto	l533
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;mcc_generated_files/usb/usb_device_cdc.c: 901:          byte_to_send = sizeof(cdc_data_
      +                          tx);
 19994  005BC4  0E40               	movlw	64
 19995  005BC6  6F96               	movwf	CDCTxService@byte_to_send& (0+255),b
 19996  005BC8  D002               	goto	l15433
 19997  005BCA                     l533:
 19998                           
 19999                           ; BSR set to: 0
 20000                           ;mcc_generated_files/usb/usb_device_cdc.c: 903:          byte_to_send = cdc_tx_len;
 20001  005BCA  C0CA  F096         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 20002  005BCE                     l15433:
 20003                           
 20004                           ; BSR set to: 0
 20005                           ;mcc_generated_files/usb/usb_device_cdc.c: 908:      cdc_tx_len = cdc_tx_len - byte_to_s
      +                          end;
 20006  005BCE  5196               	movf	CDCTxService@byte_to_send& (0+255),w,b
 20007  005BD0  5DCA               	subwf	_cdc_tx_len& (0+255),w,b
 20008  005BD2  6FCA               	movwf	_cdc_tx_len& (0+255),b
 20009                           
 20010                           ;mcc_generated_files/usb/usb_device_cdc.c: 910:         pCDCDst.bRam = (uint8_t*)&cdc_da
      +                          ta_tx;
 20011  005BD4  0E00               	movlw	0
 20012  005BD6  0102               	movlb	2	; () banked
 20013  005BD8  6FC8               	movwf	_pCDCDst& (0+255),b
 20014  005BDA  0E05               	movlw	5
 20015  005BDC  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 20016                           
 20017                           ; BSR set to: 2
 20018                           ;mcc_generated_files/usb/usb_device_cdc.c: 912:         i = byte_to_send;
 20019  005BDE  C096  F095         	movff	CDCTxService@byte_to_send,CDCTxService@i
 20020                           
 20021                           ; BSR set to: 2
 20022                           ;mcc_generated_files/usb/usb_device_cdc.c: 913:         if(cdc_mem_type == 0x00)
 20023  005BE2  0101               	movlb	1	; () banked
 20024  005BE4  51DA               	movf	_cdc_mem_type& (0+255),w,b
 20025  005BE6  B4D8               	btfsc	status,2,c
 20026  005BE8  D012               	goto	l15449
 20027  005BEA  D027               	goto	l15459
 20028  005BEC                     l15441:
 20029                           
 20030                           ; BSR set to: 0
 20031                           ;mcc_generated_files/usb/usb_device_cdc.c: 916:             {;mcc_generated_files/usb/us
      +                          b_device_cdc.c: 917:                 *pCDCDst.bRam = *pCDCSrc.bRom;
 20032  005BEC  C2CB  FFD9         	movff	_pCDCSrc,fsr2l
 20033  005BF0  C2CC  FFDA         	movff	_pCDCSrc+1,fsr2h
 20034  005BF4  C2C8  FFE1         	movff	_pCDCDst,fsr1l
 20035  005BF8  C2C9  FFE2         	movff	_pCDCDst+1,fsr1h
 20036  005BFC  CFDF FFE7          	movff	indf2,indf1
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;mcc_generated_files/usb/usb_device_cdc.c: 918:                 pCDCDst.bRam++;
 20040  005C00  0102               	movlb	2	; () banked
 20041  005C02  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 20042  005C04  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 20043                           
 20044                           ; BSR set to: 2
 20045                           ;mcc_generated_files/usb/usb_device_cdc.c: 919:                 pCDCSrc.bRom++;
 20046  005C06  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 20047  005C08  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 20048                           
 20049                           ; BSR set to: 2
 20050                           ;mcc_generated_files/usb/usb_device_cdc.c: 920:                 i--;
 20051  005C0A  0100               	movlb	0	; () banked
 20052  005C0C  0795               	decf	CDCTxService@i& (0+255),f,b
 20053  005C0E                     l15449:
 20054                           
 20055                           ;mcc_generated_files/usb/usb_device_cdc.c: 915:             while(i)
 20056  005C0E  0100               	movlb	0	; () banked
 20057  005C10  5195               	movf	CDCTxService@i& (0+255),w,b
 20058  005C12  B4D8               	btfsc	status,2,c
 20059  005C14  D016               	goto	u18900
 20060  005C16  D7EA               	goto	l15441
 20061  005C18                     l15451:
 20062                           
 20063                           ; BSR set to: 0
 20064                           ;mcc_generated_files/usb/usb_device_cdc.c: 926:             {;mcc_generated_files/usb/us
      +                          b_device_cdc.c: 927:                 *pCDCDst.bRam = *pCDCSrc.bRam;
 20065  005C18  C2CB  FFD9         	movff	_pCDCSrc,fsr2l
 20066  005C1C  C2CC  FFDA         	movff	_pCDCSrc+1,fsr2h
 20067  005C20  C2C8  FFE1         	movff	_pCDCDst,fsr1l
 20068  005C24  C2C9  FFE2         	movff	_pCDCDst+1,fsr1h
 20069  005C28  CFDF FFE7          	movff	indf2,indf1
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;mcc_generated_files/usb/usb_device_cdc.c: 928:                 pCDCDst.bRam++;
 20073  005C2C  0102               	movlb	2	; () banked
 20074  005C2E  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 20075  005C30  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 20076                           
 20077                           ; BSR set to: 2
 20078                           ;mcc_generated_files/usb/usb_device_cdc.c: 929:                 pCDCSrc.bRam++;
 20079  005C32  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 20080  005C34  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 20081                           
 20082                           ; BSR set to: 2
 20083                           ;mcc_generated_files/usb/usb_device_cdc.c: 930:                 i--;
 20084  005C36  0100               	movlb	0	; () banked
 20085  005C38  0795               	decf	CDCTxService@i& (0+255),f,b
 20086  005C3A                     l15459:
 20087                           
 20088                           ;mcc_generated_files/usb/usb_device_cdc.c: 925:             while(i)
 20089  005C3A  0100               	movlb	0	; () banked
 20090  005C3C  5195               	movf	CDCTxService@i& (0+255),w,b
 20091  005C3E  A4D8               	btfss	status,2,c
 20092  005C40  D7EB               	goto	l15451
 20093  005C42                     u18900:
 20094                           
 20095                           ; BSR set to: 0
 20096                           ;mcc_generated_files/usb/usb_device_cdc.c: 938:         if(cdc_tx_len == 0)
 20097  005C42  51CA               	movf	_cdc_tx_len& (0+255),w,b
 20098  005C44  A4D8               	btfss	status,2,c
 20099  005C46  D008               	goto	l15469
 20100                           
 20101                           ; BSR set to: 0
 20102                           ;mcc_generated_files/usb/usb_device_cdc.c: 939:         {;mcc_generated_files/usb/usb_de
      +                          vice_cdc.c: 940:             if(byte_to_send == 64)
 20103  005C48  0E40               	movlw	64
 20104  005C4A  1996               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 20105  005C4C  A4D8               	btfss	status,2,c
 20106  005C4E  D002               	goto	l15467
 20107                           
 20108                           ; BSR set to: 0
 20109                           ;mcc_generated_files/usb/usb_device_cdc.c: 941:                 cdc_trf_state = 2;
 20110  005C50  0E02               	movlw	2
 20111  005C52  D001               	goto	L20
 20112  005C54                     l15467:
 20113                           
 20114                           ; BSR set to: 0
 20115                           ;mcc_generated_files/usb/usb_device_cdc.c: 943:                 cdc_trf_state = 3;
 20116  005C54  0E03               	movlw	3
 20117  005C56                     L20:
 20118  005C56  6FCB               	movwf	_cdc_trf_state& (0+255),b
 20119  005C58                     l15469:
 20120                           
 20121                           ; BSR set to: 0
 20122                           ;mcc_generated_files/usb/usb_device_cdc.c: 945:         CDCDataInHandle = USBTransferOne
      +                          Packet(2,1,(uint8_t*)&cdc_data_tx,byte_to_send);
 20123  005C58  0E01               	movlw	1
 20124  005C5A  6F8C               	movwf	USBTransferOnePacket@dir& (0+255),b
 20125  005C5C  0E00               	movlw	0
 20126  005C5E  6F8D               	movwf	USBTransferOnePacket@data& (0+255),b
 20127  005C60  0E05               	movlw	5
 20128  005C62  6F8E               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20129  005C64  C096  F08F         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 20130  005C68  0E02               	movlw	2
 20131  005C6A  EC4B  F02F         	call	_USBTransferOnePacket
 20132  005C6E  C08C  F2E0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 20133  005C72  C08D  F2E1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 20134  005C76                     l15471:
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;mcc_generated_files/usb/usb_device_cdc.c: 949:     {PIE3bits.USBIE = 1;};
 20138  005C76  84A3               	bsf	163,2,c	;volatile
 20139  005C78  0012               	return		;funcret
 20140  005C7A                     __end_of_CDCTxService:
 20141                           	callstack 0
 20142                           
 20143 ;; *************** function _USBTransferOnePacket *****************
 20144 ;; Defined at:
 20145 ;;		line 999 in file "mcc_generated_files/usb/usb_device.c"
 20146 ;; Parameters:    Size  Location     Type
 20147 ;;  ep              1    wreg     unsigned char 
 20148 ;;  dir             1   44[BANK0 ] unsigned char 
 20149 ;;  data            2   45[BANK0 ] PTR unsigned char 
 20150 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 20151 ;;  len             1   47[BANK0 ] unsigned char 
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;  ep              1   50[BANK0 ] unsigned char 
 20154 ;;  handle          2   51[BANK0 ] PTR volatile struct __BD
 20155 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 20156 ;; Return value:  Size  Location     Type
 20157 ;;                  2   44[BANK0 ] PTR void 
 20158 ;; Registers used:
 20159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20160 ;; Tracked objects:
 20161 ;;		On entry : 3F/0
 20162 ;;		On exit  : 3F/0
 20163 ;;		Unchanged: 0/0
 20164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20165 ;;      Params:         0       4       0       0       0       0       0       0       0
 20166 ;;      Locals:         0       3       0       0       0       0       0       0       0
 20167 ;;      Temps:          0       2       0       0       0       0       0       0       0
 20168 ;;      Totals:         0       9       0       0       0       0       0       0       0
 20169 ;;Total ram usage:        9 bytes
 20170 ;; Hardware stack levels used: 1
 20171 ;; Hardware stack levels required when called: 10
 20172 ;; This function calls:
 20173 ;;		Nothing
 20174 ;; This function is called by:
 20175 ;;		_getsUSBUSART
 20176 ;;		_CDCTxService
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text102
 20181  005E96                     __ptext102:
 20182                           	callstack 0
 20183  005E96                     _USBTransferOnePacket:
 20184                           	callstack 17
 20185                           
 20186                           ;incstack = 0
 20187                           ;USBTransferOnePacket@ep stored from wreg
 20188  005E96  6F92               	movwf	USBTransferOnePacket@ep& (0+255),b
 20189                           
 20190                           ;mcc_generated_files/usb/usb_device.c: 999: void* USBTransferOnePacket(uint8_t ep,uint8_
      +                          t dir,uint8_t* data,uint8_t len);mcc_generated_files/usb/usb_device.c: 1000: {;mcc_gener
      +                          ated_files/usb/usb_device.c: 1001:     volatile BDT_ENTRY* handle;;mcc_generated_files/u
      +                          sb/usb_device.c: 1004:     if(dir != 0)
 20191  005E98  0100               	movlb	0	; () banked
 20192  005E9A  518C               	movf	USBTransferOnePacket@dir& (0+255),w,b
 20193  005E9C  B4D8               	btfsc	status,2,c
 20194  005E9E  D007               	goto	l14129
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;mcc_generated_files/usb/usb_device.c: 1005:     {;mcc_generated_files/usb/usb_device.c:
      +                           1007:         handle = pBDTEntryIn[ep];
 20198  005EA0  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20199  005EA2  0D02               	mullw	2
 20200  005EA4  50F3               	movf	243,w,c
 20201  005EA6  0FB6               	addlw	low _pBDTEntryIn
 20202  005EA8  6ED9               	movwf	fsr2l,c
 20203  005EAA  6ADA               	clrf	fsr2h,c
 20204  005EAC  D008               	goto	L21
 20205  005EAE                     l14129:
 20206                           
 20207                           ; BSR set to: 0
 20208                           ;mcc_generated_files/usb/usb_device.c: 1010:     {;mcc_generated_files/usb/usb_device.c:
      +                           1012:         handle = pBDTEntryOut[ep];
 20209  005EAE  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20210  005EB0  0D02               	mullw	2
 20211  005EB2  0EAE               	movlw	low _pBDTEntryOut
 20212  005EB4  24F3               	addwf	243,w,c
 20213  005EB6  6ED9               	movwf	fsr2l,c
 20214  005EB8  0E02               	movlw	high _pBDTEntryOut
 20215  005EBA  20F4               	addwfc	prodh,w,c
 20216  005EBC  6EDA               	movwf	fsr2h,c
 20217  005EBE                     L21:
 20218  005EBE  CFDE F093          	movff	postinc2,USBTransferOnePacket@handle
 20219  005EC2  CFDD F094          	movff	postdec2,USBTransferOnePacket@handle+1
 20220                           
 20221                           ; BSR set to: 0
 20222                           ;mcc_generated_files/usb/usb_device.c: 1017:     if(handle == 0)
 20223  005EC6  5193               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20224  005EC8  1194               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20225  005ECA  A4D8               	btfss	status,2,c
 20226  005ECC  D005               	goto	l14137
 20227                           
 20228                           ; BSR set to: 0
 20229                           ;mcc_generated_files/usb/usb_device.c: 1018:     {;mcc_generated_files/usb/usb_device.c:
      +                           1019:         return 0;
 20230  005ECE  0E00               	movlw	0
 20231  005ED0  6F8C               	movwf	?_USBTransferOnePacket& (0+255),b
 20232  005ED2  0E00               	movlw	0
 20233  005ED4  6F8D               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 20234  005ED6  0012               	return	
 20235  005ED8                     l14137:
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;mcc_generated_files/usb/usb_device.c: 1033:     handle->ADR = ((uint16_t)(data));
 20239  005ED8  EE20 F002          	lfsr	2,2
 20240  005EDC  5193               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20241  005EDE  26D9               	addwf	fsr2l,f,c
 20242  005EE0  5194               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20243  005EE2  22DA               	addwfc	fsr2h,f,c
 20244  005EE4  C08D  FFDE         	movff	USBTransferOnePacket@data,postinc2
 20245  005EE8  C08E  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 20246                           
 20247                           ;mcc_generated_files/usb/usb_device.c: 1034:     handle->CNT = len;
 20248  005EEC  EE20 F001          	lfsr	2,1
 20249  005EF0  5193               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20250  005EF2  26D9               	addwf	fsr2l,f,c
 20251  005EF4  5194               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20252  005EF6  22DA               	addwfc	fsr2h,f,c
 20253  005EF8  C08F  FFDF         	movff	USBTransferOnePacket@len,indf2
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;mcc_generated_files/usb/usb_device.c: 1035:     handle->STAT.Val &= 0x40;
 20257  005EFC  C093  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20258  005F00  C094  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20259  005F04  0E40               	movlw	64
 20260  005F06  16DF               	andwf	indf2,f,c
 20261                           
 20262                           ; BSR set to: 0
 20263                           ;mcc_generated_files/usb/usb_device.c: 1036:     handle->STAT.Val |= (0x08 & 0x08);
 20264  005F08  C093  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20265  005F0C  C094  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20266  005F10  0E00               	movlw	0
 20267  005F12  86DB               	bsf	plusw2,3,c
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;mcc_generated_files/usb/usb_device.c: 1037:     handle->STAT.Val |= 0x80;
 20271  005F14  C093  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20272  005F18  C094  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20273  005F1C  0E00               	movlw	0
 20274  005F1E  8EDB               	bsf	plusw2,7,c
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;mcc_generated_files/usb/usb_device.c: 1040:     if(dir != 0)
 20278  005F20  518C               	movf	USBTransferOnePacket@dir& (0+255),w,b
 20279  005F22  B4D8               	btfsc	status,2,c
 20280  005F24  D015               	goto	l14149
 20281                           
 20282                           ; BSR set to: 0
 20283                           ;mcc_generated_files/usb/usb_device.c: 1041:     {;mcc_generated_files/usb/usb_device.c:
      +                           1043:         pBDTEntryIn[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryIn[ep]) ^ 0x0004);
 20284  005F26  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20285  005F28  0D02               	mullw	2
 20286  005F2A  50F3               	movf	243,w,c
 20287  005F2C  0FB6               	addlw	low _pBDTEntryIn
 20288  005F2E  6ED9               	movwf	fsr2l,c
 20289  005F30  6ADA               	clrf	fsr2h,c
 20290  005F32  CFDE F090          	movff	postinc2,??_USBTransferOnePacket
 20291  005F36  CFDD F091          	movff	postdec2,??_USBTransferOnePacket+1
 20292  005F3A  0E04               	movlw	4
 20293  005F3C  1B90               	xorwf	??_USBTransferOnePacket& (0+255),f,b
 20294  005F3E  0E00               	movlw	0
 20295  005F40  1B91               	xorwf	(??_USBTransferOnePacket+1)& (0+255),f,b
 20296  005F42  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20297  005F44  0D02               	mullw	2
 20298  005F46  50F3               	movf	243,w,c
 20299  005F48  0FB6               	addlw	low _pBDTEntryIn
 20300  005F4A  6ED9               	movwf	fsr2l,c
 20301  005F4C  6ADA               	clrf	fsr2h,c
 20302  005F4E  D018               	goto	L22
 20303  005F50                     l14149:
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;mcc_generated_files/usb/usb_device.c: 1046:     {;mcc_generated_files/usb/usb_device.c:
      +                           1048:         pBDTEntryOut[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryOut[ep]) ^ 0x0004);
 20307  005F50  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20308  005F52  0D02               	mullw	2
 20309  005F54  0EAE               	movlw	low _pBDTEntryOut
 20310  005F56  24F3               	addwf	243,w,c
 20311  005F58  6ED9               	movwf	fsr2l,c
 20312  005F5A  0E02               	movlw	high _pBDTEntryOut
 20313  005F5C  20F4               	addwfc	prodh,w,c
 20314  005F5E  6EDA               	movwf	fsr2h,c
 20315  005F60  CFDE F090          	movff	postinc2,??_USBTransferOnePacket
 20316  005F64  CFDD F091          	movff	postdec2,??_USBTransferOnePacket+1
 20317  005F68  0E04               	movlw	4
 20318  005F6A  1B90               	xorwf	??_USBTransferOnePacket& (0+255),f,b
 20319  005F6C  0E00               	movlw	0
 20320  005F6E  1B91               	xorwf	(??_USBTransferOnePacket+1)& (0+255),f,b
 20321  005F70  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20322  005F72  0D02               	mullw	2
 20323  005F74  0EAE               	movlw	low _pBDTEntryOut
 20324  005F76  24F3               	addwf	243,w,c
 20325  005F78  6ED9               	movwf	fsr2l,c
 20326  005F7A  0E02               	movlw	high _pBDTEntryOut
 20327  005F7C  20F4               	addwfc	prodh,w,c
 20328  005F7E  6EDA               	movwf	fsr2h,c
 20329  005F80                     L22:
 20330  005F80  C090  FFDE         	movff	??_USBTransferOnePacket,postinc2
 20331  005F84  C091  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;mcc_generated_files/usb/usb_device.c: 1050:     return (void*)handle;
 20335  005F88  C093  F08C         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 20336  005F8C  C094  F08D         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 20337                           
 20338                           ; BSR set to: 0
 20339  005F90  0012               	return		;funcret
 20340  005F92                     __end_of_USBTransferOnePacket:
 20341                           	callstack 0
 20342                           
 20343 ;; *************** function _INTERRUPT_InterruptManager *****************
 20344 ;; Defined at:
 20345 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 20346 ;; Parameters:    Size  Location     Type
 20347 ;;		None
 20348 ;; Auto vars:     Size  Location     Type
 20349 ;;		None
 20350 ;; Return value:  Size  Location     Type
 20351 ;;                  1    wreg      void 
 20352 ;; Registers used:
 20353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20354 ;; Tracked objects:
 20355 ;;		On entry : 0/0
 20356 ;;		On exit  : 0/0
 20357 ;;		Unchanged: 0/0
 20358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20359 ;;      Params:         0       0       0       0       0       0       0       0       0
 20360 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20361 ;;      Temps:          0      12       0       0       0       0       0       0       0
 20362 ;;      Totals:         0      12       0       0       0       0       0       0       0
 20363 ;;Total ram usage:       12 bytes
 20364 ;; Hardware stack levels used: 1
 20365 ;; Hardware stack levels required when called: 9
 20366 ;; This function calls:
 20367 ;;		_PIN_MANAGER_IOC
 20368 ;;		_TMR0_ISR
 20369 ;;		_TMR2_ISR
 20370 ;;		_TMR3_ISR
 20371 ;;		_USBDeviceTasks
 20372 ;; This function is called by:
 20373 ;;		Interrupt level 2
 20374 ;; This function uses a non-reentrant model
 20375 ;;
 20376                           
 20377                           	psect	intcode
 20378  000008                     __pintcode:
 20379                           	callstack 0
 20380  000008                     _INTERRUPT_InterruptManager:
 20381                           	callstack 12
 20382                           
 20383                           ; BSR set to: 0
 20384                           ;incstack = 0
 20385  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20386  00000A  CFFA F080          	movff	pclath,??_INTERRUPT_InterruptManager
 20387  00000E  CFFB F081          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 20388  000012  CFE1 F082          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 20389  000016  CFE2 F083          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 20390  00001A  CFD9 F084          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 20391  00001E  CFDA F085          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 20392  000022  CFF3 F086          	movff	prodl,??_INTERRUPT_InterruptManager+6
 20393  000026  CFF4 F087          	movff	prodh,??_INTERRUPT_InterruptManager+7
 20394  00002A  CFF6 F088          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 20395  00002E  CFF7 F089          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 20396  000032  CFF8 F08A          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 20397  000036  CFF5 F08B          	movff	tablat,??_INTERRUPT_InterruptManager+11
 20398                           
 20399                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 20400  00003A  BAF2               	btfsc	242,5,c	;volatile
 20401  00003C  A4F2               	btfss	242,2,c	;volatile
 20402  00003E  D003               	goto	i2l579
 20403                           
 20404                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 20405  000040  EC71  F001         	call	_TMR0_ISR	;wreg free
 20406                           
 20407                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 20408  000044  D019               	goto	i2l585
 20409  000046                     i2l579:
 20410  000046  B6F2               	btfsc	242,3,c	;volatile
 20411  000048  A0F2               	btfss	242,0,c	;volatile
 20412  00004A  D003               	goto	i2l581
 20413                           
 20414                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 20415  00004C  ECE4  F002         	call	_PIN_MANAGER_IOC	;wreg free
 20416                           
 20417                           ;mcc_generated_files/interrupt_manager.c: 68:     }
 20418  000050  D013               	goto	i2l585
 20419  000052                     i2l581:
 20420  000052  ACF2               	btfss	242,6,c	;volatile
 20421  000054  D011               	goto	i2l585
 20422                           
 20423                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE3bits.USBIE == 1 && PIR3bits.USBIF == 1)
 20424  000056  B4A3               	btfsc	163,2,c	;volatile
 20425  000058  A4A4               	btfss	164,2,c	;volatile
 20426  00005A  D003               	goto	i2l584
 20427                           
 20428                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             USBDeviceTasks();
 20429  00005C  EC86  F02C         	call	_USBDeviceTasks	;wreg free
 20430                           
 20431                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 20432  000060  D00B               	goto	i2l585
 20433  000062                     i2l584:
 20434  000062  B2A0               	btfsc	160,1,c	;volatile
 20435  000064  A2A1               	btfss	161,1,c	;volatile
 20436  000066  D003               	goto	i2l586
 20437                           
 20438                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR3_ISR();
 20439  000068  ECA2  F000         	call	_TMR3_ISR	;wreg free
 20440                           
 20441                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 20442  00006C  D005               	goto	i2l585
 20443  00006E                     i2l586:
 20444  00006E  B29D               	btfsc	157,1,c	;volatile
 20445  000070  A29E               	btfss	158,1,c	;volatile
 20446  000072  D002               	goto	i2l585
 20447                           
 20448                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 20449  000074  ECE7  F001         	call	_TMR2_ISR	;wreg free
 20450  000078                     i2l585:
 20451                           
 20452                           ;mcc_generated_files/interrupt_manager.c: 87:     }
 20453  000078  C08B  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 20454  00007C  C08A  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 20455  000080  C089  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 20456  000084  C088  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 20457  000088  C087  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 20458  00008C  C086  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 20459  000090  C085  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 20460  000094  C084  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 20461  000098  C083  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 20462  00009C  C082  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 20463  0000A0  C081  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 20464  0000A4  C080  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 20465  0000A8  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20466  0000AA  0011               	retfie		f
 20467  0000AC                     __end_of_INTERRUPT_InterruptManager:
 20468                           	callstack 0
 20469                           
 20470 ;; *************** function _USBDeviceTasks *****************
 20471 ;; Defined at:
 20472 ;;		line 481 in file "mcc_generated_files/usb/usb_device.c"
 20473 ;; Parameters:    Size  Location     Type
 20474 ;;		None
 20475 ;; Auto vars:     Size  Location     Type
 20476 ;;  i               1   30[COMRAM] unsigned char 
 20477 ;; Return value:  Size  Location     Type
 20478 ;;                  1    wreg      void 
 20479 ;; Registers used:
 20480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20481 ;; Tracked objects:
 20482 ;;		On entry : 0/0
 20483 ;;		On exit  : 0/0
 20484 ;;		Unchanged: 0/0
 20485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20486 ;;      Params:         0       0       0       0       0       0       0       0       0
 20487 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20489 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20490 ;;Total ram usage:        1 bytes
 20491 ;; Hardware stack levels used: 1
 20492 ;; Hardware stack levels required when called: 8
 20493 ;; This function calls:
 20494 ;;		_USBCtrlEPAllowStatusStage
 20495 ;;		_USBCtrlEPService
 20496 ;;		_USBIncrement1msInternalTimers
 20497 ;;		_USBStallHandler
 20498 ;;		_USBSuspend
 20499 ;;		_USBWakeFromSuspend
 20500 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20501 ;;		i2_USBDeviceInit
 20502 ;; This function is called by:
 20503 ;;		_INTERRUPT_InterruptManager
 20504 ;; This function uses a non-reentrant model
 20505 ;;
 20506                           
 20507                           	psect	text104
 20508  00590C                     __ptext104:
 20509                           	callstack 0
 20510  00590C                     _USBDeviceTasks:
 20511                           	callstack 12
 20512                           
 20513                           ;mcc_generated_files/usb/usb_device.c: 483:     uint8_t i;;mcc_generated_files/usb/usb_d
      +                          evice.c: 594:     if(USBDeviceState == ATTACHED_STATE)
 20514                           
 20515                           ;incstack = 0
 20516  00590C  045D               	decf	_USBDeviceState^0,w,c
 20517  00590E  B4D8               	btfsc	status,2,c
 20518                           
 20519                           ;mcc_generated_files/usb/usb_device.c: 595:     {;mcc_generated_files/usb/usb_device.c: 
      +                          605:         if(!UCONbits.SE0)
 20520  005910  BA60               	btfsc	96,5,c	;volatile
 20521  005912  D006               	goto	i2l15315
 20522                           
 20523                           ;mcc_generated_files/usb/usb_device.c: 606:         {;mcc_generated_files/usb/usb_device
      +                          .c: 612:                 {UIR = 0;};
 20524  005914  0E00               	movlw	0
 20525  005916  6E65               	movwf	101,c	;volatile
 20526                           
 20527                           ;mcc_generated_files/usb/usb_device.c: 618:             UIEbits.URSTIE = 1;
 20528  005918  8064               	bsf	100,0,c	;volatile
 20529                           
 20530                           ;mcc_generated_files/usb/usb_device.c: 619:             UIEbits.IDLEIE = 1;
 20531  00591A  8864               	bsf	100,4,c	;volatile
 20532                           
 20533                           ;mcc_generated_files/usb/usb_device.c: 620:             USBDeviceState = POWERED_STATE;
 20534  00591C  0E02               	movlw	2
 20535  00591E  6E5D               	movwf	_USBDeviceState^0,c	;volatile
 20536  005920                     i2l15315:
 20537                           
 20538                           ;mcc_generated_files/usb/usb_device.c: 638:     if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 20539  005920  B465               	btfsc	101,2,c	;volatile
 20540  005922  A464               	btfss	100,2,c	;volatile
 20541  005924  D003               	goto	i2l15323
 20542                           
 20543                           ;mcc_generated_files/usb/usb_device.c: 639:     {;mcc_generated_files/usb/usb_device.c: 
      +                          640:         (UIR &= 0xFB);
 20544  005926  9465               	bcf	101,2,c	;volatile
 20545                           
 20546                           ;mcc_generated_files/usb/usb_device.c: 644:             USBWakeFromSuspend();
 20547  005928  ECA3  F03F         	call	_USBWakeFromSuspend	;wreg free
 20548  00592C                     i2l15323:
 20549                           
 20550                           ;mcc_generated_files/usb/usb_device.c: 651:     if(UCONbits.SUSPND==1)
 20551  00592C  A260               	btfss	96,1,c	;volatile
 20552  00592E  D002               	goto	i2l147
 20553                           
 20554                           ;mcc_generated_files/usb/usb_device.c: 652:     {;mcc_generated_files/usb/usb_device.c: 
      +                          653:         PIR3bits.USBIF = 0;;
 20555  005930  94A4               	bcf	164,2,c	;volatile
 20556                           
 20557                           ;mcc_generated_files/usb/usb_device.c: 654:         return;
 20558  005932  0012               	return	
 20559  005934                     i2l147:
 20560                           
 20561                           ;mcc_generated_files/usb/usb_device.c: 667:     if(UIRbits.URSTIF && UIEbits.URSTIE)
 20562  005934  B065               	btfsc	101,0,c	;volatile
 20563  005936  A064               	btfss	100,0,c	;volatile
 20564  005938  D006               	goto	i2l15337
 20565                           
 20566                           ;mcc_generated_files/usb/usb_device.c: 668:     {;mcc_generated_files/usb/usb_device.c: 
      +                          669:         USBDeviceInit();
 20567  00593A  EC57  F02B         	call	i2_USBDeviceInit	;wreg free
 20568                           
 20569                           ; BSR set to: 1
 20570                           ;mcc_generated_files/usb/usb_device.c: 673:         {PIE3bits.USBIE = 1;};
 20571  00593E  84A3               	bsf	163,2,c	;volatile
 20572                           
 20573                           ; BSR set to: 1
 20574                           ;mcc_generated_files/usb/usb_device.c: 675:         USBDeviceState = DEFAULT_STATE;
 20575  005940  0E04               	movlw	4
 20576  005942  6E5D               	movwf	_USBDeviceState^0,c	;volatile
 20577                           
 20578                           ; BSR set to: 1
 20579                           ;mcc_generated_files/usb/usb_device.c: 685:         (UIR &= 0xFE);
 20580  005944  9065               	bcf	101,0,c	;volatile
 20581  005946                     i2l15337:
 20582                           
 20583                           ;mcc_generated_files/usb/usb_device.c: 691:     if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 20584  005946  B865               	btfsc	101,4,c	;volatile
 20585  005948  A864               	btfss	100,4,c	;volatile
 20586  00594A  D002               	goto	i2l15343
 20587                           
 20588                           ;mcc_generated_files/usb/usb_device.c: 692:     {;mcc_generated_files/usb/usb_device.c: 
      +                          698:             USBSuspend();
 20589  00594C  EC2E  F001         	call	_USBSuspend	;wreg free
 20590  005950                     i2l15343:
 20591                           
 20592                           ;mcc_generated_files/usb/usb_device.c: 712:     if(UIRbits.SOFIF)
 20593  005950  AC65               	btfss	101,6,c	;volatile
 20594  005952  D01B               	goto	i2l15361
 20595                           
 20596                           ;mcc_generated_files/usb/usb_device.c: 713:     {;mcc_generated_files/usb/usb_device.c: 
      +                          715:         if(UIEbits.SOFIE)
 20597  005954  AC64               	btfss	100,6,c	;volatile
 20598  005956  D00E               	goto	i2l15349
 20599                           
 20600                           ;mcc_generated_files/usb/usb_device.c: 716:         {;mcc_generated_files/usb/usb_device
      +                          .c: 717:             USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SOF,0,1);
 20601  005958  0E00               	movlw	0
 20602  00595A  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 20603  00595C  0E73               	movlw	115
 20604  00595E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 20605  005960  0E00               	movlw	0
 20606  005962  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 20607  005964  0E00               	movlw	0
 20608  005966  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 20609  005968  0E00               	movlw	0
 20610  00596A  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 20611  00596C  0E01               	movlw	1
 20612  00596E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 20613  005970  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20614  005974                     i2l15349:
 20615                           
 20616                           ;mcc_generated_files/usb/usb_device.c: 719:         (UIR &= 0xBF);
 20617  005974  9C65               	bcf	101,6,c	;volatile
 20618                           
 20619                           ;mcc_generated_files/usb/usb_device.c: 722:             USBIncrement1msInternalTimers();
 20620  005976  EC1B  F002         	call	_USBIncrement1msInternalTimers	;wreg free
 20621                           
 20622                           ; BSR set to: 1
 20623                           ;mcc_generated_files/usb/usb_device.c: 739:             if(USBStatusStageTimeoutCounter 
      +                          != 0u)
 20624  00597A  0100               	movlb	0	; () banked
 20625  00597C  51CE               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 20626  00597E  A4D8               	btfss	status,2,c
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;mcc_generated_files/usb/usb_device.c: 740:             {;mcc_generated_files/usb/usb_de
      +                          vice.c: 741:                 USBStatusStageTimeoutCounter--;
 20630  005980  07CE               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 20631                           
 20632                           ; BSR set to: 0
 20633                           ;mcc_generated_files/usb/usb_device.c: 748:             if(USBStatusStageTimeoutCounter 
      +                          == 0)
 20634  005982  51CE               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 20635  005984  B4D8               	btfsc	status,2,c
 20636                           
 20637                           ; BSR set to: 0
 20638                           ;mcc_generated_files/usb/usb_device.c: 749:             {;mcc_generated_files/usb/usb_de
      +                          vice.c: 750:                 USBCtrlEPAllowStatusStage();
 20639  005986  EC85  F034         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20640  00598A                     i2l15361:
 20641                           
 20642                           ;mcc_generated_files/usb/usb_device.c: 755:     if(UIRbits.STALLIF && UIEbits.STALLIE)
 20643  00598A  BA65               	btfsc	101,5,c	;volatile
 20644  00598C  AA64               	btfss	100,5,c	;volatile
 20645  00598E  D002               	goto	i2l15367
 20646                           
 20647                           ;mcc_generated_files/usb/usb_device.c: 756:     {;mcc_generated_files/usb/usb_device.c: 
      +                          757:         USBStallHandler();
 20648  005990  EC77  F03E         	call	_USBStallHandler	;wreg free
 20649  005994                     i2l15367:
 20650                           
 20651                           ;mcc_generated_files/usb/usb_device.c: 760:     if(UIRbits.UERRIF && UIEbits.UERRIE)
 20652  005994  B265               	btfsc	101,1,c	;volatile
 20653  005996  A264               	btfss	100,1,c	;volatile
 20654  005998  D00F               	goto	i2l15375
 20655                           
 20656                           ;mcc_generated_files/usb/usb_device.c: 761:     {;mcc_generated_files/usb/usb_device.c: 
      +                          762:         USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_BUS_ERROR,0,1);
 20657  00599A  0E7F               	movlw	127
 20658  00599C  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 20659  00599E  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 20660  0059A0  0E00               	movlw	0
 20661  0059A2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 20662  0059A4  0E00               	movlw	0
 20663  0059A6  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 20664  0059A8  0E00               	movlw	0
 20665  0059AA  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 20666  0059AC  0E01               	movlw	1
 20667  0059AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 20668  0059B0  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20669                           
 20670                           ;mcc_generated_files/usb/usb_device.c: 763:         {UEIR = 0;};
 20671  0059B4  0E00               	movlw	0
 20672  0059B6  6E67               	movwf	103,c	;volatile
 20673  0059B8                     i2l15375:
 20674                           
 20675                           ;mcc_generated_files/usb/usb_device.c: 778:     if(USBDeviceState < DEFAULT_STATE)
 20676  0059B8  0E04               	movlw	4
 20677  0059BA  605D               	cpfslt	_USBDeviceState^0,c
 20678  0059BC  D002               	goto	i2l157
 20679                           
 20680                           ;mcc_generated_files/usb/usb_device.c: 779:     {;mcc_generated_files/usb/usb_device.c: 
      +                          780:         PIR3bits.USBIF = 0;;
 20681  0059BE  94A4               	bcf	164,2,c	;volatile
 20682                           
 20683                           ;mcc_generated_files/usb/usb_device.c: 781:         return;
 20684  0059C0  0012               	return	
 20685  0059C2                     i2l157:
 20686                           
 20687                           ;mcc_generated_files/usb/usb_device.c: 787:     if(UIEbits.TRNIE)
 20688  0059C2  A664               	btfss	100,3,c	;volatile
 20689  0059C4  D035               	goto	i2u1880_40
 20690                           
 20691                           ;mcc_generated_files/usb/usb_device.c: 788:     {;mcc_generated_files/usb/usb_device.c: 
      +                          789:         for(i = 0; i < 4u; i++)
 20692  0059C6  0E00               	movlw	0
 20693  0059C8  6E1F               	movwf	USBDeviceTasks@i^0,c
 20694  0059CA                     i2l159:
 20695                           
 20696                           ;mcc_generated_files/usb/usb_device.c: 790:         {;mcc_generated_files/usb/usb_device
      +                          .c: 791:             if(UIRbits.TRNIF)
 20697  0059CA  A665               	btfss	101,3,c	;volatile
 20698  0059CC  D031               	goto	i2u1880_40
 20699                           
 20700                           ;mcc_generated_files/usb/usb_device.c: 792:             {;mcc_generated_files/usb/usb_de
      +                          vice.c: 794:                 USTATcopy.Val = USTAT;
 20701  0059CE  CF61 F05E          	movff	3937,_USTATcopy	;volatile
 20702                           
 20703                           ;mcc_generated_files/usb/usb_device.c: 795:                 endpoint_number = USTATcopy.
      +                          endpoint_number;
 20704  0059D2  305E               	rrcf	_USTATcopy^0,w,c	;volatile
 20705  0059D4  32E8               	rrcf	wreg,f,c
 20706  0059D6  32E8               	rrcf	wreg,f,c
 20707  0059D8  0B0F               	andlw	15
 20708  0059DA  0100               	movlb	0	; () banked
 20709  0059DC  6FCF               	movwf	_endpoint_number& (0+255),b	;volatile
 20710                           
 20711                           ; BSR set to: 0
 20712                           ;mcc_generated_files/usb/usb_device.c: 797:                 (UIR &= 0xF7);
 20713  0059DE  9665               	bcf	101,3,c	;volatile
 20714                           
 20715                           ; BSR set to: 0
 20716                           ;mcc_generated_files/usb/usb_device.c: 802:                 if(USTATcopy.direction == 0)
 20717  0059E0  B45E               	btfsc	_USTATcopy^0,2,c	;volatile
 20718  0059E2  D006               	goto	i2l15395
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;mcc_generated_files/usb/usb_device.c: 803:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 804:                     ep_data_out[endpoint_number].bits.ping_pong_state ^
      +                          = 1;
 20722  0059E4  0EBF               	movlw	low _ep_data_out
 20723  0059E6  25CF               	addwf	_endpoint_number& (0+255),w,b	;volatile
 20724  0059E8  6ED9               	movwf	fsr2l,c
 20725  0059EA  6ADA               	clrf	fsr2h,c
 20726  0059EC  0E01               	movlw	high _ep_data_out
 20727  0059EE  D005               	goto	L23
 20728  0059F0                     i2l15395:
 20729                           
 20730                           ; BSR set to: 0
 20731                           ;mcc_generated_files/usb/usb_device.c: 807:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 808:                     ep_data_in[endpoint_number].bits.ping_pong_state ^=
      +                           1;
 20732  0059F0  0EC2               	movlw	low _ep_data_in
 20733  0059F2  25CF               	addwf	_endpoint_number& (0+255),w,b	;volatile
 20734  0059F4  6ED9               	movwf	fsr2l,c
 20735  0059F6  6ADA               	clrf	fsr2h,c
 20736  0059F8  0E01               	movlw	high _ep_data_in
 20737  0059FA                     L23:
 20738  0059FA  22DA               	addwfc	fsr2h,f,c
 20739  0059FC  0101               	movlb	1	; () banked
 20740  0059FE  70DF               	btg	indf2,0,c
 20741                           
 20742                           ; BSR set to: 1
 20743                           ;mcc_generated_files/usb/usb_device.c: 814:                 if(endpoint_number == 0)
 20744  005A00  0100               	movlb	0	; () banked
 20745  005A02  51CF               	movf	_endpoint_number& (0+255),w,b	;volatile
 20746  005A04  A4D8               	btfss	status,2,c
 20747  005A06  D003               	goto	i2l15401
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;mcc_generated_files/usb/usb_device.c: 815:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 816:                     USBCtrlEPService();
 20751  005A08  EC00  F039         	call	_USBCtrlEPService	;wreg free
 20752                           
 20753                           ;mcc_generated_files/usb/usb_device.c: 817:                 }
 20754  005A0C  D00D               	goto	i2l15403
 20755  005A0E                     i2l15401:
 20756                           
 20757                           ; BSR set to: 0
 20758                           ;mcc_generated_files/usb/usb_device.c: 819:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 820:                     USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TR
      +                          ANSFER,(uint8_t*)&USTATcopy.Val,0);
 20759  005A0E  0E00               	movlw	0
 20760  005A10  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 20761  005A12  0E72               	movlw	114
 20762  005A14  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 20763  005A16  0E5E               	movlw	low _USTATcopy
 20764  005A18  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 20765  005A1A  6A10               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 20766  005A1C  0E00               	movlw	0
 20767  005A1E  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 20768  005A20  0E00               	movlw	0
 20769  005A22  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 20770  005A24  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20771  005A28                     i2l15403:
 20772                           
 20773                           ;mcc_generated_files/usb/usb_device.c: 827:         }
 20774  005A28  2A1F               	incf	USBDeviceTasks@i^0,f,c
 20775  005A2A  0E03               	movlw	3
 20776  005A2C  641F               	cpfsgt	USBDeviceTasks@i^0,c
 20777  005A2E  D7CD               	goto	i2l159
 20778  005A30                     i2u1880_40:
 20779                           
 20780                           ;mcc_generated_files/usb/usb_device.c: 830:     PIR3bits.USBIF = 0;;
 20781                           
 20782                           ;mcc_generated_files/usb/usb_device.c: 828:     }
 20783  005A30  94A4               	bcf	164,2,c	;volatile
 20784  005A32  0012               	return		;funcret
 20785  005A34                     __end_of_USBDeviceTasks:
 20786                           	callstack 0
 20787                           
 20788 ;; *************** function i2_USBDeviceInit *****************
 20789 ;; Defined at:
 20790 ;;		line 281 in file "mcc_generated_files/usb/usb_device.c"
 20791 ;; Parameters:    Size  Location     Type
 20792 ;;		None
 20793 ;; Auto vars:     Size  Location     Type
 20794 ;;  i               1   12[COMRAM] unsigned char 
 20795 ;; Return value:  Size  Location     Type
 20796 ;;                  1    wreg      void 
 20797 ;; Registers used:
 20798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20799 ;; Tracked objects:
 20800 ;;		On entry : 0/0
 20801 ;;		On exit  : 3F/1
 20802 ;;		Unchanged: 0/0
 20803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20804 ;;      Params:         0       0       0       0       0       0       0       0       0
 20805 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20806 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20807 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20808 ;;Total ram usage:        1 bytes
 20809 ;; Hardware stack levels used: 1
 20810 ;; Hardware stack levels required when called: 1
 20811 ;; This function calls:
 20812 ;;		i2_memset
 20813 ;; This function is called by:
 20814 ;;		_USBDeviceTasks
 20815 ;; This function uses a non-reentrant model
 20816 ;;
 20817                           
 20818                           	psect	text105
 20819  0056AE                     __ptext105:
 20820                           	callstack 0
 20821  0056AE                     i2_USBDeviceInit:
 20822                           	callstack 18
 20823                           
 20824                           ;mcc_generated_files/usb/usb_device.c: 283:     uint8_t i;;mcc_generated_files/usb/usb_d
      +                          evice.c: 285:     {PIE3bits.USBIE = 0;};
 20825                           
 20826                           ;incstack = 0
 20827  0056AE  94A3               	bcf	163,2,c	;volatile
 20828                           
 20829                           ;mcc_generated_files/usb/usb_device.c: 292:     {UEIR = 0;};
 20830  0056B0  0E00               	movlw	0
 20831  0056B2  6E67               	movwf	103,c	;volatile
 20832                           
 20833                           ;mcc_generated_files/usb/usb_device.c: 295:     {UIR = 0;};
 20834  0056B4  0E00               	movlw	0
 20835  0056B6  6E65               	movwf	101,c	;volatile
 20836                           
 20837                           ;mcc_generated_files/usb/usb_device.c: 298:     UEP0 = 0;
 20838  0056B8  0E00               	movlw	0
 20839  0056BA  6E6A               	movwf	106,c	;volatile
 20840                           
 20841                           ;mcc_generated_files/usb/usb_device.c: 300:     memset((void*)&UEP1,0x00,(2));;
 20842  0056BC  0E6B               	movlw	107
 20843  0056BE  6E01               	movwf	i2memset@dest^0,c
 20844  0056C0  0E0F               	movlw	15
 20845  0056C2  6E02               	movwf	(i2memset@dest+1)^0,c
 20846  0056C4  0E00               	movlw	0
 20847  0056C6  6E04               	movwf	(i2memset@c+1)^0,c
 20848  0056C8  0E00               	movlw	0
 20849  0056CA  6E03               	movwf	i2memset@c^0,c
 20850  0056CC  0E00               	movlw	0
 20851  0056CE  6E06               	movwf	(i2memset@n+1)^0,c
 20852  0056D0  0E02               	movlw	2
 20853  0056D2  6E05               	movwf	i2memset@n^0,c
 20854  0056D4  ECBE  F02A         	call	i2_memset	;wreg free
 20855                           
 20856                           ;mcc_generated_files/usb/usb_device.c: 302:     { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE
      +                           = 0x9F; UIE = 0x39 | 0x40 | 0x02; };
 20857  0056D8  0E16               	movlw	22
 20858  0056DA  6E62               	movwf	98,c	;volatile
 20859  0056DC  0E9F               	movlw	159
 20860  0056DE  6E66               	movwf	102,c	;volatile
 20861  0056E0  0E7B               	movlw	123
 20862  0056E2  6E64               	movwf	100,c	;volatile
 20863                           
 20864                           ;mcc_generated_files/usb/usb_device.c: 311:     for(i = 0; i < (sizeof(BDT)/sizeof(BDT_E
      +                          NTRY)); i++)
 20865  0056E4  0E00               	movlw	0
 20866  0056E6  6E0D               	movwf	i2USBDeviceInit@i^0,c
 20867  0056E8                     i2l15247:
 20868                           
 20869                           ;mcc_generated_files/usb/usb_device.c: 312:     {;mcc_generated_files/usb/usb_device.c: 
      +                          313:         BDT[i].Val = 0x00;
 20870  0056E8  500D               	movf	i2USBDeviceInit@i^0,w,c
 20871  0056EA  0D04               	mullw	4
 20872  0056EC  0E00               	movlw	0
 20873  0056EE  24F3               	addwf	243,w,c
 20874  0056F0  6ED9               	movwf	fsr2l,c
 20875  0056F2  0E04               	movlw	4
 20876  0056F4  20F4               	addwfc	prodh,w,c
 20877  0056F6  6EDA               	movwf	fsr2h,c
 20878  0056F8  6ADE               	clrf	postinc2,c
 20879  0056FA  6ADE               	clrf	postinc2,c
 20880  0056FC  6ADE               	clrf	postinc2,c
 20881  0056FE  6ADD               	clrf	postdec2,c
 20882                           
 20883                           ;mcc_generated_files/usb/usb_device.c: 314:     }
 20884  005700  2A0D               	incf	i2USBDeviceInit@i^0,f,c
 20885  005702  0E0B               	movlw	11
 20886  005704  640D               	cpfsgt	i2USBDeviceInit@i^0,c
 20887  005706  D7F0               	goto	i2l15247
 20888                           
 20889                           ;mcc_generated_files/usb/usb_device.c: 317:     UCONbits.PPBRST = 1;
 20890  005708  8C60               	bsf	96,6,c	;volatile
 20891                           
 20892                           ;mcc_generated_files/usb/usb_device.c: 320:     UADDR = 0x00;
 20893  00570A  0E00               	movlw	0
 20894  00570C  6E63               	movwf	99,c	;volatile
 20895                           
 20896                           ;mcc_generated_files/usb/usb_device.c: 323:     UCONbits.PKTDIS = 0;
 20897  00570E  9860               	bcf	96,4,c	;volatile
 20898                           
 20899                           ;mcc_generated_files/usb/usb_device.c: 326:     UCONbits.PPBRST = 0;
 20900  005710  9C60               	bcf	96,6,c	;volatile
 20901  005712                     i2l15259:
 20902                           
 20903                           ;mcc_generated_files/usb/usb_device.c: 330:     {;mcc_generated_files/usb/usb_device.c: 
      +                          331:         (UIR &= 0xF7);
 20904  005712  9665               	bcf	101,3,c	;volatile
 20905                           
 20906                           ;mcc_generated_files/usb/usb_device.c: 333:         inPipes[0].info.Val = 0;
 20907  005714  0E00               	movlw	0
 20908  005716  0100               	movlb	0	; () banked
 20909  005718  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 20910                           
 20911                           ; BSR set to: 0
 20912                           ;mcc_generated_files/usb/usb_device.c: 334:         outPipes[0].info.Val = 0;
 20913  00571A  0E00               	movlw	0
 20914  00571C  6FAB               	movwf	(_outPipes+3)& (0+255),b	;volatile
 20915                           
 20916                           ; BSR set to: 0
 20917                           ;mcc_generated_files/usb/usb_device.c: 335:         outPipes[0].wCount.Val = 0;
 20918  00571E  0E00               	movlw	0
 20919  005720  6FAD               	movwf	(_outPipes+5)& (0+255),b	;volatile
 20920  005722  0E00               	movlw	0
 20921  005724  6FAC               	movwf	(_outPipes+4)& (0+255),b	;volatile
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;mcc_generated_files/usb/usb_device.c: 336:     }while(UIRbits.TRNIF == 1);
 20925  005726  B665               	btfsc	101,3,c	;volatile
 20926  005728  D7F4               	goto	i2l15259
 20927                           
 20928                           ; BSR set to: 0
 20929                           ;mcc_generated_files/usb/usb_device.c: 340:     USBStatusStageEnabledFlag1 = 1;
 20930  00572A  0E01               	movlw	1
 20931  00572C  0101               	movlb	1	; () banked
 20932  00572E  6FDF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20933                           
 20934                           ;mcc_generated_files/usb/usb_device.c: 341:     USBStatusStageEnabledFlag2 = 1;
 20935  005730  0E01               	movlw	1
 20936  005732  6FDE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20937                           
 20938                           ;mcc_generated_files/usb/usb_device.c: 343:     USBDeferINDataStagePackets = 0;
 20939  005734  0E00               	movlw	0
 20940  005736  6FDD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20941                           
 20942                           ;mcc_generated_files/usb/usb_device.c: 344:     USBDeferOUTDataStagePackets = 0;
 20943  005738  0E00               	movlw	0
 20944  00573A  6FDC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20945                           
 20946                           ;mcc_generated_files/usb/usb_device.c: 345:     USBBusIsSuspended = 0;
 20947  00573C  0E00               	movlw	0
 20948  00573E  6FE1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 20949                           
 20950                           ;mcc_generated_files/usb/usb_device.c: 349:     for(i = 0; i < (uint8_t)(2 +1u); i++)
 20951  005740  0E00               	movlw	0
 20952  005742  6E0D               	movwf	i2USBDeviceInit@i^0,c
 20953  005744                     i2l15275:
 20954                           
 20955                           ;mcc_generated_files/usb/usb_device.c: 350:     {;mcc_generated_files/usb/usb_device.c: 
      +                          351:         pBDTEntryIn[i] = 0u;
 20956  005744  500D               	movf	i2USBDeviceInit@i^0,w,c
 20957  005746  0D02               	mullw	2
 20958  005748  50F3               	movf	243,w,c
 20959  00574A  0FB6               	addlw	low _pBDTEntryIn
 20960  00574C  6ED9               	movwf	fsr2l,c
 20961  00574E  6ADA               	clrf	fsr2h,c
 20962  005750  0E00               	movlw	0
 20963  005752  6EDE               	movwf	postinc2,c
 20964  005754  0E00               	movlw	0
 20965  005756  6EDD               	movwf	postdec2,c
 20966                           
 20967                           ;mcc_generated_files/usb/usb_device.c: 352:         pBDTEntryOut[i] = 0u;
 20968  005758  500D               	movf	i2USBDeviceInit@i^0,w,c
 20969  00575A  0D02               	mullw	2
 20970  00575C  0EAE               	movlw	low _pBDTEntryOut
 20971  00575E  24F3               	addwf	243,w,c
 20972  005760  6ED9               	movwf	fsr2l,c
 20973  005762  0E02               	movlw	high _pBDTEntryOut
 20974  005764  20F4               	addwfc	prodh,w,c
 20975  005766  6EDA               	movwf	fsr2h,c
 20976  005768  0E00               	movlw	0
 20977  00576A  6EDE               	movwf	postinc2,c
 20978  00576C  0E00               	movlw	0
 20979  00576E  6EDD               	movwf	postdec2,c
 20980                           
 20981                           ;mcc_generated_files/usb/usb_device.c: 353:         ep_data_in[i].Val = 0u;
 20982  005770  0EC2               	movlw	low _ep_data_in
 20983  005772  240D               	addwf	i2USBDeviceInit@i^0,w,c
 20984  005774  6ED9               	movwf	fsr2l,c
 20985  005776  6ADA               	clrf	fsr2h,c
 20986  005778  0E01               	movlw	high _ep_data_in
 20987  00577A  22DA               	addwfc	fsr2h,f,c
 20988  00577C  0E00               	movlw	0
 20989  00577E  6EDF               	movwf	indf2,c
 20990                           
 20991                           ;mcc_generated_files/usb/usb_device.c: 354:         ep_data_out[i].Val = 0u;
 20992  005780  0EBF               	movlw	low _ep_data_out
 20993  005782  240D               	addwf	i2USBDeviceInit@i^0,w,c
 20994  005784  6ED9               	movwf	fsr2l,c
 20995  005786  6ADA               	clrf	fsr2h,c
 20996  005788  0E01               	movlw	high _ep_data_out
 20997  00578A  22DA               	addwfc	fsr2h,f,c
 20998  00578C  0E00               	movlw	0
 20999  00578E  6EDF               	movwf	indf2,c
 21000                           
 21001                           ;mcc_generated_files/usb/usb_device.c: 355:     }
 21002  005790  2A0D               	incf	i2USBDeviceInit@i^0,f,c
 21003  005792  0E02               	movlw	2
 21004  005794  640D               	cpfsgt	i2USBDeviceInit@i^0,c
 21005  005796  D7D6               	goto	i2l15275
 21006                           
 21007                           ;mcc_generated_files/usb/usb_device.c: 358:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)&B
      +                          DT[2];
 21008  005798  0E08               	movlw	8
 21009  00579A  0100               	movlb	0	; () banked
 21010  00579C  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 21011  00579E  0E04               	movlw	4
 21012  0057A0  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;mcc_generated_files/usb/usb_device.c: 360:     UEP0 = 0x06|0x10;
 21016  0057A2  0E16               	movlw	22
 21017  0057A4  6E6A               	movwf	106,c	;volatile
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;mcc_generated_files/usb/usb_device.c: 362:     BDT[0].ADR = ((uint16_t)(&SetupPkt));
 21021  0057A6  0E04               	movlw	4
 21022  0057A8  0104               	movlb	4	; () banked
 21023  0057AA  6F03               	movwf	3,b	;volatile
 21024  0057AC  0E30               	movlw	48
 21025  0057AE  6F02               	movwf	2,b	;volatile
 21026                           
 21027                           ; BSR set to: 4
 21028                           ;mcc_generated_files/usb/usb_device.c: 363:     BDT[0].CNT = 8;
 21029  0057B0  0E08               	movlw	8
 21030  0057B2  6F01               	movwf	1,b	;volatile
 21031                           
 21032                           ; BSR set to: 4
 21033                           ;mcc_generated_files/usb/usb_device.c: 364:     BDT[0].STAT.Val = 0x00|0x04;
 21034  0057B4  0E04               	movlw	4
 21035  0057B6  6F00               	movwf	0,b	;volatile
 21036                           
 21037                           ; BSR set to: 4
 21038                           ;mcc_generated_files/usb/usb_device.c: 365:     BDT[0].STAT.Val |= 0x80;
 21039  0057B8  8F00               	bsf	0,7,b	;volatile
 21040                           
 21041                           ; BSR set to: 4
 21042                           ;mcc_generated_files/usb/usb_device.c: 368:     USBActiveConfiguration = 0;
 21043  0057BA  0E00               	movlw	0
 21044  0057BC  0100               	movlb	0	; () banked
 21045  0057BE  6FD2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 21046                           
 21047                           ; BSR set to: 0
 21048                           ;mcc_generated_files/usb/usb_device.c: 370:     USB1msTickCount = 0;
 21049  0057C0  0E00               	movlw	0
 21050  0057C2  0102               	movlb	2	; () banked
 21051  0057C4  6FC4               	movwf	_USB1msTickCount& (0+255),b	;volatile
 21052  0057C6  0E00               	movlw	0
 21053  0057C8  6FC5               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 21054  0057CA  0E00               	movlw	0
 21055  0057CC  6FC6               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 21056  0057CE  0E00               	movlw	0
 21057  0057D0  6FC7               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 21058                           
 21059                           ; BSR set to: 2
 21060                           ;mcc_generated_files/usb/usb_device.c: 371:     USBTicksSinceSuspendEnd = 0;
 21061  0057D2  0E00               	movlw	0
 21062  0057D4  0101               	movlb	1	; () banked
 21063  0057D6  6FDB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21064                           
 21065                           ; BSR set to: 1
 21066                           ;mcc_generated_files/usb/usb_device.c: 374:     USBDeviceState = DETACHED_STATE;
 21067  0057D8  0E00               	movlw	0
 21068  0057DA  6E5D               	movwf	_USBDeviceState^0,c	;volatile
 21069                           
 21070                           ; BSR set to: 1
 21071  0057DC  0012               	return		;funcret
 21072  0057DE                     __end_ofi2_USBDeviceInit:
 21073                           	callstack 0
 21074                           
 21075 ;; *************** function _USBWakeFromSuspend *****************
 21076 ;; Defined at:
 21077 ;;		line 2307 in file "mcc_generated_files/usb/usb_device.c"
 21078 ;; Parameters:    Size  Location     Type
 21079 ;;		None
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;		None
 21082 ;; Return value:  Size  Location     Type
 21083 ;;                  1    wreg      void 
 21084 ;; Registers used:
 21085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21086 ;; Tracked objects:
 21087 ;;		On entry : 0/0
 21088 ;;		On exit  : 3F/1
 21089 ;;		Unchanged: 0/0
 21090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21091 ;;      Params:         0       0       0       0       0       0       0       0       0
 21092 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21093 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21094 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21095 ;;Total ram usage:        0 bytes
 21096 ;; Hardware stack levels used: 1
 21097 ;; Hardware stack levels required when called: 4
 21098 ;; This function calls:
 21099 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21100 ;; This function is called by:
 21101 ;;		_USBDeviceTasks
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105                           	psect	text106
 21106  007F46                     __ptext106:
 21107                           	callstack 0
 21108  007F46                     _USBWakeFromSuspend:
 21109                           	callstack 15
 21110                           
 21111                           ;mcc_generated_files/usb/usb_device.c: 2309:     USBBusIsSuspended = 0;
 21112                           
 21113                           ; BSR set to: 1
 21114                           ;incstack = 0
 21115  007F46  0E00               	movlw	0
 21116  007F48  0101               	movlb	1	; () banked
 21117  007F4A  6FE1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21118                           
 21119                           ; BSR set to: 1
 21120                           ;mcc_generated_files/usb/usb_device.c: 2315:     USER_USB_CALLBACK_EVENT_HANDLER((USB_EV
      +                          ENT)EVENT_RESUME,0,0);
 21121  007F4C  0E00               	movlw	0
 21122  007F4E  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21123  007F50  0E74               	movlw	116
 21124  007F52  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21125  007F54  0E00               	movlw	0
 21126  007F56  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21127  007F58  0E00               	movlw	0
 21128  007F5A  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21129  007F5C  0E00               	movlw	0
 21130  007F5E  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21131  007F60  0E00               	movlw	0
 21132  007F62  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21133  007F64  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21134                           
 21135                           ;mcc_generated_files/usb/usb_device.c: 2322:         UCONbits.SUSPND = 0;
 21136  007F68  9260               	bcf	96,1,c	;volatile
 21137                           
 21138                           ;mcc_generated_files/usb/usb_device.c: 2327:     UIEbits.ACTVIE = 0;
 21139  007F6A  9464               	bcf	100,2,c	;volatile
 21140                           
 21141                           ;mcc_generated_files/usb/usb_device.c: 2345:     while(UIRbits.ACTVIF)
 21142  007F6C  D001               	goto	i2l11489
 21143  007F6E                     i2l11487:
 21144                           
 21145                           ;mcc_generated_files/usb/usb_device.c: 2347:     {;mcc_generated_files/usb/usb_device.c:
      +                           2348:         (UIR &= 0xFB);
 21146  007F6E  9465               	bcf	101,2,c	;volatile
 21147  007F70                     i2l11489:
 21148                           
 21149                           ;mcc_generated_files/usb/usb_device.c: 2345:     while(UIRbits.ACTVIF)
 21150  007F70  B465               	btfsc	101,2,c	;volatile
 21151  007F72  D7FD               	goto	i2l11487
 21152                           
 21153                           ;mcc_generated_files/usb/usb_device.c: 2351:     USBTicksSinceSuspendEnd = 0;
 21154  007F74  0E00               	movlw	0
 21155  007F76  0101               	movlb	1	; () banked
 21156  007F78  6FDB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21157                           
 21158                           ; BSR set to: 1
 21159  007F7A  0012               	return		;funcret
 21160  007F7C                     __end_of_USBWakeFromSuspend:
 21161                           	callstack 0
 21162                           
 21163 ;; *************** function _USBSuspend *****************
 21164 ;; Defined at:
 21165 ;;		line 2249 in file "mcc_generated_files/usb/usb_device.c"
 21166 ;; Parameters:    Size  Location     Type
 21167 ;;		None
 21168 ;; Auto vars:     Size  Location     Type
 21169 ;;		None
 21170 ;; Return value:  Size  Location     Type
 21171 ;;                  1    wreg      void 
 21172 ;; Registers used:
 21173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21174 ;; Tracked objects:
 21175 ;;		On entry : 0/0
 21176 ;;		On exit  : 0/0
 21177 ;;		Unchanged: 0/0
 21178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21179 ;;      Params:         0       0       0       0       0       0       0       0       0
 21180 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21181 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21182 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21183 ;;Total ram usage:        0 bytes
 21184 ;; Hardware stack levels used: 1
 21185 ;; Hardware stack levels required when called: 4
 21186 ;; This function calls:
 21187 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21188 ;; This function is called by:
 21189 ;;		_USBDeviceTasks
 21190 ;; This function uses a non-reentrant model
 21191 ;;
 21192                           
 21193                           	psect	text107
 21194  00025C                     __ptext107:
 21195                           	callstack 0
 21196  00025C                     _USBSuspend:
 21197                           	callstack 15
 21198                           
 21199                           ;mcc_generated_files/usb/usb_device.c: 2274:     UIEbits.ACTVIE = 1;
 21200                           
 21201                           ; BSR set to: 1
 21202                           ;incstack = 0
 21203  00025C  8464               	bsf	100,2,c	;volatile
 21204                           
 21205                           ;mcc_generated_files/usb/usb_device.c: 2275:     (UIR &= 0xEF);
 21206  00025E  9865               	bcf	101,4,c	;volatile
 21207                           
 21208                           ;mcc_generated_files/usb/usb_device.c: 2278:         UCONbits.SUSPND = 1;
 21209  000260  8260               	bsf	96,1,c	;volatile
 21210                           
 21211                           ;mcc_generated_files/usb/usb_device.c: 2281:     USBBusIsSuspended = 1;
 21212  000262  0E01               	movlw	1
 21213  000264  0101               	movlb	1	; () banked
 21214  000266  6FE1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21215                           
 21216                           ; BSR set to: 1
 21217                           ;mcc_generated_files/usb/usb_device.c: 2282:     USBTicksSinceSuspendEnd = 0;
 21218  000268  0E00               	movlw	0
 21219  00026A  6FDB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21220                           
 21221                           ; BSR set to: 1
 21222                           ;mcc_generated_files/usb/usb_device.c: 2289:     USER_USB_CALLBACK_EVENT_HANDLER((USB_EV
      +                          ENT)EVENT_SUSPEND,0,0);
 21223  00026C  0E00               	movlw	0
 21224  00026E  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21225  000270  0E75               	movlw	117
 21226  000272  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21227  000274  0E00               	movlw	0
 21228  000276  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21229  000278  0E00               	movlw	0
 21230  00027A  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21231  00027C  0E00               	movlw	0
 21232  00027E  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21233  000280  0E00               	movlw	0
 21234  000282  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21235  000284  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21236  000288  0012               	return		;funcret
 21237  00028A                     __end_of_USBSuspend:
 21238                           	callstack 0
 21239                           
 21240 ;; *************** function _USBStallHandler *****************
 21241 ;; Defined at:
 21242 ;;		line 2206 in file "mcc_generated_files/usb/usb_device.c"
 21243 ;; Parameters:    Size  Location     Type
 21244 ;;		None
 21245 ;; Auto vars:     Size  Location     Type
 21246 ;;		None
 21247 ;; Return value:  Size  Location     Type
 21248 ;;                  1    wreg      void 
 21249 ;; Registers used:
 21250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21251 ;; Tracked objects:
 21252 ;;		On entry : 0/0
 21253 ;;		On exit  : 0/0
 21254 ;;		Unchanged: 0/0
 21255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21256 ;;      Params:         0       0       0       0       0       0       0       0       0
 21257 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21258 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21259 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21260 ;;Total ram usage:        1 bytes
 21261 ;; Hardware stack levels used: 1
 21262 ;; This function calls:
 21263 ;;		Nothing
 21264 ;; This function is called by:
 21265 ;;		_USBDeviceTasks
 21266 ;; This function uses a non-reentrant model
 21267 ;;
 21268                           
 21269                           	psect	text108
 21270  007CEE                     __ptext108:
 21271                           	callstack 0
 21272  007CEE                     _USBStallHandler:
 21273                           	callstack 19
 21274                           
 21275                           ;mcc_generated_files/usb/usb_device.c: 2218:     if(UEP0bits.EPSTALL == 1)
 21276                           
 21277                           ;incstack = 0
 21278  007CEE  A06A               	btfss	106,0,c	;volatile
 21279  007CF0  D01D               	goto	i2l297
 21280                           
 21281                           ;mcc_generated_files/usb/usb_device.c: 2219:     {;mcc_generated_files/usb/usb_device.c:
      +                           2221:         if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->STAT.Va
      +                          l == (0x80|0x04)))
 21282  007CF2  C0C6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21283  007CF6  C0C7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21284  007CFA  0E80               	movlw	128
 21285  007CFC  18DE               	xorwf	postinc2,w,c
 21286  007CFE  A4D8               	btfss	status,2,c
 21287  007D00  D014               	goto	i2l11525
 21288  007D02  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 21289  007D06  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21290  007D0A  0E84               	movlw	132
 21291  007D0C  18DE               	xorwf	postinc2,w,c
 21292  007D0E  A4D8               	btfss	status,2,c
 21293  007D10  D00C               	goto	i2l11525
 21294                           
 21295                           ;mcc_generated_files/usb/usb_device.c: 2222:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2224:             pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21296  007D12  C0C6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21297  007D16  C0C7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21298  007D1A  0E0C               	movlw	12
 21299  007D1C  6EDF               	movwf	indf2,c
 21300                           
 21301                           ;mcc_generated_files/usb/usb_device.c: 2225:             pBDTEntryEP0OutCurrent->STAT.Va
      +                          l |= 0x80;
 21302  007D1E  C0C6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21303  007D22  C0C7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21304  007D26  0E00               	movlw	0
 21305  007D28  8EDB               	bsf	plusw2,7,c
 21306  007D2A                     i2l11525:
 21307                           
 21308                           ;mcc_generated_files/usb/usb_device.c: 2227:         UEP0bits.EPSTALL = 0;
 21309  007D2A  906A               	bcf	106,0,c	;volatile
 21310  007D2C                     i2l297:
 21311                           
 21312                           ;mcc_generated_files/usb/usb_device.c: 2230:     (UIR &= 0xDF);
 21313  007D2C  9A65               	bcf	101,5,c	;volatile
 21314  007D2E  0012               	return		;funcret
 21315  007D30                     __end_of_USBStallHandler:
 21316                           	callstack 0
 21317                           
 21318 ;; *************** function _USBIncrement1msInternalTimers *****************
 21319 ;; Defined at:
 21320 ;;		line 3029 in file "mcc_generated_files/usb/usb_device.c"
 21321 ;; Parameters:    Size  Location     Type
 21322 ;;		None
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;		None
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  1    wreg      void 
 21327 ;; Registers used:
 21328 ;;		wreg, status,2, status,0
 21329 ;; Tracked objects:
 21330 ;;		On entry : 0/0
 21331 ;;		On exit  : 3F/1
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21334 ;;      Params:         0       0       0       0       0       0       0       0       0
 21335 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21336 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21337 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21338 ;;Total ram usage:        0 bytes
 21339 ;; Hardware stack levels used: 1
 21340 ;; This function calls:
 21341 ;;		Nothing
 21342 ;; This function is called by:
 21343 ;;		_USBDeviceTasks
 21344 ;; This function uses a non-reentrant model
 21345 ;;
 21346                           
 21347                           	psect	text109
 21348  000436                     __ptext109:
 21349                           	callstack 0
 21350  000436                     _USBIncrement1msInternalTimers:
 21351                           	callstack 19
 21352                           
 21353                           ;mcc_generated_files/usb/usb_device.c: 3037:     USB1msTickCount++;
 21354                           
 21355                           ;incstack = 0
 21356  000436  0E01               	movlw	1
 21357  000438  0102               	movlb	2	; () banked
 21358  00043A  27C4               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 21359  00043C  0E00               	movlw	0
 21360  00043E  23C5               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 21361  000440  23C6               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 21362  000442  23C7               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 21363                           
 21364                           ; BSR set to: 2
 21365                           ;mcc_generated_files/usb/usb_device.c: 3038:     if(USBBusIsSuspended == 0)
 21366  000444  0101               	movlb	1	; () banked
 21367  000446  51E1               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 21368  000448  A4D8               	btfss	status,2,c
 21369  00044A  0012               	return	
 21370                           
 21371                           ; BSR set to: 1
 21372                           ;mcc_generated_files/usb/usb_device.c: 3039:     {;mcc_generated_files/usb/usb_device.c:
      +                           3040:         USBTicksSinceSuspendEnd++;
 21373  00044C  2BDB               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 21374                           
 21375                           ; BSR set to: 1
 21376                           ;mcc_generated_files/usb/usb_device.c: 3042:         if(USBTicksSinceSuspendEnd == 0)
 21377  00044E  51DB               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 21378  000450  A4D8               	btfss	status,2,c
 21379  000452  0012               	return	
 21380                           
 21381                           ; BSR set to: 1
 21382                           ;mcc_generated_files/usb/usb_device.c: 3043:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 3044:             USBTicksSinceSuspendEnd = 255;
 21383  000454  69DB               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21384                           
 21385                           ; BSR set to: 1
 21386  000456  0012               	return		;funcret
 21387  000458                     __end_of_USBIncrement1msInternalTimers:
 21388                           	callstack 0
 21389                           
 21390 ;; *************** function _USBCtrlEPService *****************
 21391 ;; Defined at:
 21392 ;;		line 2376 in file "mcc_generated_files/usb/usb_device.c"
 21393 ;; Parameters:    Size  Location     Type
 21394 ;;		None
 21395 ;; Auto vars:     Size  Location     Type
 21396 ;;		None
 21397 ;; Return value:  Size  Location     Type
 21398 ;;                  1    wreg      void 
 21399 ;; Registers used:
 21400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21401 ;; Tracked objects:
 21402 ;;		On entry : 3F/0
 21403 ;;		On exit  : 3E/0
 21404 ;;		Unchanged: 0/0
 21405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21406 ;;      Params:         0       0       0       0       0       0       0       0       0
 21407 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21408 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21409 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21410 ;;Total ram usage:        1 bytes
 21411 ;; Hardware stack levels used: 1
 21412 ;; Hardware stack levels required when called: 7
 21413 ;; This function calls:
 21414 ;;		_USBCtrlTrfInHandler
 21415 ;;		_USBCtrlTrfOutHandler
 21416 ;;		_USBCtrlTrfSetupHandler
 21417 ;;		i2_memcpy
 21418 ;; This function is called by:
 21419 ;;		_USBDeviceTasks
 21420 ;; This function uses a non-reentrant model
 21421 ;;
 21422                           
 21423                           	psect	text110
 21424  007200                     __ptext110:
 21425                           	callstack 0
 21426  007200                     _USBCtrlEPService:
 21427                           	callstack 12
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;mcc_generated_files/usb/usb_device.c: 2382:         USBStatusStageTimeoutCounter = (uin
      +                          t8_t)45;
 21431                           
 21432                           ; BSR set to: 1
 21433                           ;incstack = 0
 21434  007200  0E2D               	movlw	45
 21435  007202  6FCE               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;mcc_generated_files/usb/usb_device.c: 2386:     if((USTATcopy.Val & ~0x02) == 0x00)
 21439  007204  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21440  007208  0EFD               	movlw	253
 21441  00720A  161E               	andwf	??_USBCtrlEPService^0,f,c
 21442  00720C  A4D8               	btfss	status,2,c
 21443  00720E  D03B               	goto	i2l15037
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;mcc_generated_files/usb/usb_device.c: 2387:     {;mcc_generated_files/usb/usb_device.c:
      +                           2390:             pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val & 0
      +                          x7E)>>1];
 21447  007210  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21448  007214  90D8               	bcf	status,0,c
 21449  007216  321E               	rrcf	??_USBCtrlEPService^0,f,c
 21450  007218  0E3F               	movlw	63
 21451  00721A  161E               	andwf	??_USBCtrlEPService^0,f,c
 21452  00721C  501E               	movf	??_USBCtrlEPService^0,w,c
 21453  00721E  0D04               	mullw	4
 21454  007220  0E00               	movlw	0
 21455  007222  24F3               	addwf	243,w,c
 21456  007224  6FC6               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 21457  007226  0E04               	movlw	4
 21458  007228  20F4               	addwfc	prodh,w,c
 21459  00722A  6FC7               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;mcc_generated_files/usb/usb_device.c: 2398:         pBDTEntryEP0OutNext = pBDTEntryEP0O
      +                          utCurrent;
 21463  00722C  C0C6  F05B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 21464  007230  C0C7  F05C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;mcc_generated_files/usb/usb_device.c: 2400:         pBDTEntryEP0OutNext = (volatile BDT
      +                          _ENTRY*)(((uint16_t)pBDTEntryEP0OutNext) ^ 0x0004);
 21468  007234  0E04               	movlw	4
 21469  007236  185B               	xorwf	_pBDTEntryEP0OutNext^0,w,c
 21470  007238  6E5B               	movwf	_pBDTEntryEP0OutNext^0,c
 21471  00723A  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 21472  00723C  6E5C               	movwf	(_pBDTEntryEP0OutNext+1)^0,c
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;mcc_generated_files/usb/usb_device.c: 2403:         if(pBDTEntryEP0OutCurrent->STAT.PID
      +                           == 0xD)
 21476  00723E  C0C6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21477  007242  C0C7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21478  007246  30DF               	rrcf	223,w,c
 21479  007248  32E8               	rrcf	wreg,f,c
 21480  00724A  0B0F               	andlw	15
 21481  00724C  0A0D               	xorlw	13
 21482  00724E  A4D8               	btfss	status,2,c
 21483  007250  D017               	goto	i2l15035
 21484                           
 21485                           ; BSR set to: 0
 21486                           ;mcc_generated_files/usb/usb_device.c: 2404:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2409:             memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCu
      +                          rrent->ADR)), 8);
 21487  007252  0E30               	movlw	48
 21488  007254  6E01               	movwf	i2memcpy@d1^0,c
 21489  007256  0E04               	movlw	4
 21490  007258  6E02               	movwf	(i2memcpy@d1+1)^0,c
 21491  00725A  EE20 F002          	lfsr	2,2
 21492  00725E  51C6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21493  007260  26D9               	addwf	fsr2l,f,c
 21494  007262  51C7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21495  007264  22DA               	addwfc	fsr2h,f,c
 21496  007266  CFDE F003          	movff	postinc2,i2memcpy@s1
 21497  00726A  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 21498  00726E  0E00               	movlw	0
 21499  007270  6E06               	movwf	(i2memcpy@n+1)^0,c
 21500  007272  0E08               	movlw	8
 21501  007274  6E05               	movwf	i2memcpy@n^0,c
 21502  007276  EC55  F03E         	call	i2_memcpy	;wreg free
 21503                           
 21504                           ; BSR set to: 0
 21505                           ;mcc_generated_files/usb/usb_device.c: 2412:             USBCtrlTrfSetupHandler();
 21506  00727A  ECDF  F039         	call	_USBCtrlTrfSetupHandler	;wreg free
 21507                           
 21508                           ;mcc_generated_files/usb/usb_device.c: 2413:         }
 21509  00727E  0012               	return	
 21510  007280                     i2l15035:
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;mcc_generated_files/usb/usb_device.c: 2415:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2417:             USBCtrlTrfOutHandler();
 21514  007280  ECC7  F03B         	call	_USBCtrlTrfOutHandler	;wreg free
 21515  007284  0012               	return	
 21516  007286                     i2l15037:
 21517                           
 21518                           ; BSR set to: 0
 21519  007286  505E               	movf	_USTATcopy^0,w,c	;volatile
 21520  007288  0BFD               	andlw	253
 21521  00728A  0A04               	xorlw	4
 21522  00728C  A4D8               	btfss	status,2,c
 21523  00728E  0012               	return	
 21524                           
 21525                           ; BSR set to: 0
 21526                           ;mcc_generated_files/usb/usb_device.c: 2421:     {;mcc_generated_files/usb/usb_device.c:
      +                           2424:         USBCtrlTrfInHandler();
 21527  007290  ECEB  F034         	call	_USBCtrlTrfInHandler	;wreg free
 21528  007294  0012               	return		;funcret
 21529  007296                     __end_of_USBCtrlEPService:
 21530                           	callstack 0
 21531                           
 21532 ;; *************** function i2_memcpy *****************
 21533 ;; Defined at:
 21534 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 21535 ;; Parameters:    Size  Location     Type
 21536 ;;  d1              2    0[COMRAM] PTR void 
 21537 ;;		 -> executeCommand@strCommand(30), fila(640), SetupPkt(8), 
 21538 ;;  s1              2    2[COMRAM] PTR const void 
 21539 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(640), 
 21540 ;;		 -> CtrlTrfData(8), RAM(2047), SetupPkt(8), NULL(0), 
 21541 ;;  n               2    4[COMRAM] unsigned int 
 21542 ;; Auto vars:     Size  Location     Type
 21543 ;;  s               2    8[COMRAM] PTR const unsigned char 
 21544 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(640), 
 21545 ;;		 -> CtrlTrfData(8), RAM(2047), SetupPkt(8), NULL(0), 
 21546 ;;  d               2    6[COMRAM] PTR unsigned char 
 21547 ;;		 -> executeCommand@strCommand(30), fila(640), SetupPkt(8), 
 21548 ;;  tmp             1   10[COMRAM] unsigned char 
 21549 ;; Return value:  Size  Location     Type
 21550 ;;                  2    0[COMRAM] PTR void 
 21551 ;; Registers used:
 21552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21553 ;; Tracked objects:
 21554 ;;		On entry : 3F/0
 21555 ;;		On exit  : 3F/0
 21556 ;;		Unchanged: 3F/0
 21557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21558 ;;      Params:         6       0       0       0       0       0       0       0       0
 21559 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21561 ;;      Totals:        11       0       0       0       0       0       0       0       0
 21562 ;;Total ram usage:       11 bytes
 21563 ;; Hardware stack levels used: 1
 21564 ;; This function calls:
 21565 ;;		Nothing
 21566 ;; This function is called by:
 21567 ;;		_USBCtrlEPService
 21568 ;; This function uses a non-reentrant model
 21569 ;;
 21570                           
 21571                           	psect	text111
 21572  007CAA                     __ptext111:
 21573                           	callstack 0
 21574  007CAA                     i2_memcpy:
 21575                           	callstack 18
 21576                           
 21577                           ; BSR set to: 0
 21578                           
 21579                           ;incstack = 0
 21580  007CAA  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 21581  007CAE  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 21582  007CB2  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 21583  007CB6  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 21584  007CBA  D010               	goto	i2l11477
 21585  007CBC                     i2l11469:
 21586                           
 21587                           ; BSR set to: 0
 21588  007CBC  C009  FFD9         	movff	i2memcpy@s,fsr2l
 21589  007CC0  C00A  FFDA         	movff	i2memcpy@s+1,fsr2h
 21590  007CC4  50DF               	movf	indf2,w,c
 21591  007CC6  6E0B               	movwf	i2memcpy@tmp^0,c
 21592                           
 21593                           ; BSR set to: 0
 21594  007CC8  4A09               	infsnz	i2memcpy@s^0,f,c
 21595  007CCA  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 21596                           
 21597                           ; BSR set to: 0
 21598  007CCC  C007  FFD9         	movff	i2memcpy@d,fsr2l
 21599  007CD0  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 21600  007CD4  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 21601                           
 21602                           ; BSR set to: 0
 21603  007CD8  4A07               	infsnz	i2memcpy@d^0,f,c
 21604  007CDA  2A08               	incf	(i2memcpy@d+1)^0,f,c
 21605  007CDC                     i2l11477:
 21606                           
 21607                           ; BSR set to: 0
 21608  007CDC  0605               	decf	i2memcpy@n^0,f,c
 21609  007CDE  A0D8               	btfss	status,0,c
 21610  007CE0  0606               	decf	(i2memcpy@n+1)^0,f,c
 21611  007CE2  2805               	incf	i2memcpy@n^0,w,c
 21612  007CE4  E1EB               	bnz	i2l11469
 21613  007CE6  2806               	incf	(i2memcpy@n+1)^0,w,c
 21614  007CE8  B4D8               	btfsc	status,2,c
 21615  007CEA  0012               	return	
 21616  007CEC  D7E7               	goto	i2l11469
 21617  007CEE                     __end_ofi2_memcpy:
 21618                           	callstack 0
 21619                           
 21620 ;; *************** function _USBCtrlTrfSetupHandler *****************
 21621 ;; Defined at:
 21622 ;;		line 2469 in file "mcc_generated_files/usb/usb_device.c"
 21623 ;; Parameters:    Size  Location     Type
 21624 ;;		None
 21625 ;; Auto vars:     Size  Location     Type
 21626 ;;		None
 21627 ;; Return value:  Size  Location     Type
 21628 ;;                  1    wreg      void 
 21629 ;; Registers used:
 21630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21631 ;; Tracked objects:
 21632 ;;		On entry : 3F/0
 21633 ;;		On exit  : 3E/0
 21634 ;;		Unchanged: 0/0
 21635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21636 ;;      Params:         0       0       0       0       0       0       0       0       0
 21637 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21638 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21639 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21640 ;;Total ram usage:        0 bytes
 21641 ;; Hardware stack levels used: 1
 21642 ;; Hardware stack levels required when called: 6
 21643 ;; This function calls:
 21644 ;;		_USBCheckStdRequest
 21645 ;;		_USBCtrlEPServiceComplete
 21646 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21647 ;; This function is called by:
 21648 ;;		_USBCtrlEPService
 21649 ;; This function uses a non-reentrant model
 21650 ;;
 21651                           
 21652                           	psect	text112
 21653  0073BE                     __ptext112:
 21654                           	callstack 0
 21655  0073BE                     _USBCtrlTrfSetupHandler:
 21656                           	callstack 12
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;mcc_generated_files/usb/usb_device.c: 2474:     shortPacketStatus = 0;
 21660                           
 21661                           ; BSR set to: 0
 21662                           ;incstack = 0
 21663  0073BE  0E00               	movlw	0
 21664  0073C0  6FD1               	movwf	_shortPacketStatus& (0+255),b	;volatile
 21665                           
 21666                           ;mcc_generated_files/usb/usb_device.c: 2475:     USBDeferStatusStagePacket = 0;
 21667  0073C2  0E00               	movlw	0
 21668  0073C4  6FCD               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 21669                           
 21670                           ;mcc_generated_files/usb/usb_device.c: 2476:     USBDeferINDataStagePackets = 0;
 21671  0073C6  0E00               	movlw	0
 21672  0073C8  0101               	movlb	1	; () banked
 21673  0073CA  6FDD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21674                           
 21675                           ;mcc_generated_files/usb/usb_device.c: 2477:     USBDeferOUTDataStagePackets = 0;
 21676  0073CC  0E00               	movlw	0
 21677  0073CE  6FDC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21678                           
 21679                           ;mcc_generated_files/usb/usb_device.c: 2478:     BothEP0OutUOWNsSet = 0;
 21680  0073D0  0E00               	movlw	0
 21681  0073D2  6FE0               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21682                           
 21683                           ;mcc_generated_files/usb/usb_device.c: 2479:     controlTransferState = 0;
 21684  0073D4  0E00               	movlw	0
 21685  0073D6  0100               	movlb	0	; () banked
 21686  0073D8  6FD0               	movwf	_controlTransferState& (0+255),b	;volatile
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;mcc_generated_files/usb/usb_device.c: 2488:     pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21690  0073DA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 21691  0073DE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21692  0073E2  0E7F               	movlw	127
 21693  0073E4  16DF               	andwf	indf2,f,c
 21694                           
 21695                           ; BSR set to: 0
 21696                           ;mcc_generated_files/usb/usb_device.c: 2490:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)(
      +                          ((uint16_t)pBDTEntryIn[0]) ^ 0x0004);
 21697  0073E6  0E04               	movlw	4
 21698  0073E8  19B6               	xorwf	_pBDTEntryIn& (0+255),w,b
 21699  0073EA  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 21700  0073EC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21701  0073EE  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21702                           
 21703                           ; BSR set to: 0
 21704                           ;mcc_generated_files/usb/usb_device.c: 2491:     pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21705  0073F0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 21706  0073F4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21707  0073F8  0E7F               	movlw	127
 21708  0073FA  16DF               	andwf	indf2,f,c
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;mcc_generated_files/usb/usb_device.c: 2492:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)(
      +                          ((uint16_t)pBDTEntryIn[0]) ^ 0x0004);
 21712  0073FC  0E04               	movlw	4
 21713  0073FE  19B6               	xorwf	_pBDTEntryIn& (0+255),w,b
 21714  007400  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 21715  007402  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21716  007404  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;mcc_generated_files/usb/usb_device.c: 2493:     pBDTEntryEP0OutNext->STAT.Val &= ~(0x80
      +                          );
 21720  007406  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21721  00740A  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21722  00740E  0E7F               	movlw	127
 21723  007410  16DF               	andwf	indf2,f,c
 21724                           
 21725                           ; BSR set to: 0
 21726                           ;mcc_generated_files/usb/usb_device.c: 2495:     inPipes[0].info.Val = 0;
 21727  007412  0E00               	movlw	0
 21728  007414  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21729                           
 21730                           ; BSR set to: 0
 21731                           ;mcc_generated_files/usb/usb_device.c: 2496:     inPipes[0].wCount.Val = 0;
 21732  007416  0E00               	movlw	0
 21733  007418  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21734  00741A  0E00               	movlw	0
 21735  00741C  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21736                           
 21737                           ; BSR set to: 0
 21738                           ;mcc_generated_files/usb/usb_device.c: 2497:     outPipes[0].info.Val = 0;
 21739  00741E  0E00               	movlw	0
 21740  007420  6FAB               	movwf	(_outPipes+3)& (0+255),b	;volatile
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;mcc_generated_files/usb/usb_device.c: 2498:     outPipes[0].wCount.Val = 0;
 21744  007422  0E00               	movlw	0
 21745  007424  6FAD               	movwf	(_outPipes+5)& (0+255),b	;volatile
 21746  007426  0E00               	movlw	0
 21747  007428  6FAC               	movwf	(_outPipes+4)& (0+255),b	;volatile
 21748                           
 21749                           ; BSR set to: 0
 21750                           ;mcc_generated_files/usb/usb_device.c: 2504:     USBCheckStdRequest();
 21751  00742A  EC30  F031         	call	_USBCheckStdRequest	;wreg free
 21752                           
 21753                           ;mcc_generated_files/usb/usb_device.c: 2505:     USER_USB_CALLBACK_EVENT_HANDLER((USB_EV
      +                          ENT)EVENT_EP0_REQUEST,0,0);
 21754  00742E  0E00               	movlw	0
 21755  007430  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21756  007432  0E03               	movlw	3
 21757  007434  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21758  007436  0E00               	movlw	0
 21759  007438  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21760  00743A  0E00               	movlw	0
 21761  00743C  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21762  00743E  0E00               	movlw	0
 21763  007440  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21764  007442  0E00               	movlw	0
 21765  007444  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21766  007446  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21767                           
 21768                           ;mcc_generated_files/usb/usb_device.c: 2518:     USBCtrlEPServiceComplete();
 21769  00744A  EC46  F030         	call	_USBCtrlEPServiceComplete	;wreg free
 21770  00744E  0012               	return		;funcret
 21771  007450                     __end_of_USBCtrlTrfSetupHandler:
 21772                           	callstack 0
 21773                           
 21774 ;; *************** function _USBCtrlEPServiceComplete *****************
 21775 ;; Defined at:
 21776 ;;		line 1620 in file "mcc_generated_files/usb/usb_device.c"
 21777 ;; Parameters:    Size  Location     Type
 21778 ;;		None
 21779 ;; Auto vars:     Size  Location     Type
 21780 ;;		None
 21781 ;; Return value:  Size  Location     Type
 21782 ;;                  1    wreg      void 
 21783 ;; Registers used:
 21784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21785 ;; Tracked objects:
 21786 ;;		On entry : 0/0
 21787 ;;		On exit  : 3E/0
 21788 ;;		Unchanged: 0/0
 21789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21790 ;;      Params:         0       0       0       0       0       0       0       0       0
 21791 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21793 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21794 ;;Total ram usage:        0 bytes
 21795 ;; Hardware stack levels used: 1
 21796 ;; Hardware stack levels required when called: 2
 21797 ;; This function calls:
 21798 ;;		_USBCtrlEPAllowDataStage
 21799 ;;		_USBCtrlEPAllowStatusStage
 21800 ;; This function is called by:
 21801 ;;		_USBCtrlTrfSetupHandler
 21802 ;; This function uses a non-reentrant model
 21803 ;;
 21804                           
 21805                           	psect	text113
 21806  00608C                     __ptext113:
 21807                           	callstack 0
 21808  00608C                     _USBCtrlEPServiceComplete:
 21809                           	callstack 15
 21810                           
 21811                           ;mcc_generated_files/usb/usb_device.c: 1626:     UCONbits.PKTDIS = 0;
 21812                           
 21813                           ;incstack = 0
 21814  00608C  9860               	bcf	96,4,c	;volatile
 21815                           
 21816                           ;mcc_generated_files/usb/usb_device.c: 1632:     if(inPipes[0].info.bits.busy == 0)
 21817  00608E  0100               	movlb	0	; () banked
 21818  006090  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 21819  006092  D03A               	goto	i2l221
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;mcc_generated_files/usb/usb_device.c: 1633:     {;mcc_generated_files/usb/usb_device.c:
      +                           1634:         if(outPipes[0].info.bits.busy == 1)
 21823  006094  AFAB               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 21824  006096  D00D               	goto	i2l9813
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;mcc_generated_files/usb/usb_device.c: 1635:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1636:             controlTransferState = 2;
 21828  006098  0E02               	movlw	2
 21829  00609A  6FD0               	movwf	_controlTransferState& (0+255),b	;volatile
 21830                           
 21831                           ;mcc_generated_files/usb/usb_device.c: 1647:             if(USBDeferOUTDataStagePackets 
      +                          == 0)
 21832  00609C  0101               	movlb	1	; () banked
 21833  00609E  51DC               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 21834  0060A0  B4D8               	btfsc	status,2,c
 21835                           
 21836                           ; BSR set to: 1
 21837                           ;mcc_generated_files/usb/usb_device.c: 1648:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1649:                 USBCtrlEPAllowDataStage();
 21838  0060A2  EC18  F038         	call	_USBCtrlEPAllowDataStage	;wreg free
 21839                           
 21840                           ;mcc_generated_files/usb/usb_device.c: 1654:             USBStatusStageEnabledFlag2 = 0;
 21841  0060A6  0E00               	movlw	0
 21842  0060A8  0101               	movlb	1	; () banked
 21843  0060AA  6FDE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21844                           
 21845                           ; BSR set to: 1
 21846                           ;mcc_generated_files/usb/usb_device.c: 1655:             USBStatusStageEnabledFlag1 = 0;
 21847  0060AC  0E00               	movlw	0
 21848  0060AE  6FDF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21849                           
 21850                           ;mcc_generated_files/usb/usb_device.c: 1656:         }
 21851  0060B0  0012               	return	
 21852  0060B2                     i2l9813:
 21853                           
 21854                           ; BSR set to: 0
 21855                           ;mcc_generated_files/usb/usb_device.c: 1658:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1663:             pBDTEntryEP0OutNext->CNT = 8;
 21856  0060B2  EE20 F001          	lfsr	2,1
 21857  0060B6  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 21858  0060B8  26D9               	addwf	fsr2l,f,c
 21859  0060BA  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 21860  0060BC  22DA               	addwfc	fsr2h,f,c
 21861  0060BE  0E08               	movlw	8
 21862  0060C0  6EDF               	movwf	indf2,c
 21863                           
 21864                           ;mcc_generated_files/usb/usb_device.c: 1664:             pBDTEntryEP0OutNext->ADR = ((ui
      +                          nt16_t)(&SetupPkt));
 21865  0060C2  EE20 F002          	lfsr	2,2
 21866  0060C6  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 21867  0060C8  26D9               	addwf	fsr2l,f,c
 21868  0060CA  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 21869  0060CC  22DA               	addwfc	fsr2h,f,c
 21870  0060CE  0E30               	movlw	48
 21871  0060D0  6EDE               	movwf	postinc2,c
 21872  0060D2  0E04               	movlw	4
 21873  0060D4  6EDD               	movwf	postdec2,c
 21874                           
 21875                           ; BSR set to: 0
 21876                           ;mcc_generated_files/usb/usb_device.c: 1665:             pBDTEntryEP0OutNext->STAT.Val =
      +                           0x00|(0x08 & 0x08)|0x04;
 21877  0060D6  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21878  0060DA  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21879  0060DE  0E0C               	movlw	12
 21880  0060E0  6EDF               	movwf	indf2,c
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;mcc_generated_files/usb/usb_device.c: 1666:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 21884  0060E2  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21885  0060E6  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21886  0060EA  0E00               	movlw	0
 21887  0060EC  8EDB               	bsf	plusw2,7,c
 21888                           
 21889                           ;mcc_generated_files/usb/usb_device.c: 1667:             pBDTEntryIn[0]->STAT.Val = 0x04
      +                          ;
 21890  0060EE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 21891  0060F2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21892  0060F6  0E04               	movlw	4
 21893  0060F8  6EDF               	movwf	indf2,c
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;mcc_generated_files/usb/usb_device.c: 1668:             pBDTEntryIn[0]->STAT.Val |= 0x8
      +                          0;
 21897  0060FA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 21898  0060FE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21899  006102  0E00               	movlw	0
 21900  006104  8EDB               	bsf	plusw2,7,c
 21901  006106  0012               	return	
 21902  006108                     i2l221:
 21903                           
 21904                           ; BSR set to: 0
 21905                           ;mcc_generated_files/usb/usb_device.c: 1672:     {;mcc_generated_files/usb/usb_device.c:
      +                           1673:   if(SetupPkt.DataDir == (0x80>>7))
 21906  006108  0104               	movlb	4	; () banked
 21907  00610A  AF30               	btfss	48,7,b	;volatile
 21908  00610C  D014               	goto	i2l9833
 21909                           
 21910                           ; BSR set to: 4
 21911                           ;mcc_generated_files/usb/usb_device.c: 1674:   {;mcc_generated_files/usb/usb_device.c: 1
      +                          675:    controlTransferState = 1;
 21912  00610E  0E01               	movlw	1
 21913  006110  0100               	movlb	0	; () banked
 21914  006112  6FD0               	movwf	_controlTransferState& (0+255),b	;volatile
 21915                           
 21916                           ;mcc_generated_files/usb/usb_device.c: 1689:    if(USBDeferINDataStagePackets == 0)
 21917  006114  0101               	movlb	1	; () banked
 21918  006116  51DD               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 21919  006118  B4D8               	btfsc	status,2,c
 21920                           
 21921                           ; BSR set to: 1
 21922                           ;mcc_generated_files/usb/usb_device.c: 1690:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1691:                 USBCtrlEPAllowDataStage();
 21923  00611A  EC18  F038         	call	_USBCtrlEPAllowDataStage	;wreg free
 21924  00611E                     i2l9825:
 21925                           
 21926                           ;mcc_generated_files/usb/usb_device.c: 1714:             USBStatusStageEnabledFlag2 = 0;
 21927  00611E  0E00               	movlw	0
 21928  006120  0101               	movlb	1	; () banked
 21929  006122  6FDE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21930                           
 21931                           ; BSR set to: 1
 21932                           ;mcc_generated_files/usb/usb_device.c: 1715:             USBStatusStageEnabledFlag1 = 0;
 21933  006124  0E00               	movlw	0
 21934  006126  6FDF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21935                           
 21936                           ; BSR set to: 1
 21937                           ;mcc_generated_files/usb/usb_device.c: 1716:             if(USBDeferStatusStagePacket ==
      +                           0)
 21938  006128  0100               	movlb	0	; () banked
 21939  00612A  51CD               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21940  00612C  A4D8               	btfss	status,2,c
 21941  00612E  0012               	return	
 21942                           
 21943                           ; BSR set to: 0
 21944                           ;mcc_generated_files/usb/usb_device.c: 1717:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1718:                 USBCtrlEPAllowStatusStage();
 21945  006130  EC85  F034         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21946  006134  0012               	return	
 21947  006136                     i2l9833:
 21948                           
 21949                           ; BSR set to: 4
 21950                           ;mcc_generated_files/usb/usb_device.c: 1722:   {;mcc_generated_files/usb/usb_device.c: 1
      +                          733:    controlTransferState = 2;
 21951  006136  0E02               	movlw	2
 21952  006138  0100               	movlb	0	; () banked
 21953  00613A  6FD0               	movwf	_controlTransferState& (0+255),b	;volatile
 21954                           
 21955                           ; BSR set to: 0
 21956                           ;mcc_generated_files/usb/usb_device.c: 1736:    pBDTEntryEP0OutNext->CNT = 8;
 21957  00613C  EE20 F001          	lfsr	2,1
 21958  006140  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 21959  006142  26D9               	addwf	fsr2l,f,c
 21960  006144  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 21961  006146  22DA               	addwfc	fsr2h,f,c
 21962  006148  0E08               	movlw	8
 21963  00614A  6EDF               	movwf	indf2,c
 21964                           
 21965                           ; BSR set to: 0
 21966                           ;mcc_generated_files/usb/usb_device.c: 1737:    pBDTEntryEP0OutNext->ADR = ((uint16_t)(&
      +                          SetupPkt));
 21967  00614C  EE20 F002          	lfsr	2,2
 21968  006150  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 21969  006152  26D9               	addwf	fsr2l,f,c
 21970  006154  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 21971  006156  22DA               	addwfc	fsr2h,f,c
 21972  006158  0E30               	movlw	48
 21973  00615A  6EDE               	movwf	postinc2,c
 21974  00615C  0E04               	movlw	4
 21975  00615E  6EDD               	movwf	postdec2,c
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;mcc_generated_files/usb/usb_device.c: 1738:    pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21979  006160  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21980  006164  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21981  006168  0E04               	movlw	4
 21982  00616A  6EDF               	movwf	indf2,c
 21983                           
 21984                           ; BSR set to: 0
 21985                           ;mcc_generated_files/usb/usb_device.c: 1739:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 21986  00616C  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21987  006170  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21988  006174  0E00               	movlw	0
 21989  006176  8EDB               	bsf	plusw2,7,c
 21990  006178  D7D2               	goto	i2l9825
 21991  00617A                     __end_of_USBCtrlEPServiceComplete:
 21992                           	callstack 0
 21993                           
 21994 ;; *************** function _USBCtrlEPAllowDataStage *****************
 21995 ;; Defined at:
 21996 ;;		line 1492 in file "mcc_generated_files/usb/usb_device.c"
 21997 ;; Parameters:    Size  Location     Type
 21998 ;;		None
 21999 ;; Auto vars:     Size  Location     Type
 22000 ;;		None
 22001 ;; Return value:  Size  Location     Type
 22002 ;;                  1    wreg      void 
 22003 ;; Registers used:
 22004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22005 ;; Tracked objects:
 22006 ;;		On entry : 3F/1
 22007 ;;		On exit  : 3F/0
 22008 ;;		Unchanged: 0/0
 22009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22010 ;;      Params:         0       0       0       0       0       0       0       0       0
 22011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22013 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22014 ;;Total ram usage:        0 bytes
 22015 ;; Hardware stack levels used: 1
 22016 ;; Hardware stack levels required when called: 1
 22017 ;; This function calls:
 22018 ;;		_USBCtrlTrfTxService
 22019 ;; This function is called by:
 22020 ;;		_USBCtrlEPServiceComplete
 22021 ;; This function uses a non-reentrant model
 22022 ;;
 22023                           
 22024                           	psect	text114
 22025  007030                     __ptext114:
 22026                           	callstack 0
 22027  007030                     _USBCtrlEPAllowDataStage:
 22028                           	callstack 15
 22029                           
 22030                           ; BSR set to: 1
 22031                           ;mcc_generated_files/usb/usb_device.c: 1494:     USBDeferINDataStagePackets = 0;
 22032                           
 22033                           ;incstack = 0
 22034  007030  0E00               	movlw	0
 22035  007032  6FDD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22036                           
 22037                           ;mcc_generated_files/usb/usb_device.c: 1495:     USBDeferOUTDataStagePackets = 0;
 22038  007034  0E00               	movlw	0
 22039  007036  6FDC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22040                           
 22041                           ; BSR set to: 1
 22042                           ;mcc_generated_files/usb/usb_device.c: 1497:     if(controlTransferState == 2)
 22043  007038  0E02               	movlw	2
 22044  00703A  0100               	movlb	0	; () banked
 22045  00703C  19D0               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 22046  00703E  A4D8               	btfss	status,2,c
 22047  007040  D01F               	goto	i2l8813
 22048                           
 22049                           ; BSR set to: 0
 22050                           ;mcc_generated_files/usb/usb_device.c: 1498:     {;mcc_generated_files/usb/usb_device.c:
      +                           1500:         pBDTEntryEP0OutNext->CNT = 8;
 22051  007042  EE20 F001          	lfsr	2,1
 22052  007046  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 22053  007048  26D9               	addwf	fsr2l,f,c
 22054  00704A  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22055  00704C  22DA               	addwfc	fsr2h,f,c
 22056  00704E  0E08               	movlw	8
 22057  007050  6EDF               	movwf	indf2,c
 22058                           
 22059                           ;mcc_generated_files/usb/usb_device.c: 1501:         pBDTEntryEP0OutNext->ADR = ((uint16
      +                          _t)(&CtrlTrfData));
 22060  007052  EE20 F002          	lfsr	2,2
 22061  007056  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 22062  007058  26D9               	addwf	fsr2l,f,c
 22063  00705A  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22064  00705C  22DA               	addwfc	fsr2h,f,c
 22065  00705E  0E38               	movlw	56
 22066  007060  6EDE               	movwf	postinc2,c
 22067  007062  0E04               	movlw	4
 22068  007064  6EDD               	movwf	postdec2,c
 22069                           
 22070                           ; BSR set to: 0
 22071                           ;mcc_generated_files/usb/usb_device.c: 1502:         pBDTEntryEP0OutNext->STAT.Val = 0x4
      +                          0|(0x08 & 0x08);
 22072  007066  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22073  00706A  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22074  00706E  0E48               	movlw	72
 22075  007070  6EDF               	movwf	indf2,c
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;mcc_generated_files/usb/usb_device.c: 1503:         pBDTEntryEP0OutNext->STAT.Val |= 0x
      +                          80;
 22079  007072  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22080  007076  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22081  00707A  0E00               	movlw	0
 22082  00707C  8EDB               	bsf	plusw2,7,c
 22083                           
 22084                           ;mcc_generated_files/usb/usb_device.c: 1504:     }
 22085  00707E  0012               	return	
 22086  007080                     i2l8813:
 22087                           
 22088                           ; BSR set to: 0
 22089                           ;mcc_generated_files/usb/usb_device.c: 1506:     {;mcc_generated_files/usb/usb_device.c:
      +                           1509:   if(SetupPkt.wLength < inPipes[0].wCount.Val)
 22090  007080  51B4               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 22091  007082  0104               	movlb	4	; () banked
 22092  007084  5D36               	subwf	54,w,b	;volatile
 22093  007086  0100               	movlb	0	; () banked
 22094  007088  51B5               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 22095  00708A  0104               	movlb	4	; () banked
 22096  00708C  5937               	subwfb	55,w,b	;volatile
 22097  00708E  B0D8               	btfsc	status,0,c
 22098  007090  D004               	goto	i2l8817
 22099                           
 22100                           ; BSR set to: 4
 22101                           ;mcc_generated_files/usb/usb_device.c: 1510:   {;mcc_generated_files/usb/usb_device.c: 1
      +                          511:    inPipes[0].wCount.Val = SetupPkt.wLength;
 22102  007092  C436 F0B4          	movff	1078,_inPipes+4	;volatile
 22103  007096  C437 F0B5          	movff	1079,_inPipes+5	;volatile
 22104  00709A                     i2l8817:
 22105                           
 22106                           ; BSR set to: 4
 22107                           ;mcc_generated_files/usb/usb_device.c: 1513:   USBCtrlTrfTxService();
 22108  00709A  EC11  F032         	call	_USBCtrlTrfTxService	;wreg free
 22109                           
 22110                           ;mcc_generated_files/usb/usb_device.c: 1518:   pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTr
      +                          fData));
 22111  00709E  0100               	movlb	0	; () banked
 22112  0070A0  EE20 F002          	lfsr	2,2
 22113  0070A4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 22114  0070A6  26D9               	addwf	fsr2l,f,c
 22115  0070A8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22116  0070AA  22DA               	addwfc	fsr2h,f,c
 22117  0070AC  0E38               	movlw	56
 22118  0070AE  6EDE               	movwf	postinc2,c
 22119  0070B0  0E04               	movlw	4
 22120  0070B2  6EDD               	movwf	postdec2,c
 22121                           
 22122                           ; BSR set to: 0
 22123                           ;mcc_generated_files/usb/usb_device.c: 1519:   pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0
      +                          x08);
 22124  0070B4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22125  0070B8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22126  0070BC  0E48               	movlw	72
 22127  0070BE  6EDF               	movwf	indf2,c
 22128                           
 22129                           ; BSR set to: 0
 22130                           ;mcc_generated_files/usb/usb_device.c: 1520:         pBDTEntryIn[0]->STAT.Val |= 0x80;
 22131  0070C0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22132  0070C4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22133  0070C8  0E00               	movlw	0
 22134  0070CA  8EDB               	bsf	plusw2,7,c
 22135                           
 22136                           ; BSR set to: 0
 22137  0070CC  0012               	return		;funcret
 22138  0070CE                     __end_of_USBCtrlEPAllowDataStage:
 22139                           	callstack 0
 22140                           
 22141 ;; *************** function _USBCheckStdRequest *****************
 22142 ;; Defined at:
 22143 ;;		line 2690 in file "mcc_generated_files/usb/usb_device.c"
 22144 ;; Parameters:    Size  Location     Type
 22145 ;;		None
 22146 ;; Auto vars:     Size  Location     Type
 22147 ;;		None
 22148 ;; Return value:  Size  Location     Type
 22149 ;;                  1    wreg      void 
 22150 ;; Registers used:
 22151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22152 ;; Tracked objects:
 22153 ;;		On entry : 3F/0
 22154 ;;		On exit  : 0/0
 22155 ;;		Unchanged: 0/0
 22156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22157 ;;      Params:         0       0       0       0       0       0       0       0       0
 22158 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22159 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22160 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22161 ;;Total ram usage:        2 bytes
 22162 ;; Hardware stack levels used: 1
 22163 ;; Hardware stack levels required when called: 5
 22164 ;; This function calls:
 22165 ;;		_USBStdFeatureReqHandler
 22166 ;;		_USBStdGetDscHandler
 22167 ;;		_USBStdGetStatusHandler
 22168 ;;		_USBStdSetCfgHandler
 22169 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22170 ;; This function is called by:
 22171 ;;		_USBCtrlTrfSetupHandler
 22172 ;; This function uses a non-reentrant model
 22173 ;;
 22174                           
 22175                           	psect	text115
 22176  006260                     __ptext115:
 22177                           	callstack 0
 22178  006260                     _USBCheckStdRequest:
 22179                           	callstack 12
 22180                           
 22181                           ; BSR set to: 0
 22182                           ;mcc_generated_files/usb/usb_device.c: 2692:     if(SetupPkt.RequestType != (0x00>>5)) r
      +                          eturn;
 22183                           
 22184                           ; BSR set to: 0
 22185                           ;incstack = 0
 22186  006260  0104               	movlb	4	; () banked
 22187  006262  3930               	swapf	48,w,b	;volatile
 22188  006264  32E8               	rrcf	wreg,f,c
 22189  006266  0B03               	andlw	3
 22190  006268  0900               	iorlw	0
 22191  00626A  A4D8               	btfss	status,2,c
 22192  00626C  0012               	return	
 22193  00626E  D041               	goto	i2l14191
 22194  006270                     i2l346:
 22195                           
 22196                           ; BSR set to: 4
 22197                           ;mcc_generated_files/usb/usb_device.c: 2697:             inPipes[0].info.bits.busy = 1;
 22198  006270  0100               	movlb	0	; () banked
 22199  006272  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22200                           
 22201                           ; BSR set to: 0
 22202                           ;mcc_generated_files/usb/usb_device.c: 2698:             USBDeviceState = ADR_PENDING_ST
      +                          ATE;
 22203  006274  0E08               	movlw	8
 22204  006276  6E5D               	movwf	_USBDeviceState^0,c	;volatile
 22205                           
 22206                           ;mcc_generated_files/usb/usb_device.c: 2700:             break;
 22207  006278  0012               	return	
 22208  00627A                     i2l14161:
 22209                           
 22210                           ; BSR set to: 4
 22211                           ;mcc_generated_files/usb/usb_device.c: 2702:             USBStdGetDscHandler();
 22212  00627A  EC8A  F029         	call	_USBStdGetDscHandler	;wreg free
 22213                           
 22214                           ;mcc_generated_files/usb/usb_device.c: 2703:             break;
 22215  00627E  0012               	return	
 22216  006280                     i2l14163:
 22217                           
 22218                           ; BSR set to: 4
 22219                           ;mcc_generated_files/usb/usb_device.c: 2705:             USBStdSetCfgHandler();
 22220  006280  EC4D  F033         	call	_USBStdSetCfgHandler	;wreg free
 22221                           
 22222                           ;mcc_generated_files/usb/usb_device.c: 2706:             break;
 22223  006284  0012               	return	
 22224  006286                     i2l14165:
 22225                           
 22226                           ; BSR set to: 4
 22227                           ;mcc_generated_files/usb/usb_device.c: 2708:             inPipes[0].pSrc.bRam = (uint8_t
      +                          *)&USBActiveConfiguration;
 22228  006286  0ED2               	movlw	low _USBActiveConfiguration
 22229  006288  0100               	movlb	0	; () banked
 22230  00628A  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 22231  00628C  6BB1               	clrf	(_inPipes+1)& (0+255),b	;volatile
 22232                           
 22233                           ; BSR set to: 0
 22234                           ;mcc_generated_files/usb/usb_device.c: 2709:             inPipes[0].info.bits.ctrl_trf_m
      +                          em = 0x01;
 22235  00628E  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;mcc_generated_files/usb/usb_device.c: 2710:             inPipes[0].wCount.v[0] = 1;
 22239  006290  0E01               	movlw	1
 22240  006292  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22241                           
 22242                           ; BSR set to: 0
 22243                           ;mcc_generated_files/usb/usb_device.c: 2711:             inPipes[0].info.bits.busy = 1;
 22244  006294  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22245                           
 22246                           ;mcc_generated_files/usb/usb_device.c: 2712:             break;
 22247  006296  0012               	return	
 22248  006298                     i2l14173:
 22249                           
 22250                           ; BSR set to: 4
 22251                           ;mcc_generated_files/usb/usb_device.c: 2714:             USBStdGetStatusHandler();
 22252  006298  EC18  F037         	call	_USBStdGetStatusHandler	;wreg free
 22253                           
 22254                           ;mcc_generated_files/usb/usb_device.c: 2715:             break;
 22255  00629C  0012               	return	
 22256  00629E                     i2l14175:
 22257                           
 22258                           ; BSR set to: 4
 22259                           ;mcc_generated_files/usb/usb_device.c: 2718:             USBStdFeatureReqHandler();
 22260  00629E  ECE2  F01F         	call	_USBStdFeatureReqHandler	;wreg free
 22261                           
 22262                           ;mcc_generated_files/usb/usb_device.c: 2719:             break;
 22263  0062A2  0012               	return	
 22264  0062A4                     i2l14177:
 22265                           
 22266                           ; BSR set to: 4
 22267                           ;mcc_generated_files/usb/usb_device.c: 2721:             inPipes[0].pSrc.bRam = (uint8_t
      +                          *)&USBAlternateInterface[SetupPkt.bIntfID];
 22268  0062A4  0EE3               	movlw	low _USBAlternateInterface
 22269  0062A6  2534               	addwf	52,w,b	;volatile
 22270  0062A8  0100               	movlb	0	; () banked
 22271  0062AA  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 22272  0062AC  6BB1               	clrf	(_inPipes+1)& (0+255),b	;volatile
 22273  0062AE  0E01               	movlw	high _USBAlternateInterface
 22274  0062B0  23B1               	addwfc	(_inPipes+1)& (0+255),f,b	;volatile
 22275                           
 22276                           ; BSR set to: 0
 22277                           ;mcc_generated_files/usb/usb_device.c: 2722:             inPipes[0].info.bits.ctrl_trf_m
      +                          em = 0x01;
 22278  0062B2  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22279                           
 22280                           ; BSR set to: 0
 22281                           ;mcc_generated_files/usb/usb_device.c: 2723:             inPipes[0].wCount.v[0] = 1;
 22282  0062B4  0E01               	movlw	1
 22283  0062B6  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;mcc_generated_files/usb/usb_device.c: 2724:             inPipes[0].info.bits.busy = 1;
 22287  0062B8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22288                           
 22289                           ;mcc_generated_files/usb/usb_device.c: 2725:             break;
 22290  0062BA  0012               	return	
 22291  0062BC                     i2l355:
 22292                           
 22293                           ; BSR set to: 4
 22294                           ;mcc_generated_files/usb/usb_device.c: 2727:             inPipes[0].info.bits.busy = 1;
 22295  0062BC  0100               	movlb	0	; () banked
 22296  0062BE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;mcc_generated_files/usb/usb_device.c: 2728:             USBAlternateInterface[SetupPkt.
      +                          bIntfID] = SetupPkt.bAltID;
 22300  0062C0  0EE3               	movlw	low _USBAlternateInterface
 22301  0062C2  0104               	movlb	4	; () banked
 22302  0062C4  2534               	addwf	52,w,b	;volatile
 22303  0062C6  6ED9               	movwf	fsr2l,c
 22304  0062C8  6ADA               	clrf	fsr2h,c
 22305  0062CA  0E01               	movlw	high _USBAlternateInterface
 22306  0062CC  22DA               	addwfc	fsr2h,f,c
 22307  0062CE  C432 FFDF          	movff	1074,indf2	;volatile
 22308                           
 22309                           ;mcc_generated_files/usb/usb_device.c: 2729:             break;
 22310  0062D2  0012               	return	
 22311  0062D4                     i2l14187:
 22312                           
 22313                           ; BSR set to: 4
 22314                           ;mcc_generated_files/usb/usb_device.c: 2731:             USER_USB_CALLBACK_EVENT_HANDLER
      +                          ((USB_EVENT)EVENT_SET_DESCRIPTOR,0,0);
 22315  0062D4  0E00               	movlw	0
 22316  0062D6  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 22317  0062D8  0E02               	movlw	2
 22318  0062DA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 22319  0062DC  0E00               	movlw	0
 22320  0062DE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 22321  0062E0  0E00               	movlw	0
 22322  0062E2  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 22323  0062E4  0E00               	movlw	0
 22324  0062E6  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 22325  0062E8  0E00               	movlw	0
 22326  0062EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 22327  0062EC  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22328                           
 22329                           ;mcc_generated_files/usb/usb_device.c: 2732:             break;
 22330  0062F0  0012               	return	
 22331  0062F2                     i2l14191:
 22332                           
 22333                           ; BSR set to: 4
 22334  0062F2  5131               	movf	49,w,b	;volatile
 22335  0062F4  6E1C               	movwf	??_USBCheckStdRequest^0,c
 22336  0062F6  6A1D               	clrf	(??_USBCheckStdRequest+1)^0,c
 22337                           
 22338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22339                           ; Switch size 1, requested type "simple"
 22340                           ; Number of cases is 1, Range of values is 0 to 0
 22341                           ; switch strategies available:
 22342                           ; Name         Instructions Cycles
 22343                           ; simple_byte            4     3 (average)
 22344                           ;	Chosen strategy is simple_byte
 22345  0062F8  501D               	movf	(??_USBCheckStdRequest+1)^0,w,c
 22346  0062FA  0A00               	xorlw	0	; case 0
 22347  0062FC  A4D8               	btfss	status,2,c
 22348  0062FE  0012               	return	
 22349                           
 22350                           ; BSR set to: 4
 22351                           ; Switch size 1, requested type "simple"
 22352                           ; Number of cases is 11, Range of values is 0 to 12
 22353                           ; switch strategies available:
 22354                           ; Name         Instructions Cycles
 22355                           ; simple_byte           34    18 (average)
 22356                           ;	Chosen strategy is simple_byte
 22357  006300  501C               	movf	??_USBCheckStdRequest^0,w,c
 22358  006302  0A00               	xorlw	0	; case 0
 22359  006304  B4D8               	btfsc	status,2,c
 22360  006306  D7C8               	goto	i2l14173
 22361  006308  0A01               	xorlw	1	; case 1
 22362  00630A  B4D8               	btfsc	status,2,c
 22363  00630C  D7C8               	goto	i2l14175
 22364  00630E  0A02               	xorlw	2	; case 3
 22365  006310  B4D8               	btfsc	status,2,c
 22366  006312  D7C5               	goto	i2l14175
 22367  006314  0A06               	xorlw	6	; case 5
 22368  006316  B4D8               	btfsc	status,2,c
 22369  006318  D7AB               	goto	i2l346
 22370  00631A  0A03               	xorlw	3	; case 6
 22371  00631C  B4D8               	btfsc	status,2,c
 22372  00631E  D7AD               	goto	i2l14161
 22373  006320  0A01               	xorlw	1	; case 7
 22374  006322  B4D8               	btfsc	status,2,c
 22375  006324  D7D7               	goto	i2l14187
 22376  006326  0A0F               	xorlw	15	; case 8
 22377  006328  B4D8               	btfsc	status,2,c
 22378  00632A  D7AD               	goto	i2l14165
 22379  00632C  0A01               	xorlw	1	; case 9
 22380  00632E  B4D8               	btfsc	status,2,c
 22381  006330  D7A7               	goto	i2l14163
 22382  006332  0A03               	xorlw	3	; case 10
 22383  006334  B4D8               	btfsc	status,2,c
 22384  006336  D7B6               	goto	i2l14177
 22385  006338  0A01               	xorlw	1	; case 11
 22386  00633A  B4D8               	btfsc	status,2,c
 22387  00633C  D7BF               	goto	i2l355
 22388  00633E  0A07               	xorlw	7	; case 12
 22389  006340  0012               	return	
 22390  006342                     __end_of_USBCheckStdRequest:
 22391                           	callstack 0
 22392                           
 22393 ;; *************** function _USBStdSetCfgHandler *****************
 22394 ;; Defined at:
 22395 ;;		line 1972 in file "mcc_generated_files/usb/usb_device.c"
 22396 ;; Parameters:    Size  Location     Type
 22397 ;;		None
 22398 ;; Auto vars:     Size  Location     Type
 22399 ;;  i               1   20[COMRAM] unsigned char 
 22400 ;; Return value:  Size  Location     Type
 22401 ;;                  1    wreg      void 
 22402 ;; Registers used:
 22403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22404 ;; Tracked objects:
 22405 ;;		On entry : 3B/4
 22406 ;;		On exit  : 0/0
 22407 ;;		Unchanged: 0/0
 22408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22409 ;;      Params:         0       0       0       0       0       0       0       0       0
 22410 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22412 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22413 ;;Total ram usage:        1 bytes
 22414 ;; Hardware stack levels used: 1
 22415 ;; Hardware stack levels required when called: 4
 22416 ;; This function calls:
 22417 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22418 ;;		i2_memset
 22419 ;; This function is called by:
 22420 ;;		_USBCheckStdRequest
 22421 ;; This function uses a non-reentrant model
 22422 ;;
 22423                           
 22424                           	psect	text116
 22425  00669A                     __ptext116:
 22426                           	callstack 0
 22427  00669A                     _USBStdSetCfgHandler:
 22428                           	callstack 12
 22429                           
 22430                           ;mcc_generated_files/usb/usb_device.c: 1974:     uint8_t i;;mcc_generated_files/usb/usb_
      +                          device.c: 1977:     inPipes[0].info.bits.busy = 1;
 22431                           
 22432                           ;incstack = 0
 22433  00669A  0100               	movlb	0	; () banked
 22434  00669C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;mcc_generated_files/usb/usb_device.c: 1980:     memset((void*)&UEP1,0x00,(2));;
 22438  00669E  0E6B               	movlw	107
 22439  0066A0  6E01               	movwf	i2memset@dest^0,c
 22440  0066A2  0E0F               	movlw	15
 22441  0066A4  6E02               	movwf	(i2memset@dest+1)^0,c
 22442  0066A6  0E00               	movlw	0
 22443  0066A8  6E04               	movwf	(i2memset@c+1)^0,c
 22444  0066AA  0E00               	movlw	0
 22445  0066AC  6E03               	movwf	i2memset@c^0,c
 22446  0066AE  0E00               	movlw	0
 22447  0066B0  6E06               	movwf	(i2memset@n+1)^0,c
 22448  0066B2  0E02               	movlw	2
 22449  0066B4  6E05               	movwf	i2memset@n^0,c
 22450  0066B6  ECBE  F02A         	call	i2_memset	;wreg free
 22451                           
 22452                           ;mcc_generated_files/usb/usb_device.c: 1983:     memset((void*)&BDT[0], 0x00, sizeof(BDT
      +                          ));
 22453  0066BA  0E00               	movlw	0
 22454  0066BC  6E01               	movwf	i2memset@dest^0,c
 22455  0066BE  0E04               	movlw	4
 22456  0066C0  6E02               	movwf	(i2memset@dest+1)^0,c
 22457  0066C2  0E00               	movlw	0
 22458  0066C4  6E04               	movwf	(i2memset@c+1)^0,c
 22459  0066C6  0E00               	movlw	0
 22460  0066C8  6E03               	movwf	i2memset@c^0,c
 22461  0066CA  0E00               	movlw	0
 22462  0066CC  6E06               	movwf	(i2memset@n+1)^0,c
 22463  0066CE  0E30               	movlw	48
 22464  0066D0  6E05               	movwf	i2memset@n^0,c
 22465  0066D2  ECBE  F02A         	call	i2_memset	;wreg free
 22466                           
 22467                           ;mcc_generated_files/usb/usb_device.c: 1986:     UCONbits.PPBRST = 1;
 22468  0066D6  8C60               	bsf	96,6,c	;volatile
 22469                           
 22470                           ;mcc_generated_files/usb/usb_device.c: 1991:  for(i = 0; i < (uint8_t)(2 +1u); i++)
 22471  0066D8  0E00               	movlw	0
 22472  0066DA  6E15               	movwf	USBStdSetCfgHandler@i^0,c
 22473  0066DC                     i2l13565:
 22474                           
 22475                           ;mcc_generated_files/usb/usb_device.c: 1992:  {;mcc_generated_files/usb/usb_device.c: 19
      +                          93:   ep_data_in[i].Val = 0u;
 22476  0066DC  0EC2               	movlw	low _ep_data_in
 22477  0066DE  2415               	addwf	USBStdSetCfgHandler@i^0,w,c
 22478  0066E0  6ED9               	movwf	fsr2l,c
 22479  0066E2  6ADA               	clrf	fsr2h,c
 22480  0066E4  0E01               	movlw	high _ep_data_in
 22481  0066E6  22DA               	addwfc	fsr2h,f,c
 22482  0066E8  0E00               	movlw	0
 22483  0066EA  6EDF               	movwf	indf2,c
 22484                           
 22485                           ;mcc_generated_files/usb/usb_device.c: 1994:         ep_data_out[i].Val = 0u;
 22486  0066EC  0EBF               	movlw	low _ep_data_out
 22487  0066EE  2415               	addwf	USBStdSetCfgHandler@i^0,w,c
 22488  0066F0  6ED9               	movwf	fsr2l,c
 22489  0066F2  6ADA               	clrf	fsr2h,c
 22490  0066F4  0E01               	movlw	high _ep_data_out
 22491  0066F6  22DA               	addwfc	fsr2h,f,c
 22492  0066F8  0E00               	movlw	0
 22493  0066FA  6EDF               	movwf	indf2,c
 22494                           
 22495                           ;mcc_generated_files/usb/usb_device.c: 1995:  }
 22496  0066FC  2A15               	incf	USBStdSetCfgHandler@i^0,f,c
 22497  0066FE  0E02               	movlw	2
 22498  006700  6415               	cpfsgt	USBStdSetCfgHandler@i^0,c
 22499  006702  D7EC               	goto	i2l13565
 22500                           
 22501                           ;mcc_generated_files/usb/usb_device.c: 1998:     memset((void*)&USBAlternateInterface,0x
      +                          00,2);
 22502  006704  0EE3               	movlw	low _USBAlternateInterface
 22503  006706  6E01               	movwf	i2memset@dest^0,c
 22504  006708  0E01               	movlw	high _USBAlternateInterface
 22505  00670A  6E02               	movwf	(i2memset@dest+1)^0,c
 22506  00670C  0E00               	movlw	0
 22507  00670E  6E04               	movwf	(i2memset@c+1)^0,c
 22508  006710  0E00               	movlw	0
 22509  006712  6E03               	movwf	i2memset@c^0,c
 22510  006714  0E00               	movlw	0
 22511  006716  6E06               	movwf	(i2memset@n+1)^0,c
 22512  006718  0E02               	movlw	2
 22513  00671A  6E05               	movwf	i2memset@n^0,c
 22514  00671C  ECBE  F02A         	call	i2_memset	;wreg free
 22515                           
 22516                           ;mcc_generated_files/usb/usb_device.c: 2001:     UCONbits.PPBRST = 0;
 22517  006720  9C60               	bcf	96,6,c	;volatile
 22518                           
 22519                           ;mcc_generated_files/usb/usb_device.c: 2003:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)&
      +                          BDT[2];
 22520  006722  0E08               	movlw	8
 22521  006724  0100               	movlb	0	; () banked
 22522  006726  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 22523  006728  0E04               	movlw	4
 22524  00672A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22525                           
 22526                           ; BSR set to: 0
 22527                           ;mcc_generated_files/usb/usb_device.c: 2006:     pBDTEntryEP0OutCurrent = (volatile BDT_
      +                          ENTRY*)&BDT[0];
 22528  00672C  0E00               	movlw	0
 22529  00672E  6FC6               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 22530  006730  0E04               	movlw	4
 22531  006732  6FC7               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 22532                           
 22533                           ; BSR set to: 0
 22534                           ;mcc_generated_files/usb/usb_device.c: 2007:     pBDTEntryEP0OutNext = pBDTEntryEP0OutCu
      +                          rrent;
 22535  006734  C0C6  F05B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22536  006738  C0C7  F05C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22537                           
 22538                           ; BSR set to: 0
 22539                           ;mcc_generated_files/usb/usb_device.c: 2010:     USBActiveConfiguration = SetupPkt.bConf
      +                          igurationValue;
 22540  00673C  C432 F0D2          	movff	1074,_USBActiveConfiguration	;volatile
 22541                           
 22542                           ; BSR set to: 0
 22543                           ;mcc_generated_files/usb/usb_device.c: 2013:     if(USBActiveConfiguration == 0)
 22544  006740  51D2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 22545  006742  A4D8               	btfss	status,2,c
 22546  006744  D003               	goto	i2l13587
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;mcc_generated_files/usb/usb_device.c: 2014:     {;mcc_generated_files/usb/usb_device.c:
      +                           2016:         USBDeviceState = ADDRESS_STATE;
 22550  006746  0E10               	movlw	16
 22551  006748  6E5D               	movwf	_USBDeviceState^0,c	;volatile
 22552                           
 22553                           ;mcc_generated_files/usb/usb_device.c: 2017:     }
 22554  00674A  0012               	return	
 22555  00674C                     i2l13587:
 22556                           
 22557                           ; BSR set to: 0
 22558                           ;mcc_generated_files/usb/usb_device.c: 2019:     {;mcc_generated_files/usb/usb_device.c:
      +                           2021:         USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_CONFIGURED,(void*)&USBAc
      +                          tiveConfiguration,1);
 22559  00674C  0E00               	movlw	0
 22560  00674E  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 22561  006750  0E01               	movlw	1
 22562  006752  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 22563  006754  0ED2               	movlw	low _USBActiveConfiguration
 22564  006756  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 22565  006758  6A10               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 22566  00675A  0E00               	movlw	0
 22567  00675C  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 22568  00675E  0E01               	movlw	1
 22569  006760  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 22570  006762  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22571                           
 22572                           ;mcc_generated_files/usb/usb_device.c: 2026:         USBDeviceState = CONFIGURED_STATE;
 22573  006766  0E20               	movlw	32
 22574  006768  6E5D               	movwf	_USBDeviceState^0,c	;volatile
 22575  00676A  0012               	return		;funcret
 22576  00676C                     __end_of_USBStdSetCfgHandler:
 22577                           	callstack 0
 22578                           
 22579 ;; *************** function i2_memset *****************
 22580 ;; Defined at:
 22581 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 22582 ;; Parameters:    Size  Location     Type
 22583 ;;  dest            2    0[COMRAM] PTR void 
 22584 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), USBCommandFetch@readTokens(64), 
 22585 ;;		 -> readBuffer(32), fila(640), writeBuffer(32), USBAlternateInterface(2), 
 22586 ;;		 -> BDT(48), UEP1(1), 
 22587 ;;  c               2    2[COMRAM] int 
 22588 ;;  n               2    4[COMRAM] unsigned int 
 22589 ;; Auto vars:     Size  Location     Type
 22590 ;;  s               2   10[COMRAM] PTR unsigned char 
 22591 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), USBCommandFetch@readTokens(64), 
 22592 ;;		 -> readBuffer(32), fila(640), writeBuffer(32), USBAlternateInterface(2), 
 22593 ;;		 -> BDT(48), UEP1(1), 
 22594 ;;  k               2    8[COMRAM] unsigned int 
 22595 ;; Return value:  Size  Location     Type
 22596 ;;                  2    0[COMRAM] PTR void 
 22597 ;; Registers used:
 22598 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22599 ;; Tracked objects:
 22600 ;;		On entry : 0/0
 22601 ;;		On exit  : 0/0
 22602 ;;		Unchanged: 0/0
 22603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22604 ;;      Params:         6       0       0       0       0       0       0       0       0
 22605 ;;      Locals:         4       0       0       0       0       0       0       0       0
 22606 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22607 ;;      Totals:        12       0       0       0       0       0       0       0       0
 22608 ;;Total ram usage:       12 bytes
 22609 ;; Hardware stack levels used: 1
 22610 ;; This function calls:
 22611 ;;		Nothing
 22612 ;; This function is called by:
 22613 ;;		_USBStdSetCfgHandler
 22614 ;;		i2_USBDeviceInit
 22615 ;; This function uses a non-reentrant model
 22616 ;;
 22617                           
 22618                           	psect	text117
 22619  00557C                     __ptext117:
 22620                           	callstack 0
 22621  00557C                     i2_memset:
 22622                           	callstack 18
 22623                           
 22624                           ;incstack = 0
 22625  00557C  C001  F00B         	movff	i2memset@dest,i2memset@s
 22626  005580  C002  F00C         	movff	i2memset@dest+1,i2memset@s+1
 22627  005584  5005               	movf	i2memset@n^0,w,c
 22628  005586  1006               	iorwf	(i2memset@n+1)^0,w,c
 22629  005588  B4D8               	btfsc	status,2,c
 22630  00558A  0012               	return	
 22631  00558C  C00B  FFD9         	movff	i2memset@s,fsr2l
 22632  005590  C00C  FFDA         	movff	i2memset@s+1,fsr2h
 22633  005594  C003  FFDF         	movff	i2memset@c,indf2
 22634  005598  5005               	movf	i2memset@n^0,w,c
 22635  00559A  240B               	addwf	i2memset@s^0,w,c
 22636  00559C  6E07               	movwf	??i2_memset^0,c
 22637  00559E  5006               	movf	(i2memset@n+1)^0,w,c
 22638  0055A0  200C               	addwfc	(i2memset@s+1)^0,w,c
 22639  0055A2  6E08               	movwf	(??i2_memset+1)^0,c
 22640  0055A4  0EFF               	movlw	255
 22641  0055A6  2407               	addwf	??i2_memset^0,w,c
 22642  0055A8  6ED9               	movwf	fsr2l,c
 22643  0055AA  0EFF               	movlw	255
 22644  0055AC  2008               	addwfc	(??i2_memset+1)^0,w,c
 22645  0055AE  6EDA               	movwf	fsr2h,c
 22646  0055B0  C003  FFDF         	movff	i2memset@c,indf2
 22647  0055B4  5006               	movf	(i2memset@n+1)^0,w,c
 22648  0055B6  E104               	bnz	i2l13531
 22649  0055B8  0E03               	movlw	3
 22650  0055BA  5C05               	subwf	i2memset@n^0,w,c
 22651  0055BC  A0D8               	btfss	status,0,c
 22652  0055BE  0012               	return	
 22653  0055C0                     i2l13531:
 22654  0055C0  EE20 F001          	lfsr	2,1
 22655  0055C4  500B               	movf	i2memset@s^0,w,c
 22656  0055C6  26D9               	addwf	fsr2l,f,c
 22657  0055C8  500C               	movf	(i2memset@s+1)^0,w,c
 22658  0055CA  22DA               	addwfc	fsr2h,f,c
 22659  0055CC  C003  FFDF         	movff	i2memset@c,indf2
 22660  0055D0  EE20 F002          	lfsr	2,2
 22661  0055D4  500B               	movf	i2memset@s^0,w,c
 22662  0055D6  26D9               	addwf	fsr2l,f,c
 22663  0055D8  500C               	movf	(i2memset@s+1)^0,w,c
 22664  0055DA  22DA               	addwfc	fsr2h,f,c
 22665  0055DC  C003  FFDF         	movff	i2memset@c,indf2
 22666  0055E0  5005               	movf	i2memset@n^0,w,c
 22667  0055E2  240B               	addwf	i2memset@s^0,w,c
 22668  0055E4  6E07               	movwf	??i2_memset^0,c
 22669  0055E6  5006               	movf	(i2memset@n+1)^0,w,c
 22670  0055E8  200C               	addwfc	(i2memset@s+1)^0,w,c
 22671  0055EA  6E08               	movwf	(??i2_memset+1)^0,c
 22672  0055EC  0EFE               	movlw	254
 22673  0055EE  2407               	addwf	??i2_memset^0,w,c
 22674  0055F0  6ED9               	movwf	fsr2l,c
 22675  0055F2  0EFF               	movlw	255
 22676  0055F4  2008               	addwfc	(??i2_memset+1)^0,w,c
 22677  0055F6  6EDA               	movwf	fsr2h,c
 22678  0055F8  C003  FFDF         	movff	i2memset@c,indf2
 22679  0055FC  5005               	movf	i2memset@n^0,w,c
 22680  0055FE  240B               	addwf	i2memset@s^0,w,c
 22681  005600  6E07               	movwf	??i2_memset^0,c
 22682  005602  5006               	movf	(i2memset@n+1)^0,w,c
 22683  005604  200C               	addwfc	(i2memset@s+1)^0,w,c
 22684  005606  6E08               	movwf	(??i2_memset+1)^0,c
 22685  005608  0EFD               	movlw	253
 22686  00560A  2407               	addwf	??i2_memset^0,w,c
 22687  00560C  6ED9               	movwf	fsr2l,c
 22688  00560E  0EFF               	movlw	255
 22689  005610  2008               	addwfc	(??i2_memset+1)^0,w,c
 22690  005612  6EDA               	movwf	fsr2h,c
 22691  005614  C003  FFDF         	movff	i2memset@c,indf2
 22692  005618  5006               	movf	(i2memset@n+1)^0,w,c
 22693  00561A  E104               	bnz	i2l13537
 22694  00561C  0E07               	movlw	7
 22695  00561E  5C05               	subwf	i2memset@n^0,w,c
 22696  005620  A0D8               	btfss	status,0,c
 22697  005622  0012               	return	
 22698  005624                     i2l13537:
 22699  005624  EE20 F003          	lfsr	2,3
 22700  005628  500B               	movf	i2memset@s^0,w,c
 22701  00562A  26D9               	addwf	fsr2l,f,c
 22702  00562C  500C               	movf	(i2memset@s+1)^0,w,c
 22703  00562E  22DA               	addwfc	fsr2h,f,c
 22704  005630  C003  FFDF         	movff	i2memset@c,indf2
 22705  005634  5005               	movf	i2memset@n^0,w,c
 22706  005636  240B               	addwf	i2memset@s^0,w,c
 22707  005638  6E07               	movwf	??i2_memset^0,c
 22708  00563A  5006               	movf	(i2memset@n+1)^0,w,c
 22709  00563C  200C               	addwfc	(i2memset@s+1)^0,w,c
 22710  00563E  6E08               	movwf	(??i2_memset+1)^0,c
 22711  005640  0EFC               	movlw	252
 22712  005642  2407               	addwf	??i2_memset^0,w,c
 22713  005644  6ED9               	movwf	fsr2l,c
 22714  005646  0EFF               	movlw	255
 22715  005648  2008               	addwfc	(??i2_memset+1)^0,w,c
 22716  00564A  6EDA               	movwf	fsr2h,c
 22717  00564C  C003  FFDF         	movff	i2memset@c,indf2
 22718  005650  5006               	movf	(i2memset@n+1)^0,w,c
 22719  005652  E104               	bnz	i2l13543
 22720  005654  0E09               	movlw	9
 22721  005656  5C05               	subwf	i2memset@n^0,w,c
 22722  005658  A0D8               	btfss	status,0,c
 22723  00565A  0012               	return	
 22724  00565C                     i2l13543:
 22725  00565C  C00B  F007         	movff	i2memset@s,??i2_memset
 22726  005660  C00C  F008         	movff	i2memset@s+1,??i2_memset+1
 22727  005664  1E07               	comf	??i2_memset^0,f,c
 22728  005666  1E08               	comf	(??i2_memset+1)^0,f,c
 22729  005668  4A07               	infsnz	??i2_memset^0,f,c
 22730  00566A  2A08               	incf	(??i2_memset+1)^0,f,c
 22731  00566C  0E03               	movlw	3
 22732  00566E  1407               	andwf	??i2_memset^0,w,c
 22733  005670  6E09               	movwf	i2memset@k^0,c
 22734  005672  6A0A               	clrf	(i2memset@k+1)^0,c
 22735  005674  5009               	movf	i2memset@k^0,w,c
 22736  005676  260B               	addwf	i2memset@s^0,f,c
 22737  005678  500A               	movf	(i2memset@k+1)^0,w,c
 22738  00567A  220C               	addwfc	(i2memset@s+1)^0,f,c
 22739  00567C  5009               	movf	i2memset@k^0,w,c
 22740  00567E  5E05               	subwf	i2memset@n^0,f,c
 22741  005680  500A               	movf	(i2memset@k+1)^0,w,c
 22742  005682  5A06               	subwfb	(i2memset@n+1)^0,f,c
 22743  005684  0EFC               	movlw	252
 22744  005686  1605               	andwf	i2memset@n^0,f,c
 22745  005688  0EFF               	movlw	255
 22746  00568A  1606               	andwf	(i2memset@n+1)^0,f,c
 22747  00568C  D00B               	goto	i2l13551
 22748  00568E                     i2l13545:
 22749  00568E  C00B  FFD9         	movff	i2memset@s,fsr2l
 22750  005692  C00C  FFDA         	movff	i2memset@s+1,fsr2h
 22751  005696  C003  FFDF         	movff	i2memset@c,indf2
 22752  00569A  0605               	decf	i2memset@n^0,f,c
 22753  00569C  A0D8               	btfss	status,0,c
 22754  00569E  0606               	decf	(i2memset@n+1)^0,f,c
 22755  0056A0  4A0B               	infsnz	i2memset@s^0,f,c
 22756  0056A2  2A0C               	incf	(i2memset@s+1)^0,f,c
 22757  0056A4                     i2l13551:
 22758  0056A4  5005               	movf	i2memset@n^0,w,c
 22759  0056A6  1006               	iorwf	(i2memset@n+1)^0,w,c
 22760  0056A8  B4D8               	btfsc	status,2,c
 22761  0056AA  0012               	return	
 22762  0056AC  D7F0               	goto	i2l13545
 22763  0056AE                     __end_ofi2_memset:
 22764                           	callstack 0
 22765                           
 22766 ;; *************** function _USBStdGetStatusHandler *****************
 22767 ;; Defined at:
 22768 ;;		line 2133 in file "mcc_generated_files/usb/usb_device.c"
 22769 ;; Parameters:    Size  Location     Type
 22770 ;;		None
 22771 ;; Auto vars:     Size  Location     Type
 22772 ;;  p               2    2[COMRAM] PTR struct __BDT
 22773 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 22774 ;; Return value:  Size  Location     Type
 22775 ;;                  1    wreg      void 
 22776 ;; Registers used:
 22777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22778 ;; Tracked objects:
 22779 ;;		On entry : 3B/4
 22780 ;;		On exit  : 3F/0
 22781 ;;		Unchanged: 0/0
 22782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22783 ;;      Params:         0       0       0       0       0       0       0       0       0
 22784 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22785 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22786 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22787 ;;Total ram usage:        4 bytes
 22788 ;; Hardware stack levels used: 1
 22789 ;; This function calls:
 22790 ;;		Nothing
 22791 ;; This function is called by:
 22792 ;;		_USBCheckStdRequest
 22793 ;; This function uses a non-reentrant model
 22794 ;;
 22795                           
 22796                           	psect	text118
 22797  006E30                     __ptext118:
 22798                           	callstack 0
 22799  006E30                     _USBStdGetStatusHandler:
 22800                           	callstack 16
 22801                           
 22802                           ;mcc_generated_files/usb/usb_device.c: 2135:     CtrlTrfData[0] = 0;
 22803                           
 22804                           ;incstack = 0
 22805  006E30  0E00               	movlw	0
 22806  006E32  0104               	movlb	4	; () banked
 22807  006E34  6F38               	movwf	56,b	;volatile
 22808                           
 22809                           ;mcc_generated_files/usb/usb_device.c: 2136:     CtrlTrfData[1] = 0;
 22810  006E36  0E00               	movlw	0
 22811  006E38  6F39               	movwf	57,b	;volatile
 22812                           
 22813                           ;mcc_generated_files/usb/usb_device.c: 2138:     switch(SetupPkt.Recipient)
 22814  006E3A  D037               	goto	i2l8919
 22815  006E3C                     i2l284:
 22816                           
 22817                           ; BSR set to: 4
 22818                           ;mcc_generated_files/usb/usb_device.c: 2141:             inPipes[0].info.bits.busy = 1;
 22819  006E3C  0100               	movlb	0	; () banked
 22820  006E3E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22821                           
 22822                           ; BSR set to: 0
 22823                           ;mcc_generated_files/usb/usb_device.c: 2151:             if(RemoteWakeup == 1)
 22824                           
 22825                           ;mcc_generated_files/usb/usb_device.c: 2146:             if(0 == 1)
 22826  006E40  0101               	movlb	1	; () banked
 22827  006E42  05E2               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 22828  006E44  A4D8               	btfss	status,2,c
 22829  006E46  D043               	goto	i2l287
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;mcc_generated_files/usb/usb_device.c: 2152:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2153:                 CtrlTrfData[0]|=0x02;
 22833  006E48  0104               	movlb	4	; () banked
 22834  006E4A  8338               	bsf	56,1,b	;volatile
 22835  006E4C  D040               	goto	i2l287
 22836  006E4E                     i2l288:
 22837                           
 22838                           ; BSR set to: 4
 22839                           ;mcc_generated_files/usb/usb_device.c: 2157:             inPipes[0].info.bits.busy = 1;
 22840  006E4E  0100               	movlb	0	; () banked
 22841  006E50  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22842                           
 22843                           ;mcc_generated_files/usb/usb_device.c: 2158:             break;
 22844  006E52  D03D               	goto	i2l287
 22845  006E54                     i2l289:
 22846                           
 22847                           ; BSR set to: 4
 22848                           ;mcc_generated_files/usb/usb_device.c: 2160:             inPipes[0].info.bits.busy = 1;
 22849  006E54  0100               	movlb	0	; () banked
 22850  006E56  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22851                           
 22852                           ;mcc_generated_files/usb/usb_device.c: 2164:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2165:                 BDT_ENTRY *p;;mcc_generated_files/usb/usb_device.c: 2167:
      +                                           if(SetupPkt.EPDir == 0)
 22853  006E58  0104               	movlb	4	; () banked
 22854  006E5A  BF34               	btfsc	52,7,b	;volatile
 22855  006E5C  D00C               	goto	i2l8909
 22856                           
 22857                           ; BSR set to: 4
 22858                           ;mcc_generated_files/usb/usb_device.c: 2168:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2169:                     p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 22859  006E5E  5134               	movf	52,w,b	;volatile
 22860  006E60  0B0F               	andlw	15
 22861  006E62  6E01               	movwf	??_USBStdGetStatusHandler^0,c
 22862  006E64  5001               	movf	??_USBStdGetStatusHandler^0,w,c
 22863  006E66  0D02               	mullw	2
 22864  006E68  0EAE               	movlw	low _pBDTEntryOut
 22865  006E6A  24F3               	addwf	243,w,c
 22866  006E6C  6ED9               	movwf	fsr2l,c
 22867  006E6E  0E02               	movlw	high _pBDTEntryOut
 22868  006E70  20F4               	addwfc	prodh,w,c
 22869  006E72  6EDA               	movwf	fsr2h,c
 22870  006E74  D007               	goto	L24
 22871  006E76                     i2l8909:
 22872                           
 22873                           ; BSR set to: 4
 22874                           ;mcc_generated_files/usb/usb_device.c: 2172:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2173:                     p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 22875  006E76  5134               	movf	52,w,b	;volatile
 22876  006E78  0B0F               	andlw	15
 22877  006E7A  0D02               	mullw	2
 22878  006E7C  50F3               	movf	243,w,c
 22879  006E7E  0FB6               	addlw	low _pBDTEntryIn
 22880  006E80  6ED9               	movwf	fsr2l,c
 22881  006E82  6ADA               	clrf	fsr2h,c
 22882  006E84                     L24:
 22883  006E84  CFDE F003          	movff	postinc2,USBStdGetStatusHandler@p
 22884  006E88  CFDD F004          	movff	postdec2,USBStdGetStatusHandler@p+1
 22885                           
 22886                           ; BSR set to: 4
 22887                           ;mcc_generated_files/usb/usb_device.c: 2176:                 if((p->STAT.UOWN == 1) && (
      +                          p->STAT.BSTALL == 1))
 22888  006E8C  C003  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22889  006E90  C004  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22890  006E94  AEDF               	btfss	indf2,7,c
 22891  006E96  D01B               	goto	i2l287
 22892                           
 22893                           ; BSR set to: 4
 22894  006E98  C003  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22895  006E9C  C004  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22896  006EA0  A4DF               	btfss	indf2,2,c
 22897  006EA2  D015               	goto	i2l287
 22898                           
 22899                           ; BSR set to: 4
 22900                           ;mcc_generated_files/usb/usb_device.c: 2177:                     CtrlTrfData[0]=0x01;
 22901  006EA4  0E01               	movlw	1
 22902  006EA6  6F38               	movwf	56,b	;volatile
 22903  006EA8  D012               	goto	i2l287
 22904  006EAA                     i2l8919:
 22905                           
 22906                           ; BSR set to: 4
 22907  006EAA  5130               	movf	48,w,b	;volatile
 22908  006EAC  0B1F               	andlw	31
 22909  006EAE  6E01               	movwf	??_USBStdGetStatusHandler^0,c
 22910  006EB0  6A02               	clrf	(??_USBStdGetStatusHandler+1)^0,c
 22911                           
 22912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22913                           ; Switch size 1, requested type "simple"
 22914                           ; Number of cases is 1, Range of values is 0 to 0
 22915                           ; switch strategies available:
 22916                           ; Name         Instructions Cycles
 22917                           ; simple_byte            4     3 (average)
 22918                           ;	Chosen strategy is simple_byte
 22919  006EB2  5002               	movf	(??_USBStdGetStatusHandler+1)^0,w,c
 22920  006EB4  0A00               	xorlw	0	; case 0
 22921  006EB6  A4D8               	btfss	status,2,c
 22922  006EB8  D00A               	goto	i2l287
 22923                           
 22924                           ; BSR set to: 4
 22925                           ; Switch size 1, requested type "simple"
 22926                           ; Number of cases is 3, Range of values is 0 to 2
 22927                           ; switch strategies available:
 22928                           ; Name         Instructions Cycles
 22929                           ; simple_byte           10     6 (average)
 22930                           ;	Chosen strategy is simple_byte
 22931  006EBA  5001               	movf	??_USBStdGetStatusHandler^0,w,c
 22932  006EBC  0A00               	xorlw	0	; case 0
 22933  006EBE  B4D8               	btfsc	status,2,c
 22934  006EC0  D7BD               	goto	i2l284
 22935  006EC2  0A01               	xorlw	1	; case 1
 22936  006EC4  B4D8               	btfsc	status,2,c
 22937  006EC6  D7C3               	goto	i2l288
 22938  006EC8  0A03               	xorlw	3	; case 2
 22939  006ECA  B4D8               	btfsc	status,2,c
 22940  006ECC  D7C3               	goto	i2l289
 22941  006ECE                     i2l287:
 22942                           
 22943                           ;mcc_generated_files/usb/usb_device.c: 2182:     if(inPipes[0].info.bits.busy == 1)
 22944  006ECE  0100               	movlb	0	; () banked
 22945  006ED0  AFB3               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 22946  006ED2  0012               	return	
 22947                           
 22948                           ; BSR set to: 0
 22949                           ;mcc_generated_files/usb/usb_device.c: 2183:     {;mcc_generated_files/usb/usb_device.c:
      +                           2184:         inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 22950  006ED4  0E38               	movlw	56
 22951  006ED6  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 22952  006ED8  0E04               	movlw	4
 22953  006EDA  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22954                           
 22955                           ; BSR set to: 0
 22956                           ;mcc_generated_files/usb/usb_device.c: 2185:         inPipes[0].info.bits.ctrl_trf_mem =
      +                           0x01;
 22957  006EDC  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22958                           
 22959                           ; BSR set to: 0
 22960                           ;mcc_generated_files/usb/usb_device.c: 2186:         inPipes[0].wCount.v[0] = 2;
 22961  006EDE  0E02               	movlw	2
 22962  006EE0  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22963                           
 22964                           ; BSR set to: 0
 22965  006EE2  0012               	return		;funcret
 22966  006EE4                     __end_of_USBStdGetStatusHandler:
 22967                           	callstack 0
 22968                           
 22969 ;; *************** function _USBStdGetDscHandler *****************
 22970 ;; Defined at:
 22971 ;;		line 2047 in file "mcc_generated_files/usb/usb_device.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;		None
 22974 ;; Auto vars:     Size  Location     Type
 22975 ;;		None
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  1    wreg      void 
 22978 ;; Registers used:
 22979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 22980 ;; Tracked objects:
 22981 ;;		On entry : 3B/4
 22982 ;;		On exit  : 3B/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0
 22986 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22987 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22988 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22989 ;;Total ram usage:        2 bytes
 22990 ;; Hardware stack levels used: 1
 22991 ;; This function calls:
 22992 ;;		Nothing
 22993 ;; This function is called by:
 22994 ;;		_USBCheckStdRequest
 22995 ;; This function uses a non-reentrant model
 22996 ;;
 22997                           
 22998                           	psect	text119
 22999  005314                     __ptext119:
 23000                           	callstack 0
 23001  005314                     _USBStdGetDscHandler:
 23002                           	callstack 16
 23003                           
 23004                           ;mcc_generated_files/usb/usb_device.c: 2049:     if(SetupPkt.bmRequestType == 0x80)
 23005                           
 23006                           ; BSR set to: 0
 23007                           ;incstack = 0
 23008  005314  0E80               	movlw	128
 23009  005316  0104               	movlb	4	; () banked
 23010  005318  1930               	xorwf	48,w,b	;volatile
 23011  00531A  A4D8               	btfss	status,2,c
 23012  00531C  0012               	return	
 23013                           
 23014                           ; BSR set to: 4
 23015                           ;mcc_generated_files/usb/usb_device.c: 2050:     {;mcc_generated_files/usb/usb_device.c:
      +                           2051:         inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 23016  00531E  0EC0               	movlw	192
 23017  005320  0100               	movlb	0	; () banked
 23018  005322  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23019                           
 23020                           ;mcc_generated_files/usb/usb_device.c: 2053:         switch(SetupPkt.bDescriptorType)
 23021  005324  D07F               	goto	i2l8893
 23022  005326                     i2l8867:
 23023                           
 23024                           ; BSR set to: 4
 23025                           ;mcc_generated_files/usb/usb_device.c: 2059:                     inPipes[0].pSrc.bRom = 
      +                          (const uint8_t*)&device_dsc;
 23026  005326  0E92               	movlw	low _device_dsc
 23027  005328  0100               	movlb	0	; () banked
 23028  00532A  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 23029  00532C  51B0               	movf	_inPipes& (0+255),w,b	;volatile
 23030  00532E  A4D8               	btfss	status,2,c
 23031  005330  0E08               	movlw	high __smallconst
 23032  005332  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23033                           
 23034                           ; BSR set to: 0
 23035                           ;mcc_generated_files/usb/usb_device.c: 2061:                 inPipes[0].wCount.Val = siz
      +                          eof(device_dsc);
 23036  005334  0E00               	movlw	0
 23037  005336  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 23038  005338  0E12               	movlw	18
 23039  00533A  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23040                           
 23041                           ;mcc_generated_files/usb/usb_device.c: 2062:                 break;
 23042  00533C  0012               	return	
 23043  00533E                     i2l8871:
 23044                           
 23045                           ; BSR set to: 4
 23046                           ;mcc_generated_files/usb/usb_device.c: 2067:                 if(SetupPkt.bDscIndex < 1)
 23047  00533E  5132               	movf	50,w,b	;volatile
 23048  005340  A4D8               	btfss	status,2,c
 23049  005342  D03E               	goto	i2l8879
 23050                           
 23051                           ; BSR set to: 4
 23052                           ;mcc_generated_files/usb/usb_device.c: 2068:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2072:                         inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 23053  005344  5132               	movf	50,w,b	;volatile
 23054  005346  0F04               	addlw	low _USB_CD_Ptr
 23055  005348  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23056  00534A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23057  00534E                     	if	1	;There is more than 1 active tblptr byte
 23058  00534E  0E08               	movlw	high __smallconst
 23059  005350  6EF7               	movwf	tblptrh,c
 23060  005352                     	endif
 23061  005352                     	if	0	;tblptru may be non-zero
 23062  005352                     	endif
 23063  005352                     	if	0	;tblptru may be non-zero
 23064  005352                     	endif
 23065  005352  0009               	tblrd		*+
 23066  005354  CFF5 F0B0          	movff	tablat,_inPipes	;volatile
 23067  005358  0E08               	movlw	high __smallconst
 23068  00535A  0100               	movlb	0	; () banked
 23069  00535C  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23070                           
 23071                           ; BSR set to: 0
 23072                           ;mcc_generated_files/usb/usb_device.c: 2078:                     inPipes[0].wCount.byte.
      +                          LB = *(inPipes[0].pSrc.bRom+2);
 23073  00535E  0E02               	movlw	2
 23074  005360  25B0               	addwf	_inPipes& (0+255),w,b	;volatile
 23075  005362  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23076  005364  0E00               	movlw	0
 23077  005366  21B1               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 23078  005368  6E02               	movwf	(??_USBStdGetDscHandler+1)^0,c
 23079  00536A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23080  00536E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 23081  005372  6AF8               	clrf	tblptru,c
 23082  005374  0E07               	movlw	(high __ramtop+-1)
 23083  005376  64F7               	cpfsgt	tblptrh,c
 23084  005378  D003               	bra	i2u909_47
 23085  00537A  0008               	tblrd		*
 23086  00537C  50F5               	movf	tablat,w,c
 23087  00537E  D005               	bra	i2u909_40
 23088  005380                     i2u909_47:
 23089  005380  CFF6 FFE1          	movff	tblptrl,fsr1l
 23090  005384  CFF7 FFE2          	movff	tblptrh,fsr1h
 23091  005388  50E7               	movf	indf1,w,c
 23092  00538A                     i2u909_40:
 23093  00538A  0100               	movlb	0	; () banked
 23094  00538C  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23095                           
 23096                           ; BSR set to: 0
 23097                           ;mcc_generated_files/usb/usb_device.c: 2079:                     inPipes[0].wCount.byte.
      +                          HB = *(inPipes[0].pSrc.bRom+3);
 23098  00538E  0E03               	movlw	3
 23099  005390  25B0               	addwf	_inPipes& (0+255),w,b	;volatile
 23100  005392  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23101  005394  0E00               	movlw	0
 23102  005396  21B1               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 23103  005398  6E02               	movwf	(??_USBStdGetDscHandler+1)^0,c
 23104  00539A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23105  00539E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 23106  0053A2  6AF8               	clrf	tblptru,c
 23107  0053A4  0E07               	movlw	(high __ramtop+-1)
 23108  0053A6  64F7               	cpfsgt	tblptrh,c
 23109  0053A8  D003               	bra	i2u910_47
 23110  0053AA  0008               	tblrd		*
 23111  0053AC  50F5               	movf	tablat,w,c
 23112  0053AE  D005               	bra	i2u910_40
 23113  0053B0                     i2u910_47:
 23114  0053B0  CFF6 FFE1          	movff	tblptrl,fsr1l
 23115  0053B4  CFF7 FFE2          	movff	tblptrh,fsr1h
 23116  0053B8  50E7               	movf	indf1,w,c
 23117  0053BA                     i2u910_40:
 23118  0053BA  0100               	movlb	0	; () banked
 23119  0053BC  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 23120                           
 23121                           ;mcc_generated_files/usb/usb_device.c: 2080:                 }
 23122  0053BE  0012               	return	
 23123  0053C0                     i2l8879:
 23124                           
 23125                           ; BSR set to: 4
 23126                           ;mcc_generated_files/usb/usb_device.c: 2082:     {;mcc_generated_files/usb/usb_device.c:
      +                           2083:      inPipes[0].info.Val = 0;
 23127  0053C0  0E00               	movlw	0
 23128  0053C2  0100               	movlb	0	; () banked
 23129  0053C4  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23130  0053C6  0012               	return	
 23131  0053C8                     i2l8881:
 23132                           
 23133                           ; BSR set to: 4
 23134                           ;mcc_generated_files/usb/usb_device.c: 2090:                 if(SetupPkt.bDscIndex<3)
 23135  0053C8  0E03               	movlw	3
 23136  0053CA  6132               	cpfslt	50,b	;volatile
 23137  0053CC  D023               	goto	i2l8887
 23138                           
 23139                           ; BSR set to: 4
 23140                           ;mcc_generated_files/usb/usb_device.c: 2091:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2093:                     inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDsc
      +                          Index);
 23141  0053CE  5132               	movf	50,w,b	;volatile
 23142  0053D0  0F01               	addlw	low _USB_SD_Ptr
 23143  0053D2  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23144  0053D4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23145  0053D8                     	if	1	;There is more than 1 active tblptr byte
 23146  0053D8  0E08               	movlw	high __smallconst
 23147  0053DA  6EF7               	movwf	tblptrh,c
 23148  0053DC                     	endif
 23149  0053DC                     	if	0	;tblptru may be non-zero
 23150  0053DC                     	endif
 23151  0053DC                     	if	0	;tblptru may be non-zero
 23152  0053DC                     	endif
 23153  0053DC  0009               	tblrd		*+
 23154  0053DE  CFF5 F0B0          	movff	tablat,_inPipes	;volatile
 23155  0053E2  0E08               	movlw	high __smallconst
 23156  0053E4  0100               	movlb	0	; () banked
 23157  0053E6  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23158                           
 23159                           ; BSR set to: 0
 23160                           ;mcc_generated_files/usb/usb_device.c: 2095:                     inPipes[0].wCount.Val =
      +                           *inPipes[0].pSrc.bRom;
 23161  0053E8  C0B0  FFF6         	movff	_inPipes,tblptrl	;volatile
 23162  0053EC  C0B1  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23163  0053F0  6AF8               	clrf	tblptru,c
 23164  0053F2  0E07               	movlw	(high __ramtop+-1)
 23165  0053F4  64F7               	cpfsgt	tblptrh,c
 23166  0053F6  D003               	bra	i2u912_47
 23167  0053F8  0008               	tblrd		*
 23168  0053FA  50F5               	movf	tablat,w,c
 23169  0053FC  D005               	bra	i2u912_40
 23170  0053FE                     i2u912_47:
 23171  0053FE  CFF6 FFE1          	movff	tblptrl,fsr1l
 23172  005402  CFF7 FFE2          	movff	tblptrh,fsr1h
 23173  005406  50E7               	movf	indf1,w,c
 23174  005408                     i2u912_40:
 23175  005408  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23176  00540A  5001               	movf	??_USBStdGetDscHandler^0,w,c
 23177  00540C  0100               	movlb	0	; () banked
 23178  00540E  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23179  005410  6BB5               	clrf	(_inPipes+5)& (0+255),b	;volatile
 23180                           
 23181                           ;mcc_generated_files/usb/usb_device.c: 2096:                 }
 23182  005412  0012               	return	
 23183  005414                     i2l8887:
 23184                           
 23185                           ; BSR set to: 4
 23186                           ;mcc_generated_files/usb/usb_device.c: 2107:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2108:                     inPipes[0].info.Val = 0;
 23187  005414  0E00               	movlw	0
 23188  005416  0100               	movlb	0	; () banked
 23189  005418  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23190  00541A  0012               	return	
 23191  00541C                     i2l8889:
 23192                           
 23193                           ; BSR set to: 4
 23194                           ;mcc_generated_files/usb/usb_device.c: 2112:                 inPipes[0].info.Val = 0;
 23195  00541C  0E00               	movlw	0
 23196  00541E  0100               	movlb	0	; () banked
 23197  005420  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23198                           
 23199                           ;mcc_generated_files/usb/usb_device.c: 2113:                 break;
 23200  005422  0012               	return	
 23201  005424                     i2l8893:
 23202                           
 23203                           ; BSR set to: 0
 23204  005424  0104               	movlb	4	; () banked
 23205  005426  5133               	movf	51,w,b	;volatile
 23206  005428  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23207  00542A  6A02               	clrf	(??_USBStdGetDscHandler+1)^0,c
 23208                           
 23209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23210                           ; Switch size 1, requested type "simple"
 23211                           ; Number of cases is 1, Range of values is 0 to 0
 23212                           ; switch strategies available:
 23213                           ; Name         Instructions Cycles
 23214                           ; simple_byte            4     3 (average)
 23215                           ;	Chosen strategy is simple_byte
 23216  00542C  5002               	movf	(??_USBStdGetDscHandler+1)^0,w,c
 23217  00542E  0A00               	xorlw	0	; case 0
 23218  005430  A4D8               	btfss	status,2,c
 23219  005432  D7F4               	goto	i2l8889
 23220                           
 23221                           ; BSR set to: 4
 23222                           ; Switch size 1, requested type "simple"
 23223                           ; Number of cases is 3, Range of values is 1 to 3
 23224                           ; switch strategies available:
 23225                           ; Name         Instructions Cycles
 23226                           ; simple_byte           10     6 (average)
 23227                           ;	Chosen strategy is simple_byte
 23228  005434  5001               	movf	??_USBStdGetDscHandler^0,w,c
 23229  005436  0A01               	xorlw	1	; case 1
 23230  005438  B4D8               	btfsc	status,2,c
 23231  00543A  D775               	goto	i2l8867
 23232  00543C  0A03               	xorlw	3	; case 2
 23233  00543E  B4D8               	btfsc	status,2,c
 23234  005440  D77E               	goto	i2l8871
 23235  005442  0A01               	xorlw	1	; case 3
 23236  005444  B4D8               	btfsc	status,2,c
 23237  005446  D7C0               	goto	i2l8881
 23238  005448  D7E9               	goto	i2l8889
 23239  00544A                     __end_of_USBStdGetDscHandler:
 23240                           	callstack 0
 23241                           
 23242 ;; *************** function _USBStdFeatureReqHandler *****************
 23243 ;; Defined at:
 23244 ;;		line 2758 in file "mcc_generated_files/usb/usb_device.c"
 23245 ;; Parameters:    Size  Location     Type
 23246 ;;		None
 23247 ;; Auto vars:     Size  Location     Type
 23248 ;;  p               2   25[COMRAM] PTR struct __BDT
 23249 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 23250 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 23251 ;;		 -> UEP0(1), 
 23252 ;;  current_ep_d    1   24[COMRAM] struct .
 23253 ;; Return value:  Size  Location     Type
 23254 ;;                  1    wreg      void 
 23255 ;; Registers used:
 23256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23257 ;; Tracked objects:
 23258 ;;		On entry : 3B/4
 23259 ;;		On exit  : 3A/0
 23260 ;;		Unchanged: 0/0
 23261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23262 ;;      Params:         0       0       0       0       0       0       0       0       0
 23263 ;;      Locals:         5       0       0       0       0       0       0       0       0
 23264 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23265 ;;      Totals:         7       0       0       0       0       0       0       0       0
 23266 ;;Total ram usage:        7 bytes
 23267 ;; Hardware stack levels used: 1
 23268 ;; Hardware stack levels required when called: 4
 23269 ;; This function calls:
 23270 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23271 ;; This function is called by:
 23272 ;;		_USBCheckStdRequest
 23273 ;; This function uses a non-reentrant model
 23274 ;;
 23275                           
 23276                           	psect	text120
 23277  003FC4                     __ptext120:
 23278                           	callstack 0
 23279  003FC4                     _USBStdFeatureReqHandler:
 23280                           	callstack 12
 23281                           
 23282                           ;mcc_generated_files/usb/usb_device.c: 2760:     BDT_ENTRY *p;;mcc_generated_files/usb/u
      +                          sb_device.c: 2761:     EP_STATUS current_ep_data;;mcc_generated_files/usb/usb_device.c: 
      +                          2765:         unsigned char* pUEP;;mcc_generated_files/usb/usb_device.c: 2803:     if((S
      +                          etupPkt.bFeature == 1)&&
 23283                           
 23284                           ;incstack = 0
 23285  003FC4  0104               	movlb	4	; () banked
 23286  003FC6  0532               	decf	50,w,b	;volatile
 23287  003FC8  A4D8               	btfss	status,2,c
 23288  003FCA  D011               	goto	i2l361
 23289                           
 23290                           ; BSR set to: 4
 23291  003FCC  5130               	movf	48,w,b	;volatile
 23292  003FCE  0B1F               	andlw	31
 23293  003FD0  0900               	iorlw	0
 23294  003FD2  A4D8               	btfss	status,2,c
 23295  003FD4  D00C               	goto	i2l361
 23296                           
 23297                           ; BSR set to: 4
 23298                           ;mcc_generated_files/usb/usb_device.c: 2805:     {;mcc_generated_files/usb/usb_device.c:
      +                           2806:         inPipes[0].info.bits.busy = 1;
 23299  003FD6  0100               	movlb	0	; () banked
 23300  003FD8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23301                           
 23302                           ; BSR set to: 0
 23303                           ;mcc_generated_files/usb/usb_device.c: 2807:         if(SetupPkt.bRequest == 3)
 23304  003FDA  0E03               	movlw	3
 23305  003FDC  0104               	movlb	4	; () banked
 23306  003FDE  1931               	xorwf	49,w,b	;volatile
 23307  003FE0  A4D8               	btfss	status,2,c
 23308  003FE2  D002               	goto	i2l8941
 23309                           
 23310                           ; BSR set to: 4
 23311                           ;mcc_generated_files/usb/usb_device.c: 2808:             RemoteWakeup = 1;
 23312  003FE4  0E01               	movlw	1
 23313  003FE6  D001               	goto	L25
 23314  003FE8                     i2l8941:
 23315                           
 23316                           ; BSR set to: 4
 23317                           ;mcc_generated_files/usb/usb_device.c: 2810:             RemoteWakeup = 0;
 23318  003FE8  0E00               	movlw	0
 23319  003FEA                     L25:
 23320  003FEA  0101               	movlb	1	; () banked
 23321  003FEC  6FE2               	movwf	_RemoteWakeup& (0+255),b	;volatile
 23322  003FEE                     i2l361:
 23323                           
 23324                           ;mcc_generated_files/usb/usb_device.c: 2814:     if((SetupPkt.bFeature == 0)&&
 23325  003FEE  0104               	movlb	4	; () banked
 23326  003FF0  5132               	movf	50,w,b	;volatile
 23327  003FF2  A4D8               	btfss	status,2,c
 23328  003FF4  0012               	return	
 23329                           
 23330                           ; BSR set to: 4
 23331  003FF6  5130               	movf	48,w,b	;volatile
 23332  003FF8  0B1F               	andlw	31
 23333  003FFA  0A02               	xorlw	2
 23334  003FFC  A4D8               	btfss	status,2,c
 23335  003FFE  0012               	return	
 23336                           
 23337                           ; BSR set to: 4
 23338  004000  5134               	movf	52,w,b	;volatile
 23339  004002  0B0F               	andlw	15
 23340  004004  0900               	iorlw	0
 23341  004006  B4D8               	btfsc	status,2,c
 23342  004008  0012               	return	
 23343                           
 23344                           ; BSR set to: 4
 23345  00400A  5134               	movf	52,w,b	;volatile
 23346  00400C  0B0F               	andlw	15
 23347  00400E  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23348  004010  0E03               	movlw	3
 23349  004012  6015               	cpfslt	??_USBStdFeatureReqHandler^0,c
 23350  004014  0012               	return	
 23351                           
 23352                           ; BSR set to: 4
 23353  004016  0E20               	movlw	32
 23354  004018  185D               	xorwf	_USBDeviceState^0,w,c
 23355  00401A  A4D8               	btfss	status,2,c
 23356  00401C  0012               	return	
 23357                           
 23358                           ; BSR set to: 4
 23359                           ;mcc_generated_files/usb/usb_device.c: 2818:     {;mcc_generated_files/usb/usb_device.c:
      +                           2821:   inPipes[0].info.bits.busy = 1;
 23360  00401E  0100               	movlb	0	; () banked
 23361  004020  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23362                           
 23363                           ;mcc_generated_files/usb/usb_device.c: 2824:         if(SetupPkt.EPDir == 0)
 23364  004022  0104               	movlb	4	; () banked
 23365  004024  BF34               	btfsc	52,7,b	;volatile
 23366  004026  D018               	goto	i2l8957
 23367                           
 23368                           ; BSR set to: 4
 23369                           ;mcc_generated_files/usb/usb_device.c: 2825:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2826:             p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23370  004028  5134               	movf	52,w,b	;volatile
 23371  00402A  0B0F               	andlw	15
 23372  00402C  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23373  00402E  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 23374  004030  0D02               	mullw	2
 23375  004032  0EAE               	movlw	low _pBDTEntryOut
 23376  004034  24F3               	addwf	243,w,c
 23377  004036  6ED9               	movwf	fsr2l,c
 23378  004038  0E02               	movlw	high _pBDTEntryOut
 23379  00403A  20F4               	addwfc	prodh,w,c
 23380  00403C  6EDA               	movwf	fsr2h,c
 23381  00403E  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 23382  004042  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23383                           
 23384                           ; BSR set to: 4
 23385                           ;mcc_generated_files/usb/usb_device.c: 2827:             current_ep_data.Val = ep_data_o
      +                          ut[SetupPkt.EPNum].Val;
 23386  004046  5134               	movf	52,w,b	;volatile
 23387  004048  0B0F               	andlw	15
 23388  00404A  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23389  00404C  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23390  00404E  0EBF               	movlw	low _ep_data_out
 23391  004050  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23392  004052  6ED9               	movwf	fsr2l,c
 23393  004054  0E01               	movlw	high _ep_data_out
 23394  004056  D013               	goto	L26
 23395  004058                     i2l8957:
 23396                           
 23397                           ; BSR set to: 4
 23398                           ;mcc_generated_files/usb/usb_device.c: 2830:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2831:             p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23399  004058  5134               	movf	52,w,b	;volatile
 23400  00405A  0B0F               	andlw	15
 23401  00405C  0D02               	mullw	2
 23402  00405E  50F3               	movf	243,w,c
 23403  004060  0FB6               	addlw	low _pBDTEntryIn
 23404  004062  6ED9               	movwf	fsr2l,c
 23405  004064  6ADA               	clrf	fsr2h,c
 23406  004066  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 23407  00406A  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23408                           
 23409                           ; BSR set to: 4
 23410                           ;mcc_generated_files/usb/usb_device.c: 2832:             current_ep_data.Val = ep_data_i
      +                          n[SetupPkt.EPNum].Val;
 23411  00406E  5134               	movf	52,w,b	;volatile
 23412  004070  0B0F               	andlw	15
 23413  004072  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23414  004074  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23415  004076  0EC2               	movlw	low _ep_data_in
 23416  004078  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23417  00407A  6ED9               	movwf	fsr2l,c
 23418  00407C  0E01               	movlw	high _ep_data_in
 23419  00407E                     L26:
 23420  00407E  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 23421  004080  6EDA               	movwf	fsr2h,c
 23422  004082  50DF               	movf	indf2,w,c
 23423  004084  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data^0,c
 23424                           
 23425                           ; BSR set to: 4
 23426                           ;mcc_generated_files/usb/usb_device.c: 2839:             if(current_ep_data.bits.ping_po
      +                          ng_state == 0)
 23427  004086  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,0,c
 23428  004088  D006               	goto	i2l8965
 23429                           
 23430                           ; BSR set to: 4
 23431                           ;mcc_generated_files/usb/usb_device.c: 2840:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2841:                 p = (BDT_ENTRY*)(((uint16_t)p) & (~0x0004));
 23432  00408A  0EFB               	movlw	251
 23433  00408C  141A               	andwf	USBStdFeatureReqHandler@p^0,w,c
 23434  00408E  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 23435  004090  0EFF               	movlw	255
 23436  004092  141B               	andwf	(USBStdFeatureReqHandler@p+1)^0,w,c
 23437  004094  D004               	goto	L27
 23438  004096                     i2l8965:
 23439                           
 23440                           ; BSR set to: 4
 23441                           ;mcc_generated_files/usb/usb_device.c: 2844:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2845:                 p = (BDT_ENTRY*)(((uint16_t)p) | 0x0004);
 23442  004096  0E04               	movlw	4
 23443  004098  101A               	iorwf	USBStdFeatureReqHandler@p^0,w,c
 23444  00409A  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 23445  00409C  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 23446  00409E                     L27:
 23447  00409E  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 23448                           
 23449                           ; BSR set to: 4
 23450                           ;mcc_generated_files/usb/usb_device.c: 2851:         if(SetupPkt.EPDir == 0)
 23451  0040A0  BF34               	btfsc	52,7,b	;volatile
 23452  0040A2  D00C               	goto	i2l8971
 23453                           
 23454                           ; BSR set to: 4
 23455                           ;mcc_generated_files/usb/usb_device.c: 2852:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2853:             pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23456  0040A4  5134               	movf	52,w,b	;volatile
 23457  0040A6  0B0F               	andlw	15
 23458  0040A8  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23459  0040AA  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 23460  0040AC  0D02               	mullw	2
 23461  0040AE  0EAE               	movlw	low _pBDTEntryOut
 23462  0040B0  24F3               	addwf	243,w,c
 23463  0040B2  6ED9               	movwf	fsr2l,c
 23464  0040B4  0E02               	movlw	high _pBDTEntryOut
 23465  0040B6  20F4               	addwfc	prodh,w,c
 23466  0040B8  6EDA               	movwf	fsr2h,c
 23467  0040BA  D007               	goto	L28
 23468  0040BC                     i2l8971:
 23469                           
 23470                           ; BSR set to: 4
 23471                           ;mcc_generated_files/usb/usb_device.c: 2856:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2857:             pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23472  0040BC  5134               	movf	52,w,b	;volatile
 23473  0040BE  0B0F               	andlw	15
 23474  0040C0  0D02               	mullw	2
 23475  0040C2  50F3               	movf	243,w,c
 23476  0040C4  0FB6               	addlw	low _pBDTEntryIn
 23477  0040C6  6ED9               	movwf	fsr2l,c
 23478  0040C8  6ADA               	clrf	fsr2h,c
 23479  0040CA                     L28:
 23480  0040CA  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 23481  0040CE  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 23482                           
 23483                           ; BSR set to: 4
 23484                           ;mcc_generated_files/usb/usb_device.c: 2861:         if(SetupPkt.bRequest == 3)
 23485  0040D2  0E03               	movlw	3
 23486  0040D4  1931               	xorwf	49,w,b	;volatile
 23487  0040D6  A4D8               	btfss	status,2,c
 23488  0040D8  D02A               	goto	i2l8983
 23489                           
 23490                           ; BSR set to: 4
 23491                           ;mcc_generated_files/usb/usb_device.c: 2862:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2863:             if(p->STAT.UOWN == 1)
 23492  0040DA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23493  0040DE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23494  0040E2  AEDF               	btfss	indf2,7,c
 23495  0040E4  D017               	goto	i2l372
 23496                           
 23497                           ; BSR set to: 4
 23498                           ;mcc_generated_files/usb/usb_device.c: 2864:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2867:                 if(SetupPkt.EPDir == 0)
 23499  0040E6  BF34               	btfsc	52,7,b	;volatile
 23500  0040E8  D009               	goto	i2l8981
 23501                           
 23502                           ; BSR set to: 4
 23503                           ;mcc_generated_files/usb/usb_device.c: 2868:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2869:                     ep_data_out[SetupPkt.EPNum].bits.transfer_termina
      +                          ted = 1;
 23504  0040EA  5134               	movf	52,w,b	;volatile
 23505  0040EC  0B0F               	andlw	15
 23506  0040EE  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23507  0040F0  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23508  0040F2  0EBF               	movlw	low _ep_data_out
 23509  0040F4  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23510  0040F6  6ED9               	movwf	fsr2l,c
 23511  0040F8  0E01               	movlw	high _ep_data_out
 23512  0040FA  D008               	goto	L29
 23513  0040FC                     i2l8981:
 23514                           
 23515                           ; BSR set to: 4
 23516                           ;mcc_generated_files/usb/usb_device.c: 2872:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2873:                     ep_data_in[SetupPkt.EPNum].bits.transfer_terminat
      +                          ed = 1;
 23517  0040FC  5134               	movf	52,w,b	;volatile
 23518  0040FE  0B0F               	andlw	15
 23519  004100  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23520  004102  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23521  004104  0EC2               	movlw	low _ep_data_in
 23522  004106  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23523  004108  6ED9               	movwf	fsr2l,c
 23524  00410A  0E01               	movlw	high _ep_data_in
 23525  00410C                     L29:
 23526  00410C  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 23527  00410E  6EDA               	movwf	fsr2h,c
 23528  004110  0101               	movlb	1	; () banked
 23529  004112  82DF               	bsf	indf2,1,c
 23530  004114                     i2l372:
 23531                           
 23532                           ;mcc_generated_files/usb/usb_device.c: 2878:             p->STAT.Val |= 0x04;
 23533  004114  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23534  004118  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23535  00411C  0E00               	movlw	0
 23536  00411E  84DB               	bsf	plusw2,2,c
 23537                           
 23538                           ;mcc_generated_files/usb/usb_device.c: 2879:             p->STAT.Val |= 0x80;
 23539  004120  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23540  004124  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23541  004128  0E00               	movlw	0
 23542  00412A  8EDB               	bsf	plusw2,7,c
 23543                           
 23544                           ;mcc_generated_files/usb/usb_device.c: 2880:         }
 23545  00412C  0012               	return	
 23546  00412E                     i2l8983:
 23547                           
 23548                           ; BSR set to: 4
 23549                           ;mcc_generated_files/usb/usb_device.c: 2882:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2886:                 p = (BDT_ENTRY*)(((uint16_t)p) ^ 0x0004);
 23550  00412E  0E04               	movlw	4
 23551  004130  181A               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 23552  004132  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 23553  004134  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 23554  004136  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 23555                           
 23556                           ; BSR set to: 4
 23557                           ;mcc_generated_files/usb/usb_device.c: 2888:                 if(p->STAT.UOWN == 1)
 23558  004138  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23559  00413C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23560  004140  AEDF               	btfss	indf2,7,c
 23561  004142  D01B               	goto	i2l8993
 23562                           
 23563                           ; BSR set to: 4
 23564                           ;mcc_generated_files/usb/usb_device.c: 2889:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2892:                     p->STAT.Val &= (~0x80);
 23565  004144  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23566  004148  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23567  00414C  0E7F               	movlw	127
 23568  00414E  16DF               	andwf	indf2,f,c
 23569                           
 23570                           ; BSR set to: 4
 23571                           ;mcc_generated_files/usb/usb_device.c: 2893:                     p->STAT.Val |= 0x40;
 23572  004150  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23573  004154  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23574  004158  0E00               	movlw	0
 23575  00415A  8CDB               	bsf	plusw2,6,c
 23576                           
 23577                           ; BSR set to: 4
 23578                           ;mcc_generated_files/usb/usb_device.c: 2894:                     USER_USB_CALLBACK_EVENT
      +                          _HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATED,p,sizeof(p));
 23579  00415C  0E00               	movlw	0
 23580  00415E  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 23581  004160  0E05               	movlw	5
 23582  004162  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 23583  004164  C01A  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23584  004168  C01B  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23585  00416C  0E00               	movlw	0
 23586  00416E  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 23587  004170  0E02               	movlw	2
 23588  004172  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 23589  004174  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23590                           
 23591                           ;mcc_generated_files/usb/usb_device.c: 2895:                 }
 23592  004178  D006               	goto	i2l8995
 23593  00417A                     i2l8993:
 23594                           
 23595                           ; BSR set to: 4
 23596                           ;mcc_generated_files/usb/usb_device.c: 2897:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2899:      p->STAT.Val |= 0x40;
 23597  00417A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23598  00417E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23599  004182  0E00               	movlw	0
 23600  004184  8CDB               	bsf	plusw2,6,c
 23601  004186                     i2l8995:
 23602                           
 23603                           ;mcc_generated_files/usb/usb_device.c: 2904:                 p = (BDT_ENTRY*)(((uint16_t
      +                          )p) ^ 0x0004);
 23604  004186  0E04               	movlw	4
 23605  004188  181A               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 23606  00418A  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 23607  00418C  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 23608  00418E  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 23609                           
 23610                           ;mcc_generated_files/usb/usb_device.c: 2910:                 if((current_ep_data.bits.tr
      +                          ansfer_terminated != 0) || (p->STAT.UOWN == 1))
 23611  004190  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,1,c
 23612  004192  D006               	goto	i2u934_40
 23613  004194  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23614  004198  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23615  00419C  AEDF               	btfss	indf2,7,c
 23616  00419E  D02D               	goto	i2l9009
 23617  0041A0                     i2u934_40:
 23618                           
 23619                           ;mcc_generated_files/usb/usb_device.c: 2911:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2912:                     if(SetupPkt.EPDir == 0)
 23620  0041A0  0104               	movlb	4	; () banked
 23621  0041A2  BF34               	btfsc	52,7,b	;volatile
 23622  0041A4  D009               	goto	i2l9003
 23623                           
 23624                           ; BSR set to: 4
 23625                           ;mcc_generated_files/usb/usb_device.c: 2913:                     {;mcc_generated_files/u
      +                          sb/usb_device.c: 2914:                         ep_data_out[SetupPkt.EPNum].bits.transfer
      +                          _terminated = 0;
 23626  0041A6  5134               	movf	52,w,b	;volatile
 23627  0041A8  0B0F               	andlw	15
 23628  0041AA  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23629  0041AC  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23630  0041AE  0EBF               	movlw	low _ep_data_out
 23631  0041B0  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23632  0041B2  6ED9               	movwf	fsr2l,c
 23633  0041B4  0E01               	movlw	high _ep_data_out
 23634  0041B6  D008               	goto	L30
 23635  0041B8                     i2l9003:
 23636                           
 23637                           ; BSR set to: 4
 23638                           ;mcc_generated_files/usb/usb_device.c: 2917:                     {;mcc_generated_files/u
      +                          sb/usb_device.c: 2918:                         ep_data_in[SetupPkt.EPNum].bits.transfer_
      +                          terminated = 0;
 23639  0041B8  5134               	movf	52,w,b	;volatile
 23640  0041BA  0B0F               	andlw	15
 23641  0041BC  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23642  0041BE  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23643  0041C0  0EC2               	movlw	low _ep_data_in
 23644  0041C2  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23645  0041C4  6ED9               	movwf	fsr2l,c
 23646  0041C6  0E01               	movlw	high _ep_data_in
 23647  0041C8                     L30:
 23648  0041C8  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 23649  0041CA  6EDA               	movwf	fsr2h,c
 23650  0041CC  0101               	movlb	1	; () banked
 23651  0041CE  92DF               	bcf	indf2,1,c
 23652                           
 23653                           ; BSR set to: 1
 23654                           ;mcc_generated_files/usb/usb_device.c: 2921:                     p->STAT.Val &= ~(0x80 |
      +                           0x40 | 0x04);
 23655  0041D0  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23656  0041D4  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23657  0041D8  0E3B               	movlw	59
 23658  0041DA  16DF               	andwf	indf2,f,c
 23659                           
 23660                           ; BSR set to: 1
 23661                           ;mcc_generated_files/usb/usb_device.c: 2924:                     USER_USB_CALLBACK_EVENT
      +                          _HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATED,p,sizeof(p));
 23662  0041DC  0E00               	movlw	0
 23663  0041DE  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 23664  0041E0  0E05               	movlw	5
 23665  0041E2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 23666  0041E4  C01A  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23667  0041E8  C01B  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23668  0041EC  0E00               	movlw	0
 23669  0041EE  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 23670  0041F0  0E02               	movlw	2
 23671  0041F2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 23672  0041F4  EC24  F03C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23673                           
 23674                           ;mcc_generated_files/usb/usb_device.c: 2925:                 }
 23675  0041F8  D006               	goto	i2l9011
 23676  0041FA                     i2l9009:
 23677                           
 23678                           ;mcc_generated_files/usb/usb_device.c: 2927:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2929:                     p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23679  0041FA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23680  0041FE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23681  004202  0E3B               	movlw	59
 23682  004204  16DF               	andwf	indf2,f,c
 23683  004206                     i2l9011:
 23684                           
 23685                           ;mcc_generated_files/usb/usb_device.c: 2977:                 pUEP = (unsigned char*)(&UE
      +                          P0+SetupPkt.EPNum);
 23686  004206  0104               	movlb	4	; () banked
 23687  004208  5134               	movf	52,w,b	;volatile
 23688  00420A  0B0F               	andlw	15
 23689  00420C  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23690  00420E  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23691  004210  0E6A               	movlw	106
 23692  004212  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23693  004214  6E17               	movwf	USBStdFeatureReqHandler@pUEP^0,c
 23694  004216  0E0F               	movlw	15
 23695  004218  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 23696  00421A  6E18               	movwf	(USBStdFeatureReqHandler@pUEP+1)^0,c
 23697                           
 23698                           ; BSR set to: 4
 23699                           ;mcc_generated_files/usb/usb_device.c: 2981:             *pUEP &= ~0x0001;
 23700  00421C  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 23701  004220  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 23702  004224  0EFE               	movlw	254
 23703  004226  16DF               	andwf	indf2,f,c
 23704  004228  0012               	return		;funcret
 23705  00422A                     __end_of_USBStdFeatureReqHandler:
 23706                           	callstack 0
 23707                           
 23708 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 23709 ;; Defined at:
 23710 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;  event           2   12[COMRAM] enum E46
 23713 ;;  pdata           2   14[COMRAM] PTR void 
 23714 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 23715 ;;		 -> BDT(48), 
 23716 ;;  size            2   16[COMRAM] unsigned short 
 23717 ;; Auto vars:     Size  Location     Type
 23718 ;;		None
 23719 ;; Return value:  Size  Location     Type
 23720 ;;                  1    wreg      _Bool 
 23721 ;; Registers used:
 23722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23723 ;; Tracked objects:
 23724 ;;		On entry : 0/0
 23725 ;;		On exit  : 0/0
 23726 ;;		Unchanged: 0/0
 23727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23728 ;;      Params:         6       0       0       0       0       0       0       0       0
 23729 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23730 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23731 ;;      Totals:         8       0       0       0       0       0       0       0       0
 23732 ;;Total ram usage:        8 bytes
 23733 ;; Hardware stack levels used: 1
 23734 ;; Hardware stack levels required when called: 3
 23735 ;; This function calls:
 23736 ;;		_CDCInitEP
 23737 ;;		_USBCheckCDCRequest
 23738 ;; This function is called by:
 23739 ;;		_USBDeviceTasks
 23740 ;;		_USBStdSetCfgHandler
 23741 ;;		_USBSuspend
 23742 ;;		_USBWakeFromSuspend
 23743 ;;		_USBCtrlTrfSetupHandler
 23744 ;;		_USBCheckStdRequest
 23745 ;;		_USBStdFeatureReqHandler
 23746 ;; This function uses a non-reentrant model
 23747 ;;
 23748                           
 23749                           	psect	text121
 23750  007848                     __ptext121:
 23751                           	callstack 0
 23752  007848                     _USER_USB_CALLBACK_EVENT_HANDLER:
 23753                           	callstack 16
 23754                           
 23755                           ;mcc_generated_files/usb/usb_device_events.c: 49: _Bool USER_USB_CALLBACK_EVENT_HANDLER(
      +                          USB_EVENT event, void *pdata, uint16_t size);mcc_generated_files/usb/usb_device_events.c
      +                          : 50: {;mcc_generated_files/usb/usb_device_events.c: 51:     switch( (int) event )
 23756                           
 23757                           ;incstack = 0
 23758  007848  D006               	goto	i2l8047
 23759  00784A                     i2l8041:
 23760                           
 23761                           ;mcc_generated_files/usb/usb_device_events.c: 76:             CDCInitEP();
 23762  00784A  EC2E  F03B         	call	_CDCInitEP	;wreg free
 23763                           
 23764                           ;mcc_generated_files/usb/usb_device_events.c: 77:             break;
 23765  00784E  0012               	return	
 23766  007850                     i2l8043:
 23767                           
 23768                           ;mcc_generated_files/usb/usb_device_events.c: 85:             USBCheckCDCRequest();
 23769  007850  EC4B  F035         	call	_USBCheckCDCRequest	;wreg free
 23770                           
 23771                           ;mcc_generated_files/usb/usb_device_events.c: 86:             break;
 23772  007854  0012               	return	
 23773  007856                     i2l8047:
 23774  007856  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 23775  00785A  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 23776                           
 23777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23778                           ; Switch size 1, requested type "simple"
 23779                           ; Number of cases is 2, Range of values is 0 to 127
 23780                           ; switch strategies available:
 23781                           ; Name         Instructions Cycles
 23782                           ; simple_byte            7     4 (average)
 23783                           ;	Chosen strategy is simple_byte
 23784  00785E  5014               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)^0,w,c
 23785  007860  0A00               	xorlw	0	; case 0
 23786  007862  B4D8               	btfsc	status,2,c
 23787  007864  D004               	goto	i2l16033
 23788  007866  0A7F               	xorlw	127	; case 127
 23789  007868  A4D8               	btfss	status,2,c
 23790  00786A  0012               	return	
 23791  00786C  D018               	goto	i2l16035
 23792  00786E                     i2l16033:
 23793                           
 23794                           ; Switch size 1, requested type "simple"
 23795                           ; Number of cases is 8, Range of values is 1 to 117
 23796                           ; switch strategies available:
 23797                           ; Name         Instructions Cycles
 23798                           ; simple_byte           25    13 (average)
 23799                           ;	Chosen strategy is simple_byte
 23800  00786E  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 23801  007870  0A01               	xorlw	1	; case 1
 23802  007872  B4D8               	btfsc	status,2,c
 23803  007874  D7EA               	goto	i2l8041
 23804  007876  0A03               	xorlw	3	; case 2
 23805  007878  B4D8               	btfsc	status,2,c
 23806  00787A  0012               	return	
 23807  00787C  0A01               	xorlw	1	; case 3
 23808  00787E  B4D8               	btfsc	status,2,c
 23809  007880  D7E7               	goto	i2l8043
 23810  007882  0A06               	xorlw	6	; case 5
 23811  007884  B4D8               	btfsc	status,2,c
 23812  007886  0012               	return	
 23813  007888  0A77               	xorlw	119	; case 114
 23814  00788A  B4D8               	btfsc	status,2,c
 23815  00788C  0012               	return	
 23816  00788E  0A01               	xorlw	1	; case 115
 23817  007890  B4D8               	btfsc	status,2,c
 23818  007892  0012               	return	
 23819  007894  0A07               	xorlw	7	; case 116
 23820  007896  B4D8               	btfsc	status,2,c
 23821  007898  0012               	return	
 23822  00789A  0A01               	xorlw	1	; case 117
 23823  00789C  0012               	return	
 23824  00789E                     i2l16035:
 23825                           
 23826                           ; Switch size 1, requested type "simple"
 23827                           ; Number of cases is 1, Range of values is 255 to 255
 23828                           ; switch strategies available:
 23829                           ; Name         Instructions Cycles
 23830                           ; simple_byte            4     3 (average)
 23831                           ;	Chosen strategy is simple_byte
 23832  00789E  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 23833  0078A0  0AFF               	xorlw	255	; case 255
 23834  0078A2  0012               	return	
 23835  0078A4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 23836                           	callstack 0
 23837                           
 23838 ;; *************** function _USBCheckCDCRequest *****************
 23839 ;; Defined at:
 23840 ;;		line 147 in file "mcc_generated_files/usb/usb_device_cdc.c"
 23841 ;; Parameters:    Size  Location     Type
 23842 ;;		None
 23843 ;; Auto vars:     Size  Location     Type
 23844 ;;		None
 23845 ;; Return value:  Size  Location     Type
 23846 ;;                  1    wreg      void 
 23847 ;; Registers used:
 23848 ;;		wreg, status,2, status,0
 23849 ;; Tracked objects:
 23850 ;;		On entry : 0/0
 23851 ;;		On exit  : 3B/0
 23852 ;;		Unchanged: 0/0
 23853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23854 ;;      Params:         0       0       0       0       0       0       0       0       0
 23855 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23856 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23857 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23858 ;;Total ram usage:        2 bytes
 23859 ;; Hardware stack levels used: 1
 23860 ;; This function calls:
 23861 ;;		Nothing
 23862 ;; This function is called by:
 23863 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23864 ;; This function uses a non-reentrant model
 23865 ;;
 23866                           
 23867                           	psect	text122
 23868  006A96                     __ptext122:
 23869                           	callstack 0
 23870  006A96                     _USBCheckCDCRequest:
 23871                           	callstack 18
 23872                           
 23873                           ;mcc_generated_files/usb/usb_device_cdc.c: 152:     if(SetupPkt.Recipient != (0x01)) ret
      +                          urn;
 23874                           
 23875                           ;incstack = 0
 23876  006A96  0104               	movlb	4	; () banked
 23877  006A98  5130               	movf	48,w,b	;volatile
 23878  006A9A  0B1F               	andlw	31
 23879  006A9C  06E8               	decf	wreg,f,c
 23880  006A9E  A4D8               	btfss	status,2,c
 23881  006AA0  0012               	return	
 23882                           
 23883                           ; BSR set to: 4
 23884                           ;mcc_generated_files/usb/usb_device_cdc.c: 157:     if(SetupPkt.RequestType != (0x20>>5)
      +                          ) return;
 23885  006AA2  3930               	swapf	48,w,b	;volatile
 23886  006AA4  32E8               	rrcf	wreg,f,c
 23887  006AA6  0B03               	andlw	3
 23888  006AA8  06E8               	decf	wreg,f,c
 23889  006AAA  A4D8               	btfss	status,2,c
 23890  006AAC  0012               	return	
 23891                           
 23892                           ; BSR set to: 4
 23893                           ;mcc_generated_files/usb/usb_device_cdc.c: 163:     if((SetupPkt.bIntfID != 0x0)&&
 23894  006AAE  5134               	movf	52,w,b	;volatile
 23895  006AB0  B4D8               	btfsc	status,2,c
 23896  006AB2  D037               	goto	i2l7807
 23897                           
 23898                           ; BSR set to: 4
 23899  006AB4  0534               	decf	52,w,b	;volatile
 23900  006AB6  A4D8               	btfss	status,2,c
 23901  006AB8  0012               	return	
 23902  006ABA  D033               	goto	i2l7807
 23903  006ABC                     i2l7783:
 23904                           
 23905                           ; BSR set to: 4
 23906                           ;mcc_generated_files/usb/usb_device_cdc.c: 171:             inPipes[0].pSrc.bRam = (uint
      +                          8_t*)&dummy_encapsulated_cmd_response;
 23907  006ABC  0EC0               	movlw	low _dummy_encapsulated_cmd_response
 23908  006ABE  0100               	movlb	0	; () banked
 23909  006AC0  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 23910  006AC2  0E03               	movlw	high _dummy_encapsulated_cmd_response
 23911  006AC4  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23912                           
 23913                           ; BSR set to: 0
 23914                           ;mcc_generated_files/usb/usb_device_cdc.c: 172:             inPipes[0].wCount.Val = 0x08
      +                          ;
 23915  006AC6  0E00               	movlw	0
 23916  006AC8  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 23917  006ACA  0E08               	movlw	8
 23918  006ACC  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23919                           
 23920                           ; BSR set to: 0
 23921                           ;mcc_generated_files/usb/usb_device_cdc.c: 173:             inPipes[0].info.bits.ctrl_tr
      +                          f_mem = 0x01;
 23922  006ACE  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 23923                           
 23924                           ; BSR set to: 0
 23925                           ;mcc_generated_files/usb/usb_device_cdc.c: 174:             inPipes[0].info.bits.busy = 
      +                          1;
 23926  006AD0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23927                           
 23928                           ;mcc_generated_files/usb/usb_device_cdc.c: 175:             break;
 23929  006AD2  0012               	return	
 23930  006AD4                     i2l7791:
 23931                           
 23932                           ; BSR set to: 4
 23933                           ;mcc_generated_files/usb/usb_device_cdc.c: 178:             inPipes[0].pSrc.bRam = (uint
      +                          8_t*)&dummy_encapsulated_cmd_response;
 23934  006AD4  0EC0               	movlw	low _dummy_encapsulated_cmd_response
 23935  006AD6  0100               	movlb	0	; () banked
 23936  006AD8  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 23937  006ADA  0E03               	movlw	high _dummy_encapsulated_cmd_response
 23938  006ADC  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23939                           
 23940                           ; BSR set to: 0
 23941                           ;mcc_generated_files/usb/usb_device_cdc.c: 179:             inPipes[0].info.bits.busy = 
      +                          1;
 23942  006ADE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23943                           
 23944                           ;mcc_generated_files/usb/usb_device_cdc.c: 180:             break;
 23945  006AE0  0012               	return	
 23946  006AE2                     i2l480:
 23947                           
 23948                           ; BSR set to: 4
 23949                           ;mcc_generated_files/usb/usb_device_cdc.c: 185:             outPipes[0].wCount.Val = Set
      +                          upPkt.wLength;
 23950  006AE2  C436 F0AC          	movff	1078,_outPipes+4	;volatile
 23951  006AE6  C437 F0AD          	movff	1079,_outPipes+5	;volatile
 23952                           
 23953                           ; BSR set to: 4
 23954                           ;mcc_generated_files/usb/usb_device_cdc.c: 186:             outPipes[0].pDst.bRam = (uin
      +                          t8_t*)&line_coding._byte[0];
 23955  006AEA  0EE3               	movlw	low _line_coding
 23956  006AEC  0100               	movlb	0	; () banked
 23957  006AEE  6FA8               	movwf	_outPipes& (0+255),b	;volatile
 23958  006AF0  0E02               	movlw	high _line_coding
 23959  006AF2  6FA9               	movwf	(_outPipes+1)& (0+255),b	;volatile
 23960                           
 23961                           ;mcc_generated_files/usb/usb_device_cdc.c: 187:             outPipes[0].pFunc = ((void*)
      +                          0);
 23962  006AF4  0E00               	movlw	0
 23963  006AF6  6FAE               	movwf	(_outPipes+6)& (0+255),b	;volatile
 23964  006AF8  0E00               	movlw	0
 23965  006AFA  6FAF               	movwf	(_outPipes+7)& (0+255),b	;volatile
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;mcc_generated_files/usb/usb_device_cdc.c: 188:             outPipes[0].info.bits.busy =
      +                           1;
 23969  006AFC  8FAB               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 23970                           
 23971                           ;mcc_generated_files/usb/usb_device_cdc.c: 189:             break;
 23972  006AFE  0012               	return	
 23973  006B00                     i2l7799:
 23974                           
 23975                           ; BSR set to: 4
 23976                           ;mcc_generated_files/usb/usb_device_cdc.c: 192:             { inPipes[0].pSrc.bRam = (ui
      +                          nt8_t*)&line_coding; inPipes[0].wCount.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0
      +                          x01; };
 23977  006B00  0EE3               	movlw	low _line_coding
 23978  006B02  0100               	movlb	0	; () banked
 23979  006B04  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 23980  006B06  0E02               	movlw	high _line_coding
 23981  006B08  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23982                           
 23983                           ; BSR set to: 0
 23984  006B0A  0E00               	movlw	0
 23985  006B0C  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 23986  006B0E  0E07               	movlw	7
 23987  006B10  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23988                           
 23989                           ; BSR set to: 0
 23990  006B12  0EC1               	movlw	193
 23991  006B14  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23992                           
 23993                           ;mcc_generated_files/usb/usb_device_cdc.c: 196:             break;
 23994  006B16  0012               	return	
 23995  006B18                     i2l482:
 23996                           
 23997                           ; BSR set to: 4
 23998                           ;mcc_generated_files/usb/usb_device_cdc.c: 199:             control_signal_bitmap._byte 
      +                          = (uint8_t)SetupPkt.wValue;
 23999  006B18  C432 F1D9          	movff	1074,_control_signal_bitmap	;volatile
 24000                           
 24001                           ;mcc_generated_files/usb/usb_device_cdc.c: 231:             inPipes[0].info.bits.busy = 
      +                          1;
 24002  006B1C  0100               	movlb	0	; () banked
 24003  006B1E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24004                           
 24005                           ;mcc_generated_files/usb/usb_device_cdc.c: 232:             break;
 24006  006B20  0012               	return	
 24007  006B22                     i2l7807:
 24008                           
 24009                           ; BSR set to: 4
 24010  006B22  5131               	movf	49,w,b	;volatile
 24011  006B24  6E01               	movwf	??_USBCheckCDCRequest^0,c
 24012  006B26  6A02               	clrf	(??_USBCheckCDCRequest+1)^0,c
 24013                           
 24014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24015                           ; Switch size 1, requested type "simple"
 24016                           ; Number of cases is 1, Range of values is 0 to 0
 24017                           ; switch strategies available:
 24018                           ; Name         Instructions Cycles
 24019                           ; simple_byte            4     3 (average)
 24020                           ;	Chosen strategy is simple_byte
 24021  006B28  5002               	movf	(??_USBCheckCDCRequest+1)^0,w,c
 24022  006B2A  0A00               	xorlw	0	; case 0
 24023  006B2C  A4D8               	btfss	status,2,c
 24024  006B2E  0012               	return	
 24025                           
 24026                           ; BSR set to: 4
 24027                           ; Switch size 1, requested type "simple"
 24028                           ; Number of cases is 5, Range of values is 0 to 34
 24029                           ; switch strategies available:
 24030                           ; Name         Instructions Cycles
 24031                           ; simple_byte           16     9 (average)
 24032                           ;	Chosen strategy is simple_byte
 24033  006B30  5001               	movf	??_USBCheckCDCRequest^0,w,c
 24034  006B32  0A00               	xorlw	0	; case 0
 24035  006B34  B4D8               	btfsc	status,2,c
 24036  006B36  D7C2               	goto	i2l7783
 24037  006B38  0A01               	xorlw	1	; case 1
 24038  006B3A  B4D8               	btfsc	status,2,c
 24039  006B3C  D7CB               	goto	i2l7791
 24040  006B3E  0A21               	xorlw	33	; case 32
 24041  006B40  B4D8               	btfsc	status,2,c
 24042  006B42  D7CF               	goto	i2l480
 24043  006B44  0A01               	xorlw	1	; case 33
 24044  006B46  B4D8               	btfsc	status,2,c
 24045  006B48  D7DB               	goto	i2l7799
 24046  006B4A  0A03               	xorlw	3	; case 34
 24047  006B4C  A4D8               	btfss	status,2,c
 24048  006B4E  0012               	return	
 24049  006B50  D7E3               	goto	i2l482
 24050  006B52                     __end_of_USBCheckCDCRequest:
 24051                           	callstack 0
 24052                           
 24053 ;; *************** function _CDCInitEP *****************
 24054 ;; Defined at:
 24055 ;;		line 294 in file "mcc_generated_files/usb/usb_device_cdc.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;		None
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;		None
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      void 
 24062 ;; Registers used:
 24063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 3F/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24069 ;;      Params:         0       0       0       0       0       0       0       0       0
 24070 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24072 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24073 ;;Total ram usage:        0 bytes
 24074 ;; Hardware stack levels used: 1
 24075 ;; Hardware stack levels required when called: 2
 24076 ;; This function calls:
 24077 ;;		_USBEnableEndpoint
 24078 ;;		i2_USBTransferOnePacket
 24079 ;; This function is called by:
 24080 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24081 ;; This function uses a non-reentrant model
 24082 ;;
 24083                           
 24084                           	psect	text123
 24085  00765C                     __ptext123:
 24086                           	callstack 0
 24087  00765C                     _CDCInitEP:
 24088                           	callstack 16
 24089                           
 24090                           ;mcc_generated_files/usb/usb_device_cdc.c: 297:     line_coding.dwDTERate = 19200;
 24091                           
 24092                           ;incstack = 0
 24093  00765C  0E00               	movlw	0
 24094  00765E  0102               	movlb	2	; () banked
 24095  007660  6FE3               	movwf	_line_coding& (0+255),b
 24096  007662  0E4B               	movlw	75
 24097  007664  6FE4               	movwf	(_line_coding+1)& (0+255),b
 24098  007666  0E00               	movlw	0
 24099  007668  6FE5               	movwf	(_line_coding+2)& (0+255),b
 24100  00766A  0E00               	movlw	0
 24101  00766C  6FE6               	movwf	(_line_coding+3)& (0+255),b
 24102                           
 24103                           ;mcc_generated_files/usb/usb_device_cdc.c: 298:     line_coding.bCharFormat = 0x00;
 24104  00766E  0E00               	movlw	0
 24105  007670  6FE7               	movwf	(_line_coding+4)& (0+255),b
 24106                           
 24107                           ;mcc_generated_files/usb/usb_device_cdc.c: 299:     line_coding.bParityType = 0x00;
 24108  007672  0E00               	movlw	0
 24109  007674  6FE8               	movwf	(_line_coding+5)& (0+255),b
 24110                           
 24111                           ;mcc_generated_files/usb/usb_device_cdc.c: 300:     line_coding.bDataBits = 0x08;
 24112  007676  0E08               	movlw	8
 24113  007678  6FE9               	movwf	(_line_coding+6)& (0+255),b
 24114                           
 24115                           ;mcc_generated_files/usb/usb_device_cdc.c: 302:     cdc_rx_len = 0;
 24116  00767A  0E00               	movlw	0
 24117  00767C  0100               	movlb	0	; () banked
 24118  00767E  6FCC               	movwf	_cdc_rx_len& (0+255),b
 24119                           
 24120                           ; BSR set to: 0
 24121                           ;mcc_generated_files/usb/usb_device_cdc.c: 315:     USBEnableEndpoint(1,0x02|0x10|0x08);
 24122  007680  0E1A               	movlw	26
 24123  007682  6E09               	movwf	USBEnableEndpoint@options^0,c
 24124  007684  0E01               	movlw	1
 24125  007686  EC6C  F03F         	call	_USBEnableEndpoint
 24126                           
 24127                           ;mcc_generated_files/usb/usb_device_cdc.c: 316:     USBEnableEndpoint(2,0x02|0x04|0x10|0
      +                          x08);
 24128  00768A  0E1E               	movlw	30
 24129  00768C  6E09               	movwf	USBEnableEndpoint@options^0,c
 24130  00768E  0E02               	movlw	2
 24131  007690  EC6C  F03F         	call	_USBEnableEndpoint
 24132                           
 24133                           ;mcc_generated_files/usb/usb_device_cdc.c: 318:     CDCDataOutHandle = USBTransferOnePac
      +                          ket(2,0,(uint8_t*)&cdc_data_rx,sizeof(cdc_data_rx));
 24134  007694  0E00               	movlw	0
 24135  007696  6E01               	movwf	i2USBTransferOnePacket@dir^0,c
 24136  007698  0E40               	movlw	64
 24137  00769A  6E02               	movwf	i2USBTransferOnePacket@data^0,c
 24138  00769C  0E05               	movlw	5
 24139  00769E  6E03               	movwf	(i2USBTransferOnePacket@data+1)^0,c
 24140  0076A0  0E40               	movlw	64
 24141  0076A2  6E04               	movwf	i2USBTransferOnePacket@len^0,c
 24142  0076A4  0E02               	movlw	2
 24143  0076A6  ECC9  F02F         	call	i2_USBTransferOnePacket
 24144  0076AA  C001  F1CB         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 24145  0076AE  C002  F1CC         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 24146                           
 24147                           ;mcc_generated_files/usb/usb_device_cdc.c: 319:     CDCDataInHandle = ((void*)0);
 24148  0076B2  0E00               	movlw	0
 24149  0076B4  0102               	movlb	2	; () banked
 24150  0076B6  6FE0               	movwf	_CDCDataInHandle& (0+255),b
 24151  0076B8  0E00               	movlw	0
 24152  0076BA  6FE1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 24153                           
 24154                           ; BSR set to: 2
 24155                           ;mcc_generated_files/usb/usb_device_cdc.c: 346:     cdc_trf_state = 0;
 24156  0076BC  0E00               	movlw	0
 24157  0076BE  0100               	movlb	0	; () banked
 24158  0076C0  6FCB               	movwf	_cdc_trf_state& (0+255),b
 24159                           
 24160                           ; BSR set to: 0
 24161  0076C2  0012               	return		;funcret
 24162  0076C4                     __end_of_CDCInitEP:
 24163                           	callstack 0
 24164                           
 24165 ;; *************** function i2_USBTransferOnePacket *****************
 24166 ;; Defined at:
 24167 ;;		line 999 in file "mcc_generated_files/usb/usb_device.c"
 24168 ;; Parameters:    Size  Location     Type
 24169 ;;  ep              1    wreg     unsigned char 
 24170 ;;  dir             1    0[COMRAM] unsigned char 
 24171 ;;  data            2    1[COMRAM] PTR unsigned char 
 24172 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 24173 ;;  len             1    3[COMRAM] unsigned char 
 24174 ;; Auto vars:     Size  Location     Type
 24175 ;;  ep              1    6[COMRAM] unsigned char 
 24176 ;;  handle          2    7[COMRAM] PTR volatile struct __BD
 24177 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 24178 ;; Return value:  Size  Location     Type
 24179 ;;                  2    0[COMRAM] PTR void 
 24180 ;; Registers used:
 24181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24182 ;; Tracked objects:
 24183 ;;		On entry : 0/0
 24184 ;;		On exit  : 0/0
 24185 ;;		Unchanged: 0/0
 24186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24187 ;;      Params:         4       0       0       0       0       0       0       0       0
 24188 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24189 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24190 ;;      Totals:         9       0       0       0       0       0       0       0       0
 24191 ;;Total ram usage:        9 bytes
 24192 ;; Hardware stack levels used: 1
 24193 ;; This function calls:
 24194 ;;		Nothing
 24195 ;; This function is called by:
 24196 ;;		_CDCInitEP
 24197 ;; This function uses a non-reentrant model
 24198 ;;
 24199                           
 24200                           	psect	text124
 24201  005F92                     __ptext124:
 24202                           	callstack 0
 24203  005F92                     i2_USBTransferOnePacket:
 24204                           	callstack 17
 24205                           
 24206                           ; BSR set to: 0
 24207                           ;incstack = 0
 24208                           ;i2USBTransferOnePacket@ep stored from wreg
 24209  005F92  6E07               	movwf	i2USBTransferOnePacket@ep^0,c
 24210                           
 24211                           ;mcc_generated_files/usb/usb_device.c: 999: void* USBTransferOnePacket(uint8_t ep,uint8_
      +                          t dir,uint8_t* data,uint8_t len);mcc_generated_files/usb/usb_device.c: 1000: {;mcc_gener
      +                          ated_files/usb/usb_device.c: 1001:     volatile BDT_ENTRY* handle;;mcc_generated_files/u
      +                          sb/usb_device.c: 1004:     if(dir != 0)
 24212  005F94  5001               	movf	i2USBTransferOnePacket@dir^0,w,c
 24213  005F96  B4D8               	btfsc	status,2,c
 24214  005F98  D007               	goto	i2l7731
 24215                           
 24216                           ;mcc_generated_files/usb/usb_device.c: 1005:     {;mcc_generated_files/usb/usb_device.c:
      +                           1007:         handle = pBDTEntryIn[ep];
 24217  005F9A  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24218  005F9C  0D02               	mullw	2
 24219  005F9E  50F3               	movf	243,w,c
 24220  005FA0  0FB6               	addlw	low _pBDTEntryIn
 24221  005FA2  6ED9               	movwf	fsr2l,c
 24222  005FA4  6ADA               	clrf	fsr2h,c
 24223  005FA6  D008               	goto	L31
 24224  005FA8                     i2l7731:
 24225                           
 24226                           ;mcc_generated_files/usb/usb_device.c: 1010:     {;mcc_generated_files/usb/usb_device.c:
      +                           1012:         handle = pBDTEntryOut[ep];
 24227  005FA8  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24228  005FAA  0D02               	mullw	2
 24229  005FAC  0EAE               	movlw	low _pBDTEntryOut
 24230  005FAE  24F3               	addwf	243,w,c
 24231  005FB0  6ED9               	movwf	fsr2l,c
 24232  005FB2  0E02               	movlw	high _pBDTEntryOut
 24233  005FB4  20F4               	addwfc	prodh,w,c
 24234  005FB6  6EDA               	movwf	fsr2h,c
 24235  005FB8                     L31:
 24236  005FB8  CFDE F008          	movff	postinc2,i2USBTransferOnePacket@handle
 24237  005FBC  CFDD F009          	movff	postdec2,i2USBTransferOnePacket@handle+1
 24238                           
 24239                           ;mcc_generated_files/usb/usb_device.c: 1017:     if(handle == 0)
 24240  005FC0  5008               	movf	i2USBTransferOnePacket@handle^0,w,c
 24241  005FC2  1009               	iorwf	(i2USBTransferOnePacket@handle+1)^0,w,c
 24242  005FC4  A4D8               	btfss	status,2,c
 24243  005FC6  D005               	goto	i2l7739
 24244                           
 24245                           ;mcc_generated_files/usb/usb_device.c: 1018:     {;mcc_generated_files/usb/usb_device.c:
      +                           1019:         return 0;
 24246  005FC8  0E00               	movlw	0
 24247  005FCA  6E01               	movwf	?i2_USBTransferOnePacket^0,c
 24248  005FCC  0E00               	movlw	0
 24249  005FCE  6E02               	movwf	(?i2_USBTransferOnePacket+1)^0,c
 24250  005FD0  0012               	return	
 24251  005FD2                     i2l7739:
 24252                           
 24253                           ;mcc_generated_files/usb/usb_device.c: 1033:     handle->ADR = ((uint16_t)(data));
 24254  005FD2  EE20 F002          	lfsr	2,2
 24255  005FD6  5008               	movf	i2USBTransferOnePacket@handle^0,w,c
 24256  005FD8  26D9               	addwf	fsr2l,f,c
 24257  005FDA  5009               	movf	(i2USBTransferOnePacket@handle+1)^0,w,c
 24258  005FDC  22DA               	addwfc	fsr2h,f,c
 24259  005FDE  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 24260  005FE2  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 24261                           
 24262                           ;mcc_generated_files/usb/usb_device.c: 1034:     handle->CNT = len;
 24263  005FE6  EE20 F001          	lfsr	2,1
 24264  005FEA  5008               	movf	i2USBTransferOnePacket@handle^0,w,c
 24265  005FEC  26D9               	addwf	fsr2l,f,c
 24266  005FEE  5009               	movf	(i2USBTransferOnePacket@handle+1)^0,w,c
 24267  005FF0  22DA               	addwfc	fsr2h,f,c
 24268  005FF2  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 24269                           
 24270                           ;mcc_generated_files/usb/usb_device.c: 1035:     handle->STAT.Val &= 0x40;
 24271  005FF6  C008  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24272  005FFA  C009  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24273  005FFE  0E40               	movlw	64
 24274  006000  16DF               	andwf	indf2,f,c
 24275                           
 24276                           ;mcc_generated_files/usb/usb_device.c: 1036:     handle->STAT.Val |= (0x08 & 0x08);
 24277  006002  C008  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24278  006006  C009  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24279  00600A  0E00               	movlw	0
 24280  00600C  86DB               	bsf	plusw2,3,c
 24281                           
 24282                           ;mcc_generated_files/usb/usb_device.c: 1037:     handle->STAT.Val |= 0x80;
 24283  00600E  C008  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24284  006012  C009  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24285  006016  0E00               	movlw	0
 24286  006018  8EDB               	bsf	plusw2,7,c
 24287                           
 24288                           ;mcc_generated_files/usb/usb_device.c: 1040:     if(dir != 0)
 24289  00601A  5001               	movf	i2USBTransferOnePacket@dir^0,w,c
 24290  00601C  B4D8               	btfsc	status,2,c
 24291  00601E  D015               	goto	i2l7751
 24292                           
 24293                           ;mcc_generated_files/usb/usb_device.c: 1041:     {;mcc_generated_files/usb/usb_device.c:
      +                           1043:         pBDTEntryIn[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryIn[ep]) ^ 0x0004);
 24294  006020  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24295  006022  0D02               	mullw	2
 24296  006024  50F3               	movf	243,w,c
 24297  006026  0FB6               	addlw	low _pBDTEntryIn
 24298  006028  6ED9               	movwf	fsr2l,c
 24299  00602A  6ADA               	clrf	fsr2h,c
 24300  00602C  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 24301  006030  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 24302  006034  0E04               	movlw	4
 24303  006036  1A05               	xorwf	??i2_USBTransferOnePacket^0,f,c
 24304  006038  0E00               	movlw	0
 24305  00603A  1A06               	xorwf	(??i2_USBTransferOnePacket+1)^0,f,c
 24306  00603C  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24307  00603E  0D02               	mullw	2
 24308  006040  50F3               	movf	243,w,c
 24309  006042  0FB6               	addlw	low _pBDTEntryIn
 24310  006044  6ED9               	movwf	fsr2l,c
 24311  006046  6ADA               	clrf	fsr2h,c
 24312  006048  D018               	goto	L32
 24313  00604A                     i2l7751:
 24314                           
 24315                           ;mcc_generated_files/usb/usb_device.c: 1046:     {;mcc_generated_files/usb/usb_device.c:
      +                           1048:         pBDTEntryOut[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryOut[ep]) ^ 0x0004);
 24316  00604A  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24317  00604C  0D02               	mullw	2
 24318  00604E  0EAE               	movlw	low _pBDTEntryOut
 24319  006050  24F3               	addwf	243,w,c
 24320  006052  6ED9               	movwf	fsr2l,c
 24321  006054  0E02               	movlw	high _pBDTEntryOut
 24322  006056  20F4               	addwfc	prodh,w,c
 24323  006058  6EDA               	movwf	fsr2h,c
 24324  00605A  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 24325  00605E  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 24326  006062  0E04               	movlw	4
 24327  006064  1A05               	xorwf	??i2_USBTransferOnePacket^0,f,c
 24328  006066  0E00               	movlw	0
 24329  006068  1A06               	xorwf	(??i2_USBTransferOnePacket+1)^0,f,c
 24330  00606A  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24331  00606C  0D02               	mullw	2
 24332  00606E  0EAE               	movlw	low _pBDTEntryOut
 24333  006070  24F3               	addwf	243,w,c
 24334  006072  6ED9               	movwf	fsr2l,c
 24335  006074  0E02               	movlw	high _pBDTEntryOut
 24336  006076  20F4               	addwfc	prodh,w,c
 24337  006078  6EDA               	movwf	fsr2h,c
 24338  00607A                     L32:
 24339  00607A  C005  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
 24340  00607E  C006  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
 24341                           
 24342                           ;mcc_generated_files/usb/usb_device.c: 1050:     return (void*)handle;
 24343  006082  C008  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 24344  006086  C009  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 24345  00608A  0012               	return		;funcret
 24346  00608C                     __end_ofi2_USBTransferOnePacket:
 24347                           	callstack 0
 24348                           
 24349 ;; *************** function _USBEnableEndpoint *****************
 24350 ;; Defined at:
 24351 ;;		line 882 in file "mcc_generated_files/usb/usb_device.c"
 24352 ;; Parameters:    Size  Location     Type
 24353 ;;  ep              1    wreg     unsigned char 
 24354 ;;  options         1    8[COMRAM] unsigned char 
 24355 ;; Auto vars:     Size  Location     Type
 24356 ;;  ep              1   11[COMRAM] unsigned char 
 24357 ;;  p               2    9[COMRAM] PTR unsigned char 
 24358 ;;		 -> UEP0(1), 
 24359 ;; Return value:  Size  Location     Type
 24360 ;;                  1    wreg      void 
 24361 ;; Registers used:
 24362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24363 ;; Tracked objects:
 24364 ;;		On entry : 0/0
 24365 ;;		On exit  : 0/0
 24366 ;;		Unchanged: 0/0
 24367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24368 ;;      Params:         1       0       0       0       0       0       0       0       0
 24369 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24370 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24371 ;;      Totals:         4       0       0       0       0       0       0       0       0
 24372 ;;Total ram usage:        4 bytes
 24373 ;; Hardware stack levels used: 1
 24374 ;; Hardware stack levels required when called: 1
 24375 ;; This function calls:
 24376 ;;		_USBConfigureEndpoint
 24377 ;; This function is called by:
 24378 ;;		_CDCInitEP
 24379 ;; This function uses a non-reentrant model
 24380 ;;
 24381                           
 24382                           	psect	text125
 24383  007ED8                     __ptext125:
 24384                           	callstack 0
 24385  007ED8                     _USBEnableEndpoint:
 24386                           	callstack 16
 24387                           
 24388                           ;incstack = 0
 24389                           ;USBEnableEndpoint@ep stored from wreg
 24390  007ED8  6E0C               	movwf	USBEnableEndpoint@ep^0,c
 24391                           
 24392                           ;mcc_generated_files/usb/usb_device.c: 882: void USBEnableEndpoint(uint8_t ep, uint8_t o
      +                          ptions);mcc_generated_files/usb/usb_device.c: 883: {;mcc_generated_files/usb/usb_device.
      +                          c: 884:     unsigned char* p;;mcc_generated_files/usb/usb_device.c: 888:     if(options 
      +                          & 0x04)
 24393  007EDA  A409               	btfss	USBEnableEndpoint@options^0,2,c
 24394  007EDC  D005               	goto	i2l7705
 24395                           
 24396                           ;mcc_generated_files/usb/usb_device.c: 889:     {;mcc_generated_files/usb/usb_device.c: 
      +                          890:         USBConfigureEndpoint(ep, 0);
 24397  007EDE  0E00               	movlw	0
 24398  007EE0  6E01               	movwf	USBConfigureEndpoint@direction^0,c
 24399  007EE2  500C               	movf	USBEnableEndpoint@ep^0,w,c
 24400  007EE4  EC95  F039         	call	_USBConfigureEndpoint
 24401  007EE8                     i2l7705:
 24402                           
 24403                           ;mcc_generated_files/usb/usb_device.c: 892:     if(options & 0x02)
 24404  007EE8  A209               	btfss	USBEnableEndpoint@options^0,1,c
 24405  007EEA  D005               	goto	i2l7709
 24406                           
 24407                           ;mcc_generated_files/usb/usb_device.c: 893:     {;mcc_generated_files/usb/usb_device.c: 
      +                          894:         USBConfigureEndpoint(ep, 1);
 24408  007EEC  0E01               	movlw	1
 24409  007EEE  6E01               	movwf	USBConfigureEndpoint@direction^0,c
 24410  007EF0  500C               	movf	USBEnableEndpoint@ep^0,w,c
 24411  007EF2  EC95  F039         	call	_USBConfigureEndpoint
 24412  007EF6                     i2l7709:
 24413                           
 24414                           ;mcc_generated_files/usb/usb_device.c: 903:         p = (unsigned char*)(&UEP0+ep);
 24415  007EF6  0E6A               	movlw	106
 24416  007EF8  240C               	addwf	USBEnableEndpoint@ep^0,w,c
 24417  007EFA  6E0A               	movwf	USBEnableEndpoint@p^0,c
 24418  007EFC  6A0B               	clrf	(USBEnableEndpoint@p+1)^0,c
 24419  007EFE  0E0F               	movlw	15
 24420  007F00  220B               	addwfc	(USBEnableEndpoint@p+1)^0,f,c
 24421                           
 24422                           ;mcc_generated_files/usb/usb_device.c: 905:     *p = options;
 24423  007F02  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 24424  007F06  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 24425  007F0A  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 24426  007F0E  0012               	return		;funcret
 24427  007F10                     __end_of_USBEnableEndpoint:
 24428                           	callstack 0
 24429                           
 24430 ;; *************** function _USBConfigureEndpoint *****************
 24431 ;; Defined at:
 24432 ;;		line 1547 in file "mcc_generated_files/usb/usb_device.c"
 24433 ;; Parameters:    Size  Location     Type
 24434 ;;  EPNum           1    wreg     unsigned char 
 24435 ;;  direction       1    0[COMRAM] unsigned char 
 24436 ;; Auto vars:     Size  Location     Type
 24437 ;;  EPNum           1    5[COMRAM] unsigned char 
 24438 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 24439 ;;		 -> BDT(48), 
 24440 ;; Return value:  Size  Location     Type
 24441 ;;                  1    wreg      void 
 24442 ;; Registers used:
 24443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24444 ;; Tracked objects:
 24445 ;;		On entry : 0/0
 24446 ;;		On exit  : 0/0
 24447 ;;		Unchanged: 0/0
 24448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24449 ;;      Params:         1       0       0       0       0       0       0       0       0
 24450 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24451 ;;      Temps:          4       0       0       0       0       0       0       0       0
 24452 ;;      Totals:         8       0       0       0       0       0       0       0       0
 24453 ;;Total ram usage:        8 bytes
 24454 ;; Hardware stack levels used: 1
 24455 ;; This function calls:
 24456 ;;		Nothing
 24457 ;; This function is called by:
 24458 ;;		_USBEnableEndpoint
 24459 ;; This function uses a non-reentrant model
 24460 ;;
 24461                           
 24462                           	psect	text126
 24463  00732A                     __ptext126:
 24464                           	callstack 0
 24465  00732A                     _USBConfigureEndpoint:
 24466                           	callstack 16
 24467                           
 24468                           ;incstack = 0
 24469                           ;USBConfigureEndpoint@EPNum stored from wreg
 24470  00732A  6E06               	movwf	USBConfigureEndpoint@EPNum^0,c
 24471                           
 24472                           ;mcc_generated_files/usb/usb_device.c: 1547: static void USBConfigureEndpoint(uint8_t EP
      +                          Num, uint8_t direction);mcc_generated_files/usb/usb_device.c: 1548: {;mcc_generated_file
      +                          s/usb/usb_device.c: 1549:     volatile BDT_ENTRY* handle;;mcc_generated_files/usb/usb_de
      +                          vice.c: 1553:     handle = (volatile BDT_ENTRY*)&BDT[0];
 24473  00732C  0E00               	movlw	0
 24474  00732E  6E07               	movwf	USBConfigureEndpoint@handle^0,c
 24475  007330  0E04               	movlw	4
 24476  007332  6E08               	movwf	(USBConfigureEndpoint@handle+1)^0,c
 24477                           
 24478                           ;mcc_generated_files/usb/usb_device.c: 1554:     handle += (4*EPNum+2*direction+0u);
 24479  007334  5001               	movf	USBConfigureEndpoint@direction^0,w,c
 24480  007336  6E02               	movwf	??_USBConfigureEndpoint^0,c
 24481  007338  6A03               	clrf	(??_USBConfigureEndpoint+1)^0,c
 24482  00733A  90D8               	bcf	status,0,c
 24483  00733C  3602               	rlcf	??_USBConfigureEndpoint^0,f,c
 24484  00733E  3603               	rlcf	(??_USBConfigureEndpoint+1)^0,f,c
 24485  007340  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 24486  007342  6E04               	movwf	(??_USBConfigureEndpoint+2)^0,c
 24487  007344  6A05               	clrf	(??_USBConfigureEndpoint+3)^0,c
 24488  007346  90D8               	bcf	status,0,c
 24489  007348  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24490  00734A  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24491  00734C  90D8               	bcf	status,0,c
 24492  00734E  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24493  007350  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24494  007352  5002               	movf	??_USBConfigureEndpoint^0,w,c
 24495  007354  2604               	addwf	(??_USBConfigureEndpoint+2)^0,f,c
 24496  007356  5003               	movf	(??_USBConfigureEndpoint+1)^0,w,c
 24497  007358  2205               	addwfc	(??_USBConfigureEndpoint+3)^0,f,c
 24498  00735A  90D8               	bcf	status,0,c
 24499  00735C  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24500  00735E  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24501  007360  90D8               	bcf	status,0,c
 24502  007362  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24503  007364  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24504  007366  5004               	movf	(??_USBConfigureEndpoint+2)^0,w,c
 24505  007368  2607               	addwf	USBConfigureEndpoint@handle^0,f,c
 24506  00736A  5005               	movf	(??_USBConfigureEndpoint+3)^0,w,c
 24507  00736C  2208               	addwfc	(USBConfigureEndpoint@handle+1)^0,f,c
 24508                           
 24509                           ;mcc_generated_files/usb/usb_device.c: 1556:     handle->STAT.UOWN = 0;
 24510  00736E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24511  007372  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24512  007376  9EDF               	bcf	indf2,7,c
 24513                           
 24514                           ;mcc_generated_files/usb/usb_device.c: 1561:     if(direction == 0)
 24515  007378  5001               	movf	USBConfigureEndpoint@direction^0,w,c
 24516  00737A  A4D8               	btfss	status,2,c
 24517  00737C  D009               	goto	i2l7695
 24518                           
 24519                           ;mcc_generated_files/usb/usb_device.c: 1562:     {;mcc_generated_files/usb/usb_device.c:
      +                           1563:         pBDTEntryOut[EPNum] = handle;
 24520  00737E  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 24521  007380  0D02               	mullw	2
 24522  007382  0EAE               	movlw	low _pBDTEntryOut
 24523  007384  24F3               	addwf	243,w,c
 24524  007386  6ED9               	movwf	fsr2l,c
 24525  007388  0E02               	movlw	high _pBDTEntryOut
 24526  00738A  20F4               	addwfc	prodh,w,c
 24527  00738C  6EDA               	movwf	fsr2h,c
 24528  00738E  D006               	goto	L33
 24529  007390                     i2l7695:
 24530                           
 24531                           ;mcc_generated_files/usb/usb_device.c: 1566:     {;mcc_generated_files/usb/usb_device.c:
      +                           1567:         pBDTEntryIn[EPNum] = handle;
 24532  007390  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 24533  007392  0D02               	mullw	2
 24534  007394  50F3               	movf	243,w,c
 24535  007396  0FB6               	addlw	low _pBDTEntryIn
 24536  007398  6ED9               	movwf	fsr2l,c
 24537  00739A  6ADA               	clrf	fsr2h,c
 24538  00739C                     L33:
 24539  00739C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 24540  0073A0  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 24541                           
 24542                           ;mcc_generated_files/usb/usb_device.c: 1571:         handle->STAT.DTS = 0;
 24543  0073A4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24544  0073A8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24545  0073AC  9CDF               	bcf	indf2,6,c
 24546                           
 24547                           ;mcc_generated_files/usb/usb_device.c: 1572:         (handle+1)->STAT.DTS = 1;
 24548  0073AE  EE20 F004          	lfsr	2,4
 24549  0073B2  5007               	movf	USBConfigureEndpoint@handle^0,w,c
 24550  0073B4  26D9               	addwf	fsr2l,f,c
 24551  0073B6  5008               	movf	(USBConfigureEndpoint@handle+1)^0,w,c
 24552  0073B8  22DA               	addwfc	fsr2h,f,c
 24553  0073BA  8CDF               	bsf	indf2,6,c
 24554  0073BC  0012               	return		;funcret
 24555  0073BE                     __end_of_USBConfigureEndpoint:
 24556                           	callstack 0
 24557                           
 24558 ;; *************** function _USBCtrlTrfOutHandler *****************
 24559 ;; Defined at:
 24560 ;;		line 2542 in file "mcc_generated_files/usb/usb_device.c"
 24561 ;; Parameters:    Size  Location     Type
 24562 ;;		None
 24563 ;; Auto vars:     Size  Location     Type
 24564 ;;		None
 24565 ;; Return value:  Size  Location     Type
 24566 ;;                  1    wreg      void 
 24567 ;; Registers used:
 24568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24569 ;; Tracked objects:
 24570 ;;		On entry : 3F/0
 24571 ;;		On exit  : 3E/0
 24572 ;;		Unchanged: 0/0
 24573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24574 ;;      Params:         0       0       0       0       0       0       0       0       0
 24575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24576 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24577 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24578 ;;Total ram usage:        0 bytes
 24579 ;; Hardware stack levels used: 1
 24580 ;; Hardware stack levels required when called: 2
 24581 ;; This function calls:
 24582 ;;		_USBCtrlTrfRxService
 24583 ;; This function is called by:
 24584 ;;		_USBCtrlEPService
 24585 ;; This function uses a non-reentrant model
 24586 ;;
 24587                           
 24588                           	psect	text127
 24589  00778E                     __ptext127:
 24590                           	callstack 0
 24591  00778E                     _USBCtrlTrfOutHandler:
 24592                           	callstack 16
 24593                           
 24594                           ; BSR set to: 0
 24595                           ;mcc_generated_files/usb/usb_device.c: 2544:     if(controlTransferState == 2)
 24596                           
 24597                           ;incstack = 0
 24598  00778E  0E02               	movlw	2
 24599  007790  19D0               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 24600  007792  A4D8               	btfss	status,2,c
 24601  007794  D003               	goto	i2l10703
 24602                           
 24603                           ; BSR set to: 0
 24604                           ;mcc_generated_files/usb/usb_device.c: 2545:     {;mcc_generated_files/usb/usb_device.c:
      +                           2546:         USBCtrlTrfRxService();
 24605  007796  ECC7  F02E         	call	_USBCtrlTrfRxService	;wreg free
 24606                           
 24607                           ;mcc_generated_files/usb/usb_device.c: 2547:     }
 24608  00779A  0012               	return	
 24609  00779C                     i2l10703:
 24610                           
 24611                           ; BSR set to: 0
 24612                           ;mcc_generated_files/usb/usb_device.c: 2549:     {;mcc_generated_files/usb/usb_device.c:
      +                           2552:         controlTransferState = 0;
 24613  00779C  0E00               	movlw	0
 24614  00779E  6FD0               	movwf	_controlTransferState& (0+255),b	;volatile
 24615                           
 24616                           ;mcc_generated_files/usb/usb_device.c: 2559:         if(BothEP0OutUOWNsSet == 0)
 24617  0077A0  0101               	movlb	1	; () banked
 24618  0077A2  51E0               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 24619  0077A4  A4D8               	btfss	status,2,c
 24620  0077A6  D01F               	goto	i2l10711
 24621                           
 24622                           ; BSR set to: 1
 24623                           ;mcc_generated_files/usb/usb_device.c: 2560:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2561:             pBDTEntryEP0OutNext->CNT = 8;
 24624  0077A8  EE20 F001          	lfsr	2,1
 24625  0077AC  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 24626  0077AE  26D9               	addwf	fsr2l,f,c
 24627  0077B0  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 24628  0077B2  22DA               	addwfc	fsr2h,f,c
 24629  0077B4  0E08               	movlw	8
 24630  0077B6  6EDF               	movwf	indf2,c
 24631                           
 24632                           ;mcc_generated_files/usb/usb_device.c: 2562:             pBDTEntryEP0OutNext->ADR = ((ui
      +                          nt16_t)(&SetupPkt));
 24633  0077B8  EE20 F002          	lfsr	2,2
 24634  0077BC  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 24635  0077BE  26D9               	addwf	fsr2l,f,c
 24636  0077C0  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 24637  0077C2  22DA               	addwfc	fsr2h,f,c
 24638  0077C4  0E30               	movlw	48
 24639  0077C6  6EDE               	movwf	postinc2,c
 24640  0077C8  0E04               	movlw	4
 24641  0077CA  6EDD               	movwf	postdec2,c
 24642                           
 24643                           ; BSR set to: 1
 24644                           ;mcc_generated_files/usb/usb_device.c: 2563:             pBDTEntryEP0OutNext->STAT.Val =
      +                           0x00|(0x08 & 0x08)|0x04;
 24645  0077CC  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24646  0077D0  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24647  0077D4  0E0C               	movlw	12
 24648  0077D6  6EDF               	movwf	indf2,c
 24649                           
 24650                           ; BSR set to: 1
 24651                           ;mcc_generated_files/usb/usb_device.c: 2564:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 24652  0077D8  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24653  0077DC  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24654  0077E0  0E00               	movlw	0
 24655  0077E2  8EDB               	bsf	plusw2,7,c
 24656                           
 24657                           ;mcc_generated_files/usb/usb_device.c: 2565:         }
 24658  0077E4  0012               	return	
 24659  0077E6                     i2l10711:
 24660                           
 24661                           ; BSR set to: 1
 24662                           ;mcc_generated_files/usb/usb_device.c: 2567:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2568:                 BothEP0OutUOWNsSet = 0;
 24663  0077E6  0E00               	movlw	0
 24664  0077E8  6FE0               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 24665  0077EA  0012               	return		;funcret
 24666  0077EC                     __end_of_USBCtrlTrfOutHandler:
 24667                           	callstack 0
 24668                           
 24669 ;; *************** function _USBCtrlTrfRxService *****************
 24670 ;; Defined at:
 24671 ;;		line 1856 in file "mcc_generated_files/usb/usb_device.c"
 24672 ;; Parameters:    Size  Location     Type
 24673 ;;		None
 24674 ;; Auto vars:     Size  Location     Type
 24675 ;;  byteToRead      1    1[COMRAM] unsigned char 
 24676 ;;  i               1    0[COMRAM] unsigned char 
 24677 ;; Return value:  Size  Location     Type
 24678 ;;                  1    wreg      void 
 24679 ;; Registers used:
 24680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24681 ;; Tracked objects:
 24682 ;;		On entry : 3F/0
 24683 ;;		On exit  : 3E/0
 24684 ;;		Unchanged: 0/0
 24685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24686 ;;      Params:         0       0       0       0       0       0       0       0       0
 24687 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24689 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24690 ;;Total ram usage:        2 bytes
 24691 ;; Hardware stack levels used: 1
 24692 ;; Hardware stack levels required when called: 1
 24693 ;; This function calls:
 24694 ;;		_USBCtrlEPAllowStatusStage
 24695 ;; This function is called by:
 24696 ;;		_USBCtrlTrfOutHandler
 24697 ;; This function uses a non-reentrant model
 24698 ;;
 24699                           
 24700                           	psect	text128
 24701  005D8E                     __ptext128:
 24702                           	callstack 0
 24703  005D8E                     _USBCtrlTrfRxService:
 24704                           	callstack 16
 24705                           
 24706                           ; BSR set to: 0
 24707                           ;mcc_generated_files/usb/usb_device.c: 1858:     uint8_t byteToRead;;mcc_generated_files
      +                          /usb/usb_device.c: 1859:     uint8_t i;;mcc_generated_files/usb/usb_device.c: 1863:     
      +                          byteToRead = pBDTEntryEP0OutCurrent->CNT;
 24708                           
 24709                           ;incstack = 0
 24710  005D8E  EE20 F001          	lfsr	2,1
 24711  005D92  51C6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 24712  005D94  26D9               	addwf	fsr2l,f,c
 24713  005D96  51C7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 24714  005D98  22DA               	addwfc	fsr2h,f,c
 24715  005D9A  50DF               	movf	indf2,w,c
 24716  005D9C  6E02               	movwf	USBCtrlTrfRxService@byteToRead^0,c
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;mcc_generated_files/usb/usb_device.c: 1869:     if(byteToRead > outPipes[0].wCount.Val)
 24720  005D9E  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 24721  005DA0  5DAC               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 24722  005DA2  0E00               	movlw	0
 24723  005DA4  59AD               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 24724  005DA6  A0D8               	btfss	status,0,c
 24725                           
 24726                           ; BSR set to: 0
 24727                           ;mcc_generated_files/usb/usb_device.c: 1870:     {;mcc_generated_files/usb/usb_device.c:
      +                           1871:         byteToRead = outPipes[0].wCount.Val;
 24728  005DA8  C0AC  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 24729                           
 24730                           ; BSR set to: 0
 24731                           ;mcc_generated_files/usb/usb_device.c: 1874:     outPipes[0].wCount.Val -= byteToRead;
 24732  005DAC  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 24733  005DAE  5FAC               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 24734  005DB0  0E00               	movlw	0
 24735  005DB2  5BAD               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 24736                           
 24737                           ; BSR set to: 0
 24738                           ;mcc_generated_files/usb/usb_device.c: 1878:     for(i=0;i<byteToRead;i++)
 24739  005DB4  0E00               	movlw	0
 24740  005DB6  6E01               	movwf	USBCtrlTrfRxService@i^0,c
 24741  005DB8  D00F               	goto	i2l9867
 24742  005DBA                     i2l9861:
 24743                           
 24744                           ; BSR set to: 0
 24745                           ;mcc_generated_files/usb/usb_device.c: 1879:     {;mcc_generated_files/usb/usb_device.c:
      +                           1880:         *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 24746  005DBA  0E38               	movlw	56
 24747  005DBC  2401               	addwf	USBCtrlTrfRxService@i^0,w,c
 24748  005DBE  6ED9               	movwf	fsr2l,c
 24749  005DC0  6ADA               	clrf	fsr2h,c
 24750  005DC2  0E04               	movlw	4
 24751  005DC4  22DA               	addwfc	fsr2h,f,c
 24752  005DC6  C0A8  FFE1         	movff	_outPipes,fsr1l	;volatile
 24753  005DCA  C0A9  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 24754  005DCE  CFDF FFE7          	movff	indf2,indf1
 24755                           
 24756                           ; BSR set to: 0
 24757  005DD2  4BA8               	infsnz	_outPipes& (0+255),f,b	;volatile
 24758  005DD4  2BA9               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 24759                           
 24760                           ; BSR set to: 0
 24761                           ;mcc_generated_files/usb/usb_device.c: 1881:     }
 24762  005DD6  2A01               	incf	USBCtrlTrfRxService@i^0,f,c
 24763  005DD8                     i2l9867:
 24764                           
 24765                           ; BSR set to: 0
 24766  005DD8  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 24767  005DDA  5C01               	subwf	USBCtrlTrfRxService@i^0,w,c
 24768  005DDC  A0D8               	btfss	status,0,c
 24769  005DDE  D7ED               	goto	i2l9861
 24770                           
 24771                           ; BSR set to: 0
 24772                           ;mcc_generated_files/usb/usb_device.c: 1885:     if(outPipes[0].wCount.Val > 0)
 24773  005DE0  51AC               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 24774  005DE2  11AD               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 24775  005DE4  B4D8               	btfsc	status,2,c
 24776  005DE6  D032               	goto	i2l9883
 24777                           
 24778                           ; BSR set to: 0
 24779                           ;mcc_generated_files/usb/usb_device.c: 1886:     {;mcc_generated_files/usb/usb_device.c:
      +                           1887:         pBDTEntryEP0OutNext->CNT = 8;
 24780  005DE8  EE20 F001          	lfsr	2,1
 24781  005DEC  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 24782  005DEE  26D9               	addwf	fsr2l,f,c
 24783  005DF0  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 24784  005DF2  22DA               	addwfc	fsr2h,f,c
 24785  005DF4  0E08               	movlw	8
 24786  005DF6  6EDF               	movwf	indf2,c
 24787                           
 24788                           ;mcc_generated_files/usb/usb_device.c: 1888:         pBDTEntryEP0OutNext->ADR = ((uint16
      +                          _t)(&CtrlTrfData));
 24789  005DF8  EE20 F002          	lfsr	2,2
 24790  005DFC  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 24791  005DFE  26D9               	addwf	fsr2l,f,c
 24792  005E00  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 24793  005E02  22DA               	addwfc	fsr2h,f,c
 24794  005E04  0E38               	movlw	56
 24795  005E06  6EDE               	movwf	postinc2,c
 24796  005E08  0E04               	movlw	4
 24797  005E0A  6EDD               	movwf	postdec2,c
 24798                           
 24799                           ; BSR set to: 0
 24800                           ;mcc_generated_files/usb/usb_device.c: 1889:         if(pBDTEntryEP0OutCurrent->STAT.DTS
      +                           == 0)
 24801  005E0C  C0C6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24802  005E10  C0C7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24803  005E14  BCDF               	btfsc	indf2,6,c
 24804  005E16  D00D               	goto	i2l9879
 24805                           
 24806                           ; BSR set to: 0
 24807                           ;mcc_generated_files/usb/usb_device.c: 1890:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1891:             pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 24808  005E18  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24809  005E1C  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24810  005E20  0E48               	movlw	72
 24811  005E22  6EDF               	movwf	indf2,c
 24812                           
 24813                           ; BSR set to: 0
 24814                           ;mcc_generated_files/usb/usb_device.c: 1892:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 24815  005E24  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24816  005E28  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24817  005E2C  0E00               	movlw	0
 24818  005E2E  8EDB               	bsf	plusw2,7,c
 24819                           
 24820                           ;mcc_generated_files/usb/usb_device.c: 1893:         }
 24821  005E30  0012               	return	
 24822  005E32                     i2l9879:
 24823                           
 24824                           ; BSR set to: 0
 24825                           ;mcc_generated_files/usb/usb_device.c: 1895:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1896:             pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 24826  005E32  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24827  005E36  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24828  005E3A  0E08               	movlw	8
 24829  005E3C  6EDF               	movwf	indf2,c
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;mcc_generated_files/usb/usb_device.c: 1897:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 24833  005E3E  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24834  005E42  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24835  005E46  0E00               	movlw	0
 24836  005E48  8EDB               	bsf	plusw2,7,c
 24837  005E4A  0012               	return	
 24838  005E4C                     i2l9883:
 24839                           
 24840                           ; BSR set to: 0
 24841                           ;mcc_generated_files/usb/usb_device.c: 1901:     {;mcc_generated_files/usb/usb_device.c:
      +                           1905:         pBDTEntryEP0OutNext->CNT = 8;
 24842  005E4C  EE20 F001          	lfsr	2,1
 24843  005E50  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 24844  005E52  26D9               	addwf	fsr2l,f,c
 24845  005E54  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 24846  005E56  22DA               	addwfc	fsr2h,f,c
 24847  005E58  0E08               	movlw	8
 24848  005E5A  6EDF               	movwf	indf2,c
 24849                           
 24850                           ;mcc_generated_files/usb/usb_device.c: 1906:         pBDTEntryEP0OutNext->ADR = ((uint16
      +                          _t)(&SetupPkt));
 24851  005E5C  EE20 F002          	lfsr	2,2
 24852  005E60  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 24853  005E62  26D9               	addwf	fsr2l,f,c
 24854  005E64  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 24855  005E66  22DA               	addwfc	fsr2h,f,c
 24856  005E68  0E30               	movlw	48
 24857  005E6A  6EDE               	movwf	postinc2,c
 24858  005E6C  0E04               	movlw	4
 24859  005E6E  6EDD               	movwf	postdec2,c
 24860                           
 24861                           ; BSR set to: 0
 24862                           ;mcc_generated_files/usb/usb_device.c: 1910:         pBDTEntryEP0OutNext->STAT.Val = 0x0
      +                          4;
 24863  005E70  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24864  005E74  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24865  005E78  0E04               	movlw	4
 24866  005E7A  6EDF               	movwf	indf2,c
 24867                           
 24868                           ; BSR set to: 0
 24869                           ;mcc_generated_files/usb/usb_device.c: 1911:         pBDTEntryEP0OutNext->STAT.Val |= 0x
      +                          80;
 24870  005E7C  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24871  005E80  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24872  005E84  0E00               	movlw	0
 24873  005E86  8EDB               	bsf	plusw2,7,c
 24874                           
 24875                           ; BSR set to: 0
 24876                           
 24877                           ; BSR set to: 0
 24878                           ;mcc_generated_files/usb/usb_device.c: 1919:         {
 24879  005E88  9FAB               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 24880                           
 24881                           ; BSR set to: 0
 24882                           ;mcc_generated_files/usb/usb_device.c: 1945:         if(USBDeferStatusStagePacket == 0)
 24883  005E8A  51CD               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 24884  005E8C  A4D8               	btfss	status,2,c
 24885  005E8E  0012               	return	
 24886                           
 24887                           ; BSR set to: 0
 24888                           ;mcc_generated_files/usb/usb_device.c: 1946:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1947:             USBCtrlEPAllowStatusStage();
 24889  005E90  EC85  F034         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24890  005E94  0012               	return		;funcret
 24891  005E96                     __end_of_USBCtrlTrfRxService:
 24892                           	callstack 0
 24893                           
 24894 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 24895 ;; Defined at:
 24896 ;;		line 1420 in file "mcc_generated_files/usb/usb_device.c"
 24897 ;; Parameters:    Size  Location     Type
 24898 ;;		None
 24899 ;; Auto vars:     Size  Location     Type
 24900 ;;		None
 24901 ;; Return value:  Size  Location     Type
 24902 ;;                  1    wreg      void 
 24903 ;; Registers used:
 24904 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24905 ;; Tracked objects:
 24906 ;;		On entry : 0/0
 24907 ;;		On exit  : 3E/0
 24908 ;;		Unchanged: 0/0
 24909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24910 ;;      Params:         0       0       0       0       0       0       0       0       0
 24911 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24912 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24913 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24914 ;;Total ram usage:        0 bytes
 24915 ;; Hardware stack levels used: 1
 24916 ;; This function calls:
 24917 ;;		Nothing
 24918 ;; This function is called by:
 24919 ;;		_USBDeviceTasks
 24920 ;;		_USBCtrlEPServiceComplete
 24921 ;;		_USBCtrlTrfRxService
 24922 ;; This function uses a non-reentrant model
 24923 ;;
 24924                           
 24925                           	psect	text129
 24926  00690A                     __ptext129:
 24927                           	callstack 0
 24928  00690A                     _USBCtrlEPAllowStatusStage:
 24929                           	callstack 16
 24930                           
 24931                           ;mcc_generated_files/usb/usb_device.c: 1427:     if(USBStatusStageEnabledFlag1 == 0)
 24932                           
 24933                           ;incstack = 0
 24934  00690A  0101               	movlb	1	; () banked
 24935  00690C  51DF               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 24936  00690E  A4D8               	btfss	status,2,c
 24937  006910  0012               	return	
 24938                           
 24939                           ; BSR set to: 1
 24940                           ;mcc_generated_files/usb/usb_device.c: 1428:     {;mcc_generated_files/usb/usb_device.c:
      +                           1429:         USBStatusStageEnabledFlag1 = 1;
 24941  006912  0E01               	movlw	1
 24942  006914  6FDF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 24943                           
 24944                           ;mcc_generated_files/usb/usb_device.c: 1430:         if(USBStatusStageEnabledFlag2 == 0)
 24945  006916  51DE               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 24946  006918  A4D8               	btfss	status,2,c
 24947  00691A  0012               	return	
 24948                           
 24949                           ; BSR set to: 1
 24950                           ;mcc_generated_files/usb/usb_device.c: 1431:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1432:             USBStatusStageEnabledFlag2 = 1;
 24951  00691C  0E01               	movlw	1
 24952  00691E  6FDE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 24953                           
 24954                           ; BSR set to: 1
 24955                           ;mcc_generated_files/usb/usb_device.c: 1436:             if(controlTransferState == 2)
 24956  006920  0E02               	movlw	2
 24957  006922  0100               	movlb	0	; () banked
 24958  006924  19D0               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 24959  006926  A4D8               	btfss	status,2,c
 24960  006928  D015               	goto	i2l8783
 24961                           
 24962                           ; BSR set to: 0
 24963                           ;mcc_generated_files/usb/usb_device.c: 1437:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1438:                 pBDTEntryIn[0]->CNT = 0;
 24964  00692A  EE20 F001          	lfsr	2,1
 24965  00692E  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 24966  006930  26D9               	addwf	fsr2l,f,c
 24967  006932  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 24968  006934  22DA               	addwfc	fsr2h,f,c
 24969  006936  0E00               	movlw	0
 24970  006938  6EDF               	movwf	indf2,c
 24971                           
 24972                           ; BSR set to: 0
 24973                           ;mcc_generated_files/usb/usb_device.c: 1439:                 pBDTEntryIn[0]->STAT.Val = 
      +                          0x40|(0x08 & 0x08);
 24974  00693A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 24975  00693E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24976  006942  0E48               	movlw	72
 24977  006944  6EDF               	movwf	indf2,c
 24978                           
 24979                           ; BSR set to: 0
 24980                           ;mcc_generated_files/usb/usb_device.c: 1440:                 pBDTEntryIn[0]->STAT.Val |=
      +                           0x80;
 24981  006946  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 24982  00694A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24983  00694E  0E00               	movlw	0
 24984  006950  8EDB               	bsf	plusw2,7,c
 24985                           
 24986                           ;mcc_generated_files/usb/usb_device.c: 1441:             }
 24987  006952  0012               	return	
 24988  006954                     i2l8783:
 24989                           
 24990                           ; BSR set to: 0
 24991  006954  05D0               	decf	_controlTransferState& (0+255),w,b	;volatile
 24992  006956  A4D8               	btfss	status,2,c
 24993  006958  0012               	return	
 24994                           
 24995                           ; BSR set to: 0
 24996                           ;mcc_generated_files/usb/usb_device.c: 1443:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1444:                 BothEP0OutUOWNsSet = 0;
 24997  00695A  0E00               	movlw	0
 24998  00695C  0101               	movlb	1	; () banked
 24999  00695E  6FE0               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25000                           
 25001                           ; BSR set to: 1
 25002                           ;mcc_generated_files/usb/usb_device.c: 1449:                     pBDTEntryEP0OutCurrent-
      +                          >CNT = 8;
 25003  006960  0100               	movlb	0	; () banked
 25004  006962  EE20 F001          	lfsr	2,1
 25005  006966  51C6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 25006  006968  26D9               	addwf	fsr2l,f,c
 25007  00696A  51C7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 25008  00696C  22DA               	addwfc	fsr2h,f,c
 25009  00696E  0E08               	movlw	8
 25010  006970  6EDF               	movwf	indf2,c
 25011                           
 25012                           ; BSR set to: 0
 25013                           ;mcc_generated_files/usb/usb_device.c: 1450:                     pBDTEntryEP0OutCurrent-
      +                          >ADR = ((uint16_t)(&SetupPkt));
 25014  006972  EE20 F002          	lfsr	2,2
 25015  006976  51C6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 25016  006978  26D9               	addwf	fsr2l,f,c
 25017  00697A  51C7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 25018  00697C  22DA               	addwfc	fsr2h,f,c
 25019  00697E  0E30               	movlw	48
 25020  006980  6EDE               	movwf	postinc2,c
 25021  006982  0E04               	movlw	4
 25022  006984  6EDD               	movwf	postdec2,c
 25023                           
 25024                           ; BSR set to: 0
 25025                           ;mcc_generated_files/usb/usb_device.c: 1451:                     pBDTEntryEP0OutCurrent-
      +                          >STAT.Val = 0x04;
 25026  006986  C0C6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25027  00698A  C0C7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25028  00698E  0E04               	movlw	4
 25029  006990  6EDF               	movwf	indf2,c
 25030                           
 25031                           ; BSR set to: 0
 25032                           ;mcc_generated_files/usb/usb_device.c: 1452:                     pBDTEntryEP0OutCurrent-
      +                          >STAT.Val |= 0x80;
 25033  006992  C0C6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25034  006996  C0C7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25035  00699A  0E00               	movlw	0
 25036  00699C  8EDB               	bsf	plusw2,7,c
 25037                           
 25038                           ; BSR set to: 0
 25039                           ;mcc_generated_files/usb/usb_device.c: 1453:                     BothEP0OutUOWNsSet = 1;
 25040  00699E  0E01               	movlw	1
 25041  0069A0  0101               	movlb	1	; () banked
 25042  0069A2  6FE0               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25043                           
 25044                           ; BSR set to: 1
 25045                           ;mcc_generated_files/usb/usb_device.c: 1457:                 pBDTEntryEP0OutNext->CNT = 
      +                          8;
 25046  0069A4  EE20 F001          	lfsr	2,1
 25047  0069A8  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 25048  0069AA  26D9               	addwf	fsr2l,f,c
 25049  0069AC  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25050  0069AE  22DA               	addwfc	fsr2h,f,c
 25051  0069B0  0E08               	movlw	8
 25052  0069B2  6EDF               	movwf	indf2,c
 25053                           
 25054                           ; BSR set to: 1
 25055                           ;mcc_generated_files/usb/usb_device.c: 1458:                 pBDTEntryEP0OutNext->ADR = 
      +                          ((uint16_t)(&SetupPkt));
 25056  0069B4  EE20 F002          	lfsr	2,2
 25057  0069B8  505B               	movf	_pBDTEntryEP0OutNext^0,w,c
 25058  0069BA  26D9               	addwf	fsr2l,f,c
 25059  0069BC  505C               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25060  0069BE  22DA               	addwfc	fsr2h,f,c
 25061  0069C0  0E30               	movlw	48
 25062  0069C2  6EDE               	movwf	postinc2,c
 25063  0069C4  0E04               	movlw	4
 25064  0069C6  6EDD               	movwf	postdec2,c
 25065                           
 25066                           ; BSR set to: 1
 25067                           ;mcc_generated_files/usb/usb_device.c: 1459:                 pBDTEntryEP0OutNext->STAT.V
      +                          al = 0x80;
 25068  0069C8  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25069  0069CC  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25070  0069D0  0E80               	movlw	128
 25071  0069D2  6EDF               	movwf	indf2,c
 25072  0069D4  0012               	return	
 25073  0069D6                     __end_of_USBCtrlEPAllowStatusStage:
 25074                           	callstack 0
 25075                           
 25076 ;; *************** function _USBCtrlTrfInHandler *****************
 25077 ;; Defined at:
 25078 ;;		line 2596 in file "mcc_generated_files/usb/usb_device.c"
 25079 ;; Parameters:    Size  Location     Type
 25080 ;;		None
 25081 ;; Auto vars:     Size  Location     Type
 25082 ;;  lastDTS         1    1[COMRAM] unsigned char 
 25083 ;; Return value:  Size  Location     Type
 25084 ;;                  1    wreg      void 
 25085 ;; Registers used:
 25086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25087 ;; Tracked objects:
 25088 ;;		On entry : 3F/0
 25089 ;;		On exit  : 3F/0
 25090 ;;		Unchanged: 0/0
 25091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25092 ;;      Params:         0       0       0       0       0       0       0       0       0
 25093 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25094 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25095 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25096 ;;Total ram usage:        1 bytes
 25097 ;; Hardware stack levels used: 1
 25098 ;; Hardware stack levels required when called: 1
 25099 ;; This function calls:
 25100 ;;		_USBCtrlTrfTxService
 25101 ;; This function is called by:
 25102 ;;		_USBCtrlEPService
 25103 ;; This function uses a non-reentrant model
 25104 ;;
 25105                           
 25106                           	psect	text130
 25107  0069D6                     __ptext130:
 25108                           	callstack 0
 25109  0069D6                     _USBCtrlTrfInHandler:
 25110                           	callstack 17
 25111                           
 25112                           ; BSR set to: 0
 25113                           ;mcc_generated_files/usb/usb_device.c: 2598:     uint8_t lastDTS;;mcc_generated_files/us
      +                          b/usb_device.c: 2600:     lastDTS = pBDTEntryIn[0]->STAT.DTS;
 25114                           
 25115                           ;incstack = 0
 25116  0069D6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25117  0069DA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25118  0069DE  0E00               	movlw	0
 25119  0069E0  BCDF               	btfsc	indf2,6,c
 25120  0069E2  0E01               	movlw	1
 25121  0069E4  6E02               	movwf	USBCtrlTrfInHandler@lastDTS^0,c
 25122                           
 25123                           ; BSR set to: 0
 25124                           ;mcc_generated_files/usb/usb_device.c: 2603:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)(
      +                          ((uint16_t)pBDTEntryIn[0]) ^ 0x0004);
 25125  0069E6  0E04               	movlw	4
 25126  0069E8  19B6               	xorwf	_pBDTEntryIn& (0+255),w,b
 25127  0069EA  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 25128  0069EC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25129  0069EE  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25130                           
 25131                           ; BSR set to: 0
 25132                           ;mcc_generated_files/usb/usb_device.c: 2608:     if(USBDeviceState == ADR_PENDING_STATE)
 25133  0069F0  0E08               	movlw	8
 25134  0069F2  185D               	xorwf	_USBDeviceState^0,w,c
 25135  0069F4  A4D8               	btfss	status,2,c
 25136  0069F6  D00B               	goto	i2l10727
 25137                           
 25138                           ; BSR set to: 0
 25139                           ;mcc_generated_files/usb/usb_device.c: 2609:     {;mcc_generated_files/usb/usb_device.c:
      +                           2610:         UADDR = (SetupPkt.bDevADR & 0x7F);
 25140  0069F8  0104               	movlb	4	; () banked
 25141  0069FA  5132               	movf	50,w,b	;volatile
 25142  0069FC  0B7F               	andlw	127
 25143  0069FE  6E63               	movwf	99,c	;volatile
 25144                           
 25145                           ; BSR set to: 4
 25146                           ;mcc_generated_files/usb/usb_device.c: 2611:         if(UADDR != 0u)
 25147  006A00  5063               	movf	99,w,c
 25148  006A02  B4D8               	btfsc	status,2,c
 25149  006A04  D002               	goto	i2l10725
 25150                           
 25151                           ; BSR set to: 4
 25152                           ;mcc_generated_files/usb/usb_device.c: 2612:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2613:             USBDeviceState=ADDRESS_STATE;
 25153  006A06  0E10               	movlw	16
 25154  006A08  D001               	goto	L34
 25155  006A0A                     i2l10725:
 25156                           
 25157                           ; BSR set to: 4
 25158                           ;mcc_generated_files/usb/usb_device.c: 2616:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2617:             USBDeviceState=DEFAULT_STATE;
 25159  006A0A  0E04               	movlw	4
 25160  006A0C                     L34:
 25161  006A0C  6E5D               	movwf	_USBDeviceState^0,c	;volatile
 25162  006A0E                     i2l10727:
 25163                           
 25164                           ;mcc_generated_files/usb/usb_device.c: 2622:     if(controlTransferState == 1)
 25165  006A0E  0100               	movlb	0	; () banked
 25166  006A10  05D0               	decf	_controlTransferState& (0+255),w,b	;volatile
 25167  006A12  A4D8               	btfss	status,2,c
 25168  006A14  D03B               	goto	i2l332
 25169                           
 25170                           ; BSR set to: 0
 25171                           ;mcc_generated_files/usb/usb_device.c: 2623:     {;mcc_generated_files/usb/usb_device.c:
      +                           2624:         pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 25172  006A16  EE20 F002          	lfsr	2,2
 25173  006A1A  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 25174  006A1C  26D9               	addwf	fsr2l,f,c
 25175  006A1E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25176  006A20  22DA               	addwfc	fsr2h,f,c
 25177  006A22  0E38               	movlw	56
 25178  006A24  6EDE               	movwf	postinc2,c
 25179  006A26  0E04               	movlw	4
 25180  006A28  6EDD               	movwf	postdec2,c
 25181                           
 25182                           ; BSR set to: 0
 25183                           ;mcc_generated_files/usb/usb_device.c: 2625:         USBCtrlTrfTxService();
 25184  006A2A  EC11  F032         	call	_USBCtrlTrfTxService	;wreg free
 25185                           
 25186                           ;mcc_generated_files/usb/usb_device.c: 2631:         if(shortPacketStatus == 2)
 25187  006A2E  0E02               	movlw	2
 25188  006A30  0100               	movlb	0	; () banked
 25189  006A32  19D1               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 25190  006A34  A4D8               	btfss	status,2,c
 25191  006A36  D00D               	goto	i2l10739
 25192                           
 25193                           ; BSR set to: 0
 25194                           ;mcc_generated_files/usb/usb_device.c: 2632:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2635:             pBDTEntryIn[0]->STAT.Val = 0x04;
 25195  006A38  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25196  006A3C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25197  006A40  0E04               	movlw	4
 25198  006A42  6EDF               	movwf	indf2,c
 25199                           
 25200                           ; BSR set to: 0
 25201                           ;mcc_generated_files/usb/usb_device.c: 2636:             pBDTEntryIn[0]->STAT.Val |= 0x8
      +                          0;
 25202  006A44  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25203  006A48  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25204  006A4C  0E00               	movlw	0
 25205  006A4E  8EDB               	bsf	plusw2,7,c
 25206                           
 25207                           ;mcc_generated_files/usb/usb_device.c: 2637:         }
 25208  006A50  0012               	return	
 25209  006A52                     i2l10739:
 25210                           
 25211                           ; BSR set to: 0
 25212                           ;mcc_generated_files/usb/usb_device.c: 2639:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2640:             if(lastDTS == 0)
 25213  006A52  5002               	movf	USBCtrlTrfInHandler@lastDTS^0,w,c
 25214  006A54  A4D8               	btfss	status,2,c
 25215  006A56  D00D               	goto	i2l10745
 25216                           
 25217                           ; BSR set to: 0
 25218                           ;mcc_generated_files/usb/usb_device.c: 2641:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2642:                 pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25219  006A58  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25220  006A5C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25221  006A60  0E48               	movlw	72
 25222  006A62  6EDF               	movwf	indf2,c
 25223                           
 25224                           ; BSR set to: 0
 25225                           ;mcc_generated_files/usb/usb_device.c: 2643:                 pBDTEntryIn[0]->STAT.Val |=
      +                           0x80;
 25226  006A64  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25227  006A68  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25228  006A6C  0E00               	movlw	0
 25229  006A6E  8EDB               	bsf	plusw2,7,c
 25230                           
 25231                           ;mcc_generated_files/usb/usb_device.c: 2644:             }
 25232  006A70  0012               	return	
 25233  006A72                     i2l10745:
 25234                           
 25235                           ; BSR set to: 0
 25236                           ;mcc_generated_files/usb/usb_device.c: 2646:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2647:                 pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 25237  006A72  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25238  006A76  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25239  006A7A  0E08               	movlw	8
 25240  006A7C  6EDF               	movwf	indf2,c
 25241                           
 25242                           ; BSR set to: 0
 25243                           ;mcc_generated_files/usb/usb_device.c: 2648:                 pBDTEntryIn[0]->STAT.Val |=
      +                           0x80;
 25244  006A7E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25245  006A82  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25246  006A86  0E00               	movlw	0
 25247  006A88  8EDB               	bsf	plusw2,7,c
 25248  006A8A  0012               	return	
 25249  006A8C                     i2l332:
 25250                           
 25251                           ; BSR set to: 0
 25252                           ;mcc_generated_files/usb/usb_device.c: 2653:  {;mcc_generated_files/usb/usb_device.c: 26
      +                          57:         if(outPipes[0].info.bits.busy == 1)
 25253  006A8C  BFAB               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 25254                           
 25255                           ; BSR set to: 0
 25256                           ;mcc_generated_files/usb/usb_device.c: 2663:             outPipes[0].info.bits.busy = 0;
 25257                           
 25258                           ; BSR set to: 0
 25259                           ;mcc_generated_files/usb/usb_device.c: 2660:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2661:                 outPipes[0].pFunc();
 25260                           ;mcc_generated_files/usb/usb_device.c: 2662:             }
 25261  006A8E  9FAB               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 25262                           
 25263                           ; BSR set to: 0
 25264                           ;mcc_generated_files/usb/usb_device.c: 2666:         controlTransferState = 0;
 25265  006A90  0E00               	movlw	0
 25266  006A92  6FD0               	movwf	_controlTransferState& (0+255),b	;volatile
 25267                           
 25268                           ; BSR set to: 0
 25269  006A94  0012               	return		;funcret
 25270  006A96                     __end_of_USBCtrlTrfInHandler:
 25271                           	callstack 0
 25272                           
 25273 ;; *************** function _USBCtrlTrfTxService *****************
 25274 ;; Defined at:
 25275 ;;		line 1775 in file "mcc_generated_files/usb/usb_device.c"
 25276 ;; Parameters:    Size  Location     Type
 25277 ;;		None
 25278 ;; Auto vars:     Size  Location     Type
 25279 ;;  byteToSend      1    0[COMRAM] unsigned char 
 25280 ;; Return value:  Size  Location     Type
 25281 ;;                  1    wreg      void 
 25282 ;; Registers used:
 25283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25284 ;; Tracked objects:
 25285 ;;		On entry : 3B/4
 25286 ;;		On exit  : 3E/0
 25287 ;;		Unchanged: 0/0
 25288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25289 ;;      Params:         0       0       0       0       0       0       0       0       0
 25290 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25291 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25292 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25293 ;;Total ram usage:        1 bytes
 25294 ;; Hardware stack levels used: 1
 25295 ;; This function calls:
 25296 ;;		Nothing
 25297 ;; This function is called by:
 25298 ;;		_USBCtrlEPAllowDataStage
 25299 ;;		_USBCtrlTrfInHandler
 25300 ;; This function uses a non-reentrant model
 25301 ;;
 25302                           
 25303                           	psect	text131
 25304  006422                     __ptext131:
 25305                           	callstack 0
 25306  006422                     _USBCtrlTrfTxService:
 25307                           	callstack 15
 25308                           
 25309                           ;mcc_generated_files/usb/usb_device.c: 1777:     uint8_t byteToSend;;mcc_generated_files
      +                          /usb/usb_device.c: 1781:     byteToSend = 8;
 25310                           
 25311                           ; BSR set to: 0
 25312                           ;incstack = 0
 25313  006422  0E08               	movlw	8
 25314  006424  6E01               	movwf	USBCtrlTrfTxService@byteToSend^0,c
 25315                           
 25316                           ;mcc_generated_files/usb/usb_device.c: 1782:     if(inPipes[0].wCount.Val < (uint8_t)8)
 25317  006426  0100               	movlb	0	; () banked
 25318  006428  51B5               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25319  00642A  E110               	bnz	i2l8071
 25320  00642C  0E08               	movlw	8
 25321  00642E  5DB4               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 25322  006430  B0D8               	btfsc	status,0,c
 25323  006432  D00C               	goto	i2l8071
 25324                           
 25325                           ; BSR set to: 0
 25326                           ;mcc_generated_files/usb/usb_device.c: 1783:     {;mcc_generated_files/usb/usb_device.c:
      +                           1784:         byteToSend = inPipes[0].wCount.Val;
 25327  006434  C0B4  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 25328                           
 25329                           ; BSR set to: 0
 25330                           ;mcc_generated_files/usb/usb_device.c: 1791:         if(shortPacketStatus == 0)
 25331  006438  51D1               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 25332  00643A  A4D8               	btfss	status,2,c
 25333  00643C  D002               	goto	i2l8067
 25334                           
 25335                           ; BSR set to: 0
 25336                           ;mcc_generated_files/usb/usb_device.c: 1792:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1793:             shortPacketStatus = 1;
 25337  00643E  0E01               	movlw	1
 25338  006440  D004               	goto	L35
 25339  006442                     i2l8067:
 25340                           
 25341                           ; BSR set to: 0
 25342  006442  05D1               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 25343  006444  A4D8               	btfss	status,2,c
 25344  006446  D002               	goto	i2l8071
 25345                           
 25346                           ; BSR set to: 0
 25347                           ;mcc_generated_files/usb/usb_device.c: 1796:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1797:             shortPacketStatus = 2;
 25348  006448  0E02               	movlw	2
 25349  00644A                     L35:
 25350  00644A  6FD1               	movwf	_shortPacketStatus& (0+255),b	;volatile
 25351  00644C                     i2l8071:
 25352                           
 25353                           ; BSR set to: 0
 25354                           ;mcc_generated_files/usb/usb_device.c: 1803:     inPipes[0].wCount.Val -= byteToSend;
 25355  00644C  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 25356  00644E  5FB4               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 25357  006450  0E00               	movlw	0
 25358  006452  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 25359                           
 25360                           ; BSR set to: 0
 25361                           ;mcc_generated_files/usb/usb_device.c: 1808:     pBDTEntryIn[0]->CNT = byteToSend;
 25362  006454  EE20 F001          	lfsr	2,1
 25363  006458  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 25364  00645A  26D9               	addwf	fsr2l,f,c
 25365  00645C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25366  00645E  22DA               	addwfc	fsr2h,f,c
 25367  006460  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 25368                           
 25369                           ; BSR set to: 0
 25370                           ;mcc_generated_files/usb/usb_device.c: 1812:     pDst = (volatile uint8_t*)CtrlTrfData;
 25371  006464  0E38               	movlw	56
 25372  006466  0101               	movlb	1	; () banked
 25373  006468  6FCD               	movwf	_pDst& (0+255),b
 25374  00646A  0E04               	movlw	4
 25375  00646C  6FCE               	movwf	(_pDst+1)& (0+255),b
 25376                           
 25377                           ; BSR set to: 1
 25378                           ;mcc_generated_files/usb/usb_device.c: 1813:     if(inPipes[0].info.bits.ctrl_trf_mem ==
      +                           0x00)
 25379  00646E  0100               	movlb	0	; () banked
 25380  006470  A1B3               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 25381  006472  D01D               	goto	i2l8089
 25382  006474  D03C               	goto	i2l8099
 25383  006476                     i2l8081:
 25384                           
 25385                           ;mcc_generated_files/usb/usb_device.c: 1816:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1817:             *pDst++ = *inPipes[0].pSrc.bRom++;
 25386  006476  C0B0  FFF6         	movff	_inPipes,tblptrl	;volatile
 25387  00647A  C0B1  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25388  00647E  6AF8               	clrf	tblptru,c
 25389  006480  C1CD  FFD9         	movff	_pDst,fsr2l
 25390  006484  C1CE  FFDA         	movff	_pDst+1,fsr2h
 25391  006488  0E07               	movlw	(high __ramtop+-1)
 25392  00648A  64F7               	cpfsgt	tblptrh,c
 25393  00648C  D003               	bra	i2u779_47
 25394  00648E  0008               	tblrd		*
 25395  006490  50F5               	movf	tablat,w,c
 25396  006492  D005               	bra	i2u779_40
 25397  006494                     i2u779_47:
 25398  006494  CFF6 FFE1          	movff	tblptrl,fsr1l
 25399  006498  CFF7 FFE2          	movff	tblptrh,fsr1h
 25400  00649C  50E7               	movf	indf1,w,c
 25401  00649E                     i2u779_40:
 25402  00649E  6EDF               	movwf	indf2,c
 25403  0064A0  0100               	movlb	0	; () banked
 25404  0064A2  4BB0               	infsnz	_inPipes& (0+255),f,b	;volatile
 25405  0064A4  2BB1               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 25406                           
 25407                           ; BSR set to: 0
 25408  0064A6  0101               	movlb	1	; () banked
 25409  0064A8  4BCD               	infsnz	_pDst& (0+255),f,b
 25410  0064AA  2BCE               	incf	(_pDst+1)& (0+255),f,b
 25411                           
 25412                           ; BSR set to: 1
 25413                           ;mcc_generated_files/usb/usb_device.c: 1818:             byteToSend--;
 25414  0064AC  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 25415  0064AE                     i2l8089:
 25416                           
 25417                           ;mcc_generated_files/usb/usb_device.c: 1815:         while(byteToSend)
 25418  0064AE  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 25419  0064B0  B4D8               	btfsc	status,2,c
 25420  0064B2  0012               	return	
 25421  0064B4  D7E0               	goto	i2l8081
 25422  0064B6                     i2l8091:
 25423                           
 25424                           ;mcc_generated_files/usb/usb_device.c: 1824:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1825:             *pDst++ = *inPipes[0].pSrc.bRam++;
 25425  0064B6  C0B0  FFF6         	movff	_inPipes,tblptrl	;volatile
 25426  0064BA  C0B1  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25427  0064BE  6AF8               	clrf	tblptru,c
 25428  0064C0  C1CD  FFD9         	movff	_pDst,fsr2l
 25429  0064C4  C1CE  FFDA         	movff	_pDst+1,fsr2h
 25430  0064C8  0E07               	movlw	(high __ramtop+-1)
 25431  0064CA  64F7               	cpfsgt	tblptrh,c
 25432  0064CC  D003               	bra	i2u781_47
 25433  0064CE  0008               	tblrd		*
 25434  0064D0  50F5               	movf	tablat,w,c
 25435  0064D2  D005               	bra	i2u781_40
 25436  0064D4                     i2u781_47:
 25437  0064D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 25438  0064D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 25439  0064DC  50E7               	movf	indf1,w,c
 25440  0064DE                     i2u781_40:
 25441  0064DE  6EDF               	movwf	indf2,c
 25442  0064E0  0100               	movlb	0	; () banked
 25443  0064E2  4BB0               	infsnz	_inPipes& (0+255),f,b	;volatile
 25444  0064E4  2BB1               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 25445                           
 25446                           ; BSR set to: 0
 25447  0064E6  0101               	movlb	1	; () banked
 25448  0064E8  4BCD               	infsnz	_pDst& (0+255),f,b
 25449  0064EA  2BCE               	incf	(_pDst+1)& (0+255),f,b
 25450                           
 25451                           ; BSR set to: 1
 25452                           ;mcc_generated_files/usb/usb_device.c: 1826:             byteToSend--;
 25453  0064EC  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 25454  0064EE                     i2l8099:
 25455                           
 25456                           ;mcc_generated_files/usb/usb_device.c: 1823:         while(byteToSend)
 25457  0064EE  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 25458  0064F0  B4D8               	btfsc	status,2,c
 25459  0064F2  0012               	return	
 25460  0064F4  D7E0               	goto	i2l8091
 25461  0064F6                     __end_of_USBCtrlTrfTxService:
 25462                           	callstack 0
 25463                           
 25464 ;; *************** function _TMR3_ISR *****************
 25465 ;; Defined at:
 25466 ;;		line 158 in file "mcc_generated_files/tmr3.c"
 25467 ;; Parameters:    Size  Location     Type
 25468 ;;		None
 25469 ;; Auto vars:     Size  Location     Type
 25470 ;;		None
 25471 ;; Return value:  Size  Location     Type
 25472 ;;                  1    wreg      void 
 25473 ;; Registers used:
 25474 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 25475 ;; Tracked objects:
 25476 ;;		On entry : 0/0
 25477 ;;		On exit  : 0/0
 25478 ;;		Unchanged: 0/0
 25479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25480 ;;      Params:         0       0       0       0       0       0       0       0       0
 25481 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25482 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25483 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25484 ;;Total ram usage:        0 bytes
 25485 ;; Hardware stack levels used: 1
 25486 ;; Hardware stack levels required when called: 1
 25487 ;; This function calls:
 25488 ;;		Absolute function
 25489 ;;		_TMR3_DefaultInterruptHandler
 25490 ;;		_TMR3_WriteTimer
 25491 ;; This function is called by:
 25492 ;;		_INTERRUPT_InterruptManager
 25493 ;; This function uses a non-reentrant model
 25494 ;;
 25495                           
 25496                           	psect	text132
 25497  000144                     __ptext132:
 25498                           	callstack 0
 25499  000144                     _TMR3_ISR:
 25500                           	callstack 19
 25501                           
 25502                           ;mcc_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
 25503                           
 25504                           ;incstack = 0
 25505  000144  92A1               	bcf	161,1,c	;volatile
 25506                           
 25507                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
 25508  000146  C2DE  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 25509  00014A  C2DF  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 25510  00014E  EC76  F002         	call	_TMR3_WriteTimer	;wreg free
 25511                           
 25512                           ;mcc_generated_files/tmr3.c: 165:     if(TMR3_InterruptHandler)
 25513  000152  0102               	movlb	2	; () banked
 25514  000154  51DC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 25515  000156  11DD               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 25516  000158  B4D8               	btfsc	status,2,c
 25517  00015A  0012               	return	
 25518                           
 25519                           ; BSR set to: 2
 25520                           ;mcc_generated_files/tmr3.c: 166:     {;mcc_generated_files/tmr3.c: 167:         TMR3_In
      +                          terruptHandler();
 25521  00015C  D801               	call	i2u1403_48
 25522  00015E  0012               	return	
 25523  000160                     i2u1403_48:
 25524  000160  0005               	push	
 25525  000162  6EFA               	movwf	pclath,c
 25526  000164  51DC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 25527  000166  6EFD               	movwf	tosl,c
 25528  000168  51DD               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 25529  00016A  6EFE               	movwf	tosh,c
 25530  00016C  50F8               	movf	tblptru,w,c
 25531  00016E  6EFF               	movwf	tosu,c
 25532  000170  50FA               	movf	pclath,w,c
 25533  000172  0012               	return		;indir
 25534  000174                     __end_of_TMR3_ISR:
 25535                           	callstack 0
 25536                           
 25537 ;; *************** function _TMR3_WriteTimer *****************
 25538 ;; Defined at:
 25539 ;;		line 121 in file "mcc_generated_files/tmr3.c"
 25540 ;; Parameters:    Size  Location     Type
 25541 ;;  timerVal        2    0[COMRAM] unsigned short 
 25542 ;; Auto vars:     Size  Location     Type
 25543 ;;		None
 25544 ;; Return value:  Size  Location     Type
 25545 ;;                  1    wreg      void 
 25546 ;; Registers used:
 25547 ;;		None
 25548 ;; Tracked objects:
 25549 ;;		On entry : 0/0
 25550 ;;		On exit  : 0/0
 25551 ;;		Unchanged: 0/0
 25552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25553 ;;      Params:         2       0       0       0       0       0       0       0       0
 25554 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25555 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25556 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25557 ;;Total ram usage:        2 bytes
 25558 ;; Hardware stack levels used: 1
 25559 ;; This function calls:
 25560 ;;		Nothing
 25561 ;; This function is called by:
 25562 ;;		_TMR3_ISR
 25563 ;; This function uses a non-reentrant model
 25564 ;;
 25565                           
 25566                           	psect	text133
 25567  0004EC                     __ptext133:
 25568                           	callstack 0
 25569  0004EC                     _TMR3_WriteTimer:
 25570                           	callstack 19
 25571                           
 25572                           ;mcc_generated_files/tmr3.c: 121: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 122: {;mcc_generated_files/tmr3.c: 123:     if (T3CONbits.T3SYNC == 1)
 25573                           
 25574                           ;incstack = 0
 25575  0004EC  A4B1               	btfss	177,2,c	;volatile
 25576  0004EE  D007               	goto	i2l673
 25577                           
 25578                           ;mcc_generated_files/tmr3.c: 124:     {;mcc_generated_files/tmr3.c: 126:         T3CONbi
      +                          ts.TMR3ON = 0;
 25579  0004F0  90B1               	bcf	177,0,c	;volatile
 25580                           
 25581                           ;mcc_generated_files/tmr3.c: 129:         TMR3H = (uint8_t)(timerVal >> 8);
 25582  0004F2  C002  FFB3         	movff	TMR3_WriteTimer@timerVal+1,4019	;volatile
 25583                           
 25584                           ;mcc_generated_files/tmr3.c: 130:         TMR3L = (uint8_t)timerVal;
 25585  0004F6  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 25586                           
 25587                           ;mcc_generated_files/tmr3.c: 133:         T3CONbits.TMR3ON =1;
 25588  0004FA  80B1               	bsf	177,0,c	;volatile
 25589                           
 25590                           ;mcc_generated_files/tmr3.c: 134:     }
 25591  0004FC  0012               	return	
 25592  0004FE                     i2l673:
 25593                           
 25594                           ;mcc_generated_files/tmr3.c: 136:     {;mcc_generated_files/tmr3.c: 138:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
 25595  0004FE  C002  FFB3         	movff	TMR3_WriteTimer@timerVal+1,4019	;volatile
 25596                           
 25597                           ;mcc_generated_files/tmr3.c: 139:         TMR3L = (uint8_t)timerVal;
 25598  000502  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 25599  000506  0012               	return		;funcret
 25600  000508                     __end_of_TMR3_WriteTimer:
 25601                           	callstack 0
 25602                           
 25603 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 25604 ;; Defined at:
 25605 ;;		line 176 in file "mcc_generated_files/tmr3.c"
 25606 ;; Parameters:    Size  Location     Type
 25607 ;;		None
 25608 ;; Auto vars:     Size  Location     Type
 25609 ;;		None
 25610 ;; Return value:  Size  Location     Type
 25611 ;;                  1    wreg      void 
 25612 ;; Registers used:
 25613 ;;		None
 25614 ;; Tracked objects:
 25615 ;;		On entry : 3F/2
 25616 ;;		On exit  : 3F/2
 25617 ;;		Unchanged: 3F/0
 25618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25619 ;;      Params:         0       0       0       0       0       0       0       0       0
 25620 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25622 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25623 ;;Total ram usage:        0 bytes
 25624 ;; Hardware stack levels used: 1
 25625 ;; This function calls:
 25626 ;;		Nothing
 25627 ;; This function is called by:
 25628 ;;		_TMR3_Initialize
 25629 ;;		_TMR3_ISR
 25630 ;; This function uses a non-reentrant model
 25631 ;;
 25632                           
 25633                           	psect	text134
 25634  00061A                     __ptext134:
 25635                           	callstack 0
 25636  00061A                     _TMR3_DefaultInterruptHandler:
 25637                           	callstack 19
 25638                           
 25639                           ; BSR set to: 2
 25640                           
 25641                           ;incstack = 0
 25642  00061A  0012               	return		;funcret
 25643  00061C                     __end_of_TMR3_DefaultInterruptHandler:
 25644                           	callstack 0
 25645                           
 25646 ;; *************** function _TMR2_ISR *****************
 25647 ;; Defined at:
 25648 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 25649 ;; Parameters:    Size  Location     Type
 25650 ;;		None
 25651 ;; Auto vars:     Size  Location     Type
 25652 ;;		None
 25653 ;; Return value:  Size  Location     Type
 25654 ;;                  1    wreg      void 
 25655 ;; Registers used:
 25656 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 25657 ;; Tracked objects:
 25658 ;;		On entry : 0/0
 25659 ;;		On exit  : 0/0
 25660 ;;		Unchanged: 0/0
 25661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25662 ;;      Params:         0       0       0       0       0       0       0       0       0
 25663 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25664 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25665 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25666 ;;Total ram usage:        0 bytes
 25667 ;; Hardware stack levels used: 1
 25668 ;; Hardware stack levels required when called: 3
 25669 ;; This function calls:
 25670 ;;		Absolute function
 25671 ;;		_G01_TMR2_ISR
 25672 ;;		_TMR2_DefaultInterruptHandler
 25673 ;; This function is called by:
 25674 ;;		_INTERRUPT_InterruptManager
 25675 ;; This function uses a non-reentrant model
 25676 ;;
 25677                           
 25678                           	psect	text135
 25679  0003CE                     __ptext135:
 25680                           	callstack 0
 25681  0003CE                     _TMR2_ISR:
 25682                           	callstack 17
 25683                           
 25684                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 25685                           
 25686                           ; BSR set to: 2
 25687                           ;incstack = 0
 25688  0003CE  929E               	bcf	158,1,c	;volatile
 25689                           
 25690                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 25691  0003D0  0102               	movlb	2	; () banked
 25692  0003D2  51DA               	movf	_TMR2_InterruptHandler& (0+255),w,b
 25693  0003D4  11DB               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 25694  0003D6  B4D8               	btfsc	status,2,c
 25695  0003D8  0012               	return	
 25696                           
 25697                           ; BSR set to: 2
 25698                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 25699  0003DA  D801               	call	i2u1405_48
 25700  0003DC  0012               	return	
 25701  0003DE                     i2u1405_48:
 25702  0003DE  0005               	push	
 25703  0003E0  6EFA               	movwf	pclath,c
 25704  0003E2  51DA               	movf	_TMR2_InterruptHandler& (0+255),w,b
 25705  0003E4  6EFD               	movwf	tosl,c
 25706  0003E6  51DB               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 25707  0003E8  6EFE               	movwf	tosh,c
 25708  0003EA  50F8               	movf	tblptru,w,c
 25709  0003EC  6EFF               	movwf	tosu,c
 25710  0003EE  50FA               	movf	pclath,w,c
 25711  0003F0  0012               	return		;indir
 25712  0003F2                     __end_of_TMR2_ISR:
 25713                           	callstack 0
 25714                           
 25715 ;; *************** function _G01_TMR2_ISR *****************
 25716 ;; Defined at:
 25717 ;;		line 31 in file "guia.c"
 25718 ;; Parameters:    Size  Location     Type
 25719 ;;		None
 25720 ;; Auto vars:     Size  Location     Type
 25721 ;;  period          2    0[BANK0 ] unsigned short 
 25722 ;; Return value:  Size  Location     Type
 25723 ;;                  1    wreg      void 
 25724 ;; Registers used:
 25725 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25726 ;; Tracked objects:
 25727 ;;		On entry : 3F/2
 25728 ;;		On exit  : 3F/1
 25729 ;;		Unchanged: 0/0
 25730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25731 ;;      Params:         0       0       0       0       0       0       0       0       0
 25732 ;;      Locals:         0       6       0       0       0       0       0       0       0
 25733 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25734 ;;      Totals:         2       6       0       0       0       0       0       0       0
 25735 ;;Total ram usage:        8 bytes
 25736 ;; Hardware stack levels used: 1
 25737 ;; Hardware stack levels required when called: 2
 25738 ;; This function calls:
 25739 ;;		___lwdiv
 25740 ;;		i2_TMR2_LoadPeriodRegister
 25741 ;;		i2_TMR2_StopTimer
 25742 ;;		i2___fladd
 25743 ;;		i2___fldiv
 25744 ;;		i2___flmul
 25745 ;;		i2___flsub
 25746 ;;		i2___fltol
 25747 ;;		i2___xxtofl
 25748 ;;		i2_setMicroStep
 25749 ;; This function is called by:
 25750 ;;		_G_01
 25751 ;;		_TMR2_ISR
 25752 ;; This function uses a non-reentrant model
 25753 ;;
 25754                           
 25755                           	psect	text136
 25756  003296                     __ptext136:
 25757                           	callstack 0
 25758  003296                     _G01_TMR2_ISR:
 25759                           	callstack 17
 25760                           
 25761                           ; BSR set to: 2
 25762                           ;guia.c: 32:    uint16_t period;;guia.c: 33:    LATBbits.LATB6 = ~LATBbits.LATB6;
 25763                           
 25764                           ;incstack = 0
 25765  003296  AC8A               	btfss	138,6,c	;volatile
 25766  003298  D002               	goto	i2u1351_40
 25767  00329A  0E01               	movlw	1
 25768  00329C  D001               	goto	i2u1351_46
 25769  00329E                     i2u1351_40:
 25770  00329E  0E00               	movlw	0
 25771  0032A0                     i2u1351_46:
 25772  0032A0  0AFF               	xorlw	255
 25773  0032A2  6E59               	movwf	??_G01_TMR2_ISR^0,c
 25774  0032A4  3A59               	swapf	??_G01_TMR2_ISR^0,f,c
 25775  0032A6  4659               	rlncf	??_G01_TMR2_ISR^0,f,c
 25776  0032A8  4659               	rlncf	??_G01_TMR2_ISR^0,f,c
 25777  0032AA  508A               	movf	138,w,c	;volatile
 25778  0032AC  1859               	xorwf	??_G01_TMR2_ISR^0,w,c
 25779  0032AE  0BBF               	andlw	-65
 25780  0032B0  1859               	xorwf	??_G01_TMR2_ISR^0,w,c
 25781  0032B2  6E8A               	movwf	138,c	;volatile
 25782                           
 25783                           ; BSR set to: 2
 25784                           ;guia.c: 34:    if(S_CHANGE){
 25785  0032B4  0101               	movlb	1	; () banked
 25786  0032B6  51D3               	movf	_S_CHANGE& (0+255),w,b
 25787  0032B8  A4D8               	btfss	status,2,c
 25788  0032BA  D0A9               	goto	i2l11795
 25789  0032BC  D0B6               	goto	i2l1185
 25790  0032BE                     i2l11775:
 25791                           
 25792                           ; BSR set to: 1
 25793                           ;guia.c: 37:             ustep=1;
 25794  0032BE  0E01               	movlw	1
 25795  0032C0  0100               	movlb	0	; () banked
 25796  0032C2  6FD3               	movwf	_ustep& (0+255),b
 25797                           
 25798                           ; BSR set to: 0
 25799                           ;guia.c: 38:             period=46665*60/(2*31)*inverse_S*inverse_time_feed;
 25800  0032C4  0E00               	movlw	0
 25801  0032C6  6E2C               	movwf	i2___flmul@a^0,c
 25802  0032C8  0E67               	movlw	103
 25803  0032CA  6E2D               	movwf	(i2___flmul@a+1)^0,c
 25804  0032CC  0E30               	movlw	48
 25805  0032CE  6E2E               	movwf	(i2___flmul@a+2)^0,c
 25806  0032D0  0E47               	movlw	71
 25807  0032D2  6E2F               	movwf	(i2___flmul@a+3)^0,c
 25808  0032D4  C2F2  F028         	movff	_inverse_S,i2___flmul@b
 25809  0032D8  C2F3  F029         	movff	_inverse_S+1,i2___flmul@b+1
 25810  0032DC  C2F4  F02A         	movff	_inverse_S+2,i2___flmul@b+2
 25811  0032E0  C2F5  F02B         	movff	_inverse_S+3,i2___flmul@b+3
 25812  0032E4  ECA8  F014         	call	i2___flmul	;wreg free
 25813  0032E8  C028  F062         	movff	?i2___flmul,_G01_TMR2_ISR$5862
 25814  0032EC  C029  F063         	movff	?i2___flmul+1,_G01_TMR2_ISR$5862+1
 25815  0032F0  C02A  F064         	movff	?i2___flmul+2,_G01_TMR2_ISR$5862+2
 25816  0032F4  C02B  F065         	movff	?i2___flmul+3,_G01_TMR2_ISR$5862+3
 25817                           
 25818                           ;guia.c: 38:             period=46665*60/(2*31)*inverse_S*inverse_time_feed;
 25819  0032F8  C2EA  F02C         	movff	_inverse_time_feed,i2___flmul@a
 25820  0032FC  C2EB  F02D         	movff	_inverse_time_feed+1,i2___flmul@a+1
 25821  003300  C2EC  F02E         	movff	_inverse_time_feed+2,i2___flmul@a+2
 25822  003304  C2ED  F02F         	movff	_inverse_time_feed+3,i2___flmul@a+3
 25823  003308  C062  F028         	movff	_G01_TMR2_ISR$5862,i2___flmul@b
 25824  00330C  C063  F029         	movff	_G01_TMR2_ISR$5862+1,i2___flmul@b+1
 25825  003310  C064  F02A         	movff	_G01_TMR2_ISR$5862+2,i2___flmul@b+2
 25826  003314  C065  F02B         	movff	_G01_TMR2_ISR$5862+3,i2___flmul@b+3
 25827  003318  ECA8  F014         	call	i2___flmul	;wreg free
 25828  00331C  C028  F041         	movff	?i2___flmul,i2___fltol@f1
 25829  003320  C029  F042         	movff	?i2___flmul+1,i2___fltol@f1+1
 25830  003324  C02A  F043         	movff	?i2___flmul+2,i2___fltol@f1+2
 25831  003328  C02B  F044         	movff	?i2___flmul+3,i2___fltol@f1+3
 25832  00332C  ECA9  F035         	call	i2___fltol	;wreg free
 25833  003330  C041  F060         	movff	?i2___fltol,G01_TMR2_ISR@period
 25834  003334  C042  F061         	movff	?i2___fltol+1,G01_TMR2_ISR@period+1
 25835                           
 25836                           ;guia.c: 39:             while((uint16_t)(period/ustep)>255){
 25837  003338  D00A               	goto	i2l11785
 25838  00333A                     i2l11781:
 25839                           
 25840                           ;guia.c: 40:                ustep=ustep<<1;
 25841  00333A  0100               	movlb	0	; () banked
 25842  00333C  51D3               	movf	_ustep& (0+255),w,b
 25843  00333E  25D3               	addwf	_ustep& (0+255),w,b
 25844  003340  6FD3               	movwf	_ustep& (0+255),b
 25845                           
 25846                           ;guia.c: 41:                if(ustep>16){
 25847  003342  0E10               	movlw	16
 25848  003344  65D3               	cpfsgt	_ustep& (0+255),b
 25849  003346  D003               	goto	i2l11785
 25850                           
 25851                           ; BSR set to: 0
 25852                           ;guia.c: 42:                   ustep=16;
 25853  003348  0E10               	movlw	16
 25854  00334A  6FD3               	movwf	_ustep& (0+255),b
 25855                           
 25856                           ;guia.c: 43:                   break;
 25857  00334C  D00C               	goto	i2u1354_40
 25858  00334E                     i2l11785:
 25859                           
 25860                           ;guia.c: 39:             while((uint16_t)(period/ustep)>255){
 25861  00334E  C060  F001         	movff	G01_TMR2_ISR@period,___lwdiv@dividend
 25862  003352  C061  F002         	movff	G01_TMR2_ISR@period+1,___lwdiv@dividend+1
 25863  003356  C0D3  F003         	movff	_ustep,___lwdiv@divisor
 25864  00335A  6A04               	clrf	(___lwdiv@divisor+1)^0,c
 25865  00335C  EC01  F03D         	call	___lwdiv	;wreg free
 25866  003360  0402               	decf	(?___lwdiv+1)^0,w,c
 25867  003362  B0D8               	btfsc	status,0,c
 25868  003364  D7EA               	goto	i2l11781
 25869  003366                     i2u1354_40:
 25870                           
 25871                           ;guia.c: 46:             pasos =(int) (distanciaRestante* 31* ustep);
 25872  003366  0E00               	movlw	0
 25873  003368  6E2C               	movwf	i2___flmul@a^0,c
 25874  00336A  0E00               	movlw	0
 25875  00336C  6E2D               	movwf	(i2___flmul@a+1)^0,c
 25876  00336E  0EF8               	movlw	248
 25877  003370  6E2E               	movwf	(i2___flmul@a+2)^0,c
 25878  003372  0E41               	movlw	65
 25879  003374  6E2F               	movwf	(i2___flmul@a+3)^0,c
 25880  003376  C2BC  F028         	movff	_distanciaRestante,i2___flmul@b
 25881  00337A  C2BD  F029         	movff	_distanciaRestante+1,i2___flmul@b+1
 25882  00337E  C2BE  F02A         	movff	_distanciaRestante+2,i2___flmul@b+2
 25883  003382  C2BF  F02B         	movff	_distanciaRestante+3,i2___flmul@b+3
 25884  003386  ECA8  F014         	call	i2___flmul	;wreg free
 25885  00338A  C028  F062         	movff	?i2___flmul,_G01_TMR2_ISR$5862
 25886  00338E  C029  F063         	movff	?i2___flmul+1,_G01_TMR2_ISR$5862+1
 25887  003392  C02A  F064         	movff	?i2___flmul+2,_G01_TMR2_ISR$5862+2
 25888  003396  C02B  F065         	movff	?i2___flmul+3,_G01_TMR2_ISR$5862+3
 25889                           
 25890                           ;guia.c: 46:             pasos =(int) (distanciaRestante* 31* ustep);
 25891  00339A  0100               	movlb	0	; () banked
 25892  00339C  51D3               	movf	_ustep& (0+255),w,b
 25893  00339E  6E01               	movwf	i2___xxtofl@val^0,c
 25894  0033A0  6A02               	clrf	(i2___xxtofl@val+1)^0,c
 25895  0033A2  6A03               	clrf	(i2___xxtofl@val+2)^0,c
 25896  0033A4  6A04               	clrf	(i2___xxtofl@val+3)^0,c
 25897  0033A6  0E01               	movlw	1
 25898  0033A8  EC4C  F028         	call	i2___xxtofl
 25899  0033AC  C001  F02C         	movff	?i2___xxtofl,i2___flmul@a
 25900  0033B0  C002  F02D         	movff	?i2___xxtofl+1,i2___flmul@a+1
 25901  0033B4  C003  F02E         	movff	?i2___xxtofl+2,i2___flmul@a+2
 25902  0033B8  C004  F02F         	movff	?i2___xxtofl+3,i2___flmul@a+3
 25903  0033BC  C062  F028         	movff	_G01_TMR2_ISR$5862,i2___flmul@b
 25904  0033C0  C063  F029         	movff	_G01_TMR2_ISR$5862+1,i2___flmul@b+1
 25905  0033C4  C064  F02A         	movff	_G01_TMR2_ISR$5862+2,i2___flmul@b+2
 25906  0033C8  C065  F02B         	movff	_G01_TMR2_ISR$5862+3,i2___flmul@b+3
 25907  0033CC  ECA8  F014         	call	i2___flmul	;wreg free
 25908  0033D0  C028  F041         	movff	?i2___flmul,i2___fltol@f1
 25909  0033D4  C029  F042         	movff	?i2___flmul+1,i2___fltol@f1+1
 25910  0033D8  C02A  F043         	movff	?i2___flmul+2,i2___fltol@f1+2
 25911  0033DC  C02B  F044         	movff	?i2___flmul+3,i2___fltol@f1+3
 25912  0033E0  ECA9  F035         	call	i2___fltol	;wreg free
 25913  0033E4  C041  F1C7         	movff	?i2___fltol,_pasos	;volatile
 25914  0033E8  C042  F1C8         	movff	?i2___fltol+1,_pasos+1	;volatile
 25915                           
 25916                           ;guia.c: 47:             setMicroStep(ustep);
 25917  0033EC  0100               	movlb	0	; () banked
 25918  0033EE  51D3               	movf	_ustep& (0+255),w,b
 25919  0033F0  EC95  F03B         	call	i2_setMicroStep
 25920                           
 25921                           ;guia.c: 48:             TMR2_LoadPeriodRegister((uint8_t)(period/ustep));
 25922  0033F4  C060  F001         	movff	G01_TMR2_ISR@period,___lwdiv@dividend
 25923  0033F8  C061  F002         	movff	G01_TMR2_ISR@period+1,___lwdiv@dividend+1
 25924  0033FC  C0D3  F003         	movff	_ustep,___lwdiv@divisor
 25925  003400  6A04               	clrf	(___lwdiv@divisor+1)^0,c
 25926  003402  EC01  F03D         	call	___lwdiv	;wreg free
 25927  003406  5001               	movf	?___lwdiv^0,w,c
 25928  003408  ECEE  F002         	call	i2_TMR2_LoadPeriodRegister
 25929                           
 25930                           ;guia.c: 50:             break;
 25931  00340C  D00B               	goto	i2l11797
 25932  00340E                     i2l11795:
 25933                           
 25934                           ; BSR set to: 1
 25935  00340E  51D8               	movf	_feed_state& (0+255),w,b
 25936  003410  6E59               	movwf	??_G01_TMR2_ISR^0,c
 25937  003412  6A5A               	clrf	(??_G01_TMR2_ISR+1)^0,c
 25938                           
 25939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25940                           ; Switch size 1, requested type "simple"
 25941                           ; Number of cases is 1, Range of values is 0 to 0
 25942                           ; switch strategies available:
 25943                           ; Name         Instructions Cycles
 25944                           ; simple_byte            4     3 (average)
 25945                           ;	Chosen strategy is simple_byte
 25946  003414  505A               	movf	(??_G01_TMR2_ISR+1)^0,w,c
 25947  003416  0A00               	xorlw	0	; case 0
 25948  003418  A4D8               	btfss	status,2,c
 25949  00341A  D004               	goto	i2l11797
 25950                           
 25951                           ; BSR set to: 1
 25952                           ; Switch size 1, requested type "simple"
 25953                           ; Number of cases is 1, Range of values is 95 to 95
 25954                           ; switch strategies available:
 25955                           ; Name         Instructions Cycles
 25956                           ; simple_byte            4     3 (average)
 25957                           ;	Chosen strategy is simple_byte
 25958  00341C  5059               	movf	??_G01_TMR2_ISR^0,w,c
 25959  00341E  0A5F               	xorlw	95	; case 95
 25960  003420  B4D8               	btfsc	status,2,c
 25961  003422  D74D               	goto	i2l11775
 25962  003424                     i2l11797:
 25963                           
 25964                           ;guia.c: 54:       S_CHANGE=0;
 25965  003424  0E00               	movlw	0
 25966  003426  0101               	movlb	1	; () banked
 25967  003428  6FD3               	movwf	_S_CHANGE& (0+255),b
 25968  00342A                     i2l1185:
 25969                           
 25970                           ; BSR set to: 1
 25971                           ;guia.c: 56:    if(flag == 0) flag = 1;
 25972  00342A  51D2               	movf	_flag& (0+255),w,b
 25973  00342C  A4D8               	btfss	status,2,c
 25974  00342E  D003               	goto	i2l1194
 25975                           
 25976                           ; BSR set to: 1
 25977  003430  0E01               	movlw	1
 25978  003432  6FD2               	movwf	_flag& (0+255),b
 25979  003434  0012               	return	
 25980  003436                     i2l1194:
 25981                           
 25982                           ; BSR set to: 1
 25983                           ;guia.c: 58:       if(PORTBbits.RB7==1){
 25984  003436  AE81               	btfss	129,7,c	;volatile
 25985  003438  D048               	goto	i2l11803
 25986                           
 25987                           ; BSR set to: 1
 25988                           ;guia.c: 59:          pos_relativa_Z=pos_relativa_Z+(float)((float)1/31/ustep);
 25989  00343A  0100               	movlb	0	; () banked
 25990  00343C  51D3               	movf	_ustep& (0+255),w,b
 25991  00343E  6E01               	movwf	i2___xxtofl@val^0,c
 25992  003440  6A02               	clrf	(i2___xxtofl@val+1)^0,c
 25993  003442  6A03               	clrf	(i2___xxtofl@val+2)^0,c
 25994  003444  6A04               	clrf	(i2___xxtofl@val+3)^0,c
 25995  003446  0E01               	movlw	1
 25996  003448  EC4C  F028         	call	i2___xxtofl
 25997  00344C  C001  F013         	movff	?i2___xxtofl,i2___fldiv@a
 25998  003450  C002  F014         	movff	?i2___xxtofl+1,i2___fldiv@a+1
 25999  003454  C003  F015         	movff	?i2___xxtofl+2,i2___fldiv@a+2
 26000  003458  C004  F016         	movff	?i2___xxtofl+3,i2___fldiv@a+3
 26001  00345C  0E08               	movlw	8
 26002  00345E  6E0F               	movwf	i2___fldiv@b^0,c
 26003  003460  0E21               	movlw	33
 26004  003462  6E10               	movwf	(i2___fldiv@b+1)^0,c
 26005  003464  0E04               	movlw	4
 26006  003466  6E11               	movwf	(i2___fldiv@b+2)^0,c
 26007  003468  0E3D               	movlw	61
 26008  00346A  6E12               	movwf	(i2___fldiv@b+3)^0,c
 26009  00346C  EC6A  F01D         	call	i2___fldiv	;wreg free
 26010  003470  C00F  F041         	movff	?i2___fldiv,i2___fladd@b
 26011  003474  C010  F042         	movff	?i2___fldiv+1,i2___fladd@b+1
 26012  003478  C011  F043         	movff	?i2___fldiv+2,i2___fladd@b+2
 26013  00347C  C012  F044         	movff	?i2___fldiv+3,i2___fladd@b+3
 26014  003480  C0BC  F045         	movff	_pos_relativa_Z,i2___fladd@a
 26015  003484  C0BD  F046         	movff	_pos_relativa_Z+1,i2___fladd@a+1
 26016  003488  C0BE  F047         	movff	_pos_relativa_Z+2,i2___fladd@a+2
 26017  00348C  C0BF  F048         	movff	_pos_relativa_Z+3,i2___fladd@a+3
 26018  003490  ECC5  F017         	call	i2___fladd	;wreg free
 26019  003494  C041  F0BC         	movff	?i2___fladd,_pos_relativa_Z
 26020  003498  C042  F0BD         	movff	?i2___fladd+1,_pos_relativa_Z+1
 26021  00349C  C043  F0BE         	movff	?i2___fladd+2,_pos_relativa_Z+2
 26022  0034A0  C044  F0BF         	movff	?i2___fladd+3,_pos_relativa_Z+3
 26023                           
 26024                           ;guia.c: 60:          distanciaRestante=objetivo_Z-pos_relativa_Z;
 26025  0034A4  C2C0  F051         	movff	_objetivo_Z,i2___flsub@b
 26026  0034A8  C2C1  F052         	movff	_objetivo_Z+1,i2___flsub@b+1
 26027  0034AC  C2C2  F053         	movff	_objetivo_Z+2,i2___flsub@b+2
 26028  0034B0  C2C3  F054         	movff	_objetivo_Z+3,i2___flsub@b+3
 26029  0034B4  C0BC  F055         	movff	_pos_relativa_Z,i2___flsub@a
 26030  0034B8  C0BD  F056         	movff	_pos_relativa_Z+1,i2___flsub@a+1
 26031  0034BC  C0BE  F057         	movff	_pos_relativa_Z+2,i2___flsub@a+2
 26032  0034C0  C0BF  F058         	movff	_pos_relativa_Z+3,i2___flsub@a+3
 26033  0034C4  EC10  F03E         	call	i2___flsub	;wreg free
 26034  0034C8  D047               	goto	L36
 26035  0034CA                     i2l11803:
 26036                           
 26037                           ; BSR set to: 1
 26038                           ;guia.c: 63:          pos_relativa_Z=(float)pos_relativa_Z-(float)((float)1/31/ustep);
 26039  0034CA  C0BC  F051         	movff	_pos_relativa_Z,i2___flsub@b
 26040  0034CE  C0BD  F052         	movff	_pos_relativa_Z+1,i2___flsub@b+1
 26041  0034D2  C0BE  F053         	movff	_pos_relativa_Z+2,i2___flsub@b+2
 26042  0034D6  C0BF  F054         	movff	_pos_relativa_Z+3,i2___flsub@b+3
 26043  0034DA  0100               	movlb	0	; () banked
 26044  0034DC  51D3               	movf	_ustep& (0+255),w,b
 26045  0034DE  6E01               	movwf	i2___xxtofl@val^0,c
 26046  0034E0  6A02               	clrf	(i2___xxtofl@val+1)^0,c
 26047  0034E2  6A03               	clrf	(i2___xxtofl@val+2)^0,c
 26048  0034E4  6A04               	clrf	(i2___xxtofl@val+3)^0,c
 26049  0034E6  0E01               	movlw	1
 26050  0034E8  EC4C  F028         	call	i2___xxtofl
 26051  0034EC  C001  F013         	movff	?i2___xxtofl,i2___fldiv@a
 26052  0034F0  C002  F014         	movff	?i2___xxtofl+1,i2___fldiv@a+1
 26053  0034F4  C003  F015         	movff	?i2___xxtofl+2,i2___fldiv@a+2
 26054  0034F8  C004  F016         	movff	?i2___xxtofl+3,i2___fldiv@a+3
 26055  0034FC  0E08               	movlw	8
 26056  0034FE  6E0F               	movwf	i2___fldiv@b^0,c
 26057  003500  0E21               	movlw	33
 26058  003502  6E10               	movwf	(i2___fldiv@b+1)^0,c
 26059  003504  0E04               	movlw	4
 26060  003506  6E11               	movwf	(i2___fldiv@b+2)^0,c
 26061  003508  0E3D               	movlw	61
 26062  00350A  6E12               	movwf	(i2___fldiv@b+3)^0,c
 26063  00350C  EC6A  F01D         	call	i2___fldiv	;wreg free
 26064  003510  C00F  F055         	movff	?i2___fldiv,i2___flsub@a
 26065  003514  C010  F056         	movff	?i2___fldiv+1,i2___flsub@a+1
 26066  003518  C011  F057         	movff	?i2___fldiv+2,i2___flsub@a+2
 26067  00351C  C012  F058         	movff	?i2___fldiv+3,i2___flsub@a+3
 26068  003520  EC10  F03E         	call	i2___flsub	;wreg free
 26069  003524  C051  F0BC         	movff	?i2___flsub,_pos_relativa_Z
 26070  003528  C052  F0BD         	movff	?i2___flsub+1,_pos_relativa_Z+1
 26071  00352C  C053  F0BE         	movff	?i2___flsub+2,_pos_relativa_Z+2
 26072  003530  C054  F0BF         	movff	?i2___flsub+3,_pos_relativa_Z+3
 26073                           
 26074                           ;guia.c: 64:          distanciaRestante=pos_relativa_Z-objetivo_Z;
 26075  003534  C0BC  F051         	movff	_pos_relativa_Z,i2___flsub@b
 26076  003538  C0BD  F052         	movff	_pos_relativa_Z+1,i2___flsub@b+1
 26077  00353C  C0BE  F053         	movff	_pos_relativa_Z+2,i2___flsub@b+2
 26078  003540  C0BF  F054         	movff	_pos_relativa_Z+3,i2___flsub@b+3
 26079  003544  C2C0  F055         	movff	_objetivo_Z,i2___flsub@a
 26080  003548  C2C1  F056         	movff	_objetivo_Z+1,i2___flsub@a+1
 26081  00354C  C2C2  F057         	movff	_objetivo_Z+2,i2___flsub@a+2
 26082  003550  C2C3  F058         	movff	_objetivo_Z+3,i2___flsub@a+3
 26083  003554  EC10  F03E         	call	i2___flsub	;wreg free
 26084  003558                     L36:
 26085  003558  C051  F2BC         	movff	?i2___flsub,_distanciaRestante
 26086  00355C  C052  F2BD         	movff	?i2___flsub+1,_distanciaRestante+1
 26087  003560  C053  F2BE         	movff	?i2___flsub+2,_distanciaRestante+2
 26088  003564  C054  F2BF         	movff	?i2___flsub+3,_distanciaRestante+3
 26089                           
 26090                           ;guia.c: 66:       pasos = pasos - 1;
 26091  003568  0EFF               	movlw	255
 26092  00356A  0101               	movlb	1	; () banked
 26093  00356C  25C7               	addwf	_pasos& (0+255),w,b	;volatile
 26094  00356E  6FC7               	movwf	_pasos& (0+255),b	;volatile
 26095  003570  0EFF               	movlw	255
 26096  003572  21C8               	addwfc	(_pasos+1)& (0+255),w,b	;volatile
 26097  003574  6FC8               	movwf	(_pasos+1)& (0+255),b	;volatile
 26098                           
 26099                           ; BSR set to: 1
 26100                           ;guia.c: 67:       flag=0;
 26101  003576  0E00               	movlw	0
 26102  003578  6FD2               	movwf	_flag& (0+255),b
 26103                           
 26104                           ; BSR set to: 1
 26105                           ;guia.c: 68:       if(pasos==0){
 26106  00357A  51C7               	movf	_pasos& (0+255),w,b	;volatile
 26107  00357C  11C8               	iorwf	(_pasos+1)& (0+255),w,b	;volatile
 26108  00357E  A4D8               	btfss	status,2,c
 26109  003580  0012               	return	
 26110                           
 26111                           ; BSR set to: 1
 26112                           ;guia.c: 69:          busy=0;
 26113  003582  0E00               	movlw	0
 26114  003584  6FD4               	movwf	_busy& (0+255),b
 26115                           
 26116                           ; BSR set to: 1
 26117                           ;guia.c: 70:          LATBbits.LATB0=1;
 26118  003586  808A               	bsf	138,0,c	;volatile
 26119                           
 26120                           ; BSR set to: 1
 26121                           ;guia.c: 71:          TMR2_StopTimer();
 26122  003588  EC0B  F003         	call	i2_TMR2_StopTimer	;wreg free
 26123                           
 26124                           ; BSR set to: 1
 26125                           ;guia.c: 72:          pos_relativa_Z=objetivo_Z;
 26126  00358C  C2C0  F0BC         	movff	_objetivo_Z,_pos_relativa_Z
 26127  003590  C2C1  F0BD         	movff	_objetivo_Z+1,_pos_relativa_Z+1
 26128  003594  C2C2  F0BE         	movff	_objetivo_Z+2,_pos_relativa_Z+2
 26129  003598  C2C3  F0BF         	movff	_objetivo_Z+3,_pos_relativa_Z+3
 26130                           
 26131                           ; BSR set to: 1
 26132  00359C  0012               	return		;funcret
 26133  00359E                     __end_of_G01_TMR2_ISR:
 26134                           	callstack 0
 26135                           
 26136 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 26137 ;; Defined at:
 26138 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 26139 ;; Parameters:    Size  Location     Type
 26140 ;;		None
 26141 ;; Auto vars:     Size  Location     Type
 26142 ;;		None
 26143 ;; Return value:  Size  Location     Type
 26144 ;;                  1    wreg      void 
 26145 ;; Registers used:
 26146 ;;		None
 26147 ;; Tracked objects:
 26148 ;;		On entry : 3F/2
 26149 ;;		On exit  : 3F/2
 26150 ;;		Unchanged: 3F/0
 26151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26152 ;;      Params:         0       0       0       0       0       0       0       0       0
 26153 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26155 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26156 ;;Total ram usage:        0 bytes
 26157 ;; Hardware stack levels used: 1
 26158 ;; This function calls:
 26159 ;;		Nothing
 26160 ;; This function is called by:
 26161 ;;		_TMR2_Initialize
 26162 ;;		_TMR2_ISR
 26163 ;; This function uses a non-reentrant model
 26164 ;;
 26165                           
 26166                           	psect	text137
 26167  00061C                     __ptext137:
 26168                           	callstack 0
 26169  00061C                     _TMR2_DefaultInterruptHandler:
 26170                           	callstack 19
 26171                           
 26172                           ; BSR set to: 2
 26173                           
 26174                           ; BSR set to: 1
 26175                           ;incstack = 0
 26176  00061C  0012               	return		;funcret
 26177  00061E                     __end_of_TMR2_DefaultInterruptHandler:
 26178                           	callstack 0
 26179                           
 26180 ;; *************** function i2_setMicroStep *****************
 26181 ;; Defined at:
 26182 ;;		line 212 in file "guia.c"
 26183 ;; Parameters:    Size  Location     Type
 26184 ;;  ustep           1    wreg     unsigned char 
 26185 ;; Auto vars:     Size  Location     Type
 26186 ;;  ustep           1    2[COMRAM] unsigned char 
 26187 ;; Return value:  Size  Location     Type
 26188 ;;                  1    wreg      void 
 26189 ;; Registers used:
 26190 ;;		wreg, status,2, status,0
 26191 ;; Tracked objects:
 26192 ;;		On entry : 3F/0
 26193 ;;		On exit  : 0/0
 26194 ;;		Unchanged: 0/0
 26195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26196 ;;      Params:         0       0       0       0       0       0       0       0       0
 26197 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26198 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26199 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26200 ;;Total ram usage:        3 bytes
 26201 ;; Hardware stack levels used: 1
 26202 ;; This function calls:
 26203 ;;		Nothing
 26204 ;; This function is called by:
 26205 ;;		_G01_TMR2_ISR
 26206 ;; This function uses a non-reentrant model
 26207 ;;
 26208                           
 26209                           	psect	text138
 26210  00772A                     __ptext138:
 26211                           	callstack 0
 26212  00772A                     i2_setMicroStep:
 26213                           	callstack 18
 26214                           
 26215                           ; BSR set to: 2
 26216                           ;incstack = 0
 26217                           ;i2setMicroStep@ustep stored from wreg
 26218  00772A  6E03               	movwf	i2setMicroStep@ustep^0,c
 26219                           
 26220                           ;guia.c: 217:    switch(ustep){
 26221  00772C  D018               	goto	i2l11417
 26222  00772E                     i2l1221:
 26223                           
 26224                           ;guia.c: 219:          LATBbits.LATB1=0;
 26225  00772E  928A               	bcf	138,1,c	;volatile
 26226                           
 26227                           ;guia.c: 220:          LATBbits.LATB2=0;
 26228  007730  948A               	bcf	138,2,c	;volatile
 26229                           
 26230                           ;guia.c: 221:          LATBbits.LATB3=0;
 26231  007732  968A               	bcf	138,3,c	;volatile
 26232                           
 26233                           ;guia.c: 222:          break;
 26234  007734  0012               	return	
 26235  007736                     i2l1223:
 26236                           
 26237                           ;guia.c: 224:          LATBbits.LATB1=1;
 26238  007736  828A               	bsf	138,1,c	;volatile
 26239                           
 26240                           ;guia.c: 225:          LATBbits.LATB2=0;
 26241  007738  948A               	bcf	138,2,c	;volatile
 26242                           
 26243                           ;guia.c: 226:          LATBbits.LATB3=0;
 26244  00773A  968A               	bcf	138,3,c	;volatile
 26245                           
 26246                           ;guia.c: 227:          break;
 26247  00773C  0012               	return	
 26248  00773E                     i2l1224:
 26249                           
 26250                           ;guia.c: 229:          LATBbits.LATB1=0;
 26251  00773E  928A               	bcf	138,1,c	;volatile
 26252                           
 26253                           ;guia.c: 230:          LATBbits.LATB2=1;
 26254  007740  848A               	bsf	138,2,c	;volatile
 26255                           
 26256                           ;guia.c: 231:          LATBbits.LATB3=0;
 26257  007742  968A               	bcf	138,3,c	;volatile
 26258                           
 26259                           ;guia.c: 232:          break;
 26260  007744  0012               	return	
 26261  007746                     i2l1225:
 26262                           
 26263                           ;guia.c: 234:          LATBbits.LATB1=1;
 26264  007746  828A               	bsf	138,1,c	;volatile
 26265                           
 26266                           ;guia.c: 235:          LATBbits.LATB2=1;
 26267  007748  848A               	bsf	138,2,c	;volatile
 26268                           
 26269                           ;guia.c: 236:          LATBbits.LATB3=0;
 26270  00774A  968A               	bcf	138,3,c	;volatile
 26271                           
 26272                           ;guia.c: 237:          break;
 26273  00774C  0012               	return	
 26274  00774E                     i2l1226:
 26275                           
 26276                           ;guia.c: 239:          LATBbits.LATB1=1;
 26277  00774E  828A               	bsf	138,1,c	;volatile
 26278                           
 26279                           ;guia.c: 240:          LATBbits.LATB2=1;
 26280  007750  848A               	bsf	138,2,c	;volatile
 26281                           
 26282                           ;guia.c: 241:          LATBbits.LATB3=1;
 26283  007752  868A               	bsf	138,3,c	;volatile
 26284                           
 26285                           ;guia.c: 242:          break;
 26286  007754  0012               	return	
 26287  007756                     i2l1227:
 26288                           
 26289                           ;guia.c: 244:          LATBbits.LATB1=1;
 26290  007756  828A               	bsf	138,1,c	;volatile
 26291                           
 26292                           ;guia.c: 245:          LATBbits.LATB2=1;
 26293  007758  848A               	bsf	138,2,c	;volatile
 26294                           
 26295                           ;guia.c: 246:          LATBbits.LATB3=1;
 26296  00775A  868A               	bsf	138,3,c	;volatile
 26297                           
 26298                           ;guia.c: 247:          break;
 26299  00775C  0012               	return	
 26300  00775E                     i2l11417:
 26301  00775E  5003               	movf	i2setMicroStep@ustep^0,w,c
 26302  007760  6E01               	movwf	??i2_setMicroStep^0,c
 26303  007762  6A02               	clrf	(??i2_setMicroStep+1)^0,c
 26304                           
 26305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26306                           ; Switch size 1, requested type "simple"
 26307                           ; Number of cases is 1, Range of values is 0 to 0
 26308                           ; switch strategies available:
 26309                           ; Name         Instructions Cycles
 26310                           ; simple_byte            4     3 (average)
 26311                           ;	Chosen strategy is simple_byte
 26312  007764  5002               	movf	(??i2_setMicroStep+1)^0,w,c
 26313  007766  0A00               	xorlw	0	; case 0
 26314  007768  A4D8               	btfss	status,2,c
 26315  00776A  D7F5               	goto	i2l1227
 26316                           
 26317                           ; Switch size 1, requested type "simple"
 26318                           ; Number of cases is 5, Range of values is 1 to 16
 26319                           ; switch strategies available:
 26320                           ; Name         Instructions Cycles
 26321                           ; simple_byte           16     9 (average)
 26322                           ;	Chosen strategy is simple_byte
 26323  00776C  5001               	movf	??i2_setMicroStep^0,w,c
 26324  00776E  0A01               	xorlw	1	; case 1
 26325  007770  B4D8               	btfsc	status,2,c
 26326  007772  D7DD               	goto	i2l1221
 26327  007774  0A03               	xorlw	3	; case 2
 26328  007776  B4D8               	btfsc	status,2,c
 26329  007778  D7DE               	goto	i2l1223
 26330  00777A  0A06               	xorlw	6	; case 4
 26331  00777C  B4D8               	btfsc	status,2,c
 26332  00777E  D7DF               	goto	i2l1224
 26333  007780  0A0C               	xorlw	12	; case 8
 26334  007782  B4D8               	btfsc	status,2,c
 26335  007784  D7E0               	goto	i2l1225
 26336  007786  0A18               	xorlw	24	; case 16
 26337  007788  B4D8               	btfsc	status,2,c
 26338  00778A  D7E1               	goto	i2l1226
 26339  00778C  D7E4               	goto	i2l1227
 26340  00778E                     __end_ofi2_setMicroStep:
 26341                           	callstack 0
 26342                           
 26343 ;; *************** function i2___fltol *****************
 26344 ;; Defined at:
 26345 ;;		line 43 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
 26346 ;; Parameters:    Size  Location     Type
 26347 ;;  f1              4   64[COMRAM] void 
 26348 ;; Auto vars:     Size  Location     Type
 26349 ;;  exp1            1   73[COMRAM] unsigned char 
 26350 ;;  sign1           1   72[COMRAM] unsigned char 
 26351 ;; Return value:  Size  Location     Type
 26352 ;;                  4   64[COMRAM] long 
 26353 ;; Registers used:
 26354 ;;		wreg, status,2, status,0
 26355 ;; Tracked objects:
 26356 ;;		On entry : 0/0
 26357 ;;		On exit  : 0/0
 26358 ;;		Unchanged: 0/0
 26359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26360 ;;      Params:         4       0       0       0       0       0       0       0       0
 26361 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26362 ;;      Temps:          4       0       0       0       0       0       0       0       0
 26363 ;;      Totals:        10       0       0       0       0       0       0       0       0
 26364 ;;Total ram usage:       10 bytes
 26365 ;; Hardware stack levels used: 1
 26366 ;; This function calls:
 26367 ;;		Nothing
 26368 ;; This function is called by:
 26369 ;;		_G01_TMR2_ISR
 26370 ;; This function uses a non-reentrant model
 26371 ;;
 26372                           
 26373                           	psect	text139
 26374  006B52                     __ptext139:
 26375                           	callstack 0
 26376  006B52                     i2___fltol:
 26377                           	callstack 18
 26378                           
 26379                           ;incstack = 0
 26380  006B52  3443               	rlcf	(i2___fltol@f1+2)^0,w,c
 26381  006B54  3444               	rlcf	(i2___fltol@f1+3)^0,w,c
 26382  006B56  6E4A               	movwf	i2___fltol@exp1^0,c
 26383  006B58  504A               	movf	i2___fltol@exp1^0,w,c
 26384  006B5A  A4D8               	btfss	status,2,c
 26385  006B5C  D009               	goto	i2l11429
 26386  006B5E                     i2u1308_40:
 26387  006B5E  0E00               	movlw	0
 26388  006B60  6E41               	movwf	?i2___fltol^0,c
 26389  006B62  0E00               	movlw	0
 26390  006B64  6E42               	movwf	(?i2___fltol+1)^0,c
 26391  006B66  0E00               	movlw	0
 26392  006B68  6E43               	movwf	(?i2___fltol+2)^0,c
 26393  006B6A  0E00               	movlw	0
 26394  006B6C  6E44               	movwf	(?i2___fltol+3)^0,c
 26395  006B6E  0012               	return	
 26396  006B70                     i2l11429:
 26397  006B70  C041  F045         	movff	i2___fltol@f1,??i2___fltol
 26398  006B74  C042  F046         	movff	i2___fltol@f1+1,??i2___fltol+1
 26399  006B78  C043  F047         	movff	i2___fltol@f1+2,??i2___fltol+2
 26400  006B7C  C044  F048         	movff	i2___fltol@f1+3,??i2___fltol+3
 26401  006B80  0E20               	movlw	32
 26402  006B82  D005               	goto	i2u1309_40
 26403  006B84                     i2u1309_45:
 26404  006B84  90D8               	bcf	status,0,c
 26405  006B86  3248               	rrcf	(??i2___fltol+3)^0,f,c
 26406  006B88  3247               	rrcf	(??i2___fltol+2)^0,f,c
 26407  006B8A  3246               	rrcf	(??i2___fltol+1)^0,f,c
 26408  006B8C  3245               	rrcf	??i2___fltol^0,f,c
 26409  006B8E                     i2u1309_40:
 26410  006B8E  2EE8               	decfsz	wreg,f,c
 26411  006B90  D7F9               	goto	i2u1309_45
 26412  006B92  5045               	movf	??i2___fltol^0,w,c
 26413  006B94  6E49               	movwf	i2___fltol@sign1^0,c
 26414  006B96  8E43               	bsf	(i2___fltol@f1+2)^0,7,c
 26415  006B98  0EFF               	movlw	255
 26416  006B9A  1641               	andwf	i2___fltol@f1^0,f,c
 26417  006B9C  0EFF               	movlw	255
 26418  006B9E  1642               	andwf	(i2___fltol@f1+1)^0,f,c
 26419  006BA0  0EFF               	movlw	255
 26420  006BA2  1643               	andwf	(i2___fltol@f1+2)^0,f,c
 26421  006BA4  0E00               	movlw	0
 26422  006BA6  1644               	andwf	(i2___fltol@f1+3)^0,f,c
 26423  006BA8  0E96               	movlw	150
 26424  006BAA  5E4A               	subwf	i2___fltol@exp1^0,f,c
 26425  006BAC  AE4A               	btfss	i2___fltol@exp1^0,7,c
 26426  006BAE  D00D               	goto	i2l11449
 26427  006BB0  504A               	movf	i2___fltol@exp1^0,w,c
 26428  006BB2  0A80               	xorlw	128
 26429  006BB4  0F97               	addlw	151
 26430  006BB6  A0D8               	btfss	status,0,c
 26431  006BB8  D7D2               	goto	i2u1308_40
 26432  006BBA                     i2l11445:
 26433  006BBA  90D8               	bcf	status,0,c
 26434  006BBC  3244               	rrcf	(i2___fltol@f1+3)^0,f,c
 26435  006BBE  3243               	rrcf	(i2___fltol@f1+2)^0,f,c
 26436  006BC0  3242               	rrcf	(i2___fltol@f1+1)^0,f,c
 26437  006BC2  3241               	rrcf	i2___fltol@f1^0,f,c
 26438  006BC4  3E4A               	incfsz	i2___fltol@exp1^0,f,c
 26439  006BC6  D7F9               	goto	i2l11445
 26440  006BC8  D00D               	goto	i2u1313_40
 26441  006BCA                     i2l11449:
 26442  006BCA  0E1F               	movlw	31
 26443  006BCC  644A               	cpfsgt	i2___fltol@exp1^0,c
 26444  006BCE  D007               	goto	i2l11457
 26445  006BD0  D7C6               	goto	i2u1308_40
 26446  006BD2                     i2l11455:
 26447  006BD2  90D8               	bcf	status,0,c
 26448  006BD4  3641               	rlcf	i2___fltol@f1^0,f,c
 26449  006BD6  3642               	rlcf	(i2___fltol@f1+1)^0,f,c
 26450  006BD8  3643               	rlcf	(i2___fltol@f1+2)^0,f,c
 26451  006BDA  3644               	rlcf	(i2___fltol@f1+3)^0,f,c
 26452  006BDC  064A               	decf	i2___fltol@exp1^0,f,c
 26453  006BDE                     i2l11457:
 26454  006BDE  504A               	movf	i2___fltol@exp1^0,w,c
 26455  006BE0  A4D8               	btfss	status,2,c
 26456  006BE2  D7F7               	goto	i2l11455
 26457  006BE4                     i2u1313_40:
 26458  006BE4  5049               	movf	i2___fltol@sign1^0,w,c
 26459  006BE6  B4D8               	btfsc	status,2,c
 26460  006BE8  D008               	goto	i2l11463
 26461  006BEA  1E44               	comf	(i2___fltol@f1+3)^0,f,c
 26462  006BEC  1E43               	comf	(i2___fltol@f1+2)^0,f,c
 26463  006BEE  1E42               	comf	(i2___fltol@f1+1)^0,f,c
 26464  006BF0  6C41               	negf	i2___fltol@f1^0,c
 26465  006BF2  0E00               	movlw	0
 26466  006BF4  2242               	addwfc	(i2___fltol@f1+1)^0,f,c
 26467  006BF6  2243               	addwfc	(i2___fltol@f1+2)^0,f,c
 26468  006BF8  2244               	addwfc	(i2___fltol@f1+3)^0,f,c
 26469  006BFA                     i2l11463:
 26470  006BFA  C041  F041         	movff	i2___fltol@f1,?i2___fltol
 26471  006BFE  C042  F042         	movff	i2___fltol@f1+1,?i2___fltol+1
 26472  006C02  C043  F043         	movff	i2___fltol@f1+2,?i2___fltol+2
 26473  006C06  C044  F044         	movff	i2___fltol@f1+3,?i2___fltol+3
 26474  006C0A  0012               	return		;funcret
 26475  006C0C                     __end_ofi2___fltol:
 26476                           	callstack 0
 26477                           
 26478 ;; *************** function i2_TMR2_StopTimer *****************
 26479 ;; Defined at:
 26480 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 26481 ;; Parameters:    Size  Location     Type
 26482 ;;		None
 26483 ;; Auto vars:     Size  Location     Type
 26484 ;;		None
 26485 ;; Return value:  Size  Location     Type
 26486 ;;                  1    wreg      void 
 26487 ;; Registers used:
 26488 ;;		None
 26489 ;; Tracked objects:
 26490 ;;		On entry : 3F/1
 26491 ;;		On exit  : 3F/1
 26492 ;;		Unchanged: 3F/0
 26493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26494 ;;      Params:         0       0       0       0       0       0       0       0       0
 26495 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26496 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26497 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26498 ;;Total ram usage:        0 bytes
 26499 ;; Hardware stack levels used: 1
 26500 ;; This function calls:
 26501 ;;		Nothing
 26502 ;; This function is called by:
 26503 ;;		_G01_TMR2_ISR
 26504 ;; This function uses a non-reentrant model
 26505 ;;
 26506                           
 26507                           	psect	text140
 26508  000616                     __ptext140:
 26509                           	callstack 0
 26510  000616                     i2_TMR2_StopTimer:
 26511                           	callstack 18
 26512                           
 26513                           ; BSR set to: 1
 26514                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
 26515                           
 26516                           ;incstack = 0
 26517  000616  94BA               	bcf	186,2,c	;volatile
 26518                           
 26519                           ; BSR set to: 1
 26520  000618  0012               	return		;funcret
 26521  00061A                     __end_ofi2_TMR2_StopTimer:
 26522                           	callstack 0
 26523                           
 26524 ;; *************** function i2_TMR2_LoadPeriodRegister *****************
 26525 ;; Defined at:
 26526 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 26527 ;; Parameters:    Size  Location     Type
 26528 ;;  periodVal       1    wreg     unsigned char 
 26529 ;; Auto vars:     Size  Location     Type
 26530 ;;  periodVal       1    0[COMRAM] unsigned char 
 26531 ;; Return value:  Size  Location     Type
 26532 ;;                  1    wreg      void 
 26533 ;; Registers used:
 26534 ;;		wreg
 26535 ;; Tracked objects:
 26536 ;;		On entry : 0/0
 26537 ;;		On exit  : 0/0
 26538 ;;		Unchanged: 0/0
 26539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26540 ;;      Params:         0       0       0       0       0       0       0       0       0
 26541 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26542 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26543 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26544 ;;Total ram usage:        1 bytes
 26545 ;; Hardware stack levels used: 1
 26546 ;; This function calls:
 26547 ;;		Nothing
 26548 ;; This function is called by:
 26549 ;;		_G01_TMR2_ISR
 26550 ;; This function uses a non-reentrant model
 26551 ;;
 26552                           
 26553                           	psect	text141
 26554  0005DC                     __ptext141:
 26555                           	callstack 0
 26556  0005DC                     i2_TMR2_LoadPeriodRegister:
 26557                           	callstack 18
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;incstack = 0
 26561                           ;i2TMR2_LoadPeriodRegister@periodVal stored from wreg
 26562  0005DC  6E01               	movwf	i2TMR2_LoadPeriodRegister@periodVal^0,c
 26563                           
 26564                           ;mcc_generated_files/tmr2.c: 114: void TMR2_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr2.c: 115: {;mcc_generated_files/tmr2.c: 116:    PR2 = periodVal;
 26565  0005DE  C001  FFBB         	movff	i2TMR2_LoadPeriodRegister@periodVal,4027	;volatile
 26566  0005E2  0012               	return		;funcret
 26567  0005E4                     __end_ofi2_TMR2_LoadPeriodRegister:
 26568                           	callstack 0
 26569                           
 26570 ;; *************** function ___lwdiv *****************
 26571 ;; Defined at:
 26572 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/lwdiv.c"
 26573 ;; Parameters:    Size  Location     Type
 26574 ;;  dividend        2    0[COMRAM] unsigned int 
 26575 ;;  divisor         2    2[COMRAM] unsigned int 
 26576 ;; Auto vars:     Size  Location     Type
 26577 ;;  quotient        2    4[COMRAM] unsigned int 
 26578 ;;  counter         1    6[COMRAM] unsigned char 
 26579 ;; Return value:  Size  Location     Type
 26580 ;;                  2    0[COMRAM] unsigned int 
 26581 ;; Registers used:
 26582 ;;		wreg, status,2, status,0
 26583 ;; Tracked objects:
 26584 ;;		On entry : 0/0
 26585 ;;		On exit  : 0/0
 26586 ;;		Unchanged: 0/0
 26587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26588 ;;      Params:         4       0       0       0       0       0       0       0       0
 26589 ;;      Locals:         3       0       0       0       0       0       0       0       0
 26590 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26591 ;;      Totals:         7       0       0       0       0       0       0       0       0
 26592 ;;Total ram usage:        7 bytes
 26593 ;; Hardware stack levels used: 1
 26594 ;; This function calls:
 26595 ;;		Nothing
 26596 ;; This function is called by:
 26597 ;;		_G01_TMR2_ISR
 26598 ;; This function uses a non-reentrant model
 26599 ;;
 26600                           
 26601                           	psect	text142
 26602  007A02                     __ptext142:
 26603                           	callstack 0
 26604  007A02                     ___lwdiv:
 26605                           	callstack 18
 26606                           
 26607                           ;incstack = 0
 26608  007A02  0E00               	movlw	0
 26609  007A04  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 26610  007A06  0E00               	movlw	0
 26611  007A08  6E05               	movwf	___lwdiv@quotient^0,c
 26612  007A0A  5003               	movf	___lwdiv@divisor^0,w,c
 26613  007A0C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 26614  007A0E  B4D8               	btfsc	status,2,c
 26615  007A10  D01C               	goto	i2l1904
 26616  007A12  0E01               	movlw	1
 26617  007A14  6E07               	movwf	___lwdiv@counter^0,c
 26618  007A16  D004               	goto	i2l11387
 26619  007A18                     i2l11385:
 26620  007A18  90D8               	bcf	status,0,c
 26621  007A1A  3603               	rlcf	___lwdiv@divisor^0,f,c
 26622  007A1C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 26623  007A1E  2A07               	incf	___lwdiv@counter^0,f,c
 26624  007A20                     i2l11387:
 26625  007A20  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 26626  007A22  D7FA               	goto	i2l11385
 26627  007A24                     i2u1305_40:
 26628  007A24  90D8               	bcf	status,0,c
 26629  007A26  3605               	rlcf	___lwdiv@quotient^0,f,c
 26630  007A28  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 26631  007A2A  5003               	movf	___lwdiv@divisor^0,w,c
 26632  007A2C  5C01               	subwf	___lwdiv@dividend^0,w,c
 26633  007A2E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 26634  007A30  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 26635  007A32  A0D8               	btfss	status,0,c
 26636  007A34  D005               	goto	i2l11397
 26637  007A36  5003               	movf	___lwdiv@divisor^0,w,c
 26638  007A38  5E01               	subwf	___lwdiv@dividend^0,f,c
 26639  007A3A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 26640  007A3C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 26641  007A3E  8005               	bsf	___lwdiv@quotient^0,0,c
 26642  007A40                     i2l11397:
 26643  007A40  90D8               	bcf	status,0,c
 26644  007A42  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 26645  007A44  3203               	rrcf	___lwdiv@divisor^0,f,c
 26646  007A46  2E07               	decfsz	___lwdiv@counter^0,f,c
 26647  007A48  D7ED               	goto	i2u1305_40
 26648  007A4A                     i2l1904:
 26649  007A4A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 26650  007A4E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 26651  007A52  0012               	return		;funcret
 26652  007A54                     __end_of___lwdiv:
 26653                           	callstack 0
 26654                           
 26655 ;; *************** function _TMR0_ISR *****************
 26656 ;; Defined at:
 26657 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 26658 ;; Parameters:    Size  Location     Type
 26659 ;;		None
 26660 ;; Auto vars:     Size  Location     Type
 26661 ;;		None
 26662 ;; Return value:  Size  Location     Type
 26663 ;;                  1    wreg      void 
 26664 ;; Registers used:
 26665 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 26666 ;; Tracked objects:
 26667 ;;		On entry : 0/0
 26668 ;;		On exit  : 0/0
 26669 ;;		Unchanged: 0/0
 26670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26671 ;;      Params:         0       0       0       0       0       0       0       0       0
 26672 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26673 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26674 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26675 ;;Total ram usage:        0 bytes
 26676 ;; Hardware stack levels used: 1
 26677 ;; Hardware stack levels required when called: 2
 26678 ;; This function calls:
 26679 ;;		Absolute function
 26680 ;;		_TMR0_DefaultInterruptHandler
 26681 ;;		_Timing_TMR0_ISR
 26682 ;; This function is called by:
 26683 ;;		_INTERRUPT_InterruptManager
 26684 ;; This function uses a non-reentrant model
 26685 ;;
 26686                           
 26687                           	psect	text143
 26688  0002E2                     __ptext143:
 26689                           	callstack 0
 26690  0002E2                     _TMR0_ISR:
 26691                           	callstack 18
 26692                           
 26693                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 26694                           
 26695                           ;incstack = 0
 26696  0002E2  94F2               	bcf	242,2,c	;volatile
 26697                           
 26698                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 26699  0002E4  C1CA  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 26700                           
 26701                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 26702  0002E8  C1C9  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 26703                           
 26704                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 26705  0002EC  0102               	movlb	2	; () banked
 26706  0002EE  51D6               	movf	_TMR0_InterruptHandler& (0+255),w,b
 26707  0002F0  11D7               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 26708  0002F2  B4D8               	btfsc	status,2,c
 26709  0002F4  0012               	return	
 26710                           
 26711                           ; BSR set to: 2
 26712                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 26713  0002F6  D801               	call	i2u1400_48
 26714  0002F8  0012               	return	
 26715  0002FA                     i2u1400_48:
 26716  0002FA  0005               	push	
 26717  0002FC  6EFA               	movwf	pclath,c
 26718  0002FE  51D6               	movf	_TMR0_InterruptHandler& (0+255),w,b
 26719  000300  6EFD               	movwf	tosl,c
 26720  000302  51D7               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 26721  000304  6EFE               	movwf	tosh,c
 26722  000306  50F8               	movf	tblptru,w,c
 26723  000308  6EFF               	movwf	tosu,c
 26724  00030A  50FA               	movf	pclath,w,c
 26725  00030C  0012               	return		;indir
 26726  00030E                     __end_of_TMR0_ISR:
 26727                           	callstack 0
 26728                           
 26729 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 26730 ;; Defined at:
 26731 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 26732 ;; Parameters:    Size  Location     Type
 26733 ;;		None
 26734 ;; Auto vars:     Size  Location     Type
 26735 ;;		None
 26736 ;; Return value:  Size  Location     Type
 26737 ;;                  1    wreg      void 
 26738 ;; Registers used:
 26739 ;;		None
 26740 ;; Tracked objects:
 26741 ;;		On entry : 3F/2
 26742 ;;		On exit  : 3F/2
 26743 ;;		Unchanged: 3F/0
 26744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26745 ;;      Params:         0       0       0       0       0       0       0       0       0
 26746 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26748 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26749 ;;Total ram usage:        0 bytes
 26750 ;; Hardware stack levels used: 1
 26751 ;; This function calls:
 26752 ;;		Nothing
 26753 ;; This function is called by:
 26754 ;;		_TMR0_Initialize
 26755 ;;		_TMR0_ISR
 26756 ;; This function uses a non-reentrant model
 26757 ;;
 26758                           
 26759                           	psect	text144
 26760  00061E                     __ptext144:
 26761                           	callstack 0
 26762  00061E                     _TMR0_DefaultInterruptHandler:
 26763                           	callstack 19
 26764                           
 26765                           ; BSR set to: 2
 26766                           
 26767                           ;incstack = 0
 26768  00061E  0012               	return		;funcret
 26769  000620                     __end_of_TMR0_DefaultInterruptHandler:
 26770                           	callstack 0
 26771                           
 26772 ;; *************** function _Timing_TMR0_ISR *****************
 26773 ;; Defined at:
 26774 ;;		line 16 in file "encoder.c"
 26775 ;; Parameters:    Size  Location     Type
 26776 ;;		None
 26777 ;; Auto vars:     Size  Location     Type
 26778 ;;		None
 26779 ;; Return value:  Size  Location     Type
 26780 ;;                  1    wreg      void 
 26781 ;; Registers used:
 26782 ;;		wreg, status,2, status,0, cstack
 26783 ;; Tracked objects:
 26784 ;;		On entry : 3F/2
 26785 ;;		On exit  : 3F/1
 26786 ;;		Unchanged: 0/0
 26787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26788 ;;      Params:         0       0       0       0       0       0       0       0       0
 26789 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26790 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26791 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26792 ;;Total ram usage:        0 bytes
 26793 ;; Hardware stack levels used: 1
 26794 ;; Hardware stack levels required when called: 1
 26795 ;; This function calls:
 26796 ;;		_TMR0_WriteTimer
 26797 ;; This function is called by:
 26798 ;;		_inicializar_Sistema
 26799 ;;		_TMR0_ISR
 26800 ;; This function uses a non-reentrant model
 26801 ;;
 26802                           
 26803                           	psect	text145
 26804  000174                     __ptext145:
 26805                           	callstack 0
 26806  000174                     _Timing_TMR0_ISR:
 26807                           	callstack 18
 26808                           
 26809                           ; BSR set to: 2
 26810                           ;encoder.c: 18:    TMR0_WriteTimer(0);
 26811                           
 26812                           ; BSR set to: 2
 26813                           ;incstack = 0
 26814  000174  0E00               	movlw	0
 26815  000176  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
 26816  000178  0E00               	movlw	0
 26817  00017A  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
 26818  00017C  ECE9  F002         	call	_TMR0_WriteTimer	;wreg free
 26819                           
 26820                           ;encoder.c: 19:    prescaler++;
 26821  000180  0101               	movlb	1	; () banked
 26822  000182  2BD1               	incf	_prescaler& (0+255),f,b
 26823                           
 26824                           ; BSR set to: 1
 26825                           ;encoder.c: 20:    if(prescaler>=10){
 26826  000184  0E09               	movlw	9
 26827  000186  65D1               	cpfsgt	_prescaler& (0+255),b
 26828  000188  0012               	return	
 26829                           
 26830                           ; BSR set to: 1
 26831                           ;encoder.c: 21:       S=0;
 26832  00018A  0E00               	movlw	0
 26833  00018C  0102               	movlb	2	; () banked
 26834  00018E  6FF6               	movwf	_S& (0+255),b
 26835  000190  0E00               	movlw	0
 26836  000192  6FF7               	movwf	(_S+1)& (0+255),b
 26837  000194  0E00               	movlw	0
 26838  000196  6FF8               	movwf	(_S+2)& (0+255),b
 26839  000198  0E00               	movlw	0
 26840  00019A  6FF9               	movwf	(_S+3)& (0+255),b
 26841                           
 26842                           ;encoder.c: 22:       prescaler=0;
 26843  00019C  0E00               	movlw	0
 26844  00019E  0101               	movlb	1	; () banked
 26845  0001A0  6FD1               	movwf	_prescaler& (0+255),b
 26846                           
 26847                           ; BSR set to: 1
 26848  0001A2  0012               	return		;funcret
 26849  0001A4                     __end_of_Timing_TMR0_ISR:
 26850                           	callstack 0
 26851                           
 26852 ;; *************** function _PIN_MANAGER_IOC *****************
 26853 ;; Defined at:
 26854 ;;		line 104 in file "mcc_generated_files/pin_manager.c"
 26855 ;; Parameters:    Size  Location     Type
 26856 ;;		None
 26857 ;; Auto vars:     Size  Location     Type
 26858 ;;		None
 26859 ;; Return value:  Size  Location     Type
 26860 ;;                  1    wreg      void 
 26861 ;; Registers used:
 26862 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 26863 ;; Tracked objects:
 26864 ;;		On entry : 0/0
 26865 ;;		On exit  : 0/0
 26866 ;;		Unchanged: 0/0
 26867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26868 ;;      Params:         0       0       0       0       0       0       0       0       0
 26869 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26870 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26871 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26872 ;;Total ram usage:        0 bytes
 26873 ;; Hardware stack levels used: 1
 26874 ;; Hardware stack levels required when called: 4
 26875 ;; This function calls:
 26876 ;;		_IOCC2_ISR
 26877 ;; This function is called by:
 26878 ;;		_INTERRUPT_InterruptManager
 26879 ;; This function uses a non-reentrant model
 26880 ;;
 26881                           
 26882                           	psect	text146
 26883  0005C8                     __ptext146:
 26884                           	callstack 0
 26885  0005C8                     _PIN_MANAGER_IOC:
 26886                           	callstack 16
 26887                           
 26888                           ;mcc_generated_files/pin_manager.c: 107:     if(IOCCbits.IOCC2 == 1)
 26889                           
 26890                           ; BSR set to: 1
 26891                           ;incstack = 0
 26892  0005C8  B487               	btfsc	135,2,c	;volatile
 26893                           
 26894                           ;mcc_generated_files/pin_manager.c: 108:     {;mcc_generated_files/pin_manager.c: 109:  
      +                                 IOCC2_ISR();
 26895  0005CA  EC2C  F002         	call	_IOCC2_ISR	;wreg free
 26896                           
 26897                           ;mcc_generated_files/pin_manager.c: 112:     INTCONbits.IOCIF = 0;
 26898  0005CE  90F2               	bcf	242,0,c	;volatile
 26899  0005D0  0012               	return		;funcret
 26900  0005D2                     __end_of_PIN_MANAGER_IOC:
 26901                           	callstack 0
 26902                           
 26903 ;; *************** function _IOCC2_ISR *****************
 26904 ;; Defined at:
 26905 ;;		line 118 in file "mcc_generated_files/pin_manager.c"
 26906 ;; Parameters:    Size  Location     Type
 26907 ;;		None
 26908 ;; Auto vars:     Size  Location     Type
 26909 ;;		None
 26910 ;; Return value:  Size  Location     Type
 26911 ;;                  1    wreg      void 
 26912 ;; Registers used:
 26913 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 26914 ;; Tracked objects:
 26915 ;;		On entry : 0/0
 26916 ;;		On exit  : 0/0
 26917 ;;		Unchanged: 0/0
 26918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26919 ;;      Params:         0       0       0       0       0       0       0       0       0
 26920 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26921 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26922 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26923 ;;Total ram usage:        0 bytes
 26924 ;; Hardware stack levels used: 1
 26925 ;; Hardware stack levels required when called: 3
 26926 ;; This function calls:
 26927 ;;		Absolute function
 26928 ;;		_Encoder_ISR
 26929 ;;		_IOCC2_DefaultInterruptHandler
 26930 ;; This function is called by:
 26931 ;;		_PIN_MANAGER_IOC
 26932 ;; This function uses a non-reentrant model
 26933 ;;
 26934                           
 26935                           	psect	text147
 26936  000458                     __ptext147:
 26937                           	callstack 0
 26938  000458                     _IOCC2_ISR:
 26939                           	callstack 16
 26940                           
 26941                           ;mcc_generated_files/pin_manager.c: 123:     if(IOCC2_InterruptHandler)
 26942                           
 26943                           ;incstack = 0
 26944  000458  0102               	movlb	2	; () banked
 26945  00045A  51FE               	movf	_IOCC2_InterruptHandler& (0+255),w,b
 26946  00045C  11FF               	iorwf	(_IOCC2_InterruptHandler+1)& (0+255),w,b
 26947  00045E  B4D8               	btfsc	status,2,c
 26948  000460  0012               	return	
 26949                           
 26950                           ; BSR set to: 2
 26951                           ;mcc_generated_files/pin_manager.c: 124:     {;mcc_generated_files/pin_manager.c: 125:  
      +                                 IOCC2_InterruptHandler();
 26952  000462  D801               	call	i2u1330_48
 26953  000464  0012               	return	
 26954  000466                     i2u1330_48:
 26955  000466  0005               	push	
 26956  000468  6EFA               	movwf	pclath,c
 26957  00046A  51FE               	movf	_IOCC2_InterruptHandler& (0+255),w,b
 26958  00046C  6EFD               	movwf	tosl,c
 26959  00046E  51FF               	movf	(_IOCC2_InterruptHandler+1)& (0+255),w,b
 26960  000470  6EFE               	movwf	tosh,c
 26961  000472  50F8               	movf	tblptru,w,c
 26962  000474  6EFF               	movwf	tosu,c
 26963  000476  50FA               	movf	pclath,w,c
 26964  000478  0012               	return		;indir
 26965  00047A                     __end_of_IOCC2_ISR:
 26966                           	callstack 0
 26967                           
 26968 ;; *************** function _Encoder_ISR *****************
 26969 ;; Defined at:
 26970 ;;		line 38 in file "encoder.c"
 26971 ;; Parameters:    Size  Location     Type
 26972 ;;		None
 26973 ;; Auto vars:     Size  Location     Type
 26974 ;;  y              12   20[BANK0 ] [3]
 26975 ;;  tics            4   16[BANK0 ] [3]
 26976 ;;  salida          4   12[BANK0 ] [3]
 26977 ;;  tmr0            2   10[BANK0 ] int 
 26978 ;;  a               2    0[BANK0 ] int 
 26979 ;; Return value:  Size  Location     Type
 26980 ;;                  1    wreg      void 
 26981 ;; Registers used:
 26982 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26983 ;; Tracked objects:
 26984 ;;		On entry : 3F/2
 26985 ;;		On exit  : 3F/1
 26986 ;;		Unchanged: 0/0
 26987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26988 ;;      Params:         0       0       0       0       0       0       0       0       0
 26989 ;;      Locals:         0      32       0       0       0       0       0       0       0
 26990 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26991 ;;      Totals:         2      32       0       0       0       0       0       0       0
 26992 ;;Total ram usage:       34 bytes
 26993 ;; Hardware stack levels used: 1
 26994 ;; Hardware stack levels required when called: 2
 26995 ;; This function calls:
 26996 ;;		_Actualizar_angulo
 26997 ;;		_TMR0_ReadTimer
 26998 ;;		_TMR0_WriteTimer
 26999 ;;		i2___fladd
 27000 ;;		i2___fldiv
 27001 ;;		i2___flge
 27002 ;;		i2___flmul
 27003 ;;		i2___flsub
 27004 ;;		i2___xxtofl
 27005 ;; This function is called by:
 27006 ;;		_inicializar_Sistema
 27007 ;;		_IOCC2_ISR
 27008 ;; This function uses a non-reentrant model
 27009 ;;
 27010                           
 27011                           	psect	text148
 27012  00359E                     __ptext148:
 27013                           	callstack 0
 27014  00359E                     _Encoder_ISR:
 27015                           	callstack 16
 27016                           
 27017                           ; BSR set to: 2
 27018                           ;encoder.c: 43:    int a = PORTB;
 27019                           
 27020                           ;incstack = 0
 27021  00359E  CF81 F060          	movff	3969,Encoder_ISR@a	;volatile
 27022  0035A2  0100               	movlb	0	; () banked
 27023  0035A4  6B61               	clrf	(Encoder_ISR@a+1)& (0+255),b
 27024                           
 27025                           ;encoder.c: 44:    a=PORTC;
 27026  0035A6  CF82 F060          	movff	3970,Encoder_ISR@a	;volatile
 27027  0035AA  6B61               	clrf	(Encoder_ISR@a+1)& (0+255),b
 27028                           
 27029                           ; BSR set to: 0
 27030                           ;encoder.c: 45:    int tmr0 = TMR0_ReadTimer();
 27031  0035AC  EC3D  F002         	call	_TMR0_ReadTimer	;wreg free
 27032  0035B0  C001  F06A         	movff	?_TMR0_ReadTimer,Encoder_ISR@tmr0
 27033  0035B4  C002  F06B         	movff	?_TMR0_ReadTimer+1,Encoder_ISR@tmr0+1
 27034                           
 27035                           ;encoder.c: 46:    TMR0_WriteTimer(0);
 27036  0035B8  0E00               	movlw	0
 27037  0035BA  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
 27038  0035BC  0E00               	movlw	0
 27039  0035BE  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
 27040  0035C0  ECE9  F002         	call	_TMR0_WriteTimer	;wreg free
 27041                           
 27042                           ;encoder.c: 48:    double tics = tmr0 + prescaler*(2^16);
 27043  0035C4  0101               	movlb	1	; () banked
 27044  0035C6  51D1               	movf	_prescaler& (0+255),w,b
 27045  0035C8  0D12               	mullw	18
 27046  0035CA  CFF3 F059          	movff	prodl,??_Encoder_ISR
 27047  0035CE  CFF4 F05A          	movff	prodh,??_Encoder_ISR+1
 27048  0035D2  0100               	movlb	0	; () banked
 27049  0035D4  516A               	movf	Encoder_ISR@tmr0& (0+255),w,b
 27050  0035D6  2659               	addwf	??_Encoder_ISR^0,f,c
 27051  0035D8  516B               	movf	(Encoder_ISR@tmr0+1)& (0+255),w,b
 27052  0035DA  225A               	addwfc	(??_Encoder_ISR+1)^0,f,c
 27053  0035DC  C059  F001         	movff	??_Encoder_ISR,i2___xxtofl@val
 27054  0035E0  C05A  F002         	movff	??_Encoder_ISR+1,i2___xxtofl@val+1
 27055  0035E4  0E00               	movlw	0
 27056  0035E6  BE02               	btfsc	(i2___xxtofl@val+1)^0,7,c
 27057  0035E8  0EFF               	movlw	-1
 27058  0035EA  6E03               	movwf	(i2___xxtofl@val+2)^0,c
 27059  0035EC  6E04               	movwf	(i2___xxtofl@val+3)^0,c
 27060  0035EE  0E01               	movlw	1
 27061  0035F0  EC4C  F028         	call	i2___xxtofl
 27062  0035F4  C001  F070         	movff	?i2___xxtofl,Encoder_ISR@tics
 27063  0035F8  C002  F071         	movff	?i2___xxtofl+1,Encoder_ISR@tics+1
 27064  0035FC  C003  F072         	movff	?i2___xxtofl+2,Encoder_ISR@tics+2
 27065  003600  C004  F073         	movff	?i2___xxtofl+3,Encoder_ISR@tics+3
 27066                           
 27067                           ;encoder.c: 49:    double y[3];;encoder.c: 50:    double salida;;encoder.c: 52:    if(ti
      +                          cs>400){
 27068  003604  0E00               	movlw	0
 27069  003606  6E01               	movwf	i2___flge@ff1^0,c
 27070  003608  0E00               	movlw	0
 27071  00360A  6E02               	movwf	(i2___flge@ff1+1)^0,c
 27072  00360C  0EC8               	movlw	200
 27073  00360E  6E03               	movwf	(i2___flge@ff1+2)^0,c
 27074  003610  0E43               	movlw	67
 27075  003612  6E04               	movwf	(i2___flge@ff1+3)^0,c
 27076  003614  C070  F005         	movff	Encoder_ISR@tics,i2___flge@ff2
 27077  003618  C071  F006         	movff	Encoder_ISR@tics+1,i2___flge@ff2+1
 27078  00361C  C072  F007         	movff	Encoder_ISR@tics+2,i2___flge@ff2+2
 27079  003620  C073  F008         	movff	Encoder_ISR@tics+3,i2___flge@ff2+3
 27080  003624  ECB6  F033         	call	i2___flge	;wreg free
 27081  003628  B0D8               	btfsc	status,0,c
 27082  00362A  D10B               	goto	i2l1261
 27083                           
 27084                           ;encoder.c: 53:       y[0]=(double)0.02008*tics+1.56101*y[1]-(double)0.64135*y[2];
 27085  00362C  0E2D               	movlw	45
 27086  00362E  6E2C               	movwf	i2___flmul@a^0,c
 27087  003630  0ECF               	movlw	207
 27088  003632  6E2D               	movwf	(i2___flmul@a+1)^0,c
 27089  003634  0EC7               	movlw	199
 27090  003636  6E2E               	movwf	(i2___flmul@a+2)^0,c
 27091  003638  0E3F               	movlw	63
 27092  00363A  6E2F               	movwf	(i2___flmul@a+3)^0,c
 27093  00363C  C078  F028         	movff	Encoder_ISR@y+4,i2___flmul@b
 27094  003640  C079  F029         	movff	Encoder_ISR@y+5,i2___flmul@b+1
 27095  003644  C07A  F02A         	movff	Encoder_ISR@y+6,i2___flmul@b+2
 27096  003648  C07B  F02B         	movff	Encoder_ISR@y+7,i2___flmul@b+3
 27097  00364C  ECA8  F014         	call	i2___flmul	;wreg free
 27098  003650  C028  F045         	movff	?i2___flmul,i2___fladd@a
 27099  003654  C029  F046         	movff	?i2___flmul+1,i2___fladd@a+1
 27100  003658  C02A  F047         	movff	?i2___flmul+2,i2___fladd@a+2
 27101  00365C  C02B  F048         	movff	?i2___flmul+3,i2___fladd@a+3
 27102  003660  0ED0               	movlw	208
 27103  003662  6E2C               	movwf	i2___flmul@a^0,c
 27104  003664  0E7E               	movlw	126
 27105  003666  6E2D               	movwf	(i2___flmul@a+1)^0,c
 27106  003668  0EA4               	movlw	164
 27107  00366A  6E2E               	movwf	(i2___flmul@a+2)^0,c
 27108  00366C  0E3C               	movlw	60
 27109  00366E  6E2F               	movwf	(i2___flmul@a+3)^0,c
 27110  003670  C070  F028         	movff	Encoder_ISR@tics,i2___flmul@b
 27111  003674  C071  F029         	movff	Encoder_ISR@tics+1,i2___flmul@b+1
 27112  003678  C072  F02A         	movff	Encoder_ISR@tics+2,i2___flmul@b+2
 27113  00367C  C073  F02B         	movff	Encoder_ISR@tics+3,i2___flmul@b+3
 27114  003680  ECA8  F014         	call	i2___flmul	;wreg free
 27115  003684  C028  F041         	movff	?i2___flmul,i2___fladd@b
 27116  003688  C029  F042         	movff	?i2___flmul+1,i2___fladd@b+1
 27117  00368C  C02A  F043         	movff	?i2___flmul+2,i2___fladd@b+2
 27118  003690  C02B  F044         	movff	?i2___flmul+3,i2___fladd@b+3
 27119  003694  ECC5  F017         	call	i2___fladd	;wreg free
 27120  003698  C041  F062         	movff	?i2___fladd,_Encoder_ISR$5863
 27121  00369C  C042  F063         	movff	?i2___fladd+1,_Encoder_ISR$5863+1
 27122  0036A0  C043  F064         	movff	?i2___fladd+2,_Encoder_ISR$5863+2
 27123  0036A4  C044  F065         	movff	?i2___fladd+3,_Encoder_ISR$5863+3
 27124                           
 27125                           ;encoder.c: 53:       y[0]=(double)0.02008*tics+1.56101*y[1]-(double)0.64135*y[2];
 27126  0036A8  C062  F051         	movff	_Encoder_ISR$5863,i2___flsub@b
 27127  0036AC  C063  F052         	movff	_Encoder_ISR$5863+1,i2___flsub@b+1
 27128  0036B0  C064  F053         	movff	_Encoder_ISR$5863+2,i2___flsub@b+2
 27129  0036B4  C065  F054         	movff	_Encoder_ISR$5863+3,i2___flsub@b+3
 27130  0036B8  0E83               	movlw	131
 27131  0036BA  6E2C               	movwf	i2___flmul@a^0,c
 27132  0036BC  0E2F               	movlw	47
 27133  0036BE  6E2D               	movwf	(i2___flmul@a+1)^0,c
 27134  0036C0  0E24               	movlw	36
 27135  0036C2  6E2E               	movwf	(i2___flmul@a+2)^0,c
 27136  0036C4  0E3F               	movlw	63
 27137  0036C6  6E2F               	movwf	(i2___flmul@a+3)^0,c
 27138  0036C8  C07C  F028         	movff	Encoder_ISR@y+8,i2___flmul@b
 27139  0036CC  C07D  F029         	movff	Encoder_ISR@y+9,i2___flmul@b+1
 27140  0036D0  C07E  F02A         	movff	Encoder_ISR@y+10,i2___flmul@b+2
 27141  0036D4  C07F  F02B         	movff	Encoder_ISR@y+11,i2___flmul@b+3
 27142  0036D8  ECA8  F014         	call	i2___flmul	;wreg free
 27143  0036DC  C028  F055         	movff	?i2___flmul,i2___flsub@a
 27144  0036E0  C029  F056         	movff	?i2___flmul+1,i2___flsub@a+1
 27145  0036E4  C02A  F057         	movff	?i2___flmul+2,i2___flsub@a+2
 27146  0036E8  C02B  F058         	movff	?i2___flmul+3,i2___flsub@a+3
 27147  0036EC  EC10  F03E         	call	i2___flsub	;wreg free
 27148  0036F0  C051  F074         	movff	?i2___flsub,Encoder_ISR@y
 27149  0036F4  C052  F075         	movff	?i2___flsub+1,Encoder_ISR@y+1
 27150  0036F8  C053  F076         	movff	?i2___flsub+2,Encoder_ISR@y+2
 27151  0036FC  C054  F077         	movff	?i2___flsub+3,Encoder_ISR@y+3
 27152                           
 27153                           ;encoder.c: 54:       salida = y[0]+2*y[1]+y[2];
 27154  003700  C074  F045         	movff	Encoder_ISR@y,i2___fladd@a
 27155  003704  C075  F046         	movff	Encoder_ISR@y+1,i2___fladd@a+1
 27156  003708  C076  F047         	movff	Encoder_ISR@y+2,i2___fladd@a+2
 27157  00370C  C077  F048         	movff	Encoder_ISR@y+3,i2___fladd@a+3
 27158  003710  0E00               	movlw	0
 27159  003712  6E2C               	movwf	i2___flmul@a^0,c
 27160  003714  0E00               	movlw	0
 27161  003716  6E2D               	movwf	(i2___flmul@a+1)^0,c
 27162  003718  0E00               	movlw	0
 27163  00371A  6E2E               	movwf	(i2___flmul@a+2)^0,c
 27164  00371C  0E40               	movlw	64
 27165  00371E  6E2F               	movwf	(i2___flmul@a+3)^0,c
 27166  003720  C078  F028         	movff	Encoder_ISR@y+4,i2___flmul@b
 27167  003724  C079  F029         	movff	Encoder_ISR@y+5,i2___flmul@b+1
 27168  003728  C07A  F02A         	movff	Encoder_ISR@y+6,i2___flmul@b+2
 27169  00372C  C07B  F02B         	movff	Encoder_ISR@y+7,i2___flmul@b+3
 27170  003730  ECA8  F014         	call	i2___flmul	;wreg free
 27171  003734  C028  F041         	movff	?i2___flmul,i2___fladd@b
 27172  003738  C029  F042         	movff	?i2___flmul+1,i2___fladd@b+1
 27173  00373C  C02A  F043         	movff	?i2___flmul+2,i2___fladd@b+2
 27174  003740  C02B  F044         	movff	?i2___flmul+3,i2___fladd@b+3
 27175  003744  ECC5  F017         	call	i2___fladd	;wreg free
 27176  003748  C041  F066         	movff	?i2___fladd,_Encoder_ISR$5864
 27177  00374C  C042  F067         	movff	?i2___fladd+1,_Encoder_ISR$5864+1
 27178  003750  C043  F068         	movff	?i2___fladd+2,_Encoder_ISR$5864+2
 27179  003754  C044  F069         	movff	?i2___fladd+3,_Encoder_ISR$5864+3
 27180                           
 27181                           ;encoder.c: 54:       salida = y[0]+2*y[1]+y[2];
 27182  003758  C066  F041         	movff	_Encoder_ISR$5864,i2___fladd@b
 27183  00375C  C067  F042         	movff	_Encoder_ISR$5864+1,i2___fladd@b+1
 27184  003760  C068  F043         	movff	_Encoder_ISR$5864+2,i2___fladd@b+2
 27185  003764  C069  F044         	movff	_Encoder_ISR$5864+3,i2___fladd@b+3
 27186  003768  C07C  F045         	movff	Encoder_ISR@y+8,i2___fladd@a
 27187  00376C  C07D  F046         	movff	Encoder_ISR@y+9,i2___fladd@a+1
 27188  003770  C07E  F047         	movff	Encoder_ISR@y+10,i2___fladd@a+2
 27189  003774  C07F  F048         	movff	Encoder_ISR@y+11,i2___fladd@a+3
 27190  003778  ECC5  F017         	call	i2___fladd	;wreg free
 27191  00377C  C041  F06C         	movff	?i2___fladd,Encoder_ISR@salida
 27192  003780  C042  F06D         	movff	?i2___fladd+1,Encoder_ISR@salida+1
 27193  003784  C043  F06E         	movff	?i2___fladd+2,Encoder_ISR@salida+2
 27194  003788  C044  F06F         	movff	?i2___fladd+3,Encoder_ISR@salida+3
 27195                           
 27196                           ;encoder.c: 55:       y[2]=y[1];
 27197  00378C  C078  F07C         	movff	Encoder_ISR@y+4,Encoder_ISR@y+8
 27198  003790  C079  F07D         	movff	Encoder_ISR@y+5,Encoder_ISR@y+9
 27199  003794  C07A  F07E         	movff	Encoder_ISR@y+6,Encoder_ISR@y+10
 27200  003798  C07B  F07F         	movff	Encoder_ISR@y+7,Encoder_ISR@y+11
 27201                           
 27202                           ;encoder.c: 56:       y[1]=y[0];
 27203  00379C  C074  F078         	movff	Encoder_ISR@y,Encoder_ISR@y+4
 27204  0037A0  C075  F079         	movff	Encoder_ISR@y+1,Encoder_ISR@y+5
 27205  0037A4  C076  F07A         	movff	Encoder_ISR@y+2,Encoder_ISR@y+6
 27206  0037A8  C077  F07B         	movff	Encoder_ISR@y+3,Encoder_ISR@y+7
 27207                           
 27208                           ;encoder.c: 57:       S=(1000000*60/salida)*((double)1000/((double)2667*72));
 27209  0037AC  C06C  F013         	movff	Encoder_ISR@salida,i2___fldiv@a
 27210  0037B0  C06D  F014         	movff	Encoder_ISR@salida+1,i2___fldiv@a+1
 27211  0037B4  C06E  F015         	movff	Encoder_ISR@salida+2,i2___fldiv@a+2
 27212  0037B8  C06F  F016         	movff	Encoder_ISR@salida+3,i2___fldiv@a+3
 27213  0037BC  0EC0               	movlw	192
 27214  0037BE  6E0F               	movwf	i2___fldiv@b^0,c
 27215  0037C0  0EE1               	movlw	225
 27216  0037C2  6E10               	movwf	(i2___fldiv@b+1)^0,c
 27217  0037C4  0E64               	movlw	100
 27218  0037C6  6E11               	movwf	(i2___fldiv@b+2)^0,c
 27219  0037C8  0E4C               	movlw	76
 27220  0037CA  6E12               	movwf	(i2___fldiv@b+3)^0,c
 27221  0037CC  EC6A  F01D         	call	i2___fldiv	;wreg free
 27222  0037D0  C00F  F028         	movff	?i2___fldiv,i2___flmul@b
 27223  0037D4  C010  F029         	movff	?i2___fldiv+1,i2___flmul@b+1
 27224  0037D8  C011  F02A         	movff	?i2___fldiv+2,i2___flmul@b+2
 27225  0037DC  C012  F02B         	movff	?i2___fldiv+3,i2___flmul@b+3
 27226  0037E0  0E35               	movlw	53
 27227  0037E2  6E2C               	movwf	i2___flmul@a^0,c
 27228  0037E4  0EA5               	movlw	165
 27229  0037E6  6E2D               	movwf	(i2___flmul@a+1)^0,c
 27230  0037E8  0EAA               	movlw	170
 27231  0037EA  6E2E               	movwf	(i2___flmul@a+2)^0,c
 27232  0037EC  0E3B               	movlw	59
 27233  0037EE  6E2F               	movwf	(i2___flmul@a+3)^0,c
 27234  0037F0  ECA8  F014         	call	i2___flmul	;wreg free
 27235  0037F4  C028  F2F6         	movff	?i2___flmul,_S
 27236  0037F8  C029  F2F7         	movff	?i2___flmul+1,_S+1
 27237  0037FC  C02A  F2F8         	movff	?i2___flmul+2,_S+2
 27238  003800  C02B  F2F9         	movff	?i2___flmul+3,_S+3
 27239                           
 27240                           ;encoder.c: 58:       inverse_S=1/S;
 27241  003804  0E00               	movlw	0
 27242  003806  6E0F               	movwf	i2___fldiv@b^0,c
 27243  003808  0E00               	movlw	0
 27244  00380A  6E10               	movwf	(i2___fldiv@b+1)^0,c
 27245  00380C  0E80               	movlw	128
 27246  00380E  6E11               	movwf	(i2___fldiv@b+2)^0,c
 27247  003810  0E3F               	movlw	63
 27248  003812  6E12               	movwf	(i2___fldiv@b+3)^0,c
 27249  003814  C2F6  F013         	movff	_S,i2___fldiv@a
 27250  003818  C2F7  F014         	movff	_S+1,i2___fldiv@a+1
 27251  00381C  C2F8  F015         	movff	_S+2,i2___fldiv@a+2
 27252  003820  C2F9  F016         	movff	_S+3,i2___fldiv@a+3
 27253  003824  EC6A  F01D         	call	i2___fldiv	;wreg free
 27254  003828  C00F  F2F2         	movff	?i2___fldiv,_inverse_S
 27255  00382C  C010  F2F3         	movff	?i2___fldiv+1,_inverse_S+1
 27256  003830  C011  F2F4         	movff	?i2___fldiv+2,_inverse_S+2
 27257  003834  C012  F2F5         	movff	?i2___fldiv+3,_inverse_S+3
 27258                           
 27259                           ;encoder.c: 59:       S_CHANGE=1;
 27260  003838  0E01               	movlw	1
 27261  00383A  0101               	movlb	1	; () banked
 27262  00383C  6FD3               	movwf	_S_CHANGE& (0+255),b
 27263                           
 27264                           ; BSR set to: 1
 27265                           ;encoder.c: 60:       Actualizar_angulo();
 27266  00383E  ECD8  F03E         	call	_Actualizar_angulo	;wreg free
 27267  003842                     i2l1261:
 27268                           
 27269                           ;encoder.c: 63:    prescaler=0;
 27270  003842  0E00               	movlw	0
 27271  003844  0101               	movlb	1	; () banked
 27272  003846  6FD1               	movwf	_prescaler& (0+255),b
 27273                           
 27274                           ; BSR set to: 1
 27275  003848  0012               	return		;funcret
 27276  00384A                     __end_of_Encoder_ISR:
 27277                           	callstack 0
 27278                           
 27279 ;; *************** function _IOCC2_DefaultInterruptHandler *****************
 27280 ;; Defined at:
 27281 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
 27282 ;; Parameters:    Size  Location     Type
 27283 ;;		None
 27284 ;; Auto vars:     Size  Location     Type
 27285 ;;		None
 27286 ;; Return value:  Size  Location     Type
 27287 ;;                  1    wreg      void 
 27288 ;; Registers used:
 27289 ;;		None
 27290 ;; Tracked objects:
 27291 ;;		On entry : 3F/2
 27292 ;;		On exit  : 3F/2
 27293 ;;		Unchanged: 3F/0
 27294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27295 ;;      Params:         0       0       0       0       0       0       0       0       0
 27296 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27297 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27298 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27299 ;;Total ram usage:        0 bytes
 27300 ;; Hardware stack levels used: 1
 27301 ;; This function calls:
 27302 ;;		Nothing
 27303 ;; This function is called by:
 27304 ;;		_PIN_MANAGER_Initialize
 27305 ;;		_IOCC2_ISR
 27306 ;; This function uses a non-reentrant model
 27307 ;;
 27308                           
 27309                           	psect	text149
 27310  000620                     __ptext149:
 27311                           	callstack 0
 27312  000620                     _IOCC2_DefaultInterruptHandler:
 27313                           	callstack 18
 27314                           
 27315                           ; BSR set to: 2
 27316                           
 27317                           ; BSR set to: 1
 27318                           ;incstack = 0
 27319  000620  0012               	return		;funcret
 27320  000622                     __end_of_IOCC2_DefaultInterruptHandler:
 27321                           	callstack 0
 27322                           
 27323 ;; *************** function i2___xxtofl *****************
 27324 ;; Defined at:
 27325 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 27326 ;; Parameters:    Size  Location     Type
 27327 ;;  sign            1    wreg     unsigned char 
 27328 ;;  val             4    0[COMRAM] long 
 27329 ;; Auto vars:     Size  Location     Type
 27330 ;;  sign            1    8[COMRAM] unsigned char 
 27331 ;;  arg             4   10[COMRAM] unsigned long 
 27332 ;;  exp             1    9[COMRAM] unsigned char 
 27333 ;; Return value:  Size  Location     Type
 27334 ;;                  4    0[COMRAM] unsigned char 
 27335 ;; Registers used:
 27336 ;;		wreg, status,2, status,0
 27337 ;; Tracked objects:
 27338 ;;		On entry : 3F/0
 27339 ;;		On exit  : 0/0
 27340 ;;		Unchanged: 0/0
 27341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27342 ;;      Params:         4       0       0       0       0       0       0       0       0
 27343 ;;      Locals:         6       0       0       0       0       0       0       0       0
 27344 ;;      Temps:          4       0       0       0       0       0       0       0       0
 27345 ;;      Totals:        14       0       0       0       0       0       0       0       0
 27346 ;;Total ram usage:       14 bytes
 27347 ;; Hardware stack levels used: 1
 27348 ;; This function calls:
 27349 ;;		Nothing
 27350 ;; This function is called by:
 27351 ;;		_G01_TMR2_ISR
 27352 ;;		_Encoder_ISR
 27353 ;; This function uses a non-reentrant model
 27354 ;;
 27355                           
 27356                           	psect	text150
 27357  005098                     __ptext150:
 27358                           	callstack 0
 27359  005098                     i2___xxtofl:
 27360                           	callstack 18
 27361                           
 27362                           ; BSR set to: 2
 27363                           ;incstack = 0
 27364                           ;i2___xxtofl@sign stored from wreg
 27365  005098  6E09               	movwf	i2___xxtofl@sign^0,c
 27366  00509A  5009               	movf	i2___xxtofl@sign^0,w,c
 27367  00509C  A4D8               	btfss	status,2,c
 27368  00509E  AE04               	btfss	(i2___xxtofl@val+3)^0,7,c
 27369  0050A0  D01A               	goto	i2l2068
 27370  0050A2  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 27371  0050A6  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 27372  0050AA  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 27373  0050AE  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 27374  0050B2  1E05               	comf	??i2___xxtofl^0,f,c
 27375  0050B4  1E06               	comf	(??i2___xxtofl+1)^0,f,c
 27376  0050B6  1E07               	comf	(??i2___xxtofl+2)^0,f,c
 27377  0050B8  1E08               	comf	(??i2___xxtofl+3)^0,f,c
 27378  0050BA  2A05               	incf	??i2___xxtofl^0,f,c
 27379  0050BC  0E00               	movlw	0
 27380  0050BE  2206               	addwfc	(??i2___xxtofl+1)^0,f,c
 27381  0050C0  2207               	addwfc	(??i2___xxtofl+2)^0,f,c
 27382  0050C2  2208               	addwfc	(??i2___xxtofl+3)^0,f,c
 27383  0050C4  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 27384  0050C8  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 27385  0050CC  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 27386  0050D0  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 27387  0050D4  D008               	goto	i2l10535
 27388  0050D6                     i2l2068:
 27389  0050D6  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 27390  0050DA  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 27391  0050DE  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 27392  0050E2  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 27393  0050E6                     i2l10535:
 27394  0050E6  5001               	movf	i2___xxtofl@val^0,w,c
 27395  0050E8  1002               	iorwf	(i2___xxtofl@val+1)^0,w,c
 27396  0050EA  1003               	iorwf	(i2___xxtofl@val+2)^0,w,c
 27397  0050EC  1004               	iorwf	(i2___xxtofl@val+3)^0,w,c
 27398  0050EE  A4D8               	btfss	status,2,c
 27399  0050F0  D009               	goto	i2l10541
 27400  0050F2  0E00               	movlw	0
 27401  0050F4  6E01               	movwf	?i2___xxtofl^0,c
 27402  0050F6  0E00               	movlw	0
 27403  0050F8  6E02               	movwf	(?i2___xxtofl+1)^0,c
 27404  0050FA  0E00               	movlw	0
 27405  0050FC  6E03               	movwf	(?i2___xxtofl+2)^0,c
 27406  0050FE  0E00               	movlw	0
 27407  005100  6E04               	movwf	(?i2___xxtofl+3)^0,c
 27408  005102  0012               	return	
 27409  005104                     i2l10541:
 27410  005104  0E96               	movlw	150
 27411  005106  6E0A               	movwf	i2___xxtofl@exp^0,c
 27412  005108  D006               	goto	i2l10545
 27413  00510A                     i2l10543:
 27414  00510A  2A0A               	incf	i2___xxtofl@exp^0,f,c
 27415  00510C  90D8               	bcf	status,0,c
 27416  00510E  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 27417  005110  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 27418  005112  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 27419  005114  320B               	rrcf	i2___xxtofl@arg^0,f,c
 27420  005116                     i2l10545:
 27421  005116  0E00               	movlw	0
 27422  005118  140B               	andwf	i2___xxtofl@arg^0,w,c
 27423  00511A  6E05               	movwf	??i2___xxtofl^0,c
 27424  00511C  0E00               	movlw	0
 27425  00511E  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 27426  005120  6E06               	movwf	(??i2___xxtofl+1)^0,c
 27427  005122  0E00               	movlw	0
 27428  005124  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 27429  005126  6E07               	movwf	(??i2___xxtofl+2)^0,c
 27430  005128  0EFE               	movlw	254
 27431  00512A  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 27432  00512C  6E08               	movwf	(??i2___xxtofl+3)^0,c
 27433  00512E  5005               	movf	??i2___xxtofl^0,w,c
 27434  005130  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 27435  005132  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 27436  005134  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 27437  005136  B4D8               	btfsc	status,2,c
 27438  005138  D00D               	goto	i2l2075
 27439  00513A  D7E7               	goto	i2l10543
 27440  00513C                     i2l10547:
 27441  00513C  2A0A               	incf	i2___xxtofl@exp^0,f,c
 27442  00513E  0E01               	movlw	1
 27443  005140  260B               	addwf	i2___xxtofl@arg^0,f,c
 27444  005142  0E00               	movlw	0
 27445  005144  220C               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 27446  005146  220D               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 27447  005148  220E               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 27448  00514A  90D8               	bcf	status,0,c
 27449  00514C  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 27450  00514E  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 27451  005150  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 27452  005152  320B               	rrcf	i2___xxtofl@arg^0,f,c
 27453  005154                     i2l2075:
 27454  005154  0E00               	movlw	0
 27455  005156  140B               	andwf	i2___xxtofl@arg^0,w,c
 27456  005158  6E05               	movwf	??i2___xxtofl^0,c
 27457  00515A  0E00               	movlw	0
 27458  00515C  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 27459  00515E  6E06               	movwf	(??i2___xxtofl+1)^0,c
 27460  005160  0E00               	movlw	0
 27461  005162  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 27462  005164  6E07               	movwf	(??i2___xxtofl+2)^0,c
 27463  005166  0EFF               	movlw	255
 27464  005168  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 27465  00516A  6E08               	movwf	(??i2___xxtofl+3)^0,c
 27466  00516C  5005               	movf	??i2___xxtofl^0,w,c
 27467  00516E  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 27468  005170  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 27469  005172  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 27470  005174  B4D8               	btfsc	status,2,c
 27471  005176  D007               	goto	i2l10555
 27472  005178  D7E1               	goto	i2l10547
 27473  00517A                     i2l10553:
 27474  00517A  060A               	decf	i2___xxtofl@exp^0,f,c
 27475  00517C  90D8               	bcf	status,0,c
 27476  00517E  360B               	rlcf	i2___xxtofl@arg^0,f,c
 27477  005180  360C               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 27478  005182  360D               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 27479  005184  360E               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 27480  005186                     i2l10555:
 27481  005186  BE0D               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 27482  005188  D003               	goto	i2u1180_40
 27483  00518A  0E02               	movlw	2
 27484  00518C  600A               	cpfslt	i2___xxtofl@exp^0,c
 27485  00518E  D7F5               	goto	i2l10553
 27486  005190                     i2u1180_40:
 27487  005190  A00A               	btfss	i2___xxtofl@exp^0,0,c
 27488  005192  9E0D               	bcf	(i2___xxtofl@arg+2)^0,7,c
 27489  005194  90D8               	bcf	status,0,c
 27490  005196  320A               	rrcf	i2___xxtofl@exp^0,f,c
 27491  005198  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 27492  00519C  6A06               	clrf	(??i2___xxtofl+1)^0,c
 27493  00519E  6A07               	clrf	(??i2___xxtofl+2)^0,c
 27494  0051A0  6A08               	clrf	(??i2___xxtofl+3)^0,c
 27495  0051A2  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 27496  0051A6  6A07               	clrf	(??i2___xxtofl+2)^0,c
 27497  0051A8  6A06               	clrf	(??i2___xxtofl+1)^0,c
 27498  0051AA  6A05               	clrf	??i2___xxtofl^0,c
 27499  0051AC  5005               	movf	??i2___xxtofl^0,w,c
 27500  0051AE  120B               	iorwf	i2___xxtofl@arg^0,f,c
 27501  0051B0  5006               	movf	(??i2___xxtofl+1)^0,w,c
 27502  0051B2  120C               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 27503  0051B4  5007               	movf	(??i2___xxtofl+2)^0,w,c
 27504  0051B6  120D               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 27505  0051B8  5008               	movf	(??i2___xxtofl+3)^0,w,c
 27506  0051BA  120E               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 27507  0051BC  5009               	movf	i2___xxtofl@sign^0,w,c
 27508  0051BE  A4D8               	btfss	status,2,c
 27509  0051C0  AE04               	btfss	(i2___xxtofl@val+3)^0,7,c
 27510  0051C2  D001               	goto	i2l10571
 27511  0051C4  8E0E               	bsf	(i2___xxtofl@arg+3)^0,7,c
 27512  0051C6                     i2l10571:
 27513  0051C6  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 27514  0051CA  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 27515  0051CE  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 27516  0051D2  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 27517  0051D6  0012               	return		;funcret
 27518  0051D8                     __end_ofi2___xxtofl:
 27519                           	callstack 0
 27520                           
 27521 ;; *************** function i2___flsub *****************
 27522 ;; Defined at:
 27523 ;;		line 245 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 27524 ;; Parameters:    Size  Location     Type
 27525 ;;  b               4   80[COMRAM] unsigned char 
 27526 ;;  a               4   84[COMRAM] unsigned char 
 27527 ;; Auto vars:     Size  Location     Type
 27528 ;;		None
 27529 ;; Return value:  Size  Location     Type
 27530 ;;                  4   80[COMRAM] unsigned char 
 27531 ;; Registers used:
 27532 ;;		wreg, status,2, status,0, cstack
 27533 ;; Tracked objects:
 27534 ;;		On entry : 0/0
 27535 ;;		On exit  : 0/0
 27536 ;;		Unchanged: 0/0
 27537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27538 ;;      Params:         8       0       0       0       0       0       0       0       0
 27539 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27540 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27541 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27542 ;;Total ram usage:        8 bytes
 27543 ;; Hardware stack levels used: 1
 27544 ;; Hardware stack levels required when called: 1
 27545 ;; This function calls:
 27546 ;;		i2___fladd
 27547 ;; This function is called by:
 27548 ;;		_G01_TMR2_ISR
 27549 ;;		_Encoder_ISR
 27550 ;; This function uses a non-reentrant model
 27551 ;;
 27552                           
 27553                           	psect	text151
 27554  007C20                     __ptext151:
 27555                           	callstack 0
 27556  007C20                     i2___flsub:
 27557                           	callstack 17
 27558                           
 27559                           ;incstack = 0
 27560  007C20  0E00               	movlw	0
 27561  007C22  1A55               	xorwf	i2___flsub@a^0,f,c
 27562  007C24  0E00               	movlw	0
 27563  007C26  1A56               	xorwf	(i2___flsub@a+1)^0,f,c
 27564  007C28  0E00               	movlw	0
 27565  007C2A  1A57               	xorwf	(i2___flsub@a+2)^0,f,c
 27566  007C2C  0E80               	movlw	128
 27567  007C2E  1A58               	xorwf	(i2___flsub@a+3)^0,f,c
 27568  007C30  C051  F041         	movff	i2___flsub@b,i2___fladd@b
 27569  007C34  C052  F042         	movff	i2___flsub@b+1,i2___fladd@b+1
 27570  007C38  C053  F043         	movff	i2___flsub@b+2,i2___fladd@b+2
 27571  007C3C  C054  F044         	movff	i2___flsub@b+3,i2___fladd@b+3
 27572  007C40  C055  F045         	movff	i2___flsub@a,i2___fladd@a
 27573  007C44  C056  F046         	movff	i2___flsub@a+1,i2___fladd@a+1
 27574  007C48  C057  F047         	movff	i2___flsub@a+2,i2___fladd@a+2
 27575  007C4C  C058  F048         	movff	i2___flsub@a+3,i2___fladd@a+3
 27576  007C50  ECC5  F017         	call	i2___fladd	;wreg free
 27577  007C54  C041  F051         	movff	?i2___fladd,?i2___flsub
 27578  007C58  C042  F052         	movff	?i2___fladd+1,?i2___flsub+1
 27579  007C5C  C043  F053         	movff	?i2___fladd+2,?i2___flsub+2
 27580  007C60  C044  F054         	movff	?i2___fladd+3,?i2___flsub+3
 27581  007C64  0012               	return		;funcret
 27582  007C66                     __end_ofi2___flsub:
 27583                           	callstack 0
 27584                           
 27585 ;; *************** function i2___fladd *****************
 27586 ;; Defined at:
 27587 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 27588 ;; Parameters:    Size  Location     Type
 27589 ;;  b               4   64[COMRAM] unsigned char 
 27590 ;;  a               4   68[COMRAM] unsigned char 
 27591 ;; Auto vars:     Size  Location     Type
 27592 ;;  grs             1   79[COMRAM] unsigned char 
 27593 ;;  bexp            1   78[COMRAM] unsigned char 
 27594 ;;  aexp            1   77[COMRAM] unsigned char 
 27595 ;;  signs           1   76[COMRAM] unsigned char 
 27596 ;; Return value:  Size  Location     Type
 27597 ;;                  4   64[COMRAM] unsigned char 
 27598 ;; Registers used:
 27599 ;;		wreg, status,2, status,0
 27600 ;; Tracked objects:
 27601 ;;		On entry : 0/0
 27602 ;;		On exit  : 0/0
 27603 ;;		Unchanged: 0/0
 27604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27605 ;;      Params:         8       0       0       0       0       0       0       0       0
 27606 ;;      Locals:         4       0       0       0       0       0       0       0       0
 27607 ;;      Temps:          4       0       0       0       0       0       0       0       0
 27608 ;;      Totals:        16       0       0       0       0       0       0       0       0
 27609 ;;Total ram usage:       16 bytes
 27610 ;; Hardware stack levels used: 1
 27611 ;; This function calls:
 27612 ;;		Nothing
 27613 ;; This function is called by:
 27614 ;;		_G01_TMR2_ISR
 27615 ;;		_Encoder_ISR
 27616 ;;		i2___flsub
 27617 ;; This function uses a non-reentrant model
 27618 ;;
 27619                           
 27620                           	psect	text152
 27621  002F8A                     __ptext152:
 27622                           	callstack 0
 27623  002F8A                     i2___fladd:
 27624                           	callstack 17
 27625                           
 27626                           ;incstack = 0
 27627  002F8A  5044               	movf	(i2___fladd@b+3)^0,w,c
 27628  002F8C  0B80               	andlw	128
 27629  002F8E  6E4D               	movwf	i2___fladd@signs^0,c
 27630  002F90  5044               	movf	(i2___fladd@b+3)^0,w,c
 27631  002F92  2444               	addwf	(i2___fladd@b+3)^0,w,c
 27632  002F94  6E4F               	movwf	i2___fladd@bexp^0,c
 27633  002F96  BE43               	btfsc	(i2___fladd@b+2)^0,7,c
 27634  002F98  804F               	bsf	i2___fladd@bexp^0,0,c
 27635  002F9A  504F               	movf	i2___fladd@bexp^0,w,c
 27636  002F9C  B4D8               	btfsc	status,2,c
 27637  002F9E  D00D               	goto	i2l9553
 27638  002FA0  284F               	incf	i2___fladd@bexp^0,w,c
 27639  002FA2  A4D8               	btfss	status,2,c
 27640  002FA4  D008               	goto	i2l9549
 27641  002FA6  0E00               	movlw	0
 27642  002FA8  6E41               	movwf	i2___fladd@b^0,c
 27643  002FAA  0E00               	movlw	0
 27644  002FAC  6E42               	movwf	(i2___fladd@b+1)^0,c
 27645  002FAE  0E00               	movlw	0
 27646  002FB0  6E43               	movwf	(i2___fladd@b+2)^0,c
 27647  002FB2  0E00               	movlw	0
 27648  002FB4  6E44               	movwf	(i2___fladd@b+3)^0,c
 27649  002FB6                     i2l9549:
 27650  002FB6  8E43               	bsf	(i2___fladd@b+2)^0,7,c
 27651  002FB8  D006               	goto	L37
 27652  002FBA                     i2l9553:
 27653  002FBA  0E00               	movlw	0
 27654  002FBC  6E41               	movwf	i2___fladd@b^0,c
 27655  002FBE  0E00               	movlw	0
 27656  002FC0  6E42               	movwf	(i2___fladd@b+1)^0,c
 27657  002FC2  0E00               	movlw	0
 27658  002FC4  6E43               	movwf	(i2___fladd@b+2)^0,c
 27659  002FC6                     L37:
 27660  002FC6  0E00               	movlw	0
 27661  002FC8  6E44               	movwf	(i2___fladd@b+3)^0,c
 27662  002FCA  5048               	movf	(i2___fladd@a+3)^0,w,c
 27663  002FCC  0B80               	andlw	128
 27664  002FCE  6E4E               	movwf	i2___fladd@aexp^0,c
 27665  002FD0  504D               	movf	i2___fladd@signs^0,w,c
 27666  002FD2  184E               	xorwf	i2___fladd@aexp^0,w,c
 27667  002FD4  A4D8               	btfss	status,2,c
 27668  002FD6  8C4D               	bsf	i2___fladd@signs^0,6,c
 27669  002FD8  5048               	movf	(i2___fladd@a+3)^0,w,c
 27670  002FDA  2448               	addwf	(i2___fladd@a+3)^0,w,c
 27671  002FDC  6E4E               	movwf	i2___fladd@aexp^0,c
 27672  002FDE  BE47               	btfsc	(i2___fladd@a+2)^0,7,c
 27673  002FE0  804E               	bsf	i2___fladd@aexp^0,0,c
 27674  002FE2  504E               	movf	i2___fladd@aexp^0,w,c
 27675  002FE4  B4D8               	btfsc	status,2,c
 27676  002FE6  D00D               	goto	i2l9577
 27677  002FE8  284E               	incf	i2___fladd@aexp^0,w,c
 27678  002FEA  A4D8               	btfss	status,2,c
 27679  002FEC  D008               	goto	i2l9573
 27680  002FEE  0E00               	movlw	0
 27681  002FF0  6E45               	movwf	i2___fladd@a^0,c
 27682  002FF2  0E00               	movlw	0
 27683  002FF4  6E46               	movwf	(i2___fladd@a+1)^0,c
 27684  002FF6  0E00               	movlw	0
 27685  002FF8  6E47               	movwf	(i2___fladd@a+2)^0,c
 27686  002FFA  0E00               	movlw	0
 27687  002FFC  6E48               	movwf	(i2___fladd@a+3)^0,c
 27688  002FFE                     i2l9573:
 27689  002FFE  8E47               	bsf	(i2___fladd@a+2)^0,7,c
 27690  003000  D006               	goto	L38
 27691  003002                     i2l9577:
 27692  003002  0E00               	movlw	0
 27693  003004  6E45               	movwf	i2___fladd@a^0,c
 27694  003006  0E00               	movlw	0
 27695  003008  6E46               	movwf	(i2___fladd@a+1)^0,c
 27696  00300A  0E00               	movlw	0
 27697  00300C  6E47               	movwf	(i2___fladd@a+2)^0,c
 27698  00300E                     L38:
 27699  00300E  0E00               	movlw	0
 27700  003010  6E48               	movwf	(i2___fladd@a+3)^0,c
 27701  003012  504F               	movf	i2___fladd@bexp^0,w,c
 27702  003014  5C4E               	subwf	i2___fladd@aexp^0,w,c
 27703  003016  B0D8               	btfsc	status,0,c
 27704  003018  D022               	goto	i2l9615
 27705  00301A  AC4D               	btfss	i2___fladd@signs^0,6,c
 27706  00301C  D002               	goto	i2l9585
 27707  00301E  0E80               	movlw	128
 27708  003020  1A4D               	xorwf	i2___fladd@signs^0,f,c
 27709  003022                     i2l9585:
 27710  003022  C04F  F050         	movff	i2___fladd@bexp,i2___fladd@grs
 27711  003026  C04E  F04F         	movff	i2___fladd@aexp,i2___fladd@bexp
 27712  00302A  C050  F04E         	movff	i2___fladd@grs,i2___fladd@aexp
 27713  00302E  C041  F050         	movff	i2___fladd@b,i2___fladd@grs
 27714  003032  C045  F041         	movff	i2___fladd@a,i2___fladd@b
 27715  003036  C050  F045         	movff	i2___fladd@grs,i2___fladd@a
 27716  00303A  C042  F050         	movff	i2___fladd@b+1,i2___fladd@grs
 27717  00303E  C046  F042         	movff	i2___fladd@a+1,i2___fladd@b+1
 27718  003042  C050  F046         	movff	i2___fladd@grs,i2___fladd@a+1
 27719  003046  C043  F050         	movff	i2___fladd@b+2,i2___fladd@grs
 27720  00304A  C047  F043         	movff	i2___fladd@a+2,i2___fladd@b+2
 27721  00304E  C050  F047         	movff	i2___fladd@grs,i2___fladd@a+2
 27722  003052  C044  F050         	movff	i2___fladd@b+3,i2___fladd@grs
 27723  003056  C048  F044         	movff	i2___fladd@a+3,i2___fladd@b+3
 27724  00305A  C050  F048         	movff	i2___fladd@grs,i2___fladd@a+3
 27725  00305E                     i2l9615:
 27726  00305E  0E00               	movlw	0
 27727  003060  6E50               	movwf	i2___fladd@grs^0,c
 27728  003062  504F               	movf	i2___fladd@bexp^0,w,c
 27729  003064  C04E  F049         	movff	i2___fladd@aexp,??i2___fladd
 27730  003068  6A4A               	clrf	(??i2___fladd+1)^0,c
 27731  00306A  5E49               	subwf	??i2___fladd^0,f,c
 27732  00306C  0E00               	movlw	0
 27733  00306E  5A4A               	subwfb	(??i2___fladd+1)^0,f,c
 27734  003070  BE4A               	btfsc	(??i2___fladd+1)^0,7,c
 27735  003072  D02C               	goto	i2l1942
 27736  003074  504A               	movf	(??i2___fladd+1)^0,w,c
 27737  003076  E104               	bnz	i2u1038_40
 27738  003078  0E1A               	movlw	26
 27739  00307A  5C49               	subwf	??i2___fladd^0,w,c
 27740  00307C  A0D8               	btfss	status,0,c
 27741  00307E  D026               	goto	i2l1942
 27742  003080                     i2u1038_40:
 27743  003080  5041               	movf	i2___fladd@b^0,w,c
 27744  003082  1042               	iorwf	(i2___fladd@b+1)^0,w,c
 27745  003084  1043               	iorwf	(i2___fladd@b+2)^0,w,c
 27746  003086  1044               	iorwf	(i2___fladd@b+3)^0,w,c
 27747  003088  B4D8               	btfsc	status,2,c
 27748  00308A  D002               	goto	i2u1039_40
 27749  00308C  0E01               	movlw	1
 27750  00308E  D001               	goto	i2u1040_40
 27751  003090                     i2u1039_40:
 27752  003090  0E00               	movlw	0
 27753  003092                     i2u1040_40:
 27754  003092  6E50               	movwf	i2___fladd@grs^0,c
 27755  003094  0E00               	movlw	0
 27756  003096  6E41               	movwf	i2___fladd@b^0,c
 27757  003098  0E00               	movlw	0
 27758  00309A  6E42               	movwf	(i2___fladd@b+1)^0,c
 27759  00309C  0E00               	movlw	0
 27760  00309E  6E43               	movwf	(i2___fladd@b+2)^0,c
 27761  0030A0  0E00               	movlw	0
 27762  0030A2  6E44               	movwf	(i2___fladd@b+3)^0,c
 27763  0030A4  C04E  F04F         	movff	i2___fladd@aexp,i2___fladd@bexp
 27764  0030A8  D015               	goto	i2u1043_40
 27765  0030AA                     i2l1943:
 27766  0030AA  A050               	btfss	i2___fladd@grs^0,0,c
 27767  0030AC  D005               	goto	i2l9627
 27768  0030AE  90D8               	bcf	status,0,c
 27769  0030B0  3050               	rrcf	i2___fladd@grs^0,w,c
 27770  0030B2  0901               	iorlw	1
 27771  0030B4  6E50               	movwf	i2___fladd@grs^0,c
 27772  0030B6  D002               	goto	i2l9629
 27773  0030B8                     i2l9627:
 27774  0030B8  90D8               	bcf	status,0,c
 27775  0030BA  3250               	rrcf	i2___fladd@grs^0,f,c
 27776  0030BC                     i2l9629:
 27777  0030BC  B041               	btfsc	i2___fladd@b^0,0,c
 27778  0030BE  8E50               	bsf	i2___fladd@grs^0,7,c
 27779  0030C0  3444               	rlcf	(i2___fladd@b+3)^0,w,c
 27780  0030C2  3244               	rrcf	(i2___fladd@b+3)^0,f,c
 27781  0030C4  3243               	rrcf	(i2___fladd@b+2)^0,f,c
 27782  0030C6  3242               	rrcf	(i2___fladd@b+1)^0,f,c
 27783  0030C8  3241               	rrcf	i2___fladd@b^0,f,c
 27784  0030CA  2A4F               	incf	i2___fladd@bexp^0,f,c
 27785  0030CC                     i2l1942:
 27786  0030CC  504E               	movf	i2___fladd@aexp^0,w,c
 27787  0030CE  5C4F               	subwf	i2___fladd@bexp^0,w,c
 27788  0030D0  A0D8               	btfss	status,0,c
 27789  0030D2  D7EB               	goto	i2l1943
 27790  0030D4                     i2u1043_40:
 27791  0030D4  BC4D               	btfsc	i2___fladd@signs^0,6,c
 27792  0030D6  D028               	goto	i2l9661
 27793  0030D8  504F               	movf	i2___fladd@bexp^0,w,c
 27794  0030DA  A4D8               	btfss	status,2,c
 27795  0030DC  D009               	goto	i2l9643
 27796  0030DE  0E00               	movlw	0
 27797  0030E0  6E41               	movwf	?i2___fladd^0,c
 27798  0030E2  0E00               	movlw	0
 27799  0030E4  6E42               	movwf	(?i2___fladd+1)^0,c
 27800  0030E6  0E00               	movlw	0
 27801  0030E8  6E43               	movwf	(?i2___fladd+2)^0,c
 27802  0030EA  0E00               	movlw	0
 27803  0030EC  6E44               	movwf	(?i2___fladd+3)^0,c
 27804  0030EE  0012               	return	
 27805  0030F0                     i2l9643:
 27806  0030F0  5045               	movf	i2___fladd@a^0,w,c
 27807  0030F2  2641               	addwf	i2___fladd@b^0,f,c
 27808  0030F4  5046               	movf	(i2___fladd@a+1)^0,w,c
 27809  0030F6  2242               	addwfc	(i2___fladd@b+1)^0,f,c
 27810  0030F8  5047               	movf	(i2___fladd@a+2)^0,w,c
 27811  0030FA  2243               	addwfc	(i2___fladd@b+2)^0,f,c
 27812  0030FC  5048               	movf	(i2___fladd@a+3)^0,w,c
 27813  0030FE  2244               	addwfc	(i2___fladd@b+3)^0,f,c
 27814  003100  A044               	btfss	(i2___fladd@b+3)^0,0,c
 27815  003102  D071               	goto	i2u1056_40
 27816  003104  A050               	btfss	i2___fladd@grs^0,0,c
 27817  003106  D005               	goto	i2l9651
 27818  003108  90D8               	bcf	status,0,c
 27819  00310A  3050               	rrcf	i2___fladd@grs^0,w,c
 27820  00310C  0901               	iorlw	1
 27821  00310E  6E50               	movwf	i2___fladd@grs^0,c
 27822  003110  D002               	goto	i2l9653
 27823  003112                     i2l9651:
 27824  003112  90D8               	bcf	status,0,c
 27825  003114  3250               	rrcf	i2___fladd@grs^0,f,c
 27826  003116                     i2l9653:
 27827  003116  B041               	btfsc	i2___fladd@b^0,0,c
 27828  003118  8E50               	bsf	i2___fladd@grs^0,7,c
 27829  00311A  3444               	rlcf	(i2___fladd@b+3)^0,w,c
 27830  00311C  3244               	rrcf	(i2___fladd@b+3)^0,f,c
 27831  00311E  3243               	rrcf	(i2___fladd@b+2)^0,f,c
 27832  003120  3242               	rrcf	(i2___fladd@b+1)^0,f,c
 27833  003122  3241               	rrcf	i2___fladd@b^0,f,c
 27834  003124  2A4F               	incf	i2___fladd@bexp^0,f,c
 27835  003126  D05F               	goto	i2u1056_40
 27836  003128                     i2l9661:
 27837  003128  5045               	movf	i2___fladd@a^0,w,c
 27838  00312A  5C41               	subwf	i2___fladd@b^0,w,c
 27839  00312C  5046               	movf	(i2___fladd@a+1)^0,w,c
 27840  00312E  5842               	subwfb	(i2___fladd@b+1)^0,w,c
 27841  003130  5047               	movf	(i2___fladd@a+2)^0,w,c
 27842  003132  5843               	subwfb	(i2___fladd@b+2)^0,w,c
 27843  003134  5044               	movf	(i2___fladd@b+3)^0,w,c
 27844  003136  0A80               	xorlw	128
 27845  003138  6E49               	movwf	??i2___fladd^0,c
 27846  00313A  5048               	movf	(i2___fladd@a+3)^0,w,c
 27847  00313C  0A80               	xorlw	128
 27848  00313E  5849               	subwfb	??i2___fladd^0,w,c
 27849  003140  B0D8               	btfsc	status,0,c
 27850  003142  D025               	goto	i2l9671
 27851  003144  5041               	movf	i2___fladd@b^0,w,c
 27852  003146  5C45               	subwf	i2___fladd@a^0,w,c
 27853  003148  6E49               	movwf	??i2___fladd^0,c
 27854  00314A  5042               	movf	(i2___fladd@b+1)^0,w,c
 27855  00314C  5846               	subwfb	(i2___fladd@a+1)^0,w,c
 27856  00314E  6E4A               	movwf	(??i2___fladd+1)^0,c
 27857  003150  5043               	movf	(i2___fladd@b+2)^0,w,c
 27858  003152  5847               	subwfb	(i2___fladd@a+2)^0,w,c
 27859  003154  6E4B               	movwf	(??i2___fladd+2)^0,c
 27860  003156  5044               	movf	(i2___fladd@b+3)^0,w,c
 27861  003158  5848               	subwfb	(i2___fladd@a+3)^0,w,c
 27862  00315A  6E4C               	movwf	(??i2___fladd+3)^0,c
 27863  00315C  0EFF               	movlw	255
 27864  00315E  2449               	addwf	??i2___fladd^0,w,c
 27865  003160  6E41               	movwf	i2___fladd@b^0,c
 27866  003162  0EFF               	movlw	255
 27867  003164  204A               	addwfc	(??i2___fladd+1)^0,w,c
 27868  003166  6E42               	movwf	(i2___fladd@b+1)^0,c
 27869  003168  0EFF               	movlw	255
 27870  00316A  204B               	addwfc	(??i2___fladd+2)^0,w,c
 27871  00316C  6E43               	movwf	(i2___fladd@b+2)^0,c
 27872  00316E  0EFF               	movlw	255
 27873  003170  204C               	addwfc	(??i2___fladd+3)^0,w,c
 27874  003172  6E44               	movwf	(i2___fladd@b+3)^0,c
 27875  003174  0E80               	movlw	128
 27876  003176  1A4D               	xorwf	i2___fladd@signs^0,f,c
 27877  003178  6C50               	negf	i2___fladd@grs^0,c
 27878  00317A  5050               	movf	i2___fladd@grs^0,w,c
 27879  00317C  A4D8               	btfss	status,2,c
 27880  00317E  D00F               	goto	i2l1958
 27881  003180  0E01               	movlw	1
 27882  003182  2641               	addwf	i2___fladd@b^0,f,c
 27883  003184  0E00               	movlw	0
 27884  003186  2242               	addwfc	(i2___fladd@b+1)^0,f,c
 27885  003188  2243               	addwfc	(i2___fladd@b+2)^0,f,c
 27886  00318A  2244               	addwfc	(i2___fladd@b+3)^0,f,c
 27887  00318C  D008               	goto	i2l1958
 27888  00318E                     i2l9671:
 27889  00318E  5045               	movf	i2___fladd@a^0,w,c
 27890  003190  5E41               	subwf	i2___fladd@b^0,f,c
 27891  003192  5046               	movf	(i2___fladd@a+1)^0,w,c
 27892  003194  5A42               	subwfb	(i2___fladd@b+1)^0,f,c
 27893  003196  5047               	movf	(i2___fladd@a+2)^0,w,c
 27894  003198  5A43               	subwfb	(i2___fladd@b+2)^0,f,c
 27895  00319A  5048               	movf	(i2___fladd@a+3)^0,w,c
 27896  00319C  5A44               	subwfb	(i2___fladd@b+3)^0,f,c
 27897  00319E                     i2l1958:
 27898  00319E  5041               	movf	i2___fladd@b^0,w,c
 27899  0031A0  1042               	iorwf	(i2___fladd@b+1)^0,w,c
 27900  0031A2  1043               	iorwf	(i2___fladd@b+2)^0,w,c
 27901  0031A4  1044               	iorwf	(i2___fladd@b+3)^0,w,c
 27902  0031A6  A4D8               	btfss	status,2,c
 27903  0031A8  D01C               	goto	i2l9695
 27904  0031AA  5050               	movf	i2___fladd@grs^0,w,c
 27905  0031AC  A4D8               	btfss	status,2,c
 27906  0031AE  D019               	goto	i2l9695
 27907  0031B0  0E00               	movlw	0
 27908  0031B2  6E41               	movwf	?i2___fladd^0,c
 27909  0031B4  0E00               	movlw	0
 27910  0031B6  6E42               	movwf	(?i2___fladd+1)^0,c
 27911  0031B8  0E00               	movlw	0
 27912  0031BA  6E43               	movwf	(?i2___fladd+2)^0,c
 27913  0031BC  0E00               	movlw	0
 27914  0031BE  6E44               	movwf	(?i2___fladd+3)^0,c
 27915  0031C0  0012               	return	
 27916  0031C2                     i2l9679:
 27917  0031C2  90D8               	bcf	status,0,c
 27918  0031C4  3641               	rlcf	i2___fladd@b^0,f,c
 27919  0031C6  3642               	rlcf	(i2___fladd@b+1)^0,f,c
 27920  0031C8  3643               	rlcf	(i2___fladd@b+2)^0,f,c
 27921  0031CA  3644               	rlcf	(i2___fladd@b+3)^0,f,c
 27922  0031CC  BE50               	btfsc	i2___fladd@grs^0,7,c
 27923  0031CE  8041               	bsf	i2___fladd@b^0,0,c
 27924  0031D0  A050               	btfss	i2___fladd@grs^0,0,c
 27925  0031D2  D002               	goto	i2l9689
 27926  0031D4  80D8               	bsf	status,0,c
 27927  0031D6  D001               	goto	L39
 27928  0031D8                     i2l9689:
 27929  0031D8  90D8               	bcf	status,0,c
 27930  0031DA                     L39:
 27931  0031DA  3650               	rlcf	i2___fladd@grs^0,f,c
 27932  0031DC  504F               	movf	i2___fladd@bexp^0,w,c
 27933  0031DE  A4D8               	btfss	status,2,c
 27934  0031E0  064F               	decf	i2___fladd@bexp^0,f,c
 27935  0031E2                     i2l9695:
 27936  0031E2  AE43               	btfss	(i2___fladd@b+2)^0,7,c
 27937  0031E4  D7EE               	goto	i2l9679
 27938  0031E6                     i2u1056_40:
 27939  0031E6  0E00               	movlw	0
 27940  0031E8  6E4E               	movwf	i2___fladd@aexp^0,c
 27941  0031EA  AE50               	btfss	i2___fladd@grs^0,7,c
 27942  0031EC  D00B               	goto	i2l1967
 27943  0031EE  C050  F049         	movff	i2___fladd@grs,??i2___fladd
 27944  0031F2  0E7F               	movlw	127
 27945  0031F4  1649               	andwf	??i2___fladd^0,f,c
 27946  0031F6  B4D8               	btfsc	status,2,c
 27947  0031F8  D003               	goto	i2l1968
 27948  0031FA                     i2u1058_40:
 27949  0031FA  0E01               	movlw	1
 27950  0031FC  6E4E               	movwf	i2___fladd@aexp^0,c
 27951  0031FE  D002               	goto	i2l1967
 27952  003200                     i2l1968:
 27953  003200  B041               	btfsc	i2___fladd@b^0,0,c
 27954  003202  D7FB               	goto	i2u1058_40
 27955  003204                     i2l1967:
 27956  003204  504E               	movf	i2___fladd@aexp^0,w,c
 27957  003206  B4D8               	btfsc	status,2,c
 27958  003208  D020               	goto	i2l9715
 27959  00320A  0E01               	movlw	1
 27960  00320C  2641               	addwf	i2___fladd@b^0,f,c
 27961  00320E  0E00               	movlw	0
 27962  003210  2242               	addwfc	(i2___fladd@b+1)^0,f,c
 27963  003212  2243               	addwfc	(i2___fladd@b+2)^0,f,c
 27964  003214  2244               	addwfc	(i2___fladd@b+3)^0,f,c
 27965  003216  A044               	btfss	(i2___fladd@b+3)^0,0,c
 27966  003218  D018               	goto	i2l9715
 27967  00321A  C041  F049         	movff	i2___fladd@b,??i2___fladd
 27968  00321E  C042  F04A         	movff	i2___fladd@b+1,??i2___fladd+1
 27969  003222  C043  F04B         	movff	i2___fladd@b+2,??i2___fladd+2
 27970  003226  C044  F04C         	movff	i2___fladd@b+3,??i2___fladd+3
 27971  00322A  344C               	rlcf	(??i2___fladd+3)^0,w,c
 27972  00322C  324C               	rrcf	(??i2___fladd+3)^0,f,c
 27973  00322E  324B               	rrcf	(??i2___fladd+2)^0,f,c
 27974  003230  324A               	rrcf	(??i2___fladd+1)^0,f,c
 27975  003232  3249               	rrcf	??i2___fladd^0,f,c
 27976  003234  C049  F041         	movff	??i2___fladd,i2___fladd@b
 27977  003238  C04A  F042         	movff	??i2___fladd+1,i2___fladd@b+1
 27978  00323C  C04B  F043         	movff	??i2___fladd+2,i2___fladd@b+2
 27979  003240  C04C  F044         	movff	??i2___fladd+3,i2___fladd@b+3
 27980  003244  284F               	incf	i2___fladd@bexp^0,w,c
 27981  003246  A4D8               	btfss	status,2,c
 27982  003248  2A4F               	incf	i2___fladd@bexp^0,f,c
 27983  00324A                     i2l9715:
 27984  00324A  284F               	incf	i2___fladd@bexp^0,w,c
 27985  00324C  B4D8               	btfsc	status,2,c
 27986  00324E  D003               	goto	i2u1064_40
 27987  003250  504F               	movf	i2___fladd@bexp^0,w,c
 27988  003252  A4D8               	btfss	status,2,c
 27989  003254  D00D               	goto	i2l9723
 27990  003256                     i2u1064_40:
 27991  003256  0E00               	movlw	0
 27992  003258  6E41               	movwf	i2___fladd@b^0,c
 27993  00325A  0E00               	movlw	0
 27994  00325C  6E42               	movwf	(i2___fladd@b+1)^0,c
 27995  00325E  0E00               	movlw	0
 27996  003260  6E43               	movwf	(i2___fladd@b+2)^0,c
 27997  003262  0E00               	movlw	0
 27998  003264  6E44               	movwf	(i2___fladd@b+3)^0,c
 27999  003266  504F               	movf	i2___fladd@bexp^0,w,c
 28000  003268  A4D8               	btfss	status,2,c
 28001  00326A  D002               	goto	i2l9723
 28002  00326C  0E00               	movlw	0
 28003  00326E  6E4D               	movwf	i2___fladd@signs^0,c
 28004  003270                     i2l9723:
 28005  003270  A04F               	btfss	i2___fladd@bexp^0,0,c
 28006  003272  D002               	goto	i2l9727
 28007  003274  8E43               	bsf	(i2___fladd@b+2)^0,7,c
 28008  003276  D001               	goto	i2l9729
 28009  003278                     i2l9727:
 28010  003278  9E43               	bcf	(i2___fladd@b+2)^0,7,c
 28011  00327A                     i2l9729:
 28012  00327A  90D8               	bcf	status,0,c
 28013  00327C  304F               	rrcf	i2___fladd@bexp^0,w,c
 28014  00327E  6E44               	movwf	(i2___fladd@b+3)^0,c
 28015  003280  BE4D               	btfsc	i2___fladd@signs^0,7,c
 28016  003282  8E44               	bsf	(i2___fladd@b+3)^0,7,c
 28017  003284  C041  F041         	movff	i2___fladd@b,?i2___fladd
 28018  003288  C042  F042         	movff	i2___fladd@b+1,?i2___fladd+1
 28019  00328C  C043  F043         	movff	i2___fladd@b+2,?i2___fladd+2
 28020  003290  C044  F044         	movff	i2___fladd@b+3,?i2___fladd+3
 28021  003294  0012               	return		;funcret
 28022  003296                     __end_ofi2___fladd:
 28023                           	callstack 0
 28024                           
 28025 ;; *************** function i2___flmul *****************
 28026 ;; Defined at:
 28027 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 28028 ;; Parameters:    Size  Location     Type
 28029 ;;  b               4   39[COMRAM] unsigned char 
 28030 ;;  a               4   43[COMRAM] unsigned char 
 28031 ;; Auto vars:     Size  Location     Type
 28032 ;;  prod            4   58[COMRAM] struct .
 28033 ;;  grs             4   53[COMRAM] unsigned long 
 28034 ;;  temp            2   62[COMRAM] struct .
 28035 ;;  bexp            1   57[COMRAM] unsigned char 
 28036 ;;  aexp            1   52[COMRAM] unsigned char 
 28037 ;;  sign            1   51[COMRAM] unsigned char 
 28038 ;; Return value:  Size  Location     Type
 28039 ;;                  4   39[COMRAM] unsigned char 
 28040 ;; Registers used:
 28041 ;;		wreg, status,2, status,0, prodl, prodh
 28042 ;; Tracked objects:
 28043 ;;		On entry : 0/0
 28044 ;;		On exit  : 0/0
 28045 ;;		Unchanged: 0/0
 28046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28047 ;;      Params:         8       0       0       0       0       0       0       0       0
 28048 ;;      Locals:        13       0       0       0       0       0       0       0       0
 28049 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28050 ;;      Totals:        25       0       0       0       0       0       0       0       0
 28051 ;;Total ram usage:       25 bytes
 28052 ;; Hardware stack levels used: 1
 28053 ;; This function calls:
 28054 ;;		Nothing
 28055 ;; This function is called by:
 28056 ;;		_G01_TMR2_ISR
 28057 ;;		_Encoder_ISR
 28058 ;; This function uses a non-reentrant model
 28059 ;;
 28060                           
 28061                           	psect	text153
 28062  002950                     __ptext153:
 28063                           	callstack 0
 28064  002950                     i2___flmul:
 28065                           	callstack 18
 28066                           
 28067                           ;incstack = 0
 28068  002950  502B               	movf	(i2___flmul@b+3)^0,w,c
 28069  002952  0B80               	andlw	128
 28070  002954  6E34               	movwf	i2___flmul@sign^0,c
 28071  002956  502B               	movf	(i2___flmul@b+3)^0,w,c
 28072  002958  242B               	addwf	(i2___flmul@b+3)^0,w,c
 28073  00295A  6E3A               	movwf	i2___flmul@bexp^0,c
 28074  00295C  BE2A               	btfsc	(i2___flmul@b+2)^0,7,c
 28075  00295E  803A               	bsf	i2___flmul@bexp^0,0,c
 28076  002960  503A               	movf	i2___flmul@bexp^0,w,c
 28077  002962  B4D8               	btfsc	status,2,c
 28078  002964  D00D               	goto	i2l10413
 28079  002966  283A               	incf	i2___flmul@bexp^0,w,c
 28080  002968  A4D8               	btfss	status,2,c
 28081  00296A  D008               	goto	i2l10411
 28082  00296C  0E00               	movlw	0
 28083  00296E  6E28               	movwf	i2___flmul@b^0,c
 28084  002970  0E00               	movlw	0
 28085  002972  6E29               	movwf	(i2___flmul@b+1)^0,c
 28086  002974  0E00               	movlw	0
 28087  002976  6E2A               	movwf	(i2___flmul@b+2)^0,c
 28088  002978  0E00               	movlw	0
 28089  00297A  6E2B               	movwf	(i2___flmul@b+3)^0,c
 28090  00297C                     i2l10411:
 28091  00297C  8E2A               	bsf	(i2___flmul@b+2)^0,7,c
 28092  00297E  D008               	goto	i2l10415
 28093  002980                     i2l10413:
 28094  002980  0E00               	movlw	0
 28095  002982  6E28               	movwf	i2___flmul@b^0,c
 28096  002984  0E00               	movlw	0
 28097  002986  6E29               	movwf	(i2___flmul@b+1)^0,c
 28098  002988  0E00               	movlw	0
 28099  00298A  6E2A               	movwf	(i2___flmul@b+2)^0,c
 28100  00298C  0E00               	movlw	0
 28101  00298E  6E2B               	movwf	(i2___flmul@b+3)^0,c
 28102  002990                     i2l10415:
 28103  002990  502F               	movf	(i2___flmul@a+3)^0,w,c
 28104  002992  0B80               	andlw	128
 28105  002994  1A34               	xorwf	i2___flmul@sign^0,f,c
 28106  002996  502F               	movf	(i2___flmul@a+3)^0,w,c
 28107  002998  242F               	addwf	(i2___flmul@a+3)^0,w,c
 28108  00299A  6E35               	movwf	i2___flmul@aexp^0,c
 28109  00299C  BE2E               	btfsc	(i2___flmul@a+2)^0,7,c
 28110  00299E  8035               	bsf	i2___flmul@aexp^0,0,c
 28111  0029A0  5035               	movf	i2___flmul@aexp^0,w,c
 28112  0029A2  B4D8               	btfsc	status,2,c
 28113  0029A4  D00D               	goto	i2l10431
 28114  0029A6  2835               	incf	i2___flmul@aexp^0,w,c
 28115  0029A8  A4D8               	btfss	status,2,c
 28116  0029AA  D008               	goto	i2l10429
 28117  0029AC  0E00               	movlw	0
 28118  0029AE  6E2C               	movwf	i2___flmul@a^0,c
 28119  0029B0  0E00               	movlw	0
 28120  0029B2  6E2D               	movwf	(i2___flmul@a+1)^0,c
 28121  0029B4  0E00               	movlw	0
 28122  0029B6  6E2E               	movwf	(i2___flmul@a+2)^0,c
 28123  0029B8  0E00               	movlw	0
 28124  0029BA  6E2F               	movwf	(i2___flmul@a+3)^0,c
 28125  0029BC                     i2l10429:
 28126  0029BC  8E2E               	bsf	(i2___flmul@a+2)^0,7,c
 28127  0029BE  D008               	goto	i2l2027
 28128  0029C0                     i2l10431:
 28129  0029C0  0E00               	movlw	0
 28130  0029C2  6E2C               	movwf	i2___flmul@a^0,c
 28131  0029C4  0E00               	movlw	0
 28132  0029C6  6E2D               	movwf	(i2___flmul@a+1)^0,c
 28133  0029C8  0E00               	movlw	0
 28134  0029CA  6E2E               	movwf	(i2___flmul@a+2)^0,c
 28135  0029CC  0E00               	movlw	0
 28136  0029CE  6E2F               	movwf	(i2___flmul@a+3)^0,c
 28137  0029D0                     i2l2027:
 28138  0029D0  5035               	movf	i2___flmul@aexp^0,w,c
 28139  0029D2  B4D8               	btfsc	status,2,c
 28140  0029D4  D003               	goto	i2u1163_40
 28141  0029D6  503A               	movf	i2___flmul@bexp^0,w,c
 28142  0029D8  A4D8               	btfss	status,2,c
 28143  0029DA  D009               	goto	i2l10439
 28144  0029DC                     i2u1163_40:
 28145  0029DC  0E00               	movlw	0
 28146  0029DE  6E28               	movwf	?i2___flmul^0,c
 28147  0029E0  0E00               	movlw	0
 28148  0029E2  6E29               	movwf	(?i2___flmul+1)^0,c
 28149  0029E4  0E00               	movlw	0
 28150  0029E6  6E2A               	movwf	(?i2___flmul+2)^0,c
 28151  0029E8  0E00               	movlw	0
 28152  0029EA  6E2B               	movwf	(?i2___flmul+3)^0,c
 28153  0029EC  0012               	return	
 28154  0029EE                     i2l10439:
 28155  0029EE  502E               	movf	(i2___flmul@a+2)^0,w,c
 28156  0029F0  0228               	mulwf	i2___flmul@b^0,c
 28157  0029F2  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28158  0029F6  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28159  0029FA  503F               	movf	i2___flmul@temp^0,w,c
 28160  0029FC  6E36               	movwf	i2___flmul@grs^0,c
 28161  0029FE  6A37               	clrf	(i2___flmul@grs+1)^0,c
 28162  002A00  6A38               	clrf	(i2___flmul@grs+2)^0,c
 28163  002A02  6A39               	clrf	(i2___flmul@grs+3)^0,c
 28164  002A04  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28165  002A06  6E3B               	movwf	i2___flmul@prod^0,c
 28166  002A08  6A3C               	clrf	(i2___flmul@prod+1)^0,c
 28167  002A0A  6A3D               	clrf	(i2___flmul@prod+2)^0,c
 28168  002A0C  6A3E               	clrf	(i2___flmul@prod+3)^0,c
 28169  002A0E  502D               	movf	(i2___flmul@a+1)^0,w,c
 28170  002A10  0229               	mulwf	(i2___flmul@b+1)^0,c
 28171  002A12  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28172  002A16  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28173  002A1A  503F               	movf	i2___flmul@temp^0,w,c
 28174  002A1C  2636               	addwf	i2___flmul@grs^0,f,c
 28175  002A1E  0E00               	movlw	0
 28176  002A20  2237               	addwfc	(i2___flmul@grs+1)^0,f,c
 28177  002A22  2238               	addwfc	(i2___flmul@grs+2)^0,f,c
 28178  002A24  2239               	addwfc	(i2___flmul@grs+3)^0,f,c
 28179  002A26  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28180  002A28  263B               	addwf	i2___flmul@prod^0,f,c
 28181  002A2A  0E00               	movlw	0
 28182  002A2C  223C               	addwfc	(i2___flmul@prod+1)^0,f,c
 28183  002A2E  223D               	addwfc	(i2___flmul@prod+2)^0,f,c
 28184  002A30  223E               	addwfc	(i2___flmul@prod+3)^0,f,c
 28185  002A32  502C               	movf	i2___flmul@a^0,w,c
 28186  002A34  022A               	mulwf	(i2___flmul@b+2)^0,c
 28187  002A36  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28188  002A3A  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28189  002A3E  503F               	movf	i2___flmul@temp^0,w,c
 28190  002A40  2636               	addwf	i2___flmul@grs^0,f,c
 28191  002A42  0E00               	movlw	0
 28192  002A44  2237               	addwfc	(i2___flmul@grs+1)^0,f,c
 28193  002A46  2238               	addwfc	(i2___flmul@grs+2)^0,f,c
 28194  002A48  2239               	addwfc	(i2___flmul@grs+3)^0,f,c
 28195  002A4A  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28196  002A4C  263B               	addwf	i2___flmul@prod^0,f,c
 28197  002A4E  0E00               	movlw	0
 28198  002A50  223C               	addwfc	(i2___flmul@prod+1)^0,f,c
 28199  002A52  223D               	addwfc	(i2___flmul@prod+2)^0,f,c
 28200  002A54  223E               	addwfc	(i2___flmul@prod+3)^0,f,c
 28201  002A56  C038  F039         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 28202  002A5A  C037  F038         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 28203  002A5E  C036  F037         	movff	i2___flmul@grs,i2___flmul@grs+1
 28204  002A62  6A36               	clrf	i2___flmul@grs^0,c
 28205  002A64  502C               	movf	i2___flmul@a^0,w,c
 28206  002A66  0229               	mulwf	(i2___flmul@b+1)^0,c
 28207  002A68  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28208  002A6C  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28209  002A70  503F               	movf	i2___flmul@temp^0,w,c
 28210  002A72  2636               	addwf	i2___flmul@grs^0,f,c
 28211  002A74  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28212  002A76  2237               	addwfc	(i2___flmul@grs+1)^0,f,c
 28213  002A78  0E00               	movlw	0
 28214  002A7A  2238               	addwfc	(i2___flmul@grs+2)^0,f,c
 28215  002A7C  0E00               	movlw	0
 28216  002A7E  2239               	addwfc	(i2___flmul@grs+3)^0,f,c
 28217  002A80  502D               	movf	(i2___flmul@a+1)^0,w,c
 28218  002A82  0228               	mulwf	i2___flmul@b^0,c
 28219  002A84  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28220  002A88  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28221  002A8C  503F               	movf	i2___flmul@temp^0,w,c
 28222  002A8E  2636               	addwf	i2___flmul@grs^0,f,c
 28223  002A90  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28224  002A92  2237               	addwfc	(i2___flmul@grs+1)^0,f,c
 28225  002A94  0E00               	movlw	0
 28226  002A96  2238               	addwfc	(i2___flmul@grs+2)^0,f,c
 28227  002A98  0E00               	movlw	0
 28228  002A9A  2239               	addwfc	(i2___flmul@grs+3)^0,f,c
 28229  002A9C  C038  F039         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 28230  002AA0  C037  F038         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 28231  002AA4  C036  F037         	movff	i2___flmul@grs,i2___flmul@grs+1
 28232  002AA8  6A36               	clrf	i2___flmul@grs^0,c
 28233  002AAA  502C               	movf	i2___flmul@a^0,w,c
 28234  002AAC  0228               	mulwf	i2___flmul@b^0,c
 28235  002AAE  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28236  002AB2  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28237  002AB6  503F               	movf	i2___flmul@temp^0,w,c
 28238  002AB8  2636               	addwf	i2___flmul@grs^0,f,c
 28239  002ABA  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28240  002ABC  2237               	addwfc	(i2___flmul@grs+1)^0,f,c
 28241  002ABE  0E00               	movlw	0
 28242  002AC0  2238               	addwfc	(i2___flmul@grs+2)^0,f,c
 28243  002AC2  0E00               	movlw	0
 28244  002AC4  2239               	addwfc	(i2___flmul@grs+3)^0,f,c
 28245  002AC6  502E               	movf	(i2___flmul@a+2)^0,w,c
 28246  002AC8  0229               	mulwf	(i2___flmul@b+1)^0,c
 28247  002ACA  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28248  002ACE  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28249  002AD2  503F               	movf	i2___flmul@temp^0,w,c
 28250  002AD4  263B               	addwf	i2___flmul@prod^0,f,c
 28251  002AD6  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28252  002AD8  223C               	addwfc	(i2___flmul@prod+1)^0,f,c
 28253  002ADA  0E00               	movlw	0
 28254  002ADC  223D               	addwfc	(i2___flmul@prod+2)^0,f,c
 28255  002ADE  0E00               	movlw	0
 28256  002AE0  223E               	addwfc	(i2___flmul@prod+3)^0,f,c
 28257  002AE2  502D               	movf	(i2___flmul@a+1)^0,w,c
 28258  002AE4  022A               	mulwf	(i2___flmul@b+2)^0,c
 28259  002AE6  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28260  002AEA  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28261  002AEE  503F               	movf	i2___flmul@temp^0,w,c
 28262  002AF0  263B               	addwf	i2___flmul@prod^0,f,c
 28263  002AF2  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28264  002AF4  223C               	addwfc	(i2___flmul@prod+1)^0,f,c
 28265  002AF6  0E00               	movlw	0
 28266  002AF8  223D               	addwfc	(i2___flmul@prod+2)^0,f,c
 28267  002AFA  0E00               	movlw	0
 28268  002AFC  223E               	addwfc	(i2___flmul@prod+3)^0,f,c
 28269  002AFE  502E               	movf	(i2___flmul@a+2)^0,w,c
 28270  002B00  022A               	mulwf	(i2___flmul@b+2)^0,c
 28271  002B02  CFF3 F03F          	movff	prodl,i2___flmul@temp
 28272  002B06  CFF4 F040          	movff	prodh,i2___flmul@temp+1
 28273  002B0A  503F               	movf	i2___flmul@temp^0,w,c
 28274  002B0C  6E30               	movwf	??i2___flmul^0,c
 28275  002B0E  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28276  002B10  6E31               	movwf	(??i2___flmul+1)^0,c
 28277  002B12  6A32               	clrf	(??i2___flmul+2)^0,c
 28278  002B14  6A33               	clrf	(??i2___flmul+3)^0,c
 28279  002B16  C032  F033         	movff	??i2___flmul+2,??i2___flmul+3
 28280  002B1A  C031  F032         	movff	??i2___flmul+1,??i2___flmul+2
 28281  002B1E  C030  F031         	movff	??i2___flmul,??i2___flmul+1
 28282  002B22  6A30               	clrf	??i2___flmul^0,c
 28283  002B24  5030               	movf	??i2___flmul^0,w,c
 28284  002B26  263B               	addwf	i2___flmul@prod^0,f,c
 28285  002B28  5031               	movf	(??i2___flmul+1)^0,w,c
 28286  002B2A  223C               	addwfc	(i2___flmul@prod+1)^0,f,c
 28287  002B2C  5032               	movf	(??i2___flmul+2)^0,w,c
 28288  002B2E  223D               	addwfc	(i2___flmul@prod+2)^0,f,c
 28289  002B30  5033               	movf	(??i2___flmul+3)^0,w,c
 28290  002B32  223E               	addwfc	(i2___flmul@prod+3)^0,f,c
 28291  002B34  5039               	movf	(i2___flmul@grs+3)^0,w,c
 28292  002B36  263B               	addwf	i2___flmul@prod^0,f,c
 28293  002B38  0E00               	movlw	0
 28294  002B3A  223C               	addwfc	(i2___flmul@prod+1)^0,f,c
 28295  002B3C  223D               	addwfc	(i2___flmul@prod+2)^0,f,c
 28296  002B3E  223E               	addwfc	(i2___flmul@prod+3)^0,f,c
 28297  002B40  C038  F039         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 28298  002B44  C037  F038         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 28299  002B48  C036  F037         	movff	i2___flmul@grs,i2___flmul@grs+1
 28300  002B4C  6A36               	clrf	i2___flmul@grs^0,c
 28301  002B4E  5035               	movf	i2___flmul@aexp^0,w,c
 28302  002B50  C03A  F030         	movff	i2___flmul@bexp,??i2___flmul
 28303  002B54  6A31               	clrf	(??i2___flmul+1)^0,c
 28304  002B56  2630               	addwf	??i2___flmul^0,f,c
 28305  002B58  0E00               	movlw	0
 28306  002B5A  2231               	addwfc	(??i2___flmul+1)^0,f,c
 28307  002B5C  0E82               	movlw	130
 28308  002B5E  2430               	addwf	??i2___flmul^0,w,c
 28309  002B60  6E3F               	movwf	i2___flmul@temp^0,c
 28310  002B62  0EFF               	movlw	255
 28311  002B64  2031               	addwfc	(??i2___flmul+1)^0,w,c
 28312  002B66  6E40               	movwf	(i2___flmul@temp+1)^0,c
 28313  002B68  D00F               	goto	i2l10487
 28314  002B6A                     i2l10481:
 28315  002B6A  90D8               	bcf	status,0,c
 28316  002B6C  363B               	rlcf	i2___flmul@prod^0,f,c
 28317  002B6E  363C               	rlcf	(i2___flmul@prod+1)^0,f,c
 28318  002B70  363D               	rlcf	(i2___flmul@prod+2)^0,f,c
 28319  002B72  363E               	rlcf	(i2___flmul@prod+3)^0,f,c
 28320  002B74  BE39               	btfsc	(i2___flmul@grs+3)^0,7,c
 28321  002B76  803B               	bsf	i2___flmul@prod^0,0,c
 28322  002B78  90D8               	bcf	status,0,c
 28323  002B7A  3636               	rlcf	i2___flmul@grs^0,f,c
 28324  002B7C  3637               	rlcf	(i2___flmul@grs+1)^0,f,c
 28325  002B7E  3638               	rlcf	(i2___flmul@grs+2)^0,f,c
 28326  002B80  3639               	rlcf	(i2___flmul@grs+3)^0,f,c
 28327  002B82  063F               	decf	i2___flmul@temp^0,f,c
 28328  002B84  A0D8               	btfss	status,0,c
 28329  002B86  0640               	decf	(i2___flmul@temp+1)^0,f,c
 28330  002B88                     i2l10487:
 28331  002B88  AE3D               	btfss	(i2___flmul@prod+2)^0,7,c
 28332  002B8A  D7EF               	goto	i2l10481
 28333  002B8C  0E00               	movlw	0
 28334  002B8E  6E35               	movwf	i2___flmul@aexp^0,c
 28335  002B90  AE39               	btfss	(i2___flmul@grs+3)^0,7,c
 28336  002B92  D017               	goto	i2l2036
 28337  002B94  0EFF               	movlw	255
 28338  002B96  1436               	andwf	i2___flmul@grs^0,w,c
 28339  002B98  6E30               	movwf	??i2___flmul^0,c
 28340  002B9A  0EFF               	movlw	255
 28341  002B9C  1437               	andwf	(i2___flmul@grs+1)^0,w,c
 28342  002B9E  6E31               	movwf	(??i2___flmul+1)^0,c
 28343  002BA0  0EFF               	movlw	255
 28344  002BA2  1438               	andwf	(i2___flmul@grs+2)^0,w,c
 28345  002BA4  6E32               	movwf	(??i2___flmul+2)^0,c
 28346  002BA6  0E7F               	movlw	127
 28347  002BA8  1439               	andwf	(i2___flmul@grs+3)^0,w,c
 28348  002BAA  6E33               	movwf	(??i2___flmul+3)^0,c
 28349  002BAC  5030               	movf	??i2___flmul^0,w,c
 28350  002BAE  1031               	iorwf	(??i2___flmul+1)^0,w,c
 28351  002BB0  1032               	iorwf	(??i2___flmul+2)^0,w,c
 28352  002BB2  1033               	iorwf	(??i2___flmul+3)^0,w,c
 28353  002BB4  B4D8               	btfsc	status,2,c
 28354  002BB6  D003               	goto	i2l2037
 28355  002BB8                     i2u1167_40:
 28356  002BB8  0E01               	movlw	1
 28357  002BBA  6E35               	movwf	i2___flmul@aexp^0,c
 28358  002BBC  D002               	goto	i2l2036
 28359  002BBE                     i2l2037:
 28360  002BBE  B03B               	btfsc	i2___flmul@prod^0,0,c
 28361  002BC0  D7FB               	goto	i2u1167_40
 28362  002BC2                     i2l2036:
 28363  002BC2  5035               	movf	i2___flmul@aexp^0,w,c
 28364  002BC4  B4D8               	btfsc	status,2,c
 28365  002BC6  D01F               	goto	i2l10507
 28366  002BC8  0E01               	movlw	1
 28367  002BCA  263B               	addwf	i2___flmul@prod^0,f,c
 28368  002BCC  0E00               	movlw	0
 28369  002BCE  223C               	addwfc	(i2___flmul@prod+1)^0,f,c
 28370  002BD0  223D               	addwfc	(i2___flmul@prod+2)^0,f,c
 28371  002BD2  223E               	addwfc	(i2___flmul@prod+3)^0,f,c
 28372  002BD4  A03E               	btfss	(i2___flmul@prod+3)^0,0,c
 28373  002BD6  D017               	goto	i2l10507
 28374  002BD8  C03B  F030         	movff	i2___flmul@prod,??i2___flmul
 28375  002BDC  C03C  F031         	movff	i2___flmul@prod+1,??i2___flmul+1
 28376  002BE0  C03D  F032         	movff	i2___flmul@prod+2,??i2___flmul+2
 28377  002BE4  C03E  F033         	movff	i2___flmul@prod+3,??i2___flmul+3
 28378  002BE8  3433               	rlcf	(??i2___flmul+3)^0,w,c
 28379  002BEA  3233               	rrcf	(??i2___flmul+3)^0,f,c
 28380  002BEC  3232               	rrcf	(??i2___flmul+2)^0,f,c
 28381  002BEE  3231               	rrcf	(??i2___flmul+1)^0,f,c
 28382  002BF0  3230               	rrcf	??i2___flmul^0,f,c
 28383  002BF2  C030  F03B         	movff	??i2___flmul,i2___flmul@prod
 28384  002BF6  C031  F03C         	movff	??i2___flmul+1,i2___flmul@prod+1
 28385  002BFA  C032  F03D         	movff	??i2___flmul+2,i2___flmul@prod+2
 28386  002BFE  C033  F03E         	movff	??i2___flmul+3,i2___flmul@prod+3
 28387  002C02  4A3F               	infsnz	i2___flmul@temp^0,f,c
 28388  002C04  2A40               	incf	(i2___flmul@temp+1)^0,f,c
 28389  002C06                     i2l10507:
 28390  002C06  BE40               	btfsc	(i2___flmul@temp+1)^0,7,c
 28391  002C08  D00D               	goto	i2l10511
 28392  002C0A  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28393  002C0C  E103               	bnz	i2u1171_40
 28394  002C0E  283F               	incf	i2___flmul@temp^0,w,c
 28395  002C10  A0D8               	btfss	status,0,c
 28396  002C12  D008               	goto	i2l10511
 28397  002C14                     i2u1171_40:
 28398  002C14  0E00               	movlw	0
 28399  002C16  6E3B               	movwf	i2___flmul@prod^0,c
 28400  002C18  0E00               	movlw	0
 28401  002C1A  6E3C               	movwf	(i2___flmul@prod+1)^0,c
 28402  002C1C  0E80               	movlw	128
 28403  002C1E  6E3D               	movwf	(i2___flmul@prod+2)^0,c
 28404  002C20  0E7F               	movlw	127
 28405  002C22  D020               	goto	L40
 28406  002C24                     i2l10511:
 28407  002C24  BE40               	btfsc	(i2___flmul@temp+1)^0,7,c
 28408  002C26  D005               	goto	i2u1172_40
 28409  002C28  5040               	movf	(i2___flmul@temp+1)^0,w,c
 28410  002C2A  E10E               	bnz	i2l2044
 28411  002C2C  043F               	decf	i2___flmul@temp^0,w,c
 28412  002C2E  B0D8               	btfsc	status,0,c
 28413  002C30  D00B               	goto	i2l2044
 28414  002C32                     i2u1172_40:
 28415  002C32  0E00               	movlw	0
 28416  002C34  6E3B               	movwf	i2___flmul@prod^0,c
 28417  002C36  0E00               	movlw	0
 28418  002C38  6E3C               	movwf	(i2___flmul@prod+1)^0,c
 28419  002C3A  0E00               	movlw	0
 28420  002C3C  6E3D               	movwf	(i2___flmul@prod+2)^0,c
 28421  002C3E  0E00               	movlw	0
 28422  002C40  6E3E               	movwf	(i2___flmul@prod+3)^0,c
 28423  002C42  0E00               	movlw	0
 28424  002C44  6E34               	movwf	i2___flmul@sign^0,c
 28425  002C46  D00F               	goto	i2l10523
 28426  002C48                     i2l2044:
 28427  002C48  C03F  F03A         	movff	i2___flmul@temp,i2___flmul@bexp
 28428  002C4C  0EFF               	movlw	255
 28429  002C4E  163B               	andwf	i2___flmul@prod^0,f,c
 28430  002C50  0EFF               	movlw	255
 28431  002C52  163C               	andwf	(i2___flmul@prod+1)^0,f,c
 28432  002C54  0E7F               	movlw	127
 28433  002C56  163D               	andwf	(i2___flmul@prod+2)^0,f,c
 28434  002C58  0E00               	movlw	0
 28435  002C5A  163E               	andwf	(i2___flmul@prod+3)^0,f,c
 28436  002C5C  B03A               	btfsc	i2___flmul@bexp^0,0,c
 28437  002C5E  8E3D               	bsf	(i2___flmul@prod+2)^0,7,c
 28438  002C60  90D8               	bcf	status,0,c
 28439  002C62  303A               	rrcf	i2___flmul@bexp^0,w,c
 28440  002C64                     L40:
 28441  002C64  6E3E               	movwf	(i2___flmul@prod+3)^0,c
 28442  002C66                     i2l10523:
 28443  002C66  5034               	movf	i2___flmul@sign^0,w,c
 28444  002C68  123E               	iorwf	(i2___flmul@prod+3)^0,f,c
 28445  002C6A  C03B  F028         	movff	i2___flmul@prod,?i2___flmul
 28446  002C6E  C03C  F029         	movff	i2___flmul@prod+1,?i2___flmul+1
 28447  002C72  C03D  F02A         	movff	i2___flmul@prod+2,?i2___flmul+2
 28448  002C76  C03E  F02B         	movff	i2___flmul@prod+3,?i2___flmul+3
 28449  002C7A  0012               	return		;funcret
 28450  002C7C                     __end_ofi2___flmul:
 28451                           	callstack 0
 28452                           
 28453 ;; *************** function i2___flge *****************
 28454 ;; Defined at:
 28455 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 28456 ;; Parameters:    Size  Location     Type
 28457 ;;  ff1             4    0[COMRAM] unsigned char 
 28458 ;;  ff2             4    4[COMRAM] unsigned char 
 28459 ;; Auto vars:     Size  Location     Type
 28460 ;;		None
 28461 ;; Return value:  Size  Location     Type
 28462 ;;		None               void
 28463 ;; Registers used:
 28464 ;;		wreg, status,2, status,0
 28465 ;; Tracked objects:
 28466 ;;		On entry : 0/0
 28467 ;;		On exit  : 0/0
 28468 ;;		Unchanged: 0/0
 28469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28470 ;;      Params:         8       0       0       0       0       0       0       0       0
 28471 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28472 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28473 ;;      Totals:        12       0       0       0       0       0       0       0       0
 28474 ;;Total ram usage:       12 bytes
 28475 ;; Hardware stack levels used: 1
 28476 ;; This function calls:
 28477 ;;		Nothing
 28478 ;; This function is called by:
 28479 ;;		_Encoder_ISR
 28480 ;; This function uses a non-reentrant model
 28481 ;;
 28482                           
 28483                           	psect	text154
 28484  00676C                     __ptext154:
 28485                           	callstack 0
 28486  00676C                     i2___flge:
 28487                           	callstack 17
 28488                           
 28489                           ;incstack = 0
 28490  00676C  0E00               	movlw	0
 28491  00676E  1401               	andwf	i2___flge@ff1^0,w,c
 28492  006770  6E09               	movwf	??i2___flge^0,c
 28493  006772  0E00               	movlw	0
 28494  006774  1402               	andwf	(i2___flge@ff1+1)^0,w,c
 28495  006776  6E0A               	movwf	(??i2___flge+1)^0,c
 28496  006778  0E80               	movlw	128
 28497  00677A  1403               	andwf	(i2___flge@ff1+2)^0,w,c
 28498  00677C  6E0B               	movwf	(??i2___flge+2)^0,c
 28499  00677E  0E7F               	movlw	127
 28500  006780  1404               	andwf	(i2___flge@ff1+3)^0,w,c
 28501  006782  6E0C               	movwf	(??i2___flge+3)^0,c
 28502  006784  5009               	movf	??i2___flge^0,w,c
 28503  006786  100A               	iorwf	(??i2___flge+1)^0,w,c
 28504  006788  100B               	iorwf	(??i2___flge+2)^0,w,c
 28505  00678A  100C               	iorwf	(??i2___flge+3)^0,w,c
 28506  00678C  A4D8               	btfss	status,2,c
 28507  00678E  D008               	goto	i2l10237
 28508  006790  0E00               	movlw	0
 28509  006792  6E01               	movwf	i2___flge@ff1^0,c
 28510  006794  0E00               	movlw	0
 28511  006796  6E02               	movwf	(i2___flge@ff1+1)^0,c
 28512  006798  0E00               	movlw	0
 28513  00679A  6E03               	movwf	(i2___flge@ff1+2)^0,c
 28514  00679C  0E00               	movlw	0
 28515  00679E  6E04               	movwf	(i2___flge@ff1+3)^0,c
 28516  0067A0                     i2l10237:
 28517  0067A0  0E00               	movlw	0
 28518  0067A2  1405               	andwf	i2___flge@ff2^0,w,c
 28519  0067A4  6E09               	movwf	??i2___flge^0,c
 28520  0067A6  0E00               	movlw	0
 28521  0067A8  1406               	andwf	(i2___flge@ff2+1)^0,w,c
 28522  0067AA  6E0A               	movwf	(??i2___flge+1)^0,c
 28523  0067AC  0E80               	movlw	128
 28524  0067AE  1407               	andwf	(i2___flge@ff2+2)^0,w,c
 28525  0067B0  6E0B               	movwf	(??i2___flge+2)^0,c
 28526  0067B2  0E7F               	movlw	127
 28527  0067B4  1408               	andwf	(i2___flge@ff2+3)^0,w,c
 28528  0067B6  6E0C               	movwf	(??i2___flge+3)^0,c
 28529  0067B8  5009               	movf	??i2___flge^0,w,c
 28530  0067BA  100A               	iorwf	(??i2___flge+1)^0,w,c
 28531  0067BC  100B               	iorwf	(??i2___flge+2)^0,w,c
 28532  0067BE  100C               	iorwf	(??i2___flge+3)^0,w,c
 28533  0067C0  A4D8               	btfss	status,2,c
 28534  0067C2  D008               	goto	i2l10241
 28535  0067C4  0E00               	movlw	0
 28536  0067C6  6E05               	movwf	i2___flge@ff2^0,c
 28537  0067C8  0E00               	movlw	0
 28538  0067CA  6E06               	movwf	(i2___flge@ff2+1)^0,c
 28539  0067CC  0E00               	movlw	0
 28540  0067CE  6E07               	movwf	(i2___flge@ff2+2)^0,c
 28541  0067D0  0E00               	movlw	0
 28542  0067D2  6E08               	movwf	(i2___flge@ff2+3)^0,c
 28543  0067D4                     i2l10241:
 28544  0067D4  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
 28545  0067D6  D009               	goto	i2l10245
 28546  0067D8  6C01               	negf	i2___flge@ff1^0,c
 28547  0067DA  1E02               	comf	(i2___flge@ff1+1)^0,f,c
 28548  0067DC  B0D8               	btfsc	status,0,c
 28549  0067DE  2A02               	incf	(i2___flge@ff1+1)^0,f,c
 28550  0067E0  1E03               	comf	(i2___flge@ff1+2)^0,f,c
 28551  0067E2  B0D8               	btfsc	status,0,c
 28552  0067E4  2A03               	incf	(i2___flge@ff1+2)^0,f,c
 28553  0067E6  0E80               	movlw	128
 28554  0067E8  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
 28555  0067EA                     i2l10245:
 28556  0067EA  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
 28557  0067EC  D009               	goto	i2l1678
 28558  0067EE  6C05               	negf	i2___flge@ff2^0,c
 28559  0067F0  1E06               	comf	(i2___flge@ff2+1)^0,f,c
 28560  0067F2  B0D8               	btfsc	status,0,c
 28561  0067F4  2A06               	incf	(i2___flge@ff2+1)^0,f,c
 28562  0067F6  1E07               	comf	(i2___flge@ff2+2)^0,f,c
 28563  0067F8  B0D8               	btfsc	status,0,c
 28564  0067FA  2A07               	incf	(i2___flge@ff2+2)^0,f,c
 28565  0067FC  0E80               	movlw	128
 28566  0067FE  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
 28567  006800                     i2l1678:
 28568  006800  0E00               	movlw	0
 28569  006802  1A01               	xorwf	i2___flge@ff1^0,f,c
 28570  006804  0E00               	movlw	0
 28571  006806  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
 28572  006808  0E00               	movlw	0
 28573  00680A  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
 28574  00680C  0E80               	movlw	128
 28575  00680E  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
 28576  006810  0E00               	movlw	0
 28577  006812  1A05               	xorwf	i2___flge@ff2^0,f,c
 28578  006814  0E00               	movlw	0
 28579  006816  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
 28580  006818  0E00               	movlw	0
 28581  00681A  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
 28582  00681C  0E80               	movlw	128
 28583  00681E  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
 28584  006820  5005               	movf	i2___flge@ff2^0,w,c
 28585  006822  5C01               	subwf	i2___flge@ff1^0,w,c
 28586  006824  5006               	movf	(i2___flge@ff2+1)^0,w,c
 28587  006826  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
 28588  006828  5007               	movf	(i2___flge@ff2+2)^0,w,c
 28589  00682A  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
 28590  00682C  5008               	movf	(i2___flge@ff2+3)^0,w,c
 28591  00682E  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
 28592  006830  B0D8               	btfsc	status,0,c
 28593  006832  D002               	goto	i2l10251
 28594  006834  90D8               	bcf	status,0,c
 28595  006836  0012               	return	
 28596  006838                     i2l10251:
 28597  006838  80D8               	bsf	status,0,c
 28598  00683A  0012               	return		;funcret
 28599  00683C                     __end_ofi2___flge:
 28600                           	callstack 0
 28601                           
 28602 ;; *************** function i2___fldiv *****************
 28603 ;; Defined at:
 28604 ;;		line 11 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 28605 ;; Parameters:    Size  Location     Type
 28606 ;;  b               4   14[COMRAM] unsigned char 
 28607 ;;  a               4   18[COMRAM] unsigned char 
 28608 ;; Auto vars:     Size  Location     Type
 28609 ;;  grs             4   33[COMRAM] unsigned long 
 28610 ;;  rem             4   26[COMRAM] unsigned long 
 28611 ;;  new_exp         2   31[COMRAM] short 
 28612 ;;  aexp            1   38[COMRAM] unsigned char 
 28613 ;;  bexp            1   37[COMRAM] unsigned char 
 28614 ;;  sign            1   30[COMRAM] unsigned char 
 28615 ;; Return value:  Size  Location     Type
 28616 ;;                  4   14[COMRAM] unsigned char 
 28617 ;; Registers used:
 28618 ;;		wreg, status,2, status,0
 28619 ;; Tracked objects:
 28620 ;;		On entry : 0/0
 28621 ;;		On exit  : 0/0
 28622 ;;		Unchanged: 0/0
 28623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28624 ;;      Params:         8       0       0       0       0       0       0       0       0
 28625 ;;      Locals:        13       0       0       0       0       0       0       0       0
 28626 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28627 ;;      Totals:        25       0       0       0       0       0       0       0       0
 28628 ;;Total ram usage:       25 bytes
 28629 ;; Hardware stack levels used: 1
 28630 ;; This function calls:
 28631 ;;		Nothing
 28632 ;; This function is called by:
 28633 ;;		_G01_TMR2_ISR
 28634 ;;		_Encoder_ISR
 28635 ;; This function uses a non-reentrant model
 28636 ;;
 28637                           
 28638                           	psect	text155
 28639  003AD4                     __ptext155:
 28640                           	callstack 0
 28641  003AD4                     i2___fldiv:
 28642                           	callstack 18
 28643                           
 28644                           ;incstack = 0
 28645  003AD4  5012               	movf	(i2___fldiv@b+3)^0,w,c
 28646  003AD6  0B80               	andlw	128
 28647  003AD8  6E1F               	movwf	i2___fldiv@sign^0,c
 28648  003ADA  5012               	movf	(i2___fldiv@b+3)^0,w,c
 28649  003ADC  2412               	addwf	(i2___fldiv@b+3)^0,w,c
 28650  003ADE  6E26               	movwf	i2___fldiv@bexp^0,c
 28651  003AE0  BE11               	btfsc	(i2___fldiv@b+2)^0,7,c
 28652  003AE2  8026               	bsf	i2___fldiv@bexp^0,0,c
 28653  003AE4  5026               	movf	i2___fldiv@bexp^0,w,c
 28654  003AE6  B4D8               	btfsc	status,2,c
 28655  003AE8  D00D               	goto	i2l10277
 28656  003AEA  2826               	incf	i2___fldiv@bexp^0,w,c
 28657  003AEC  A4D8               	btfss	status,2,c
 28658  003AEE  D008               	goto	i2l10273
 28659  003AF0  0E00               	movlw	0
 28660  003AF2  6E0F               	movwf	i2___fldiv@b^0,c
 28661  003AF4  0E00               	movlw	0
 28662  003AF6  6E10               	movwf	(i2___fldiv@b+1)^0,c
 28663  003AF8  0E00               	movlw	0
 28664  003AFA  6E11               	movwf	(i2___fldiv@b+2)^0,c
 28665  003AFC  0E00               	movlw	0
 28666  003AFE  6E12               	movwf	(i2___fldiv@b+3)^0,c
 28667  003B00                     i2l10273:
 28668  003B00  8E11               	bsf	(i2___fldiv@b+2)^0,7,c
 28669  003B02  D006               	goto	L41
 28670  003B04                     i2l10277:
 28671  003B04  0E00               	movlw	0
 28672  003B06  6E0F               	movwf	i2___fldiv@b^0,c
 28673  003B08  0E00               	movlw	0
 28674  003B0A  6E10               	movwf	(i2___fldiv@b+1)^0,c
 28675  003B0C  0E00               	movlw	0
 28676  003B0E  6E11               	movwf	(i2___fldiv@b+2)^0,c
 28677  003B10                     L41:
 28678  003B10  0E00               	movlw	0
 28679  003B12  6E12               	movwf	(i2___fldiv@b+3)^0,c
 28680  003B14  5016               	movf	(i2___fldiv@a+3)^0,w,c
 28681  003B16  0B80               	andlw	128
 28682  003B18  1A1F               	xorwf	i2___fldiv@sign^0,f,c
 28683  003B1A  5016               	movf	(i2___fldiv@a+3)^0,w,c
 28684  003B1C  2416               	addwf	(i2___fldiv@a+3)^0,w,c
 28685  003B1E  6E27               	movwf	i2___fldiv@aexp^0,c
 28686  003B20  BE15               	btfsc	(i2___fldiv@a+2)^0,7,c
 28687  003B22  8027               	bsf	i2___fldiv@aexp^0,0,c
 28688  003B24  5027               	movf	i2___fldiv@aexp^0,w,c
 28689  003B26  B4D8               	btfsc	status,2,c
 28690  003B28  D00D               	goto	i2l10297
 28691  003B2A  2827               	incf	i2___fldiv@aexp^0,w,c
 28692  003B2C  A4D8               	btfss	status,2,c
 28693  003B2E  D008               	goto	i2l10293
 28694  003B30  0E00               	movlw	0
 28695  003B32  6E13               	movwf	i2___fldiv@a^0,c
 28696  003B34  0E00               	movlw	0
 28697  003B36  6E14               	movwf	(i2___fldiv@a+1)^0,c
 28698  003B38  0E00               	movlw	0
 28699  003B3A  6E15               	movwf	(i2___fldiv@a+2)^0,c
 28700  003B3C  0E00               	movlw	0
 28701  003B3E  6E16               	movwf	(i2___fldiv@a+3)^0,c
 28702  003B40                     i2l10293:
 28703  003B40  8E15               	bsf	(i2___fldiv@a+2)^0,7,c
 28704  003B42  D006               	goto	L42
 28705  003B44                     i2l10297:
 28706  003B44  0E00               	movlw	0
 28707  003B46  6E13               	movwf	i2___fldiv@a^0,c
 28708  003B48  0E00               	movlw	0
 28709  003B4A  6E14               	movwf	(i2___fldiv@a+1)^0,c
 28710  003B4C  0E00               	movlw	0
 28711  003B4E  6E15               	movwf	(i2___fldiv@a+2)^0,c
 28712  003B50                     L42:
 28713  003B50  0E00               	movlw	0
 28714  003B52  6E16               	movwf	(i2___fldiv@a+3)^0,c
 28715  003B54  5013               	movf	i2___fldiv@a^0,w,c
 28716  003B56  1014               	iorwf	(i2___fldiv@a+1)^0,w,c
 28717  003B58  1015               	iorwf	(i2___fldiv@a+2)^0,w,c
 28718  003B5A  1016               	iorwf	(i2___fldiv@a+3)^0,w,c
 28719  003B5C  A4D8               	btfss	status,2,c
 28720  003B5E  D017               	goto	i2l10311
 28721  003B60  0E00               	movlw	0
 28722  003B62  6E0F               	movwf	i2___fldiv@b^0,c
 28723  003B64  0E00               	movlw	0
 28724  003B66  6E10               	movwf	(i2___fldiv@b+1)^0,c
 28725  003B68  0E00               	movlw	0
 28726  003B6A  6E11               	movwf	(i2___fldiv@b+2)^0,c
 28727  003B6C  0E00               	movlw	0
 28728  003B6E  6E12               	movwf	(i2___fldiv@b+3)^0,c
 28729  003B70  0E80               	movlw	128
 28730  003B72  1211               	iorwf	(i2___fldiv@b+2)^0,f,c
 28731  003B74  0E7F               	movlw	127
 28732  003B76  1212               	iorwf	(i2___fldiv@b+3)^0,f,c
 28733  003B78                     i2l10305:
 28734  003B78  501F               	movf	i2___fldiv@sign^0,w,c
 28735  003B7A  1212               	iorwf	(i2___fldiv@b+3)^0,f,c
 28736  003B7C  C00F  F00F         	movff	i2___fldiv@b,?i2___fldiv
 28737  003B80  C010  F010         	movff	i2___fldiv@b+1,?i2___fldiv+1
 28738  003B84  C011  F011         	movff	i2___fldiv@b+2,?i2___fldiv+2
 28739  003B88  C012  F012         	movff	i2___fldiv@b+3,?i2___fldiv+3
 28740  003B8C  0012               	return	
 28741  003B8E                     i2l10311:
 28742  003B8E  5026               	movf	i2___fldiv@bexp^0,w,c
 28743  003B90  A4D8               	btfss	status,2,c
 28744  003B92  D009               	goto	i2l10319
 28745  003B94  0E00               	movlw	0
 28746  003B96  6E0F               	movwf	?i2___fldiv^0,c
 28747  003B98  0E00               	movlw	0
 28748  003B9A  6E10               	movwf	(?i2___fldiv+1)^0,c
 28749  003B9C  0E00               	movlw	0
 28750  003B9E  6E11               	movwf	(?i2___fldiv+2)^0,c
 28751  003BA0  0E00               	movlw	0
 28752  003BA2  6E12               	movwf	(?i2___fldiv+3)^0,c
 28753  003BA4  0012               	return	
 28754  003BA6                     i2l10319:
 28755  003BA6  5027               	movf	i2___fldiv@aexp^0,w,c
 28756  003BA8  C026  F017         	movff	i2___fldiv@bexp,??i2___fldiv
 28757  003BAC  6A18               	clrf	(??i2___fldiv+1)^0,c
 28758  003BAE  5E17               	subwf	??i2___fldiv^0,f,c
 28759  003BB0  0E00               	movlw	0
 28760  003BB2  5A18               	subwfb	(??i2___fldiv+1)^0,f,c
 28761  003BB4  0E7F               	movlw	127
 28762  003BB6  2417               	addwf	??i2___fldiv^0,w,c
 28763  003BB8  6E20               	movwf	i2___fldiv@new_exp^0,c
 28764  003BBA  0E00               	movlw	0
 28765  003BBC  2018               	addwfc	(??i2___fldiv+1)^0,w,c
 28766  003BBE  6E21               	movwf	(i2___fldiv@new_exp+1)^0,c
 28767  003BC0  C00F  F01B         	movff	i2___fldiv@b,i2___fldiv@rem
 28768  003BC4  C010  F01C         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 28769  003BC8  C011  F01D         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 28770  003BCC  C012  F01E         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 28771  003BD0  0E00               	movlw	0
 28772  003BD2  6E0F               	movwf	i2___fldiv@b^0,c
 28773  003BD4  0E00               	movlw	0
 28774  003BD6  6E10               	movwf	(i2___fldiv@b+1)^0,c
 28775  003BD8  0E00               	movlw	0
 28776  003BDA  6E11               	movwf	(i2___fldiv@b+2)^0,c
 28777  003BDC  0E00               	movlw	0
 28778  003BDE  6E12               	movwf	(i2___fldiv@b+3)^0,c
 28779  003BE0  0E00               	movlw	0
 28780  003BE2  6E22               	movwf	i2___fldiv@grs^0,c
 28781  003BE4  0E00               	movlw	0
 28782  003BE6  6E23               	movwf	(i2___fldiv@grs+1)^0,c
 28783  003BE8  0E00               	movlw	0
 28784  003BEA  6E24               	movwf	(i2___fldiv@grs+2)^0,c
 28785  003BEC  0E00               	movlw	0
 28786  003BEE  6E25               	movwf	(i2___fldiv@grs+3)^0,c
 28787  003BF0  0E00               	movlw	0
 28788  003BF2  6E27               	movwf	i2___fldiv@aexp^0,c
 28789  003BF4  D028               	goto	i2l1997
 28790  003BF6                     i2l10329:
 28791  003BF6  5027               	movf	i2___fldiv@aexp^0,w,c
 28792  003BF8  B4D8               	btfsc	status,2,c
 28793  003BFA  D011               	goto	i2l10337
 28794  003BFC  90D8               	bcf	status,0,c
 28795  003BFE  361B               	rlcf	i2___fldiv@rem^0,f,c
 28796  003C00  361C               	rlcf	(i2___fldiv@rem+1)^0,f,c
 28797  003C02  361D               	rlcf	(i2___fldiv@rem+2)^0,f,c
 28798  003C04  361E               	rlcf	(i2___fldiv@rem+3)^0,f,c
 28799  003C06  90D8               	bcf	status,0,c
 28800  003C08  360F               	rlcf	i2___fldiv@b^0,f,c
 28801  003C0A  3610               	rlcf	(i2___fldiv@b+1)^0,f,c
 28802  003C0C  3611               	rlcf	(i2___fldiv@b+2)^0,f,c
 28803  003C0E  3612               	rlcf	(i2___fldiv@b+3)^0,f,c
 28804  003C10  BE25               	btfsc	(i2___fldiv@grs+3)^0,7,c
 28805  003C12  800F               	bsf	i2___fldiv@b^0,0,c
 28806  003C14  90D8               	bcf	status,0,c
 28807  003C16  3622               	rlcf	i2___fldiv@grs^0,f,c
 28808  003C18  3623               	rlcf	(i2___fldiv@grs+1)^0,f,c
 28809  003C1A  3624               	rlcf	(i2___fldiv@grs+2)^0,f,c
 28810  003C1C  3625               	rlcf	(i2___fldiv@grs+3)^0,f,c
 28811  003C1E                     i2l10337:
 28812  003C1E  5013               	movf	i2___fldiv@a^0,w,c
 28813  003C20  5C1B               	subwf	i2___fldiv@rem^0,w,c
 28814  003C22  5014               	movf	(i2___fldiv@a+1)^0,w,c
 28815  003C24  581C               	subwfb	(i2___fldiv@rem+1)^0,w,c
 28816  003C26  5015               	movf	(i2___fldiv@a+2)^0,w,c
 28817  003C28  581D               	subwfb	(i2___fldiv@rem+2)^0,w,c
 28818  003C2A  5016               	movf	(i2___fldiv@a+3)^0,w,c
 28819  003C2C  581E               	subwfb	(i2___fldiv@rem+3)^0,w,c
 28820  003C2E  A0D8               	btfss	status,0,c
 28821  003C30  D009               	goto	i2l10343
 28822  003C32  8C25               	bsf	(i2___fldiv@grs+3)^0,6,c
 28823  003C34  5013               	movf	i2___fldiv@a^0,w,c
 28824  003C36  5E1B               	subwf	i2___fldiv@rem^0,f,c
 28825  003C38  5014               	movf	(i2___fldiv@a+1)^0,w,c
 28826  003C3A  5A1C               	subwfb	(i2___fldiv@rem+1)^0,f,c
 28827  003C3C  5015               	movf	(i2___fldiv@a+2)^0,w,c
 28828  003C3E  5A1D               	subwfb	(i2___fldiv@rem+2)^0,f,c
 28829  003C40  5016               	movf	(i2___fldiv@a+3)^0,w,c
 28830  003C42  5A1E               	subwfb	(i2___fldiv@rem+3)^0,f,c
 28831  003C44                     i2l10343:
 28832  003C44  2A27               	incf	i2___fldiv@aexp^0,f,c
 28833  003C46                     i2l1997:
 28834  003C46  0E19               	movlw	25
 28835  003C48  6427               	cpfsgt	i2___fldiv@aexp^0,c
 28836  003C4A  D7D5               	goto	i2l10329
 28837  003C4C  501B               	movf	i2___fldiv@rem^0,w,c
 28838  003C4E  101C               	iorwf	(i2___fldiv@rem+1)^0,w,c
 28839  003C50  101D               	iorwf	(i2___fldiv@rem+2)^0,w,c
 28840  003C52  101E               	iorwf	(i2___fldiv@rem+3)^0,w,c
 28841  003C54  B4D8               	btfsc	status,2,c
 28842  003C56  D011               	goto	i2l10355
 28843  003C58  8022               	bsf	i2___fldiv@grs^0,0,c
 28844  003C5A  D00F               	goto	i2l10355
 28845  003C5C                     i2l10349:
 28846  003C5C  90D8               	bcf	status,0,c
 28847  003C5E  360F               	rlcf	i2___fldiv@b^0,f,c
 28848  003C60  3610               	rlcf	(i2___fldiv@b+1)^0,f,c
 28849  003C62  3611               	rlcf	(i2___fldiv@b+2)^0,f,c
 28850  003C64  3612               	rlcf	(i2___fldiv@b+3)^0,f,c
 28851  003C66  BE25               	btfsc	(i2___fldiv@grs+3)^0,7,c
 28852  003C68  800F               	bsf	i2___fldiv@b^0,0,c
 28853  003C6A  90D8               	bcf	status,0,c
 28854  003C6C  3622               	rlcf	i2___fldiv@grs^0,f,c
 28855  003C6E  3623               	rlcf	(i2___fldiv@grs+1)^0,f,c
 28856  003C70  3624               	rlcf	(i2___fldiv@grs+2)^0,f,c
 28857  003C72  3625               	rlcf	(i2___fldiv@grs+3)^0,f,c
 28858  003C74  0620               	decf	i2___fldiv@new_exp^0,f,c
 28859  003C76  A0D8               	btfss	status,0,c
 28860  003C78  0621               	decf	(i2___fldiv@new_exp+1)^0,f,c
 28861  003C7A                     i2l10355:
 28862  003C7A  AE11               	btfss	(i2___fldiv@b+2)^0,7,c
 28863  003C7C  D7EF               	goto	i2l10349
 28864  003C7E  0E00               	movlw	0
 28865  003C80  6E27               	movwf	i2___fldiv@aexp^0,c
 28866  003C82  AE25               	btfss	(i2___fldiv@grs+3)^0,7,c
 28867  003C84  D017               	goto	i2l2008
 28868  003C86  0EFF               	movlw	255
 28869  003C88  1422               	andwf	i2___fldiv@grs^0,w,c
 28870  003C8A  6E17               	movwf	??i2___fldiv^0,c
 28871  003C8C  0EFF               	movlw	255
 28872  003C8E  1423               	andwf	(i2___fldiv@grs+1)^0,w,c
 28873  003C90  6E18               	movwf	(??i2___fldiv+1)^0,c
 28874  003C92  0EFF               	movlw	255
 28875  003C94  1424               	andwf	(i2___fldiv@grs+2)^0,w,c
 28876  003C96  6E19               	movwf	(??i2___fldiv+2)^0,c
 28877  003C98  0E7F               	movlw	127
 28878  003C9A  1425               	andwf	(i2___fldiv@grs+3)^0,w,c
 28879  003C9C  6E1A               	movwf	(??i2___fldiv+3)^0,c
 28880  003C9E  5017               	movf	??i2___fldiv^0,w,c
 28881  003CA0  1018               	iorwf	(??i2___fldiv+1)^0,w,c
 28882  003CA2  1019               	iorwf	(??i2___fldiv+2)^0,w,c
 28883  003CA4  101A               	iorwf	(??i2___fldiv+3)^0,w,c
 28884  003CA6  B4D8               	btfsc	status,2,c
 28885  003CA8  D003               	goto	i2l2009
 28886  003CAA                     i2u1149_40:
 28887  003CAA  0E01               	movlw	1
 28888  003CAC  6E27               	movwf	i2___fldiv@aexp^0,c
 28889  003CAE  D002               	goto	i2l2008
 28890  003CB0                     i2l2009:
 28891  003CB0  B00F               	btfsc	i2___fldiv@b^0,0,c
 28892  003CB2  D7FB               	goto	i2u1149_40
 28893  003CB4                     i2l2008:
 28894  003CB4  5027               	movf	i2___fldiv@aexp^0,w,c
 28895  003CB6  B4D8               	btfsc	status,2,c
 28896  003CB8  D01F               	goto	i2l10375
 28897  003CBA  0E01               	movlw	1
 28898  003CBC  260F               	addwf	i2___fldiv@b^0,f,c
 28899  003CBE  0E00               	movlw	0
 28900  003CC0  2210               	addwfc	(i2___fldiv@b+1)^0,f,c
 28901  003CC2  2211               	addwfc	(i2___fldiv@b+2)^0,f,c
 28902  003CC4  2212               	addwfc	(i2___fldiv@b+3)^0,f,c
 28903  003CC6  A012               	btfss	(i2___fldiv@b+3)^0,0,c
 28904  003CC8  D017               	goto	i2l10375
 28905  003CCA  C00F  F017         	movff	i2___fldiv@b,??i2___fldiv
 28906  003CCE  C010  F018         	movff	i2___fldiv@b+1,??i2___fldiv+1
 28907  003CD2  C011  F019         	movff	i2___fldiv@b+2,??i2___fldiv+2
 28908  003CD6  C012  F01A         	movff	i2___fldiv@b+3,??i2___fldiv+3
 28909  003CDA  341A               	rlcf	(??i2___fldiv+3)^0,w,c
 28910  003CDC  321A               	rrcf	(??i2___fldiv+3)^0,f,c
 28911  003CDE  3219               	rrcf	(??i2___fldiv+2)^0,f,c
 28912  003CE0  3218               	rrcf	(??i2___fldiv+1)^0,f,c
 28913  003CE2  3217               	rrcf	??i2___fldiv^0,f,c
 28914  003CE4  C017  F00F         	movff	??i2___fldiv,i2___fldiv@b
 28915  003CE8  C018  F010         	movff	??i2___fldiv+1,i2___fldiv@b+1
 28916  003CEC  C019  F011         	movff	??i2___fldiv+2,i2___fldiv@b+2
 28917  003CF0  C01A  F012         	movff	??i2___fldiv+3,i2___fldiv@b+3
 28918  003CF4  4A20               	infsnz	i2___fldiv@new_exp^0,f,c
 28919  003CF6  2A21               	incf	(i2___fldiv@new_exp+1)^0,f,c
 28920  003CF8                     i2l10375:
 28921  003CF8  BE21               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 28922  003CFA  D010               	goto	i2l10379
 28923  003CFC  5021               	movf	(i2___fldiv@new_exp+1)^0,w,c
 28924  003CFE  E103               	bnz	i2u1153_40
 28925  003D00  2820               	incf	i2___fldiv@new_exp^0,w,c
 28926  003D02  A0D8               	btfss	status,0,c
 28927  003D04  D00B               	goto	i2l10379
 28928  003D06                     i2u1153_40:
 28929  003D06  0E00               	movlw	0
 28930  003D08  6E21               	movwf	(i2___fldiv@new_exp+1)^0,c
 28931  003D0A  6820               	setf	i2___fldiv@new_exp^0,c
 28932  003D0C  0E00               	movlw	0
 28933  003D0E  6E0F               	movwf	i2___fldiv@b^0,c
 28934  003D10  0E00               	movlw	0
 28935  003D12  6E10               	movwf	(i2___fldiv@b+1)^0,c
 28936  003D14  0E00               	movlw	0
 28937  003D16  6E11               	movwf	(i2___fldiv@b+2)^0,c
 28938  003D18  0E00               	movlw	0
 28939  003D1A  6E12               	movwf	(i2___fldiv@b+3)^0,c
 28940  003D1C                     i2l10379:
 28941  003D1C  BE21               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 28942  003D1E  D005               	goto	i2u1154_40
 28943  003D20  5021               	movf	(i2___fldiv@new_exp+1)^0,w,c
 28944  003D22  E111               	bnz	i2l10383
 28945  003D24  0420               	decf	i2___fldiv@new_exp^0,w,c
 28946  003D26  B0D8               	btfsc	status,0,c
 28947  003D28  D00E               	goto	i2l10383
 28948  003D2A                     i2u1154_40:
 28949  003D2A  0E00               	movlw	0
 28950  003D2C  6E21               	movwf	(i2___fldiv@new_exp+1)^0,c
 28951  003D2E  0E00               	movlw	0
 28952  003D30  6E20               	movwf	i2___fldiv@new_exp^0,c
 28953  003D32  0E00               	movlw	0
 28954  003D34  6E0F               	movwf	i2___fldiv@b^0,c
 28955  003D36  0E00               	movlw	0
 28956  003D38  6E10               	movwf	(i2___fldiv@b+1)^0,c
 28957  003D3A  0E00               	movlw	0
 28958  003D3C  6E11               	movwf	(i2___fldiv@b+2)^0,c
 28959  003D3E  0E00               	movlw	0
 28960  003D40  6E12               	movwf	(i2___fldiv@b+3)^0,c
 28961  003D42  0E00               	movlw	0
 28962  003D44  6E1F               	movwf	i2___fldiv@sign^0,c
 28963  003D46                     i2l10383:
 28964  003D46  C020  F026         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 28965  003D4A  A026               	btfss	i2___fldiv@bexp^0,0,c
 28966  003D4C  D002               	goto	i2l10389
 28967  003D4E  8E11               	bsf	(i2___fldiv@b+2)^0,7,c
 28968  003D50  D001               	goto	i2l10391
 28969  003D52                     i2l10389:
 28970  003D52  9E11               	bcf	(i2___fldiv@b+2)^0,7,c
 28971  003D54                     i2l10391:
 28972  003D54  90D8               	bcf	status,0,c
 28973  003D56  3026               	rrcf	i2___fldiv@bexp^0,w,c
 28974  003D58  6E12               	movwf	(i2___fldiv@b+3)^0,c
 28975  003D5A  D70E               	goto	i2l10305
 28976  003D5C                     __end_ofi2___fldiv:
 28977                           	callstack 0
 28978                           
 28979 ;; *************** function _TMR0_WriteTimer *****************
 28980 ;; Defined at:
 28981 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 28982 ;; Parameters:    Size  Location     Type
 28983 ;;  timerVal        2    0[COMRAM] unsigned short 
 28984 ;; Auto vars:     Size  Location     Type
 28985 ;;		None
 28986 ;; Return value:  Size  Location     Type
 28987 ;;                  1    wreg      void 
 28988 ;; Registers used:
 28989 ;;		None
 28990 ;; Tracked objects:
 28991 ;;		On entry : 3D/2
 28992 ;;		On exit  : 3D/0
 28993 ;;		Unchanged: 3D/0
 28994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28995 ;;      Params:         2       0       0       0       0       0       0       0       0
 28996 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28997 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28998 ;;      Totals:         2       0       0       0       0       0       0       0       0
 28999 ;;Total ram usage:        2 bytes
 29000 ;; Hardware stack levels used: 1
 29001 ;; This function calls:
 29002 ;;		Nothing
 29003 ;; This function is called by:
 29004 ;;		_Timing_TMR0_ISR
 29005 ;;		_Encoder_ISR
 29006 ;; This function uses a non-reentrant model
 29007 ;;
 29008                           
 29009                           	psect	text156
 29010  0005D2                     __ptext156:
 29011                           	callstack 0
 29012  0005D2                     _TMR0_WriteTimer:
 29013                           	callstack 18
 29014                           
 29015                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 29016                           
 29017                           ;incstack = 0
 29018  0005D2  C002  FFD7         	movff	TMR0_WriteTimer@timerVal+1,4055	;volatile
 29019                           
 29020                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 29021  0005D6  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
 29022  0005DA  0012               	return		;funcret
 29023  0005DC                     __end_of_TMR0_WriteTimer:
 29024                           	callstack 0
 29025                           
 29026 ;; *************** function _TMR0_ReadTimer *****************
 29027 ;; Defined at:
 29028 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 29029 ;; Parameters:    Size  Location     Type
 29030 ;;		None
 29031 ;; Auto vars:     Size  Location     Type
 29032 ;;  readVal         2    4[COMRAM] unsigned short 
 29033 ;;  readValHigh     1    7[COMRAM] unsigned char 
 29034 ;;  readValLow      1    6[COMRAM] unsigned char 
 29035 ;; Return value:  Size  Location     Type
 29036 ;;                  2    0[COMRAM] unsigned short 
 29037 ;; Registers used:
 29038 ;;		wreg, status,2
 29039 ;; Tracked objects:
 29040 ;;		On entry : 3F/0
 29041 ;;		On exit  : 3F/0
 29042 ;;		Unchanged: 3F/0
 29043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29044 ;;      Params:         2       0       0       0       0       0       0       0       0
 29045 ;;      Locals:         4       0       0       0       0       0       0       0       0
 29046 ;;      Temps:          2       0       0       0       0       0       0       0       0
 29047 ;;      Totals:         8       0       0       0       0       0       0       0       0
 29048 ;;Total ram usage:        8 bytes
 29049 ;; Hardware stack levels used: 1
 29050 ;; This function calls:
 29051 ;;		Nothing
 29052 ;; This function is called by:
 29053 ;;		_Encoder_ISR
 29054 ;; This function uses a non-reentrant model
 29055 ;;
 29056                           
 29057                           	psect	text157
 29058  00047A                     __ptext157:
 29059                           	callstack 0
 29060  00047A                     _TMR0_ReadTimer:
 29061                           	callstack 17
 29062                           
 29063                           ; BSR set to: 0
 29064                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 29065                           
 29066                           ;incstack = 0
 29067  00047A  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 29068                           
 29069                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 29070  00047E  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 29071                           
 29072                           ; BSR set to: 0
 29073                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 29074  000482  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 29075  000484  6E03               	movwf	??_TMR0_ReadTimer^0,c
 29076  000486  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 29077  000488  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 29078  00048A  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 29079                           
 29080                           ; BSR set to: 0
 29081                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 29082  00048E  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 29083  000492  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 29084                           
 29085                           ; BSR set to: 0
 29086  000496  0012               	return		;funcret
 29087  000498                     __end_of_TMR0_ReadTimer:
 29088                           	callstack 0
 29089                           
 29090 ;; *************** function _Actualizar_angulo *****************
 29091 ;; Defined at:
 29092 ;;		line 67 in file "encoder.c"
 29093 ;; Parameters:    Size  Location     Type
 29094 ;;		None
 29095 ;; Auto vars:     Size  Location     Type
 29096 ;;		None
 29097 ;; Return value:  Size  Location     Type
 29098 ;;                  1    wreg      void 
 29099 ;; Registers used:
 29100 ;;		wreg, status,2, status,0, cstack
 29101 ;; Tracked objects:
 29102 ;;		On entry : 3F/1
 29103 ;;		On exit  : 3E/0
 29104 ;;		Unchanged: 0/0
 29105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29106 ;;      Params:         0       0       0       0       0       0       0       0       0
 29107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29109 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29110 ;;Total ram usage:        0 bytes
 29111 ;; Hardware stack levels used: 1
 29112 ;; Hardware stack levels required when called: 1
 29113 ;; This function calls:
 29114 ;;		i2___lbmod
 29115 ;; This function is called by:
 29116 ;;		_Encoder_ISR
 29117 ;; This function uses a non-reentrant model
 29118 ;;
 29119                           
 29120                           	psect	text158
 29121  007DB0                     __ptext158:
 29122                           	callstack 0
 29123  007DB0                     _Actualizar_angulo:
 29124                           	callstack 16
 29125                           
 29126                           ; BSR set to: 1
 29127                           ;encoder.c: 68:    if(PORTCbits.RC2==1){
 29128                           
 29129                           ; BSR set to: 0
 29130                           ;incstack = 0
 29131  007DB0  A482               	btfss	130,2,c	;volatile
 29132  007DB2  D00F               	goto	i2l9987
 29133                           
 29134                           ; BSR set to: 1
 29135                           ;encoder.c: 69:       if(flag_angulo==0){
 29136  007DB4  51CF               	movf	_flag_angulo& (0+255),w,b
 29137  007DB6  A4D8               	btfss	status,2,c
 29138  007DB8  0012               	return	
 29139                           
 29140                           ; BSR set to: 1
 29141                           ;encoder.c: 70:          flag_angulo=1;
 29142  007DBA  0E01               	movlw	1
 29143  007DBC  6FCF               	movwf	_flag_angulo& (0+255),b
 29144                           
 29145                           ; BSR set to: 1
 29146                           ;encoder.c: 71:          angulo++;
 29147  007DBE  0100               	movlb	0	; () banked
 29148  007DC0  2BC9               	incf	_angulo& (0+255),f,b
 29149                           
 29150                           ; BSR set to: 0
 29151                           ;encoder.c: 72:          angulo = angulo%72;
 29152  007DC2  0E48               	movlw	72
 29153  007DC4  6E01               	movwf	i2___lbmod@divisor^0,c
 29154  007DC6  51C9               	movf	_angulo& (0+255),w,b
 29155  007DC8  EC87  F001         	call	i2___lbmod
 29156  007DCC  0100               	movlb	0	; () banked
 29157  007DCE  6FC9               	movwf	_angulo& (0+255),b
 29158  007DD0  0012               	return	
 29159  007DD2                     i2l9987:
 29160                           
 29161                           ; BSR set to: 1
 29162                           ;encoder.c: 75:       if(flag_angulo==1){
 29163  007DD2  05CF               	decf	_flag_angulo& (0+255),w,b
 29164  007DD4  A4D8               	btfss	status,2,c
 29165  007DD6  0012               	return	
 29166                           
 29167                           ; BSR set to: 1
 29168                           ;encoder.c: 76:          flag_angulo=0;
 29169  007DD8  0E00               	movlw	0
 29170  007DDA  6FCF               	movwf	_flag_angulo& (0+255),b
 29171                           
 29172                           ; BSR set to: 1
 29173                           ;encoder.c: 77:          angulo++;
 29174  007DDC  0100               	movlb	0	; () banked
 29175  007DDE  2BC9               	incf	_angulo& (0+255),f,b
 29176                           
 29177                           ; BSR set to: 0
 29178                           ;encoder.c: 78:          angulo = angulo%72;
 29179  007DE0  0E48               	movlw	72
 29180  007DE2  6E01               	movwf	i2___lbmod@divisor^0,c
 29181  007DE4  51C9               	movf	_angulo& (0+255),w,b
 29182  007DE6  EC87  F001         	call	i2___lbmod
 29183  007DEA  0100               	movlb	0	; () banked
 29184  007DEC  6FC9               	movwf	_angulo& (0+255),b
 29185  007DEE  0012               	return		;funcret
 29186  007DF0                     __end_of_Actualizar_angulo:
 29187                           	callstack 0
 29188                           
 29189 ;; *************** function i2___lbmod *****************
 29190 ;; Defined at:
 29191 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/lbmod.c"
 29192 ;; Parameters:    Size  Location     Type
 29193 ;;  dividend        1    wreg     unsigned char 
 29194 ;;  divisor         1    0[COMRAM] unsigned char 
 29195 ;; Auto vars:     Size  Location     Type
 29196 ;;  dividend        1    1[COMRAM] unsigned char 
 29197 ;;  rem             1    3[COMRAM] unsigned char 
 29198 ;;  counter         1    2[COMRAM] unsigned char 
 29199 ;; Return value:  Size  Location     Type
 29200 ;;                  1    wreg      unsigned char 
 29201 ;; Registers used:
 29202 ;;		wreg, status,2, status,0
 29203 ;; Tracked objects:
 29204 ;;		On entry : 3F/0
 29205 ;;		On exit  : 0/0
 29206 ;;		Unchanged: 0/0
 29207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29208 ;;      Params:         1       0       0       0       0       0       0       0       0
 29209 ;;      Locals:         3       0       0       0       0       0       0       0       0
 29210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29211 ;;      Totals:         4       0       0       0       0       0       0       0       0
 29212 ;;Total ram usage:        4 bytes
 29213 ;; Hardware stack levels used: 1
 29214 ;; This function calls:
 29215 ;;		Nothing
 29216 ;; This function is called by:
 29217 ;;		_Actualizar_angulo
 29218 ;; This function uses a non-reentrant model
 29219 ;;
 29220                           
 29221                           	psect	text159
 29222  00030E                     __ptext159:
 29223                           	callstack 0
 29224  00030E                     i2___lbmod:
 29225                           	callstack 16
 29226                           
 29227                           ;incstack = 0
 29228                           ;i2___lbmod@dividend stored from wreg
 29229  00030E  6E02               	movwf	i2___lbmod@dividend^0,c
 29230  000310  0E08               	movlw	8
 29231  000312  6E03               	movwf	i2___lbmod@counter^0,c
 29232  000314  0E00               	movlw	0
 29233  000316  6E04               	movwf	i2___lbmod@rem^0,c
 29234  000318                     i2l9523:
 29235  000318  90D8               	bcf	status,0,c
 29236  00031A  3402               	rlcf	i2___lbmod@dividend^0,w,c
 29237  00031C  3404               	rlcf	i2___lbmod@rem^0,w,c
 29238  00031E  6E04               	movwf	i2___lbmod@rem^0,c
 29239  000320  90D8               	bcf	status,0,c
 29240  000322  3602               	rlcf	i2___lbmod@dividend^0,f,c
 29241  000324  5001               	movf	i2___lbmod@divisor^0,w,c
 29242  000326  5C04               	subwf	i2___lbmod@rem^0,w,c
 29243  000328  A0D8               	btfss	status,0,c
 29244  00032A  D002               	goto	i2l9531
 29245  00032C  5001               	movf	i2___lbmod@divisor^0,w,c
 29246  00032E  5E04               	subwf	i2___lbmod@rem^0,f,c
 29247  000330                     i2l9531:
 29248  000330  2E03               	decfsz	i2___lbmod@counter^0,f,c
 29249  000332  D7F2               	goto	i2l9523
 29250  000334  5004               	movf	i2___lbmod@rem^0,w,c
 29251  000336  0012               	return		;funcret
 29252  000338                     __end_ofi2___lbmod:
 29253                           	callstack 0
 29254                           
 29255                           	psect	text160
 29256  000000                     __ptext160:
 29257                           	callstack 0
 29258                           
 29259                           	psect	rparam
 29260  0000                     
 29261                           	psect	temp
 29262  00005F                     btemp:
 29263                           	callstack 0
 29264  00005F                     	ds	1
 29265  0000                     int$flags	set	btemp
 29266  0000                     wtemp8	set	btemp+1
 29267  0000                     ttemp5	set	btemp+1
 29268  0000                     ttemp6	set	btemp+4
 29269  0000                     ttemp7	set	btemp+8
 29270                           
 29271                           	psect	idloc
 29272                           
 29273                           ;Config register IDLOC0 @ 0x200000
 29274                           ;	unspecified, using default values
 29275  200000                     	org	2097152
 29276  200000  FF                 	db	255
 29277                           
 29278                           ;Config register IDLOC1 @ 0x200001
 29279                           ;	unspecified, using default values
 29280  200001                     	org	2097153
 29281  200001  FF                 	db	255
 29282                           
 29283                           ;Config register IDLOC2 @ 0x200002
 29284                           ;	unspecified, using default values
 29285  200002                     	org	2097154
 29286  200002  FF                 	db	255
 29287                           
 29288                           ;Config register IDLOC3 @ 0x200003
 29289                           ;	unspecified, using default values
 29290  200003                     	org	2097155
 29291  200003  FF                 	db	255
 29292                           
 29293                           ;Config register IDLOC4 @ 0x200004
 29294                           ;	unspecified, using default values
 29295  200004                     	org	2097156
 29296  200004  FF                 	db	255
 29297                           
 29298                           ;Config register IDLOC5 @ 0x200005
 29299                           ;	unspecified, using default values
 29300  200005                     	org	2097157
 29301  200005  FF                 	db	255
 29302                           
 29303                           ;Config register IDLOC6 @ 0x200006
 29304                           ;	unspecified, using default values
 29305  200006                     	org	2097158
 29306  200006  FF                 	db	255
 29307                           
 29308                           ;Config register IDLOC7 @ 0x200007
 29309                           ;	unspecified, using default values
 29310  200007                     	org	2097159
 29311  200007  FF                 	db	255
 29312                           
 29313                           	psect	config
 29314                           
 29315                           ;Config register CONFIG1L @ 0x300000
 29316                           ;	PLL Selection
 29317                           ;	PLLSEL = PLL3X, 3x clock multiplier
 29318                           ;	PLL Enable Configuration bit
 29319                           ;	CFGPLLEN = ON, PLL Enabled
 29320                           ;	CPU System Clock Postscaler
 29321                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 29322                           ;	Low Speed USB mode with 48 MHz system clock
 29323                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
 29324  300000                     	org	3145728
 29325  300000  23                 	db	35
 29326                           
 29327                           ;Config register CONFIG1H @ 0x300001
 29328                           ;	Oscillator Selection
 29329                           ;	FOSC = INTOSCIO, Internal oscillator
 29330                           ;	Primary Oscillator Shutdown
 29331                           ;	PCLKEN = ON, Primary oscillator enabled
 29332                           ;	Fail-Safe Clock Monitor
 29333                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 29334                           ;	Internal/External Oscillator Switchover
 29335                           ;	IESO = OFF, Oscillator Switchover mode disabled
 29336  300001                     	org	3145729
 29337  300001  28                 	db	40
 29338                           
 29339                           ;Config register CONFIG2L @ 0x300002
 29340                           ;	Power-up Timer Enable
 29341                           ;	nPWRTEN = OFF, Power up timer disabled
 29342                           ;	Brown-out Reset Enable
 29343                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 29344                           ;	Brown-out Reset Voltage
 29345                           ;	BORV = 190, BOR set to 1.9V nominal
 29346                           ;	Low-Power Brown-out Reset
 29347                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 29348  300002                     	org	3145730
 29349  300002  5F                 	db	95
 29350                           
 29351                           ;Config register CONFIG2H @ 0x300003
 29352                           ;	Watchdog Timer Enable bits
 29353                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 29354                           ;	Watchdog Timer Postscaler
 29355                           ;	WDTPS = 32768, 1:32768
 29356  300003                     	org	3145731
 29357  300003  3C                 	db	60
 29358                           
 29359                           ; Padding undefined space
 29360  300004                     	org	3145732
 29361  300004  FF                 	db	255
 29362                           
 29363                           ;Config register CONFIG3H @ 0x300005
 29364                           ;	CCP2 MUX bit
 29365                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 29366                           ;	PORTB A/D Enable bit
 29367                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 29368                           ;	Timer3 Clock Input MUX bit
 29369                           ;	T3CMX = RC0, T3CKI function is on RC0
 29370                           ;	SDO Output MUX bit
 29371                           ;	SDOMX = RB3, SDO function is on RB3
 29372                           ;	Master Clear Reset Pin Enable
 29373                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
 29374  300005                     	org	3145733
 29375  300005  53                 	db	83
 29376                           
 29377                           ;Config register CONFIG4L @ 0x300006
 29378                           ;	Stack Full/Underflow Reset
 29379                           ;	STVREN = ON, Stack full/underflow will cause Reset
 29380                           ;	Single-Supply ICSP Enable bit
 29381                           ;	LVP = OFF, Single-Supply ICSP disabled
 29382                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 29383                           ;	ICPRT = OFF, ICPORT disabled
 29384                           ;	Extended Instruction Set Enable bit
 29385                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 29386                           ;	Background Debugger Enable bit
 29387                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 29388  300006                     	org	3145734
 29389  300006  81                 	db	129
 29390                           
 29391                           ; Padding undefined space
 29392  300007                     	org	3145735
 29393  300007  FF                 	db	255
 29394                           
 29395                           ;Config register CONFIG5L @ 0x300008
 29396                           ;	Block 0 Code Protect
 29397                           ;	CP0 = OFF, Block 0 is not code-protected
 29398                           ;	Block 1 Code Protect
 29399                           ;	CP1 = OFF, Block 1 is not code-protected
 29400                           ;	Block 2 Code Protect
 29401                           ;	CP2 = OFF, Block 2 is not code-protected
 29402                           ;	Block 3 Code Protect
 29403                           ;	CP3 = OFF, Block 3 is not code-protected
 29404  300008                     	org	3145736
 29405  300008  0F                 	db	15
 29406                           
 29407                           ;Config register CONFIG5H @ 0x300009
 29408                           ;	Boot Block Code Protect
 29409                           ;	CPB = OFF, Boot block is not code-protected
 29410                           ;	Data EEPROM Code Protect
 29411                           ;	CPD = OFF, Data EEPROM is not code-protected
 29412  300009                     	org	3145737
 29413  300009  C0                 	db	192
 29414                           
 29415                           ;Config register CONFIG6L @ 0x30000A
 29416                           ;	Block 0 Write Protect
 29417                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 29418                           ;	Block 1 Write Protect
 29419                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 29420                           ;	Block 2 Write Protect
 29421                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 29422                           ;	Block 3 Write Protect
 29423                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 29424  30000A                     	org	3145738
 29425  30000A  0F                 	db	15
 29426                           
 29427                           ;Config register CONFIG6H @ 0x30000B
 29428                           ;	Configuration Registers Write Protect
 29429                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 29430                           ;	Boot Block Write Protect
 29431                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 29432                           ;	Data EEPROM Write Protect
 29433                           ;	WRTD = OFF, Data EEPROM is not write-protected
 29434  30000B                     	org	3145739
 29435  30000B  E0                 	db	224
 29436                           
 29437                           ;Config register CONFIG7L @ 0x30000C
 29438                           ;	Block 0 Table Read Protect
 29439                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 29440                           ;	Block 1 Table Read Protect
 29441                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 29442                           ;	Block 2 Table Read Protect
 29443                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 29444                           ;	Block 3 Table Read Protect
 29445                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 29446  30000C                     	org	3145740
 29447  30000C  0F                 	db	15
 29448                           
 29449                           ;Config register CONFIG7H @ 0x30000D
 29450                           ;	Boot Block Table Read Protect
 29451                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 29452  30000D                     	org	3145741
 29453  30000D  40                 	db	64
 29454                           tosu	equ	0xFFF
 29455                           tosh	equ	0xFFE
 29456                           tosl	equ	0xFFD
 29457                           stkptr	equ	0xFFC
 29458                           pclatu	equ	0xFFB
 29459                           pclath	equ	0xFFA
 29460                           pcl	equ	0xFF9
 29461                           tblptru	equ	0xFF8
 29462                           tblptrh	equ	0xFF7
 29463                           tblptrl	equ	0xFF6
 29464                           tablat	equ	0xFF5
 29465                           prodh	equ	0xFF4
 29466                           prodl	equ	0xFF3
 29467                           indf0	equ	0xFEF
 29468                           postinc0	equ	0xFEE
 29469                           postdec0	equ	0xFED
 29470                           preinc0	equ	0xFEC
 29471                           plusw0	equ	0xFEB
 29472                           fsr0h	equ	0xFEA
 29473                           fsr0l	equ	0xFE9
 29474                           wreg	equ	0xFE8
 29475                           indf1	equ	0xFE7
 29476                           postinc1	equ	0xFE6
 29477                           postdec1	equ	0xFE5
 29478                           preinc1	equ	0xFE4
 29479                           plusw1	equ	0xFE3
 29480                           fsr1h	equ	0xFE2
 29481                           fsr1l	equ	0xFE1
 29482                           bsr	equ	0xFE0
 29483                           indf2	equ	0xFDF
 29484                           postinc2	equ	0xFDE
 29485                           postdec2	equ	0xFDD
 29486                           preinc2	equ	0xFDC
 29487                           plusw2	equ	0xFDB
 29488                           fsr2h	equ	0xFDA
 29489                           fsr2l	equ	0xFD9
 29490                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    167
    Data        12
    BSS         1001
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160     72     116
    BANK1           256    191     229
    BANK2           256    174     256
    BANK3           256      0     207
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USBCommandFetch$5640	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    nanf@s	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_30(CODE[1]), 

    M_5@axis	PTR struct Comando_T size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    M_4@axis	PTR struct Comando_T size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    M_3@axis	PTR struct Comando_T size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    F	PTR FTN(int ,int ,)int  size(2) Largest target is 1
		 -> Absolute function(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 10
		 -> getComands@buff(BANK1[10]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_19(CODE[4]), STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_19(CODE[4]), STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK1[3]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[20]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK1[3]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[20]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(BANK1[7]), dbuf(BANK3[80]), ?_sprintf(BANK1[2]), executeCommand@comando.number(BANK0[4]), 
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), 
		 -> Encoder_ISR@tics(BANK0[4]), ustep(BANK0[1]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(BANK1[7]), dbuf(BANK3[80]), ?_sprintf(BANK1[2]), executeCommand@comando.number(BANK0[4]), 
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), 
		 -> Encoder_ISR@tics(BANK0[4]), ustep(BANK0[1]), NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), lastToken(BANK3[30]), getComands@buff(BANK1[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), lastToken(BANK3[30]), getComands@buff(BANK1[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK3[80]), executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK3[80]), executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[20]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), executeCommand@comando.number(BANK0[4]), executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), 
		 -> readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), ustep(BANK0[1]), 
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(BANK1[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), executeCommand@comando.number(BANK0[4]), executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), 
		 -> readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), ustep(BANK0[1]), 
		 -> NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK1[7]), ?_sprintf(BANK1[2]), executeCommand@comando.number(BANK0[4]), executeCommand@strCommand(BANK2[30]), 
		 -> lastToken(BANK3[30]), readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), 
		 -> ustep(BANK0[1]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> lastToken(BANK3[30]), writeBuffer(BANK3[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S4764$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4764$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 640
		 -> executeCommand@strCommand(BANK2[30]), executeCommand@comando(BANK2[100]), lastToken(BANK3[30]), USBCommandFetch@readTokens(BANK2[64]), 
		 -> readBuffer(BANK3[32]), fila(BIGRAMl[640]), writeBuffer(BANK3[32]), USBAlternateInterface(BANK1[2]), 
		 -> BDT(BIGRAMl[48]), UEP1(BITBIGSFRlhhllllll[1]), 

    memset@s	PTR unsigned char  size(2) Largest target is 640
		 -> executeCommand@strCommand(BANK2[30]), executeCommand@comando(BANK2[100]), lastToken(BANK3[30]), USBCommandFetch@readTokens(BANK2[64]), 
		 -> readBuffer(BANK3[32]), fila(BIGRAMl[640]), writeBuffer(BANK3[32]), USBAlternateInterface(BANK1[2]), 
		 -> BDT(BIGRAMl[48]), UEP1(BITBIGSFRlhhllllll[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 640
		 -> executeCommand@strCommand(BANK2[30]), fila(BIGRAMl[640]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 640
		 -> executeCommand@strCommand(BANK2[30]), fila(BIGRAMl[640]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), fila(BIGRAMl[640]), 
		 -> RAM(DATA[2047]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), fila(BIGRAMl[640]), 
		 -> RAM(DATA[2047]), NULL(NULL[0]), 

    MCC_USB_WRITE@str	PTR unsigned char  size(2) Largest target is 32
		 -> writeBuffer(BANK3[32]), 

    executeCommand@TokensCom	PTR unsigned char [20] size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    USBCommandFetch@readTokens	PTR unsigned char [32] size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    G_97@axis	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    G_53@axis	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    G_01@axis	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), lastToken(BANK3[30]), getComands@buff(BANK1[10]), 

    getComands@tokens	PTR PTR unsigned char  size(2) Largest target is 40
		 -> executeCommand@TokensCom(BANK2[40]), 

    getComands@comandos	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    getTokens@str	PTR unsigned char  size(2) Largest target is 30
		 -> executeCommand@strCommand(BANK2[30]), 

    getTokens@token	PTR PTR unsigned char  size(2) Largest target is 40
		 -> executeCommand@TokensCom(BANK2[40]), 

    FilaPop@str	PTR unsigned char  size(2) Largest target is 30
		 -> executeCommand@strCommand(BANK2[30]), 

    Fila_Agregar@comando	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    IOCC2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Encoder_ISR(), IOCC2_DefaultInterruptHandler(), 

    IOCC2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Encoder_ISR(), IOCC2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timing_TMR0_ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timing_TMR0_ISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> G01_TMR2_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> G01_TMR2_ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR3_DefaultInterruptHandler(), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 32
		 -> writeBuffer(BANK3[32]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> readBuffer(BANK3[32]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned short  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned short  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1778_POINTER$wRom	PTR const unsigned short  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S1778_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1778_POINTER$wRam	PTR unsigned short  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned short  size(2) Largest target is 0

    S1778_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITBIGSFRlhl[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 640
		 -> executeCommand@strCommand(BANK2[30]), fila(BIGRAMl[640]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[22]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITBIGSFRlhl[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S95$wRam	PTR unsigned short  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S71$wRam	PTR unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 640
		 -> executeCommand@strCommand(BANK2[30]), executeCommand@comando(BANK2[100]), lastToken(BANK3[30]), USBCommandFetch@readTokens(BANK2[64]), 
		 -> readBuffer(BANK3[32]), fila(BIGRAMl[640]), writeBuffer(BANK3[32]), USBAlternateInterface(BANK1[2]), 
		 -> BDT(BIGRAMl[48]), UEP1(BITBIGSFRlhhllllll[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR2_ISR->_G01_TMR2_ISR
    _G01_TMR2_ISR->i2___flsub
    i2___fltol->i2___flmul
    _Timing_TMR0_ISR->_TMR0_WriteTimer
    _IOCC2_ISR->_Encoder_ISR
    _Encoder_ISR->i2___flsub
    i2___flsub->i2___fladd
    i2___fladd->i2___flmul
    i2___flmul->i2___fldiv
    i2___fldiv->i2___xxtofl
    _Actualizar_angulo->i2___lbmod

Critical Paths under _main in BANK0

    _medir_corriente->_ADC_GetConversionResult
    _SYSTEM_Initialize->_USBDeviceInit
    _USBDeviceInit->_memset
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCC2_SetInterruptHandler
    _executeCommand->___fltol
    _getTokens->_strtok
    _strtof->___flmul
    _toupper->_islower
    _isxdigit->_isdigit
    _M_4->_DireccionRotor
    _M_3->_DireccionRotor
    _G_53->___wmul
    _mover_2->___fltol
    _FilaPop->_memcpy
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    ___fltol->___flmul
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _Fila_Init->_memset
    _MCC_USB_READ->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _Fila_Agregar->_memcpy
    _MCC_USB_WRITE->_putUSBUSART
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_G01_TMR2_ISR
    _IOCC2_ISR->_Encoder_ISR

Critical Paths under _main in BANK1

    _main->_USBCommandFetch
    _executeCommand->_sprintf
    _getComands->_strtof
    _strtof->___flge
    _G_97->___fldiv
    _G_01->_mover_2
    _mover_2->___flge
    _USBCommandFetch->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___flmul
    ___flge->___fldiv
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_executeCommand

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  395305
                                            190 BANK1      1     1      0
                       _CDCTxService
                      _MCC_USB_WRITE
                    _USBCommandFetch
                     _executeCommand
                _inicializar_Sistema
                    _medir_corriente
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _medir_corriente                                      0     0      0       0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              4     2      2       0
                                             44 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _inicializar_Sistema                                  0     0      0    9692
                  _ADC_SelectChannel
                          _Fila_Init
          _IOCC2_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                     _TMR2_StopTimer
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0    5136
                     _ADC_Initialize
                    _CCP2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    4425
                                             56 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0     111
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR3_SetInterruptHandler                             2     0      2     111
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     200
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      2     2      0     200
                                             46 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     200
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCC2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _IOCC2_SetInterruptHandler                            2     0      2     200
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                             44 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _executeCommand                                     175   175      0  194580
                                            186 BANK1      1     1      0
                                              0 BANK2    174   174      0
                            _FilaPop
                               _G_01
                               _G_53
                               _G_97
                                _M_3
                                _M_4
                                _M_5
                            ___fltol
                         _getComands
                          _getTokens
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _getTokens                                           11     7      4    3558
                                             60 BANK0     11     7      4
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _getComands                                          22    17      5   39882
                                             71 BANK1     22    17      5
                             _strcpy
                             _strtof
 ---------------------------------------------------------------------------------
 (3) _strtof                                              21    17      4   37416
                                             50 BANK1     21    17      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              6     4      2     529
                                             50 BANK0      6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              6     4      2     187
                                             44 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4     112
                                             44 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _isxdigit                                             8     6      2    1583
                                             50 BANK0      7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     422
                                             44 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _M_5                                                  4     0      4     208
                                             44 BANK0      4     0      4
                        _apagarRotor
 ---------------------------------------------------------------------------------
 (2) _G_97                                                 5     1      4    7774
                                             70 BANK0      1     1      0
                                             38 BANK1      4     0      4
                                _M_3
                                _M_4
                            ___fldiv
                             ___fleq
                      _encenderRotor
 ---------------------------------------------------------------------------------
 (3) _encenderRotor                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _M_4                                                  4     0      4     556
                                             46 BANK0      4     0      4
                     _DireccionRotor
 ---------------------------------------------------------------------------------
 (2) _M_3                                                  4     0      4     556
                                             46 BANK0      4     0      4
                     _DireccionRotor
 ---------------------------------------------------------------------------------
 (3) _DireccionRotor                                       2     0      2     200
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _G_53                                                 8     4      4   11408
                                             50 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _G_01                                                14    10      4   39581
                                             60 BANK1     14    10      4
           _TMR2_SetInterruptHandler
                            ___fldiv
                            ___flsub
                             ___wmul
                            _mover_2
 ---------------------------------------------------------------------------------
 (3) _mover_2                                             10     6      4   17144
                                             50 BANK1     10     6      4
            _TMR2_LoadPeriodRegister
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setMicroStep
 ---------------------------------------------------------------------------------
 (4) _setMicroStep                                         3     3      0      22
                                             44 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                             44 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) _TMR2_WriteTimer                                      1     1      0      22
                                             44 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             44 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TMR2_SetInterruptHandler                             2     0      2     200
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FilaPop                                              2     0      2    1752
                                             55 BANK0      2     0      2
                            ___lbmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _USBCommandFetch                                     74    74      0  101466
                                            186 BANK1      4     4      0
                                              0 BANK2     70    70      0
                       _Fila_Agregar
                       _MCC_USB_READ
                   _ParadaEmergencia
                             _memset
                            _sprintf
                             _strcpy
                             _strlen
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    3056
                                             56 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     881
                                             49 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     881
                                             49 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strchr                                               5     1      4     540
                                             44 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             32    15     17   82860
                                            156 BANK1     30    13     17
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   81894
                                            150 BANK1      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   81289
                                            120 BANK1     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     4      5     949
                                             44 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3823
                                             53 BANK0      5     1      4
                                              0 BANK1     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   43093
                                             58 BANK1     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1259
                                             50 BANK0      6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     635
                                             44 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1593
                                             44 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     697
                                             38 BANK1     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     403
                                             44 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1099
                                             70 BANK0      2     2      0
                                             38 BANK1      8     4      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5403
                                             13 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4078
                                             44 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     377
                                             44 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    6310
                                             58 BANK0     12     4      8
                                              0 BANK1     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1860
                                             38 BANK1     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1546
                                             44 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4691
                                             13 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     641
                                             44 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     653
                                             44 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    9861
                                              0 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    7497
                                             60 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     546
                                             44 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2953
                                             53 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     197
                                             62 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     641
                                             44 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     653
                                             44 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2899
                                             53 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    2397
                                             44 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2   12958
                                             51 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     391
                                             44 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2    1155
                                             44 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4   10946
                                             44 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ParadaEmergencia                                     0     0      0    4134
                          _Fila_Init
                     _TMR2_StopTimer
                        _apagarRotor
 ---------------------------------------------------------------------------------
 (3) _apagarRotor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fila_Init                                            0     0      0    4134
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    4134
                                             44 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _MCC_USB_READ                                         0     0      0    2232
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         4     1      3    2232
                                             53 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _Fila_Agregar                                         4     0      4    2126
                                             55 BANK0      4     0      4
                            ___lbmod
                             _memcpy
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    1039
                                             44 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     578
                                             44 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _MCC_USB_WRITE                                        4     0      4     444
                                             47 BANK0      4     0      4
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     0      3     222
                                             44 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         2     2      0    2129
                                             53 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 9     5      4    1928
                                             44 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         12    12      0   50937
                                             32 BANK0     12    12      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR2_ISR
                           _TMR3_ISR
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   31575
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0    1728
                                             12 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    1     1      0   18142
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   17692
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  2     2      0   13721
                                             27 COMRAM     2     2      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    5446
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                           12     6      6    1437
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              4     4      0      46
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             7     7      0    4350
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _CDCInitEP                                           0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i2_USBTransferOnePacket                              9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (14) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0     255
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_WriteTimer                                     2     0      2     255
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0    9365
                   Absolute function *
                       _G01_TMR2_ISR *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _G01_TMR2_ISR                                        8     8      0    9365
                                             88 COMRAM     2     2      0
                                              0 BANK0      6     6      0
                            ___lwdiv
          i2_TMR2_LoadPeriodRegister
                   i2_TMR2_StopTimer
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flsub
                          i2___fltol
                         i2___xxtofl
                     i2_setMicroStep
 ---------------------------------------------------------------------------------
 (13) i2_setMicroStep                                      3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) i2___fltol                                          10     6      4     281
                                             64 COMRAM    10     6      4
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_TMR2_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_TMR2_LoadPeriodRegister                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) ___lwdiv                                             7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     223
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                    _Timing_TMR0_ISR *
 ---------------------------------------------------------------------------------
 (12) _Timing_TMR0_ISR                                     0     0      0     223
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    9519
                          _IOCC2_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCC2_ISR                                           0     0      0    9519
                   Absolute function *
                        _Encoder_ISR *
      _IOCC2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _IOCC2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _Encoder_ISR                                        34    34      0    9519
                                             88 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                  _Actualizar_angulo
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flsub
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (13) i2___xxtofl                                         14    10      4     426
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) i2___flsub                                           8     0      8    2497
                                             80 COMRAM     8     0      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___fladd                                          16     8      8    2244
                                             64 COMRAM    16     8      8
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___flmul                                          25    17      8    1935
                                             39 COMRAM    25    17      8
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___flge                                           12     4      8     234
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) i2___fldiv                                          25    17      8    1329
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_WriteTimer                                     2     0      2     223
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _Actualizar_angulo                                   0     0      0     211
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (15) i2___lbmod                                           4     3      1     211
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCTxService
     _USBTransferOnePacket
   _MCC_USB_WRITE
     _putUSBUSART
   _USBCommandFetch
     _Fila_Agregar
       ___lbmod
       _memcpy
       _strlen (ARG)
     _MCC_USB_READ
       _getsUSBUSART
         _USBTransferOnePacket
     _ParadaEmergencia
       _Fila_Init
         _memset
       _TMR2_StopTimer
       _apagarRotor
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
               ___wmul (ARG)
             ___fltol
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _stoa
             _fputc
             _strlen
           _strncmp
           _tolower
     _strcpy
     _strlen
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _executeCommand
     _FilaPop
       ___lbmod
       _memcpy
     _G_01
       _TMR2_SetInterruptHandler
       ___fldiv
       ___flsub
       ___wmul
       _mover_2
         _TMR2_LoadPeriodRegister
         _TMR2_StartTimer
         _TMR2_WriteTimer
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___fltol
         ___xxtofl
         _setMicroStep
     _G_53
       ___wmul
     _G_97
       _M_3
         _DireccionRotor
       _M_4
         _DireccionRotor
       ___fldiv
       ___fleq
       _encenderRotor
     _M_3
     _M_4
     _M_5
       _apagarRotor
     ___fltol
     _getComands
       _strcpy
       _strtof
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___lmul
         ___wmul
         ___xxtofl
         _isdigit
         _isspace
         _isxdigit
           _isdigit
         _nanf
         _toupper
           _islower
     _getTokens
       _strtok
     _memset
     _sprintf
   _inicializar_Sistema
     _ADC_SelectChannel
     _Fila_Init
     _IOCC2_SetInterruptHandler
     _SYSTEM_Initialize
       _ADC_Initialize
       _CCP2_Initialize
       _INTERRUPT_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
         _IOCC2_SetInterruptHandler
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _TMR3_Initialize
         _TMR3_SetInterruptHandler
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _TMR0_SetInterruptHandler
     _TMR0_StartTimer
     _TMR2_StopTimer
     _TMR3_StopTimer
   _medir_corriente
     _ADC_GetConversionResult
     _ADC_IsConversionDone
     _ADC_StartConversion
   _memset
   _sprintf

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCC2_ISR
       Absolute function(Fake) *
       _Encoder_ISR *
         _Actualizar_angulo
           i2___lbmod
         _TMR0_ReadTimer
         _TMR0_WriteTimer
         i2___fladd
           i2___fldiv (ARG)
             i2___xxtofl (ARG)
           i2___flmul (ARG)
             i2___fldiv (ARG)
             i2___xxtofl (ARG)
           i2___xxtofl (ARG)
         i2___fldiv
         i2___flge
         i2___flmul
         i2___flsub
           i2___fladd
           i2___fldiv (ARG)
           i2___flmul (ARG)
           i2___xxtofl (ARG)
         i2___xxtofl
       _IOCC2_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timing_TMR0_ISR *
       _TMR0_WriteTimer
   _TMR2_ISR
     Absolute function(Fake) *
     _G01_TMR2_ISR *
       ___lwdiv
       i2_TMR2_LoadPeriodRegister
       i2_TMR2_StopTimer
       i2___fladd
       i2___fldiv
       i2___flmul
       i2___flsub
       i2___fltol
         i2___flmul (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl
       i2_setMicroStep
     _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USER_USB_CALLBACK_EVENT_HANDLER
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     280      44       62.6%
BIGRAMhh           280      0       0      42        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CF      11       80.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     AE     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BF      E5       7       89.5%
BIGRAMhl            C0      0       0      43        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      74       5       72.5%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRhhlhhh     19      0       0      21        0.0%
BITBIGSFRlhhlll     15      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhll         B      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      40        0.0%
BITBIGSFRhlhhlh      7      0       0      24        0.0%
BITBIGSFRlhhlll      4      0       0      33        0.0%
BITBIGSFRhlhl        4      0       0      26        0.0%
BITBIGSFRlhhlll      3      0       0      31        0.0%
BITBIGSFRhlhhll      3      0       0      25        0.0%
BITBIGSFRlhhlll      2      0       0      36        0.0%
BITBIGSFRlllllh      2      0       0      39        0.0%
BITBIGSFRlhhlll      2      0       0      32        0.0%
BITBIGSFRlhl         2      0       0      38        0.0%
BITBIGSFRlhhlll      1      0       0      34        0.0%
BITBIGSFRlhhlll      1      0       0      35        0.0%
BITBIGSFRlhhllh      1      0       0      30        0.0%
BITBIGSFRhhlhl       1      0       0      22        0.0%
BITBIGSFRlhhlh       1      0       0      29        0.0%
BITBIGSFRlhhh        1      0       0      28        0.0%
BITBIGSFRhhll        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     386      41        0.0%
DATA                 0      0     606       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 16 21:20:20 2022

         __end_of_TMR2_SetInterruptHandler 05C8                                          _F 02D0  
                               _USB_SD_Ptr 0801                                          _S 02F6  
                             ___fldiv@aexp 0125                               ___fldiv@bexp 0124  
                             ___fldiv@sign 011D                               ___awdiv@sign 0091  
                            _USBDeviceInit 57DE                        ___wmul@multiplicand 008E  
                          _timer0ReloadVal 01C9                 ?_IOCC2_SetInterruptHandler 008C  
     USER_USB_CALLBACK_EVENT_HANDLER@event 000D       USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
              __end_of_USBStdGetDscHandler 544A                                        l196 02AC  
                                      l533 5BCA                                        l197 02AA  
                                      l528 5B82                                        l629 052E  
                            ?_MCC_USB_READ 0001                                        _BDT 000400  
                                      _PR2 000FBB                                        _M_3 0566  
                                      _M_4 0558                                        _M_5 05EC  
                                      _UIE 000F64                                        _UIR 000F65  
                              i2___fladd@a 0045                                i2___fladd@b 0041  
                USBCommandFetch@readTokens 0200                            _timer1ReloadVal 02D8  
                                      _abs 00B0                                        _pad 716A  
                              i2___fldiv@a 0013                                i2___fldiv@b 000F  
                               _USBSuspend 025C                               ___awmod@sign 0091  
                               i2___xxtofl 5098                       USBStdSetCfgHandler@i 0015  
                          _TMR2_Initialize 7FE0                                        prod 000FF3  
                                      tosl 000FFD                                        wreg 000FE8  
                              i2___flmul@a 002C                                i2___flmul@b 0028  
                           _USBDeviceTasks 590C                                i2___flsub@a 0055  
                              i2___flsub@b 0051                             _USBDeviceState 005D  
                             ___flmul@aexp 0101                               ___flmul@bexp 0102  
                             ___flmul@sign 0100                               ___flmul@temp 010B  
                             ___flmul@prod 0107                      ??_USBCtrlTrfRxService 0001  
                           ??_getsUSBUSART 0098                   USBEnableEndpoint@options 0009  
                                     ?_M_3 008E                                       ?_M_4 008E  
                                     ?_M_5 008C                               ___fltol@exp1 00A7  
                        _Actualizar_angulo 7DB0                                       M_3@n 0090  
                                     M_4@n 0090                                       M_5@n 008E  
                                     ?_abs 009E                                       l1028 7956  
                                     l1221 76C8                                       l1223 76D0  
                                     l1207 44EA                                       l2008 3A2C  
                                     l1224 76D8                                       l2009 3A28  
                                     l1225 76E0                                       l1402 038E  
                                     l1226 76E8                                       l2027 264A  
                                     l1227 76F0                                       l2044 291C  
                                     l2036 2892                                       l2037 288C  
                                     l2150 7198                                       l1408 041C  
                                     l2075 5014                            _timer3ReloadVal 02DE  
                                     l2068 4F96                                       l2229 1946  
                                     l2166 7110                                       l2360 00D8  
                                     l2177 3DD2                                       l2257 1CBA  
                                     l2179 3DDA                                       l2700 7E5E  
               USBConfigureEndpoint@handle 0007                                       l2293 4D2A  
                                     l2711 7E96                                       l2385 5D84  
                                     l2570 0F98                            ??_encenderRotor 008C  
                                     l2397 4C24                                       l2581 10E2  
                                     l1678 665E                                       l1942 2DC0  
                                     l2590 119C                                       l1943 2D9E  
                                     l2496 158E                                       l2588 1194  
                                     l2669 6D72                                       l2589 113A  
                                     l1958 2E92                                       ?_pad 009C  
                                     l1967 2EF8                                       l1968 2EF4  
                                     l1997 39BE                                       STR_1 08A8  
                                     STR_2 08D3                                       STR_3 08CE  
                                     STR_4 08D8                                       STR_5 08E0  
                                     STR_8 08DC                                       STR_9 08E4  
                                     l9969 76F8                                       l9997 7968  
                                     _G_01 46CC                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _G_53 6C0C                                       _G_97 51D8  
                    ??_USBCtrlTrfTxService 0001                                       _UCFG 000F62  
                                     _UEP0 000F6A                                       _UEP1 000F6B  
                                     _UEIE 000F66                                       _UEIR 000F67  
                                     _UCON 000F60                                       _TMR1 000FCE  
                                     _TMR2 000FBC                                       _TMR3 000FB2  
                                     _WPUB 000F85                             ?_MCC_USB_WRITE 008F  
                         _ParadaEmergencia 0338                               i2___flge@ff1 0001  
                             i2___flge@ff2 0005                         ?_Actualizar_angulo 0001  
                     __end_of_Fila_Agregar 7958                            _CDCDataInHandle 02E0  
   USBStdFeatureReqHandler@current_ep_data 0019                                       abs@a 009E  
                                     _pDst 01CD                                       _feed 02EE  
                                     _dbuf 0312                    __end_of_CCP2_Initialize 0558  
                                     _flag 01D2                                       _cola 01D5  
                                     _fila 0580                                       _atoi 5C7A  
                                     _ctoa 70CE                                       _main 6D7C  
                                     _dtoa 3D5C                                       _nanf 03F2  
                   __end_ofi2_setMicroStep 778E                                       _busy 01D4  
                 ??i2_USBTransferOnePacket 0005                                       _prec 00C2  
                          _TMR0_StartTimer 05FE                                       _nout 02CE  
                                     pad@i 00A3                                       pad@p 00A0  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                _BaudRateGen 030E  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 00A5                                       fsr2l 000FD9  
                          _USBDeviceAttach 028A                                       _stoa 4CBC  
                                     btemp 005F                           mover_2@distancia 0132  
                            ___fpclassifyf 683C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 00AC  
                             i2___fltol@f1 0041                            ___fldiv@new_exp 011E  
                          _TMR3_Initialize 02B6                        __end_of_Encoder_ISR 384A  
                          __end_of_FilaPop 7BD8                 __end_of_USBCheckStdRequest 6342  
                   ??_USBCtrlTrfOutHandler 0003                        ??_Actualizar_angulo 0005  
                             ___param_bank 000000                  ??_USBStdFeatureReqHandler 0015  
                                    ??_M_3 0092                                      ??_M_4 0092  
                                    ??_M_5 0090                   ??_USBStdGetStatusHandler 0001  
                                    ??_abs 00A0                                      ??_pad 00A2  
                           ?_USBDeviceInit 0001                                      G_01@i 0146  
                                    G_01@n 013E                                      ?_G_01 013C  
                                    ?_G_53 0092                    __end_of_TMR0_Initialize 7E2E  
                                    G_53@i 0098                                      ?_G_97 0126  
                                    G_53@n 0094                                      G_97@n 0128  
           ??_TMR0_DefaultInterruptHandler 0001              __end_of_OSCILLATOR_Initialize 0534  
                                    l10001 797C                                      l10011 4FA6  
                                    l10021 4FD6                                      l10031 5046  
                                    l10023 4FFC                                      l10017 4FC4  
                                    l10019 4FCA                                      l10029 503A  
                                    l10047 5086                                      l13011 38BC  
                                    l13103 3ACA                                      l13007 38B8  
                                    l13105 3ACC                                      l13033 391E  
                                    l13025 3906                                      l13201 2846  
                                    l13051 3996                                      l13043 396E  
                                    l13019 38F0                                      l13301 7600  
                                    l13221 28DA                                      l13125 25DE  
                                    l14013 4D84                                      l14005 4D42  
                                    l14103 548E                                      l14031 5C8C  
                                    l13311 7622                                      l13063 39D4  
                                    l13143 2632                                      l13127 25E4  
                                    l13119 25BE                                      l14023 4DCC  
                                    l11561 03CA                                      l14041 5CD6  
                                    l13321 7644                                      l13305 760C  
                                    l13057 39BC                                      l13225 28F8  
                                    l13153 266C                                      l13145 2638  
                                    l13137 2612                                      l13129 25F6  
                                    l13401 6580                                      l14009 4D5C  
                                    l14123 5572                                      l14115 552A  
                                    l14051 5D36                                      l14043 5CDA  
                                    l14035 5C8E                                      l14027 4DE6  
                                    l14019 4DAC                                      l15005 0254  
                                    l14117 555C                                      l14109 54F2  
                                    l14045 5D02                                      l13325 7652  
                                    l13317 763A                                      l13309 761A  
                                    l13093 3A94                                      l13069 39F2  
                                    l13341 7564                                      l13333 7512  
                                    l13237 293A                                      l13501 4CAA  
                                    l14221 2114                                      l12277 049C  
                                    l14039 5CCE                                      l13423 7182  
                                    l13271 75AA                                      l13263 758C  
                                    l12711 2CF6                                      l13415 65B6  
                                    l13407 6588                                      l15015 78B4  
                                    l15111 74B8                                      l14137 5ED8  
                                    l14129 5EAE                                      l13601 7104  
                                    l13433 71BA                                      l13281 75CA  
                                    l13257 757C                                      l13097 3ABE  
                                    l13089 3A70                                      l13337 7546  
                                    l13353 6632                                      l13409 6598  
                                    l14313 254C                                      l14225 211E  
                                    l15017 78E2                                      l13611 7132  
                                    l13427 7190                                      l13363 6696  
                                    l13195 2828                                      l13371 0132  
                                    l12707 2CF2                                      l14067 61A0  
                                    l14307 2514                                      l14219 20FA  
                                    l14323 256E                                      l15107 7482  
                                    l14411 5874                                      l14149 5F50  
                                    l13517 7DA8                                      l12653 6FA8  
                                    l13437 71E6                                      l13429 71A2  
                                    l13269 75A2                                      l13285 75D4  
                                    l13357 6648                                      l13349 65FE  
                                    l12813 2EB6                                      l12805 2E82  
                                    l13381 651A                                      l13453 68B6  
                                    l14069 61AE                                      l14317 2558  
                                    l14237 21DC                                      l15141 4766  
                                    l13615 715C                                      l13607 711A  
                                    l12903 4E38                                      l12663 01DC  
                                    l12823 2ECC                                      l12719 2D16  
                                    l13463 6900                                      l13703 1642  
                                    l13711 1658                                      l14271 236E  
                                    l14247 223E                                      l14087 7F2A  
                                    l14351 7A5E                                      l15143 476A  
                                    l15119 6348                                      l15127 6418  
                                    l12665 01E2                                      l13625 3DB2  
                                    l13289 75E2                                      l12761 2DAC  
                                    l13457 68C0                                      l13721 16BC  
                                    l14281 23E0                                      l14361 7AB6  
                                    l14353 7A66                                      l15137 46EE  
                                    l14345 7840                                      l14443 7C78  
                                    l14451 7C98                                      l12915 4E86  
                                    l12931 4F0C                                      l13643 3E0C  
                                    l12763 2DB0                                      l12683 2CAA  
                                    l13483 4B8A                                      l13811 19E8  
                                    l13723 16DE                                      l14259 22EC  
                                    l15163 6C16                                      l15171 6CAA  
                                    l15421 5B8C                                      l12917 4E9A  
                                    l12909 4E60                                      l13653 3F0C  
                                    l12861 2F6C                                      l12829 2ED6  
                                    l12749 2D52                                      l13397 656C  
                                    l13493 4C46                                      l13821 1A22  
                                    l13805 19C4                                      l13741 1796  
                                    l14533 6D6A                                      l14525 6D24  
                                    l14517 6CE6                                      l15157 48E2  
                                    l15149 47BC                                      l14621 0B82  
                                    l14605 0AF4                                      l14541 090A  
                                    l15415 5B74                                      l12935 4F32  
                                    l12927 4EF6                                      l12951 5A84  
                                    l13639 3DFA                                      l12863 2F6E  
                                    l12687 2CAE                                      l13903 1DCC  
                                    l13911 1E64                                      l13815 19F8  
                                    l14359 7AAE                                      l15159 48E8  
                                    l14607 0AF6                                      l14615 0B46  
                                    l14383 5818                                      l15441 5BEC  
                                    l15433 5BCE                                      l13673 3F7A  
                                    l12857 2F64                                      l12849 2F3E  
                                    l12785 2E06                                      l12777 2DE4  
                                    l13497 4C7C                                      l13753 180E  
                                    l13729 1710                                      l14297 24B8  
                                    l14289 2446                                      l15169 6CA6  
                                    l15193 529A                                      l14705 0E5E  
                                    l14633 0BE0                                      l14617 0B5A  
                                    l14561 0988                                      l14545 090E  
                                    l15601 4A1A                                      l15451 5C18  
                                    l15427 5BB8                                      l14491 72E0  
                                    l13595 70E2                                      l12971 5B36  
                                    l12963 5AFA                                      l12955 5A9E  
                                    l12947 5A60                                      l12875 7EAA  
                                    l12787 2E0A                                      l12795 2E1C  
                                    l13923 1EAC                                      l13843 1BC8  
                                    l13763 18D4                                      l13739 1774  
                                    l13747 17C8                                      l13691 1610  
                                    l15531 429A                                      l15195 52AC  
                                    l14803 10FA                                      l14707 0E62  
                                    l14651 0C3A                                      l14635 0BE2  
                                    l14619 0B80                                      l14563 098E  
                                    l14555 0978                                      l15603 4A32  
                                    l15611 4A4C                                      l14395 5842  
                                    l13597 70EE                                      l12957 5AB2  
                                    l13677 3F92                                      l13941 1F04  
                                    l13861 1CB2                                      l13829 1B18  
                                    l13757 184A                                      l15189 524E  
                                    l14821 11A2                                      l14733 0EE0  
                                    l14661 0CA4                                      l14709 0E66  
                                    l14581 0A1E                                      l14565 0990  
                                    l14557 097E                                      l15621 4AC6  
                                    l15613 4A8A                                      l15471 5C76  
                                    l14495 72FE                                      l12967 5B10  
                                    l12879 7EC0                                      l12991 387C  
                                    l12887 79BE                                      l13951 1F5C  
                                    l13863 1CD4                                      l13855 1C90  
                                    l13775 192C                                      l13759 189A  
                                    l15551 43F0                                      l15543 432E  
                                    l14831 11E2                                      l14743 0F24  
                                    l14735 0EE2                                      l14719 0EA4  
                                    l14671 0D20                                      l14639 0BFA  
                                    l14583 0A3E                                      l15607 4A36  
                                    l15449 5C0E                                      l14489 72DA  
                                    l13961 1F88                                      l13793 19A2  
                                    l13785 1958                                      l15561 4460  
                                    l15553 441A                                      l14913 14AA  
                                    l14905 1488                                      l14729 0ED2  
                                    l14585 0A44                                      l15617 4A96  
                                    l15625 4ADE                                      l15467 5C54  
                                    l15459 5C3A                                      l14499 7324  
                                    l12987 3878                                      l13939 1EFA  
                                    l13875 1D58                                      l13795 19A6  
                                    l13779 1950                                      l15555 4420  
                                    l14923 1536                                      l14771 0FEE  
                                    l14739 0F00                                      l14675 0D34  
                                    l14667 0D12                                      l14587 0A46  
                                    l15619 4AAE                                      l15469 5C58  
                                    l14933 157C                                      l14917 14EA  
                                    l14909 149A                                      l14861 131A  
                                    l14837 11F6                                      l14765 0FD0  
                                    l14749 0F52                                      l14677 0D38  
                                    l13975 1FD6                                      l13983 201E  
                                    l13887 1D88                                      l13895 1DA8  
                                    l14919 14F8                                      l14791 1086  
                                    l14783 1042                                      l14775 1006  
                                    l14759 0FA4                                      l14961 44EE  
                                    l14881 13AA                                      l14873 1348  
                                    l14865 1326                                      l14777 1016  
                                    l14689 0D86                                      l15593 49E8  
                                    l15577 4950                                      l13995 4CE6  
                                    l14963 44F6                                      l14939 15B6  
                                    l14891 1408                                      l14787 105E  
                                    l14699 0DF0                                      l14981 46BA  
                                    l14885 13BA                                      l15597 4A16  
                                    l15669 6D80                                      l14975 4694  
                                    l14967 450A                                      l14895 1442  
                                    l14889 13F6                             ??_MCC_USB_READ 0099  
                              _writeBuffer 0382                                      l14979 469C  
                                    l14997 023C                              ___fltol@sign1 00A6  
                          __end_of___aodiv 4F54                                      ?_atoi 0093  
                                    ?_ctoa 0095                            __end_of___fladd 2F8A  
                                    ?_main 0001                                      ?_dtoa 0100  
                                    ?_nanf 008C                            __end_of___aomod 5B58  
                          __end_of___fldiv 3AD4                            __end_of___awdiv 75EC  
                          __end_of___flneg 0144                                      STR_12 08EC  
                                    STR_30 08D2                                      STR_14 08EC  
                                    STR_22 08C5                                      STR_23 08BC  
                                    STR_17 08E8                                      STR_27 08E4  
                                    STR_19 08E8                                      STR_28 08DC  
                          __end_of___awmod 765C                            __end_of___lbmod 025C  
                          __end_of___flmul 2950                  TMR0_ReadTimer@readValHigh 0008  
                          __end_of___flsub 7C20                            __end_of___fltol 65C8  
        __end_of_IOCC2_SetInterruptHandler 05AA                                      ?_stoa 0095  
                                    u11010 5050                                      u10260 7FA6  
                                    u10270 7FA8                                      _T0CON 000FD5  
                          ___awdiv@divisor 008E                                      _T1CON 000FCD  
                   __end_of_USBDeviceTasks 5A34                                      _T2CON 000FBA  
                                    u13270 057C                                      _T3CON 000FB1  
                                    u15130 3A22                                      u14500 2D84  
                                    u16110 3DF2                                      u15310 2884  
                                    u14510 2D86                                      u10895 0588  
                                    u14360 6FA0                                      u16120 3F1C  
                                    u10896 058A                                      u16050 3D84  
                                    u15410 75AE                                      u15170 3A7E  
                ?_USBCtrlEPServiceComplete 0001                                      u14380 6FE8  
                                    u16140 3F3E                                      u16060 3D86  
                                    u15180 3AA2                                      u14540 2DC8  
                                    u16300 18FC                                      u16220 1630  
                                    u17020 2154                                      u16141 3F3C  
                                    u16150 3F4C                                      u15350 28E8  
                                    u15270 2658                                      u16160 3F52  
                                    u15520 7560                                      u15360 2906  
                                    u15600 653A                                      u14800 7FD8  
                                    u16400 19C0                                      u17120 2494  
                                    u17200 7AEA                                      u16090 3DC6  
                                    u14490 2D74                                      u14810 7FDA  
                                    u16330 193A                                      u18010 11CA  
                                    u15700 00BE                                      u16180 3F62  
                                    u14820 79F8                                      u15605 652E  
                                    u15470 7626                                      u14750 2F4A  
                                    u14670 2EDA                                      u15710 687C  
                                    u17070 2272                                      u17150 7814  
                                    u18030 11F2                                      u15640 659E  
                                    u15800 4B78                                      u16360 1972  
                                    u17160 783C                                      u14690 2EEE  
                                    u15715 6870                                      u14827 79EE  
                                    u17260 72B0                                      u15900 010E  
                                    u14940 5AB6                                      u17180 7A9A  
                                    u17420 09F2                                      u17340 0922  
                                    u14861 4E66                                      u15590 6506  
                                    u16470 1BB8                                      u17350 0924  
                                    u19030 497E                                      u15920 7DA4  
                                    u14880 4E9E                                      u15760 68F8  
                                    u15840 4C0A                                      u15825 4BA2  
                                    u15770 68FA                                      u15826 4BA8  
                                    u16650 1F72                                      u16730 4D78  
                                    u17530 0B1C                                      u17370 0966  
                                    u15755 68DA                                      u15827 4BB6  
                                    u18340 7914                                      u15860 4C64  
                                    u16820 61CE                                      u18420 481C  
                                    u15845 4C00                                      u15790 4B58  
                                    u16670 1FCE                                      u16590 1E88  
                                    u18270 458E                                      u16760 4E02  
                                    u17480 0AA8                                      u15865 4C5A  
                                    u16681 4CC6                                      u15890 010C  
                                    u18450 6C66                                      u17730 0E24  
                                    u17650 0CD8                                      u19170 6D94  
                          __end_of___lwdiv 7A54                                      u15795 4B4E  
                                    u16827 61C4                                      u16860 6224  
                                    u17900 104E                                      u17820 0F80  
                                    u17740 0E4A                                      u17660 0CFE  
                                    u17580 0BC4                                      u16790 5D62  
                                    u16870 6244                                      u17910 106E  
                                    u17750 0E6A                                      u18480 51F0  
                                    u19176 6D96                                      u16865 621E  
                                    u17745 0E40                                      u17665 0CF4  
                                    u16867 6214                                      u19187 6E24  
                                    u18900 5C42                                      u16877 623A  
                                    u19197 52A2                                      u17925 108A  
                                    u17935 10C2                                      u18980 43A8  
                                    i2l221 6108                                      i2l147 5934  
                                    i2l332 6A8C                                      i2l157 59C2  
                          _TMR0_WriteTimer 05D2                                      i2l159 59CA  
                                    i2l361 3FEE                                      i2l346 6270  
                                    i2l355 62BC                                      i2l372 4114  
                                    i2l284 6E3C                                      i2l287 6ECE  
                                    i2l480 6AE2                                      i2l288 6E4E  
                                    i2l289 6E54                                      i2l297 7D2C  
                                    i2l482 6B18                                      i2l581 0052  
                                    i2l584 0062                                      i2l673 04FE  
                                    i2l585 0078                                      i2l586 006E  
                                    i2l579 0046                                      _UADDR 000F63  
                          ___awdiv@counter 0090                           ?_Timing_TMR0_ISR 0001  
                             vfpfcnvrt@fmt 017A                                      _TMR0H 000FD7  
                                    _TMR1H 000FCF                                      _TMR0L 000FD6  
                                    _TMR3H 000FB3                                      _TMR1L 000FCE  
                                    _TMR3L 000FB2                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F61                        ___lmul@multiplicand 0090  
                ?_TMR0_SetInterruptHandler 008C                              i2___fladd@grs 0050  
                               i2memcpy@d1 0001                  ?_TMR3_SetInterruptHandler 008C  
                               i2memcpy@s1 0003                  __end_of_Actualizar_angulo 7DF0  
          __end_of_USBCtrlEPAllowDataStage 70CE                           __end_of_TMR0_ISR 030E  
                                    _sd000 08A4                                      _sd001 0848  
                                    _sd002 087C                           __end_of_TMR2_ISR 03F2  
           ?_USBIncrement1msInternalTimers 0001                           __end_of_TMR3_ISR 0174  
           ??_TMR3_DefaultInterruptHandler 0001                    __end_of_PIN_MANAGER_IOC 05D2  
                                    _flags 00C4                                      _largo 00C8  
                                    _index 01D0                                      _error 02E2  
                                    _fputc 6F90                                      _fputs 7EA0  
                          __end_of_isdigit 0114                                      _pasos 01C7  
                            i2___fldiv@grs 0022                              i2___fldiv@rem 001B  
                                    atoi@n 009B                                      pad@fp 009C  
                                    atoi@s 0093                                      _width 00C0  
                                    ctoa@c 0097                                      _putch 7FFE  
                                    ctoa@l 0099                                      ctoa@w 009B  
                                    dtoa@d 0102                                      dtoa@i 0122  
                                    dtoa@n 011A                                      dtoa@p 0114  
                                    dtoa@s 0118                                      dtoa@w 0116  
                                    nanf@s 008C                                      nanf@u 0090  
                                    _ustep 00D3                            __end_of_islower 7FAE  
                          __end_of_isspace 7DB0                    __end_of_TMR1_Initialize 04D0  
                          __end_of_mover_2 46CC                            __end_of_isupper 7FE0  
                                    pclath 000FFA                                      pclatu 000FFB  
                         __end_ofi2___flge 683C                                      tablat 000FF5  
                          executeCommand@i 02AA                                      plusw1 000FE3  
                                    plusw2 000FDB                          __end_of_CDCInitEP 76C4  
                                    stoa@i 0107                                      stoa@l 010F  
                                    stoa@p 010D                                      stoa@s 0097  
                                    stoa@w 0109                                      ttemp5 0060  
                                    ttemp6 0063                                      ttemp7 0067  
                                    status 000FD8                                      wtemp8 0060  
                          __end_of_sprintf 7B8E                             ?___fpclassifyf 008C  
                          __end_of_tolower 7E68                            ?i2_setMicroStep 0001  
                            i2___lbmod@rem 0004                              i2___flmul@grs 0036  
                          _TMR2_StartTimer 060A                            __end_of_strcspn 7AF4  
                          __end_of_strncmp 6260                            __end_of_toupper 7EA0  
                         __end_ofi2_memcpy 7CEE                           __end_ofi2_memset 56AE  
                             __end_of_G_01 48FE                               __end_of_G_53 6CC4  
                             __end_of_G_97 5314            ??_IOCC2_DefaultInterruptHandler 0001  
                          putUSBUSART@data 008C                            __initialization 6EE4  
                             __end_of_atoi 5D8E                               __end_of_ctoa 716A  
                             __end_of_main 6E30                               __end_of_dtoa 3FC4  
                             __end_of_nanf 0414                      _control_signal_bitmap 01D9  
                             __end_of_stoa 4E0C                            _USBCommandFetch 422A  
                        __end_of_IOCC2_ISR 047A                                     ??_G_01 0140  
                                   ??_G_53 0096                                     ??_G_97 00A6  
                  __end_of_TMR2_Initialize 7FFE                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 0095                                     ??_ctoa 0098  
                 _TMR2_SetInterruptHandler 05BE                                     ??_main 01BE  
                                   ??_dtoa 010A                                     ??_nanf 0090  
                                   ??_stoa 0099                              __activetblptr 000002  
                          ?_USBDeviceTasks 0001                      _TMR3_InterruptHandler 02DC  
                          _TMR2_WriteTimer 05AA                                ?_USBSuspend 0001  
                              ?i2___xxtofl 0001                               _cdc_mem_type 01DA  
                       Fila_Agregar@nBytes 0099                    __end_of_TMR0_StartTimer 0602  
                  __end_of_USBDeviceAttach 02B6                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                         _CDCDataOutHandle 01CB                                     ?_fputc 008C  
                                   _ACTCON 000FB5                                     ?_fputs 0095  
                          ??_MCC_USB_WRITE 0093                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _CCPR2H 000F91  
                                   _CCPR2L 000F90                           ___awdiv@dividend 008C  
                                   _ANSELA 000F5B                                     ?_putch 0001  
                                   _ANSELB 000F5C                                     _ANSELC 000F5D  
                          getsUSBUSART@len 0097                                     _T1GCON 000FCC  
                                   _T3GCON 000FB4                    __end_of_TMR3_Initialize 02E2  
                                   i2l1221 772E                                     i2l1223 7736  
                                   i2l2008 3CB4                                     i2l1224 773E  
                                   i2l2009 3CB0                                     i2l1225 7746  
                                   i2l1226 774E                                     i2l2027 29D0  
                                   i2l1227 7756                                     i2l2044 2C48  
                                   i2l2036 2BC2                                     i2l2037 2BBE  
                                   i2l1261 3842                                     i2l1185 342A  
                                   i2l1194 3436                                     i2l2075 5154  
                                   i2l2068 50D6                                     i2l1904 7A4A  
                                   i2l1678 6800                                     i2l1942 30CC  
                                   i2l1943 30AA                                     i2l1958 319E  
                                   i2l1967 3204                                     i2l1968 3200  
                                   i2l1997 3C46                                     i2l8041 784A  
                                   i2l8043 7850                                     i2l9011 4206  
                                   i2l9003 41B8                                     i2l8071 644C  
                                   i2l8047 7856                                     i2l8081 6476  
                                   i2l9009 41FA                                     i2l8091 64B6  
                                   i2l8067 6442                                     i2l8089 64AE  
                                   i2l7705 7EE8                                     i2l8099 64EE  
                                   i2l7731 5FA8                                     i2l7709 7EF6  
                                   i2l7751 604A                                     i2l7807 6B22  
                                   i2l9531 0330                                     i2l9523 0318  
                                   i2l7739 5FD2                                     i2l8813 7080  
                                   i2l9615 305E                                     i2l7695 7390  
                                   i2l7791 6AD4                                     i2l7783 6ABC  
                                   i2l9553 2FBA                                     i2l8817 709A  
                                   i2l9723 3270                                     i2l9715 324A  
                                   i2l9651 3112                                     i2l9643 30F0  
                                   i2l9627 30B8                                     i2l9653 3116  
                                   i2l9661 3128                                     i2l9629 30BC  
                                   i2l9573 2FFE                                     i2l9549 2FB6  
                                   i2l8941 3FE8                                     i2l8909 6E76  
                                   i2l9813 60B2                                     i2l9727 3278  
                                   i2l9671 318E                                     i2l8783 6954  
                                   i2l7799 6B00                                     i2l8871 533E  
                                   i2l8919 6EAA                                     i2l9729 327A  
                                   i2l9585 3022                                     i2l9577 3002  
                                   i2l8881 53C8                                     i2l9825 611E  
                                   i2l9833 6136                                     i2l8971 40BC  
                                   i2l8867 5326                                     i2l9861 5DBA  
                                   i2l8981 40FC                                     i2l8965 4096  
                                   i2l8957 4058                                     i2l8893 5424  
                              _Encoder_ISR 359E                                     i2l9679 31C2  
                                   i2l9695 31E2                                     i2l8983 412E  
                                   i2l8887 5414                                     i2l8879 53C0  
                                   i2l9689 31D8                                     i2l8993 417A  
                                   i2l8889 541C                                     i2l9883 5E4C  
                                   i2l9867 5DD8                                     i2l8995 4186  
                                   i2l9879 5E32                                     i2l9987 7DD2  
                                   _OSCCON 000FD3                                     _PLLRDY 007E97  
                                ??_FilaPop 0099                              CDCTxService@i 0095  
                         ?_CCP2_Initialize 0001                           __end_of___xxtofl 5098  
                 i2USBTransferOnePacket@ep 0007                          ??i2_USBDeviceInit 000D  
                          _TMR3_WriteTimer 04EC                             i2___fladd@aexp 004E  
                           i2___fladd@bexp 004F                          _shortPacketStatus 00D1  
                          USBDeviceTasks@i 001F                                i2memcpy@tmp 000B  
                             vfprintf@cfmt 019B                USBStdFeatureReqHandler@pUEP 0017  
                 USBTransferOnePacket@data 008D                 USBCtrlTrfInHandler@lastDTS 0002  
                                   ___flge 65C8                            ??_USBDeviceInit 0098  
                                   ___fleq 74DC                                     ___lmul 7958  
                             ?_putUSBUSART 008C                                     _cabeza 01D6  
                                ??___aodiv 009C                                  ??___fladd 0094  
                                ??___aomod 009C                                     ___wmul 0360  
                                ??___fldiv 0115                                  ??___awdiv 0090  
                                ??___flneg 0090                                  ??___awmod 0090  
                                ??___lbmod 008D                                  ??___flmul 00A2  
                                ??___flsub 00A6                                  ??___fltol 012A  
                  __end_of_TMR0_WriteTimer 05DC                       __end_of_getsUSBUSART 732A  
                                   _efgtoa 15C8                                     _angulo 00C9  
                                ??___lwdiv 0005                          _USBEnableEndpoint 7ED8  
                                   _floorf 4B12                                     _memcpy 7C66  
                         ?_TMR0_Initialize 0001                                     _memset 544A  
                                   clear_0 6F3E                                     clear_1 6F50  
                                   clear_2 6F5C                                     clear_3 6F68  
                                   clear_4 6F74                           ___awdiv@quotient 0092  
                           i2___fldiv@aexp 0027                             i2___fldiv@bexp 0026  
                          ___awmod@divisor 008E                                     isa$std 000001  
                           i2___fldiv@sign 001F                            ___awmod@counter 0090  
                                   pad@buf 009E                         ?_USBEnableEndpoint 0009  
                                   ctoa@fp 0095                                     dtoa@fp 0100  
                                   _strchr 7F10                                     _strcpy 79AE  
                                   _strlen 01D2                                     _strtof 08F0  
                                   _strtok 6CC4                                     _strspn 7A54  
                         __end_of_isxdigit 7848                                     fputc@c 008C  
                                   fputs@c 0099                                     fputs@i 009A  
                                   fputs@s 0095                          __end_ofi2___fladd 3296  
                                ??_isdigit 008E                          __end_ofi2___fldiv 3D5C  
                        __end_ofi2___lbmod 0338                          __end_ofi2___flmul 2C7C  
                        __end_ofi2___flsub 7C66                          __end_ofi2___fltol 6C0C  
                             _CDCTxService 5B58                            ___fpclassifyf@e 0094  
                          ___fpclassifyf@u 0096                            ___fpclassifyf@x 008C  
                                ??_islower 008E                               __mediumconst 0000  
                                ??_isspace 008E                                  ??_mover_2 0136  
                                   tblptrh 000FF7                                  ??_isupper 008E  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                      ??_USBEnableEndpoint 000A                                     stoa@cp 010B  
                                   stoa@fp 0095                                     putch@c 0001  
                         __end_of_vfprintf 78FE                    __end_of_TMR2_StartTimer 060E  
IOCC2_SetInterruptHandler@InterruptHandler 008C   TMR0_SetInterruptHandler@InterruptHandler 008C  
 TMR2_SetInterruptHandler@InterruptHandler 008C   TMR3_SetInterruptHandler@InterruptHandler 008C  
                         ?_PIN_MANAGER_IOC 0001                                  ??_sprintf 00A8  
                                ??_tolower 0094                                _CtrlTrfData 000438  
                                ??_strcspn 0095                             i2___flmul@aexp 0035  
                           i2___flmul@bexp 003A                                  ??_strncmp 0091  
                                ??_toupper 0094                             i2___flmul@sign 0034  
                           i2___flmul@temp 003F                             i2___flmul@prod 003B  
                     _controlTransferState 00D0                                 ___flge@ff1 0126  
                          ??___fpclassifyf 0090                                 ___flge@ff2 012A  
                         ?_TMR1_Initialize 0001                               ___xxtofl@arg 0096  
                             ___xxtofl@exp 0095                          _SYSTEM_Initialize 01A4  
                             ___xxtofl@val 008C                                 ___fleq@ff1 008C  
                               ___fleq@ff2 0090                            ___lbmod@divisor 008C  
                               __accesstop 0060                    __end_of__initialization 6F82  
                           i2___fltol@exp1 004A                            ___lbmod@counter 008E  
                             __pbssBIGRAMl 0580                                 ___flneg@f1 008C  
                     __end_of_MCC_USB_READ 0436                         ?_SYSTEM_Initialize 0001  
                        __end_of_Fila_Init 022E                              ___rparam_used 000001  
                  __end_of_USBCommandFetch 4486                                 ___fltol@f1 0126  
                      i2setMicroStep@ustep 0003                             __pcstackCOMRAM 0001  
                __end_of_USBEnableEndpoint 7F10               USBCommandFetch@lastTokenFlag 0242  
                            __end_of_sd000 08A8                              __end_of_sd001 087C  
                            __end_of_sd002 0892                               __pidataBANK0 0622  
                             __pidataBANK2 05F2                               __pidataBANK3 05E4  
                      ??_SYSTEM_Initialize 0099                                  ?_TMR0_ISR 0001  
                                ?_TMR2_ISR 0001                                  ?_TMR3_ISR 0001  
                  __end_of_TMR2_WriteTimer 05B4                              __end_of_fputc 7030  
                            __end_of_fputs 7ED8      __end_of_IOCC2_DefaultInterruptHandler 0622  
            _IOCC2_DefaultInterruptHandler 0620                              __end_of_putch 8000  
              __end_of_USBCtrlTrfInHandler 6A96                           ?_TMR2_Initialize 0001  
                 __end_of_ParadaEmergencia 0360                               _Fila_Agregar 78FE  
              ??_IOCC2_SetInterruptHandler 008E                                  ?i2___flge 0001  
                   i2_USBTransferOnePacket 5F92                    _ADC_GetConversionResult 0508  
                               _cdc_notice 0300                                  ?i2_memcpy 0001  
                                ?i2_memset 0001                                 _cdc_rx_len 00CC  
                               _cdc_tx_len 00CA                   ??_USBCtrlTrfSetupHandler 001E  
                      _inicializar_Sistema 7AF4                    _USBTicksSinceSuspendEnd 01DB  
                      MCC_USB_WRITE@nBytes 0091                           ?_TMR0_StartTimer 0001  
                         ?_USBDeviceAttach 0001                                    ??_fputc 0090  
                __end_of_SYSTEM_Initialize 01D2                                    ??_fputs 0099  
                   _USBStdGetStatusHandler 6E30                    __end_of_TMR3_WriteTimer 0508  
                                  ??_putch 008C                                 __pbssBANK0 00A8  
                               __pbssBANK1 01BF                                 __pbssBANK2 02AE  
                               __pbssBANK3 0300                           ?_TMR3_Initialize 0001  
               ?i2_TMR2_LoadPeriodRegister 0001                    _TMR2_LoadPeriodRegister 05B4  
                            ?_setMicroStep 0001                             _DireccionRotor 0580  
                              _pBDTEntryIn 00B6                                 _feed_state 01D8  
         __end_of_USBCtrlEPServiceComplete 617A                                    M_3@axis 008E  
                     USBCtrlTrfRxService@i 0001                                    M_4@axis 008E  
                            ?_G01_TMR2_ISR 0001                                    M_5@axis 008C  
                                  ?___flge 0126                                    ?___fleq 008C  
                     ?_inicializar_Sistema 0001           __end_of_TMR0_SetInterruptHandler 05A0  
                                  ?___lmul 008C                                 _getComands 6342  
         __end_of_TMR3_SetInterruptHandler 0596                                    ?___wmul 008C  
                               ??_TMR0_ISR 0003                                 ??_TMR2_ISR 005B  
                               ??_TMR3_ISR 0003                                    ?_efgtoa 013A  
                         ?_TMR0_WriteTimer 0001                        Fila_Agregar@comando 0097  
                                  _CCP2CON 000F97                                    ?_floorf 0126  
                                  ?_memcpy 008C                                    ?_memset 008C  
                           ___lmul@product 0094                                 _device_dsc 0892  
                         _USBCtrlEPService 7200                                 _ep_data_in 01C2  
                           getComands@buff 0152                                 ??i2___flge 0009  
                                  ?_strchr 008C                                    ?_strcpy 008C  
                                  ?_strlen 008C                             getComands@size 014B  
                                  ?_strtof 0132                                    ?_strtok 0098  
                                  ?_strspn 0091                      executeCommand@comando 0246  
              __end_of_USBCtrlTrfRxService 5E96                    executeCommand@TokensCom 0200  
                       _USBCheckStdRequest 6260                          _configDescriptor1 0805  
                                  i2l10311 3B8E                                    i2l10305 3B78  
                                  i2l10241 67D4                                    i2l10251 6838  
                                  i2l10411 297C                                    i2l10245 67EA  
                                  i2l10237 67A0                                    i2l10413 2980  
                                  i2l10343 3C44                                    i2l10319 3BA6  
                                  i2l10511 2C24                                    i2l10431 29C0  
                                  i2l10415 2990                                    i2l10337 3C1E  
                                  i2l10329 3BF6                                    i2l10273 3B00  
                                  i2l10355 3C7A                                    i2l10523 2C66  
                                  i2l10507 2C06                                    i2l10349 3C5C  
                                  i2l10293 3B40                                    i2l10277 3B04  
                                  i2l10429 29BC                                    i2l10541 5104  
                                  i2l10391 3D54                                    i2l10383 3D46  
                                  i2l10375 3CF8                                    i2l10439 29EE  
                                  i2l10543 510A                                    i2l10535 50E6  
                                  i2l10711 77E6                                    i2l10703 779C  
                                  i2l10297 3B44                                    i2l10481 2B6A  
                                  i2l10553 517A                                    i2l10545 5116  
                                  i2l11417 775E                                    i2l10379 3D1C  
                                  i2l10571 51C6                                    i2l10555 5186  
                                  i2l10547 513C                                    i2l10389 3D52  
                                  i2l11445 6BBA                                    i2l11429 6B70  
                                  i2l10725 6A0A                                    i2l11525 7D2A  
                                  i2l10487 2B88                                    i2l11463 6BFA  
                                  i2l11455 6BD2                                    i2l10727 6A0E  
                                  i2l11385 7A18                                    i2l11457 6BDE  
                                  i2l11449 6BCA                                    i2l10745 6A72  
                                  i2l11387 7A20                                    i2l11803 34CA  
                                  i2l10739 6A52                                    i2l11397 7A40  
                                  i2l11469 7CBC                                    i2l11477 7CDC  
                                  i2l11487 7F6E                                    i2l14161 627A  
                                  i2l11489 7F70                                    i2l13531 55C0  
                                  i2l14163 6280                                    i2l15035 7280  
                                  i2l11781 333A                                    i2l14173 6298  
                                  i2l14165 6286                                    i2l15037 7286  
                                  i2l11775 32BE                                    i2l13551 56A4  
                                  i2l13543 565C                                    i2l14175 629E  
                                  i2l14191 62F2                                    i2l11785 334E  
                                  i2l16033 786E                                    i2l13545 568E  
                                  i2l13537 5624                                    i2l14177 62A4  
                                  i2l15401 5A0E                                    i2l11795 340E  
                                  i2l16035 789E                                    i2l14187 62D4  
                                  i2l15403 5A28                                    i2l15323 592C  
                                  i2l15315 5920                                    i2l11797 3424  
                                  i2l13565 66DC                                    i2l15247 56E8  
                                  i2l15343 5950                                    i2l15361 598A  
                                  i2l15337 5946                                    i2l13587 674C  
                                  i2l15275 5744                                    i2l15259 5712  
                                  i2l15349 5974                                    i2l15375 59B8  
                                  i2l15367 5994                                    i2l15395 59F0  
                                ?___xxtofl 008C                                 ??i2_memcpy 0007  
                               ??i2_memset 0007                __end_of_USBCtrlTrfTxService 64F6  
                      _USBStdSetCfgHandler 669A                          ??_medir_corriente 0090  
                                  _OSCCON2 000FD2                                    _OSCTUNE 000F9B  
                         ??i2_setMicroStep 0001                        ?_USBCheckStdRequest 0001  
                         ?_TMR2_StartTimer 0001                                    _UIEbits 000F64  
                                  _UIRbits 000F65                             ??_setMicroStep 008C  
                   __end_of_DireccionRotor 058C                      __end_of_encenderRotor 060A  
                _IOCC2_SetInterruptHandler 05A0                              _cdc_trf_state 00CB  
                                  _FilaPop 7B8E          __end_ofi2_TMR2_LoadPeriodRegister 05E4  
                          i2___fladd@signs 004D                                    _pCDCDst 02C8  
                         ?_USBCommandFetch 0001                                    _pCDCSrc 02CB  
                     _ADC_InterruptHandler 02D4                                    __Hparam 0000  
          ??_USBIncrement1msInternalTimers 0001                                  ?_isxdigit 0092  
                     ?_USBStdSetCfgHandler 0001                                  _CDCInitEP 765C  
                                  __Lparam 0000                          __end_of_getTokens 74DC  
                           ??_G01_TMR2_ISR 0059                 ??_TMR2_SetInterruptHandler 008E  
                    ??_inicializar_Sistema 0099                                 _readBuffer 0362  
                     ??_USBCheckStdRequest 001C                                    ___aodiv 4E0C  
                                  ___fladd 2C7C                                    ___aomod 5A34  
                         i2_TMR2_StopTimer 0616                                    ___fldiv 384A  
                                  ___awdiv 7568                                    ___flneg 0114  
                                  ___awmod 75EC                                    ___lbmod 022E  
                                  ___flmul 25A0                                    ___flsub 7BD8  
                                  ___fltol 64F6                           ??_USBDeviceTasks 001F  
                                  ___lwdiv 7A02                          ??_USBStallHandler 0001  
                         ?_TMR2_WriteTimer 0001                                  ?_vfprintf 0196  
                             __psmallconst 0800                                 _objetivo_Z 02C0  
                ??_ADC_GetConversionResult 008E                                    __pcinit 6EE4  
                       getsUSBUSART@buffer 0095                  __end_of_configDescriptor1 0848  
                                  __ramtop 0800                                    __ptext0 6D7C  
                                  __ptext1 0498                                    __ptext2 05F6  
                                  __ptext3 0574                                    __ptext4 0508  
                                  __ptext5 7AF4                                    __ptext6 05FA  
                                  __ptext7 05FE                                    __ptext8 01A4  
                                  __ptext9 57DE                               i2memset@dest 0001  
                         getComands@tokens 0149                                    _inPipes 00B0  
              _USBDeferOUTDataStagePackets 01DC                                  _T0CONbits 000FD5  
                                _IOCC2_ISR 0458                      _OSCILLATOR_Initialize 051E  
                             ??_USBSuspend 0015                                  _T2CONbits 000FBA  
                                  _current 02D2                                    _isdigit 00E2  
                             ??i2___xxtofl 0005                                 ??___xxtofl 0090  
                                _T3CONbits 000FB1                           ___awmod@dividend 008C  
                                  _islower 7F7C                   ??_PIN_MANAGER_Initialize 008E  
                                  _isspace 7D70                                    _mover_2 4486  
                                  _isupper 7FAE                            i2_USBDeviceInit 56AE  
                                  efgtoa@c 0140                                    efgtoa@d 0158  
                                  efgtoa@e 0170                                    efgtoa@f 013C  
                                  efgtoa@g 016C                                    efgtoa@h 0162  
                                  efgtoa@i 016A                                    efgtoa@l 0166  
                                  efgtoa@m 0152                                    efgtoa@n 0172  
                                  efgtoa@p 015C                                    efgtoa@t 014C  
                                  efgtoa@u 0174                                    efgtoa@w 015E  
                         i2USBDeviceInit@i 000D                                    atoi@neg 0099  
                       __end_of_USB_CD_Ptr 0805                  ??_TMR2_LoadPeriodRegister 008C  
                                  _sprintf 7B42                                    _tolower 7E2E  
                                  _strcspn 7AA4                                    _strncmp 617A  
                                  _toupper 7E68                       end_of_initialization 6F82  
                             _getsUSBUSART 7296                           ?_TMR3_WriteTimer 0001  
                                  floorf@e 0134                                    floorf@m 0130  
                                  floorf@u 0136                                    floorf@x 0126  
                            ??_apagarRotor 008C                         __end_of_USB_SD_Ptr 0804  
                             ?_Encoder_ISR 0001                            ?_DireccionRotor 008C  
                                  memcpy@d 0093                                    memcpy@n 0090  
                                  memcpy@s 0095                        _pBDTEntryEP0OutNext 005B  
                                  fputc@fp 008E                                    memset@c 008E  
                                  memset@k 0094                                    memset@n 0090  
                                  memset@s 0096                              __Lmediumconst 0000  
                                  fputs@fp 0097                            _USB1msTickCount 02C4  
          _dummy_encapsulated_cmd_response 03C0                                  i2u1040_40 3092  
                                i2u1043_40 30D4                                  i2u1038_40 3080  
                 ?_USBStdFeatureReqHandler 0001                                  i2u1039_40 3090  
                                i2u1064_40 3256                                  i2u1056_40 31E6  
                                i2u1153_40 3D06                                  i2u1400_48 02FA  
                                i2u1305_40 7A24                                  i2u1313_40 6BE4  
                                i2u1154_40 3D2A                                  i2u1058_40 31FA  
                                i2u1171_40 2C14                                  i2u1163_40 29DC  
                                i2u1330_48 0466                             i2___xxtofl@arg 000B  
                                i2u1172_40 2C32                                  i2u1180_40 5190  
                                i2u1308_40 6B5E                                  i2u1403_48 0160  
                                i2u1149_40 3CAA                                  i2u1309_40 6B8E  
                                i2u1309_45 6B84                                  i2u1405_48 03DE  
                                i2u1167_40 2BB8                                  i2u1351_40 329E  
                           i2___xxtofl@exp 000A                                  i2u1351_46 32A0  
                           i2___xxtofl@val 0001                                  i2u1354_40 3366  
                    ??_USBStdSetCfgHandler 0015                                  i2u1880_40 5A30  
             __end_of_ADC_IsConversionDone 0580                                 ??_isxdigit 0094  
                               ?_CDCInitEP 0001                         __end_of_USBSuspend 028A  
                        __end_of_vfpfcnvrt 25A0                                 efgtoa@mode 0161  
                    TMR0_ReadTimer@readVal 0005                                 efgtoa@sign 015A  
                  _USBCtrlEPAllowDataStage 7030                         __end_ofi2___xxtofl 51D8  
                              ?_getComands 0147                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                  executeCommand@numTokens 02AC                                 G_01@i_3943 0148  
                               ??_vfprintf 00A8                   _USBCtrlEPServiceComplete 608C  
                           _TMR0_ReadTimer 047A                                    strchr@c 008E  
                                  strchr@s 008C                                    strcpy@d 0094  
                                  strlen@a 008E                                    strcpy@s 0092  
                                  strlen@s 008C                 _USBStatusStageEnabledFlag1 01DF  
               _USBStatusStageEnabledFlag2 01DE                                    strtof@i 0146  
                                  strtof@s 0132                                    strspn@c 0093  
                                  strspn@i 0096                                    strtok@p 01C5  
                                  strtok@s 0098                                    strspn@s 0091  
                       USBEnableEndpoint@p 000A                   _TMR0_SetInterruptHandler 0596  
                                _PORTBbits 000F81                                  _PORTCbits 000F82  
                 _TMR3_SetInterruptHandler 058C                          DireccionRotor@dir 008C  
                               ?_IOCC2_ISR 0001                               _MCC_USB_READ 0414  
                              ___fladd@grs 009B                                 getTokens@i 00A6  
                               getTokens@s 00A4                           ___lbmod@dividend 008D  
                            ___xxtofl@sign 0094                         _BothEP0OutUOWNsSet 01E0  
                      _ADC_StartConversion 05F6                                ___fldiv@grs 0120  
                              ___fldiv@rem 0119                            i2___fltol@sign1 0049  
                                i2___fladd 2F8A                                  i2___fldiv 3AD4  
                                i2___lbmod 030E                                  i2___flmul 2950  
                                i2___flsub 7C20                                  i2___fltol 6B52  
                USBConfigureEndpoint@EPNum 0006                             _executeCommand 48FE  
               ?_USBCtrlEPAllowStatusStage 0001        USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                                _USTATcopy 005E                    TMR2_WriteTimer@timerVal 008C  
                    __end_of_MCC_USB_WRITE 03AA                                ___lbmod@rem 008F  
                              ___flmul@grs 0103               __end_of_USBTransferOnePacket 5F92  
                        putUSBUSART@length 008E                        __end_of_apagarRotor 0612  
                     ?_ADC_StartConversion 0001                     __end_of_TMR0_ReadTimer 0498  
                                _Fila_Init 0200                          Encoder_ISR@salida 006C  
                   _USBCtrlTrfSetupHandler 73BE               __end_of_INTERRUPT_Initialize 0606  
     __end_of_TMR2_DefaultInterruptHandler 061E               _TMR2_DefaultInterruptHandler 061C  
                  ?i2_USBTransferOnePacket 0001                             __end_of___flge 669A  
                           __end_of___fleq 7568                      __end_of_USBDeviceInit 590C  
    __end_of_USBIncrement1msInternalTimers 0458              _USBIncrement1msInternalTimers 0436  
                           __end_of___lmul 79AE                                vfpfcnvrt@ap 017C  
                              vfpfcnvrt@cp 018A                                vfpfcnvrt@ct 0192  
                              vfpfcnvrt@fp 0178                                vfpfcnvrt@ll 0182  
                           __end_of___wmul 0386                             __end_of_efgtoa 2046  
                     __end_of_setMicroStep 772A                                  i2memcpy@d 0007  
                                i2memcpy@n 0005                    __end_ofi2_USBDeviceInit 57DE  
                                i2memcpy@s 0009                             _ADC_Initialize 0534  
                        ?_ParadaEmergencia 0001                             __end_of_floorf 4CBC  
                                i2memset@c 0003                                  i2memset@k 0009  
                                i2memset@n 0005                                  i2memset@s 000B  
                           __end_of_memcpy 7CAA                     ?_OSCILLATOR_Initialize 0001  
                               floorf@F526 02B4                             __end_of_memset 557C  
                        _USBBusIsSuspended 01E1         i2TMR2_LoadPeriodRegister@periodVal 0001  
         TMR2_LoadPeriodRegister@periodVal 008C                         ??_ParadaEmergencia 0098  
                           __end_of_strchr 7F46                             __end_of_strcpy 7A02  
                           __end_of_strlen 0200                             __end_of_strtof 15C8  
                           __end_of_strtok 6D7C                             __end_of_strspn 7AA4  
                      start_initialization 6EE4                    ?_USBStdGetStatusHandler 0001  
                        setMicroStep@ustep 008E                                __end_of_M_3 0574  
            USBCtrlTrfRxService@byteToRead 0002                                __end_of_M_4 0566  
                              __end_of_M_5 05F2                     __end_of_executeCommand 4B12  
                              __end_of_abs 00E2                                __end_of_pad 7200  
                     __end_of_G01_TMR2_ISR 359E                             _TMR2_StopTimer 0612  
                              _cdc_data_rx 000540                                 ?i2___fladd 0041  
                              _cdc_data_tx 000500                                 ?i2___fldiv 000F  
             __end_of_USBConfigureEndpoint 73BE                          _distanciaRestante 02BC  
                               ?i2___lbmod 0001                                 ?i2___flmul 0028  
                               ?i2___flsub 0051                                 ?i2___fltol 0041  
          __end_of_USBStdFeatureReqHandler 422A                         G01_TMR2_ISR@period 0060  
        __end_of_USBCtrlEPAllowStatusStage 69D6                   __end_of_USBCtrlEPService 7296  
              ??i2_TMR2_LoadPeriodRegister 0001                             _TMR3_StopTimer 05FA  
                    __end_of___fpclassifyf 690A                  ??_USBCtrlEPAllowDataStage 0002  
                        ??_Timing_TMR0_ISR 0003                                ??_CDCInitEP 000D  
                           USBDeviceInit@i 0098                      ??_ADC_StartConversion 008C  
                   _pBDTEntryEP0OutCurrent 00C6                                vfprintf@fmt 0198  
                  USBTransferOnePacket@dir 008C                    USBTransferOnePacket@len 008F  
           __end_ofi2_USBTransferOnePacket 608C                                   ??___flge 012E  
                                 ??___fleq 0094                                 ?_Fila_Init 0001  
                          ?_TMR0_ReadTimer 0001                              _isxdigit$5148 0098  
                                 ??___lmul 0094                                   ??___wmul 0090  
                      _USBStdGetDscHandler 5314                            _medir_corriente 0498  
                                 ??_efgtoa 0141                     __end_of_ADC_Initialize 054A  
                              __pdataBANK0 00D3                                __pdataBANK2 02FA  
                              __pdataBANK3 03C8                                   ??_floorf 012A  
                                 ??_memcpy 0092                                   ??_memset 0092  
                     USBCommandFetch@F5851 02FA              ?_TMR2_DefaultInterruptHandler 0001  
                               memset@dest 008C                                   ??_strchr 0090  
                                 ??_strcpy 0090                                   ??_strlen 008E  
                                 ??_strtof 0136                                   ??_strtok 009C  
                                 ??_strspn 0095                                ??_IOCC2_ISR 005B  
                                 G_01@axis 013C                                  ___fladd@a 0090  
                                ___fladd@b 008C                     _USBActiveConfiguration 00D2  
           __end_of_USBStdGetStatusHandler 6EE4                                  ___fldiv@a 0111  
                                ___fldiv@b 010D                             _pos_absoluta_Z 030A  
                   __end_of_TMR2_StopTimer 0616                                  ___flmul@a 009E  
                                ___flmul@b 009A                                __pbssCOMRAM 005B  
                                 G_53@axis 0092                                  ___flsub@a 0111  
                                ___flsub@b 010D                              __pcstackBANK0 0060  
                            __pcstackBANK1 0100                              __pcstackBANK2 0200  
                         ___aodiv@dividend 008C                       _ADC_IsConversionDone 0574  
                          ?_executeCommand 0001                                   G_97@axis 0126  
                     ?_USBStdGetDscHandler 0001                   __end_ofi2_TMR2_StopTimer 061A  
                       getComands@comandos 0147                     __end_of_TMR3_StopTimer 05FE  
                              _apagarRotor 060E                 __end_of_USBWakeFromSuspend 7F7C  
                                 ?_FilaPop 0097                            _USBStallHandler 7CEE  
                             _pBDTEntryOut 02AE                 __end_of_USBCheckCDCRequest 6B52  
                    _TMR0_InterruptHandler 02D6                                  __pnvBANK2 02FE  
                              _efgtoa$4916 0148                                _efgtoa$4917 014A  
                              _efgtoa$4909 0146                           ___lwdiv@dividend 0001  
                   _PIN_MANAGER_Initialize 7D30                                  _dtoa$4885 0112  
                                __pintcode 0008                          _ADC_SelectChannel 04D0  
                                 ?___aodiv 008C                                   ?___fladd 008C  
                                 ?___aomod 008C                                   ?___fldiv 010D  
                                 ?___awdiv 008C                                  __ptext100 03AA  
                                __ptext101 5B58                                  __ptext110 7200  
                                __ptext102 5E96                           ___aodiv@quotient 009E  
                                 ?___flneg 008C                                  __ptext111 7CAA  
                                __ptext120 3FC4                                  __ptext112 73BE  
                                __ptext104 590C                                  __ptext121 7848  
                                __ptext113 608C                                  __ptext105 56AE  
                                __ptext130 69D6                                  __ptext122 6A96  
                                __ptext114 7030                                  __ptext106 7F46  
                                __ptext131 6422                                  __ptext123 765C  
                                __ptext115 6260                                  __ptext107 025C  
                                __ptext140 0616                                  __ptext132 0144  
                                __ptext124 5F92                                  __ptext116 669A  
                                __ptext108 7CEE                                  __ptext141 05DC  
                                __ptext133 04EC                                  __ptext125 7ED8  
                                __ptext117 557C                                  __ptext109 0436  
                                __ptext150 5098                                  __ptext142 7A02  
                                __ptext134 061A                                  __ptext126 732A  
                                __ptext118 6E30                                  __ptext151 7C20  
                                __ptext143 02E2                                  __ptext135 03CE  
                                __ptext127 778E                                  __ptext119 5314  
                                __ptext160 0000                                  __ptext152 2F8A  
                                __ptext144 061E                                  __ptext136 3296  
                                __ptext128 5D8E                                  __ptext153 2950  
                                __ptext145 0174                                  __ptext137 061C  
                                __ptext129 690A                                  __ptext154 676C  
                                __ptext146 05C8                                  __ptext138 772A  
                                __ptext155 3AD4                                  __ptext147 0458  
                                __ptext139 6B52                                  __ptext156 05D2  
                                __ptext148 359E                                  __ptext157 047A  
                                __ptext149 0620                                  __ptext158 7DB0  
                                __ptext159 030E                                   ?___awmod 008C  
                                 ?___lbmod 008C                                   ?___flmul 009A  
                                 ?___flsub 010D                                   ?___fltol 0126  
                                 ?___lwdiv 0001                            ?_ADC_Initialize 0001  
                                _getTokens 7450                         ?_ADC_SelectChannel 0001  
                i2_TMR2_LoadPeriodRegister 05DC               ??_INTERRUPT_InterruptManager 0080  
                         ?i2_USBDeviceInit 0001                       _USBTransferOnePacket 5E96  
                              __smallconst 0800                          ??_CCP2_Initialize 008C  
                                 ?_isdigit 008C                        ??_ADC_SelectChannel 008C  
                              _flag_angulo 01CF                            ?_TMR2_StopTimer 0001  
                    ?_ADC_IsConversionDone 0001                                   ?_islower 008C  
                                 ?_isspace 008C                                   ?_mover_2 0132  
                                 ?_isupper 008C                                  _lastToken 03A2  
                         ??_DireccionRotor 008E               __end_of_USBCtrlTrfOutHandler 77EC  
                    ??_USBStdGetDscHandler 0001                                _ep_data_out 01BF  
                         ___lwdiv@quotient 0005                                ??i2___fladd 0049  
                              ??i2___fldiv 0017                                   ?_sprintf 019C  
                                 ?_tolower 0092                                ??i2___lbmod 0002  
                              ??i2___flmul 0030                                ??i2___flsub 0059  
                              ??i2___fltol 0045                                   ?_strcspn 0091  
            USBConfigureEndpoint@direction 0001                                   ?_strncmp 008C  
                                 ?_toupper 0092                       _INTERRUPT_Initialize 0602  
                          ?_TMR3_StopTimer 0001                          _G01_TMR2_ISR$5862 0062  
                        ??_TMR0_Initialize 008E                                  _inverse_S 02F2  
              __end_of_inicializar_Sistema 7B42                             ___wmul@product 0090  
                                 _IOCCbits 000F87                                   _LATAbits 000F89  
                                 _LATBbits 000F8A                                   _LATCbits 000F8B  
               ??_USBCtrlEPServiceComplete 0002                                   _PIE1bits 000F9D  
                                 _IPR3bits 000FA5                                   _PIE2bits 000FA0  
                                 _PIE3bits 000FA3                    __end_of_medir_corriente 04B4  
                         USBCommandFetch@i 0244                           USBCommandFetch@s 0240  
                __end_of_ADC_SelectChannel 04EC                 ??_TMR0_SetInterruptHandler 008E  
                                 _PIR1bits 000F9E                                   _PIR2bits 000FA1  
                                 _PIR3bits 000FA4                 ??_TMR3_SetInterruptHandler 008E  
                                 i2u910_40 53BA                                   i2u910_47 53B0  
                                 i2u912_40 5408                                   i2u912_47 53FE  
                                 i2u781_40 64DE                                   i2u909_40 538A  
                                 i2u781_47 64D4                                   i2u909_47 5380  
                                 i2u934_40 41A0                                   i2u779_40 649E  
                                 i2u779_47 6494                                   _RCONbits 000FD0  
                              ??_Fila_Init 0098                              ??_putUSBUSART 008F  
                        i2___fldiv@new_exp 0020                               ??_getComands 014C  
                                 _UEP0bits 000F6A                 _USBDeferINDataStagePackets 01DD  
                                _prescaler 01D1                                   _TMR0_ISR 02E2  
                                 _TMR2_ISR 03CE                                   _TMR3_ISR 0144  
                                 _UCONbits 000F60                                strtof@digit 013C  
                        ??_PIN_MANAGER_IOC 005B                                strtof@flags 013D  
                               ?_getTokens 009C                       _USBConfigureEndpoint 732A  
                              strtof@expon 013E                                  _vfpfcnvrt 2046  
                 TMR0_ReadTimer@readValLow 0007                          ??_TMR1_Initialize 008C  
                                 _S_CHANGE 01D3                                 _ADCON0bits 000FC2  
                                 i2___flge 676C                          ___wmul@multiplier 008C  
                    ?_USBTransferOnePacket 008C                             _pos_relativa_Z 00BC  
                 ADC_SelectChannel@channel 008D                              ?_CDCTxService 0001  
                             _RemoteWakeup 01E2             ??_TMR2_DefaultInterruptHandler 0001  
                                 i2_memcpy 7CAA                                   i2_memset 557C  
                ?_TMR2_SetInterruptHandler 008C                               _isspace$5016 0092  
                  __end_of_USBStallHandler 7D30                                 vfpfcnvrt@c 0195  
                               vfpfcnvrt@f 018E                          ___lmul@multiplier 008C  
                              _INTCON2bits 000FF1                                  copy_data0 6EF8  
                                copy_data1 6F18                      ?_INTERRUPT_Initialize 0001  
              ??_USBCtrlEPAllowStatusStage 0001                         __end_of_getComands 6422  
              __end_of_USBStdSetCfgHandler 676C                           _Encoder_ISR$5863 0062  
                         _Encoder_ISR$5864 0066                          ??_TMR2_Initialize 008E  
                             _setMicroStep 76C4                         __end_of_device_dsc 08A4  
                  ?_USBCtrlTrfSetupHandler 0001                    USBStdGetStatusHandler@p 0003  
                                 __Hrparam 0000                                  memcpy@tmp 0092  
                               vfprintf@ap 0199                                   __Lrparam 0000  
                               vfprintf@fp 0196                     USBTransferOnePacket@ep 0092  
                 ?_ADC_GetConversionResult 008C                                   _SetupPkt 000430  
                             _G01_TMR2_ISR 3296                    ??_OSCILLATOR_Initialize 008C  
                    ?_USBConfigureEndpoint 0001                          ??_TMR0_StartTimer 008C  
                        ??_USBDeviceAttach 008C                                 ?_vfpfcnvrt 0178  
                            ?_Fila_Agregar 0097                            ___aodiv@divisor 0094  
                        ??_TMR3_Initialize 008E                            ___aodiv@counter 009C  
                             _mover_2$5637 0138                     _IOCC2_InterruptHandler 02FE  
                      __end_of_putUSBUSART 03CE                                _line_coding 02E3  
                       ___fpclassifyf@F465 02B8                             ??_CDCTxService 0095  
                   ??_ADC_IsConversionDone 008C                               _numBytesRead 01D7  
                               sprintf@fmt 019E                   ?_TMR2_LoadPeriodRegister 0001  
                                 ___xxtofl 4F54                            ___lwdiv@divisor 0003  
           ?_IOCC2_DefaultInterruptHandler 0001                            ___lwdiv@counter 0007  
                                 __ptext10 028A                                   __ptext11 02B6  
                                 __ptext20 0602                                   __ptext12 058C  
                                 __ptext21 054A                                   __ptext13 7FE0  
                                 __ptext30 03F2                                   __ptext22 0534  
                                 __ptext14 04B4                                   __ptext31 77EC  
                                 __ptext23 04D0                                   __ptext15 7DF0  
                                 __ptext40 46CC                                   __ptext32 7958  
                                 __ptext24 48FE                                   __ptext16 0596  
                                 __ptext41 4486                                   __ptext33 05EC  
                                 __ptext25 7450                                   __ptext17 7D30  
                                 __ptext50 6CC4                                   __ptext42 76C4  
                                 __ptext34 51D8                                   __ptext26 6342  
                                 __ptext18 05A0                                   __ptext51 7A54  
                                 __ptext43 4F54                                   __ptext35 0606  
                                 __ptext27 08F0                                   __ptext19 051E  
                                 __ptext60 7E2E                                   __ptext52 7AA4  
                                 __ptext44 05AA                                   __ptext36 0558  
                                 __ptext28 7E68                                   __ptext61 7FAE  
                                 __ptext53 7F10                                   __ptext45 060A  
                                 __ptext37 0566                                   __ptext29 7F7C  
                                 __ptext70 65C8                                   __ptext62 79AE  
                                 __ptext54 7B42                                   __ptext46 05B4  
                                 __ptext38 0580                                   __ptext71 74DC  
                                 __ptext63 4B12                                   __ptext55 78A4  
                                 __ptext47 05BE                                   __ptext39 6C0C  
                                 __ptext80 5A34                                   __ptext72 384A  
                                 __ptext64 683C                                   __ptext56 2046  
                                 __ptext48 7B8E                                   __ptext81 4E0C  
                                 __ptext73 75EC                                   __ptext65 64F6  
                                 __ptext57 617A                                   __ptext49 422A  
                                 __ptext90 060E                                   __ptext82 70CE  
                                 __ptext74 7568                                   __ptext66 7BD8  
                                 __ptext58 4CBC                                   __ptext91 0612  
                                 __ptext83 6F90                                   __ptext75 3D5C  
                                 __ptext67 2C7C                                   __ptext59 15C8  
                                 __ptext92 0200                                   __ptext84 7FFE  
                                 __ptext76 716A                                   __ptext68 0114  
                                 __ptext93 544A                                   __ptext85 5C7A  
                                 __ptext77 01D2                                   __ptext69 25A0  
                                 __ptext94 0414                                   __ptext86 7D70  
                                 __ptext78 7EA0                                   __ptext95 7296  
                                 __ptext87 00E2                                   __ptext79 00B0  
                                 __ptext96 78FE                                   __ptext88 0360  
                                 __ptext97 7C66                                   __ptext89 0338  
                                 __ptext98 022E                                   __ptext99 0386  
                          _Timing_TMR0_ISR 0174                                  isxdigit@c 0092  
                  TMR0_WriteTimer@timerVal 0001                         i2___lbmod@dividend 0002  
                        ??_TMR0_WriteTimer 0003                                 strcpy@dest 008C  
                  TMR3_WriteTimer@timerVal 0001             __end_of_USBCtrlTrfSetupHandler 7450  
                        ?_USBCtrlEPService 0001                              _encenderRotor 0606  
                         ??_TMR0_ReadTimer 0003       __end_of_TMR0_DefaultInterruptHandler 0620  
             _TMR0_DefaultInterruptHandler 061E                               Encoder_ISR@a 0060  
                             Encoder_ISR@y 0074                           ?_medir_corriente 0001  
                       ??_USBCtrlEPService 001E                                   _isxdigit 77EC  
                      _USBCtrlTrfInHandler 69D6                                   efgtoa@fp 013A  
                                 efgtoa@ne 0150                                   efgtoa@pp 014E  
                                 efgtoa@ou 0154                                  stoa@F1177 03C8  
                                 isa$xinst 000000                                   _outPipes 00A8  
                               strtof@eexp 0140                       _USBCtrlTrfOutHandler 778E  
                                 int$flags 005F                          _inverse_time_feed 02EA  
                _USBCtrlEPAllowStatusStage 690A                                   _vfprintf 78A4  
                              ??_getTokens 00A0                          ??_TMR2_StartTimer 008C  
       __end_of_INTERRUPT_InterruptManager 00AC                 _INTERRUPT_InterruptManager 0008  
                           ??_Fila_Agregar 009B                     ??_USBTransferOnePacket 0090  
     __end_of_TMR3_DefaultInterruptHandler 061C               _TMR3_DefaultInterruptHandler 061A  
                          Encoder_ISR@tmr0 006A                            Encoder_ISR@tics 0070  
                         ??_executeCommand 01BA                           ___aomod@dividend 008C  
                _USBDeferStatusStagePacket 00CD                   CDCTxService@byte_to_send 0096  
                           _vfpfcnvrt$4950 018C                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 0001                          ??_USBCommandFetch 01BA  
                                 memcpy@d1 008C                                   memcpy@s1 008E  
            USBCtrlTrfTxService@byteToSend 0001                                   isdigit@c 008C  
                   ??_INTERRUPT_Initialize 008C                             getTokens@F4807 02FC  
                         ?_USBStallHandler 0001                   USBStdFeatureReqHandler@p 001A  
                        ?i2_TMR2_StopTimer 0001                                   intlevel2 0000  
                                sprintf@ap 01AD                          ??_TMR2_WriteTimer 008C  
                             ?_apagarRotor 0001                           MCC_USB_WRITE@str 008F  
                          i2___xxtofl@sign 0009                __end_of_ADC_StartConversion 05FA  
                           ?_encenderRotor 0001    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 78A4  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 0013           ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
          _USER_USB_CALLBACK_EVENT_HANDLER 7848                                   islower@c 008C  
                       ??i2_TMR2_StopTimer 0001               i2USBTransferOnePacket@handle 0008  
                              getComands@i 015C                                   isspace@c 008C  
                  ?_PIN_MANAGER_Initialize 0001            __end_of_ADC_GetConversionResult 051E  
                                strcpy@src 008E                          i2___lbmod@divisor 0001  
                            G_01@distancia 0142                                   isupper@c 008C  
                        i2___lbmod@counter 0003                                  strncmp@_l 008C  
                                strncmp@_r 008E                           ??_ADC_Initialize 008C  
                           getTokens@token 009C                                 FilaPop@str 0097  
            ?_TMR0_DefaultInterruptHandler 0001                 i2USBTransferOnePacket@data 0002  
                          _CCP2_Initialize 054A                                  strtof@res 0134  
                   ??_USBConfigureEndpoint 0002                      ?_USBCtrlTrfOutHandler 0001  
                              efgtoa@nmode 0160                                  strtok@sep 009A  
                              _putUSBUSART 03AA                        _USBCtrlTrfRxService 5D8E  
                       _USBWakeFromSuspend 7F46                            ___aomod@divisor 0094  
                  _USBStdFeatureReqHandler 3FC4                                ??_vfpfcnvrt 017E  
                         ??_TMR2_StopTimer 008C                                   stoa@nuls 0100  
                          ___aomod@counter 009C            __end_of_TMR2_LoadPeriodRegister 05BE  
                        ??_TMR3_WriteTimer 0003                         _USBCheckCDCRequest 6A96  
                      _USBCtrlTrfTxService 6422                    __end_of_Timing_TMR0_ISR 01A4  
                                 sprintf@f 01AF                                   tolower@c 0092  
                                 sprintf@s 019C              ?_TMR3_DefaultInterruptHandler 0001  
                      ?_USBWakeFromSuspend 0001                            _TMR0_Initialize 7DF0  
                    ??_USBCtrlTrfInHandler 0002                      _USBAlternateInterface 01E3  
                                 strcspn@c 0093                                   strcspn@i 0096  
                                 strcspn@s 0091                           ??_TMR3_StopTimer 008C  
                                 strncmp@l 0092                                   strncmp@n 008F  
                                 strncmp@r 0094                                   toupper@c 0092  
                      ?_USBCheckCDCRequest 0001                  i2USBTransferOnePacket@dir 0001  
                i2USBTransferOnePacket@len 0004                                   strtof@_u 0142  
                      USBEnableEndpoint@ep 000C                            _endpoint_number 00CF  
                     ?_USBCtrlTrfRxService 0001                              ___fladd@signs 0098  
                            ?_getsUSBUSART 0095                               ___aodiv@sign 009D  
                            ??_Encoder_ISR 0059                   executeCommand@strCommand 0228  
           __end_of_PIN_MANAGER_Initialize 7D70                   ?_USBCtrlEPAllowDataStage 0001  
                     ?_USBCtrlTrfTxService 0001                               getTokens@str 009E  
                            _MCC_USB_WRITE 0386                               ___fladd@aexp 0099  
                             ___fladd@bexp 009A               _USBStatusStageTimeoutCounter 00CE  
                          _PIN_MANAGER_IOC 05C8                      _TMR2_InterruptHandler 02DA  
                     ??_USBWakeFromSuspend 0015                 USBTransferOnePacket@handle 0093  
                     __end_of_CDCTxService 5C7A                               ___aomod@sign 009D  
                           i2_setMicroStep 772A                            _TMR1_Initialize 04B4  
                     ??_USBCheckCDCRequest 0001                                 _USB_CD_Ptr 0804  
