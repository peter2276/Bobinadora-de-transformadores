

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Nov 10 14:54:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=3
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=3
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   183                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   184                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   185                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   186                           	dabs	1,0x400,48,_BDT
   187                           	dabs	1,0x500,64,_cdc_data_tx
   188                           	dabs	1,0x438,8,_CtrlTrfData
   189                           	dabs	1,0x430,8,_SetupPkt
   190                           	dabs	1,0x540,64,_cdc_data_rx
   191  0000                     
   192                           ; Version 2.35
   193                           ; Generated 05/05/2021 GMT
   194                           ; 
   195                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution. Publication is not required when
   209                           ;        this file is used in an embedded application.
   210                           ; 
   211                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   212                           ;        software without specific prior written permission.
   213                           ; 
   214                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   215                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   216                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   217                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   218                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   219                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   220                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   221                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   222                           ; 
   223                           ; 
   224                           ; Code-generator required, PIC18F25K50 Definitions
   225                           ; 
   226                           ; SFR Addresses
   227  0000                     
   228                           	psect	idataCOMRAM
   229  007E28                     __pidataCOMRAM:
   230                           	callstack 0
   231                           
   232                           ;initializer for _ustep
   233  007E28  01                 	db	1
   234                           
   235                           	psect	idataBANK2
   236  007D8E                     __pidataBANK2:
   237                           	callstack 0
   238                           
   239                           ;initializer for stoa@F1177
   240  007D8E  28                 	db	40
   241  007D8F  6E                 	db	110
   242  007D90  75                 	db	117
   243  007D91  6C                 	db	108
   244  007D92  6C                 	db	108
   245  007D93  29                 	db	41
   246  007D94  00                 	db	0
   247                           
   248                           ;initializer for USBCommandFetch@F5850
   249  007D95  0A                 	db	10
   250  007D96  00                 	db	0
   251                           
   252                           ;initializer for getTokens@F4806
   253  007D97  20                 	db	32
   254  007D98  00                 	db	0
   255                           
   256                           	psect	mediumconst
   257  007EE6                     __pmediumconst:
   258                           	callstack 0
   259  007EE6  00                 	db	0
   260  007EE7                     
   261                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   262  007EE7  CCCD               	dw	52429
   263  007EE9  3DCC               	dw	15820
   264                           
   265                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   266  007EEB  0000               	dw	0
   267  007EED  0000               	dw	0
   268                           
   269                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   270  007EEF  0000               	dw	0
   271  007EF1  0000               	dw	0
   272                           
   273                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   274  007EF3  0000               	dw	0
   275  007EF5  0000               	dw	0
   276                           
   277                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   278  007EF7  0000               	dw	0
   279  007EF9  0000               	dw	0
   280                           
   281                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   282  007EFB  0000               	dw	0
   283  007EFD  0000               	dw	0
   284                           
   285                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   286  007EFF  0000               	dw	0
   287  007F01  0000               	dw	0
   288                           
   289                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   290  007F03  0000               	dw	0
   291  007F05  0000               	dw	0
   292                           
   293                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   294  007F07  0000               	dw	0
   295  007F09  0000               	dw	0
   296                           
   297                           ;Ventana_data.c: 21: const ConstP rtConstP = {
   298  007F0B  0000               	dw	0
   299  007F0D  0000               	dw	0
   300  007F0F  CCCD               	dw	52429
   301  007F11  BDCC               	dw	48588
   302  007F13                     __end_of_rtConstP:
   303                           	callstack 0
   304  007F13                     _USB_SD_Ptr:
   305                           	callstack 0
   306  007F13  BA                 	db	low _sd000
   307  007F14  7F                 	db	high _sd000
   308  007F15  5E                 	db	low _sd001
   309  007F16  7F                 	db	high _sd001
   310  007F17  92                 	db	low _sd002
   311  007F18  7F                 	db	high _sd002
   312  007F19                     __end_of_USB_SD_Ptr:
   313                           	callstack 0
   314  007F19                     _USB_CD_Ptr:
   315                           	callstack 0
   316  007F19  1B                 	db	low _configDescriptor1
   317  007F1A  7F                 	db	high _configDescriptor1
   318  007F1B                     __end_of_USB_CD_Ptr:
   319                           	callstack 0
   320  007F1B                     _configDescriptor1:
   321                           	callstack 0
   322  007F1B  09                 	db	9
   323  007F1C  02                 	db	2
   324  007F1D  43                 	db	67
   325  007F1E  00                 	db	0
   326  007F1F  02                 	db	2
   327  007F20  01                 	db	1
   328  007F21  00                 	db	0
   329  007F22  C0                 	db	192
   330  007F23  32                 	db	50
   331  007F24  09                 	db	9
   332  007F25  04                 	db	4
   333  007F26  00                 	db	0
   334  007F27  00                 	db	0
   335  007F28  01                 	db	1
   336  007F29  02                 	db	2
   337  007F2A  02                 	db	2
   338  007F2B  01                 	db	1
   339  007F2C  00                 	db	0
   340  007F2D  05                 	db	5
   341  007F2E  24                 	db	36
   342  007F2F  00                 	db	0
   343  007F30  10                 	db	16
   344  007F31  01                 	db	1
   345  007F32  04                 	db	4
   346  007F33  24                 	db	36
   347  007F34  02                 	db	2
   348  007F35  02                 	db	2
   349  007F36  05                 	db	5
   350  007F37  24                 	db	36
   351  007F38  06                 	db	6
   352  007F39  00                 	db	0
   353  007F3A  01                 	db	1
   354  007F3B  05                 	db	5
   355  007F3C  24                 	db	36
   356  007F3D  01                 	db	1
   357  007F3E  00                 	db	0
   358  007F3F  01                 	db	1
   359  007F40  07                 	db	7
   360  007F41  05                 	db	5
   361  007F42  81                 	db	129
   362  007F43  03                 	db	3
   363  007F44  0A                 	db	10
   364  007F45  00                 	db	0
   365  007F46  02                 	db	2
   366  007F47  09                 	db	9
   367  007F48  04                 	db	4
   368  007F49  01                 	db	1
   369  007F4A  00                 	db	0
   370  007F4B  02                 	db	2
   371  007F4C  0A                 	db	10
   372  007F4D  00                 	db	0
   373  007F4E  00                 	db	0
   374  007F4F  00                 	db	0
   375  007F50  07                 	db	7
   376  007F51  05                 	db	5
   377  007F52  02                 	db	2
   378  007F53  02                 	db	2
   379  007F54  40                 	db	64
   380  007F55  00                 	db	0
   381  007F56  00                 	db	0
   382  007F57  07                 	db	7
   383  007F58  05                 	db	5
   384  007F59  82                 	db	130
   385  007F5A  02                 	db	2
   386  007F5B  40                 	db	64
   387  007F5C  00                 	db	0
   388  007F5D  00                 	db	0
   389  007F5E                     __end_of_configDescriptor1:
   390                           	callstack 0
   391  007F5E                     _sd001:
   392                           	callstack 0
   393  007F5E  34                 	db	52
   394  007F5F  03                 	db	3
   395  007F60  004D               	dw	77
   396  007F62  0069               	dw	105
   397  007F64  0063               	dw	99
   398  007F66  0072               	dw	114
   399  007F68  006F               	dw	111
   400  007F6A  0063               	dw	99
   401  007F6C  0068               	dw	104
   402  007F6E  0069               	dw	105
   403  007F70  0070               	dw	112
   404  007F72  0020               	dw	32
   405  007F74  0054               	dw	84
   406  007F76  0065               	dw	101
   407  007F78  0063               	dw	99
   408  007F7A  0068               	dw	104
   409  007F7C  006E               	dw	110
   410  007F7E  006F               	dw	111
   411  007F80  006C               	dw	108
   412  007F82  006F               	dw	111
   413  007F84  0067               	dw	103
   414  007F86  0079               	dw	121
   415  007F88  0020               	dw	32
   416  007F8A  0049               	dw	73
   417  007F8C  006E               	dw	110
   418  007F8E  0063               	dw	99
   419  007F90  002E               	dw	46
   420  007F92                     __end_of_sd001:
   421                           	callstack 0
   422  007F92                     _sd002:
   423                           	callstack 0
   424  007F92  16                 	db	22
   425  007F93  03                 	db	3
   426  007F94  0042               	dw	66
   427  007F96  006F               	dw	111
   428  007F98  0062               	dw	98
   429  007F9A  0069               	dw	105
   430  007F9C  006E               	dw	110
   431  007F9E  0061               	dw	97
   432  007FA0  0064               	dw	100
   433  007FA2  006F               	dw	111
   434  007FA4  0072               	dw	114
   435  007FA6  0061               	dw	97
   436  007FA8                     __end_of_sd002:
   437                           	callstack 0
   438  007FA8                     _device_dsc:
   439                           	callstack 0
   440  007FA8  12                 	db	18
   441  007FA9  01                 	db	1
   442  007FAA  0200               	dw	512
   443  007FAC  02                 	db	2
   444  007FAD  00                 	db	0
   445  007FAE  00                 	db	0
   446  007FAF  08                 	db	8
   447  007FB0  04D8               	dw	1240
   448  007FB2  000A               	dw	10
   449  007FB4  0100               	dw	256
   450  007FB6  01                 	db	1
   451  007FB7  02                 	db	2
   452  007FB8  00                 	db	0
   453  007FB9  01                 	db	1
   454  007FBA                     __end_of_device_dsc:
   455                           	callstack 0
   456  007FBA                     _sd000:
   457                           	callstack 0
   458  007FBA  04                 	db	4
   459  007FBB  03                 	db	3
   460  007FBC  0409               	dw	1033
   461  007FBE                     __end_of_sd000:
   462                           	callstack 0
   463  0000                     _CCPR2H	set	3985
   464  0000                     _EEDATA	set	4008
   465  0000                     _EEADR	set	4009
   466  0000                     _EECON2	set	4007
   467  0000                     _EECON1bits	set	4006
   468  0000                     _ADCON0	set	4034
   469  0000                     _ADRESL	set	4035
   470  0000                     _TMR0L	set	4054
   471  0000                     _TMR0H	set	4055
   472  0000                     _T1CON	set	4045
   473  0000                     _TMR1L	set	4046
   474  0000                     _TMR1H	set	4047
   475  0000                     _T3CON	set	4017
   476  0000                     _TMR3L	set	4018
   477  0000                     _TMR3H	set	4019
   478  0000                     _T3GCON	set	4020
   479  0000                     _ACTCON	set	4021
   480  0000                     _RCONbits	set	4048
   481  0000                     _IPR3bits	set	4005
   482  0000                     _USTAT	set	3937
   483  0000                     _PIR3bits	set	4004
   484  0000                     _UADDR	set	3939
   485  0000                     _UIE	set	3940
   486  0000                     _UEIE	set	3942
   487  007FBE                     STR_1:
   488                           
   489                           ; BSR set to: 0
   490  007FBE  0A                 	db	10
   491  007FBF  20                 	db	32
   492  007FC0  25                 	db	37
   493  007FC1  2E                 	db	46
   494  007FC2  35                 	db	53	;'5'
   495  007FC3  66                 	db	102	;'f'
   496  007FC4  7C                 	db	124
   497  007FC5  25                 	db	37
   498  007FC6  64                 	db	100	;'d'
   499  007FC7  7C                 	db	124
   500  007FC8  25                 	db	37
   501  007FC9  64                 	db	100	;'d'
   502  007FCA  00                 	db	0
   503  007FCB                     STR_23:
   504                           
   505                           ; BSR set to: 0
   506  007FCB  49                 	db	73	;'I'
   507  007FCC  4E                 	db	78	;'N'
   508  007FCD  46                 	db	70	;'F'
   509  007FCE  49                 	db	73	;'I'
   510  007FCF  4E                 	db	78	;'N'
   511  007FD0  49                 	db	73	;'I'
   512  007FD1  54                 	db	84	;'T'
   513  007FD2  59                 	db	89	;'Y'
   514  007FD3  00                 	db	0
   515  007FD4                     STR_22:
   516                           
   517                           ; BSR set to: 0
   518  007FD4  69                 	db	105	;'i'
   519  007FD5  6E                 	db	110	;'n'
   520  007FD6  66                 	db	102	;'f'
   521  007FD7  69                 	db	105	;'i'
   522  007FD8  6E                 	db	110	;'n'
   523  007FD9  69                 	db	105	;'i'
   524  007FDA  74                 	db	116	;'t'
   525  007FDB  79                 	db	121	;'y'
   526  007FDC  00                 	db	0
   527  007FDD                     STR_3:
   528                           
   529                           ; BSR set to: 0
   530  007FDD  25                 	db	37
   531  007FDE  63                 	db	99	;'c'
   532  007FDF  20                 	db	32
   533  007FE0  0A                 	db	10
   534  007FE1  00                 	db	0
   535  007FE2                     STR_2:
   536                           
   537                           ; BSR set to: 0
   538  007FE2  25                 	db	37
   539  007FE3  73                 	db	115	;'s'
   540  007FE4  25                 	db	37
   541  007FE5  73                 	db	115	;'s'
   542  007FE6  00                 	db	0
   543  007FE7                     STR_4:
   544                           
   545                           ; BSR set to: 0
   546  007FE7  49                 	db	73	;'I'
   547  007FE8  4E                 	db	78	;'N'
   548  007FE9  46                 	db	70	;'F'
   549  007FEA  00                 	db	0
   550  007FEB                     STR_8:
   551                           
   552                           ; BSR set to: 0
   553  007FEB  4E                 	db	78	;'N'
   554  007FEC  41                 	db	65	;'A'
   555  007FED  4E                 	db	78	;'N'
   556  007FEE  00                 	db	0
   557  007FEF                     STR_5:
   558                           
   559                           ; BSR set to: 0
   560  007FEF  69                 	db	105	;'i'
   561  007FF0  6E                 	db	110	;'n'
   562  007FF1  66                 	db	102	;'f'
   563  007FF2  00                 	db	0
   564  007FF3                     STR_9:
   565                           
   566                           ; BSR set to: 0
   567  007FF3  6E                 	db	110	;'n'
   568  007FF4  61                 	db	97	;'a'
   569  007FF5  6E                 	db	110	;'n'
   570  007FF6  00                 	db	0
   571  007FF7                     STR_17:
   572                           
   573                           ; BSR set to: 0
   574  007FF7  6C                 	db	108	;'l'
   575  007FF8  6C                 	db	108	;'l'
   576  007FF9  73                 	db	115	;'s'
   577  007FFA  00                 	db	0
   578  007FFB                     STR_12:
   579                           
   580                           ; BSR set to: 0
   581  007FFB  6C                 	db	108	;'l'
   582  007FFC  66                 	db	102	;'f'
   583  007FFD  00                 	db	0
   584  007FFE  00                 	db	0	; dummy byte at the end
   585  0000                     
   586                           	psect	nvBANK2
   587  0002FA                     __pnvBANK2:
   588                           	callstack 0
   589  0002FA                     _IOCC2_InterruptHandler:
   590                           	callstack 0
   591  0002FA                     	ds	2
   592  0000                     _TMR1	set	4046
   593  0000                     _TMR3	set	4018
   594  0000                     _LATAbits	set	3977
   595  0000                     _LATCbits	set	3979
   596  0000                     _PORTCbits	set	3970
   597  0000                     _PORTB	set	3969
   598  0000                     _LATBbits	set	3978
   599  0000                     _ADCON0bits	set	4034
   600  0000                     _T0CON	set	4053
   601  0000                     _T2CONbits	set	4026
   602  0000                     _T3CONbits	set	4017
   603  0000                     _UEP0bits	set	3946
   604  0000                     _UCON	set	3936
   605  0000                     _UIEbits	set	3940
   606  0000                     _UIRbits	set	3941
   607  0000                     _PLLRDY	set	32407
   608  0000                     _ANSELA	set	3931
   609  0000                     _ANSELB	set	3932
   610  0000                     _ANSELC	set	3933
   611  0000                     _UCONbits	set	3936
   612  0000                     _UCFG	set	3938
   613  0000                     _UIR	set	3941
   614  0000                     _UEIR	set	3943
   615  0000                     _PIE3bits	set	4003
   616  0000                     _UEP0	set	3946
   617  0000                     _PORTBbits	set	3969
   618  0000                     _WPUB	set	3973
   619  0000                     _LATA	set	3977
   620  0000                     _OSCTUNE	set	3995
   621  0000                     _PIE1bits	set	3997
   622  0000                     _PIE2bits	set	4000
   623  0000                     _UEP1	set	3947
   624  0000                     _OSCCON2	set	4050
   625  0000                     _OSCCON	set	4051
   626  0000                     _INTCONbits	set	4082
   627  0000                     _TABLAT	set	4085
   628  0000                     _TBLPTRL	set	4086
   629  0000                     _TBLPTRH	set	4087
   630  0000                     _TBLPTRU	set	4088
   631  0000                     _PIR2bits	set	4001
   632  0000                     _PIR1bits	set	3998
   633  0000                     _T0CONbits	set	4053
   634  0000                     _T2CON	set	4026
   635  0000                     _PR2	set	4027
   636  0000                     _ADCON2	set	4032
   637  0000                     _ADCON1	set	4033
   638  0000                     _T1GCON	set	4044
   639  0000                     _TMR2	set	4028
   640  0000                     _INTCON2bits	set	4081
   641  0000                     _ADRESH	set	4036
   642  0000                     _CCPR2L	set	3984
   643  0000                     _TRISA	set	3986
   644  0000                     _LATC	set	3979
   645  0000                     _LATB	set	3978
   646  0000                     _CCP2CON	set	3991
   647  0000                     _TRISC	set	3988
   648  0000                     _TRISB	set	3987
   649  0000                     _IOCCbits	set	3975
   650  0000                     _PORTC	set	3970
   651                           
   652                           ; #config settings
   653                           
   654                           	psect	cinit
   655  006D5C                     __pcinit:
   656                           	callstack 0
   657  006D5C                     start_initialization:
   658                           	callstack 0
   659  006D5C                     __initialization:
   660                           	callstack 0
   661                           
   662                           ; Initialize objects allocated to BANK2 (11 bytes)
   663                           ; load TBLPTR registers with __pidataBANK2
   664  006D5C  0E8E               	movlw	low __pidataBANK2
   665  006D5E  6EF6               	movwf	tblptrl,c
   666  006D60  0E7D               	movlw	high __pidataBANK2
   667  006D62  6EF7               	movwf	tblptrh,c
   668  006D64  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   669  006D66  6EF8               	movwf	tblptru,c
   670  006D68  EE02  F0EF         	lfsr	0,__pdataBANK2
   671  006D6C  EE10 F00B          	lfsr	1,11
   672  006D70                     copy_data0:
   673  006D70  0009               	tblrd		*+
   674  006D72  CFF5 FFEE          	movff	tablat,postinc0
   675  006D76  50E5               	movf	postdec1,w,c
   676  006D78  50E1               	movf	fsr1l,w,c
   677  006D7A  E1FA               	bnz	copy_data0
   678                           
   679                           ; Initialize objects allocated to COMRAM (1 bytes)
   680                           ; load TBLPTR registers with __pidataCOMRAM
   681  006D7C  0E28               	movlw	low __pidataCOMRAM
   682  006D7E  6EF6               	movwf	tblptrl,c
   683  006D80  0E7E               	movlw	high __pidataCOMRAM
   684  006D82  6EF7               	movwf	tblptrh,c
   685  006D84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   686  006D86  6EF8               	movwf	tblptru,c
   687  006D88  0009               	tblrd		*+	;fetch initializer
   688  006D8A  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   689                           
   690                           ; Clear objects allocated to BIGRAMl (320 bytes)
   691  006D8E  EE05  F080         	lfsr	0,__pbssBIGRAMl
   692  006D92  EE11 F040          	lfsr	1,320
   693  006D96                     clear_0:
   694  006D96  6AEE               	clrf	postinc0,c
   695  006D98  50E5               	movf	postdec1,w,c
   696  006D9A  50E1               	movf	fsr1l,w,c
   697  006D9C  E1FC               	bnz	clear_0
   698  006D9E  50E2               	movf	fsr1h,w,c
   699  006DA0  E1FA               	bnz	clear_0
   700                           
   701                           ; Clear objects allocated to BANK3 (228 bytes)
   702  006DA2  EE03  F000         	lfsr	0,__pbssBANK3
   703  006DA6  0EE4               	movlw	228
   704  006DA8                     clear_1:
   705  006DA8  6AEE               	clrf	postinc0,c
   706  006DAA  06E8               	decf	wreg,f,c
   707  006DAC  E1FD               	bnz	clear_1
   708                           
   709                           ; Clear objects allocated to BANK2 (65 bytes)
   710  006DAE  EE02  F0AE         	lfsr	0,__pbssBANK2
   711  006DB2  0E41               	movlw	65
   712  006DB4                     clear_2:
   713  006DB4  6AEE               	clrf	postinc0,c
   714  006DB6  06E8               	decf	wreg,f,c
   715  006DB8  E1FD               	bnz	clear_2
   716                           
   717                           ; Clear objects allocated to BANK1 (61 bytes)
   718  006DBA  EE01  F0AF         	lfsr	0,__pbssBANK1
   719  006DBE  0E3D               	movlw	61
   720  006DC0                     clear_3:
   721  006DC0  6AEE               	clrf	postinc0,c
   722  006DC2  06E8               	decf	wreg,f,c
   723  006DC4  E1FD               	bnz	clear_3
   724                           
   725                           ; Clear objects allocated to BANK0 (44 bytes)
   726  006DC6  EE00  F0A8         	lfsr	0,__pbssBANK0
   727  006DCA  0E2C               	movlw	44
   728  006DCC                     clear_4:
   729  006DCC  6AEE               	clrf	postinc0,c
   730  006DCE  06E8               	decf	wreg,f,c
   731  006DD0  E1FD               	bnz	clear_4
   732                           
   733                           ; Clear objects allocated to COMRAM (5 bytes)
   734  006DD2  6A5D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   735  006DD4  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   736  006DD6  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   737  006DD8  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   738  006DDA  6A59               	clrf	__pbssCOMRAM& (0+255),c
   739  006DDC                     end_of_initialization:
   740                           	callstack 0
   741  006DDC                     __end_of__initialization:
   742                           	callstack 0
   743  006DDC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   744  006DDE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   745  006DE0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   746  006DE2  6EF8               	movwf	tblptru,c
   747  006DE4  0100               	movlb	0
   748  006DE6  EFA3  F02C         	goto	_main	;jump to C main() function
   749                           
   750                           	psect	bssCOMRAM
   751  000059                     __pbssCOMRAM:
   752                           	callstack 0
   753  000059                     _pBDTEntryEP0OutNext:
   754                           	callstack 0
   755  000059                     	ds	2
   756  00005B                     _controlTransferState:
   757                           	callstack 0
   758  00005B                     	ds	1
   759  00005C                     _USBDeviceState:
   760                           	callstack 0
   761  00005C                     	ds	1
   762  00005D                     _USTATcopy:
   763                           	callstack 0
   764  00005D                     	ds	1
   765                           
   766                           	psect	dataCOMRAM
   767  00005E                     __pdataCOMRAM:
   768                           	callstack 0
   769  00005E                     _ustep:
   770                           	callstack 0
   771  00005E                     	ds	1
   772                           
   773                           	psect	bssBANK0
   774  0000A8                     __pbssBANK0:
   775                           	callstack 0
   776  0000A8                     _outPipes:
   777                           	callstack 0
   778  0000A8                     	ds	8
   779  0000B0                     _inPipes:
   780                           	callstack 0
   781  0000B0                     	ds	6
   782  0000B6                     _pBDTEntryIn:
   783                           	callstack 0
   784  0000B6                     	ds	6
   785  0000BC                     _width:
   786                           	callstack 0
   787  0000BC                     	ds	2
   788  0000BE                     _prec:
   789                           	callstack 0
   790  0000BE                     	ds	2
   791  0000C0                     _flags:
   792                           	callstack 0
   793  0000C0                     	ds	2
   794  0000C2                     _pBDTEntryEP0OutCurrent:
   795                           	callstack 0
   796  0000C2                     	ds	2
   797  0000C4                     _largo:
   798                           	callstack 0
   799  0000C4                     	ds	1
   800  0000C5                     _angulo:
   801                           	callstack 0
   802  0000C5                     	ds	1
   803  0000C6                     _cdc_tx_len:
   804                           	callstack 0
   805  0000C6                     	ds	1
   806  0000C7                     _cdc_trf_state:
   807                           	callstack 0
   808  0000C7                     	ds	1
   809  0000C8                     _cdc_rx_len:
   810                           	callstack 0
   811  0000C8                     	ds	1
   812  0000C9                     _USBDeferINDataStagePackets:
   813                           	callstack 0
   814  0000C9                     	ds	1
   815  0000CA                     _USBStatusStageEnabledFlag2:
   816                           	callstack 0
   817  0000CA                     	ds	1
   818  0000CB                     _USBStatusStageEnabledFlag1:
   819                           	callstack 0
   820  0000CB                     	ds	1
   821  0000CC                     _USBDeferStatusStagePacket:
   822                           	callstack 0
   823  0000CC                     	ds	1
   824  0000CD                     _USBStatusStageTimeoutCounter:
   825                           	callstack 0
   826  0000CD                     	ds	1
   827  0000CE                     _BothEP0OutUOWNsSet:
   828                           	callstack 0
   829  0000CE                     	ds	1
   830  0000CF                     _endpoint_number:
   831                           	callstack 0
   832  0000CF                     	ds	1
   833  0000D0                     _USBBusIsSuspended:
   834                           	callstack 0
   835  0000D0                     	ds	1
   836  0000D1                     _RemoteWakeup:
   837                           	callstack 0
   838  0000D1                     	ds	1
   839  0000D2                     _shortPacketStatus:
   840                           	callstack 0
   841  0000D2                     	ds	1
   842  0000D3                     _USBActiveConfiguration:
   843                           	callstack 0
   844  0000D3                     	ds	1
   845                           
   846                           	psect	bssBANK1
   847  0001AF                     __pbssBANK1:
   848                           	callstack 0
   849  0001AF                     _pBDTEntryOut:
   850                           	callstack 0
   851  0001AF                     	ds	6
   852  0001B5                     _inverse_time_feed:
   853                           	callstack 0
   854  0001B5                     	ds	4
   855  0001B9                     _pCDCDst:
   856                           	callstack 0
   857  0001B9                     	ds	3
   858  0001BC                     _pCDCSrc:
   859                           	callstack 0
   860  0001BC                     	ds	3
   861  0001BF                     _ep_data_out:
   862                           	callstack 0
   863  0001BF                     	ds	3
   864  0001C2                     _ep_data_in:
   865                           	callstack 0
   866  0001C2                     	ds	3
   867  0001C5                     strtok@p:
   868                           	callstack 0
   869  0001C5                     	ds	2
   870  0001C7                     _pasos:
   871                           	callstack 0
   872  0001C7                     	ds	2
   873  0001C9                     _timer0ReloadVal:
   874                           	callstack 0
   875  0001C9                     	ds	2
   876  0001CB                     _TMR0_InterruptHandler:
   877                           	callstack 0
   878  0001CB                     	ds	2
   879  0001CD                     _TMR2_InterruptHandler:
   880                           	callstack 0
   881  0001CD                     	ds	2
   882  0001CF                     _TMR3_InterruptHandler:
   883                           	callstack 0
   884  0001CF                     	ds	2
   885  0001D1                     _timer3ReloadVal:
   886                           	callstack 0
   887  0001D1                     	ds	2
   888  0001D3                     _CDCDataInHandle:
   889                           	callstack 0
   890  0001D3                     	ds	2
   891  0001D5                     _CDCDataOutHandle:
   892                           	callstack 0
   893  0001D5                     	ds	2
   894  0001D7                     _pDst:
   895                           	callstack 0
   896  0001D7                     	ds	2
   897  0001D9                     _flag_angulo:
   898                           	callstack 0
   899  0001D9                     	ds	1
   900  0001DA                     _index:
   901                           	callstack 0
   902  0001DA                     	ds	1
   903  0001DB                     _prescaler:
   904                           	callstack 0
   905  0001DB                     	ds	1
   906  0001DC                     _flag:
   907                           	callstack 0
   908  0001DC                     	ds	1
   909  0001DD                     _busy:
   910                           	callstack 0
   911  0001DD                     	ds	1
   912  0001DE                     _cola:
   913                           	callstack 0
   914  0001DE                     	ds	1
   915  0001DF                     _cabeza:
   916                           	callstack 0
   917  0001DF                     	ds	1
   918  0001E0                     _numBytesRead:
   919                           	callstack 0
   920  0001E0                     	ds	1
   921  0001E1                     _feed_state:
   922                           	callstack 0
   923  0001E1                     	ds	1
   924  0001E2                     _control_signal_bitmap:
   925                           	callstack 0
   926  0001E2                     	ds	1
   927  0001E3                     _cdc_mem_type:
   928                           	callstack 0
   929  0001E3                     	ds	1
   930  0001E4                     _USBTicksSinceSuspendEnd:
   931                           	callstack 0
   932  0001E4                     	ds	1
   933  0001E5                     _USBDeferOUTDataStagePackets:
   934                           	callstack 0
   935  0001E5                     	ds	1
   936  0001E6                     _feed:
   937                           	callstack 0
   938  0001E6                     	ds	4
   939  0001EA                     _USBAlternateInterface:
   940                           	callstack 0
   941  0001EA                     	ds	2
   942                           
   943                           	psect	bssBANK2
   944  0002AE                     __pbssBANK2:
   945                           	callstack 0
   946  0002AE                     floorf@F526:
   947                           	callstack 0
   948  0002AE                     	ds	4
   949  0002B2                     ___fpclassifyf@F465:
   950                           	callstack 0
   951  0002B2                     	ds	4
   952  0002B6                     _rtY:
   953                           	callstack 0
   954  0002B6                     	ds	4
   955  0002BA                     _inverse_S:
   956                           	callstack 0
   957  0002BA                     	ds	4
   958  0002BE                     _pos_absoluta_Z:
   959                           	callstack 0
   960  0002BE                     	ds	4
   961  0002C2                     _pos_relativa_Z:
   962                           	callstack 0
   963  0002C2                     	ds	4
   964  0002C6                     _S:
   965                           	callstack 0
   966  0002C6                     	ds	4
   967  0002CA                     _BaudRateGen:
   968                           	callstack 0
   969  0002CA                     	ds	4
   970  0002CE                     _USB1msTickCount:
   971                           	callstack 0
   972  0002CE                     	ds	4
   973  0002D2                     _nout:
   974                           	callstack 0
   975  0002D2                     	ds	2
   976  0002D4                     _F:
   977                           	callstack 0
   978  0002D4                     	ds	2
   979  0002D6                     _current:
   980                           	callstack 0
   981  0002D6                     	ds	2
   982  0002D8                     _ADC_InterruptHandler:
   983                           	callstack 0
   984  0002D8                     	ds	2
   985  0002DA                     _timer1ReloadVal:
   986                           	callstack 0
   987  0002DA                     	ds	2
   988  0002DC                     _dummy_encapsulated_cmd_response:
   989                           	callstack 0
   990  0002DC                     	ds	8
   991  0002E4                     _line_coding:
   992                           	callstack 0
   993  0002E4                     	ds	7
   994  0002EB                     _rtU:
   995                           	callstack 0
   996  0002EB                     	ds	4
   997                           
   998                           	psect	dataBANK2
   999  0002EF                     __pdataBANK2:
  1000                           	callstack 0
  1001  0002EF                     stoa@F1177:
  1002                           	callstack 0
  1003  0002EF                     	ds	7
  1004  0002F6                     USBCommandFetch@F5850:
  1005                           	callstack 0
  1006  0002F6                     	ds	2
  1007  0002F8                     getTokens@F4806:
  1008                           	callstack 0
  1009  0002F8                     	ds	2
  1010                           
  1011                           	psect	bssBANK3
  1012  000300                     __pbssBANK3:
  1013                           	callstack 0
  1014  000300                     _rtDW:
  1015                           	callstack 0
  1016  000300                     	ds	44
  1017  00032C                     _cdc_notice:
  1018                           	callstack 0
  1019  00032C                     	ds	10
  1020  000336                     _dbuf:
  1021                           	callstack 0
  1022  000336                     	ds	80
  1023  000386                     _readBuffer:
  1024                           	callstack 0
  1025  000386                     	ds	32
  1026  0003A6                     _writeBuffer:
  1027                           	callstack 0
  1028  0003A6                     	ds	32
  1029  0003C6                     _lastToken:
  1030                           	callstack 0
  1031  0003C6                     	ds	30
  1032                           
  1033                           	psect	bssBIGRAMl
  1034  000580                     __pbssBIGRAMl:
  1035                           	callstack 0
  1036  000580                     _fila:
  1037                           	callstack 0
  1038  000580                     	ds	320
  1039                           
  1040                           	psect	cstackBANK2
  1041  000200                     __pcstackBANK2:
  1042                           	callstack 0
  1043  000200                     executeCommand@TokensCom:
  1044                           	callstack 0
  1045  000200                     USBCommandFetch@readTokens:
  1046                           	callstack 0
  1047                           
  1048                           ; 60 bytes @ 0x0
  1049  000200                     	ds	40
  1050  000228                     executeCommand@strCommand:
  1051                           	callstack 0
  1052                           
  1053                           ; 30 bytes @ 0x28
  1054  000228                     	ds	20
  1055  00023C                     USBCommandFetch@s:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x3C
  1059  00023C                     	ds	2
  1060  00023E                     USBCommandFetch@lastTokenFlag:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x3E
  1064  00023E                     	ds	2
  1065  000240                     USBCommandFetch@i:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x40
  1069  000240                     	ds	6
  1070  000246                     executeCommand@comando:
  1071                           	callstack 0
  1072                           
  1073                           ; 100 bytes @ 0x46
  1074  000246                     	ds	100
  1075  0002AA                     executeCommand@i:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xAA
  1079  0002AA                     	ds	2
  1080  0002AC                     executeCommand@numTokens:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xAC
  1084  0002AC                     	ds	2
  1085                           
  1086                           	psect	cstackBANK1
  1087  000100                     __pcstackBANK1:
  1088                           	callstack 0
  1089  000100                     ?_dtoa:
  1090                           	callstack 0
  1091  000100                     ?___fldiv:
  1092                           	callstack 0
  1093  000100                     ?___flmul:
  1094                           	callstack 0
  1095  000100                     dtoa@fp:
  1096                           	callstack 0
  1097  000100                     ___fldiv@b:
  1098                           	callstack 0
  1099  000100                     ___flmul@b:
  1100                           	callstack 0
  1101  000100                     stoa@nuls:
  1102                           	callstack 0
  1103                           
  1104                           ; 7 bytes @ 0x0
  1105  000100                     	ds	2
  1106  000102                     dtoa@d:
  1107                           	callstack 0
  1108                           
  1109                           ; 8 bytes @ 0x2
  1110  000102                     	ds	2
  1111  000104                     ___fldiv@a:
  1112                           	callstack 0
  1113  000104                     ___flmul@a:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x4
  1117  000104                     	ds	3
  1118  000107                     stoa@i:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x7
  1122  000107                     	ds	1
  1123  000108                     ??___fldiv:
  1124  000108                     ??___flmul:
  1125                           
  1126                           ; 1 bytes @ 0x8
  1127  000108                     	ds	1
  1128  000109                     stoa@w:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x9
  1132  000109                     	ds	1
  1133  00010A                     ??_dtoa:
  1134                           
  1135                           ; 1 bytes @ 0xA
  1136  00010A                     	ds	1
  1137  00010B                     stoa@cp:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0xB
  1141  00010B                     	ds	1
  1142  00010C                     ___flmul@sign:
  1143                           	callstack 0
  1144  00010C                     ___fldiv@rem:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0xC
  1148  00010C                     	ds	1
  1149  00010D                     ___flmul@aexp:
  1150                           	callstack 0
  1151  00010D                     stoa@p:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0xD
  1155  00010D                     	ds	1
  1156  00010E                     ___flmul@bexp:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0xE
  1160  00010E                     	ds	1
  1161  00010F                     stoa@l:
  1162                           	callstack 0
  1163  00010F                     ___flmul@grs:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0xF
  1167  00010F                     	ds	1
  1168  000110                     ___fldiv@sign:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x10
  1172  000110                     	ds	1
  1173  000111                     ___fldiv@new_exp:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x11
  1177  000111                     	ds	1
  1178  000112                     _dtoa$4981:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x12
  1182  000112                     	ds	1
  1183  000113                     ___fldiv@grs:
  1184                           	callstack 0
  1185  000113                     ___flmul@prod:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x13
  1189  000113                     	ds	1
  1190  000114                     dtoa@p:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x14
  1194  000114                     	ds	2
  1195  000116                     dtoa@w:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x16
  1199  000116                     	ds	1
  1200  000117                     ___fldiv@bexp:
  1201                           	callstack 0
  1202  000117                     ___flmul@temp:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x17
  1206  000117                     	ds	1
  1207  000118                     ___fldiv@aexp:
  1208                           	callstack 0
  1209  000118                     dtoa@s:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x18
  1213  000118                     	ds	1
  1214  000119                     ?___flsub:
  1215                           	callstack 0
  1216  000119                     ?_floorf:
  1217                           	callstack 0
  1218  000119                     ?___fltol:
  1219                           	callstack 0
  1220  000119                     ___flge@ff1:
  1221                           	callstack 0
  1222  000119                     ___fltol@f1:
  1223                           	callstack 0
  1224  000119                     ___flsub@b:
  1225                           	callstack 0
  1226  000119                     floorf@x:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x19
  1230  000119                     	ds	1
  1231  00011A                     dtoa@n:
  1232                           	callstack 0
  1233                           
  1234                           ; 8 bytes @ 0x1A
  1235  00011A                     	ds	3
  1236  00011D                     ??_floorf:
  1237  00011D                     ??___fltol:
  1238  00011D                     ___flge@ff2:
  1239                           	callstack 0
  1240  00011D                     ___flsub@a:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x1D
  1244  00011D                     	ds	4
  1245  000121                     ??___flge:
  1246                           
  1247                           ; 1 bytes @ 0x21
  1248  000121                     	ds	1
  1249  000122                     dtoa@i:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x22
  1253  000122                     	ds	1
  1254  000123                     floorf@m:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x23
  1258  000123                     	ds	2
  1259  000125                     ?_strtof:
  1260                           	callstack 0
  1261  000125                     strtof@s:
  1262                           	callstack 0
  1263  000125                     mover_2@distancia:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x25
  1267  000125                     	ds	2
  1268  000127                     floorf@e:
  1269                           	callstack 0
  1270  000127                     strtof@res:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x27
  1274  000127                     	ds	2
  1275  000129                     ??_strtof:
  1276  000129                     ??_mover_2:
  1277  000129                     floorf@u:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x29
  1281  000129                     	ds	2
  1282  00012B                     _mover_2$5755:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x2B
  1286  00012B                     	ds	2
  1287  00012D                     ?_efgtoa:
  1288                           	callstack 0
  1289  00012D                     efgtoa@fp:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x2D
  1293  00012D                     	ds	2
  1294  00012F                     strtof@digit:
  1295                           	callstack 0
  1296  00012F                     G_01@axis:
  1297                           	callstack 0
  1298  00012F                     G_95@axis:
  1299                           	callstack 0
  1300  00012F                     efgtoa@f:
  1301                           	callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x2F
  1304  00012F                     	ds	1
  1305  000130                     strtof@flags:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x30
  1309  000130                     	ds	1
  1310  000131                     G_01@n:
  1311                           	callstack 0
  1312  000131                     G_95@n:
  1313                           	callstack 0
  1314  000131                     strtof@expon:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0x31
  1318  000131                     	ds	2
  1319  000133                     ??_G_01:
  1320  000133                     ??_G_95:
  1321  000133                     efgtoa@c:
  1322                           	callstack 0
  1323  000133                     strtof@eexp:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x33
  1327  000133                     	ds	1
  1328  000134                     ??_efgtoa:
  1329                           
  1330                           ; 1 bytes @ 0x34
  1331  000134                     	ds	1
  1332  000135                     G_01@distancia:
  1333                           	callstack 0
  1334  000135                     G_95@distancia:
  1335                           	callstack 0
  1336  000135                     strtof@_u:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x35
  1340  000135                     	ds	4
  1341  000139                     strtof@i:
  1342                           	callstack 0
  1343  000139                     G_01@i:
  1344                           	callstack 0
  1345  000139                     G_95@i:
  1346                           	callstack 0
  1347  000139                     _efgtoa$5005:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x39
  1351  000139                     	ds	1
  1352  00013A                     getComands@comandos:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x3A
  1356  00013A                     	ds	1
  1357  00013B                     G_01@i_3982:
  1358                           	callstack 0
  1359  00013B                     G_95@i_3990:
  1360                           	callstack 0
  1361  00013B                     _efgtoa$5012:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x3B
  1365  00013B                     	ds	1
  1366  00013C                     getComands@tokens:
  1367                           	callstack 0
  1368                           
  1369                           ; 2 bytes @ 0x3C
  1370  00013C                     	ds	1
  1371  00013D                     _efgtoa$5013:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x3D
  1375  00013D                     	ds	1
  1376  00013E                     getComands@size:
  1377                           	callstack 0
  1378                           
  1379                           ; 1 bytes @ 0x3E
  1380  00013E                     	ds	1
  1381  00013F                     ??_getComands:
  1382  00013F                     efgtoa@t:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x3F
  1386  00013F                     	ds	2
  1387  000141                     efgtoa@pp:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x41
  1391  000141                     	ds	2
  1392  000143                     efgtoa@ne:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x43
  1396  000143                     	ds	2
  1397  000145                     efgtoa@m:
  1398                           	callstack 0
  1399  000145                     getComands@buff:
  1400                           	callstack 0
  1401                           
  1402                           ; 10 bytes @ 0x45
  1403  000145                     	ds	2
  1404  000147                     efgtoa@ou:
  1405                           	callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x47
  1408  000147                     	ds	4
  1409  00014B                     efgtoa@d:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x4B
  1413  00014B                     	ds	2
  1414  00014D                     efgtoa@sign:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x4D
  1418  00014D                     	ds	2
  1419  00014F                     getComands@i:
  1420                           	callstack 0
  1421  00014F                     efgtoa@p:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x4F
  1425  00014F                     	ds	2
  1426  000151                     efgtoa@w:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x51
  1430  000151                     	ds	2
  1431  000153                     efgtoa@nmode:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0x53
  1435  000153                     	ds	1
  1436  000154                     efgtoa@mode:
  1437                           	callstack 0
  1438                           
  1439                           ; 1 bytes @ 0x54
  1440  000154                     	ds	1
  1441  000155                     efgtoa@h:
  1442                           	callstack 0
  1443                           
  1444                           ; 4 bytes @ 0x55
  1445  000155                     	ds	4
  1446  000159                     efgtoa@l:
  1447                           	callstack 0
  1448                           
  1449                           ; 4 bytes @ 0x59
  1450  000159                     	ds	4
  1451  00015D                     efgtoa@i:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x5D
  1455  00015D                     	ds	2
  1456  00015F                     efgtoa@g:
  1457                           	callstack 0
  1458                           
  1459                           ; 4 bytes @ 0x5F
  1460  00015F                     	ds	4
  1461  000163                     efgtoa@e:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x63
  1465  000163                     	ds	2
  1466  000165                     efgtoa@n:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x65
  1470  000165                     	ds	2
  1471  000167                     efgtoa@u:
  1472                           	callstack 0
  1473                           
  1474                           ; 4 bytes @ 0x67
  1475  000167                     	ds	4
  1476  00016B                     ?_vfpfcnvrt:
  1477                           	callstack 0
  1478  00016B                     vfpfcnvrt@fp:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x6B
  1482  00016B                     	ds	2
  1483  00016D                     vfpfcnvrt@fmt:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x6D
  1487  00016D                     	ds	2
  1488  00016F                     vfpfcnvrt@ap:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x6F
  1492  00016F                     	ds	2
  1493  000171                     ??_vfpfcnvrt:
  1494                           
  1495                           ; 1 bytes @ 0x71
  1496  000171                     	ds	4
  1497  000175                     vfpfcnvrt@ll:
  1498                           	callstack 0
  1499                           
  1500                           ; 8 bytes @ 0x75
  1501  000175                     	ds	8
  1502  00017D                     vfpfcnvrt@cp:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x7D
  1506  00017D                     	ds	2
  1507  00017F                     _vfpfcnvrt$5046:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x7F
  1511  00017F                     	ds	2
  1512  000181                     vfpfcnvrt@f:
  1513                           	callstack 0
  1514                           
  1515                           ; 4 bytes @ 0x81
  1516  000181                     	ds	4
  1517  000185                     vfpfcnvrt@ct:
  1518                           	callstack 0
  1519                           
  1520                           ; 3 bytes @ 0x85
  1521  000185                     	ds	3
  1522  000188                     vfpfcnvrt@c:
  1523                           	callstack 0
  1524                           
  1525                           ; 1 bytes @ 0x88
  1526  000188                     	ds	1
  1527  000189                     ?_vfprintf:
  1528                           	callstack 0
  1529  000189                     vfprintf@fp:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x89
  1533  000189                     	ds	2
  1534  00018B                     vfprintf@fmt:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x8B
  1538  00018B                     	ds	2
  1539  00018D                     vfprintf@ap:
  1540                           	callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x8D
  1543  00018D                     	ds	2
  1544  00018F                     vfprintf@cfmt:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x8F
  1548  00018F                     	ds	2
  1549  000191                     ?_sprintf:
  1550                           	callstack 0
  1551  000191                     sprintf@s:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x91
  1555  000191                     	ds	2
  1556  000193                     sprintf@fmt:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x93
  1560  000193                     	ds	10
  1561  00019D                     sprintf@ap:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x9D
  1565  00019D                     	ds	2
  1566  00019F                     sprintf@f:
  1567                           	callstack 0
  1568                           
  1569                           ; 11 bytes @ 0x9F
  1570  00019F                     	ds	11
  1571  0001AA                     ??_USBCommandFetch:
  1572  0001AA                     ??_executeCommand:
  1573                           
  1574                           ; 1 bytes @ 0xAA
  1575  0001AA                     	ds	4
  1576  0001AE                     ??_main:
  1577                           
  1578                           ; 1 bytes @ 0xAE
  1579  0001AE                     	ds	1
  1580                           
  1581                           	psect	cstackBANK0
  1582  000060                     __pcstackBANK0:
  1583                           	callstack 0
  1584  000060                     Encoder_ISR@a:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x0
  1588  000060                     	ds	2
  1589  000062                     _Encoder_ISR$5974:
  1590                           	callstack 0
  1591                           
  1592                           ; 4 bytes @ 0x2
  1593  000062                     	ds	4
  1594  000066                     _Encoder_ISR$5975:
  1595                           	callstack 0
  1596                           
  1597                           ; 4 bytes @ 0x6
  1598  000066                     	ds	4
  1599  00006A                     Encoder_ISR@tmr0:
  1600                           	callstack 0
  1601                           
  1602                           ; 2 bytes @ 0xA
  1603  00006A                     	ds	2
  1604  00006C                     Encoder_ISR@tics:
  1605                           	callstack 0
  1606                           
  1607                           ; 4 bytes @ 0xC
  1608  00006C                     	ds	4
  1609  000070                     Encoder_ISR@salida:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x10
  1613  000070                     	ds	4
  1614  000074                     Encoder_ISR@y:
  1615                           	callstack 0
  1616                           
  1617                           ; 12 bytes @ 0x14
  1618  000074                     	ds	12
  1619  000080                     ??_INTERRUPT_InterruptManager:
  1620                           
  1621                           ; 1 bytes @ 0x20
  1622  000080                     	ds	12
  1623  00008C                     ??_setMicroStep:
  1624  00008C                     ??_ADC_SelectChannel:
  1625  00008C                     ?_USBTransferOnePacket:
  1626                           	callstack 0
  1627  00008C                     ?_strlen:
  1628                           	callstack 0
  1629  00008C                     ?___fpclassifyf:
  1630                           	callstack 0
  1631  00008C                     ?_isupper:
  1632                           	callstack 0
  1633  00008C                     ?_isdigit:
  1634                           	callstack 0
  1635  00008C                     ?_strncmp:
  1636                           	callstack 0
  1637  00008C                     ?_isspace:
  1638                           	callstack 0
  1639  00008C                     ?_strchr:
  1640                           	callstack 0
  1641  00008C                     ?_islower:
  1642                           	callstack 0
  1643  00008C                     ?_ADC_GetConversionResult:
  1644                           	callstack 0
  1645  00008C                     ?___wmul:
  1646                           	callstack 0
  1647  00008C                     ?___awdiv:
  1648                           	callstack 0
  1649  00008C                     ?___awmod:
  1650                           	callstack 0
  1651  00008C                     ?___fladd:
  1652                           	callstack 0
  1653  00008C                     ?_nanf:
  1654                           	callstack 0
  1655  00008C                     ?___lmul:
  1656                           	callstack 0
  1657  00008C                     ?___flneg:
  1658                           	callstack 0
  1659  00008C                     ?___aodiv:
  1660                           	callstack 0
  1661  00008C                     ?___aomod:
  1662                           	callstack 0
  1663  00008C                     USBTransferOnePacket@dir:
  1664                           	callstack 0
  1665  00008C                     TMR2_WriteTimer@timerVal:
  1666                           	callstack 0
  1667  00008C                     TMR2_LoadPeriodRegister@periodVal:
  1668                           	callstack 0
  1669  00008C                     ___lbmod@divisor:
  1670                           	callstack 0
  1671  00008C                     putUSBUSART@data:
  1672                           	callstack 0
  1673  00008C                     TMR3_SetInterruptHandler@InterruptHandler:
  1674                           	callstack 0
  1675  00008C                     TMR2_SetInterruptHandler@InterruptHandler:
  1676                           	callstack 0
  1677  00008C                     TMR0_SetInterruptHandler@InterruptHandler:
  1678                           	callstack 0
  1679  00008C                     IOCC2_SetInterruptHandler@InterruptHandler:
  1680                           	callstack 0
  1681  00008C                     M_5@axis:
  1682                           	callstack 0
  1683  00008C                     DireccionRotor@dir:
  1684                           	callstack 0
  1685  00008C                     ___wmul@multiplier:
  1686                           	callstack 0
  1687  00008C                     ___awdiv@dividend:
  1688                           	callstack 0
  1689  00008C                     ___awmod@dividend:
  1690                           	callstack 0
  1691  00008C                     memcpy@d1:
  1692                           	callstack 0
  1693  00008C                     memset@dest:
  1694                           	callstack 0
  1695  00008C                     isdigit@c:
  1696                           	callstack 0
  1697  00008C                     isspace@c:
  1698                           	callstack 0
  1699  00008C                     isupper@c:
  1700                           	callstack 0
  1701  00008C                     fputc@c:
  1702                           	callstack 0
  1703  00008C                     strcpy@dest:
  1704                           	callstack 0
  1705  00008C                     strlen@s:
  1706                           	callstack 0
  1707  00008C                     strncmp@_l:
  1708                           	callstack 0
  1709  00008C                     nanf@s:
  1710                           	callstack 0
  1711  00008C                     strchr@s:
  1712                           	callstack 0
  1713  00008C                     islower@c:
  1714                           	callstack 0
  1715  00008C                     ___lmul@multiplier:
  1716                           	callstack 0
  1717  00008C                     ___fleq@ff1:
  1718                           	callstack 0
  1719  00008C                     ___flneg@f1:
  1720                           	callstack 0
  1721  00008C                     ___fladd@b:
  1722                           	callstack 0
  1723  00008C                     ___fpclassifyf@x:
  1724                           	callstack 0
  1725  00008C                     ___aodiv@dividend:
  1726                           	callstack 0
  1727  00008C                     ___aomod@dividend:
  1728                           	callstack 0
  1729                           
  1730                           ; 8 bytes @ 0x2C
  1731  00008C                     	ds	1
  1732  00008D                     ADC_SelectChannel@channel:
  1733                           	callstack 0
  1734  00008D                     ___lbmod@dividend:
  1735                           	callstack 0
  1736  00008D                     USBTransferOnePacket@data:
  1737                           	callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x2D
  1740  00008D                     	ds	1
  1741  00008E                     ??_TMR0_Initialize:
  1742  00008E                     ??_isupper:
  1743  00008E                     ??_isdigit:
  1744  00008E                     ??_isspace:
  1745  00008E                     ??_islower:
  1746  00008E                     ??_ADC_GetConversionResult:
  1747  00008E                     putUSBUSART@length:
  1748                           	callstack 0
  1749  00008E                     setMicroStep@ustep:
  1750                           	callstack 0
  1751  00008E                     ___lbmod@counter:
  1752                           	callstack 0
  1753  00008E                     M_3@axis:
  1754                           	callstack 0
  1755  00008E                     M_4@axis:
  1756                           	callstack 0
  1757  00008E                     M_5@n:
  1758                           	callstack 0
  1759  00008E                     ___wmul@multiplicand:
  1760                           	callstack 0
  1761  00008E                     ___awdiv@divisor:
  1762                           	callstack 0
  1763  00008E                     ___awmod@divisor:
  1764                           	callstack 0
  1765  00008E                     memcpy@s1:
  1766                           	callstack 0
  1767  00008E                     memset@c:
  1768                           	callstack 0
  1769  00008E                     fputc@fp:
  1770                           	callstack 0
  1771  00008E                     strcpy@src:
  1772                           	callstack 0
  1773  00008E                     strlen@a:
  1774                           	callstack 0
  1775  00008E                     strncmp@_r:
  1776                           	callstack 0
  1777  00008E                     strchr@c:
  1778                           	callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x2E
  1781  00008E                     	ds	1
  1782  00008F                     USBTransferOnePacket@len:
  1783                           	callstack 0
  1784  00008F                     ___lbmod@rem:
  1785                           	callstack 0
  1786  00008F                     MCC_USB_WRITE@str:
  1787                           	callstack 0
  1788                           
  1789                           ; 2 bytes @ 0x2F
  1790  00008F                     	ds	1
  1791  000090                     ??_USBTransferOnePacket:
  1792  000090                     ??_strcpy:
  1793  000090                     ??_fputc:
  1794  000090                     ??___fpclassifyf:
  1795  000090                     ___awdiv@counter:
  1796                           	callstack 0
  1797  000090                     ___awmod@counter:
  1798                           	callstack 0
  1799  000090                     M_3@n:
  1800                           	callstack 0
  1801  000090                     M_4@n:
  1802                           	callstack 0
  1803  000090                     ___wmul@product:
  1804                           	callstack 0
  1805  000090                     memcpy@n:
  1806                           	callstack 0
  1807  000090                     memset@n:
  1808                           	callstack 0
  1809  000090                     strncmp@n:
  1810                           	callstack 0
  1811  000090                     ___lmul@multiplicand:
  1812                           	callstack 0
  1813  000090                     ___fleq@ff2:
  1814                           	callstack 0
  1815  000090                     ___fladd@a:
  1816                           	callstack 0
  1817  000090                     nanf@u:
  1818                           	callstack 0
  1819                           
  1820                           ; 4 bytes @ 0x30
  1821  000090                     	ds	1
  1822  000091                     ?_strspn:
  1823                           	callstack 0
  1824  000091                     ?_strcspn:
  1825                           	callstack 0
  1826  000091                     ___awdiv@sign:
  1827                           	callstack 0
  1828  000091                     ___awmod@sign:
  1829                           	callstack 0
  1830  000091                     MCC_USB_WRITE@nBytes:
  1831                           	callstack 0
  1832  000091                     strcspn@s:
  1833                           	callstack 0
  1834  000091                     strspn@s:
  1835                           	callstack 0
  1836                           
  1837                           ; 2 bytes @ 0x31
  1838  000091                     	ds	1
  1839  000092                     ??_memset:
  1840  000092                     ??_strncmp:
  1841  000092                     ?_tolower:
  1842                           	callstack 0
  1843  000092                     ?_isxdigit:
  1844                           	callstack 0
  1845  000092                     ?_toupper:
  1846                           	callstack 0
  1847  000092                     USBTransferOnePacket@ep:
  1848                           	callstack 0
  1849  000092                     memcpy@tmp:
  1850                           	callstack 0
  1851  000092                     _isspace$5112:
  1852                           	callstack 0
  1853  000092                     G_53@axis:
  1854                           	callstack 0
  1855  000092                     ___awdiv@quotient:
  1856                           	callstack 0
  1857  000092                     strcpy@s:
  1858                           	callstack 0
  1859  000092                     isxdigit@c:
  1860                           	callstack 0
  1861  000092                     tolower@c:
  1862                           	callstack 0
  1863  000092                     toupper@c:
  1864                           	callstack 0
  1865                           
  1866                           ; 2 bytes @ 0x32
  1867  000092                     	ds	1
  1868  000093                     ?_atoi:
  1869                           	callstack 0
  1870  000093                     USBTransferOnePacket@handle:
  1871                           	callstack 0
  1872  000093                     memcpy@d:
  1873                           	callstack 0
  1874  000093                     atoi@s:
  1875                           	callstack 0
  1876  000093                     strncmp@l:
  1877                           	callstack 0
  1878  000093                     strcspn@c:
  1879                           	callstack 0
  1880  000093                     strspn@c:
  1881                           	callstack 0
  1882                           
  1883                           ; 2 bytes @ 0x33
  1884  000093                     	ds	1
  1885  000094                     ??___fladd:
  1886  000094                     ??_tolower:
  1887  000094                     ??_isxdigit:
  1888  000094                     ??_toupper:
  1889  000094                     ??___fleq:
  1890  000094                     G_53@n:
  1891                           	callstack 0
  1892  000094                     memset@k:
  1893                           	callstack 0
  1894  000094                     ___fpclassifyf@e:
  1895                           	callstack 0
  1896  000094                     strcpy@d:
  1897                           	callstack 0
  1898  000094                     ___lmul@product:
  1899                           	callstack 0
  1900  000094                     ___aodiv@divisor:
  1901                           	callstack 0
  1902  000094                     ___aomod@divisor:
  1903                           	callstack 0
  1904                           
  1905                           ; 8 bytes @ 0x34
  1906  000094                     	ds	1
  1907  000095                     ??_atoi:
  1908  000095                     ??_strspn:
  1909  000095                     ??_strcspn:
  1910  000095                     ?_ctoa:
  1911                           	callstack 0
  1912  000095                     ?_stoa:
  1913                           	callstack 0
  1914  000095                     CDCTxService@i:
  1915                           	callstack 0
  1916  000095                     getsUSBUSART@buffer:
  1917                           	callstack 0
  1918  000095                     memcpy@s:
  1919                           	callstack 0
  1920  000095                     ctoa@fp:
  1921                           	callstack 0
  1922  000095                     stoa@fp:
  1923                           	callstack 0
  1924  000095                     fputs@s:
  1925                           	callstack 0
  1926  000095                     strncmp@r:
  1927                           	callstack 0
  1928                           
  1929                           ; 2 bytes @ 0x35
  1930  000095                     	ds	1
  1931  000096                     ??_G_53:
  1932  000096                     CDCTxService@byte_to_send:
  1933                           	callstack 0
  1934  000096                     memset@s:
  1935                           	callstack 0
  1936  000096                     strcspn@i:
  1937                           	callstack 0
  1938  000096                     strspn@i:
  1939                           	callstack 0
  1940  000096                     ___fpclassifyf@u:
  1941                           	callstack 0
  1942                           
  1943                           ; 4 bytes @ 0x36
  1944  000096                     	ds	1
  1945  000097                     getsUSBUSART@len:
  1946                           	callstack 0
  1947  000097                     ctoa@c:
  1948                           	callstack 0
  1949  000097                     Fila_Agregar@comando:
  1950                           	callstack 0
  1951  000097                     FilaPop@str:
  1952                           	callstack 0
  1953  000097                     stoa@s:
  1954                           	callstack 0
  1955  000097                     fputs@fp:
  1956                           	callstack 0
  1957                           
  1958                           ; 2 bytes @ 0x37
  1959  000097                     	ds	1
  1960  000098                     ??_ctoa:
  1961  000098                     ?_strtok:
  1962                           	callstack 0
  1963  000098                     ?___xxtofl:
  1964                           	callstack 0
  1965  000098                     USBDeviceInit@i:
  1966                           	callstack 0
  1967  000098                     ___fladd@signs:
  1968                           	callstack 0
  1969  000098                     _isxdigit$5244:
  1970                           	callstack 0
  1971  000098                     G_53@i:
  1972                           	callstack 0
  1973  000098                     G_97@axis:
  1974                           	callstack 0
  1975  000098                     strtok@s:
  1976                           	callstack 0
  1977  000098                     ___xxtofl@val:
  1978                           	callstack 0
  1979                           
  1980                           ; 4 bytes @ 0x38
  1981  000098                     	ds	1
  1982  000099                     ??_stoa:
  1983  000099                     ___fladd@aexp:
  1984                           	callstack 0
  1985  000099                     fputs@c:
  1986                           	callstack 0
  1987  000099                     Fila_Agregar@nBytes:
  1988                           	callstack 0
  1989  000099                     ctoa@l:
  1990                           	callstack 0
  1991  000099                     atoi@neg:
  1992                           	callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x39
  1995  000099                     	ds	1
  1996  00009A                     ___fladd@bexp:
  1997                           	callstack 0
  1998  00009A                     G_97@n:
  1999                           	callstack 0
  2000  00009A                     fputs@i:
  2001                           	callstack 0
  2002  00009A                     strtok@sep:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x3A
  2006  00009A                     	ds	1
  2007  00009B                     ___fladd@grs:
  2008                           	callstack 0
  2009  00009B                     ctoa@w:
  2010                           	callstack 0
  2011  00009B                     atoi@n:
  2012                           	callstack 0
  2013                           
  2014                           ; 2 bytes @ 0x3B
  2015  00009B                     	ds	1
  2016  00009C                     ??___xxtofl:
  2017  00009C                     ?_pad:
  2018                           	callstack 0
  2019  00009C                     ___aodiv@counter:
  2020                           	callstack 0
  2021  00009C                     ___aomod@counter:
  2022                           	callstack 0
  2023  00009C                     getTokens@token:
  2024                           	callstack 0
  2025  00009C                     pad@fp:
  2026                           	callstack 0
  2027                           
  2028                           ; 2 bytes @ 0x3C
  2029  00009C                     	ds	1
  2030  00009D                     ___aodiv@sign:
  2031                           	callstack 0
  2032  00009D                     ___aomod@sign:
  2033                           	callstack 0
  2034                           
  2035                           ; 1 bytes @ 0x3D
  2036  00009D                     	ds	1
  2037  00009E                     ?_abs:
  2038                           	callstack 0
  2039  00009E                     getTokens@str:
  2040                           	callstack 0
  2041  00009E                     pad@buf:
  2042                           	callstack 0
  2043  00009E                     abs@a:
  2044                           	callstack 0
  2045  00009E                     ___aodiv@quotient:
  2046                           	callstack 0
  2047                           
  2048                           ; 8 bytes @ 0x3E
  2049  00009E                     	ds	2
  2050  0000A0                     ??_abs:
  2051  0000A0                     ??_getTokens:
  2052  0000A0                     ___xxtofl@sign:
  2053                           	callstack 0
  2054  0000A0                     pad@p:
  2055                           	callstack 0
  2056                           
  2057                           ; 2 bytes @ 0x40
  2058  0000A0                     	ds	1
  2059  0000A1                     ___xxtofl@exp:
  2060                           	callstack 0
  2061                           
  2062                           ; 1 bytes @ 0x41
  2063  0000A1                     	ds	1
  2064  0000A2                     ??_pad:
  2065  0000A2                     ___xxtofl@arg:
  2066                           	callstack 0
  2067                           
  2068                           ; 4 bytes @ 0x42
  2069  0000A2                     	ds	1
  2070  0000A3                     pad@i:
  2071                           	callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x43
  2074  0000A3                     	ds	1
  2075  0000A4                     getTokens@s:
  2076                           	callstack 0
  2077                           
  2078                           ; 2 bytes @ 0x44
  2079  0000A4                     	ds	1
  2080  0000A5                     pad@w:
  2081                           	callstack 0
  2082                           
  2083                           ; 2 bytes @ 0x45
  2084  0000A5                     	ds	1
  2085  0000A6                     getTokens@i:
  2086                           	callstack 0
  2087  0000A6                     ___fltol@sign1:
  2088                           	callstack 0
  2089                           
  2090                           ; 1 bytes @ 0x46
  2091  0000A6                     	ds	1
  2092  0000A7                     ___fltol@exp1:
  2093                           	callstack 0
  2094                           
  2095                           ; 1 bytes @ 0x47
  2096  0000A7                     	ds	1
  2097  0000A8                     
  2098                           ; 1 bytes @ 0x48
  2099                           
  2100                           	psect	cstackCOMRAM
  2101  000001                     __pcstackCOMRAM:
  2102                           	callstack 0
  2103  000001                     ??_USBCheckCDCRequest:
  2104  000001                     ??_USBStdGetDscHandler:
  2105  000001                     ??_USBStdGetStatusHandler:
  2106  000001                     ?_TMR0_ReadTimer:
  2107                           	callstack 0
  2108  000001                     ?i2_USBTransferOnePacket:
  2109                           	callstack 0
  2110  000001                     ?i2___lmul:
  2111                           	callstack 0
  2112  000001                     USBConfigureEndpoint@direction:
  2113                           	callstack 0
  2114  000001                     USBCtrlTrfTxService@byteToSend:
  2115                           	callstack 0
  2116  000001                     USBCtrlTrfRxService@i:
  2117                           	callstack 0
  2118  000001                     i2USBTransferOnePacket@dir:
  2119                           	callstack 0
  2120  000001                     i2TMR2_LoadPeriodRegister@periodVal:
  2121                           	callstack 0
  2122  000001                     TMR3_WriteTimer@timerVal:
  2123                           	callstack 0
  2124  000001                     TMR0_WriteTimer@timerVal:
  2125                           	callstack 0
  2126  000001                     i2memcpy@d1:
  2127                           	callstack 0
  2128  000001                     i2memset@dest:
  2129                           	callstack 0
  2130  000001                     i2___lmul@multiplier:
  2131                           	callstack 0
  2132  000001                     i2___flge@ff1:
  2133                           	callstack 0
  2134                           
  2135                           ; 4 bytes @ 0x0
  2136  000001                     	ds	1
  2137  000002                     ??_USBConfigureEndpoint:
  2138  000002                     USBCtrlTrfRxService@byteToRead:
  2139                           	callstack 0
  2140  000002                     USBCtrlTrfInHandler@lastDTS:
  2141                           	callstack 0
  2142  000002                     i2USBTransferOnePacket@data:
  2143                           	callstack 0
  2144                           
  2145                           ; 2 bytes @ 0x1
  2146  000002                     	ds	1
  2147  000003                     ??_TMR0_ReadTimer:
  2148  000003                     USBStdGetStatusHandler@p:
  2149                           	callstack 0
  2150  000003                     i2memcpy@s1:
  2151                           	callstack 0
  2152  000003                     i2memset@c:
  2153                           	callstack 0
  2154                           
  2155                           ; 2 bytes @ 0x2
  2156  000003                     	ds	1
  2157  000004                     i2USBTransferOnePacket@len:
  2158                           	callstack 0
  2159                           
  2160                           ; 1 bytes @ 0x3
  2161  000004                     	ds	1
  2162  000005                     ??i2_USBTransferOnePacket:
  2163  000005                     TMR0_ReadTimer@readVal:
  2164                           	callstack 0
  2165  000005                     i2memcpy@n:
  2166                           	callstack 0
  2167  000005                     i2memset@n:
  2168                           	callstack 0
  2169  000005                     i2___lmul@multiplicand:
  2170                           	callstack 0
  2171  000005                     i2___flge@ff2:
  2172                           	callstack 0
  2173                           
  2174                           ; 4 bytes @ 0x4
  2175  000005                     	ds	1
  2176  000006                     USBConfigureEndpoint@EPNum:
  2177                           	callstack 0
  2178                           
  2179                           ; 1 bytes @ 0x5
  2180  000006                     	ds	1
  2181  000007                     ??i2_memset:
  2182  000007                     TMR0_ReadTimer@readValLow:
  2183                           	callstack 0
  2184  000007                     i2USBTransferOnePacket@ep:
  2185                           	callstack 0
  2186  000007                     USBConfigureEndpoint@handle:
  2187                           	callstack 0
  2188  000007                     i2memcpy@d:
  2189                           	callstack 0
  2190                           
  2191                           ; 2 bytes @ 0x6
  2192  000007                     	ds	1
  2193  000008                     TMR0_ReadTimer@readValHigh:
  2194                           	callstack 0
  2195  000008                     i2USBTransferOnePacket@handle:
  2196                           	callstack 0
  2197                           
  2198                           ; 2 bytes @ 0x7
  2199  000008                     	ds	1
  2200  000009                     ??i2___flge:
  2201  000009                     USBEnableEndpoint@options:
  2202                           	callstack 0
  2203  000009                     i2memcpy@s:
  2204                           	callstack 0
  2205  000009                     i2memset@k:
  2206                           	callstack 0
  2207  000009                     i2___lmul@product:
  2208                           	callstack 0
  2209                           
  2210                           ; 4 bytes @ 0x8
  2211  000009                     	ds	1
  2212  00000A                     USBEnableEndpoint@p:
  2213                           	callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x9
  2216  00000A                     	ds	1
  2217  00000B                     i2memcpy@tmp:
  2218                           	callstack 0
  2219  00000B                     i2memset@s:
  2220                           	callstack 0
  2221                           
  2222                           ; 2 bytes @ 0xA
  2223  00000B                     	ds	1
  2224  00000C                     USBEnableEndpoint@ep:
  2225                           	callstack 0
  2226                           
  2227                           ; 1 bytes @ 0xB
  2228  00000C                     	ds	1
  2229  00000D                     ?i2___xxtofl:
  2230                           	callstack 0
  2231  00000D                     i2USBDeviceInit@i:
  2232                           	callstack 0
  2233  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2234                           	callstack 0
  2235  00000D                     i2___xxtofl@val:
  2236                           	callstack 0
  2237                           
  2238                           ; 4 bytes @ 0xC
  2239  00000D                     	ds	2
  2240  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2241                           	callstack 0
  2242                           
  2243                           ; 2 bytes @ 0xE
  2244  00000F                     	ds	2
  2245  000011                     ??i2___xxtofl:
  2246  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2247                           	callstack 0
  2248                           
  2249                           ; 2 bytes @ 0x10
  2250  000011                     	ds	2
  2251  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2252                           
  2253                           ; 1 bytes @ 0x12
  2254  000013                     	ds	2
  2255  000015                     ??_USBStdFeatureReqHandler:
  2256  000015                     USBStdSetCfgHandler@i:
  2257                           	callstack 0
  2258  000015                     i2___xxtofl@sign:
  2259                           	callstack 0
  2260                           
  2261                           ; 1 bytes @ 0x14
  2262  000015                     	ds	1
  2263  000016                     i2___xxtofl@exp:
  2264                           	callstack 0
  2265                           
  2266                           ; 1 bytes @ 0x15
  2267  000016                     	ds	1
  2268  000017                     USBStdFeatureReqHandler@pUEP:
  2269                           	callstack 0
  2270  000017                     i2___xxtofl@arg:
  2271                           	callstack 0
  2272                           
  2273                           ; 4 bytes @ 0x16
  2274  000017                     	ds	2
  2275  000019                     USBStdFeatureReqHandler@current_ep_data:
  2276                           	callstack 0
  2277                           
  2278                           ; 1 bytes @ 0x18
  2279  000019                     	ds	1
  2280  00001A                     USBStdFeatureReqHandler@p:
  2281                           	callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x19
  2284  00001A                     	ds	1
  2285  00001B                     ?i2___flmul:
  2286                           	callstack 0
  2287  00001B                     i2___flmul@b:
  2288                           	callstack 0
  2289                           
  2290                           ; 4 bytes @ 0x1A
  2291  00001B                     	ds	1
  2292  00001C                     ??_USBCheckStdRequest:
  2293                           
  2294                           ; 1 bytes @ 0x1B
  2295  00001C                     	ds	2
  2296  00001E                     ??_USBCtrlEPService:
  2297  00001E                     
  2298                           ; 1 bytes @ 0x1D
  2299  00001E                     	ds	1
  2300  00001F                     USBDeviceTasks@i:
  2301                           	callstack 0
  2302  00001F                     i2___flmul@a:
  2303                           	callstack 0
  2304                           
  2305                           ; 4 bytes @ 0x1E
  2306  00001F                     	ds	4
  2307  000023                     ??i2___flmul:
  2308                           
  2309                           ; 1 bytes @ 0x22
  2310  000023                     	ds	4
  2311  000027                     i2___flmul@sign:
  2312                           	callstack 0
  2313                           
  2314                           ; 1 bytes @ 0x26
  2315  000027                     	ds	1
  2316  000028                     i2___flmul@aexp:
  2317                           	callstack 0
  2318                           
  2319                           ; 1 bytes @ 0x27
  2320  000028                     	ds	1
  2321  000029                     i2___flmul@grs:
  2322                           	callstack 0
  2323                           
  2324                           ; 4 bytes @ 0x28
  2325  000029                     	ds	4
  2326  00002D                     i2___flmul@bexp:
  2327                           	callstack 0
  2328                           
  2329                           ; 1 bytes @ 0x2C
  2330  00002D                     	ds	1
  2331  00002E                     i2___flmul@prod:
  2332                           	callstack 0
  2333                           
  2334                           ; 4 bytes @ 0x2D
  2335  00002E                     	ds	4
  2336  000032                     i2___flmul@temp:
  2337                           	callstack 0
  2338                           
  2339                           ; 2 bytes @ 0x31
  2340  000032                     	ds	2
  2341  000034                     ?i2___fladd:
  2342                           	callstack 0
  2343  000034                     ?i2___fldiv:
  2344                           	callstack 0
  2345  000034                     i2___fladd@b:
  2346                           	callstack 0
  2347  000034                     i2___fldiv@b:
  2348                           	callstack 0
  2349                           
  2350                           ; 4 bytes @ 0x33
  2351  000034                     	ds	4
  2352  000038                     i2___fladd@a:
  2353                           	callstack 0
  2354  000038                     i2___fldiv@a:
  2355                           	callstack 0
  2356                           
  2357                           ; 4 bytes @ 0x37
  2358  000038                     	ds	4
  2359  00003C                     ??i2___fladd:
  2360  00003C                     ??i2___fldiv:
  2361                           
  2362                           ; 1 bytes @ 0x3B
  2363  00003C                     	ds	4
  2364  000040                     i2___fladd@signs:
  2365                           	callstack 0
  2366  000040                     i2___fldiv@rem:
  2367                           	callstack 0
  2368                           
  2369                           ; 4 bytes @ 0x3F
  2370  000040                     	ds	1
  2371  000041                     i2___fladd@aexp:
  2372                           	callstack 0
  2373                           
  2374                           ; 1 bytes @ 0x40
  2375  000041                     	ds	1
  2376  000042                     i2___fladd@bexp:
  2377                           	callstack 0
  2378                           
  2379                           ; 1 bytes @ 0x41
  2380  000042                     	ds	1
  2381  000043                     i2___fladd@grs:
  2382                           	callstack 0
  2383                           
  2384                           ; 1 bytes @ 0x42
  2385  000043                     	ds	1
  2386  000044                     ?i2___flsub:
  2387                           	callstack 0
  2388  000044                     i2___fldiv@sign:
  2389                           	callstack 0
  2390  000044                     i2___flsub@b:
  2391                           	callstack 0
  2392                           
  2393                           ; 4 bytes @ 0x43
  2394  000044                     	ds	1
  2395  000045                     i2___fldiv@new_exp:
  2396                           	callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x44
  2399  000045                     	ds	2
  2400  000047                     i2___fldiv@grs:
  2401                           	callstack 0
  2402                           
  2403                           ; 4 bytes @ 0x46
  2404  000047                     	ds	1
  2405  000048                     i2___flsub@a:
  2406                           	callstack 0
  2407                           
  2408                           ; 4 bytes @ 0x47
  2409  000048                     	ds	3
  2410  00004B                     i2___fldiv@bexp:
  2411                           	callstack 0
  2412                           
  2413                           ; 1 bytes @ 0x4A
  2414  00004B                     	ds	1
  2415  00004C                     i2___fldiv@aexp:
  2416                           	callstack 0
  2417                           
  2418                           ; 1 bytes @ 0x4B
  2419  00004C                     	ds	1
  2420  00004D                     ??_Encoder_ISR:
  2421  00004D                     ?i2___fltol:
  2422                           	callstack 0
  2423  00004D                     i2___fltol@f1:
  2424                           	callstack 0
  2425                           
  2426                           ; 4 bytes @ 0x4C
  2427  00004D                     	ds	2
  2428  00004F                     
  2429                           ; 1 bytes @ 0x4E
  2430  00004F                     	ds	2
  2431  000051                     ??i2___fltol:
  2432                           
  2433                           ; 1 bytes @ 0x50
  2434  000051                     	ds	4
  2435  000055                     i2___fltol@sign1:
  2436                           	callstack 0
  2437                           
  2438                           ; 1 bytes @ 0x54
  2439  000055                     	ds	1
  2440  000056                     i2___fltol@exp1:
  2441                           	callstack 0
  2442                           
  2443                           ; 1 bytes @ 0x55
  2444  000056                     	ds	1
  2445  000057                     ??_G01_TMR2_ISR:
  2446                           
  2447                           ; 1 bytes @ 0x56
  2448  000057                     	ds	2
  2449  000059                     
  2450                           ; 1 bytes @ 0x58
  2451 ;;
  2452 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2453 ;;
  2454 ;; *************** function _main *****************
  2455 ;; Defined at:
  2456 ;;		line 48 in file "main.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  a               2    0        int 
  2461 ;;  flag_angulo     1    0        _Bool 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2474 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2475 ;;Total ram usage:        1 bytes
  2476 ;; Hardware stack levels required when called: 19
  2477 ;; This function calls:
  2478 ;;		_ADC_SelectChannel
  2479 ;;		_Actualizar_angulo
  2480 ;;		_CDCTxService
  2481 ;;		_Encoder_Init
  2482 ;;		_Fila_Init
  2483 ;;		_IOCC2_SetInterruptHandler
  2484 ;;		_MCC_USB_WRITE
  2485 ;;		_SYSTEM_Initialize
  2486 ;;		_TMR0_SetInterruptHandler
  2487 ;;		_TMR0_StartTimer
  2488 ;;		_TMR2_StopTimer
  2489 ;;		_TMR3_StopTimer
  2490 ;;		_USBCommandFetch
  2491 ;;		_executeCommand
  2492 ;;		_medir_corriente
  2493 ;;		_memset
  2494 ;;		_sprintf
  2495 ;; This function is called by:
  2496 ;;		Startup code after reset
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text0
  2501  005946                     __ptext0:
  2502                           	callstack 0
  2503  005946                     _main:
  2504                           	callstack 12
  2505                           
  2506                           ;main.c: 51:     SYSTEM_Initialize();
  2507                           
  2508                           ;incstack = 0
  2509  005946  EC1A  F03D         	call	_SYSTEM_Initialize	;wreg free
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;main.c: 57:     IOCC2_SetInterruptHandler(Encoder_ISR);
  2513  00594A  0EEA               	movlw	low _Encoder_ISR
  2514  00594C  6F8C               	movwf	IOCC2_SetInterruptHandler@InterruptHandler& (0+255),b
  2515  00594E  0E2D               	movlw	high _Encoder_ISR
  2516  005950  6F8D               	movwf	(IOCC2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2517  005952  ECE6  F03E         	call	_IOCC2_SetInterruptHandler	;wreg free
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;main.c: 58:     TMR0_SetInterruptHandler(Timing_TMR0_ISR);
  2521  005956  0EE2               	movlw	low _Timing_TMR0_ISR
  2522  005958  6F8C               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  2523  00595A  0E76               	movlw	high _Timing_TMR0_ISR
  2524  00595C  6F8D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2525  00595E  ECE1  F03E         	call	_TMR0_SetInterruptHandler	;wreg free
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;main.c: 61:     (INTCONbits.GIE = 1);
  2529  005962  8EF2               	bsf	242,7,c	;volatile
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;main.c: 67:     (INTCONbits.PEIE = 1);
  2533  005964  8CF2               	bsf	242,6,c	;volatile
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;main.c: 71:     TMR3_StopTimer();
  2537  005966  EC04  F03F         	call	_TMR3_StopTimer	;wreg free
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;main.c: 72:     TMR2_StopTimer();
  2541  00596A  EC06  F03F         	call	_TMR2_StopTimer	;wreg free
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;main.c: 73:     TMR0_StartTimer();
  2545  00596E  EC08  F03F         	call	_TMR0_StartTimer	;wreg free
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;main.c: 76:     Fila_Init();
  2549  005972  EC31  F03D         	call	_Fila_Init	;wreg free
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;main.c: 77:     PORTBbits.RB0=0;
  2553  005976  9081               	bcf	129,0,c	;volatile
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;main.c: 78:     PORTBbits.RB4=1;
  2557  005978  8881               	bsf	129,4,c	;volatile
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;main.c: 79:     PORTBbits.RB5=1;
  2561  00597A  8A81               	bsf	129,5,c	;volatile
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;main.c: 80:     LATBbits.LATB1=1;
  2565  00597C  828A               	bsf	138,1,c	;volatile
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;main.c: 81:     LATBbits.LATB2=1;
  2569  00597E  848A               	bsf	138,2,c	;volatile
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 82:     LATBbits.LATB3=1;
  2573  005980  868A               	bsf	138,3,c	;volatile
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;main.c: 85:     numBytesRead=0;
  2577  005982  0E00               	movlw	0
  2578  005984  0101               	movlb	1	; () banked
  2579  005986  6FE0               	movwf	_numBytesRead& (0+255),b
  2580                           
  2581                           ; BSR set to: 1
  2582                           ;main.c: 87:     LATBbits.LATB0=1;
  2583  005988  808A               	bsf	138,0,c	;volatile
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;main.c: 88:     LATBbits.LATB4=1;
  2587  00598A  888A               	bsf	138,4,c	;volatile
  2588                           
  2589                           ; BSR set to: 1
  2590                           ;main.c: 90:     _Bool flag_angulo;;main.c: 91:     Encoder_Init();
  2591                           
  2592                           ; BSR set to: 1
  2593  00598C  EC0F  F03F         	call	_Encoder_Init	;wreg free
  2594                           
  2595                           ; BSR set to: 1
  2596                           ;main.c: 92:     ADC_SelectChannel(channel_AN19);
  2597  005990  0E13               	movlw	19
  2598  005992  EC69  F03E         	call	_ADC_SelectChannel
  2599  005996                     l15606:
  2600                           
  2601                           ;main.c: 95:     {;main.c: 97:       USBCommandFetch();
  2602  005996  ECCC  F01F         	call	_USBCommandFetch	;wreg free
  2603                           
  2604                           ;main.c: 98:       _delay((unsigned long)((1)*(48000000/4000.0)));
  2605  00599A  0E10               	movlw	16
  2606  00599C  0101               	movlb	1	; () banked
  2607  00599E  6FAE               	movwf	??_main& (0+255),b
  2608  0059A0  0E94               	movlw	148
  2609  0059A2                     u19277:
  2610  0059A2  2EE8               	decfsz	wreg,f,c
  2611  0059A4  D7FE               	bra	u19277
  2612  0059A6  2FAE               	decfsz	??_main& (0+255),f,b
  2613  0059A8  D7FC               	bra	u19277
  2614  0059AA  F000               	nop	
  2615                           
  2616                           ;main.c: 99:       executeCommand();
  2617  0059AC  ECF6  F020         	call	_executeCommand	;wreg free
  2618                           
  2619                           ;main.c: 114:       Actualizar_angulo();
  2620  0059B0  EC51  F03B         	call	_Actualizar_angulo	;wreg free
  2621                           
  2622                           ;main.c: 117:       medir_corriente();
  2623  0059B4  EC4D  F03E         	call	_medir_corriente	;wreg free
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;main.c: 118:       sprintf(writeBuffer,"\n %.5f|%d|%d",S,angulo,current);
  2627  0059B8  0EA6               	movlw	low _writeBuffer
  2628  0059BA  0101               	movlb	1	; () banked
  2629  0059BC  6F91               	movwf	sprintf@s& (0+255),b
  2630  0059BE  0E03               	movlw	high _writeBuffer
  2631  0059C0  6F92               	movwf	(sprintf@s+1)& (0+255),b
  2632  0059C2  0EBE               	movlw	low STR_1
  2633  0059C4  6F93               	movwf	sprintf@fmt& (0+255),b
  2634  0059C6  0E7F               	movlw	high STR_1
  2635  0059C8  6F94               	movwf	(sprintf@fmt+1)& (0+255),b
  2636  0059CA  C2C6  F195         	movff	_S,?_sprintf+4
  2637  0059CE  C2C7  F196         	movff	_S+1,?_sprintf+5
  2638  0059D2  C2C8  F197         	movff	_S+2,?_sprintf+6
  2639  0059D6  C2C9  F198         	movff	_S+3,?_sprintf+7
  2640  0059DA  C0C5  F199         	movff	_angulo,?_sprintf+8
  2641  0059DE  6B9A               	clrf	(?_sprintf+9)& (0+255),b
  2642  0059E0  C2D6  F19B         	movff	_current,?_sprintf+10
  2643  0059E4  C2D7  F19C         	movff	_current+1,?_sprintf+11
  2644  0059E8  EC19  F03A         	call	_sprintf	;wreg free
  2645                           
  2646                           ; BSR set to: 1
  2647                           ;main.c: 119:       MCC_USB_WRITE(writeBuffer,30);
  2648  0059EC  0EA6               	movlw	low _writeBuffer
  2649  0059EE  0100               	movlb	0	; () banked
  2650  0059F0  6F8F               	movwf	MCC_USB_WRITE@str& (0+255),b
  2651  0059F2  0E03               	movlw	high _writeBuffer
  2652  0059F4  6F90               	movwf	(MCC_USB_WRITE@str+1)& (0+255),b
  2653  0059F6  0E00               	movlw	0
  2654  0059F8  6F92               	movwf	(MCC_USB_WRITE@nBytes+1)& (0+255),b
  2655  0059FA  0E1E               	movlw	30
  2656  0059FC  6F91               	movwf	MCC_USB_WRITE@nBytes& (0+255),b
  2657  0059FE  ECB4  F03D         	call	_MCC_USB_WRITE	;wreg free
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;main.c: 120:        CDCTxService();
  2661  005A02  EC85  F029         	call	_CDCTxService	;wreg free
  2662                           
  2663                           ;main.c: 121:        memset(writeBuffer,0,sizeof(writeBuffer));
  2664  005A06  0EA6               	movlw	low _writeBuffer
  2665  005A08  0100               	movlb	0	; () banked
  2666  005A0A  6F8C               	movwf	memset@dest& (0+255),b
  2667  005A0C  0E03               	movlw	high _writeBuffer
  2668  005A0E  6F8D               	movwf	(memset@dest+1)& (0+255),b
  2669  005A10  0E00               	movlw	0
  2670  005A12  6F8F               	movwf	(memset@c+1)& (0+255),b
  2671  005A14  0E00               	movlw	0
  2672  005A16  6F8E               	movwf	memset@c& (0+255),b
  2673  005A18  0E00               	movlw	0
  2674  005A1A  6F91               	movwf	(memset@n+1)& (0+255),b
  2675  005A1C  0E20               	movlw	32
  2676  005A1E  6F90               	movwf	memset@n& (0+255),b
  2677  005A20  ECFD  F025         	call	_memset	;wreg free
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;main.c: 122:        _delay((unsigned long)((1)*(48000000/4000.0)));
  2681  005A24  0E10               	movlw	16
  2682  005A26  0101               	movlb	1	; () banked
  2683  005A28  6FAE               	movwf	??_main& (0+255),b
  2684  005A2A  0E94               	movlw	148
  2685  005A2C                     u19287:
  2686  005A2C  2EE8               	decfsz	wreg,f,c
  2687  005A2E  D7FE               	bra	u19287
  2688  005A30  2FAE               	decfsz	??_main& (0+255),f,b
  2689  005A32  D7FC               	bra	u19287
  2690  005A34  F000               	nop	
  2691  005A36  D7AF               	goto	l15606
  2692  005A38                     __end_of_main:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _medir_corriente *****************
  2696 ;; Defined at:
  2697 ;;		line 6 in file "torque.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 3E/0
  2708 ;;		On exit  : 3F/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 11
  2718 ;; This function calls:
  2719 ;;		_ADC_GetConversionResult
  2720 ;;		_ADC_IsConversionDone
  2721 ;;		_ADC_StartConversion
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text1
  2728  007C9A                     __ptext1:
  2729                           	callstack 0
  2730  007C9A                     _medir_corriente:
  2731                           	callstack 19
  2732                           
  2733                           ;torque.c: 8:    ADC_StartConversion();
  2734                           
  2735                           ;incstack = 0
  2736  007C9A  ECFC  F03E         	call	_ADC_StartConversion	;wreg free
  2737  007C9E                     l12182:
  2738  007C9E  ECBB  F03E         	call	_ADC_IsConversionDone	;wreg free
  2739  007CA2  0900               	iorlw	0
  2740  007CA4  B4D8               	btfsc	status,2,c
  2741  007CA6  D7FB               	goto	l12182
  2742                           
  2743                           ;torque.c: 10:    current = ADC_GetConversionResult();
  2744  007CA8  EC85  F03E         	call	_ADC_GetConversionResult	;wreg free
  2745  007CAC  C08C  F2D6         	movff	?_ADC_GetConversionResult,_current
  2746  007CB0  C08D  F2D7         	movff	?_ADC_GetConversionResult+1,_current+1
  2747                           
  2748                           ; BSR set to: 0
  2749  007CB4  0012               	return		;funcret
  2750  007CB6                     __end_of_medir_corriente:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _ADC_StartConversion *****************
  2754 ;; Defined at:
  2755 ;;		line 91 in file "mcc_generated_files/adc.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		None
  2764 ;; Tracked objects:
  2765 ;;		On entry : 3E/0
  2766 ;;		On exit  : 3E/0
  2767 ;;		Unchanged: 3E/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 10
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_medir_corriente
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text2
  2784  007DF8                     __ptext2:
  2785                           	callstack 0
  2786  007DF8                     _ADC_StartConversion:
  2787                           	callstack 19
  2788                           
  2789                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;incstack = 0
  2793  007DF8  82C2               	bsf	194,1,c	;volatile
  2794  007DFA  0012               	return		;funcret
  2795  007DFC                     __end_of_ADC_StartConversion:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _ADC_IsConversionDone *****************
  2799 ;; Defined at:
  2800 ;;		line 98 in file "mcc_generated_files/adc.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      _Bool 
  2807 ;; Registers used:
  2808 ;;		wreg
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 10
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_medir_corriente
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text3
  2829  007D76                     __ptext3:
  2830                           	callstack 0
  2831  007D76                     _ADC_IsConversionDone:
  2832                           	callstack 19
  2833                           
  2834                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  2835                           
  2836                           ;incstack = 0
  2837  007D76  B2C2               	btfsc	194,1,c	;volatile
  2838  007D78  D002               	goto	u13240
  2839  007D7A  0E01               	movlw	1
  2840  007D7C  0012               	return	
  2841  007D7E                     u13240:
  2842  007D7E  0E00               	movlw	0
  2843  007D80  0012               	return		;funcret
  2844  007D82                     __end_of_ADC_IsConversionDone:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _ADC_GetConversionResult *****************
  2848 ;; Defined at:
  2849 ;;		line 104 in file "mcc_generated_files/adc.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  2   44[BANK0 ] unsigned short 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 3F/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       2       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2866 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        4 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 10
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_medir_corriente
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text4
  2878  007D0A                     __ptext4:
  2879                           	callstack 0
  2880  007D0A                     _ADC_GetConversionResult:
  2881                           	callstack 19
  2882                           
  2883                           ;mcc_generated_files/adc.c: 107:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2884                           
  2885                           ;incstack = 0
  2886  007D0A  50C4               	movf	196,w,c	;volatile
  2887  007D0C  0100               	movlb	0	; () banked
  2888  007D0E  6F8F               	movwf	(??_ADC_GetConversionResult+1)& (0+255),b
  2889  007D10  6B8E               	clrf	??_ADC_GetConversionResult& (0+255),b
  2890  007D12  50C3               	movf	195,w,c	;volatile
  2891  007D14  258E               	addwf	??_ADC_GetConversionResult& (0+255),w,b
  2892  007D16  6F8C               	movwf	?_ADC_GetConversionResult& (0+255),b
  2893  007D18  0E00               	movlw	0
  2894  007D1A  218F               	addwfc	(??_ADC_GetConversionResult+1)& (0+255),w,b
  2895  007D1C  6F8D               	movwf	(?_ADC_GetConversionResult+1)& (0+255),b
  2896                           
  2897                           ; BSR set to: 0
  2898  007D1E  0012               	return		;funcret
  2899  007D20                     __end_of_ADC_GetConversionResult:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _executeCommand *****************
  2903 ;; Defined at:
  2904 ;;		line 54 in file "CommandHandler.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  i               2  170[BANK2 ] int 
  2909 ;;  comando       100   70[BANK2 ] struct Comando_T[20]
  2910 ;;  TokensCom      40    0[BANK2 ] PTR unsigned char [20]
  2911 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  2912 ;;  strCommand     30   40[BANK2 ] unsigned char [30]
  2913 ;;  numTokens       2  172[BANK2 ] int 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0
  2924 ;;      Locals:         0       0       0     174       0       0       0       0       0
  2925 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2926 ;;      Totals:         0       0       1     174       0       0       0       0       0
  2927 ;;Total ram usage:      175 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 18
  2930 ;; This function calls:
  2931 ;;		_FilaPop
  2932 ;;		_G_01
  2933 ;;		_G_53
  2934 ;;		_G_95
  2935 ;;		_G_97
  2936 ;;		_M_3
  2937 ;;		_M_4
  2938 ;;		_M_5
  2939 ;;		___fltol
  2940 ;;		_getComands
  2941 ;;		_getTokens
  2942 ;;		_memset
  2943 ;;		_sprintf
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text5
  2950  0041EC                     __ptext5:
  2951                           	callstack 0
  2952  0041EC                     _executeCommand:
  2953                           	callstack 12
  2954                           
  2955                           ;CommandHandler.c: 57:    Comando_T comando[20];;CommandHandler.c: 58:    char* TokensCo
      +                          m[20];;CommandHandler.c: 59:    if(busy==0){
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;incstack = 0
  2959  0041EC  0101               	movlb	1	; () banked
  2960  0041EE  51DD               	movf	_busy& (0+255),w,b
  2961  0041F0  A4D8               	btfss	status,2,c
  2962  0041F2  0012               	return	
  2963                           
  2964                           ; BSR set to: 1
  2965                           ;CommandHandler.c: 60:          if(largo>0){
  2966  0041F4  0100               	movlb	0	; () banked
  2967  0041F6  51C4               	movf	_largo& (0+255),w,b
  2968  0041F8  B4D8               	btfsc	status,2,c
  2969  0041FA  0012               	return	
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;CommandHandler.c: 62:             memset(comando,0,sizeof(comando));
  2973  0041FC  0E46               	movlw	low executeCommand@comando
  2974  0041FE  6F8C               	movwf	memset@dest& (0+255),b
  2975  004200  0E02               	movlw	high executeCommand@comando
  2976  004202  6F8D               	movwf	(memset@dest+1)& (0+255),b
  2977  004204  0E00               	movlw	0
  2978  004206  6F8F               	movwf	(memset@c+1)& (0+255),b
  2979  004208  0E00               	movlw	0
  2980  00420A  6F8E               	movwf	memset@c& (0+255),b
  2981  00420C  0E00               	movlw	0
  2982  00420E  6F91               	movwf	(memset@n+1)& (0+255),b
  2983  004210  0E64               	movlw	100
  2984  004212  6F90               	movwf	memset@n& (0+255),b
  2985  004214  ECFD  F025         	call	_memset	;wreg free
  2986                           
  2987                           ;CommandHandler.c: 63:             memset(strCommand,0,sizeof(strCommand));
  2988  004218  0E28               	movlw	low executeCommand@strCommand
  2989  00421A  6F8C               	movwf	memset@dest& (0+255),b
  2990  00421C  0E02               	movlw	high executeCommand@strCommand
  2991  00421E  6F8D               	movwf	(memset@dest+1)& (0+255),b
  2992  004220  0E00               	movlw	0
  2993  004222  6F8F               	movwf	(memset@c+1)& (0+255),b
  2994  004224  0E00               	movlw	0
  2995  004226  6F8E               	movwf	memset@c& (0+255),b
  2996  004228  0E00               	movlw	0
  2997  00422A  6F91               	movwf	(memset@n+1)& (0+255),b
  2998  00422C  0E1E               	movlw	30
  2999  00422E  6F90               	movwf	memset@n& (0+255),b
  3000  004230  ECFD  F025         	call	_memset	;wreg free
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;CommandHandler.c: 64:             for(int i=0;i<20;i++){
  3004  004234  0E00               	movlw	0
  3005  004236  0102               	movlb	2	; () banked
  3006  004238  6FAB               	movwf	(executeCommand@i+1)& (0+255),b
  3007  00423A  0E00               	movlw	0
  3008  00423C  6FAA               	movwf	executeCommand@i& (0+255),b
  3009  00423E                     l15462:
  3010                           
  3011                           ; BSR set to: 2
  3012                           ;CommandHandler.c: 65:                TokensCom[i]=((void*)0);
  3013  00423E  90D8               	bcf	status,0,c
  3014  004240  35AA               	rlcf	executeCommand@i& (0+255),w,b
  3015  004242  6ED9               	movwf	fsr2l,c
  3016  004244  35AB               	rlcf	(executeCommand@i+1)& (0+255),w,b
  3017  004246  6EDA               	movwf	fsr2h,c
  3018  004248  0E00               	movlw	low executeCommand@TokensCom
  3019  00424A  26D9               	addwf	fsr2l,f,c
  3020  00424C  0E02               	movlw	high executeCommand@TokensCom
  3021  00424E  22DA               	addwfc	fsr2h,f,c
  3022  004250  0E00               	movlw	0
  3023  004252  6EDE               	movwf	postinc2,c
  3024  004254  0E00               	movlw	0
  3025  004256  6EDD               	movwf	postdec2,c
  3026                           
  3027                           ; BSR set to: 2
  3028                           ;CommandHandler.c: 66:             }
  3029  004258  4BAA               	infsnz	executeCommand@i& (0+255),f,b
  3030  00425A  2BAB               	incf	(executeCommand@i+1)& (0+255),f,b
  3031                           
  3032                           ; BSR set to: 2
  3033  00425C  BFAB               	btfsc	(executeCommand@i+1)& (0+255),7,b
  3034  00425E  D7EF               	goto	l15462
  3035  004260  51AB               	movf	(executeCommand@i+1)& (0+255),w,b
  3036  004262  E104               	bnz	u19100
  3037  004264  0E14               	movlw	20
  3038  004266  5DAA               	subwf	executeCommand@i& (0+255),w,b
  3039  004268  A0D8               	btfss	status,0,c
  3040  00426A  D7E9               	goto	l15462
  3041  00426C                     u19100:
  3042                           
  3043                           ; BSR set to: 2
  3044                           ;CommandHandler.c: 69:             FilaPop(strCommand);
  3045  00426C  0E28               	movlw	low executeCommand@strCommand
  3046  00426E  0100               	movlb	0	; () banked
  3047  004270  6F97               	movwf	FilaPop@str& (0+255),b
  3048  004272  0E02               	movlw	high executeCommand@strCommand
  3049  004274  6F98               	movwf	(FilaPop@str+1)& (0+255),b
  3050  004276  EC41  F03A         	call	_FilaPop	;wreg free
  3051                           
  3052                           ;CommandHandler.c: 71:             numTokens=getTokens(TokensCom,strCommand);
  3053  00427A  0E00               	movlw	low executeCommand@TokensCom
  3054  00427C  6F9C               	movwf	getTokens@token& (0+255),b
  3055  00427E  0E02               	movlw	high executeCommand@TokensCom
  3056  004280  6F9D               	movwf	(getTokens@token+1)& (0+255),b
  3057  004282  0E28               	movlw	low executeCommand@strCommand
  3058  004284  6F9E               	movwf	getTokens@str& (0+255),b
  3059  004286  0E02               	movlw	high executeCommand@strCommand
  3060  004288  6F9F               	movwf	(getTokens@str+1)& (0+255),b
  3061  00428A  ECF5  F036         	call	_getTokens	;wreg free
  3062  00428E  0101               	movlb	1	; () banked
  3063  004290  6FAA               	movwf	??_executeCommand& (0+255),b
  3064  004292  51AA               	movf	??_executeCommand& (0+255),w,b
  3065  004294  0102               	movlb	2	; () banked
  3066  004296  6FAC               	movwf	executeCommand@numTokens& (0+255),b
  3067  004298  6BAD               	clrf	(executeCommand@numTokens+1)& (0+255),b
  3068                           
  3069                           ; BSR set to: 2
  3070                           ;CommandHandler.c: 73:             getComands(comando,TokensCom,numTokens);
  3071  00429A  0E46               	movlw	low executeCommand@comando
  3072  00429C  0101               	movlb	1	; () banked
  3073  00429E  6F3A               	movwf	getComands@comandos& (0+255),b
  3074  0042A0  0E02               	movlw	high executeCommand@comando
  3075  0042A2  6F3B               	movwf	(getComands@comandos+1)& (0+255),b
  3076  0042A4  0E00               	movlw	low executeCommand@TokensCom
  3077  0042A6  6F3C               	movwf	getComands@tokens& (0+255),b
  3078  0042A8  0E02               	movlw	high executeCommand@TokensCom
  3079  0042AA  6F3D               	movwf	(getComands@tokens+1)& (0+255),b
  3080  0042AC  C2AC  F13E         	movff	executeCommand@numTokens,getComands@size
  3081  0042B0  EC77  F02E         	call	_getComands	;wreg free
  3082                           
  3083                           ; BSR set to: 1
  3084                           ;CommandHandler.c: 74:             sprintf(writeBuffer,"%c \n",(int)comando[1].code);
  3085  0042B4  0EA6               	movlw	low _writeBuffer
  3086  0042B6  6F91               	movwf	sprintf@s& (0+255),b
  3087  0042B8  0E03               	movlw	high _writeBuffer
  3088  0042BA  6F92               	movwf	(sprintf@s+1)& (0+255),b
  3089  0042BC  0EDD               	movlw	low STR_3
  3090  0042BE  6F93               	movwf	sprintf@fmt& (0+255),b
  3091  0042C0  0E7F               	movlw	high STR_3
  3092  0042C2  6F94               	movwf	(sprintf@fmt+1)& (0+255),b
  3093  0042C4  C24B  F195         	movff	executeCommand@comando+5,?_sprintf+4
  3094  0042C8  6B96               	clrf	(?_sprintf+5)& (0+255),b
  3095  0042CA  EC19  F03A         	call	_sprintf	;wreg free
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;CommandHandler.c: 75:             if(comando[0].code=='G'){
  3099  0042CE  0E47               	movlw	71
  3100  0042D0  0102               	movlb	2	; () banked
  3101  0042D2  1946               	xorwf	executeCommand@comando& (0+255),w,b
  3102  0042D4  B4D8               	btfsc	status,2,c
  3103  0042D6  D02F               	goto	l15490
  3104  0042D8  D04D               	goto	l15492
  3105  0042DA                     l15478:
  3106                           
  3107                           ; BSR set to: 1
  3108                           ;CommandHandler.c: 80:                      G_01(&comando[1],numTokens);
  3109  0042DA  0E4B               	movlw	low (executeCommand@comando+5)
  3110  0042DC  6F2F               	movwf	G_01@axis& (0+255),b
  3111  0042DE  0E02               	movlw	high (executeCommand@comando+5)
  3112  0042E0  6F30               	movwf	(G_01@axis+1)& (0+255),b
  3113  0042E2  C2AC  F131         	movff	executeCommand@numTokens,G_01@n
  3114  0042E6  C2AD  F132         	movff	executeCommand@numTokens+1,G_01@n+1
  3115  0042EA  EC28  F01C         	call	_G_01	;wreg free
  3116                           
  3117                           ;CommandHandler.c: 81:                      break;
  3118  0042EE  D042               	goto	l15492
  3119  0042F0                     l15482:
  3120                           
  3121                           ; BSR set to: 1
  3122                           ;CommandHandler.c: 86:                      G_53(&comando[1],numTokens);
  3123  0042F0  0E4B               	movlw	low (executeCommand@comando+5)
  3124  0042F2  0100               	movlb	0	; () banked
  3125  0042F4  6F92               	movwf	G_53@axis& (0+255),b
  3126  0042F6  0E02               	movlw	high (executeCommand@comando+5)
  3127  0042F8  6F93               	movwf	(G_53@axis+1)& (0+255),b
  3128  0042FA  C2AC  F094         	movff	executeCommand@numTokens,G_53@n
  3129  0042FE  C2AD  F095         	movff	executeCommand@numTokens+1,G_53@n+1
  3130  004302  EC99  F033         	call	_G_53	;wreg free
  3131                           
  3132                           ;CommandHandler.c: 87:                      break;
  3133  004306  D036               	goto	l15492
  3134  004308                     l15484:
  3135                           
  3136                           ; BSR set to: 1
  3137                           ;CommandHandler.c: 89:                      G_95(&comando[1],numTokens);
  3138  004308  0E4B               	movlw	low (executeCommand@comando+5)
  3139  00430A  6F2F               	movwf	G_95@axis& (0+255),b
  3140  00430C  0E02               	movlw	high (executeCommand@comando+5)
  3141  00430E  6F30               	movwf	(G_95@axis+1)& (0+255),b
  3142  004310  C2AC  F131         	movff	executeCommand@numTokens,G_95@n
  3143  004314  C2AD  F132         	movff	executeCommand@numTokens+1,G_95@n+1
  3144  004318  EC58  F018         	call	_G_95	;wreg free
  3145                           
  3146                           ;CommandHandler.c: 90:                      break;
  3147  00431C  D02B               	goto	l15492
  3148  00431E                     l15486:
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;CommandHandler.c: 92:                      G_97(&comando[1],numTokens);
  3152  00431E  0E4B               	movlw	low (executeCommand@comando+5)
  3153  004320  0100               	movlb	0	; () banked
  3154  004322  6F98               	movwf	G_97@axis& (0+255),b
  3155  004324  0E02               	movlw	high (executeCommand@comando+5)
  3156  004326  6F99               	movwf	(G_97@axis+1)& (0+255),b
  3157  004328  C2AC  F09A         	movff	executeCommand@numTokens,G_97@n
  3158  00432C  C2AD  F09B         	movff	executeCommand@numTokens+1,G_97@n+1
  3159  004330  EC5A  F031         	call	_G_97	;wreg free
  3160                           
  3161                           ;CommandHandler.c: 93:                   break;
  3162  004334  D01F               	goto	l15492
  3163  004336                     l15490:
  3164                           
  3165                           ; BSR set to: 2
  3166  004336  C247  F119         	movff	executeCommand@comando+1,___fltol@f1
  3167  00433A  C248  F11A         	movff	executeCommand@comando+2,___fltol@f1+1
  3168  00433E  C249  F11B         	movff	executeCommand@comando+3,___fltol@f1+2
  3169  004342  C24A  F11C         	movff	executeCommand@comando+4,___fltol@f1+3
  3170  004346  EC51  F02F         	call	___fltol	;wreg free
  3171                           
  3172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3173                           ; Switch size 1, requested type "simple"
  3174                           ; Number of cases is 1, Range of values is 0 to 0
  3175                           ; switch strategies available:
  3176                           ; Name         Instructions Cycles
  3177                           ; simple_byte            4     3 (average)
  3178                           ;	Chosen strategy is simple_byte
  3179  00434A  0101               	movlb	1	; () banked
  3180  00434C  511A               	movf	(?___fltol+1)& (0+255),w,b
  3181  00434E  0A00               	xorlw	0	; case 0
  3182  004350  A4D8               	btfss	status,2,c
  3183  004352  D010               	goto	l15492
  3184                           
  3185                           ; BSR set to: 1
  3186                           ; Switch size 1, requested type "simple"
  3187                           ; Number of cases is 5, Range of values is 0 to 97
  3188                           ; switch strategies available:
  3189                           ; Name         Instructions Cycles
  3190                           ; simple_byte           16     9 (average)
  3191                           ;	Chosen strategy is simple_byte
  3192  004354  5119               	movf	?___fltol& (0+255),w,b
  3193  004356  0A00               	xorlw	0	; case 0
  3194  004358  B4D8               	btfsc	status,2,c
  3195  00435A  D7BF               	goto	l15478
  3196  00435C  0A01               	xorlw	1	; case 1
  3197  00435E  B4D8               	btfsc	status,2,c
  3198  004360  D7BC               	goto	l15478
  3199  004362  0A34               	xorlw	52	; case 53
  3200  004364  B4D8               	btfsc	status,2,c
  3201  004366  D7C4               	goto	l15482
  3202  004368  0A6A               	xorlw	106	; case 95
  3203  00436A  B4D8               	btfsc	status,2,c
  3204  00436C  D7CD               	goto	l15484
  3205  00436E  0A3E               	xorlw	62	; case 97
  3206  004370  B4D8               	btfsc	status,2,c
  3207  004372  D7D5               	goto	l15486
  3208  004374                     l15492:
  3209                           
  3210                           ;CommandHandler.c: 98:             if(comando[0].code=='M'){
  3211  004374  0E4D               	movlw	77
  3212  004376  0102               	movlb	2	; () banked
  3213  004378  1946               	xorwf	executeCommand@comando& (0+255),w,b
  3214  00437A  A4D8               	btfss	status,2,c
  3215  00437C  0012               	return	
  3216  00437E  D024               	goto	l15504
  3217  004380                     l15496:
  3218                           
  3219                           ; BSR set to: 1
  3220                           ;CommandHandler.c: 101:                      M_3(((void*)0),0);
  3221  004380  0E00               	movlw	0
  3222  004382  0100               	movlb	0	; () banked
  3223  004384  6F8E               	movwf	M_3@axis& (0+255),b
  3224  004386  0E00               	movlw	0
  3225  004388  6F8F               	movwf	(M_3@axis+1)& (0+255),b
  3226  00438A  0E00               	movlw	0
  3227  00438C  6F91               	movwf	(M_3@n+1)& (0+255),b
  3228  00438E  0E00               	movlw	0
  3229  004390  6F90               	movwf	M_3@n& (0+255),b
  3230  004392  ECAD  F03E         	call	_M_3	;wreg free
  3231                           
  3232                           ;CommandHandler.c: 102:                      break;
  3233  004396  0012               	return	
  3234  004398                     l15498:
  3235                           
  3236                           ; BSR set to: 1
  3237                           ;CommandHandler.c: 104:                      M_4(((void*)0),0);
  3238  004398  0E00               	movlw	0
  3239  00439A  0100               	movlb	0	; () banked
  3240  00439C  6F8E               	movwf	M_4@axis& (0+255),b
  3241  00439E  0E00               	movlw	0
  3242  0043A0  6F8F               	movwf	(M_4@axis+1)& (0+255),b
  3243  0043A2  0E00               	movlw	0
  3244  0043A4  6F91               	movwf	(M_4@n+1)& (0+255),b
  3245  0043A6  0E00               	movlw	0
  3246  0043A8  6F90               	movwf	M_4@n& (0+255),b
  3247  0043AA  ECA6  F03E         	call	_M_4	;wreg free
  3248                           
  3249                           ;CommandHandler.c: 105:                      break;
  3250  0043AE  0012               	return	
  3251  0043B0                     l15500:
  3252                           
  3253                           ; BSR set to: 1
  3254                           ;CommandHandler.c: 107:                      M_5(((void*)0),0);
  3255  0043B0  0E00               	movlw	0
  3256  0043B2  0100               	movlb	0	; () banked
  3257  0043B4  6F8C               	movwf	M_5@axis& (0+255),b
  3258  0043B6  0E00               	movlw	0
  3259  0043B8  6F8D               	movwf	(M_5@axis+1)& (0+255),b
  3260  0043BA  0E00               	movlw	0
  3261  0043BC  6F8F               	movwf	(M_5@n+1)& (0+255),b
  3262  0043BE  0E00               	movlw	0
  3263  0043C0  6F8E               	movwf	M_5@n& (0+255),b
  3264  0043C2  ECF9  F03E         	call	_M_5	;wreg free
  3265                           
  3266                           ;CommandHandler.c: 108:                      break;
  3267  0043C6  0012               	return	
  3268  0043C8                     l15504:
  3269                           
  3270                           ; BSR set to: 2
  3271  0043C8  C247  F119         	movff	executeCommand@comando+1,___fltol@f1
  3272  0043CC  C248  F11A         	movff	executeCommand@comando+2,___fltol@f1+1
  3273  0043D0  C249  F11B         	movff	executeCommand@comando+3,___fltol@f1+2
  3274  0043D4  C24A  F11C         	movff	executeCommand@comando+4,___fltol@f1+3
  3275  0043D8  EC51  F02F         	call	___fltol	;wreg free
  3276                           
  3277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3278                           ; Switch size 1, requested type "simple"
  3279                           ; Number of cases is 1, Range of values is 0 to 0
  3280                           ; switch strategies available:
  3281                           ; Name         Instructions Cycles
  3282                           ; simple_byte            4     3 (average)
  3283                           ;	Chosen strategy is simple_byte
  3284  0043DC  0101               	movlb	1	; () banked
  3285  0043DE  511A               	movf	(?___fltol+1)& (0+255),w,b
  3286  0043E0  0A00               	xorlw	0	; case 0
  3287  0043E2  A4D8               	btfss	status,2,c
  3288  0043E4  0012               	return	
  3289                           
  3290                           ; BSR set to: 1
  3291                           ; Switch size 1, requested type "simple"
  3292                           ; Number of cases is 3, Range of values is 3 to 5
  3293                           ; switch strategies available:
  3294                           ; Name         Instructions Cycles
  3295                           ; simple_byte           10     6 (average)
  3296                           ;	Chosen strategy is simple_byte
  3297  0043E6  5119               	movf	?___fltol& (0+255),w,b
  3298  0043E8  0A03               	xorlw	3	; case 3
  3299  0043EA  B4D8               	btfsc	status,2,c
  3300  0043EC  D7C9               	goto	l15496
  3301  0043EE  0A07               	xorlw	7	; case 4
  3302  0043F0  B4D8               	btfsc	status,2,c
  3303  0043F2  D7D2               	goto	l15498
  3304  0043F4  0A01               	xorlw	1	; case 5
  3305  0043F6  A4D8               	btfss	status,2,c
  3306  0043F8  0012               	return	
  3307  0043FA  D7DA               	goto	l15500
  3308  0043FC                     __end_of_executeCommand:
  3309                           	callstack 0
  3310                           
  3311 ;; *************** function _getTokens *****************
  3312 ;; Defined at:
  3313 ;;		line 7 in file "StringHandler.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  token           2   60[BANK0 ] PTR PTR unsigned char 
  3316 ;;		 -> executeCommand@TokensCom(40), 
  3317 ;;  str             2   62[BANK0 ] PTR unsigned char 
  3318 ;;		 -> executeCommand@strCommand(30), 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  s               2   68[BANK0 ] unsigned char [2]
  3321 ;;  i               1   70[BANK0 ] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      unsigned char 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 3F/0
  3328 ;;		On exit  : 3F/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3331 ;;      Params:         0       4       0       0       0       0       0       0       0
  3332 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3333 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3334 ;;      Totals:         0      11       0       0       0       0       0       0       0
  3335 ;;Total ram usage:       11 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 13
  3338 ;; This function calls:
  3339 ;;		_strtok
  3340 ;; This function is called by:
  3341 ;;		_executeCommand
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text6
  3346  006DEA                     __ptext6:
  3347                           	callstack 0
  3348  006DEA                     _getTokens:
  3349                           	callstack 16
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;StringHandler.c: 8:    char s[2]=" ";
  3353                           
  3354                           ;incstack = 0
  3355  006DEA  C2F8  F0A4         	movff	getTokens@F4806,getTokens@s
  3356  006DEE  C2F9  F0A5         	movff	getTokens@F4806+1,getTokens@s+1
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;StringHandler.c: 10:    token[0] = strtok(str, s);
  3360  006DF2  C09E  F098         	movff	getTokens@str,strtok@s
  3361  006DF6  C09F  F099         	movff	getTokens@str+1,strtok@s+1
  3362  006DFA  0EA4               	movlw	low getTokens@s
  3363  006DFC  6F9A               	movwf	strtok@sep& (0+255),b
  3364  006DFE  6B9B               	clrf	(strtok@sep+1)& (0+255),b
  3365  006E00  EC3D  F033         	call	_strtok	;wreg free
  3366  006E04  C09C  FFD9         	movff	getTokens@token,fsr2l
  3367  006E08  C09D  FFDA         	movff	getTokens@token+1,fsr2h
  3368  006E0C  0100               	movlb	0	; () banked
  3369  006E0E  C098  FFDE         	movff	?_strtok,postinc2
  3370  006E12  C099  FFDD         	movff	?_strtok+1,postdec2
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;StringHandler.c: 11:    uint8_t i=0;
  3374  006E16  0E00               	movlw	0
  3375  006E18  6FA6               	movwf	getTokens@i& (0+255),b
  3376                           
  3377                           ;StringHandler.c: 13:    while( token[i] != ((void*)0)) {
  3378  006E1A  D01B               	goto	l14994
  3379  006E1C                     l14990:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;StringHandler.c: 15:       i++;
  3383  006E1C  2BA6               	incf	getTokens@i& (0+255),f,b
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;StringHandler.c: 16:       token[i] = strtok(((void*)0), s);
  3387  006E1E  0E00               	movlw	0
  3388  006E20  6F98               	movwf	strtok@s& (0+255),b
  3389  006E22  0E00               	movlw	0
  3390  006E24  6F99               	movwf	(strtok@s+1)& (0+255),b
  3391  006E26  0EA4               	movlw	low getTokens@s
  3392  006E28  6F9A               	movwf	strtok@sep& (0+255),b
  3393  006E2A  6B9B               	clrf	(strtok@sep+1)& (0+255),b
  3394  006E2C  EC3D  F033         	call	_strtok	;wreg free
  3395  006E30  0100               	movlb	0	; () banked
  3396  006E32  51A6               	movf	getTokens@i& (0+255),w,b
  3397  006E34  0D02               	mullw	2
  3398  006E36  CFF3 F0A0          	movff	prodl,??_getTokens
  3399  006E3A  CFF4 F0A1          	movff	prodh,??_getTokens+1
  3400  006E3E  51A0               	movf	??_getTokens& (0+255),w,b
  3401  006E40  259C               	addwf	getTokens@token& (0+255),w,b
  3402  006E42  6ED9               	movwf	fsr2l,c
  3403  006E44  51A1               	movf	(??_getTokens+1)& (0+255),w,b
  3404  006E46  219D               	addwfc	(getTokens@token+1)& (0+255),w,b
  3405  006E48  6EDA               	movwf	fsr2h,c
  3406  006E4A  C098  FFDE         	movff	?_strtok,postinc2
  3407  006E4E  C099  FFDD         	movff	?_strtok+1,postdec2
  3408  006E52                     l14994:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;StringHandler.c: 13:    while( token[i] != ((void*)0)) {
  3412  006E52  51A6               	movf	getTokens@i& (0+255),w,b
  3413  006E54  0D02               	mullw	2
  3414  006E56  CFF3 F0A0          	movff	prodl,??_getTokens
  3415  006E5A  CFF4 F0A1          	movff	prodh,??_getTokens+1
  3416  006E5E  51A0               	movf	??_getTokens& (0+255),w,b
  3417  006E60  259C               	addwf	getTokens@token& (0+255),w,b
  3418  006E62  6ED9               	movwf	fsr2l,c
  3419  006E64  51A1               	movf	(??_getTokens+1)& (0+255),w,b
  3420  006E66  219D               	addwfc	(getTokens@token+1)& (0+255),w,b
  3421  006E68  6EDA               	movwf	fsr2h,c
  3422  006E6A  50DE               	movf	postinc2,w,c
  3423  006E6C  10DE               	iorwf	postinc2,w,c
  3424  006E6E  A4D8               	btfss	status,2,c
  3425  006E70  D7D5               	goto	l14990
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;StringHandler.c: 18:    return i;
  3429  006E72  51A6               	movf	getTokens@i& (0+255),w,b
  3430                           
  3431                           ; BSR set to: 0
  3432  006E74  0012               	return		;funcret
  3433  006E76                     __end_of_getTokens:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _getComands *****************
  3437 ;; Defined at:
  3438 ;;		line 21 in file "StringHandler.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  comandos        2   58[BANK1 ] PTR struct Comando_T
  3441 ;;		 -> executeCommand@comando(100), 
  3442 ;;  tokens          2   60[BANK1 ] PTR PTR unsigned char 
  3443 ;;		 -> executeCommand@TokensCom(40), 
  3444 ;;  size            1   62[BANK1 ] unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  i               1   79[BANK1 ] unsigned char 
  3447 ;;  buff           10   69[BANK1 ] unsigned char [10]
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 3F/1
  3454 ;;		On exit  : 3F/1
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3457 ;;      Params:         0       0       5       0       0       0       0       0       0
  3458 ;;      Locals:         0       0      11       0       0       0       0       0       0
  3459 ;;      Temps:          0       0       6       0       0       0       0       0       0
  3460 ;;      Totals:         0       0      22       0       0       0       0       0       0
  3461 ;;Total ram usage:       22 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 13
  3464 ;; This function calls:
  3465 ;;		_strcpy
  3466 ;;		_strtof
  3467 ;; This function is called by:
  3468 ;;		_executeCommand
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text7
  3473  005CEE                     __ptext7:
  3474                           	callstack 0
  3475  005CEE                     _getComands:
  3476                           	callstack 16
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;StringHandler.c: 22:    char buff[10];;StringHandler.c: 23:    for(uint8_t i=0;i<size;i
      +                          ++){
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;incstack = 0
  3483  005CEE  0E00               	movlw	0
  3484  005CF0  6F4F               	movwf	getComands@i& (0+255),b
  3485  005CF2  D068               	goto	l15010
  3486  005CF4                     l15002:
  3487                           
  3488                           ; BSR set to: 1
  3489                           ;StringHandler.c: 24:       comandos[i].code=tokens[i][0];
  3490  005CF4  514F               	movf	getComands@i& (0+255),w,b
  3491  005CF6  0D02               	mullw	2
  3492  005CF8  CFF3 F13F          	movff	prodl,??_getComands
  3493  005CFC  CFF4 F140          	movff	prodh,??_getComands+1
  3494  005D00  513F               	movf	??_getComands& (0+255),w,b
  3495  005D02  253C               	addwf	getComands@tokens& (0+255),w,b
  3496  005D04  6ED9               	movwf	fsr2l,c
  3497  005D06  5140               	movf	(??_getComands+1)& (0+255),w,b
  3498  005D08  213D               	addwfc	(getComands@tokens+1)& (0+255),w,b
  3499  005D0A  6EDA               	movwf	fsr2h,c
  3500  005D0C  CFDE F141          	movff	postinc2,??_getComands+2
  3501  005D10  CFDD F142          	movff	postdec2,??_getComands+3
  3502  005D14  C141  FFD9         	movff	??_getComands+2,fsr2l
  3503  005D18  C142  FFDA         	movff	??_getComands+3,fsr2h
  3504  005D1C  514F               	movf	getComands@i& (0+255),w,b
  3505  005D1E  0D05               	mullw	5
  3506  005D20  CFF3 F143          	movff	prodl,??_getComands+4
  3507  005D24  CFF4 F144          	movff	prodh,??_getComands+5
  3508  005D28  5143               	movf	(??_getComands+4)& (0+255),w,b
  3509  005D2A  253A               	addwf	getComands@comandos& (0+255),w,b
  3510  005D2C  6EE1               	movwf	fsr1l,c
  3511  005D2E  5144               	movf	(??_getComands+5)& (0+255),w,b
  3512  005D30  213B               	addwfc	(getComands@comandos+1)& (0+255),w,b
  3513  005D32  6EE2               	movwf	fsr1h,c
  3514  005D34  CFDF FFE7          	movff	indf2,indf1
  3515                           
  3516                           ; BSR set to: 1
  3517                           ;StringHandler.c: 25:       strcpy(buff, &tokens[i][1]);
  3518  005D38  0E45               	movlw	low getComands@buff
  3519  005D3A  0100               	movlb	0	; () banked
  3520  005D3C  6F8C               	movwf	strcpy@dest& (0+255),b
  3521  005D3E  0E01               	movlw	high getComands@buff
  3522  005D40  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
  3523  005D42  0101               	movlb	1	; () banked
  3524  005D44  514F               	movf	getComands@i& (0+255),w,b
  3525  005D46  0D02               	mullw	2
  3526  005D48  CFF3 F13F          	movff	prodl,??_getComands
  3527  005D4C  CFF4 F140          	movff	prodh,??_getComands+1
  3528  005D50  513F               	movf	??_getComands& (0+255),w,b
  3529  005D52  253C               	addwf	getComands@tokens& (0+255),w,b
  3530  005D54  6ED9               	movwf	fsr2l,c
  3531  005D56  5140               	movf	(??_getComands+1)& (0+255),w,b
  3532  005D58  213D               	addwfc	(getComands@tokens+1)& (0+255),w,b
  3533  005D5A  6EDA               	movwf	fsr2h,c
  3534  005D5C  CFDE F141          	movff	postinc2,??_getComands+2
  3535  005D60  CFDD F142          	movff	postdec2,??_getComands+3
  3536  005D64  0E01               	movlw	1
  3537  005D66  2541               	addwf	(??_getComands+2)& (0+255),w,b
  3538  005D68  0100               	movlb	0	; () banked
  3539  005D6A  6F8E               	movwf	strcpy@src& (0+255),b
  3540  005D6C  0E00               	movlw	0
  3541  005D6E  0101               	movlb	1	; () banked
  3542  005D70  2142               	addwfc	(??_getComands+3)& (0+255),w,b
  3543  005D72  0100               	movlb	0	; () banked
  3544  005D74  6F8F               	movwf	(strcpy@src+1)& (0+255),b
  3545  005D76  EC9F  F039         	call	_strcpy	;wreg free
  3546                           
  3547                           ;StringHandler.c: 26:  comandos[i].number=strtof(buff,((void*)0));
  3548  005D7A  0E45               	movlw	low getComands@buff
  3549  005D7C  0101               	movlb	1	; () banked
  3550  005D7E  6F25               	movwf	strtof@s& (0+255),b
  3551  005D80  0E01               	movlw	high getComands@buff
  3552  005D82  6F26               	movwf	(strtof@s+1)& (0+255),b
  3553  005D84  0E00               	movlw	0
  3554  005D86  6F27               	movwf	strtof@res& (0+255),b
  3555  005D88  0E00               	movlw	0
  3556  005D8A  6F28               	movwf	(strtof@res+1)& (0+255),b
  3557  005D8C  EC58  F000         	call	_strtof	;wreg free
  3558  005D90  0101               	movlb	1	; () banked
  3559  005D92  514F               	movf	getComands@i& (0+255),w,b
  3560  005D94  0D05               	mullw	5
  3561  005D96  C13A  F13F         	movff	getComands@comandos,??_getComands
  3562  005D9A  C13B  F140         	movff	getComands@comandos+1,??_getComands+1
  3563  005D9E  50F3               	movf	243,w,c
  3564  005DA0  273F               	addwf	??_getComands& (0+255),f,b
  3565  005DA2  50F4               	movf	244,w,c
  3566  005DA4  2340               	addwfc	(??_getComands+1)& (0+255),f,b
  3567  005DA6  0E01               	movlw	1
  3568  005DA8  253F               	addwf	??_getComands& (0+255),w,b
  3569  005DAA  6ED9               	movwf	fsr2l,c
  3570  005DAC  0E00               	movlw	0
  3571  005DAE  2140               	addwfc	(??_getComands+1)& (0+255),w,b
  3572  005DB0  6EDA               	movwf	fsr2h,c
  3573  005DB2  C125  FFDE         	movff	?_strtof,postinc2
  3574  005DB6  C126  FFDE         	movff	?_strtof+1,postinc2
  3575  005DBA  C127  FFDE         	movff	?_strtof+2,postinc2
  3576  005DBE  C128  FFDE         	movff	?_strtof+3,postinc2
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;StringHandler.c: 27:    }
  3580  005DC2  2B4F               	incf	getComands@i& (0+255),f,b
  3581  005DC4                     l15010:
  3582                           
  3583                           ; BSR set to: 1
  3584  005DC4  513E               	movf	getComands@size& (0+255),w,b
  3585  005DC6  5D4F               	subwf	getComands@i& (0+255),w,b
  3586  005DC8  B0D8               	btfsc	status,0,c
  3587  005DCA  0012               	return	
  3588  005DCC  D793               	goto	l15002
  3589  005DCE                     __end_of_getComands:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _strtof *****************
  3593 ;; Defined at:
  3594 ;;		line 95 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strtof.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  s               2   37[BANK1 ] PTR const unsigned char 
  3597 ;;		 -> getComands@buff(10), 
  3598 ;;  res             2   39[BANK1 ] PTR PTR unsigned char 
  3599 ;;		 -> NULL(0), 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  _u              4   53[BANK1 ] struct .
  3602 ;;  eexp            2   51[BANK1 ] int 
  3603 ;;  expon           2   49[BANK1 ] int 
  3604 ;;  i               1   57[BANK1 ] unsigned char 
  3605 ;;  flags           1   48[BANK1 ] unsigned char 
  3606 ;;  digit           1   47[BANK1 ] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  4   37[BANK1 ] float 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 3F/1
  3613 ;;		On exit  : 3E/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3616 ;;      Params:         0       0       4       0       0       0       0       0       0
  3617 ;;      Locals:         0       0      11       0       0       0       0       0       0
  3618 ;;      Temps:          0       0       6       0       0       0       0       0       0
  3619 ;;      Totals:         0       0      21       0       0       0       0       0       0
  3620 ;;Total ram usage:       21 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 12
  3623 ;; This function calls:
  3624 ;;		___fldiv
  3625 ;;		___fleq
  3626 ;;		___flge
  3627 ;;		___flmul
  3628 ;;		___flneg
  3629 ;;		___lmul
  3630 ;;		___wmul
  3631 ;;		___xxtofl
  3632 ;;		_isdigit
  3633 ;;		_isspace
  3634 ;;		_isxdigit
  3635 ;;		_nanf
  3636 ;;		_toupper
  3637 ;; This function is called by:
  3638 ;;		_getComands
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text8
  3643  0000B0                     __ptext8:
  3644                           	callstack 0
  3645  0000B0                     _strtof:
  3646                           	callstack 16
  3647                           
  3648                           ; BSR set to: 1
  3649                           
  3650                           ; BSR set to: 1
  3651                           ;incstack = 0
  3652  0000B0  5127               	movf	strtof@res& (0+255),w,b
  3653  0000B2  1128               	iorwf	(strtof@res+1)& (0+255),w,b
  3654  0000B4  B4D8               	btfsc	status,2,c
  3655  0000B6  D00B               	goto	l14362
  3656                           
  3657                           ; BSR set to: 1
  3658  0000B8  C127  FFD9         	movff	strtof@res,fsr2l
  3659  0000BC  C128  FFDA         	movff	strtof@res+1,fsr2h
  3660  0000C0  C125  FFDE         	movff	strtof@s,postinc2
  3661  0000C4  C126  FFDD         	movff	strtof@s+1,postdec2
  3662  0000C8  D002               	goto	l14362
  3663  0000CA                     l14358:
  3664                           
  3665                           ; BSR set to: 1
  3666  0000CA  4B25               	infsnz	strtof@s& (0+255),f,b
  3667  0000CC  2B26               	incf	(strtof@s+1)& (0+255),f,b
  3668  0000CE                     l14362:
  3669                           
  3670                           ; BSR set to: 1
  3671  0000CE  C125  FFD9         	movff	strtof@s,fsr2l
  3672  0000D2  C126  FFDA         	movff	strtof@s+1,fsr2h
  3673  0000D6  0E20               	movlw	32
  3674  0000D8  18DE               	xorwf	postinc2,w,c
  3675  0000DA  A4D8               	btfss	status,2,c
  3676  0000DC  D002               	goto	u17310
  3677  0000DE  0E01               	movlw	1
  3678  0000E0  D001               	goto	u17320
  3679  0000E2                     u17310:
  3680  0000E2  0E00               	movlw	0
  3681  0000E4                     u17320:
  3682  0000E4  6F33               	movwf	strtof@eexp& (0+255),b
  3683  0000E6  6B34               	clrf	(strtof@eexp+1)& (0+255),b
  3684  0000E8  5133               	movf	strtof@eexp& (0+255),w,b
  3685  0000EA  1134               	iorwf	(strtof@eexp+1)& (0+255),w,b
  3686  0000EC  A4D8               	btfss	status,2,c
  3687  0000EE  D7ED               	goto	l14358
  3688                           
  3689                           ; BSR set to: 1
  3690  0000F0  0EF7               	movlw	247
  3691  0000F2  6F29               	movwf	??_strtof& (0+255),b
  3692  0000F4  0EFF               	movlw	255
  3693  0000F6  6F2A               	movwf	(??_strtof+1)& (0+255),b
  3694  0000F8  C125  FFD9         	movff	strtof@s,fsr2l
  3695  0000FC  C126  FFDA         	movff	strtof@s+1,fsr2h
  3696  000100  50DF               	movf	indf2,w,c
  3697  000102  6F2B               	movwf	(??_strtof+2)& (0+255),b
  3698  000104  512B               	movf	(??_strtof+2)& (0+255),w,b
  3699  000106  6F33               	movwf	strtof@eexp& (0+255),b
  3700  000108  6B34               	clrf	(strtof@eexp+1)& (0+255),b
  3701  00010A  C133  F12C         	movff	strtof@eexp,??_strtof+3
  3702  00010E  C134  F12D         	movff	strtof@eexp+1,??_strtof+4
  3703  000112  5129               	movf	??_strtof& (0+255),w,b
  3704  000114  272C               	addwf	(??_strtof+3)& (0+255),f,b
  3705  000116  512A               	movf	(??_strtof+1)& (0+255),w,b
  3706  000118  232D               	addwfc	(??_strtof+4)& (0+255),f,b
  3707  00011A  512D               	movf	(??_strtof+4)& (0+255),w,b
  3708  00011C  E104               	bnz	u17340
  3709  00011E  0E05               	movlw	5
  3710  000120  5D2C               	subwf	(??_strtof+3)& (0+255),w,b
  3711  000122  A0D8               	btfss	status,0,c
  3712  000124  D7D2               	goto	l14358
  3713  000126                     u17340:
  3714                           
  3715                           ; BSR set to: 1
  3716  000126  0E00               	movlw	0
  3717  000128  6F30               	movwf	strtof@flags& (0+255),b
  3718                           
  3719                           ; BSR set to: 1
  3720  00012A  0E2D               	movlw	45
  3721  00012C  1933               	xorwf	strtof@eexp& (0+255),w,b
  3722  00012E  1134               	iorwf	(strtof@eexp+1)& (0+255),w,b
  3723  000130  A4D8               	btfss	status,2,c
  3724  000132  D005               	goto	l14374
  3725                           
  3726                           ; BSR set to: 1
  3727  000134  0E01               	movlw	1
  3728  000136  6F30               	movwf	strtof@flags& (0+255),b
  3729  000138                     l14372:
  3730                           
  3731                           ; BSR set to: 1
  3732  000138  4B25               	infsnz	strtof@s& (0+255),f,b
  3733  00013A  2B26               	incf	(strtof@s+1)& (0+255),f,b
  3734  00013C  D005               	goto	l14378
  3735  00013E                     l14374:
  3736                           
  3737                           ; BSR set to: 1
  3738  00013E  0E2B               	movlw	43
  3739  000140  1933               	xorwf	strtof@eexp& (0+255),w,b
  3740  000142  1134               	iorwf	(strtof@eexp+1)& (0+255),w,b
  3741  000144  B4D8               	btfsc	status,2,c
  3742  000146  D7F8               	goto	l14372
  3743  000148                     l14378:
  3744                           
  3745                           ; BSR set to: 1
  3746  000148  0E00               	movlw	0
  3747  00014A  6F39               	movwf	strtof@i& (0+255),b
  3748  00014C  D001               	goto	l14382
  3749  00014E                     l14380:
  3750                           
  3751                           ; BSR set to: 1
  3752  00014E  2B39               	incf	strtof@i& (0+255),f,b
  3753  000150                     l14382:
  3754                           
  3755                           ; BSR set to: 1
  3756  000150  5139               	movf	strtof@i& (0+255),w,b
  3757  000152  2525               	addwf	strtof@s& (0+255),w,b
  3758  000154  6ED9               	movwf	fsr2l,c
  3759  000156  0E00               	movlw	0
  3760  000158  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3761  00015A  6EDA               	movwf	fsr2h,c
  3762  00015C  50DF               	movf	indf2,w,c
  3763  00015E  B4D8               	btfsc	status,2,c
  3764  000160  D026               	goto	u17390
  3765                           
  3766                           ; BSR set to: 1
  3767  000162  5139               	movf	strtof@i& (0+255),w,b
  3768  000164  2525               	addwf	strtof@s& (0+255),w,b
  3769  000166  6ED9               	movwf	fsr2l,c
  3770  000168  0E00               	movlw	0
  3771  00016A  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3772  00016C  6EDA               	movwf	fsr2h,c
  3773  00016E  50DF               	movf	indf2,w,c
  3774  000170  6F29               	movwf	??_strtof& (0+255),b
  3775  000172  0ED4               	movlw	low STR_22
  3776  000174  2539               	addwf	strtof@i& (0+255),w,b
  3777  000176  6EF6               	movwf	tblptrl,c
  3778  000178  6AF7               	clrf	tblptrh,c
  3779  00017A  0E7F               	movlw	high STR_22
  3780  00017C  22F7               	addwfc	tblptrh,f,c
  3781  00017E                     	if	0	;There are less than 3 active tblptr bytes
  3782  00017E                     	endif
  3783  00017E  0008               	tblrd		*
  3784  000180  50F5               	movf	tablat,w,c
  3785  000182  1929               	xorwf	??_strtof& (0+255),w,b
  3786  000184  B4D8               	btfsc	status,2,c
  3787  000186  D7E3               	goto	l14380
  3788                           
  3789                           ; BSR set to: 1
  3790  000188  5139               	movf	strtof@i& (0+255),w,b
  3791  00018A  2525               	addwf	strtof@s& (0+255),w,b
  3792  00018C  6ED9               	movwf	fsr2l,c
  3793  00018E  0E00               	movlw	0
  3794  000190  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3795  000192  6EDA               	movwf	fsr2h,c
  3796  000194  50DF               	movf	indf2,w,c
  3797  000196  6F29               	movwf	??_strtof& (0+255),b
  3798  000198  0ECB               	movlw	low STR_23
  3799  00019A  2539               	addwf	strtof@i& (0+255),w,b
  3800  00019C  6EF6               	movwf	tblptrl,c
  3801  00019E  6AF7               	clrf	tblptrh,c
  3802  0001A0  0E7F               	movlw	high STR_23
  3803  0001A2  22F7               	addwfc	tblptrh,f,c
  3804  0001A4                     	if	0	;There are less than 3 active tblptr bytes
  3805  0001A4                     	endif
  3806  0001A4  0008               	tblrd		*
  3807  0001A6  50F5               	movf	tablat,w,c
  3808  0001A8  1929               	xorwf	??_strtof& (0+255),w,b
  3809  0001AA  B4D8               	btfsc	status,2,c
  3810  0001AC  D7D0               	goto	l14380
  3811  0001AE                     u17390:
  3812                           
  3813                           ; BSR set to: 1
  3814  0001AE  0E02               	movlw	2
  3815  0001B0  6539               	cpfsgt	strtof@i& (0+255),b
  3816  0001B2  D023               	goto	l14400
  3817                           
  3818                           ; BSR set to: 1
  3819  0001B4  0E00               	movlw	0
  3820  0001B6  6F35               	movwf	strtof@_u& (0+255),b
  3821  0001B8  0E00               	movlw	0
  3822  0001BA  6F36               	movwf	(strtof@_u+1)& (0+255),b
  3823  0001BC  0E80               	movlw	128
  3824  0001BE  6F37               	movwf	(strtof@_u+2)& (0+255),b
  3825  0001C0  0E7F               	movlw	127
  3826  0001C2  6F38               	movwf	(strtof@_u+3)& (0+255),b
  3827                           
  3828                           ; BSR set to: 1
  3829  0001C4  5127               	movf	strtof@res& (0+255),w,b
  3830  0001C6  1128               	iorwf	(strtof@res+1)& (0+255),w,b
  3831  0001C8  B4D8               	btfsc	status,2,c
  3832  0001CA  EFA1  F006         	goto	l2551
  3833                           
  3834                           ; BSR set to: 1
  3835  0001CE  0E08               	movlw	8
  3836  0001D0  1939               	xorwf	strtof@i& (0+255),w,b
  3837  0001D2  B4D8               	btfsc	status,2,c
  3838  0001D4  D002               	goto	l14398
  3839                           
  3840                           ; BSR set to: 1
  3841  0001D6  0E03               	movlw	3
  3842  0001D8  6F39               	movwf	strtof@i& (0+255),b
  3843  0001DA                     l14398:
  3844                           
  3845                           ; BSR set to: 1
  3846  0001DA  5139               	movf	strtof@i& (0+255),w,b
  3847  0001DC  2525               	addwf	strtof@s& (0+255),w,b
  3848  0001DE  6F29               	movwf	??_strtof& (0+255),b
  3849  0001E0  0E00               	movlw	0
  3850  0001E2  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3851  0001E4  6F2A               	movwf	(??_strtof+1)& (0+255),b
  3852  0001E6  C127  FFD9         	movff	strtof@res,fsr2l
  3853  0001EA  C128  FFDA         	movff	strtof@res+1,fsr2h
  3854  0001EE  C129  FFDE         	movff	??_strtof,postinc2
  3855  0001F2  C12A  FFDD         	movff	??_strtof+1,postdec2
  3856  0001F6  EFA1  F006         	goto	l2551
  3857  0001FA                     l14400:
  3858                           
  3859                           ; BSR set to: 1
  3860  0001FA  0E00               	movlw	0
  3861  0001FC  6F39               	movwf	strtof@i& (0+255),b
  3862  0001FE  D001               	goto	l14404
  3863  000200                     l14402:
  3864                           
  3865                           ; BSR set to: 1
  3866  000200  2B39               	incf	strtof@i& (0+255),f,b
  3867  000202                     l14404:
  3868                           
  3869                           ; BSR set to: 1
  3870  000202  5139               	movf	strtof@i& (0+255),w,b
  3871  000204  2525               	addwf	strtof@s& (0+255),w,b
  3872  000206  6ED9               	movwf	fsr2l,c
  3873  000208  0E00               	movlw	0
  3874  00020A  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3875  00020C  6EDA               	movwf	fsr2h,c
  3876  00020E  50DF               	movf	indf2,w,c
  3877  000210  B4D8               	btfsc	status,2,c
  3878  000212  D026               	goto	u17450
  3879                           
  3880                           ; BSR set to: 1
  3881  000214  5139               	movf	strtof@i& (0+255),w,b
  3882  000216  2525               	addwf	strtof@s& (0+255),w,b
  3883  000218  6ED9               	movwf	fsr2l,c
  3884  00021A  0E00               	movlw	0
  3885  00021C  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3886  00021E  6EDA               	movwf	fsr2h,c
  3887  000220  50DF               	movf	indf2,w,c
  3888  000222  6F29               	movwf	??_strtof& (0+255),b
  3889  000224  0EF3               	movlw	low STR_9
  3890  000226  2539               	addwf	strtof@i& (0+255),w,b
  3891  000228  6EF6               	movwf	tblptrl,c
  3892  00022A  6AF7               	clrf	tblptrh,c
  3893  00022C  0E7F               	movlw	high STR_9
  3894  00022E  22F7               	addwfc	tblptrh,f,c
  3895  000230                     	if	0	;There are less than 3 active tblptr bytes
  3896  000230                     	endif
  3897  000230  0008               	tblrd		*
  3898  000232  50F5               	movf	tablat,w,c
  3899  000234  1929               	xorwf	??_strtof& (0+255),w,b
  3900  000236  B4D8               	btfsc	status,2,c
  3901  000238  D7E3               	goto	l14402
  3902                           
  3903                           ; BSR set to: 1
  3904  00023A  5139               	movf	strtof@i& (0+255),w,b
  3905  00023C  2525               	addwf	strtof@s& (0+255),w,b
  3906  00023E  6ED9               	movwf	fsr2l,c
  3907  000240  0E00               	movlw	0
  3908  000242  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3909  000244  6EDA               	movwf	fsr2h,c
  3910  000246  50DF               	movf	indf2,w,c
  3911  000248  6F29               	movwf	??_strtof& (0+255),b
  3912  00024A  0EEB               	movlw	low STR_8
  3913  00024C  2539               	addwf	strtof@i& (0+255),w,b
  3914  00024E  6EF6               	movwf	tblptrl,c
  3915  000250  6AF7               	clrf	tblptrh,c
  3916  000252  0E7F               	movlw	high STR_8
  3917  000254  22F7               	addwfc	tblptrh,f,c
  3918  000256                     	if	0	;There are less than 3 active tblptr bytes
  3919  000256                     	endif
  3920  000256  0008               	tblrd		*
  3921  000258  50F5               	movf	tablat,w,c
  3922  00025A  1929               	xorwf	??_strtof& (0+255),w,b
  3923  00025C  B4D8               	btfsc	status,2,c
  3924  00025E  D7D0               	goto	l14402
  3925  000260                     u17450:
  3926                           
  3927                           ; BSR set to: 1
  3928  000260  0E03               	movlw	3
  3929  000262  1939               	xorwf	strtof@i& (0+255),w,b
  3930  000264  A4D8               	btfss	status,2,c
  3931  000266  D057               	goto	l14434
  3932                           
  3933                           ; BSR set to: 1
  3934  000268  0EE1               	movlw	low (STR_3+4)
  3935  00026A  0100               	movlb	0	; () banked
  3936  00026C  6F8C               	movwf	nanf@s& (0+255),b
  3937  00026E  0E7F               	movlw	high (STR_3+4)
  3938  000270  6F8D               	movwf	(nanf@s+1)& (0+255),b
  3939  000272  ECFC  F03D         	call	_nanf	;wreg free
  3940  000276  C08C  F135         	movff	?_nanf,strtof@_u
  3941  00027A  C08D  F136         	movff	?_nanf+1,strtof@_u+1
  3942  00027E  C08E  F137         	movff	?_nanf+2,strtof@_u+2
  3943  000282  C08F  F138         	movff	?_nanf+3,strtof@_u+3
  3944                           
  3945                           ; BSR set to: 0
  3946  000286  0101               	movlb	1	; () banked
  3947  000288  5127               	movf	strtof@res& (0+255),w,b
  3948  00028A  1128               	iorwf	(strtof@res+1)& (0+255),w,b
  3949  00028C  B4D8               	btfsc	status,2,c
  3950  00028E  EFA1  F006         	goto	l2551
  3951                           
  3952                           ; BSR set to: 1
  3953  000292  5139               	movf	strtof@i& (0+255),w,b
  3954  000294  2725               	addwf	strtof@s& (0+255),f,b
  3955  000296  0E00               	movlw	0
  3956  000298  2326               	addwfc	(strtof@s+1)& (0+255),f,b
  3957                           
  3958                           ; BSR set to: 1
  3959  00029A  C125  FFD9         	movff	strtof@s,fsr2l
  3960  00029E  C126  FFDA         	movff	strtof@s+1,fsr2h
  3961  0002A2  0E28               	movlw	40
  3962  0002A4  18DE               	xorwf	postinc2,w,c
  3963  0002A6  A4D8               	btfss	status,2,c
  3964  0002A8  D02C               	goto	l14432
  3965                           
  3966                           ; BSR set to: 1
  3967  0002AA  0E00               	movlw	0
  3968  0002AC  6F39               	movwf	strtof@i& (0+255),b
  3969  0002AE  D001               	goto	l14424
  3970  0002B0                     l14422:
  3971                           
  3972                           ; BSR set to: 1
  3973  0002B0  2B39               	incf	strtof@i& (0+255),f,b
  3974  0002B2                     l14424:
  3975                           
  3976                           ; BSR set to: 1
  3977  0002B2  5139               	movf	strtof@i& (0+255),w,b
  3978  0002B4  2525               	addwf	strtof@s& (0+255),w,b
  3979  0002B6  6ED9               	movwf	fsr2l,c
  3980  0002B8  0E00               	movlw	0
  3981  0002BA  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3982  0002BC  6EDA               	movwf	fsr2h,c
  3983  0002BE  50DF               	movf	indf2,w,c
  3984  0002C0  B4D8               	btfsc	status,2,c
  3985  0002C2  D00A               	goto	u17500
  3986                           
  3987                           ; BSR set to: 1
  3988  0002C4  5139               	movf	strtof@i& (0+255),w,b
  3989  0002C6  2525               	addwf	strtof@s& (0+255),w,b
  3990  0002C8  6ED9               	movwf	fsr2l,c
  3991  0002CA  0E00               	movlw	0
  3992  0002CC  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  3993  0002CE  6EDA               	movwf	fsr2h,c
  3994  0002D0  0E29               	movlw	41
  3995  0002D2  18DE               	xorwf	postinc2,w,c
  3996  0002D4  A4D8               	btfss	status,2,c
  3997  0002D6  D7EC               	goto	l14422
  3998  0002D8                     u17500:
  3999                           
  4000                           ; BSR set to: 1
  4001  0002D8  5139               	movf	strtof@i& (0+255),w,b
  4002  0002DA  2525               	addwf	strtof@s& (0+255),w,b
  4003  0002DC  6ED9               	movwf	fsr2l,c
  4004  0002DE  0E00               	movlw	0
  4005  0002E0  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4006  0002E2  6EDA               	movwf	fsr2h,c
  4007  0002E4  0E29               	movlw	41
  4008  0002E6  18DE               	xorwf	postinc2,w,c
  4009  0002E8  A4D8               	btfss	status,2,c
  4010  0002EA  D00B               	goto	l14432
  4011                           
  4012                           ; BSR set to: 1
  4013  0002EC  5139               	movf	strtof@i& (0+255),w,b
  4014  0002EE  6F29               	movwf	??_strtof& (0+255),b
  4015  0002F0  6B2A               	clrf	(??_strtof+1)& (0+255),b
  4016  0002F2  0E01               	movlw	1
  4017  0002F4  2729               	addwf	??_strtof& (0+255),f,b
  4018  0002F6  0E00               	movlw	0
  4019  0002F8  232A               	addwfc	(??_strtof+1)& (0+255),f,b
  4020  0002FA  5129               	movf	??_strtof& (0+255),w,b
  4021  0002FC  2725               	addwf	strtof@s& (0+255),f,b
  4022  0002FE  512A               	movf	(??_strtof+1)& (0+255),w,b
  4023  000300  2326               	addwfc	(strtof@s+1)& (0+255),f,b
  4024  000302                     l14432:
  4025                           
  4026                           ; BSR set to: 1
  4027  000302  C127  FFD9         	movff	strtof@res,fsr2l
  4028  000306  C128  FFDA         	movff	strtof@res+1,fsr2h
  4029  00030A  C125  FFDE         	movff	strtof@s,postinc2
  4030  00030E  C126  FFDD         	movff	strtof@s+1,postdec2
  4031  000312  EFA1  F006         	goto	l2551
  4032  000316                     l14434:
  4033                           
  4034                           ; BSR set to: 1
  4035  000316  0E00               	movlw	0
  4036  000318  6F34               	movwf	(strtof@eexp+1)& (0+255),b
  4037  00031A  0E00               	movlw	0
  4038  00031C  6F33               	movwf	strtof@eexp& (0+255),b
  4039  00031E  0E00               	movlw	0
  4040  000320  6F35               	movwf	strtof@_u& (0+255),b
  4041  000322  0E00               	movlw	0
  4042  000324  6F36               	movwf	(strtof@_u+1)& (0+255),b
  4043  000326  0E00               	movlw	0
  4044  000328  6F37               	movwf	(strtof@_u+2)& (0+255),b
  4045  00032A  0E00               	movlw	0
  4046  00032C  6F38               	movwf	(strtof@_u+3)& (0+255),b
  4047  00032E  0E00               	movlw	0
  4048  000330  6F32               	movwf	(strtof@expon+1)& (0+255),b
  4049  000332  0E00               	movlw	0
  4050  000334  6F31               	movwf	strtof@expon& (0+255),b
  4051  000336  0E00               	movlw	0
  4052  000338  6F39               	movwf	strtof@i& (0+255),b
  4053  00033A  D001               	goto	l14438
  4054  00033C                     l14436:
  4055                           
  4056                           ; BSR set to: 1
  4057  00033C  2B39               	incf	strtof@i& (0+255),f,b
  4058  00033E                     l14438:
  4059                           
  4060                           ; BSR set to: 1
  4061  00033E  5139               	movf	strtof@i& (0+255),w,b
  4062  000340  2525               	addwf	strtof@s& (0+255),w,b
  4063  000342  6ED9               	movwf	fsr2l,c
  4064  000344  0E00               	movlw	0
  4065  000346  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4066  000348  6EDA               	movwf	fsr2h,c
  4067  00034A  0E30               	movlw	48
  4068  00034C  18DE               	xorwf	postinc2,w,c
  4069  00034E  B4D8               	btfsc	status,2,c
  4070  000350  D7F5               	goto	l14436
  4071                           
  4072                           ; BSR set to: 1
  4073  000352  5139               	movf	strtof@i& (0+255),w,b
  4074  000354  B4D8               	btfsc	status,2,c
  4075  000356  D2A3               	goto	l2636
  4076                           
  4077                           ; BSR set to: 1
  4078  000358  5139               	movf	strtof@i& (0+255),w,b
  4079  00035A  2525               	addwf	strtof@s& (0+255),w,b
  4080  00035C  6ED9               	movwf	fsr2l,c
  4081  00035E  0E00               	movlw	0
  4082  000360  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4083  000362  6EDA               	movwf	fsr2h,c
  4084  000364  0E78               	movlw	120
  4085  000366  18DE               	xorwf	postinc2,w,c
  4086  000368  B4D8               	btfsc	status,2,c
  4087  00036A  D00A               	goto	u17550
  4088                           
  4089                           ; BSR set to: 1
  4090  00036C  5139               	movf	strtof@i& (0+255),w,b
  4091  00036E  2525               	addwf	strtof@s& (0+255),w,b
  4092  000370  6ED9               	movwf	fsr2l,c
  4093  000372  0E00               	movlw	0
  4094  000374  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4095  000376  6EDA               	movwf	fsr2h,c
  4096  000378  0E58               	movlw	88
  4097  00037A  18DE               	xorwf	postinc2,w,c
  4098  00037C  A4D8               	btfss	status,2,c
  4099  00037E  D28F               	goto	l2636
  4100  000380                     u17550:
  4101                           
  4102                           ; BSR set to: 1
  4103  000380  5139               	movf	strtof@i& (0+255),w,b
  4104  000382  6F29               	movwf	??_strtof& (0+255),b
  4105  000384  6B2A               	clrf	(??_strtof+1)& (0+255),b
  4106  000386  0E01               	movlw	1
  4107  000388  2729               	addwf	??_strtof& (0+255),f,b
  4108  00038A  0E00               	movlw	0
  4109  00038C  232A               	addwfc	(??_strtof+1)& (0+255),f,b
  4110  00038E  5129               	movf	??_strtof& (0+255),w,b
  4111  000390  2725               	addwf	strtof@s& (0+255),f,b
  4112  000392  512A               	movf	(??_strtof+1)& (0+255),w,b
  4113  000394  2326               	addwfc	(strtof@s+1)& (0+255),f,b
  4114                           
  4115                           ; BSR set to: 1
  4116  000396  0E00               	movlw	0
  4117  000398  6F39               	movwf	strtof@i& (0+255),b
  4118  00039A  D001               	goto	l14452
  4119  00039C                     l14450:
  4120                           
  4121                           ; BSR set to: 1
  4122  00039C  2B39               	incf	strtof@i& (0+255),f,b
  4123  00039E                     l14452:
  4124                           
  4125                           ; BSR set to: 1
  4126  00039E  5139               	movf	strtof@i& (0+255),w,b
  4127  0003A0  2525               	addwf	strtof@s& (0+255),w,b
  4128  0003A2  6ED9               	movwf	fsr2l,c
  4129  0003A4  0E00               	movlw	0
  4130  0003A6  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4131  0003A8  6EDA               	movwf	fsr2h,c
  4132  0003AA  0E30               	movlw	48
  4133  0003AC  18DE               	xorwf	postinc2,w,c
  4134  0003AE  B4D8               	btfsc	status,2,c
  4135  0003B0  D7F5               	goto	l14450
  4136                           
  4137                           ; BSR set to: 1
  4138  0003B2  0E00               	movlw	0
  4139  0003B4  6F39               	movwf	strtof@i& (0+255),b
  4140  0003B6                     l14456:
  4141                           
  4142                           ; BSR set to: 1
  4143  0003B6  5139               	movf	strtof@i& (0+255),w,b
  4144  0003B8  2525               	addwf	strtof@s& (0+255),w,b
  4145  0003BA  6ED9               	movwf	fsr2l,c
  4146  0003BC  0E00               	movlw	0
  4147  0003BE  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4148  0003C0  6EDA               	movwf	fsr2h,c
  4149  0003C2  0E70               	movlw	112
  4150  0003C4  18DE               	xorwf	postinc2,w,c
  4151  0003C6  B4D8               	btfsc	status,2,c
  4152  0003C8  D12C               	goto	l14526
  4153                           
  4154                           ; BSR set to: 1
  4155  0003CA  5139               	movf	strtof@i& (0+255),w,b
  4156  0003CC  2525               	addwf	strtof@s& (0+255),w,b
  4157  0003CE  6ED9               	movwf	fsr2l,c
  4158  0003D0  0E00               	movlw	0
  4159  0003D2  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4160  0003D4  6EDA               	movwf	fsr2h,c
  4161  0003D6  0E50               	movlw	80
  4162  0003D8  18DE               	xorwf	postinc2,w,c
  4163  0003DA  B4D8               	btfsc	status,2,c
  4164  0003DC  D122               	goto	l14526
  4165                           
  4166                           ; BSR set to: 1
  4167  0003DE  5139               	movf	strtof@i& (0+255),w,b
  4168  0003E0  2525               	addwf	strtof@s& (0+255),w,b
  4169  0003E2  6ED9               	movwf	fsr2l,c
  4170  0003E4  0E00               	movlw	0
  4171  0003E6  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4172  0003E8  6EDA               	movwf	fsr2h,c
  4173  0003EA  0E2E               	movlw	46
  4174  0003EC  18DE               	xorwf	postinc2,w,c
  4175  0003EE  A4D8               	btfss	status,2,c
  4176  0003F0  D002               	goto	l14468
  4177                           
  4178                           ; BSR set to: 1
  4179  0003F2  8930               	bsf	strtof@flags& (0+255),4,b
  4180  0003F4  D115               	goto	L1
  4181  0003F6                     l14468:
  4182                           
  4183                           ; BSR set to: 1
  4184  0003F6  5139               	movf	strtof@i& (0+255),w,b
  4185  0003F8  2525               	addwf	strtof@s& (0+255),w,b
  4186  0003FA  6ED9               	movwf	fsr2l,c
  4187  0003FC  0E00               	movlw	0
  4188  0003FE  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4189  000400  6EDA               	movwf	fsr2h,c
  4190  000402  50DF               	movf	indf2,w,c
  4191  000404  6F29               	movwf	??_strtof& (0+255),b
  4192  000406  5129               	movf	??_strtof& (0+255),w,b
  4193  000408  0100               	movlb	0	; () banked
  4194  00040A  6F92               	movwf	isxdigit@c& (0+255),b
  4195  00040C  6B93               	clrf	(isxdigit@c+1)& (0+255),b
  4196  00040E  EC92  F038         	call	_isxdigit	;wreg free
  4197  000412  5192               	movf	?_isxdigit& (0+255),w,b
  4198  000414  1193               	iorwf	(?_isxdigit+1)& (0+255),w,b
  4199  000416  B4D8               	btfsc	status,2,c
  4200  000418  D061               	goto	l14488
  4201                           
  4202                           ; BSR set to: 0
  4203  00041A  0E00               	movlw	0
  4204  00041C  0101               	movlb	1	; () banked
  4205  00041E  6F2F               	movwf	strtof@digit& (0+255),b
  4206                           
  4207                           ; BSR set to: 1
  4208  000420  0ED0               	movlw	208
  4209  000422  6F29               	movwf	??_strtof& (0+255),b
  4210  000424  0EFF               	movlw	255
  4211  000426  6F2A               	movwf	(??_strtof+1)& (0+255),b
  4212  000428  5139               	movf	strtof@i& (0+255),w,b
  4213  00042A  2525               	addwf	strtof@s& (0+255),w,b
  4214  00042C  6ED9               	movwf	fsr2l,c
  4215  00042E  0E00               	movlw	0
  4216  000430  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4217  000432  6EDA               	movwf	fsr2h,c
  4218  000434  50DF               	movf	indf2,w,c
  4219  000436  6F2B               	movwf	(??_strtof+2)& (0+255),b
  4220  000438  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4221  00043A  5129               	movf	??_strtof& (0+255),w,b
  4222  00043C  272B               	addwf	(??_strtof+2)& (0+255),f,b
  4223  00043E  512A               	movf	(??_strtof+1)& (0+255),w,b
  4224  000440  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  4225  000442  512C               	movf	(??_strtof+3)& (0+255),w,b
  4226  000444  E10D               	bnz	l14478
  4227  000446  0E0A               	movlw	10
  4228  000448  5D2B               	subwf	(??_strtof+2)& (0+255),w,b
  4229  00044A  B0D8               	btfsc	status,0,c
  4230  00044C  D009               	goto	l14478
  4231                           
  4232                           ; BSR set to: 1
  4233  00044E  5139               	movf	strtof@i& (0+255),w,b
  4234  000450  2525               	addwf	strtof@s& (0+255),w,b
  4235  000452  6ED9               	movwf	fsr2l,c
  4236  000454  0E00               	movlw	0
  4237  000456  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4238  000458  6EDA               	movwf	fsr2h,c
  4239  00045A  50DF               	movf	indf2,w,c
  4240  00045C  0FD0               	addlw	208
  4241  00045E  D011               	goto	L2
  4242  000460                     l14478:
  4243                           
  4244                           ; BSR set to: 1
  4245  000460  5139               	movf	strtof@i& (0+255),w,b
  4246  000462  2525               	addwf	strtof@s& (0+255),w,b
  4247  000464  6ED9               	movwf	fsr2l,c
  4248  000466  0E00               	movlw	0
  4249  000468  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4250  00046A  6EDA               	movwf	fsr2h,c
  4251  00046C  50DF               	movf	indf2,w,c
  4252  00046E  6F29               	movwf	??_strtof& (0+255),b
  4253  000470  5129               	movf	??_strtof& (0+255),w,b
  4254  000472  0100               	movlb	0	; () banked
  4255  000474  6F92               	movwf	toupper@c& (0+255),b
  4256  000476  6B93               	clrf	(toupper@c+1)& (0+255),b
  4257  000478  ECCD  F03B         	call	_toupper	;wreg free
  4258  00047C  5192               	movf	?_toupper& (0+255),w,b
  4259  00047E  0FC9               	addlw	201
  4260  000480  0101               	movlb	1	; () banked
  4261  000482                     L2:
  4262  000482  6F2F               	movwf	strtof@digit& (0+255),b
  4263                           
  4264                           ; BSR set to: 1
  4265  000484  BF34               	btfsc	(strtof@eexp+1)& (0+255),7,b
  4266  000486  D006               	goto	u17620
  4267  000488  5134               	movf	(strtof@eexp+1)& (0+255),w,b
  4268  00048A  E121               	bnz	l14484
  4269  00048C  0E08               	movlw	8
  4270  00048E  5D33               	subwf	strtof@eexp& (0+255),w,b
  4271  000490  B0D8               	btfsc	status,0,c
  4272  000492  D01D               	goto	l14484
  4273  000494                     u17620:
  4274                           
  4275                           ; BSR set to: 1
  4276  000494  5133               	movf	strtof@eexp& (0+255),w,b
  4277  000496  0807               	sublw	7
  4278  000498  6F29               	movwf	??_strtof& (0+255),b
  4279  00049A  90D8               	bcf	status,0,c
  4280  00049C  3729               	rlcf	??_strtof& (0+255),f,b
  4281  00049E  90D8               	bcf	status,0,c
  4282  0004A0  3729               	rlcf	??_strtof& (0+255),f,b
  4283  0004A2  C12F  F12A         	movff	strtof@digit,??_strtof+1
  4284  0004A6  6B2B               	clrf	(??_strtof+2)& (0+255),b
  4285  0004A8  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4286  0004AA  6B2D               	clrf	(??_strtof+4)& (0+255),b
  4287  0004AC  2B29               	incf	??_strtof& (0+255),f,b
  4288  0004AE  D005               	goto	u17630
  4289  0004B0                     u17635:
  4290  0004B0  90D8               	bcf	status,0,c
  4291  0004B2  372A               	rlcf	(??_strtof+1)& (0+255),f,b
  4292  0004B4  372B               	rlcf	(??_strtof+2)& (0+255),f,b
  4293  0004B6  372C               	rlcf	(??_strtof+3)& (0+255),f,b
  4294  0004B8  372D               	rlcf	(??_strtof+4)& (0+255),f,b
  4295  0004BA                     u17630:
  4296  0004BA  2F29               	decfsz	??_strtof& (0+255),f,b
  4297  0004BC  D7F9               	goto	u17635
  4298  0004BE  512A               	movf	(??_strtof+1)& (0+255),w,b
  4299  0004C0  1335               	iorwf	strtof@_u& (0+255),f,b
  4300  0004C2  512B               	movf	(??_strtof+2)& (0+255),w,b
  4301  0004C4  1336               	iorwf	(strtof@_u+1)& (0+255),f,b
  4302  0004C6  512C               	movf	(??_strtof+3)& (0+255),w,b
  4303  0004C8  1337               	iorwf	(strtof@_u+2)& (0+255),f,b
  4304  0004CA  512D               	movf	(??_strtof+4)& (0+255),w,b
  4305  0004CC  1338               	iorwf	(strtof@_u+3)& (0+255),f,b
  4306  0004CE                     l14484:
  4307                           
  4308                           ; BSR set to: 1
  4309  0004CE  4B33               	infsnz	strtof@eexp& (0+255),f,b
  4310  0004D0  2B34               	incf	(strtof@eexp+1)& (0+255),f,b
  4311                           
  4312                           ; BSR set to: 1
  4313  0004D2  0E04               	movlw	4
  4314  0004D4  2731               	addwf	strtof@expon& (0+255),f,b
  4315  0004D6  0E00               	movlw	0
  4316  0004D8  2332               	addwfc	(strtof@expon+1)& (0+255),f,b
  4317  0004DA  D00A               	goto	l14492
  4318  0004DC                     l14488:
  4319                           
  4320                           ; BSR set to: 0
  4321  0004DC  0E00               	movlw	0
  4322  0004DE  0101               	movlb	1	; () banked
  4323  0004E0  6F25               	movwf	?_strtof& (0+255),b
  4324  0004E2  0E00               	movlw	0
  4325  0004E4  6F26               	movwf	(?_strtof+1)& (0+255),b
  4326  0004E6  0E00               	movlw	0
  4327  0004E8  6F27               	movwf	(?_strtof+2)& (0+255),b
  4328  0004EA  0E00               	movlw	0
  4329  0004EC  6F28               	movwf	(?_strtof+3)& (0+255),b
  4330  0004EE  0012               	return	
  4331  0004F0                     l14492:
  4332                           
  4333                           ; BSR set to: 1
  4334  0004F0  2B39               	incf	strtof@i& (0+255),f,b
  4335  0004F2  D761               	goto	l14456
  4336  0004F4                     l14494:
  4337                           
  4338                           ; BSR set to: 1
  4339  0004F4  5139               	movf	strtof@i& (0+255),w,b
  4340  0004F6  2525               	addwf	strtof@s& (0+255),w,b
  4341  0004F8  6ED9               	movwf	fsr2l,c
  4342  0004FA  0E00               	movlw	0
  4343  0004FC  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4344  0004FE  6EDA               	movwf	fsr2h,c
  4345  000500  0E70               	movlw	112
  4346  000502  18DE               	xorwf	postinc2,w,c
  4347  000504  B4D8               	btfsc	status,2,c
  4348  000506  D08F               	goto	u17720
  4349                           
  4350                           ; BSR set to: 1
  4351  000508  5139               	movf	strtof@i& (0+255),w,b
  4352  00050A  2525               	addwf	strtof@s& (0+255),w,b
  4353  00050C  6ED9               	movwf	fsr2l,c
  4354  00050E  0E00               	movlw	0
  4355  000510  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4356  000512  6EDA               	movwf	fsr2h,c
  4357  000514  0E50               	movlw	80
  4358  000516  18DE               	xorwf	postinc2,w,c
  4359  000518  B4D8               	btfsc	status,2,c
  4360  00051A  D085               	goto	u17720
  4361                           
  4362                           ; BSR set to: 1
  4363  00051C  5139               	movf	strtof@i& (0+255),w,b
  4364  00051E  2525               	addwf	strtof@s& (0+255),w,b
  4365  000520  6ED9               	movwf	fsr2l,c
  4366  000522  0E00               	movlw	0
  4367  000524  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4368  000526  6EDA               	movwf	fsr2h,c
  4369  000528  0E30               	movlw	48
  4370  00052A  18DE               	xorwf	postinc2,w,c
  4371  00052C  A4D8               	btfss	status,2,c
  4372  00052E  D009               	goto	l14506
  4373                           
  4374                           ; BSR set to: 1
  4375  000530  5133               	movf	strtof@eexp& (0+255),w,b
  4376  000532  1134               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4377  000534  A4D8               	btfss	status,2,c
  4378  000536  D005               	goto	l14506
  4379                           
  4380                           ; BSR set to: 1
  4381  000538  0EFC               	movlw	252
  4382  00053A  2731               	addwf	strtof@expon& (0+255),f,b
  4383  00053C  0EFF               	movlw	255
  4384  00053E  2332               	addwfc	(strtof@expon+1)& (0+255),f,b
  4385  000540  D06E               	goto	l14524
  4386  000542                     l14506:
  4387                           
  4388                           ; BSR set to: 1
  4389  000542  5139               	movf	strtof@i& (0+255),w,b
  4390  000544  2525               	addwf	strtof@s& (0+255),w,b
  4391  000546  6ED9               	movwf	fsr2l,c
  4392  000548  0E00               	movlw	0
  4393  00054A  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4394  00054C  6EDA               	movwf	fsr2h,c
  4395  00054E  50DF               	movf	indf2,w,c
  4396  000550  6F29               	movwf	??_strtof& (0+255),b
  4397  000552  5129               	movf	??_strtof& (0+255),w,b
  4398  000554  0100               	movlb	0	; () banked
  4399  000556  6F92               	movwf	isxdigit@c& (0+255),b
  4400  000558  6B93               	clrf	(isxdigit@c+1)& (0+255),b
  4401  00055A  EC92  F038         	call	_isxdigit	;wreg free
  4402  00055E  5192               	movf	?_isxdigit& (0+255),w,b
  4403  000560  1193               	iorwf	(?_isxdigit+1)& (0+255),w,b
  4404  000562  B4D8               	btfsc	status,2,c
  4405  000564  D05C               	goto	l14524
  4406                           
  4407                           ; BSR set to: 0
  4408  000566  0E00               	movlw	0
  4409  000568  0101               	movlb	1	; () banked
  4410  00056A  6F2F               	movwf	strtof@digit& (0+255),b
  4411                           
  4412                           ; BSR set to: 1
  4413  00056C  0ED0               	movlw	208
  4414  00056E  6F29               	movwf	??_strtof& (0+255),b
  4415  000570  0EFF               	movlw	255
  4416  000572  6F2A               	movwf	(??_strtof+1)& (0+255),b
  4417  000574  5139               	movf	strtof@i& (0+255),w,b
  4418  000576  2525               	addwf	strtof@s& (0+255),w,b
  4419  000578  6ED9               	movwf	fsr2l,c
  4420  00057A  0E00               	movlw	0
  4421  00057C  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4422  00057E  6EDA               	movwf	fsr2h,c
  4423  000580  50DF               	movf	indf2,w,c
  4424  000582  6F2B               	movwf	(??_strtof+2)& (0+255),b
  4425  000584  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4426  000586  5129               	movf	??_strtof& (0+255),w,b
  4427  000588  272B               	addwf	(??_strtof+2)& (0+255),f,b
  4428  00058A  512A               	movf	(??_strtof+1)& (0+255),w,b
  4429  00058C  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  4430  00058E  512C               	movf	(??_strtof+3)& (0+255),w,b
  4431  000590  E10D               	bnz	l14516
  4432  000592  0E0A               	movlw	10
  4433  000594  5D2B               	subwf	(??_strtof+2)& (0+255),w,b
  4434  000596  B0D8               	btfsc	status,0,c
  4435  000598  D009               	goto	l14516
  4436                           
  4437                           ; BSR set to: 1
  4438  00059A  5139               	movf	strtof@i& (0+255),w,b
  4439  00059C  2525               	addwf	strtof@s& (0+255),w,b
  4440  00059E  6ED9               	movwf	fsr2l,c
  4441  0005A0  0E00               	movlw	0
  4442  0005A2  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4443  0005A4  6EDA               	movwf	fsr2h,c
  4444  0005A6  50DF               	movf	indf2,w,c
  4445  0005A8  0FD0               	addlw	208
  4446  0005AA  D011               	goto	L3
  4447  0005AC                     l14516:
  4448                           
  4449                           ; BSR set to: 1
  4450  0005AC  5139               	movf	strtof@i& (0+255),w,b
  4451  0005AE  2525               	addwf	strtof@s& (0+255),w,b
  4452  0005B0  6ED9               	movwf	fsr2l,c
  4453  0005B2  0E00               	movlw	0
  4454  0005B4  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4455  0005B6  6EDA               	movwf	fsr2h,c
  4456  0005B8  50DF               	movf	indf2,w,c
  4457  0005BA  6F29               	movwf	??_strtof& (0+255),b
  4458  0005BC  5129               	movf	??_strtof& (0+255),w,b
  4459  0005BE  0100               	movlb	0	; () banked
  4460  0005C0  6F92               	movwf	toupper@c& (0+255),b
  4461  0005C2  6B93               	clrf	(toupper@c+1)& (0+255),b
  4462  0005C4  ECCD  F03B         	call	_toupper	;wreg free
  4463  0005C8  5192               	movf	?_toupper& (0+255),w,b
  4464  0005CA  0FC9               	addlw	201
  4465  0005CC  0101               	movlb	1	; () banked
  4466  0005CE                     L3:
  4467  0005CE  6F2F               	movwf	strtof@digit& (0+255),b
  4468                           
  4469                           ; BSR set to: 1
  4470  0005D0  BF34               	btfsc	(strtof@eexp+1)& (0+255),7,b
  4471  0005D2  D006               	goto	u17700
  4472  0005D4  5134               	movf	(strtof@eexp+1)& (0+255),w,b
  4473  0005D6  E121               	bnz	l14522
  4474  0005D8  0E08               	movlw	8
  4475  0005DA  5D33               	subwf	strtof@eexp& (0+255),w,b
  4476  0005DC  B0D8               	btfsc	status,0,c
  4477  0005DE  D01D               	goto	l14522
  4478  0005E0                     u17700:
  4479                           
  4480                           ; BSR set to: 1
  4481  0005E0  5133               	movf	strtof@eexp& (0+255),w,b
  4482  0005E2  0807               	sublw	7
  4483  0005E4  6F29               	movwf	??_strtof& (0+255),b
  4484  0005E6  90D8               	bcf	status,0,c
  4485  0005E8  3729               	rlcf	??_strtof& (0+255),f,b
  4486  0005EA  90D8               	bcf	status,0,c
  4487  0005EC  3729               	rlcf	??_strtof& (0+255),f,b
  4488  0005EE  C12F  F12A         	movff	strtof@digit,??_strtof+1
  4489  0005F2  6B2B               	clrf	(??_strtof+2)& (0+255),b
  4490  0005F4  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4491  0005F6  6B2D               	clrf	(??_strtof+4)& (0+255),b
  4492  0005F8  2B29               	incf	??_strtof& (0+255),f,b
  4493  0005FA  D005               	goto	u17710
  4494  0005FC                     u17715:
  4495  0005FC  90D8               	bcf	status,0,c
  4496  0005FE  372A               	rlcf	(??_strtof+1)& (0+255),f,b
  4497  000600  372B               	rlcf	(??_strtof+2)& (0+255),f,b
  4498  000602  372C               	rlcf	(??_strtof+3)& (0+255),f,b
  4499  000604  372D               	rlcf	(??_strtof+4)& (0+255),f,b
  4500  000606                     u17710:
  4501  000606  2F29               	decfsz	??_strtof& (0+255),f,b
  4502  000608  D7F9               	goto	u17715
  4503  00060A  512A               	movf	(??_strtof+1)& (0+255),w,b
  4504  00060C  1335               	iorwf	strtof@_u& (0+255),f,b
  4505  00060E  512B               	movf	(??_strtof+2)& (0+255),w,b
  4506  000610  1336               	iorwf	(strtof@_u+1)& (0+255),f,b
  4507  000612  512C               	movf	(??_strtof+3)& (0+255),w,b
  4508  000614  1337               	iorwf	(strtof@_u+2)& (0+255),f,b
  4509  000616  512D               	movf	(??_strtof+4)& (0+255),w,b
  4510  000618  1338               	iorwf	(strtof@_u+3)& (0+255),f,b
  4511  00061A                     l14522:
  4512                           
  4513                           ; BSR set to: 1
  4514  00061A  4B33               	infsnz	strtof@eexp& (0+255),f,b
  4515  00061C  2B34               	incf	(strtof@eexp+1)& (0+255),f,b
  4516  00061E                     l14524:
  4517  00061E  0101               	movlb	1	; () banked
  4518  000620                     L1:
  4519  000620  2B39               	incf	strtof@i& (0+255),f,b
  4520  000622                     l14526:
  4521                           
  4522                           ; BSR set to: 1
  4523  000622  B930               	btfsc	strtof@flags& (0+255),4,b
  4524  000624  D767               	goto	l14494
  4525  000626                     u17720:
  4526                           
  4527                           ; BSR set to: 1
  4528  000626  5139               	movf	strtof@i& (0+255),w,b
  4529  000628  2525               	addwf	strtof@s& (0+255),w,b
  4530  00062A  6ED9               	movwf	fsr2l,c
  4531  00062C  0E00               	movlw	0
  4532  00062E  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4533  000630  6EDA               	movwf	fsr2h,c
  4534  000632  0E70               	movlw	112
  4535  000634  18DE               	xorwf	postinc2,w,c
  4536  000636  B4D8               	btfsc	status,2,c
  4537  000638  D013               	goto	l14536
  4538                           
  4539                           ; BSR set to: 1
  4540  00063A  5139               	movf	strtof@i& (0+255),w,b
  4541  00063C  2525               	addwf	strtof@s& (0+255),w,b
  4542  00063E  6ED9               	movwf	fsr2l,c
  4543  000640  0E00               	movlw	0
  4544  000642  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4545  000644  6EDA               	movwf	fsr2h,c
  4546  000646  0E50               	movlw	80
  4547  000648  18DE               	xorwf	postinc2,w,c
  4548  00064A  B4D8               	btfsc	status,2,c
  4549  00064C  D009               	goto	l14536
  4550                           
  4551                           ; BSR set to: 1
  4552  00064E  0E00               	movlw	0
  4553  000650  6F25               	movwf	?_strtof& (0+255),b
  4554  000652  0E00               	movlw	0
  4555  000654  6F26               	movwf	(?_strtof+1)& (0+255),b
  4556  000656  0E00               	movlw	0
  4557  000658  6F27               	movwf	(?_strtof+2)& (0+255),b
  4558  00065A  0E00               	movlw	0
  4559  00065C  6F28               	movwf	(?_strtof+3)& (0+255),b
  4560  00065E  0012               	return	
  4561  000660                     l14536:
  4562                           
  4563                           ; BSR set to: 1
  4564  000660  2B39               	incf	strtof@i& (0+255),f,b
  4565                           
  4566                           ; BSR set to: 1
  4567  000662  5139               	movf	strtof@i& (0+255),w,b
  4568  000664  2525               	addwf	strtof@s& (0+255),w,b
  4569  000666  6ED9               	movwf	fsr2l,c
  4570  000668  0E00               	movlw	0
  4571  00066A  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4572  00066C  6EDA               	movwf	fsr2h,c
  4573  00066E  0E2B               	movlw	43
  4574  000670  18DE               	xorwf	postinc2,w,c
  4575  000672  B4D8               	btfsc	status,2,c
  4576  000674  D00B               	goto	L4
  4577                           
  4578                           ; BSR set to: 1
  4579                           
  4580                           ; BSR set to: 1
  4581  000676  5139               	movf	strtof@i& (0+255),w,b
  4582  000678  2525               	addwf	strtof@s& (0+255),w,b
  4583  00067A  6ED9               	movwf	fsr2l,c
  4584  00067C  0E00               	movlw	0
  4585  00067E  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4586  000680  6EDA               	movwf	fsr2h,c
  4587  000682  0E2D               	movlw	45
  4588  000684  18DE               	xorwf	postinc2,w,c
  4589  000686  A4D8               	btfss	status,2,c
  4590  000688  D002               	goto	l14546
  4591                           
  4592                           ; BSR set to: 1
  4593  00068A  8730               	bsf	strtof@flags& (0+255),3,b
  4594  00068C                     L4:
  4595  00068C  2B39               	incf	strtof@i& (0+255),f,b
  4596  00068E                     l14546:
  4597                           
  4598                           ; BSR set to: 1
  4599  00068E  5139               	movf	strtof@i& (0+255),w,b
  4600  000690  2725               	addwf	strtof@s& (0+255),f,b
  4601  000692  0E00               	movlw	0
  4602  000694  2326               	addwfc	(strtof@s+1)& (0+255),f,b
  4603                           
  4604                           ; BSR set to: 1
  4605  000696  0E00               	movlw	0
  4606  000698  6F39               	movwf	strtof@i& (0+255),b
  4607  00069A  D001               	goto	l14552
  4608  00069C                     l14550:
  4609                           
  4610                           ; BSR set to: 1
  4611  00069C  2B39               	incf	strtof@i& (0+255),f,b
  4612  00069E                     l14552:
  4613                           
  4614                           ; BSR set to: 1
  4615  00069E  5139               	movf	strtof@i& (0+255),w,b
  4616  0006A0  2525               	addwf	strtof@s& (0+255),w,b
  4617  0006A2  6ED9               	movwf	fsr2l,c
  4618  0006A4  0E00               	movlw	0
  4619  0006A6  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4620  0006A8  6EDA               	movwf	fsr2h,c
  4621  0006AA  0E30               	movlw	48
  4622  0006AC  18DE               	xorwf	postinc2,w,c
  4623  0006AE  B4D8               	btfsc	status,2,c
  4624  0006B0  D7F5               	goto	l14550
  4625                           
  4626                           ; BSR set to: 1
  4627  0006B2  0E00               	movlw	0
  4628  0006B4  6F34               	movwf	(strtof@eexp+1)& (0+255),b
  4629  0006B6  0E00               	movlw	0
  4630  0006B8  6F33               	movwf	strtof@eexp& (0+255),b
  4631  0006BA  D029               	goto	l14566
  4632  0006BC                     l14556:
  4633                           
  4634                           ; BSR set to: 1
  4635  0006BC  5139               	movf	strtof@i& (0+255),w,b
  4636  0006BE  B4D8               	btfsc	status,2,c
  4637  0006C0  D00F               	goto	l14560
  4638                           
  4639                           ; BSR set to: 1
  4640  0006C2  C133  F08C         	movff	strtof@eexp,___wmul@multiplier
  4641  0006C6  C134  F08D         	movff	strtof@eexp+1,___wmul@multiplier+1
  4642  0006CA  0E00               	movlw	0
  4643  0006CC  0100               	movlb	0	; () banked
  4644  0006CE  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4645  0006D0  0E0A               	movlw	10
  4646  0006D2  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  4647  0006D4  ECA1  F03D         	call	___wmul	;wreg free
  4648  0006D8  C08C  F133         	movff	?___wmul,strtof@eexp
  4649  0006DC  C08D  F134         	movff	?___wmul+1,strtof@eexp+1
  4650  0006E0                     l14560:
  4651  0006E0  0ED0               	movlw	208
  4652  0006E2  0101               	movlb	1	; () banked
  4653  0006E4  6F29               	movwf	??_strtof& (0+255),b
  4654  0006E6  0EFF               	movlw	255
  4655  0006E8  6F2A               	movwf	(??_strtof+1)& (0+255),b
  4656  0006EA  5139               	movf	strtof@i& (0+255),w,b
  4657  0006EC  2525               	addwf	strtof@s& (0+255),w,b
  4658  0006EE  6ED9               	movwf	fsr2l,c
  4659  0006F0  0E00               	movlw	0
  4660  0006F2  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4661  0006F4  6EDA               	movwf	fsr2h,c
  4662  0006F6  50DF               	movf	indf2,w,c
  4663  0006F8  6F2B               	movwf	(??_strtof+2)& (0+255),b
  4664  0006FA  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4665  0006FC  5129               	movf	??_strtof& (0+255),w,b
  4666  0006FE  272B               	addwf	(??_strtof+2)& (0+255),f,b
  4667  000700  512A               	movf	(??_strtof+1)& (0+255),w,b
  4668  000702  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  4669  000704  512B               	movf	(??_strtof+2)& (0+255),w,b
  4670  000706  2733               	addwf	strtof@eexp& (0+255),f,b
  4671  000708  512C               	movf	(??_strtof+3)& (0+255),w,b
  4672  00070A  2334               	addwfc	(strtof@eexp+1)& (0+255),f,b
  4673                           
  4674                           ; BSR set to: 1
  4675  00070C  2B39               	incf	strtof@i& (0+255),f,b
  4676  00070E                     l14566:
  4677                           
  4678                           ; BSR set to: 1
  4679  00070E  0ED0               	movlw	208
  4680  000710  6F29               	movwf	??_strtof& (0+255),b
  4681  000712  0EFF               	movlw	255
  4682  000714  6F2A               	movwf	(??_strtof+1)& (0+255),b
  4683  000716  5139               	movf	strtof@i& (0+255),w,b
  4684  000718  2525               	addwf	strtof@s& (0+255),w,b
  4685  00071A  6ED9               	movwf	fsr2l,c
  4686  00071C  0E00               	movlw	0
  4687  00071E  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4688  000720  6EDA               	movwf	fsr2h,c
  4689  000722  50DF               	movf	indf2,w,c
  4690  000724  6F2B               	movwf	(??_strtof+2)& (0+255),b
  4691  000726  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4692  000728  5129               	movf	??_strtof& (0+255),w,b
  4693  00072A  272B               	addwf	(??_strtof+2)& (0+255),f,b
  4694  00072C  512A               	movf	(??_strtof+1)& (0+255),w,b
  4695  00072E  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  4696  000730  512C               	movf	(??_strtof+3)& (0+255),w,b
  4697  000732  E104               	bnz	u17790
  4698  000734  0E0A               	movlw	10
  4699  000736  5D2B               	subwf	(??_strtof+2)& (0+255),w,b
  4700  000738  A0D8               	btfss	status,0,c
  4701  00073A  D7C0               	goto	l14556
  4702  00073C                     u17790:
  4703                           
  4704                           ; BSR set to: 1
  4705  00073C  5139               	movf	strtof@i& (0+255),w,b
  4706  00073E  A4D8               	btfss	status,2,c
  4707  000740  D009               	goto	l2625
  4708                           
  4709                           ; BSR set to: 1
  4710  000742  0E00               	movlw	0
  4711  000744  6F25               	movwf	?_strtof& (0+255),b
  4712  000746  0E00               	movlw	0
  4713  000748  6F26               	movwf	(?_strtof+1)& (0+255),b
  4714  00074A  0E00               	movlw	0
  4715  00074C  6F27               	movwf	(?_strtof+2)& (0+255),b
  4716  00074E  0E00               	movlw	0
  4717  000750  6F28               	movwf	(?_strtof+3)& (0+255),b
  4718  000752  0012               	return	
  4719  000754                     l2625:
  4720                           
  4721                           ; BSR set to: 1
  4722  000754  A730               	btfss	strtof@flags& (0+255),3,b
  4723  000756  D004               	goto	l14576
  4724                           
  4725                           ; BSR set to: 1
  4726  000758  6D33               	negf	strtof@eexp& (0+255),b
  4727  00075A  1F34               	comf	(strtof@eexp+1)& (0+255),f,b
  4728  00075C  B0D8               	btfsc	status,0,c
  4729  00075E  2B34               	incf	(strtof@eexp+1)& (0+255),f,b
  4730  000760                     l14576:
  4731                           
  4732                           ; BSR set to: 1
  4733  000760  5133               	movf	strtof@eexp& (0+255),w,b
  4734  000762  2731               	addwf	strtof@expon& (0+255),f,b
  4735  000764  5134               	movf	(strtof@eexp+1)& (0+255),w,b
  4736  000766  2332               	addwfc	(strtof@expon+1)& (0+255),f,b
  4737                           
  4738                           ; BSR set to: 1
  4739  000768  5127               	movf	strtof@res& (0+255),w,b
  4740  00076A  1128               	iorwf	(strtof@res+1)& (0+255),w,b
  4741  00076C  B4D8               	btfsc	status,2,c
  4742  00076E  D00E               	goto	l14582
  4743                           
  4744                           ; BSR set to: 1
  4745  000770  5139               	movf	strtof@i& (0+255),w,b
  4746  000772  2525               	addwf	strtof@s& (0+255),w,b
  4747  000774  6F29               	movwf	??_strtof& (0+255),b
  4748  000776  0E00               	movlw	0
  4749  000778  2126               	addwfc	(strtof@s+1)& (0+255),w,b
  4750  00077A  6F2A               	movwf	(??_strtof+1)& (0+255),b
  4751  00077C  C127  FFD9         	movff	strtof@res,fsr2l
  4752  000780  C128  FFDA         	movff	strtof@res+1,fsr2h
  4753  000784  C129  FFDE         	movff	??_strtof,postinc2
  4754  000788  C12A  FFDD         	movff	??_strtof+1,postdec2
  4755  00078C                     l14582:
  4756                           
  4757                           ; BSR set to: 1
  4758  00078C  5135               	movf	strtof@_u& (0+255),w,b
  4759  00078E  1136               	iorwf	(strtof@_u+1)& (0+255),w,b
  4760  000790  1137               	iorwf	(strtof@_u+2)& (0+255),w,b
  4761  000792  1138               	iorwf	(strtof@_u+3)& (0+255),w,b
  4762  000794  A4D8               	btfss	status,2,c
  4763  000796  D009               	goto	l14588
  4764                           
  4765                           ; BSR set to: 1
  4766  000798  0E00               	movlw	0
  4767  00079A  6F25               	movwf	?_strtof& (0+255),b
  4768  00079C  0E00               	movlw	0
  4769  00079E  6F26               	movwf	(?_strtof+1)& (0+255),b
  4770  0007A0  0E00               	movlw	0
  4771  0007A2  6F27               	movwf	(?_strtof+2)& (0+255),b
  4772  0007A4  0E00               	movlw	0
  4773  0007A6  6F28               	movwf	(?_strtof+3)& (0+255),b
  4774  0007A8  0012               	return	
  4775  0007AA                     l14588:
  4776                           
  4777                           ; BSR set to: 1
  4778  0007AA  0E80               	movlw	128
  4779  0007AC  6535               	cpfsgt	strtof@_u& (0+255),b
  4780  0007AE  D011               	goto	l14594
  4781                           
  4782                           ; BSR set to: 1
  4783  0007B0  0E00               	movlw	0
  4784  0007B2  2735               	addwf	strtof@_u& (0+255),f,b
  4785  0007B4  0E01               	movlw	1
  4786  0007B6  2336               	addwfc	(strtof@_u+1)& (0+255),f,b
  4787  0007B8  0E00               	movlw	0
  4788  0007BA  2337               	addwfc	(strtof@_u+2)& (0+255),f,b
  4789  0007BC  0E00               	movlw	0
  4790  0007BE  2338               	addwfc	(strtof@_u+3)& (0+255),f,b
  4791  0007C0  D008               	goto	l14594
  4792  0007C2                     l14592:
  4793                           
  4794                           ; BSR set to: 1
  4795  0007C2  90D8               	bcf	status,0,c
  4796  0007C4  3735               	rlcf	strtof@_u& (0+255),f,b
  4797  0007C6  3736               	rlcf	(strtof@_u+1)& (0+255),f,b
  4798  0007C8  3737               	rlcf	(strtof@_u+2)& (0+255),f,b
  4799  0007CA  3738               	rlcf	(strtof@_u+3)& (0+255),f,b
  4800  0007CC  0731               	decf	strtof@expon& (0+255),f,b
  4801  0007CE  A0D8               	btfss	status,0,c
  4802  0007D0  0732               	decf	(strtof@expon+1)& (0+255),f,b
  4803  0007D2                     l14594:
  4804                           
  4805                           ; BSR set to: 1
  4806  0007D2  AF38               	btfss	(strtof@_u+3)& (0+255),7,b
  4807  0007D4  D7F6               	goto	l14592
  4808                           
  4809                           ; BSR set to: 1
  4810  0007D6  AF32               	btfss	(strtof@expon+1)& (0+255),7,b
  4811  0007D8  D012               	goto	l14600
  4812  0007DA  0E83               	movlw	131
  4813  0007DC  5D31               	subwf	strtof@expon& (0+255),w,b
  4814  0007DE  0EFF               	movlw	255
  4815  0007E0  5932               	subwfb	(strtof@expon+1)& (0+255),w,b
  4816  0007E2  B0D8               	btfsc	status,0,c
  4817  0007E4  D00C               	goto	l14600
  4818                           
  4819                           ; BSR set to: 1
  4820  0007E6  0EFF               	movlw	255
  4821  0007E8  6F32               	movwf	(strtof@expon+1)& (0+255),b
  4822  0007EA  0E81               	movlw	129
  4823  0007EC  6F31               	movwf	strtof@expon& (0+255),b
  4824  0007EE  0E00               	movlw	0
  4825  0007F0  6F35               	movwf	strtof@_u& (0+255),b
  4826  0007F2  0E00               	movlw	0
  4827  0007F4  6F36               	movwf	(strtof@_u+1)& (0+255),b
  4828  0007F6  0E00               	movlw	0
  4829  0007F8  6F37               	movwf	(strtof@_u+2)& (0+255),b
  4830  0007FA  0E00               	movlw	0
  4831  0007FC  6F38               	movwf	(strtof@_u+3)& (0+255),b
  4832  0007FE                     l14600:
  4833                           
  4834                           ; BSR set to: 1
  4835  0007FE  0E81               	movlw	129
  4836  000800  1931               	xorwf	strtof@expon& (0+255),w,b
  4837  000802  E103               	bnz	u17870
  4838  000804  2932               	incf	(strtof@expon+1)& (0+255),w,b
  4839  000806  B4D8               	btfsc	status,2,c
  4840  000808  D008               	goto	l14604
  4841  00080A                     u17870:
  4842                           
  4843                           ; BSR set to: 1
  4844  00080A  90D8               	bcf	status,0,c
  4845  00080C  3735               	rlcf	strtof@_u& (0+255),f,b
  4846  00080E  3736               	rlcf	(strtof@_u+1)& (0+255),f,b
  4847  000810  3737               	rlcf	(strtof@_u+2)& (0+255),f,b
  4848  000812  3738               	rlcf	(strtof@_u+3)& (0+255),f,b
  4849  000814  0731               	decf	strtof@expon& (0+255),f,b
  4850  000816  A0D8               	btfss	status,0,c
  4851  000818  0732               	decf	(strtof@expon+1)& (0+255),f,b
  4852  00081A                     l14604:
  4853                           
  4854                           ; BSR set to: 1
  4855  00081A  BF32               	btfsc	(strtof@expon+1)& (0+255),7,b
  4856  00081C  D012               	goto	l14608
  4857  00081E  5132               	movf	(strtof@expon+1)& (0+255),w,b
  4858  000820  E104               	bnz	u17880
  4859  000822  0E80               	movlw	128
  4860  000824  5D31               	subwf	strtof@expon& (0+255),w,b
  4861  000826  A0D8               	btfss	status,0,c
  4862  000828  D00C               	goto	l14608
  4863  00082A                     u17880:
  4864                           
  4865                           ; BSR set to: 1
  4866  00082A  0E00               	movlw	0
  4867  00082C  6F35               	movwf	strtof@_u& (0+255),b
  4868  00082E  0E00               	movlw	0
  4869  000830  6F36               	movwf	(strtof@_u+1)& (0+255),b
  4870  000832  0E00               	movlw	0
  4871  000834  6F37               	movwf	(strtof@_u+2)& (0+255),b
  4872  000836  0E00               	movlw	0
  4873  000838  6F38               	movwf	(strtof@_u+3)& (0+255),b
  4874  00083A  0E00               	movlw	0
  4875  00083C  6F32               	movwf	(strtof@expon+1)& (0+255),b
  4876  00083E  0E80               	movlw	128
  4877  000840  6F31               	movwf	strtof@expon& (0+255),b
  4878  000842                     l14608:
  4879                           
  4880                           ; BSR set to: 1
  4881  000842  0E09               	movlw	9
  4882  000844  6F29               	movwf	??_strtof& (0+255),b
  4883  000846                     u17895:
  4884  000846  90D8               	bcf	status,0,c
  4885  000848  3338               	rrcf	(strtof@_u+3)& (0+255),f,b
  4886  00084A  3337               	rrcf	(strtof@_u+2)& (0+255),f,b
  4887  00084C  3336               	rrcf	(strtof@_u+1)& (0+255),f,b
  4888  00084E  3335               	rrcf	strtof@_u& (0+255),f,b
  4889  000850  2F29               	decfsz	??_strtof& (0+255),f,b
  4890  000852  D7F9               	goto	u17895
  4891                           
  4892                           ; BSR set to: 1
  4893  000854  0EFF               	movlw	255
  4894  000856  1735               	andwf	strtof@_u& (0+255),f,b
  4895  000858  0EFF               	movlw	255
  4896  00085A  1736               	andwf	(strtof@_u+1)& (0+255),f,b
  4897  00085C  0E7F               	movlw	127
  4898  00085E  1737               	andwf	(strtof@_u+2)& (0+255),f,b
  4899  000860  0E00               	movlw	0
  4900  000862  1738               	andwf	(strtof@_u+3)& (0+255),f,b
  4901                           
  4902                           ; BSR set to: 1
  4903  000864  0E7F               	movlw	127
  4904  000866  2531               	addwf	strtof@expon& (0+255),w,b
  4905  000868  6F29               	movwf	??_strtof& (0+255),b
  4906  00086A  0E00               	movlw	0
  4907  00086C  2132               	addwfc	(strtof@expon+1)& (0+255),w,b
  4908  00086E  6F2A               	movwf	(??_strtof+1)& (0+255),b
  4909  000870  0EFF               	movlw	255
  4910  000872  1529               	andwf	??_strtof& (0+255),w,b
  4911  000874  6F2B               	movwf	(??_strtof+2)& (0+255),b
  4912  000876  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4913  000878  6B2D               	clrf	(??_strtof+4)& (0+255),b
  4914  00087A  6B2E               	clrf	(??_strtof+5)& (0+255),b
  4915  00087C  0E17               	movlw	23
  4916  00087E                     u17905:
  4917  00087E  90D8               	bcf	status,0,c
  4918  000880  372B               	rlcf	(??_strtof+2)& (0+255),f,b
  4919  000882  372C               	rlcf	(??_strtof+3)& (0+255),f,b
  4920  000884  372D               	rlcf	(??_strtof+4)& (0+255),f,b
  4921  000886  372E               	rlcf	(??_strtof+5)& (0+255),f,b
  4922  000888  2EE8               	decfsz	wreg,f,c
  4923  00088A  D7F9               	goto	u17905
  4924  00088C  512B               	movf	(??_strtof+2)& (0+255),w,b
  4925  00088E  1335               	iorwf	strtof@_u& (0+255),f,b
  4926  000890  512C               	movf	(??_strtof+3)& (0+255),w,b
  4927  000892  1336               	iorwf	(strtof@_u+1)& (0+255),f,b
  4928  000894  512D               	movf	(??_strtof+4)& (0+255),w,b
  4929  000896  1337               	iorwf	(strtof@_u+2)& (0+255),f,b
  4930  000898  512E               	movf	(??_strtof+5)& (0+255),w,b
  4931  00089A  1338               	iorwf	(strtof@_u+3)& (0+255),f,b
  4932  00089C  D252               	goto	l2551
  4933  00089E                     l2636:
  4934                           
  4935                           ; BSR set to: 1
  4936  00089E  B930               	btfsc	strtof@flags& (0+255),4,b
  4937  0008A0  D00A               	goto	l14620
  4938                           
  4939                           ; BSR set to: 1
  4940  0008A2  C125  FFD9         	movff	strtof@s,fsr2l
  4941  0008A6  C126  FFDA         	movff	strtof@s+1,fsr2h
  4942  0008AA  0E2E               	movlw	46
  4943  0008AC  18DE               	xorwf	postinc2,w,c
  4944  0008AE  A4D8               	btfss	status,2,c
  4945  0008B0  D002               	goto	l14620
  4946                           
  4947                           ; BSR set to: 1
  4948  0008B2  8930               	bsf	strtof@flags& (0+255),4,b
  4949  0008B4  D051               	goto	l2645
  4950  0008B6                     l14620:
  4951                           
  4952                           ; BSR set to: 1
  4953  0008B6  0ED0               	movlw	208
  4954  0008B8  6F29               	movwf	??_strtof& (0+255),b
  4955  0008BA  0EFF               	movlw	255
  4956  0008BC  6F2A               	movwf	(??_strtof+1)& (0+255),b
  4957  0008BE  C125  FFD9         	movff	strtof@s,fsr2l
  4958  0008C2  C126  FFDA         	movff	strtof@s+1,fsr2h
  4959  0008C6  50DF               	movf	indf2,w,c
  4960  0008C8  6F2B               	movwf	(??_strtof+2)& (0+255),b
  4961  0008CA  6B2C               	clrf	(??_strtof+3)& (0+255),b
  4962  0008CC  5129               	movf	??_strtof& (0+255),w,b
  4963  0008CE  272B               	addwf	(??_strtof+2)& (0+255),f,b
  4964  0008D0  512A               	movf	(??_strtof+1)& (0+255),w,b
  4965  0008D2  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  4966  0008D4  512C               	movf	(??_strtof+3)& (0+255),w,b
  4967  0008D6  E143               	bnz	l14638
  4968  0008D8  0E0A               	movlw	10
  4969  0008DA  5D2B               	subwf	(??_strtof+2)& (0+255),w,b
  4970  0008DC  B0D8               	btfsc	status,0,c
  4971  0008DE  D03F               	goto	l14638
  4972                           
  4973                           ; BSR set to: 1
  4974  0008E0  8330               	bsf	strtof@flags& (0+255),1,b
  4975                           
  4976                           ; BSR set to: 1
  4977  0008E2  0E09               	movlw	9
  4978  0008E4  1933               	xorwf	strtof@eexp& (0+255),w,b
  4979  0008E6  1134               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4980  0008E8  B4D8               	btfsc	status,2,c
  4981  0008EA  D032               	goto	l2643
  4982                           
  4983                           ; BSR set to: 1
  4984  0008EC  A930               	btfss	strtof@flags& (0+255),4,b
  4985  0008EE  D003               	goto	l2644
  4986                           
  4987                           ; BSR set to: 1
  4988  0008F0  0731               	decf	strtof@expon& (0+255),f,b
  4989  0008F2  A0D8               	btfss	status,0,c
  4990  0008F4  0732               	decf	(strtof@expon+1)& (0+255),f,b
  4991  0008F6                     l2644:
  4992                           
  4993                           ; BSR set to: 1
  4994  0008F6  4B33               	infsnz	strtof@eexp& (0+255),f,b
  4995  0008F8  2B34               	incf	(strtof@eexp+1)& (0+255),f,b
  4996                           
  4997                           ; BSR set to: 1
  4998  0008FA  C135  F08C         	movff	strtof@_u,___lmul@multiplier
  4999  0008FE  C136  F08D         	movff	strtof@_u+1,___lmul@multiplier+1
  5000  000902  C137  F08E         	movff	strtof@_u+2,___lmul@multiplier+2
  5001  000906  C138  F08F         	movff	strtof@_u+3,___lmul@multiplier+3
  5002  00090A  0E0A               	movlw	10
  5003  00090C  0100               	movlb	0	; () banked
  5004  00090E  6F90               	movwf	___lmul@multiplicand& (0+255),b
  5005  000910  0E00               	movlw	0
  5006  000912  6F91               	movwf	(___lmul@multiplicand+1)& (0+255),b
  5007  000914  0E00               	movlw	0
  5008  000916  6F92               	movwf	(___lmul@multiplicand+2)& (0+255),b
  5009  000918  0E00               	movlw	0
  5010  00091A  6F93               	movwf	(___lmul@multiplicand+3)& (0+255),b
  5011  00091C  EC49  F039         	call	___lmul	;wreg free
  5012  000920  C08C  F135         	movff	?___lmul,strtof@_u
  5013  000924  C08D  F136         	movff	?___lmul+1,strtof@_u+1
  5014  000928  C08E  F137         	movff	?___lmul+2,strtof@_u+2
  5015  00092C  C08F  F138         	movff	?___lmul+3,strtof@_u+3
  5016                           
  5017                           ; BSR set to: 0
  5018  000930  C125  FFD9         	movff	strtof@s,fsr2l
  5019  000934  C126  FFDA         	movff	strtof@s+1,fsr2h
  5020  000938  50DF               	movf	indf2,w,c
  5021  00093A  0101               	movlb	1	; () banked
  5022  00093C  6F29               	movwf	??_strtof& (0+255),b
  5023  00093E  0ED0               	movlw	208
  5024  000940  2729               	addwf	??_strtof& (0+255),f,b
  5025  000942  5129               	movf	??_strtof& (0+255),w,b
  5026  000944  2735               	addwf	strtof@_u& (0+255),f,b
  5027  000946  0E00               	movlw	0
  5028  000948  2336               	addwfc	(strtof@_u+1)& (0+255),f,b
  5029  00094A  2337               	addwfc	(strtof@_u+2)& (0+255),f,b
  5030  00094C  2338               	addwfc	(strtof@_u+3)& (0+255),f,b
  5031  00094E  D004               	goto	l2645
  5032  000950                     l2643:
  5033                           
  5034                           ; BSR set to: 1
  5035  000950  B930               	btfsc	strtof@flags& (0+255),4,b
  5036  000952  D002               	goto	l2645
  5037                           
  5038                           ; BSR set to: 1
  5039  000954  4B31               	infsnz	strtof@expon& (0+255),f,b
  5040  000956  2B32               	incf	(strtof@expon+1)& (0+255),f,b
  5041  000958                     l2645:
  5042                           
  5043                           ; BSR set to: 1
  5044  000958  4B25               	infsnz	strtof@s& (0+255),f,b
  5045  00095A  2B26               	incf	(strtof@s+1)& (0+255),f,b
  5046  00095C  D7A0               	goto	l2636
  5047  00095E                     l14638:
  5048                           
  5049                           ; BSR set to: 1
  5050  00095E  0E00               	movlw	0
  5051  000960  6F34               	movwf	(strtof@eexp+1)& (0+255),b
  5052  000962  0E00               	movlw	0
  5053  000964  6F33               	movwf	strtof@eexp& (0+255),b
  5054                           
  5055                           ; BSR set to: 1
  5056  000966  C125  FFD9         	movff	strtof@s,fsr2l
  5057  00096A  C126  FFDA         	movff	strtof@s+1,fsr2h
  5058  00096E  0E65               	movlw	101
  5059  000970  18DE               	xorwf	postinc2,w,c
  5060  000972  B4D8               	btfsc	status,2,c
  5061  000974  D008               	goto	u17980
  5062                           
  5063                           ; BSR set to: 1
  5064  000976  C125  FFD9         	movff	strtof@s,fsr2l
  5065  00097A  C126  FFDA         	movff	strtof@s+1,fsr2h
  5066  00097E  0E45               	movlw	69
  5067  000980  18DE               	xorwf	postinc2,w,c
  5068  000982  A4D8               	btfss	status,2,c
  5069  000984  D0AE               	goto	l14682
  5070  000986                     u17980:
  5071                           
  5072                           ; BSR set to: 1
  5073  000986  4B25               	infsnz	strtof@s& (0+255),f,b
  5074  000988  2B26               	incf	(strtof@s+1)& (0+255),f,b
  5075  00098A  C125  FFD9         	movff	strtof@s,fsr2l
  5076  00098E  C126  FFDA         	movff	strtof@s+1,fsr2h
  5077  000992  0E2D               	movlw	45
  5078  000994  18DE               	xorwf	postinc2,w,c
  5079  000996  A4D8               	btfss	status,2,c
  5080  000998  D002               	goto	l14648
  5081                           
  5082                           ; BSR set to: 1
  5083  00099A  8730               	bsf	strtof@flags& (0+255),3,b
  5084  00099C  D008               	goto	u18000
  5085  00099E                     l14648:
  5086                           
  5087                           ; BSR set to: 1
  5088  00099E  C125  FFD9         	movff	strtof@s,fsr2l
  5089  0009A2  C126  FFDA         	movff	strtof@s+1,fsr2h
  5090  0009A6  0E2B               	movlw	43
  5091  0009A8  18DE               	xorwf	postinc2,w,c
  5092  0009AA  A4D8               	btfss	status,2,c
  5093  0009AC  D002               	goto	l14654
  5094  0009AE                     u18000:
  5095                           
  5096                           ; BSR set to: 1
  5097  0009AE  4B25               	infsnz	strtof@s& (0+255),f,b
  5098  0009B0  2B26               	incf	(strtof@s+1)& (0+255),f,b
  5099  0009B2                     l14654:
  5100                           
  5101                           ; BSR set to: 1
  5102  0009B2  C125  FFD9         	movff	strtof@s,fsr2l
  5103  0009B6  C126  FFDA         	movff	strtof@s+1,fsr2h
  5104  0009BA  0E30               	movlw	48
  5105  0009BC  18DE               	xorwf	postinc2,w,c
  5106  0009BE  B4D8               	btfsc	status,2,c
  5107  0009C0  D7F6               	goto	u18000
  5108                           
  5109                           ; BSR set to: 1
  5110  0009C2  0ED0               	movlw	208
  5111  0009C4  6F29               	movwf	??_strtof& (0+255),b
  5112  0009C6  0EFF               	movlw	255
  5113  0009C8  6F2A               	movwf	(??_strtof+1)& (0+255),b
  5114  0009CA  C125  FFD9         	movff	strtof@s,fsr2l
  5115  0009CE  C126  FFDA         	movff	strtof@s+1,fsr2h
  5116  0009D2  50DF               	movf	indf2,w,c
  5117  0009D4  6F2B               	movwf	(??_strtof+2)& (0+255),b
  5118  0009D6  6B2C               	clrf	(??_strtof+3)& (0+255),b
  5119  0009D8  5129               	movf	??_strtof& (0+255),w,b
  5120  0009DA  272B               	addwf	(??_strtof+2)& (0+255),f,b
  5121  0009DC  512A               	movf	(??_strtof+1)& (0+255),w,b
  5122  0009DE  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  5123  0009E0  512C               	movf	(??_strtof+3)& (0+255),w,b
  5124  0009E2  E179               	bnz	l14678
  5125  0009E4  0E0A               	movlw	10
  5126  0009E6  5D2B               	subwf	(??_strtof+2)& (0+255),w,b
  5127  0009E8  B0D8               	btfsc	status,0,c
  5128  0009EA  D075               	goto	l14678
  5129                           
  5130                           ; BSR set to: 1
  5131  0009EC  C125  FFD9         	movff	strtof@s,fsr2l
  5132  0009F0  C126  FFDA         	movff	strtof@s+1,fsr2h
  5133  0009F4  50DF               	movf	indf2,w,c
  5134  0009F6  6F29               	movwf	??_strtof& (0+255),b
  5135  0009F8  0ED0               	movlw	208
  5136  0009FA  2729               	addwf	??_strtof& (0+255),f,b
  5137  0009FC  5129               	movf	??_strtof& (0+255),w,b
  5138  0009FE  6F33               	movwf	strtof@eexp& (0+255),b
  5139  000A00  6B34               	clrf	(strtof@eexp+1)& (0+255),b
  5140                           
  5141                           ; BSR set to: 1
  5142  000A02  4B25               	infsnz	strtof@s& (0+255),f,b
  5143  000A04  2B26               	incf	(strtof@s+1)& (0+255),f,b
  5144                           
  5145                           ; BSR set to: 1
  5146  000A06  0ED0               	movlw	208
  5147  000A08  6F29               	movwf	??_strtof& (0+255),b
  5148  000A0A  0EFF               	movlw	255
  5149  000A0C  6F2A               	movwf	(??_strtof+1)& (0+255),b
  5150  000A0E  C125  FFD9         	movff	strtof@s,fsr2l
  5151  000A12  C126  FFDA         	movff	strtof@s+1,fsr2h
  5152  000A16  50DF               	movf	indf2,w,c
  5153  000A18  6F2B               	movwf	(??_strtof+2)& (0+255),b
  5154  000A1A  6B2C               	clrf	(??_strtof+3)& (0+255),b
  5155  000A1C  5129               	movf	??_strtof& (0+255),w,b
  5156  000A1E  272B               	addwf	(??_strtof+2)& (0+255),f,b
  5157  000A20  512A               	movf	(??_strtof+1)& (0+255),w,b
  5158  000A22  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  5159  000A24  512C               	movf	(??_strtof+3)& (0+255),w,b
  5160  000A26  E157               	bnz	l14678
  5161  000A28  0E0A               	movlw	10
  5162  000A2A  5D2B               	subwf	(??_strtof+2)& (0+255),w,b
  5163  000A2C  B0D8               	btfsc	status,0,c
  5164  000A2E  D053               	goto	l14678
  5165                           
  5166                           ; BSR set to: 1
  5167  000A30  C125  FFD9         	movff	strtof@s,fsr2l
  5168  000A34  C126  FFDA         	movff	strtof@s+1,fsr2h
  5169  000A38  50DF               	movf	indf2,w,c
  5170  000A3A  6F29               	movwf	??_strtof& (0+255),b
  5171  000A3C  0ED0               	movlw	208
  5172  000A3E  2729               	addwf	??_strtof& (0+255),f,b
  5173  000A40  C133  F08C         	movff	strtof@eexp,___wmul@multiplier
  5174  000A44  C134  F08D         	movff	strtof@eexp+1,___wmul@multiplier+1
  5175  000A48  0E00               	movlw	0
  5176  000A4A  0100               	movlb	0	; () banked
  5177  000A4C  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5178  000A4E  0E0A               	movlw	10
  5179  000A50  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  5180  000A52  ECA1  F03D         	call	___wmul	;wreg free
  5181  000A56  0101               	movlb	1	; () banked
  5182  000A58  5129               	movf	??_strtof& (0+255),w,b
  5183  000A5A  0100               	movlb	0	; () banked
  5184  000A5C  258C               	addwf	?___wmul& (0+255),w,b
  5185  000A5E  0101               	movlb	1	; () banked
  5186  000A60  6F33               	movwf	strtof@eexp& (0+255),b
  5187  000A62  0E00               	movlw	0
  5188  000A64  0100               	movlb	0	; () banked
  5189  000A66  218D               	addwfc	(?___wmul+1)& (0+255),w,b
  5190  000A68  0101               	movlb	1	; () banked
  5191  000A6A  6F34               	movwf	(strtof@eexp+1)& (0+255),b
  5192                           
  5193                           ; BSR set to: 1
  5194  000A6C  4B25               	infsnz	strtof@s& (0+255),f,b
  5195  000A6E  2B26               	incf	(strtof@s+1)& (0+255),f,b
  5196                           
  5197                           ; BSR set to: 1
  5198  000A70  0ED0               	movlw	208
  5199  000A72  6F29               	movwf	??_strtof& (0+255),b
  5200  000A74  0EFF               	movlw	255
  5201  000A76  6F2A               	movwf	(??_strtof+1)& (0+255),b
  5202  000A78  C125  FFD9         	movff	strtof@s,fsr2l
  5203  000A7C  C126  FFDA         	movff	strtof@s+1,fsr2h
  5204  000A80  50DF               	movf	indf2,w,c
  5205  000A82  6F2B               	movwf	(??_strtof+2)& (0+255),b
  5206  000A84  6B2C               	clrf	(??_strtof+3)& (0+255),b
  5207  000A86  5129               	movf	??_strtof& (0+255),w,b
  5208  000A88  272B               	addwf	(??_strtof+2)& (0+255),f,b
  5209  000A8A  512A               	movf	(??_strtof+1)& (0+255),w,b
  5210  000A8C  232C               	addwfc	(??_strtof+3)& (0+255),f,b
  5211  000A8E  512C               	movf	(??_strtof+3)& (0+255),w,b
  5212  000A90  E122               	bnz	l14678
  5213  000A92  0E0A               	movlw	10
  5214  000A94  5D2B               	subwf	(??_strtof+2)& (0+255),w,b
  5215  000A96  B0D8               	btfsc	status,0,c
  5216  000A98  D01E               	goto	l14678
  5217                           
  5218                           ; BSR set to: 1
  5219  000A9A  C125  FFD9         	movff	strtof@s,fsr2l
  5220  000A9E  C126  FFDA         	movff	strtof@s+1,fsr2h
  5221  000AA2  50DF               	movf	indf2,w,c
  5222  000AA4  6F29               	movwf	??_strtof& (0+255),b
  5223  000AA6  0ED0               	movlw	208
  5224  000AA8  2729               	addwf	??_strtof& (0+255),f,b
  5225  000AAA  C133  F08C         	movff	strtof@eexp,___wmul@multiplier
  5226  000AAE  C134  F08D         	movff	strtof@eexp+1,___wmul@multiplier+1
  5227  000AB2  0E00               	movlw	0
  5228  000AB4  0100               	movlb	0	; () banked
  5229  000AB6  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5230  000AB8  0E0A               	movlw	10
  5231  000ABA  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  5232  000ABC  ECA1  F03D         	call	___wmul	;wreg free
  5233  000AC0  0101               	movlb	1	; () banked
  5234  000AC2  5129               	movf	??_strtof& (0+255),w,b
  5235  000AC4  0100               	movlb	0	; () banked
  5236  000AC6  258C               	addwf	?___wmul& (0+255),w,b
  5237  000AC8  0101               	movlb	1	; () banked
  5238  000ACA  6F33               	movwf	strtof@eexp& (0+255),b
  5239  000ACC  0E00               	movlw	0
  5240  000ACE  0100               	movlb	0	; () banked
  5241  000AD0  218D               	addwfc	(?___wmul+1)& (0+255),w,b
  5242  000AD2  0101               	movlb	1	; () banked
  5243  000AD4  6F34               	movwf	(strtof@eexp+1)& (0+255),b
  5244  000AD6                     l14678:
  5245                           
  5246                           ; BSR set to: 1
  5247  000AD6  A730               	btfss	strtof@flags& (0+255),3,b
  5248  000AD8  D004               	goto	l14682
  5249                           
  5250                           ; BSR set to: 1
  5251  000ADA  6D33               	negf	strtof@eexp& (0+255),b
  5252  000ADC  1F34               	comf	(strtof@eexp+1)& (0+255),f,b
  5253  000ADE  B0D8               	btfsc	status,0,c
  5254  000AE0  2B34               	incf	(strtof@eexp+1)& (0+255),f,b
  5255  000AE2                     l14682:
  5256                           
  5257                           ; BSR set to: 1
  5258  000AE2  5133               	movf	strtof@eexp& (0+255),w,b
  5259  000AE4  2731               	addwf	strtof@expon& (0+255),f,b
  5260  000AE6  5134               	movf	(strtof@eexp+1)& (0+255),w,b
  5261  000AE8  2332               	addwfc	(strtof@expon+1)& (0+255),f,b
  5262                           
  5263                           ; BSR set to: 1
  5264  000AEA  5127               	movf	strtof@res& (0+255),w,b
  5265  000AEC  1128               	iorwf	(strtof@res+1)& (0+255),w,b
  5266  000AEE  A4D8               	btfss	status,2,c
  5267                           
  5268                           ; BSR set to: 1
  5269  000AF0  A330               	btfss	strtof@flags& (0+255),1,b
  5270  000AF2  D008               	goto	l14690
  5271                           
  5272                           ; BSR set to: 1
  5273  000AF4  C127  FFD9         	movff	strtof@res,fsr2l
  5274  000AF8  C128  FFDA         	movff	strtof@res+1,fsr2h
  5275  000AFC  C125  FFDE         	movff	strtof@s,postinc2
  5276  000B00  C126  FFDD         	movff	strtof@s+1,postdec2
  5277  000B04                     l14690:
  5278                           
  5279                           ; BSR set to: 1
  5280  000B04  C135  F098         	movff	strtof@_u,___xxtofl@val
  5281  000B08  C136  F099         	movff	strtof@_u+1,___xxtofl@val+1
  5282  000B0C  C137  F09A         	movff	strtof@_u+2,___xxtofl@val+2
  5283  000B10  C138  F09B         	movff	strtof@_u+3,___xxtofl@val+3
  5284  000B14  0E00               	movlw	0
  5285  000B16  EC1F  F024         	call	___xxtofl
  5286  000B1A  C098  F135         	movff	?___xxtofl,strtof@_u
  5287  000B1E  C099  F136         	movff	?___xxtofl+1,strtof@_u+1
  5288  000B22  C09A  F137         	movff	?___xxtofl+2,strtof@_u+2
  5289  000B26  C09B  F138         	movff	?___xxtofl+3,strtof@_u+3
  5290                           
  5291                           ; BSR set to: 0
  5292  000B2A  C135  F08C         	movff	strtof@_u,___fleq@ff1
  5293  000B2E  C136  F08D         	movff	strtof@_u+1,___fleq@ff1+1
  5294  000B32  C137  F08E         	movff	strtof@_u+2,___fleq@ff1+2
  5295  000B36  C138  F08F         	movff	strtof@_u+3,___fleq@ff1+3
  5296  000B3A  0E00               	movlw	0
  5297  000B3C  6F90               	movwf	___fleq@ff2& (0+255),b
  5298  000B3E  0E00               	movlw	0
  5299  000B40  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  5300  000B42  0E00               	movlw	0
  5301  000B44  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  5302  000B46  0E00               	movlw	0
  5303  000B48  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  5304  000B4A  EC3B  F037         	call	___fleq	;wreg free
  5305  000B4E  A0D8               	btfss	status,0,c
  5306  000B50  D00A               	goto	l14698
  5307                           
  5308                           ; BSR set to: 0
  5309  000B52  0E00               	movlw	0
  5310  000B54  0101               	movlb	1	; () banked
  5311  000B56  6F25               	movwf	?_strtof& (0+255),b
  5312  000B58  0E00               	movlw	0
  5313  000B5A  6F26               	movwf	(?_strtof+1)& (0+255),b
  5314  000B5C  0E00               	movlw	0
  5315  000B5E  6F27               	movwf	(?_strtof+2)& (0+255),b
  5316  000B60  0E00               	movlw	0
  5317  000B62  6F28               	movwf	(?_strtof+3)& (0+255),b
  5318  000B64  0012               	return	
  5319  000B66                     l14698:
  5320                           
  5321                           ; BSR set to: 0
  5322  000B66  0101               	movlb	1	; () banked
  5323  000B68  AF32               	btfss	(strtof@expon+1)& (0+255),7,b
  5324  000B6A  D075               	goto	l14726
  5325                           
  5326                           ; BSR set to: 1
  5327  000B6C  6D31               	negf	strtof@expon& (0+255),b
  5328  000B6E  1F32               	comf	(strtof@expon+1)& (0+255),f,b
  5329  000B70  B0D8               	btfsc	status,0,c
  5330  000B72  2B32               	incf	(strtof@expon+1)& (0+255),f,b
  5331  000B74  D01E               	goto	l14706
  5332  000B76                     l14702:
  5333                           
  5334                           ; BSR set to: 1
  5335  000B76  C135  F100         	movff	strtof@_u,___fldiv@b
  5336  000B7A  C136  F101         	movff	strtof@_u+1,___fldiv@b+1
  5337  000B7E  C137  F102         	movff	strtof@_u+2,___fldiv@b+2
  5338  000B82  C138  F103         	movff	strtof@_u+3,___fldiv@b+3
  5339  000B86  0EF9               	movlw	249
  5340  000B88  6F04               	movwf	___fldiv@a& (0+255),b
  5341  000B8A  0E02               	movlw	2
  5342  000B8C  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  5343  000B8E  0E15               	movlw	21
  5344  000B90  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  5345  000B92  0E50               	movlw	80
  5346  000B94  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  5347  000B96  EC9F  F019         	call	___fldiv	;wreg free
  5348  000B9A  C100  F135         	movff	?___fldiv,strtof@_u
  5349  000B9E  C101  F136         	movff	?___fldiv+1,strtof@_u+1
  5350  000BA2  C102  F137         	movff	?___fldiv+2,strtof@_u+2
  5351  000BA6  C103  F138         	movff	?___fldiv+3,strtof@_u+3
  5352                           
  5353                           ; BSR set to: 1
  5354  000BAA  0EF6               	movlw	246
  5355  000BAC  2731               	addwf	strtof@expon& (0+255),f,b
  5356  000BAE  0EFF               	movlw	255
  5357  000BB0  2332               	addwfc	(strtof@expon+1)& (0+255),f,b
  5358  000BB2                     l14706:
  5359                           
  5360                           ; BSR set to: 1
  5361  000BB2  BF32               	btfsc	(strtof@expon+1)& (0+255),7,b
  5362  000BB4  D024               	goto	l14712
  5363  000BB6  5132               	movf	(strtof@expon+1)& (0+255),w,b
  5364  000BB8  E1DE               	bnz	l14702
  5365  000BBA  0E0A               	movlw	10
  5366  000BBC  5D31               	subwf	strtof@expon& (0+255),w,b
  5367  000BBE  A0D8               	btfss	status,0,c
  5368  000BC0  D01E               	goto	l14712
  5369  000BC2  D7D9               	goto	l14702
  5370  000BC4                     l14708:
  5371                           
  5372                           ; BSR set to: 1
  5373  000BC4  C135  F100         	movff	strtof@_u,___fldiv@b
  5374  000BC8  C136  F101         	movff	strtof@_u+1,___fldiv@b+1
  5375  000BCC  C137  F102         	movff	strtof@_u+2,___fldiv@b+2
  5376  000BD0  C138  F103         	movff	strtof@_u+3,___fldiv@b+3
  5377  000BD4  0E00               	movlw	0
  5378  000BD6  6F04               	movwf	___fldiv@a& (0+255),b
  5379  000BD8  0E00               	movlw	0
  5380  000BDA  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  5381  000BDC  0E20               	movlw	32
  5382  000BDE  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  5383  000BE0  0E41               	movlw	65
  5384  000BE2  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  5385  000BE4  EC9F  F019         	call	___fldiv	;wreg free
  5386  000BE8  C100  F135         	movff	?___fldiv,strtof@_u
  5387  000BEC  C101  F136         	movff	?___fldiv+1,strtof@_u+1
  5388  000BF0  C102  F137         	movff	?___fldiv+2,strtof@_u+2
  5389  000BF4  C103  F138         	movff	?___fldiv+3,strtof@_u+3
  5390                           
  5391                           ; BSR set to: 1
  5392  000BF8  0731               	decf	strtof@expon& (0+255),f,b
  5393  000BFA  A0D8               	btfss	status,0,c
  5394  000BFC  0732               	decf	(strtof@expon+1)& (0+255),f,b
  5395  000BFE                     l14712:
  5396                           
  5397                           ; BSR set to: 1
  5398  000BFE  5131               	movf	strtof@expon& (0+255),w,b
  5399  000C00  1132               	iorwf	(strtof@expon+1)& (0+255),w,b
  5400  000C02  A4D8               	btfss	status,2,c
  5401  000C04  D7DF               	goto	l14708
  5402                           
  5403                           ; BSR set to: 1
  5404  000C06  C135  F119         	movff	strtof@_u,___flge@ff1
  5405  000C0A  C136  F11A         	movff	strtof@_u+1,___flge@ff1+1
  5406  000C0E  C137  F11B         	movff	strtof@_u+2,___flge@ff1+2
  5407  000C12  C138  F11C         	movff	strtof@_u+3,___flge@ff1+3
  5408  000C16  0E00               	movlw	0
  5409  000C18  6F1D               	movwf	___flge@ff2& (0+255),b
  5410  000C1A  0E00               	movlw	0
  5411  000C1C  6F1E               	movwf	(___flge@ff2+1)& (0+255),b
  5412  000C1E  0E80               	movlw	128
  5413  000C20  6F1F               	movwf	(___flge@ff2+2)& (0+255),b
  5414  000C22  0E00               	movlw	0
  5415  000C24  6F20               	movwf	(___flge@ff2+3)& (0+255),b
  5416  000C26  EC23  F030         	call	___flge	;wreg free
  5417  000C2A  B0D8               	btfsc	status,0,c
  5418  000C2C  D08A               	goto	l2551
  5419                           
  5420                           ; BSR set to: 1
  5421  000C2E  A130               	btfss	strtof@flags& (0+255),0,b
  5422  000C30  D009               	goto	l14722
  5423                           
  5424                           ; BSR set to: 1
  5425  000C32  0E00               	movlw	0
  5426  000C34  6F25               	movwf	?_strtof& (0+255),b
  5427  000C36  0E00               	movlw	0
  5428  000C38  6F26               	movwf	(?_strtof+1)& (0+255),b
  5429  000C3A  0E80               	movlw	128
  5430  000C3C  6F27               	movwf	(?_strtof+2)& (0+255),b
  5431  000C3E  0E80               	movlw	128
  5432  000C40  6F28               	movwf	(?_strtof+3)& (0+255),b
  5433  000C42  0012               	return	
  5434  000C44                     l14722:
  5435                           
  5436                           ; BSR set to: 1
  5437  000C44  0E00               	movlw	0
  5438  000C46  6F25               	movwf	?_strtof& (0+255),b
  5439  000C48  0E00               	movlw	0
  5440  000C4A  6F26               	movwf	(?_strtof+1)& (0+255),b
  5441  000C4C  0E80               	movlw	128
  5442  000C4E  6F27               	movwf	(?_strtof+2)& (0+255),b
  5443  000C50  0E00               	movlw	0
  5444  000C52  6F28               	movwf	(?_strtof+3)& (0+255),b
  5445  000C54  0012               	return	
  5446  000C56                     l14726:
  5447                           
  5448                           ; BSR set to: 1
  5449  000C56  BF32               	btfsc	(strtof@expon+1)& (0+255),7,b
  5450  000C58  D074               	goto	l2551
  5451  000C5A  5132               	movf	(strtof@expon+1)& (0+255),w,b
  5452  000C5C  E122               	bnz	l14734
  5453  000C5E  0531               	decf	strtof@expon& (0+255),w,b
  5454  000C60  B0D8               	btfsc	status,0,c
  5455  000C62  D01F               	goto	l14734
  5456  000C64  D06E               	goto	l2551
  5457  000C66                     l14730:
  5458                           
  5459                           ; BSR set to: 1
  5460  000C66  C135  F100         	movff	strtof@_u,___flmul@b
  5461  000C6A  C136  F101         	movff	strtof@_u+1,___flmul@b+1
  5462  000C6E  C137  F102         	movff	strtof@_u+2,___flmul@b+2
  5463  000C72  C138  F103         	movff	strtof@_u+3,___flmul@b+3
  5464  000C76  0EF9               	movlw	249
  5465  000C78  6F04               	movwf	___flmul@a& (0+255),b
  5466  000C7A  0E02               	movlw	2
  5467  000C7C  6F05               	movwf	(___flmul@a+1)& (0+255),b
  5468  000C7E  0E15               	movlw	21
  5469  000C80  6F06               	movwf	(___flmul@a+2)& (0+255),b
  5470  000C82  0E50               	movlw	80
  5471  000C84  6F07               	movwf	(___flmul@a+3)& (0+255),b
  5472  000C86  ECBB  F010         	call	___flmul	;wreg free
  5473  000C8A  C100  F135         	movff	?___flmul,strtof@_u
  5474  000C8E  C101  F136         	movff	?___flmul+1,strtof@_u+1
  5475  000C92  C102  F137         	movff	?___flmul+2,strtof@_u+2
  5476  000C96  C103  F138         	movff	?___flmul+3,strtof@_u+3
  5477                           
  5478                           ; BSR set to: 1
  5479  000C9A  0EF6               	movlw	246
  5480  000C9C  2731               	addwf	strtof@expon& (0+255),f,b
  5481  000C9E  0EFF               	movlw	255
  5482  000CA0  2332               	addwfc	(strtof@expon+1)& (0+255),f,b
  5483  000CA2                     l14734:
  5484                           
  5485                           ; BSR set to: 1
  5486  000CA2  5132               	movf	(strtof@expon+1)& (0+255),w,b
  5487  000CA4  E1E0               	bnz	l14730
  5488  000CA6  0E0A               	movlw	10
  5489  000CA8  5D31               	subwf	strtof@expon& (0+255),w,b
  5490  000CAA  A0D8               	btfss	status,0,c
  5491  000CAC  D01E               	goto	l14740
  5492  000CAE  D7DB               	goto	l14730
  5493  000CB0                     l14736:
  5494                           
  5495                           ; BSR set to: 1
  5496  000CB0  C135  F100         	movff	strtof@_u,___flmul@b
  5497  000CB4  C136  F101         	movff	strtof@_u+1,___flmul@b+1
  5498  000CB8  C137  F102         	movff	strtof@_u+2,___flmul@b+2
  5499  000CBC  C138  F103         	movff	strtof@_u+3,___flmul@b+3
  5500  000CC0  0E00               	movlw	0
  5501  000CC2  6F04               	movwf	___flmul@a& (0+255),b
  5502  000CC4  0E00               	movlw	0
  5503  000CC6  6F05               	movwf	(___flmul@a+1)& (0+255),b
  5504  000CC8  0E20               	movlw	32
  5505  000CCA  6F06               	movwf	(___flmul@a+2)& (0+255),b
  5506  000CCC  0E41               	movlw	65
  5507  000CCE  6F07               	movwf	(___flmul@a+3)& (0+255),b
  5508  000CD0  ECBB  F010         	call	___flmul	;wreg free
  5509  000CD4  C100  F135         	movff	?___flmul,strtof@_u
  5510  000CD8  C101  F136         	movff	?___flmul+1,strtof@_u+1
  5511  000CDC  C102  F137         	movff	?___flmul+2,strtof@_u+2
  5512  000CE0  C103  F138         	movff	?___flmul+3,strtof@_u+3
  5513                           
  5514                           ; BSR set to: 1
  5515  000CE4  0731               	decf	strtof@expon& (0+255),f,b
  5516  000CE6  A0D8               	btfss	status,0,c
  5517  000CE8  0732               	decf	(strtof@expon+1)& (0+255),f,b
  5518  000CEA                     l14740:
  5519                           
  5520                           ; BSR set to: 1
  5521  000CEA  5131               	movf	strtof@expon& (0+255),w,b
  5522  000CEC  1132               	iorwf	(strtof@expon+1)& (0+255),w,b
  5523  000CEE  A4D8               	btfss	status,2,c
  5524  000CF0  D7DF               	goto	l14736
  5525                           
  5526                           ; BSR set to: 1
  5527  000CF2  0EFF               	movlw	255
  5528  000CF4  6F19               	movwf	___flge@ff1& (0+255),b
  5529  000CF6  0EFF               	movlw	255
  5530  000CF8  6F1A               	movwf	(___flge@ff1+1)& (0+255),b
  5531  000CFA  0E7F               	movlw	127
  5532  000CFC  6F1B               	movwf	(___flge@ff1+2)& (0+255),b
  5533  000CFE  0E7F               	movlw	127
  5534  000D00  6F1C               	movwf	(___flge@ff1+3)& (0+255),b
  5535  000D02  C135  F11D         	movff	strtof@_u,___flge@ff2
  5536  000D06  C136  F11E         	movff	strtof@_u+1,___flge@ff2+1
  5537  000D0A  C137  F11F         	movff	strtof@_u+2,___flge@ff2+2
  5538  000D0E  C138  F120         	movff	strtof@_u+3,___flge@ff2+3
  5539  000D12  EC23  F030         	call	___flge	;wreg free
  5540  000D16  B0D8               	btfsc	status,0,c
  5541  000D18  D014               	goto	l2551
  5542                           
  5543                           ; BSR set to: 1
  5544  000D1A  A130               	btfss	strtof@flags& (0+255),0,b
  5545  000D1C  D009               	goto	l14750
  5546                           
  5547                           ; BSR set to: 1
  5548  000D1E  0E00               	movlw	0
  5549  000D20  6F25               	movwf	?_strtof& (0+255),b
  5550  000D22  0E00               	movlw	0
  5551  000D24  6F26               	movwf	(?_strtof+1)& (0+255),b
  5552  000D26  0E80               	movlw	128
  5553  000D28  6F27               	movwf	(?_strtof+2)& (0+255),b
  5554  000D2A  0E80               	movlw	128
  5555  000D2C  6F28               	movwf	(?_strtof+3)& (0+255),b
  5556  000D2E  0012               	return	
  5557  000D30                     l14750:
  5558                           
  5559                           ; BSR set to: 1
  5560  000D30  0E00               	movlw	0
  5561  000D32  6F25               	movwf	?_strtof& (0+255),b
  5562  000D34  0E00               	movlw	0
  5563  000D36  6F26               	movwf	(?_strtof+1)& (0+255),b
  5564  000D38  0E80               	movlw	128
  5565  000D3A  6F27               	movwf	(?_strtof+2)& (0+255),b
  5566  000D3C  0E00               	movlw	0
  5567  000D3E  6F28               	movwf	(?_strtof+3)& (0+255),b
  5568  000D40  0012               	return	
  5569  000D42                     l2551:
  5570                           
  5571                           ; BSR set to: 1
  5572  000D42  A130               	btfss	strtof@flags& (0+255),0,b
  5573  000D44  D012               	goto	l14756
  5574                           
  5575                           ; BSR set to: 1
  5576  000D46  C135  F08C         	movff	strtof@_u,___flneg@f1
  5577  000D4A  C136  F08D         	movff	strtof@_u+1,___flneg@f1+1
  5578  000D4E  C137  F08E         	movff	strtof@_u+2,___flneg@f1+2
  5579  000D52  C138  F08F         	movff	strtof@_u+3,___flneg@f1+3
  5580  000D56  ECBB  F03C         	call	___flneg	;wreg free
  5581  000D5A  C08C  F135         	movff	?___flneg,strtof@_u
  5582  000D5E  C08D  F136         	movff	?___flneg+1,strtof@_u+1
  5583  000D62  C08E  F137         	movff	?___flneg+2,strtof@_u+2
  5584  000D66  C08F  F138         	movff	?___flneg+3,strtof@_u+3
  5585  000D6A                     l14756:
  5586  000D6A  C135  F125         	movff	strtof@_u,?_strtof
  5587  000D6E  C136  F126         	movff	strtof@_u+1,?_strtof+1
  5588  000D72  C137  F127         	movff	strtof@_u+2,?_strtof+2
  5589  000D76  C138  F128         	movff	strtof@_u+3,?_strtof+3
  5590  000D7A  0012               	return		;funcret
  5591  000D7C                     __end_of_strtof:
  5592                           	callstack 0
  5593                           
  5594 ;; *************** function _toupper *****************
  5595 ;; Defined at:
  5596 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/toupper.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  c               2   50[BANK0 ] int 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  2   50[BANK0 ] int 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 3F/0
  5607 ;;		On exit  : 3F/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5610 ;;      Params:         0       2       0       0       0       0       0       0       0
  5611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5612 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5613 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5614 ;;Total ram usage:        6 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; Hardware stack levels required when called: 11
  5617 ;; This function calls:
  5618 ;;		_islower
  5619 ;; This function is called by:
  5620 ;;		_strtof
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text9
  5625  00779A                     __ptext9:
  5626                           	callstack 0
  5627  00779A                     _toupper:
  5628                           	callstack 16
  5629                           
  5630                           ; BSR set to: 0
  5631                           
  5632                           ; BSR set to: 0
  5633                           
  5634                           ;incstack = 0
  5635  00779A  0E9F               	movlw	159
  5636  00779C  6F94               	movwf	??_toupper& (0+255),b
  5637  00779E  0EFF               	movlw	255
  5638  0077A0  6F95               	movwf	(??_toupper+1)& (0+255),b
  5639  0077A2  C092  F096         	movff	toupper@c,??_toupper+2
  5640  0077A6  C093  F097         	movff	toupper@c+1,??_toupper+3
  5641  0077AA  5194               	movf	??_toupper& (0+255),w,b
  5642  0077AC  2796               	addwf	(??_toupper+2)& (0+255),f,b
  5643  0077AE  5195               	movf	(??_toupper+1)& (0+255),w,b
  5644  0077B0  2397               	addwfc	(??_toupper+3)& (0+255),f,b
  5645  0077B2  5197               	movf	(??_toupper+3)& (0+255),w,b
  5646  0077B4  E109               	bnz	l2766
  5647  0077B6  0E1A               	movlw	26
  5648  0077B8  5D96               	subwf	(??_toupper+2)& (0+255),w,b
  5649  0077BA  B0D8               	btfsc	status,0,c
  5650  0077BC  D005               	goto	l2766
  5651                           
  5652                           ; BSR set to: 0
  5653  0077BE  0E5F               	movlw	95
  5654  0077C0  1592               	andwf	toupper@c& (0+255),w,b
  5655  0077C2  6F92               	movwf	?_toupper& (0+255),b
  5656  0077C4  6B93               	clrf	(?_toupper+1)& (0+255),b
  5657  0077C6  0012               	return	
  5658  0077C8                     l2766:
  5659                           
  5660                           ; BSR set to: 0
  5661  0077C8  C092  F092         	movff	toupper@c,?_toupper
  5662  0077CC  C093  F093         	movff	toupper@c+1,?_toupper+1
  5663                           
  5664                           ; BSR set to: 0
  5665  0077D0  0012               	return		;funcret
  5666  0077D2                     __end_of_toupper:
  5667                           	callstack 0
  5668                           
  5669 ;; *************** function _islower *****************
  5670 ;; Defined at:
  5671 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/islower.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  c               2   44[BANK0 ] int 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;		None
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  2   44[BANK0 ] int 
  5678 ;; Registers used:
  5679 ;;		wreg, status,2, status,0
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 3F/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5685 ;;      Params:         0       2       0       0       0       0       0       0       0
  5686 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5687 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5688 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5689 ;;Total ram usage:        6 bytes
  5690 ;; Hardware stack levels used: 1
  5691 ;; Hardware stack levels required when called: 10
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_toupper
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text10
  5700  0078AE                     __ptext10:
  5701                           	callstack 0
  5702  0078AE                     _islower:
  5703                           	callstack 16
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;incstack = 0
  5707  0078AE  0E9F               	movlw	159
  5708  0078B0  0100               	movlb	0	; () banked
  5709  0078B2  6F8E               	movwf	??_islower& (0+255),b
  5710  0078B4  0EFF               	movlw	255
  5711  0078B6  6F8F               	movwf	(??_islower+1)& (0+255),b
  5712  0078B8  C08C  F090         	movff	islower@c,??_islower+2
  5713  0078BC  C08D  F091         	movff	islower@c+1,??_islower+3
  5714  0078C0  518E               	movf	??_islower& (0+255),w,b
  5715  0078C2  2790               	addwf	(??_islower+2)& (0+255),f,b
  5716  0078C4  518F               	movf	(??_islower+1)& (0+255),w,b
  5717  0078C6  2391               	addwfc	(??_islower+3)& (0+255),f,b
  5718  0078C8  5191               	movf	(??_islower+3)& (0+255),w,b
  5719  0078CA  E106               	bnz	u10260
  5720  0078CC  0E1A               	movlw	26
  5721  0078CE  5D90               	subwf	(??_islower+2)& (0+255),w,b
  5722  0078D0  B0D8               	btfsc	status,0,c
  5723  0078D2  D002               	goto	u10260
  5724  0078D4  0E01               	movlw	1
  5725  0078D6  D001               	goto	u10270
  5726  0078D8                     u10260:
  5727  0078D8  0E00               	movlw	0
  5728  0078DA                     u10270:
  5729  0078DA  6F8C               	movwf	?_islower& (0+255),b
  5730  0078DC  6B8D               	clrf	(?_islower+1)& (0+255),b
  5731                           
  5732                           ; BSR set to: 0
  5733  0078DE  0012               	return		;funcret
  5734  0078E0                     __end_of_islower:
  5735                           	callstack 0
  5736                           
  5737 ;; *************** function _nanf *****************
  5738 ;; Defined at:
  5739 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nanf.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;  s               2   44[BANK0 ] PTR const unsigned char 
  5742 ;;		 -> STR_30(1), 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  u               4   48[BANK0 ] struct .
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  4   44[BANK0 ] float 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2
  5749 ;; Tracked objects:
  5750 ;;		On entry : 3F/0
  5751 ;;		On exit  : 3F/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5754 ;;      Params:         0       4       0       0       0       0       0       0       0
  5755 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5757 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5758 ;;Total ram usage:        8 bytes
  5759 ;; Hardware stack levels used: 1
  5760 ;; Hardware stack levels required when called: 10
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_strtof
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text11
  5769  007BF8                     __ptext11:
  5770                           	callstack 0
  5771  007BF8                     _nanf:
  5772                           	callstack 17
  5773                           
  5774                           ; BSR set to: 0
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;incstack = 0
  5778  007BF8  0EFF               	movlw	255
  5779  007BFA  6F90               	movwf	nanf@u& (0+255),b
  5780  007BFC  0EFF               	movlw	255
  5781  007BFE  6F91               	movwf	(nanf@u+1)& (0+255),b
  5782  007C00  0EFF               	movlw	255
  5783  007C02  6F92               	movwf	(nanf@u+2)& (0+255),b
  5784  007C04  0E7F               	movlw	127
  5785  007C06  6F93               	movwf	(nanf@u+3)& (0+255),b
  5786                           
  5787                           ; BSR set to: 0
  5788  007C08  C090  F08C         	movff	nanf@u,?_nanf
  5789  007C0C  C091  F08D         	movff	nanf@u+1,?_nanf+1
  5790  007C10  C092  F08E         	movff	nanf@u+2,?_nanf+2
  5791  007C14  C093  F08F         	movff	nanf@u+3,?_nanf+3
  5792                           
  5793                           ; BSR set to: 0
  5794  007C18  0012               	return		;funcret
  5795  007C1A                     __end_of_nanf:
  5796                           	callstack 0
  5797                           
  5798 ;; *************** function _isxdigit *****************
  5799 ;; Defined at:
  5800 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isxdigit.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  c               2   50[BANK0 ] int 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  2   50[BANK0 ] int 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0
  5809 ;; Tracked objects:
  5810 ;;		On entry : 3F/0
  5811 ;;		On exit  : 3F/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5814 ;;      Params:         0       2       0       0       0       0       0       0       0
  5815 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5816 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5817 ;;      Totals:         0       7       0       0       0       0       0       0       0
  5818 ;;Total ram usage:        7 bytes
  5819 ;; Hardware stack levels used: 1
  5820 ;; Hardware stack levels required when called: 11
  5821 ;; This function calls:
  5822 ;;		_isdigit
  5823 ;; This function is called by:
  5824 ;;		_strtof
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text12
  5829  007124                     __ptext12:
  5830                           	callstack 0
  5831  007124                     _isxdigit:
  5832                           	callstack 16
  5833                           
  5834                           ; BSR set to: 0
  5835                           
  5836                           ; BSR set to: 0
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;incstack = 0
  5840  007124  0E01               	movlw	1
  5841  007126  6F98               	movwf	_isxdigit$5244& (0+255),b
  5842                           
  5843                           ; BSR set to: 0
  5844  007128  0ED0               	movlw	208
  5845  00712A  6F94               	movwf	??_isxdigit& (0+255),b
  5846  00712C  0EFF               	movlw	255
  5847  00712E  6F95               	movwf	(??_isxdigit+1)& (0+255),b
  5848  007130  C092  F096         	movff	isxdigit@c,??_isxdigit+2
  5849  007134  C093  F097         	movff	isxdigit@c+1,??_isxdigit+3
  5850  007138  5194               	movf	??_isxdigit& (0+255),w,b
  5851  00713A  2796               	addwf	(??_isxdigit+2)& (0+255),f,b
  5852  00713C  5195               	movf	(??_isxdigit+1)& (0+255),w,b
  5853  00713E  2397               	addwfc	(??_isxdigit+3)& (0+255),f,b
  5854  007140  5197               	movf	(??_isxdigit+3)& (0+255),w,b
  5855  007142  E104               	bnz	u17100
  5856  007144  0E0A               	movlw	10
  5857  007146  5D96               	subwf	(??_isxdigit+2)& (0+255),w,b
  5858  007148  A0D8               	btfss	status,0,c
  5859  00714A  D016               	goto	l14212
  5860  00714C                     u17100:
  5861                           
  5862                           ; BSR set to: 0
  5863  00714C  0E9F               	movlw	159
  5864  00714E  6F94               	movwf	??_isxdigit& (0+255),b
  5865  007150  0EFF               	movlw	255
  5866  007152  6F95               	movwf	(??_isxdigit+1)& (0+255),b
  5867  007154  0E20               	movlw	32
  5868  007156  1192               	iorwf	isxdigit@c& (0+255),w,b
  5869  007158  6F96               	movwf	(??_isxdigit+2)& (0+255),b
  5870  00715A  0E00               	movlw	0
  5871  00715C  1193               	iorwf	(isxdigit@c+1)& (0+255),w,b
  5872  00715E  6F97               	movwf	(??_isxdigit+3)& (0+255),b
  5873  007160  5194               	movf	??_isxdigit& (0+255),w,b
  5874  007162  2796               	addwf	(??_isxdigit+2)& (0+255),f,b
  5875  007164  5195               	movf	(??_isxdigit+1)& (0+255),w,b
  5876  007166  2397               	addwfc	(??_isxdigit+3)& (0+255),f,b
  5877  007168  5197               	movf	(??_isxdigit+3)& (0+255),w,b
  5878  00716A  E104               	bnz	u17110
  5879  00716C  0E06               	movlw	6
  5880  00716E  5D96               	subwf	(??_isxdigit+2)& (0+255),w,b
  5881  007170  A0D8               	btfss	status,0,c
  5882  007172  D002               	goto	l14212
  5883  007174                     u17110:
  5884                           
  5885                           ; BSR set to: 0
  5886  007174  0E00               	movlw	0
  5887  007176  6F98               	movwf	_isxdigit$5244& (0+255),b
  5888  007178                     l14212:
  5889                           
  5890                           ; BSR set to: 0
  5891  007178  C098  F092         	movff	_isxdigit$5244,?_isxdigit
  5892  00717C  6B93               	clrf	(?_isxdigit+1)& (0+255),b
  5893                           
  5894                           ; BSR set to: 0
  5895  00717E  0012               	return		;funcret
  5896  007180                     __end_of_isxdigit:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _M_5 *****************
  5900 ;; Defined at:
  5901 ;;		line 137 in file "GCODE.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  axis            2   44[BANK0 ] PTR struct Comando_T
  5904 ;;		 -> NULL(0), 
  5905 ;;  n               2   46[BANK0 ] int 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 3F/0
  5914 ;;		On exit  : 3F/0
  5915 ;;		Unchanged: 3F/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5917 ;;      Params:         0       4       0       0       0       0       0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5920 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5921 ;;Total ram usage:        4 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 11
  5924 ;; This function calls:
  5925 ;;		_apagarRotor
  5926 ;; This function is called by:
  5927 ;;		_executeCommand
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text13
  5932  007DF2                     __ptext13:
  5933                           	callstack 0
  5934  007DF2                     _M_5:
  5935                           	callstack 18
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;GCODE.c: 138:    apagarRotor();
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;incstack = 0
  5942  007DF2  ECFE  F03E         	call	_apagarRotor	;wreg free
  5943                           
  5944                           ; BSR set to: 0
  5945  007DF6  0012               	return		;funcret
  5946  007DF8                     __end_of_M_5:
  5947                           	callstack 0
  5948                           
  5949 ;; *************** function _apagarRotor *****************
  5950 ;; Defined at:
  5951 ;;		line 9 in file "rotor.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		None
  5960 ;; Tracked objects:
  5961 ;;		On entry : 3F/0
  5962 ;;		On exit  : 3F/0
  5963 ;;		Unchanged: 3F/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5965 ;;      Params:         0       0       0       0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5968 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5969 ;;Total ram usage:        0 bytes
  5970 ;; Hardware stack levels used: 1
  5971 ;; Hardware stack levels required when called: 10
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_M_5
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text14
  5980  007DFC                     __ptext14:
  5981                           	callstack 0
  5982  007DFC                     _apagarRotor:
  5983                           	callstack 18
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;rotor.c: 10:    LATCbits.LATC6=0;
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;incstack = 0
  5990  007DFC  9C8B               	bcf	139,6,c	;volatile
  5991                           
  5992                           ; BSR set to: 0
  5993  007DFE  0012               	return		;funcret
  5994  007E00                     __end_of_apagarRotor:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _G_97 *****************
  5998 ;; Defined at:
  5999 ;;		line 117 in file "GCODE.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  axis            2   56[BANK0 ] PTR struct Comando_T
  6002 ;;		 -> executeCommand@comando(100), 
  6003 ;;  n               2   58[BANK0 ] int 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 3F/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6015 ;;      Params:         0       4       0       0       0       0       0       0       0
  6016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6017 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6018 ;;      Totals:         0       5       0       0       0       0       0       0       0
  6019 ;;Total ram usage:        5 bytes
  6020 ;; Hardware stack levels used: 1
  6021 ;; Hardware stack levels required when called: 12
  6022 ;; This function calls:
  6023 ;;		_M_3
  6024 ;;		_M_4
  6025 ;;		___fleq
  6026 ;;		_encenderRotor
  6027 ;; This function is called by:
  6028 ;;		_executeCommand
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text15
  6033  0062B4                     __ptext15:
  6034                           	callstack 0
  6035  0062B4                     _G_97:
  6036                           	callstack 17
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;GCODE.c: 118:    if(n==0) return;
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;incstack = 0
  6043  0062B4  519A               	movf	G_97@n& (0+255),w,b
  6044  0062B6  119B               	iorwf	(G_97@n+1)& (0+255),w,b
  6045  0062B8  B4D8               	btfsc	status,2,c
  6046  0062BA  0012               	return	
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;GCODE.c: 119:    if(axis[0].code == 'S'){
  6050  0062BC  C098  FFD9         	movff	G_97@axis,fsr2l
  6051  0062C0  C099  FFDA         	movff	G_97@axis+1,fsr2h
  6052  0062C4  0E53               	movlw	83
  6053  0062C6  18DE               	xorwf	postinc2,w,c
  6054  0062C8  B4D8               	btfsc	status,2,c
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;GCODE.c: 120:       encenderRotor();
  6058  0062CA  EC00  F03F         	call	_encenderRotor	;wreg free
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;GCODE.c: 122:    if(n==1) return;
  6062  0062CE  059A               	decf	G_97@n& (0+255),w,b
  6063  0062D0  119B               	iorwf	(G_97@n+1)& (0+255),w,b
  6064  0062D2  B4D8               	btfsc	status,2,c
  6065  0062D4  0012               	return	
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;GCODE.c: 123:    if(axis[1].code == 'M'){
  6069  0062D6  EE20 F005          	lfsr	2,5
  6070  0062DA  5198               	movf	G_97@axis& (0+255),w,b
  6071  0062DC  26D9               	addwf	fsr2l,f,c
  6072  0062DE  5199               	movf	(G_97@axis+1)& (0+255),w,b
  6073  0062E0  22DA               	addwfc	fsr2h,f,c
  6074  0062E2  0E4D               	movlw	77
  6075  0062E4  18DE               	xorwf	postinc2,w,c
  6076  0062E6  A4D8               	btfss	status,2,c
  6077  0062E8  0012               	return	
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;GCODE.c: 124:       if(axis[1].number==3) M_3(((void*)0),0);
  6081  0062EA  EE20 F006          	lfsr	2,6
  6082  0062EE  5198               	movf	G_97@axis& (0+255),w,b
  6083  0062F0  26D9               	addwf	fsr2l,f,c
  6084  0062F2  5199               	movf	(G_97@axis+1)& (0+255),w,b
  6085  0062F4  22DA               	addwfc	fsr2h,f,c
  6086  0062F6  CFDE F08C          	movff	postinc2,___fleq@ff1
  6087  0062FA  CFDE F08D          	movff	postinc2,___fleq@ff1+1
  6088  0062FE  CFDE F08E          	movff	postinc2,___fleq@ff1+2
  6089  006302  CFDE F08F          	movff	postinc2,___fleq@ff1+3
  6090  006306  0E00               	movlw	0
  6091  006308  6F90               	movwf	___fleq@ff2& (0+255),b
  6092  00630A  0E00               	movlw	0
  6093  00630C  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  6094  00630E  0E40               	movlw	64
  6095  006310  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  6096  006312  0E40               	movlw	64
  6097  006314  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  6098  006316  EC3B  F037         	call	___fleq	;wreg free
  6099  00631A  A0D8               	btfss	status,0,c
  6100  00631C  D00A               	goto	l15116
  6101                           
  6102                           ; BSR set to: 0
  6103  00631E  0E00               	movlw	0
  6104  006320  6F8E               	movwf	M_3@axis& (0+255),b
  6105  006322  0E00               	movlw	0
  6106  006324  6F8F               	movwf	(M_3@axis+1)& (0+255),b
  6107  006326  0E00               	movlw	0
  6108  006328  6F91               	movwf	(M_3@n+1)& (0+255),b
  6109  00632A  0E00               	movlw	0
  6110  00632C  6F90               	movwf	M_3@n& (0+255),b
  6111  00632E  ECAD  F03E         	call	_M_3	;wreg free
  6112  006332                     l15116:
  6113                           
  6114                           ;GCODE.c: 125:       if(axis[1].number==4) M_4(((void*)0),0);
  6115  006332  0100               	movlb	0	; () banked
  6116  006334  EE20 F006          	lfsr	2,6
  6117  006338  5198               	movf	G_97@axis& (0+255),w,b
  6118  00633A  26D9               	addwf	fsr2l,f,c
  6119  00633C  5199               	movf	(G_97@axis+1)& (0+255),w,b
  6120  00633E  22DA               	addwfc	fsr2h,f,c
  6121  006340  CFDE F08C          	movff	postinc2,___fleq@ff1
  6122  006344  CFDE F08D          	movff	postinc2,___fleq@ff1+1
  6123  006348  CFDE F08E          	movff	postinc2,___fleq@ff1+2
  6124  00634C  CFDE F08F          	movff	postinc2,___fleq@ff1+3
  6125  006350  0E00               	movlw	0
  6126  006352  6F90               	movwf	___fleq@ff2& (0+255),b
  6127  006354  0E00               	movlw	0
  6128  006356  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  6129  006358  0E80               	movlw	128
  6130  00635A  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  6131  00635C  0E40               	movlw	64
  6132  00635E  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  6133  006360  EC3B  F037         	call	___fleq	;wreg free
  6134  006364  A0D8               	btfss	status,0,c
  6135  006366  0012               	return	
  6136                           
  6137                           ; BSR set to: 0
  6138  006368  0E00               	movlw	0
  6139  00636A  6F8E               	movwf	M_4@axis& (0+255),b
  6140  00636C  0E00               	movlw	0
  6141  00636E  6F8F               	movwf	(M_4@axis+1)& (0+255),b
  6142  006370  0E00               	movlw	0
  6143  006372  6F91               	movwf	(M_4@n+1)& (0+255),b
  6144  006374  0E00               	movlw	0
  6145  006376  6F90               	movwf	M_4@n& (0+255),b
  6146  006378  ECA6  F03E         	call	_M_4	;wreg free
  6147  00637C  0012               	return		;funcret
  6148  00637E                     __end_of_G_97:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _encenderRotor *****************
  6152 ;; Defined at:
  6153 ;;		line 5 in file "rotor.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		None
  6162 ;; Tracked objects:
  6163 ;;		On entry : 3F/0
  6164 ;;		On exit  : 3F/0
  6165 ;;		Unchanged: 3F/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6170 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6171 ;;Total ram usage:        0 bytes
  6172 ;; Hardware stack levels used: 1
  6173 ;; Hardware stack levels required when called: 10
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		_G_97
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text16
  6182  007E00                     __ptext16:
  6183                           	callstack 0
  6184  007E00                     _encenderRotor:
  6185                           	callstack 18
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;rotor.c: 6:    LATCbits.LATC6 = 1;
  6189                           
  6190                           ;incstack = 0
  6191  007E00  8C8B               	bsf	139,6,c	;volatile
  6192                           
  6193                           ; BSR set to: 0
  6194  007E02  0012               	return		;funcret
  6195  007E04                     __end_of_encenderRotor:
  6196                           	callstack 0
  6197                           
  6198 ;; *************** function _M_4 *****************
  6199 ;; Defined at:
  6200 ;;		line 133 in file "GCODE.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  axis            2   46[BANK0 ] PTR struct Comando_T
  6203 ;;		 -> NULL(0), 
  6204 ;;  n               2   48[BANK0 ] int 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 3F/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6216 ;;      Params:         0       4       0       0       0       0       0       0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6219 ;;      Totals:         0       4       0       0       0       0       0       0       0
  6220 ;;Total ram usage:        4 bytes
  6221 ;; Hardware stack levels used: 1
  6222 ;; Hardware stack levels required when called: 11
  6223 ;; This function calls:
  6224 ;;		_DireccionRotor
  6225 ;; This function is called by:
  6226 ;;		_G_97
  6227 ;;		_executeCommand
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text17
  6232  007D4C                     __ptext17:
  6233                           	callstack 0
  6234  007D4C                     _M_4:
  6235                           	callstack 18
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;GCODE.c: 134:    DireccionRotor(1);
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;incstack = 0
  6242  007D4C  0E00               	movlw	0
  6243  007D4E  6F8D               	movwf	(DireccionRotor@dir+1)& (0+255),b
  6244  007D50  0E01               	movlw	1
  6245  007D52  6F8C               	movwf	DireccionRotor@dir& (0+255),b
  6246  007D54  ECC1  F03E         	call	_DireccionRotor	;wreg free
  6247  007D58  0012               	return		;funcret
  6248  007D5A                     __end_of_M_4:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function _M_3 *****************
  6252 ;; Defined at:
  6253 ;;		line 129 in file "GCODE.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  axis            2   46[BANK0 ] PTR struct Comando_T
  6256 ;;		 -> NULL(0), 
  6257 ;;  n               2   48[BANK0 ] int 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 3F/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6269 ;;      Params:         0       4       0       0       0       0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6272 ;;      Totals:         0       4       0       0       0       0       0       0       0
  6273 ;;Total ram usage:        4 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; Hardware stack levels required when called: 11
  6276 ;; This function calls:
  6277 ;;		_DireccionRotor
  6278 ;; This function is called by:
  6279 ;;		_G_97
  6280 ;;		_executeCommand
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text18
  6285  007D5A                     __ptext18:
  6286                           	callstack 0
  6287  007D5A                     _M_3:
  6288                           	callstack 18
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;GCODE.c: 130:    DireccionRotor(0);
  6292                           
  6293                           ;incstack = 0
  6294  007D5A  0E00               	movlw	0
  6295  007D5C  6F8D               	movwf	(DireccionRotor@dir+1)& (0+255),b
  6296  007D5E  0E00               	movlw	0
  6297  007D60  6F8C               	movwf	DireccionRotor@dir& (0+255),b
  6298  007D62  ECC1  F03E         	call	_DireccionRotor	;wreg free
  6299  007D66  0012               	return		;funcret
  6300  007D68                     __end_of_M_3:
  6301                           	callstack 0
  6302                           
  6303 ;; *************** function _DireccionRotor *****************
  6304 ;; Defined at:
  6305 ;;		line 13 in file "rotor.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  dir             2   44[BANK0 ] int 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		None
  6314 ;; Tracked objects:
  6315 ;;		On entry : 3F/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6319 ;;      Params:         0       2       0       0       0       0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6322 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6323 ;;Total ram usage:        2 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; Hardware stack levels required when called: 10
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_M_3
  6330 ;;		_M_4
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text19
  6335  007D82                     __ptext19:
  6336                           	callstack 0
  6337  007D82                     _DireccionRotor:
  6338                           	callstack 18
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;rotor.c: 14:    LATAbits.LATA7 = dir;
  6342                           
  6343                           ;incstack = 0
  6344  007D82  B18C               	btfsc	DireccionRotor@dir& (0+255),0,b
  6345  007D84  D002               	bra	u10835
  6346  007D86  9E89               	bcf	137,7,c	;volatile
  6347  007D88  D001               	bra	u10836
  6348  007D8A                     u10835:
  6349  007D8A  8E89               	bsf	137,7,c	;volatile
  6350  007D8C                     u10836:
  6351  007D8C  0012               	return		;funcret
  6352  007D8E                     __end_of_DireccionRotor:
  6353                           	callstack 0
  6354                           
  6355 ;; *************** function _G_95 *****************
  6356 ;; Defined at:
  6357 ;;		line 85 in file "GCODE.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  axis            2   47[BANK1 ] PTR struct Comando_T
  6360 ;;		 -> executeCommand@comando(100), 
  6361 ;;  n               2   49[BANK1 ] int 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  i               2   59[BANK1 ] int 
  6364 ;;  i               2   57[BANK1 ] int 
  6365 ;;  distancia       4   53[BANK1 ] float 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 3F/1
  6372 ;;		On exit  : 3F/1
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6375 ;;      Params:         0       0       4       0       0       0       0       0       0
  6376 ;;      Locals:         0       0       8       0       0       0       0       0       0
  6377 ;;      Temps:          0       0       2       0       0       0       0       0       0
  6378 ;;      Totals:         0       0      14       0       0       0       0       0       0
  6379 ;;Total ram usage:       14 bytes
  6380 ;; Hardware stack levels used: 1
  6381 ;; Hardware stack levels required when called: 12
  6382 ;; This function calls:
  6383 ;;		_TMR2_SetInterruptHandler
  6384 ;;		___fladd
  6385 ;;		___fldiv
  6386 ;;		___flsub
  6387 ;;		___wmul
  6388 ;;		_mover_2
  6389 ;; This function is called by:
  6390 ;;		_executeCommand
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text20
  6395  0030B0                     __ptext20:
  6396                           	callstack 0
  6397  0030B0                     _G_95:
  6398                           	callstack 17
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;GCODE.c: 86:    if(axis==((void*)0))return;
  6402                           
  6403                           ;incstack = 0
  6404  0030B0  512F               	movf	G_95@axis& (0+255),w,b
  6405  0030B2  1130               	iorwf	(G_95@axis+1)& (0+255),w,b
  6406  0030B4  B4D8               	btfsc	status,2,c
  6407  0030B6  0012               	return	
  6408                           
  6409                           ; BSR set to: 1
  6410                           ;GCODE.c: 87:    feed_state=g95;
  6411  0030B8  0E5F               	movlw	95
  6412  0030BA  6FE1               	movwf	_feed_state& (0+255),b
  6413                           
  6414                           ; BSR set to: 1
  6415                           ;GCODE.c: 88:    TMR2_SetInterruptHandler(G01_TMR2_ISR);
  6416  0030BC  0E4A               	movlw	low _G01_TMR2_ISR
  6417  0030BE  0100               	movlb	0	; () banked
  6418  0030C0  6F8C               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  6419  0030C2  0E56               	movlw	high _G01_TMR2_ISR
  6420  0030C4  6F8D               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6421  0030C6  ECDC  F03E         	call	_TMR2_SetInterruptHandler	;wreg free
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;GCODE.c: 89:    float distancia;;GCODE.c: 90:    for(int i=0;i<n;i++){
  6425  0030CA  0E00               	movlw	0
  6426  0030CC  0101               	movlb	1	; () banked
  6427  0030CE  6F3A               	movwf	(G_95@i+1)& (0+255),b
  6428  0030D0  0E00               	movlw	0
  6429  0030D2  6F39               	movwf	G_95@i& (0+255),b
  6430  0030D4  D06A               	goto	l15068
  6431  0030D6                     l15060:
  6432                           
  6433                           ; BSR set to: 1
  6434                           ;GCODE.c: 91:       if(axis[i].code=='F'){
  6435  0030D6  C139  F08C         	movff	G_95@i,___wmul@multiplier
  6436  0030DA  C13A  F08D         	movff	G_95@i+1,___wmul@multiplier+1
  6437  0030DE  0E00               	movlw	0
  6438  0030E0  0100               	movlb	0	; () banked
  6439  0030E2  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6440  0030E4  0E05               	movlw	5
  6441  0030E6  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6442  0030E8  ECA1  F03D         	call	___wmul	;wreg free
  6443  0030EC  518C               	movf	?___wmul& (0+255),w,b
  6444  0030EE  0101               	movlb	1	; () banked
  6445  0030F0  252F               	addwf	G_95@axis& (0+255),w,b
  6446  0030F2  6ED9               	movwf	fsr2l,c
  6447  0030F4  0100               	movlb	0	; () banked
  6448  0030F6  518D               	movf	(?___wmul+1)& (0+255),w,b
  6449  0030F8  0101               	movlb	1	; () banked
  6450  0030FA  2130               	addwfc	(G_95@axis+1)& (0+255),w,b
  6451  0030FC  6EDA               	movwf	fsr2h,c
  6452  0030FE  0E46               	movlw	70
  6453  003100  18DE               	xorwf	postinc2,w,c
  6454  003102  A4D8               	btfss	status,2,c
  6455  003104  D050               	goto	l15066
  6456                           
  6457                           ; BSR set to: 1
  6458                           ;GCODE.c: 92:          feed=axis[i].number/60;
  6459  003106  C139  F08C         	movff	G_95@i,___wmul@multiplier
  6460  00310A  C13A  F08D         	movff	G_95@i+1,___wmul@multiplier+1
  6461  00310E  0E00               	movlw	0
  6462  003110  0100               	movlb	0	; () banked
  6463  003112  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6464  003114  0E05               	movlw	5
  6465  003116  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6466  003118  ECA1  F03D         	call	___wmul	;wreg free
  6467  00311C  C12F  F133         	movff	G_95@axis,??_G_95
  6468  003120  C130  F134         	movff	G_95@axis+1,??_G_95+1
  6469  003124  518C               	movf	?___wmul& (0+255),w,b
  6470  003126  0101               	movlb	1	; () banked
  6471  003128  2733               	addwf	??_G_95& (0+255),f,b
  6472  00312A  0100               	movlb	0	; () banked
  6473  00312C  518D               	movf	(?___wmul+1)& (0+255),w,b
  6474  00312E  0101               	movlb	1	; () banked
  6475  003130  2334               	addwfc	(??_G_95+1)& (0+255),f,b
  6476  003132  0E01               	movlw	1
  6477  003134  2533               	addwf	??_G_95& (0+255),w,b
  6478  003136  6ED9               	movwf	fsr2l,c
  6479  003138  0E00               	movlw	0
  6480  00313A  2134               	addwfc	(??_G_95+1)& (0+255),w,b
  6481  00313C  6EDA               	movwf	fsr2h,c
  6482  00313E  CFDE F100          	movff	postinc2,___fldiv@b
  6483  003142  CFDE F101          	movff	postinc2,___fldiv@b+1
  6484  003146  CFDE F102          	movff	postinc2,___fldiv@b+2
  6485  00314A  CFDE F103          	movff	postinc2,___fldiv@b+3
  6486  00314E  0E00               	movlw	0
  6487  003150  6F04               	movwf	___fldiv@a& (0+255),b
  6488  003152  0E00               	movlw	0
  6489  003154  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  6490  003156  0E70               	movlw	112
  6491  003158  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  6492  00315A  0E42               	movlw	66
  6493  00315C  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  6494  00315E  EC9F  F019         	call	___fldiv	;wreg free
  6495  003162  C100  F1E6         	movff	?___fldiv,_feed
  6496  003166  C101  F1E7         	movff	?___fldiv+1,_feed+1
  6497  00316A  C102  F1E8         	movff	?___fldiv+2,_feed+2
  6498  00316E  C103  F1E9         	movff	?___fldiv+3,_feed+3
  6499                           
  6500                           ; BSR set to: 1
  6501                           ;GCODE.c: 93:          inverse_time_feed=1/feed;
  6502  003172  0E00               	movlw	0
  6503  003174  6F00               	movwf	___fldiv@b& (0+255),b
  6504  003176  0E00               	movlw	0
  6505  003178  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  6506  00317A  0E80               	movlw	128
  6507  00317C  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  6508  00317E  0E3F               	movlw	63
  6509  003180  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  6510  003182  C1E6  F104         	movff	_feed,___fldiv@a
  6511  003186  C1E7  F105         	movff	_feed+1,___fldiv@a+1
  6512  00318A  C1E8  F106         	movff	_feed+2,___fldiv@a+2
  6513  00318E  C1E9  F107         	movff	_feed+3,___fldiv@a+3
  6514  003192  EC9F  F019         	call	___fldiv	;wreg free
  6515  003196  C100  F1B5         	movff	?___fldiv,_inverse_time_feed
  6516  00319A  C101  F1B6         	movff	?___fldiv+1,_inverse_time_feed+1
  6517  00319E  C102  F1B7         	movff	?___fldiv+2,_inverse_time_feed+2
  6518  0031A2  C103  F1B8         	movff	?___fldiv+3,_inverse_time_feed+3
  6519  0031A6                     l15066:
  6520                           
  6521                           ; BSR set to: 1
  6522                           ;GCODE.c: 95:    }
  6523  0031A6  4B39               	infsnz	G_95@i& (0+255),f,b
  6524  0031A8  2B3A               	incf	(G_95@i+1)& (0+255),f,b
  6525  0031AA                     l15068:
  6526                           
  6527                           ; BSR set to: 1
  6528  0031AA  5131               	movf	G_95@n& (0+255),w,b
  6529  0031AC  5D39               	subwf	G_95@i& (0+255),w,b
  6530  0031AE  513A               	movf	(G_95@i+1)& (0+255),w,b
  6531  0031B0  0A80               	xorlw	128
  6532  0031B2  6F33               	movwf	??_G_95& (0+255),b
  6533  0031B4  5132               	movf	(G_95@n+1)& (0+255),w,b
  6534  0031B6  0A80               	xorlw	128
  6535  0031B8  5933               	subwfb	??_G_95& (0+255),w,b
  6536  0031BA  A0D8               	btfss	status,0,c
  6537  0031BC  D78C               	goto	l15060
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;GCODE.c: 96:    for(int i=0;i<n;i++){
  6541  0031BE  0E00               	movlw	0
  6542  0031C0  6F3C               	movwf	(G_95@i_3990+1)& (0+255),b
  6543  0031C2  0E00               	movlw	0
  6544  0031C4  6F3B               	movwf	G_95@i_3990& (0+255),b
  6545  0031C6  D0B0               	goto	l15084
  6546  0031C8                     l15072:
  6547                           
  6548                           ; BSR set to: 1
  6549                           ;GCODE.c: 97:       if(axis[i].code =='Z' || axis[i].code == 'z'){
  6550  0031C8  C13B  F08C         	movff	G_95@i_3990,___wmul@multiplier
  6551  0031CC  C13C  F08D         	movff	G_95@i_3990+1,___wmul@multiplier+1
  6552  0031D0  0E00               	movlw	0
  6553  0031D2  0100               	movlb	0	; () banked
  6554  0031D4  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6555  0031D6  0E05               	movlw	5
  6556  0031D8  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6557  0031DA  ECA1  F03D         	call	___wmul	;wreg free
  6558  0031DE  518C               	movf	?___wmul& (0+255),w,b
  6559  0031E0  0101               	movlb	1	; () banked
  6560  0031E2  252F               	addwf	G_95@axis& (0+255),w,b
  6561  0031E4  6ED9               	movwf	fsr2l,c
  6562  0031E6  0100               	movlb	0	; () banked
  6563  0031E8  518D               	movf	(?___wmul+1)& (0+255),w,b
  6564  0031EA  0101               	movlb	1	; () banked
  6565  0031EC  2130               	addwfc	(G_95@axis+1)& (0+255),w,b
  6566  0031EE  6EDA               	movwf	fsr2h,c
  6567  0031F0  0E5A               	movlw	90
  6568  0031F2  18DE               	xorwf	postinc2,w,c
  6569  0031F4  B4D8               	btfsc	status,2,c
  6570  0031F6  D018               	goto	u18500
  6571                           
  6572                           ; BSR set to: 1
  6573  0031F8  C13B  F08C         	movff	G_95@i_3990,___wmul@multiplier
  6574  0031FC  C13C  F08D         	movff	G_95@i_3990+1,___wmul@multiplier+1
  6575  003200  0E00               	movlw	0
  6576  003202  0100               	movlb	0	; () banked
  6577  003204  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6578  003206  0E05               	movlw	5
  6579  003208  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6580  00320A  ECA1  F03D         	call	___wmul	;wreg free
  6581  00320E  518C               	movf	?___wmul& (0+255),w,b
  6582  003210  0101               	movlb	1	; () banked
  6583  003212  252F               	addwf	G_95@axis& (0+255),w,b
  6584  003214  6ED9               	movwf	fsr2l,c
  6585  003216  0100               	movlb	0	; () banked
  6586  003218  518D               	movf	(?___wmul+1)& (0+255),w,b
  6587  00321A  0101               	movlb	1	; () banked
  6588  00321C  2130               	addwfc	(G_95@axis+1)& (0+255),w,b
  6589  00321E  6EDA               	movwf	fsr2h,c
  6590  003220  0E7A               	movlw	122
  6591  003222  18DE               	xorwf	postinc2,w,c
  6592  003224  A4D8               	btfss	status,2,c
  6593  003226  D07D               	goto	l15082
  6594  003228                     u18500:
  6595                           
  6596                           ; BSR set to: 1
  6597                           ;GCODE.c: 98:          distancia = axis[i].number - pos_relativa_Z;
  6598  003228  C13B  F08C         	movff	G_95@i_3990,___wmul@multiplier
  6599  00322C  C13C  F08D         	movff	G_95@i_3990+1,___wmul@multiplier+1
  6600  003230  0E00               	movlw	0
  6601  003232  0100               	movlb	0	; () banked
  6602  003234  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6603  003236  0E05               	movlw	5
  6604  003238  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6605  00323A  ECA1  F03D         	call	___wmul	;wreg free
  6606  00323E  C12F  F133         	movff	G_95@axis,??_G_95
  6607  003242  C130  F134         	movff	G_95@axis+1,??_G_95+1
  6608  003246  518C               	movf	?___wmul& (0+255),w,b
  6609  003248  0101               	movlb	1	; () banked
  6610  00324A  2733               	addwf	??_G_95& (0+255),f,b
  6611  00324C  0100               	movlb	0	; () banked
  6612  00324E  518D               	movf	(?___wmul+1)& (0+255),w,b
  6613  003250  0101               	movlb	1	; () banked
  6614  003252  2334               	addwfc	(??_G_95+1)& (0+255),f,b
  6615  003254  0E01               	movlw	1
  6616  003256  2533               	addwf	??_G_95& (0+255),w,b
  6617  003258  6ED9               	movwf	fsr2l,c
  6618  00325A  0E00               	movlw	0
  6619  00325C  2134               	addwfc	(??_G_95+1)& (0+255),w,b
  6620  00325E  6EDA               	movwf	fsr2h,c
  6621  003260  CFDE F119          	movff	postinc2,___flsub@b
  6622  003264  CFDE F11A          	movff	postinc2,___flsub@b+1
  6623  003268  CFDE F11B          	movff	postinc2,___flsub@b+2
  6624  00326C  CFDE F11C          	movff	postinc2,___flsub@b+3
  6625  003270  C2C2  F11D         	movff	_pos_relativa_Z,___flsub@a
  6626  003274  C2C3  F11E         	movff	_pos_relativa_Z+1,___flsub@a+1
  6627  003278  C2C4  F11F         	movff	_pos_relativa_Z+2,___flsub@a+2
  6628  00327C  C2C5  F120         	movff	_pos_relativa_Z+3,___flsub@a+3
  6629  003280  EC66  F03A         	call	___flsub	;wreg free
  6630  003284  C119  F135         	movff	?___flsub,G_95@distancia
  6631  003288  C11A  F136         	movff	?___flsub+1,G_95@distancia+1
  6632  00328C  C11B  F137         	movff	?___flsub+2,G_95@distancia+2
  6633  003290  C11C  F138         	movff	?___flsub+3,G_95@distancia+3
  6634                           
  6635                           ;GCODE.c: 100:          pos_relativa_Z= axis[i].number;
  6636  003294  C13B  F08C         	movff	G_95@i_3990,___wmul@multiplier
  6637  003298  C13C  F08D         	movff	G_95@i_3990+1,___wmul@multiplier+1
  6638  00329C  0E00               	movlw	0
  6639  00329E  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6640  0032A0  0E05               	movlw	5
  6641  0032A2  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6642  0032A4  ECA1  F03D         	call	___wmul	;wreg free
  6643  0032A8  C12F  F133         	movff	G_95@axis,??_G_95
  6644  0032AC  C130  F134         	movff	G_95@axis+1,??_G_95+1
  6645  0032B0  518C               	movf	?___wmul& (0+255),w,b
  6646  0032B2  0101               	movlb	1	; () banked
  6647  0032B4  2733               	addwf	??_G_95& (0+255),f,b
  6648  0032B6  0100               	movlb	0	; () banked
  6649  0032B8  518D               	movf	(?___wmul+1)& (0+255),w,b
  6650  0032BA  0101               	movlb	1	; () banked
  6651  0032BC  2334               	addwfc	(??_G_95+1)& (0+255),f,b
  6652  0032BE  0E01               	movlw	1
  6653  0032C0  2533               	addwf	??_G_95& (0+255),w,b
  6654  0032C2  6ED9               	movwf	fsr2l,c
  6655  0032C4  0E00               	movlw	0
  6656  0032C6  2134               	addwfc	(??_G_95+1)& (0+255),w,b
  6657  0032C8  6EDA               	movwf	fsr2h,c
  6658  0032CA  CFDE F2C2          	movff	postinc2,_pos_relativa_Z
  6659  0032CE  CFDE F2C3          	movff	postinc2,_pos_relativa_Z+1
  6660  0032D2  CFDE F2C4          	movff	postinc2,_pos_relativa_Z+2
  6661  0032D6  CFDE F2C5          	movff	postinc2,_pos_relativa_Z+3
  6662                           
  6663                           ; BSR set to: 1
  6664                           ;GCODE.c: 101:          pos_absoluta_Z= pos_absoluta_Z + distancia;
  6665  0032DA  C2BE  F08C         	movff	_pos_absoluta_Z,___fladd@b
  6666  0032DE  C2BF  F08D         	movff	_pos_absoluta_Z+1,___fladd@b+1
  6667  0032E2  C2C0  F08E         	movff	_pos_absoluta_Z+2,___fladd@b+2
  6668  0032E6  C2C1  F08F         	movff	_pos_absoluta_Z+3,___fladd@b+3
  6669  0032EA  C135  F090         	movff	G_95@distancia,___fladd@a
  6670  0032EE  C136  F091         	movff	G_95@distancia+1,___fladd@a+1
  6671  0032F2  C137  F092         	movff	G_95@distancia+2,___fladd@a+2
  6672  0032F6  C138  F093         	movff	G_95@distancia+3,___fladd@a+3
  6673  0032FA  ECE8  F013         	call	___fladd	;wreg free
  6674  0032FE  C08C  F2BE         	movff	?___fladd,_pos_absoluta_Z
  6675  003302  C08D  F2BF         	movff	?___fladd+1,_pos_absoluta_Z+1
  6676  003306  C08E  F2C0         	movff	?___fladd+2,_pos_absoluta_Z+2
  6677  00330A  C08F  F2C1         	movff	?___fladd+3,_pos_absoluta_Z+3
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;GCODE.c: 102:          mover_2(distancia);
  6681  00330E  C135  F125         	movff	G_95@distancia,mover_2@distancia
  6682  003312  C136  F126         	movff	G_95@distancia+1,mover_2@distancia+1
  6683  003316  C137  F127         	movff	G_95@distancia+2,mover_2@distancia+2
  6684  00331A  C138  F128         	movff	G_95@distancia+3,mover_2@distancia+3
  6685  00331E  ECC2  F00E         	call	_mover_2	;wreg free
  6686  003322                     l15082:
  6687                           
  6688                           ;GCODE.c: 104:    }
  6689  003322  0101               	movlb	1	; () banked
  6690  003324  4B3B               	infsnz	G_95@i_3990& (0+255),f,b
  6691  003326  2B3C               	incf	(G_95@i_3990+1)& (0+255),f,b
  6692  003328                     l15084:
  6693                           
  6694                           ; BSR set to: 1
  6695  003328  5131               	movf	G_95@n& (0+255),w,b
  6696  00332A  5D3B               	subwf	G_95@i_3990& (0+255),w,b
  6697  00332C  513C               	movf	(G_95@i_3990+1)& (0+255),w,b
  6698  00332E  0A80               	xorlw	128
  6699  003330  6F33               	movwf	??_G_95& (0+255),b
  6700  003332  5132               	movf	(G_95@n+1)& (0+255),w,b
  6701  003334  0A80               	xorlw	128
  6702  003336  5933               	subwfb	??_G_95& (0+255),w,b
  6703  003338  B0D8               	btfsc	status,0,c
  6704  00333A  0012               	return	
  6705  00333C  D745               	goto	l15072
  6706  00333E                     __end_of_G_95:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function _G_53 *****************
  6710 ;; Defined at:
  6711 ;;		line 108 in file "GCODE.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  axis            2   50[BANK0 ] PTR struct Comando_T
  6714 ;;		 -> executeCommand@comando(100), 
  6715 ;;  n               2   52[BANK0 ] int 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  i               2   56[BANK0 ] int 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 3F/0
  6724 ;;		On exit  : 3F/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6727 ;;      Params:         0       4       0       0       0       0       0       0       0
  6728 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6729 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6730 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6731 ;;Total ram usage:        8 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 11
  6734 ;; This function calls:
  6735 ;;		___wmul
  6736 ;; This function is called by:
  6737 ;;		_executeCommand
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text21
  6742  006732                     __ptext21:
  6743                           	callstack 0
  6744  006732                     _G_53:
  6745                           	callstack 18
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;GCODE.c: 109:    for(int i=0;i<n;i++){
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;incstack = 0
  6752  006732  0E00               	movlw	0
  6753  006734  6F99               	movwf	(G_53@i+1)& (0+255),b
  6754  006736  0E00               	movlw	0
  6755  006738  6F98               	movwf	G_53@i& (0+255),b
  6756  00673A  D04A               	goto	l15096
  6757  00673C                     l15088:
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;GCODE.c: 110:       if(axis[i].code =='Z' || axis[i].code == 'z'){
  6761  00673C  C098  F08C         	movff	G_53@i,___wmul@multiplier
  6762  006740  C099  F08D         	movff	G_53@i+1,___wmul@multiplier+1
  6763  006744  0E00               	movlw	0
  6764  006746  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6765  006748  0E05               	movlw	5
  6766  00674A  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6767  00674C  ECA1  F03D         	call	___wmul	;wreg free
  6768  006750  518C               	movf	?___wmul& (0+255),w,b
  6769  006752  2592               	addwf	G_53@axis& (0+255),w,b
  6770  006754  6ED9               	movwf	fsr2l,c
  6771  006756  518D               	movf	(?___wmul+1)& (0+255),w,b
  6772  006758  2193               	addwfc	(G_53@axis+1)& (0+255),w,b
  6773  00675A  6EDA               	movwf	fsr2h,c
  6774  00675C  0E5A               	movlw	90
  6775  00675E  18DE               	xorwf	postinc2,w,c
  6776  006760  B4D8               	btfsc	status,2,c
  6777  006762  D014               	goto	u18530
  6778                           
  6779                           ; BSR set to: 0
  6780  006764  C098  F08C         	movff	G_53@i,___wmul@multiplier
  6781  006768  C099  F08D         	movff	G_53@i+1,___wmul@multiplier+1
  6782  00676C  0E00               	movlw	0
  6783  00676E  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6784  006770  0E05               	movlw	5
  6785  006772  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6786  006774  ECA1  F03D         	call	___wmul	;wreg free
  6787  006778  518C               	movf	?___wmul& (0+255),w,b
  6788  00677A  2592               	addwf	G_53@axis& (0+255),w,b
  6789  00677C  6ED9               	movwf	fsr2l,c
  6790  00677E  518D               	movf	(?___wmul+1)& (0+255),w,b
  6791  006780  2193               	addwfc	(G_53@axis+1)& (0+255),w,b
  6792  006782  6EDA               	movwf	fsr2h,c
  6793  006784  0E7A               	movlw	122
  6794  006786  18DE               	xorwf	postinc2,w,c
  6795  006788  A4D8               	btfss	status,2,c
  6796  00678A  D020               	goto	l15094
  6797  00678C                     u18530:
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;GCODE.c: 111:          pos_relativa_Z=axis[i].number;
  6801  00678C  C098  F08C         	movff	G_53@i,___wmul@multiplier
  6802  006790  C099  F08D         	movff	G_53@i+1,___wmul@multiplier+1
  6803  006794  0E00               	movlw	0
  6804  006796  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6805  006798  0E05               	movlw	5
  6806  00679A  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6807  00679C  ECA1  F03D         	call	___wmul	;wreg free
  6808  0067A0  C092  F096         	movff	G_53@axis,??_G_53
  6809  0067A4  C093  F097         	movff	G_53@axis+1,??_G_53+1
  6810  0067A8  518C               	movf	?___wmul& (0+255),w,b
  6811  0067AA  2796               	addwf	??_G_53& (0+255),f,b
  6812  0067AC  518D               	movf	(?___wmul+1)& (0+255),w,b
  6813  0067AE  2397               	addwfc	(??_G_53+1)& (0+255),f,b
  6814  0067B0  0E01               	movlw	1
  6815  0067B2  2596               	addwf	??_G_53& (0+255),w,b
  6816  0067B4  6ED9               	movwf	fsr2l,c
  6817  0067B6  0E00               	movlw	0
  6818  0067B8  2197               	addwfc	(??_G_53+1)& (0+255),w,b
  6819  0067BA  6EDA               	movwf	fsr2h,c
  6820  0067BC  CFDE F2C2          	movff	postinc2,_pos_relativa_Z
  6821  0067C0  CFDE F2C3          	movff	postinc2,_pos_relativa_Z+1
  6822  0067C4  CFDE F2C4          	movff	postinc2,_pos_relativa_Z+2
  6823  0067C8  CFDE F2C5          	movff	postinc2,_pos_relativa_Z+3
  6824  0067CC                     l15094:
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;GCODE.c: 113:    }
  6828  0067CC  4B98               	infsnz	G_53@i& (0+255),f,b
  6829  0067CE  2B99               	incf	(G_53@i+1)& (0+255),f,b
  6830  0067D0                     l15096:
  6831                           
  6832                           ; BSR set to: 0
  6833  0067D0  5194               	movf	G_53@n& (0+255),w,b
  6834  0067D2  5D98               	subwf	G_53@i& (0+255),w,b
  6835  0067D4  5199               	movf	(G_53@i+1)& (0+255),w,b
  6836  0067D6  0A80               	xorlw	128
  6837  0067D8  6F96               	movwf	??_G_53& (0+255),b
  6838  0067DA  5195               	movf	(G_53@n+1)& (0+255),w,b
  6839  0067DC  0A80               	xorlw	128
  6840  0067DE  5996               	subwfb	??_G_53& (0+255),w,b
  6841  0067E0  B0D8               	btfsc	status,0,c
  6842  0067E2  0012               	return	
  6843  0067E4  D7AB               	goto	l15088
  6844  0067E6                     __end_of_G_53:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function _G_01 *****************
  6848 ;; Defined at:
  6849 ;;		line 62 in file "GCODE.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  axis            2   47[BANK1 ] PTR struct Comando_T
  6852 ;;		 -> executeCommand@comando(100), 
  6853 ;;  n               2   49[BANK1 ] int 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;  i               2   59[BANK1 ] int 
  6856 ;;  i               2   57[BANK1 ] int 
  6857 ;;  distancia       4   53[BANK1 ] float 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 3F/1
  6864 ;;		On exit  : 3F/1
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6867 ;;      Params:         0       0       4       0       0       0       0       0       0
  6868 ;;      Locals:         0       0       8       0       0       0       0       0       0
  6869 ;;      Temps:          0       0       2       0       0       0       0       0       0
  6870 ;;      Totals:         0       0      14       0       0       0       0       0       0
  6871 ;;Total ram usage:       14 bytes
  6872 ;; Hardware stack levels used: 1
  6873 ;; Hardware stack levels required when called: 12
  6874 ;; This function calls:
  6875 ;;		_TMR2_SetInterruptHandler
  6876 ;;		___fladd
  6877 ;;		___fldiv
  6878 ;;		___flsub
  6879 ;;		___wmul
  6880 ;;		_mover_2
  6881 ;; This function is called by:
  6882 ;;		_executeCommand
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text22
  6887  003850                     __ptext22:
  6888                           	callstack 0
  6889  003850                     _G_01:
  6890                           	callstack 17
  6891                           
  6892                           ; BSR set to: 1
  6893                           ;GCODE.c: 63:    if(axis==((void*)0))return;
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;incstack = 0
  6897  003850  512F               	movf	G_01@axis& (0+255),w,b
  6898  003852  1130               	iorwf	(G_01@axis+1)& (0+255),w,b
  6899  003854  B4D8               	btfsc	status,2,c
  6900  003856  0012               	return	
  6901                           
  6902                           ; BSR set to: 1
  6903                           ;GCODE.c: 64:    feed_state=g01;
  6904  003858  0E01               	movlw	1
  6905  00385A  6FE1               	movwf	_feed_state& (0+255),b
  6906                           
  6907                           ; BSR set to: 1
  6908                           ;GCODE.c: 65:    TMR2_SetInterruptHandler(G01_TMR2_ISR);
  6909  00385C  0E4A               	movlw	low _G01_TMR2_ISR
  6910  00385E  0100               	movlb	0	; () banked
  6911  003860  6F8C               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  6912  003862  0E56               	movlw	high _G01_TMR2_ISR
  6913  003864  6F8D               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6914  003866  ECDC  F03E         	call	_TMR2_SetInterruptHandler	;wreg free
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;GCODE.c: 66:    float distancia;;GCODE.c: 67:    feed=400;
  6918  00386A  0E00               	movlw	0
  6919  00386C  0101               	movlb	1	; () banked
  6920  00386E  6FE6               	movwf	_feed& (0+255),b
  6921  003870  0E00               	movlw	0
  6922  003872  6FE7               	movwf	(_feed+1)& (0+255),b
  6923  003874  0EC8               	movlw	200
  6924  003876  6FE8               	movwf	(_feed+2)& (0+255),b
  6925  003878  0E43               	movlw	67
  6926  00387A  6FE9               	movwf	(_feed+3)& (0+255),b
  6927                           
  6928                           ; BSR set to: 1
  6929                           ;GCODE.c: 68:    for(int i=0;i<n;i++){
  6930  00387C  0E00               	movlw	0
  6931  00387E  6F3A               	movwf	(G_01@i+1)& (0+255),b
  6932  003880  0E00               	movlw	0
  6933  003882  6F39               	movwf	G_01@i& (0+255),b
  6934  003884  D03E               	goto	l15030
  6935  003886                     l15024:
  6936                           
  6937                           ; BSR set to: 1
  6938                           ;GCODE.c: 69:       if(axis[i].code=='F'){
  6939  003886  C139  F08C         	movff	G_01@i,___wmul@multiplier
  6940  00388A  C13A  F08D         	movff	G_01@i+1,___wmul@multiplier+1
  6941  00388E  0E00               	movlw	0
  6942  003890  0100               	movlb	0	; () banked
  6943  003892  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6944  003894  0E05               	movlw	5
  6945  003896  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6946  003898  ECA1  F03D         	call	___wmul	;wreg free
  6947  00389C  518C               	movf	?___wmul& (0+255),w,b
  6948  00389E  0101               	movlb	1	; () banked
  6949  0038A0  252F               	addwf	G_01@axis& (0+255),w,b
  6950  0038A2  6ED9               	movwf	fsr2l,c
  6951  0038A4  0100               	movlb	0	; () banked
  6952  0038A6  518D               	movf	(?___wmul+1)& (0+255),w,b
  6953  0038A8  0101               	movlb	1	; () banked
  6954  0038AA  2130               	addwfc	(G_01@axis+1)& (0+255),w,b
  6955  0038AC  6EDA               	movwf	fsr2h,c
  6956  0038AE  0E46               	movlw	70
  6957  0038B0  18DE               	xorwf	postinc2,w,c
  6958  0038B2  A4D8               	btfss	status,2,c
  6959  0038B4  D024               	goto	l15028
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;GCODE.c: 70:          feed=axis[i].number;
  6963  0038B6  C139  F08C         	movff	G_01@i,___wmul@multiplier
  6964  0038BA  C13A  F08D         	movff	G_01@i+1,___wmul@multiplier+1
  6965  0038BE  0E00               	movlw	0
  6966  0038C0  0100               	movlb	0	; () banked
  6967  0038C2  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6968  0038C4  0E05               	movlw	5
  6969  0038C6  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  6970  0038C8  ECA1  F03D         	call	___wmul	;wreg free
  6971  0038CC  C12F  F133         	movff	G_01@axis,??_G_01
  6972  0038D0  C130  F134         	movff	G_01@axis+1,??_G_01+1
  6973  0038D4  518C               	movf	?___wmul& (0+255),w,b
  6974  0038D6  0101               	movlb	1	; () banked
  6975  0038D8  2733               	addwf	??_G_01& (0+255),f,b
  6976  0038DA  0100               	movlb	0	; () banked
  6977  0038DC  518D               	movf	(?___wmul+1)& (0+255),w,b
  6978  0038DE  0101               	movlb	1	; () banked
  6979  0038E0  2334               	addwfc	(??_G_01+1)& (0+255),f,b
  6980  0038E2  0E01               	movlw	1
  6981  0038E4  2533               	addwf	??_G_01& (0+255),w,b
  6982  0038E6  6ED9               	movwf	fsr2l,c
  6983  0038E8  0E00               	movlw	0
  6984  0038EA  2134               	addwfc	(??_G_01+1)& (0+255),w,b
  6985  0038EC  6EDA               	movwf	fsr2h,c
  6986  0038EE  CFDE F1E6          	movff	postinc2,_feed
  6987  0038F2  CFDE F1E7          	movff	postinc2,_feed+1
  6988  0038F6  CFDE F1E8          	movff	postinc2,_feed+2
  6989  0038FA  CFDE F1E9          	movff	postinc2,_feed+3
  6990  0038FE                     l15028:
  6991                           
  6992                           ; BSR set to: 1
  6993                           ;GCODE.c: 72:    }
  6994  0038FE  4B39               	infsnz	G_01@i& (0+255),f,b
  6995  003900  2B3A               	incf	(G_01@i+1)& (0+255),f,b
  6996  003902                     l15030:
  6997                           
  6998                           ; BSR set to: 1
  6999  003902  5131               	movf	G_01@n& (0+255),w,b
  7000  003904  5D39               	subwf	G_01@i& (0+255),w,b
  7001  003906  513A               	movf	(G_01@i+1)& (0+255),w,b
  7002  003908  0A80               	xorlw	128
  7003  00390A  6F33               	movwf	??_G_01& (0+255),b
  7004  00390C  5132               	movf	(G_01@n+1)& (0+255),w,b
  7005  00390E  0A80               	xorlw	128
  7006  003910  5933               	subwfb	??_G_01& (0+255),w,b
  7007  003912  A0D8               	btfss	status,0,c
  7008  003914  D7B8               	goto	l15024
  7009                           
  7010                           ; BSR set to: 1
  7011                           ;GCODE.c: 73:    inverse_time_feed=1/feed;
  7012  003916  0E00               	movlw	0
  7013  003918  6F00               	movwf	___fldiv@b& (0+255),b
  7014  00391A  0E00               	movlw	0
  7015  00391C  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  7016  00391E  0E80               	movlw	128
  7017  003920  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  7018  003922  0E3F               	movlw	63
  7019  003924  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  7020  003926  C1E6  F104         	movff	_feed,___fldiv@a
  7021  00392A  C1E7  F105         	movff	_feed+1,___fldiv@a+1
  7022  00392E  C1E8  F106         	movff	_feed+2,___fldiv@a+2
  7023  003932  C1E9  F107         	movff	_feed+3,___fldiv@a+3
  7024  003936  EC9F  F019         	call	___fldiv	;wreg free
  7025  00393A  C100  F1B5         	movff	?___fldiv,_inverse_time_feed
  7026  00393E  C101  F1B6         	movff	?___fldiv+1,_inverse_time_feed+1
  7027  003942  C102  F1B7         	movff	?___fldiv+2,_inverse_time_feed+2
  7028  003946  C103  F1B8         	movff	?___fldiv+3,_inverse_time_feed+3
  7029                           
  7030                           ; BSR set to: 1
  7031                           ;GCODE.c: 74:    for(int i=0;i<n;i++){
  7032  00394A  0E00               	movlw	0
  7033  00394C  6F3C               	movwf	(G_01@i_3982+1)& (0+255),b
  7034  00394E  0E00               	movlw	0
  7035  003950  6F3B               	movwf	G_01@i_3982& (0+255),b
  7036  003952  D0B0               	goto	l15048
  7037  003954                     l15036:
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;GCODE.c: 75:       if(axis[i].code =='Z' || axis[i].code == 'z'){
  7041  003954  C13B  F08C         	movff	G_01@i_3982,___wmul@multiplier
  7042  003958  C13C  F08D         	movff	G_01@i_3982+1,___wmul@multiplier+1
  7043  00395C  0E00               	movlw	0
  7044  00395E  0100               	movlb	0	; () banked
  7045  003960  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7046  003962  0E05               	movlw	5
  7047  003964  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  7048  003966  ECA1  F03D         	call	___wmul	;wreg free
  7049  00396A  518C               	movf	?___wmul& (0+255),w,b
  7050  00396C  0101               	movlb	1	; () banked
  7051  00396E  252F               	addwf	G_01@axis& (0+255),w,b
  7052  003970  6ED9               	movwf	fsr2l,c
  7053  003972  0100               	movlb	0	; () banked
  7054  003974  518D               	movf	(?___wmul+1)& (0+255),w,b
  7055  003976  0101               	movlb	1	; () banked
  7056  003978  2130               	addwfc	(G_01@axis+1)& (0+255),w,b
  7057  00397A  6EDA               	movwf	fsr2h,c
  7058  00397C  0E5A               	movlw	90
  7059  00397E  18DE               	xorwf	postinc2,w,c
  7060  003980  B4D8               	btfsc	status,2,c
  7061  003982  D018               	goto	u18440
  7062                           
  7063                           ; BSR set to: 1
  7064  003984  C13B  F08C         	movff	G_01@i_3982,___wmul@multiplier
  7065  003988  C13C  F08D         	movff	G_01@i_3982+1,___wmul@multiplier+1
  7066  00398C  0E00               	movlw	0
  7067  00398E  0100               	movlb	0	; () banked
  7068  003990  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7069  003992  0E05               	movlw	5
  7070  003994  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  7071  003996  ECA1  F03D         	call	___wmul	;wreg free
  7072  00399A  518C               	movf	?___wmul& (0+255),w,b
  7073  00399C  0101               	movlb	1	; () banked
  7074  00399E  252F               	addwf	G_01@axis& (0+255),w,b
  7075  0039A0  6ED9               	movwf	fsr2l,c
  7076  0039A2  0100               	movlb	0	; () banked
  7077  0039A4  518D               	movf	(?___wmul+1)& (0+255),w,b
  7078  0039A6  0101               	movlb	1	; () banked
  7079  0039A8  2130               	addwfc	(G_01@axis+1)& (0+255),w,b
  7080  0039AA  6EDA               	movwf	fsr2h,c
  7081  0039AC  0E7A               	movlw	122
  7082  0039AE  18DE               	xorwf	postinc2,w,c
  7083  0039B0  A4D8               	btfss	status,2,c
  7084  0039B2  D07D               	goto	l15046
  7085  0039B4                     u18440:
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;GCODE.c: 76:          distancia = axis[i].number - pos_relativa_Z;
  7089  0039B4  C13B  F08C         	movff	G_01@i_3982,___wmul@multiplier
  7090  0039B8  C13C  F08D         	movff	G_01@i_3982+1,___wmul@multiplier+1
  7091  0039BC  0E00               	movlw	0
  7092  0039BE  0100               	movlb	0	; () banked
  7093  0039C0  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7094  0039C2  0E05               	movlw	5
  7095  0039C4  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  7096  0039C6  ECA1  F03D         	call	___wmul	;wreg free
  7097  0039CA  C12F  F133         	movff	G_01@axis,??_G_01
  7098  0039CE  C130  F134         	movff	G_01@axis+1,??_G_01+1
  7099  0039D2  518C               	movf	?___wmul& (0+255),w,b
  7100  0039D4  0101               	movlb	1	; () banked
  7101  0039D6  2733               	addwf	??_G_01& (0+255),f,b
  7102  0039D8  0100               	movlb	0	; () banked
  7103  0039DA  518D               	movf	(?___wmul+1)& (0+255),w,b
  7104  0039DC  0101               	movlb	1	; () banked
  7105  0039DE  2334               	addwfc	(??_G_01+1)& (0+255),f,b
  7106  0039E0  0E01               	movlw	1
  7107  0039E2  2533               	addwf	??_G_01& (0+255),w,b
  7108  0039E4  6ED9               	movwf	fsr2l,c
  7109  0039E6  0E00               	movlw	0
  7110  0039E8  2134               	addwfc	(??_G_01+1)& (0+255),w,b
  7111  0039EA  6EDA               	movwf	fsr2h,c
  7112  0039EC  CFDE F119          	movff	postinc2,___flsub@b
  7113  0039F0  CFDE F11A          	movff	postinc2,___flsub@b+1
  7114  0039F4  CFDE F11B          	movff	postinc2,___flsub@b+2
  7115  0039F8  CFDE F11C          	movff	postinc2,___flsub@b+3
  7116  0039FC  C2C2  F11D         	movff	_pos_relativa_Z,___flsub@a
  7117  003A00  C2C3  F11E         	movff	_pos_relativa_Z+1,___flsub@a+1
  7118  003A04  C2C4  F11F         	movff	_pos_relativa_Z+2,___flsub@a+2
  7119  003A08  C2C5  F120         	movff	_pos_relativa_Z+3,___flsub@a+3
  7120  003A0C  EC66  F03A         	call	___flsub	;wreg free
  7121  003A10  C119  F135         	movff	?___flsub,G_01@distancia
  7122  003A14  C11A  F136         	movff	?___flsub+1,G_01@distancia+1
  7123  003A18  C11B  F137         	movff	?___flsub+2,G_01@distancia+2
  7124  003A1C  C11C  F138         	movff	?___flsub+3,G_01@distancia+3
  7125                           
  7126                           ;GCODE.c: 78:          pos_relativa_Z= axis[i].number;
  7127  003A20  C13B  F08C         	movff	G_01@i_3982,___wmul@multiplier
  7128  003A24  C13C  F08D         	movff	G_01@i_3982+1,___wmul@multiplier+1
  7129  003A28  0E00               	movlw	0
  7130  003A2A  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7131  003A2C  0E05               	movlw	5
  7132  003A2E  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  7133  003A30  ECA1  F03D         	call	___wmul	;wreg free
  7134  003A34  C12F  F133         	movff	G_01@axis,??_G_01
  7135  003A38  C130  F134         	movff	G_01@axis+1,??_G_01+1
  7136  003A3C  518C               	movf	?___wmul& (0+255),w,b
  7137  003A3E  0101               	movlb	1	; () banked
  7138  003A40  2733               	addwf	??_G_01& (0+255),f,b
  7139  003A42  0100               	movlb	0	; () banked
  7140  003A44  518D               	movf	(?___wmul+1)& (0+255),w,b
  7141  003A46  0101               	movlb	1	; () banked
  7142  003A48  2334               	addwfc	(??_G_01+1)& (0+255),f,b
  7143  003A4A  0E01               	movlw	1
  7144  003A4C  2533               	addwf	??_G_01& (0+255),w,b
  7145  003A4E  6ED9               	movwf	fsr2l,c
  7146  003A50  0E00               	movlw	0
  7147  003A52  2134               	addwfc	(??_G_01+1)& (0+255),w,b
  7148  003A54  6EDA               	movwf	fsr2h,c
  7149  003A56  CFDE F2C2          	movff	postinc2,_pos_relativa_Z
  7150  003A5A  CFDE F2C3          	movff	postinc2,_pos_relativa_Z+1
  7151  003A5E  CFDE F2C4          	movff	postinc2,_pos_relativa_Z+2
  7152  003A62  CFDE F2C5          	movff	postinc2,_pos_relativa_Z+3
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;GCODE.c: 79:          pos_absoluta_Z= pos_absoluta_Z + distancia;
  7156  003A66  C2BE  F08C         	movff	_pos_absoluta_Z,___fladd@b
  7157  003A6A  C2BF  F08D         	movff	_pos_absoluta_Z+1,___fladd@b+1
  7158  003A6E  C2C0  F08E         	movff	_pos_absoluta_Z+2,___fladd@b+2
  7159  003A72  C2C1  F08F         	movff	_pos_absoluta_Z+3,___fladd@b+3
  7160  003A76  C135  F090         	movff	G_01@distancia,___fladd@a
  7161  003A7A  C136  F091         	movff	G_01@distancia+1,___fladd@a+1
  7162  003A7E  C137  F092         	movff	G_01@distancia+2,___fladd@a+2
  7163  003A82  C138  F093         	movff	G_01@distancia+3,___fladd@a+3
  7164  003A86  ECE8  F013         	call	___fladd	;wreg free
  7165  003A8A  C08C  F2BE         	movff	?___fladd,_pos_absoluta_Z
  7166  003A8E  C08D  F2BF         	movff	?___fladd+1,_pos_absoluta_Z+1
  7167  003A92  C08E  F2C0         	movff	?___fladd+2,_pos_absoluta_Z+2
  7168  003A96  C08F  F2C1         	movff	?___fladd+3,_pos_absoluta_Z+3
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;GCODE.c: 80:          mover_2(distancia);
  7172  003A9A  C135  F125         	movff	G_01@distancia,mover_2@distancia
  7173  003A9E  C136  F126         	movff	G_01@distancia+1,mover_2@distancia+1
  7174  003AA2  C137  F127         	movff	G_01@distancia+2,mover_2@distancia+2
  7175  003AA6  C138  F128         	movff	G_01@distancia+3,mover_2@distancia+3
  7176  003AAA  ECC2  F00E         	call	_mover_2	;wreg free
  7177  003AAE                     l15046:
  7178                           
  7179                           ;GCODE.c: 82:    }
  7180  003AAE  0101               	movlb	1	; () banked
  7181  003AB0  4B3B               	infsnz	G_01@i_3982& (0+255),f,b
  7182  003AB2  2B3C               	incf	(G_01@i_3982+1)& (0+255),f,b
  7183  003AB4                     l15048:
  7184                           
  7185                           ; BSR set to: 1
  7186  003AB4  5131               	movf	G_01@n& (0+255),w,b
  7187  003AB6  5D3B               	subwf	G_01@i_3982& (0+255),w,b
  7188  003AB8  513C               	movf	(G_01@i_3982+1)& (0+255),w,b
  7189  003ABA  0A80               	xorlw	128
  7190  003ABC  6F33               	movwf	??_G_01& (0+255),b
  7191  003ABE  5132               	movf	(G_01@n+1)& (0+255),w,b
  7192  003AC0  0A80               	xorlw	128
  7193  003AC2  5933               	subwfb	??_G_01& (0+255),w,b
  7194  003AC4  B0D8               	btfsc	status,0,c
  7195  003AC6  0012               	return	
  7196  003AC8  D745               	goto	l15036
  7197  003ACA                     __end_of_G_01:
  7198                           	callstack 0
  7199                           
  7200 ;; *************** function _mover_2 *****************
  7201 ;; Defined at:
  7202 ;;		line 141 in file "guia.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  distancia       4   37[BANK1 ] float 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      void 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 3F/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7216 ;;      Params:         0       0       4       0       0       0       0       0       0
  7217 ;;      Locals:         0       0       4       0       0       0       0       0       0
  7218 ;;      Temps:          0       0       2       0       0       0       0       0       0
  7219 ;;      Totals:         0       0      10       0       0       0       0       0       0
  7220 ;;Total ram usage:       10 bytes
  7221 ;; Hardware stack levels used: 1
  7222 ;; Hardware stack levels required when called: 11
  7223 ;; This function calls:
  7224 ;;		_TMR2_LoadPeriodRegister
  7225 ;;		_TMR2_StartTimer
  7226 ;;		_TMR2_WriteTimer
  7227 ;;		___fldiv
  7228 ;;		___fleq
  7229 ;;		___flge
  7230 ;;		___flmul
  7231 ;;		___flneg
  7232 ;;		___fltol
  7233 ;;		___lmul
  7234 ;;		___xxtofl
  7235 ;;		_setMicroStep
  7236 ;; This function is called by:
  7237 ;;		_G_01
  7238 ;;		_G_95
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text23
  7243  001D84                     __ptext23:
  7244                           	callstack 0
  7245  001D84                     _mover_2:
  7246                           	callstack 17
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;guia.c: 142:    while(busy==1){};
  7250                           
  7251                           ; BSR set to: 1
  7252                           ;incstack = 0
  7253  001D84  0101               	movlb	1	; () banked
  7254  001D86  05DD               	decf	_busy& (0+255),w,b
  7255  001D88  B4D8               	btfsc	status,2,c
  7256  001D8A  D7FC               	goto	__ptext23
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;guia.c: 143:    if(distancia==0)return;
  7260  001D8C  C125  F08C         	movff	mover_2@distancia,___fleq@ff1
  7261  001D90  C126  F08D         	movff	mover_2@distancia+1,___fleq@ff1+1
  7262  001D94  C127  F08E         	movff	mover_2@distancia+2,___fleq@ff1+2
  7263  001D98  C128  F08F         	movff	mover_2@distancia+3,___fleq@ff1+3
  7264  001D9C  0E00               	movlw	0
  7265  001D9E  0100               	movlb	0	; () banked
  7266  001DA0  6F90               	movwf	___fleq@ff2& (0+255),b
  7267  001DA2  0E00               	movlw	0
  7268  001DA4  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
  7269  001DA6  0E00               	movlw	0
  7270  001DA8  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
  7271  001DAA  0E00               	movlw	0
  7272  001DAC  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
  7273  001DAE  EC3B  F037         	call	___fleq	;wreg free
  7274  001DB2  B0D8               	btfsc	status,0,c
  7275  001DB4  0012               	return	
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;guia.c: 144:    busy=1;
  7279  001DB6  0E01               	movlw	1
  7280  001DB8  0101               	movlb	1	; () banked
  7281  001DBA  6FDD               	movwf	_busy& (0+255),b
  7282                           
  7283                           ; BSR set to: 1
  7284                           ;guia.c: 145:    LATBbits.LATB0=0;
  7285  001DBC  908A               	bcf	138,0,c	;volatile
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;guia.c: 146:    if(distancia<0){
  7289  001DBE  AF28               	btfss	(mover_2@distancia+3)& (0+255),7,b
  7290  001DC0  D014               	goto	l1244
  7291                           
  7292                           ; BSR set to: 1
  7293                           ;guia.c: 147:       PORTBbits.RB7=0;
  7294  001DC2  9E81               	bcf	129,7,c	;volatile
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;guia.c: 148:       distancia = -distancia;
  7298  001DC4  C125  F08C         	movff	mover_2@distancia,___flneg@f1
  7299  001DC8  C126  F08D         	movff	mover_2@distancia+1,___flneg@f1+1
  7300  001DCC  C127  F08E         	movff	mover_2@distancia+2,___flneg@f1+2
  7301  001DD0  C128  F08F         	movff	mover_2@distancia+3,___flneg@f1+3
  7302  001DD4  ECBB  F03C         	call	___flneg	;wreg free
  7303  001DD8  C08C  F125         	movff	?___flneg,mover_2@distancia
  7304  001DDC  C08D  F126         	movff	?___flneg+1,mover_2@distancia+1
  7305  001DE0  C08E  F127         	movff	?___flneg+2,mover_2@distancia+2
  7306  001DE4  C08F  F128         	movff	?___flneg+3,mover_2@distancia+3
  7307                           
  7308                           ;guia.c: 149:    }
  7309  001DE8  D173               	goto	l14806
  7310  001DEA                     l1244:
  7311                           
  7312                           ; BSR set to: 1
  7313  001DEA  8E81               	bsf	129,7,c	;volatile
  7314  001DEC  D171               	goto	l14806
  7315  001DEE                     l14778:
  7316                           
  7317                           ; BSR set to: 1
  7318                           ;guia.c: 155:          ustep=1;
  7319  001DEE  0E01               	movlw	1
  7320  001DF0  6E5E               	movwf	_ustep^0,c
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;guia.c: 156:          S=(((46665*60/(2*33)*ustep)*inverse_time_feed));
  7324  001DF2  505E               	movf	_ustep^0,w,c
  7325  001DF4  0100               	movlb	0	; () banked
  7326  001DF6  6F8C               	movwf	___lmul@multiplier& (0+255),b
  7327  001DF8  6B8D               	clrf	(___lmul@multiplier+1)& (0+255),b
  7328  001DFA  6B8E               	clrf	(___lmul@multiplier+2)& (0+255),b
  7329  001DFC  6B8F               	clrf	(___lmul@multiplier+3)& (0+255),b
  7330  001DFE  0EB6               	movlw	182
  7331  001E00  6F90               	movwf	___lmul@multiplicand& (0+255),b
  7332  001E02  0EA5               	movlw	165
  7333  001E04  6F91               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7334  001E06  0E00               	movlw	0
  7335  001E08  6F92               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7336  001E0A  0E00               	movlw	0
  7337  001E0C  6F93               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7338  001E0E  EC49  F039         	call	___lmul	;wreg free
  7339  001E12  C08C  F098         	movff	?___lmul,___xxtofl@val
  7340  001E16  C08D  F099         	movff	?___lmul+1,___xxtofl@val+1
  7341  001E1A  C08E  F09A         	movff	?___lmul+2,___xxtofl@val+2
  7342  001E1E  C08F  F09B         	movff	?___lmul+3,___xxtofl@val+3
  7343  001E22  0E01               	movlw	1
  7344  001E24  EC1F  F024         	call	___xxtofl
  7345  001E28  C098  F100         	movff	?___xxtofl,___flmul@b
  7346  001E2C  C099  F101         	movff	?___xxtofl+1,___flmul@b+1
  7347  001E30  C09A  F102         	movff	?___xxtofl+2,___flmul@b+2
  7348  001E34  C09B  F103         	movff	?___xxtofl+3,___flmul@b+3
  7349  001E38  C1B5  F104         	movff	_inverse_time_feed,___flmul@a
  7350  001E3C  C1B6  F105         	movff	_inverse_time_feed+1,___flmul@a+1
  7351  001E40  C1B7  F106         	movff	_inverse_time_feed+2,___flmul@a+2
  7352  001E44  C1B8  F107         	movff	_inverse_time_feed+3,___flmul@a+3
  7353  001E48  ECBB  F010         	call	___flmul	;wreg free
  7354  001E4C  C100  F2C6         	movff	?___flmul,_S
  7355  001E50  C101  F2C7         	movff	?___flmul+1,_S+1
  7356  001E54  C102  F2C8         	movff	?___flmul+2,_S+2
  7357  001E58  C103  F2C9         	movff	?___flmul+3,_S+3
  7358                           
  7359                           ;guia.c: 157:          while(((46665*60/(2*33)*ustep*inverse_time_feed)>255)){
  7360  001E5C  D009               	goto	l14786
  7361  001E5E                     l14782:
  7362                           
  7363                           ; BSR set to: 1
  7364                           ;guia.c: 158:             ustep=ustep<<1;
  7365  001E5E  505E               	movf	_ustep^0,w,c
  7366  001E60  245E               	addwf	_ustep^0,w,c
  7367  001E62  6E5E               	movwf	_ustep^0,c
  7368                           
  7369                           ;guia.c: 159:             if(ustep>16){
  7370  001E64  0E10               	movlw	16
  7371  001E66  645E               	cpfsgt	_ustep^0,c
  7372  001E68  D003               	goto	l14786
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;guia.c: 160:                ustep=16;
  7376  001E6A  0E10               	movlw	16
  7377  001E6C  6E5E               	movwf	_ustep^0,c
  7378                           
  7379                           ;guia.c: 161:                break;
  7380  001E6E  D041               	goto	u18240
  7381  001E70                     l14786:
  7382                           
  7383                           ; BSR set to: 1
  7384                           ;guia.c: 157:          while(((46665*60/(2*33)*ustep*inverse_time_feed)>255)){
  7385  001E70  0E00               	movlw	0
  7386  001E72  6F19               	movwf	___flge@ff1& (0+255),b
  7387  001E74  0E00               	movlw	0
  7388  001E76  6F1A               	movwf	(___flge@ff1+1)& (0+255),b
  7389  001E78  0E7F               	movlw	127
  7390  001E7A  6F1B               	movwf	(___flge@ff1+2)& (0+255),b
  7391  001E7C  0E43               	movlw	67
  7392  001E7E  6F1C               	movwf	(___flge@ff1+3)& (0+255),b
  7393  001E80  C1B5  F104         	movff	_inverse_time_feed,___flmul@a
  7394  001E84  C1B6  F105         	movff	_inverse_time_feed+1,___flmul@a+1
  7395  001E88  C1B7  F106         	movff	_inverse_time_feed+2,___flmul@a+2
  7396  001E8C  C1B8  F107         	movff	_inverse_time_feed+3,___flmul@a+3
  7397  001E90  505E               	movf	_ustep^0,w,c
  7398  001E92  0100               	movlb	0	; () banked
  7399  001E94  6F8C               	movwf	___lmul@multiplier& (0+255),b
  7400  001E96  6B8D               	clrf	(___lmul@multiplier+1)& (0+255),b
  7401  001E98  6B8E               	clrf	(___lmul@multiplier+2)& (0+255),b
  7402  001E9A  6B8F               	clrf	(___lmul@multiplier+3)& (0+255),b
  7403  001E9C  0EB6               	movlw	182
  7404  001E9E  6F90               	movwf	___lmul@multiplicand& (0+255),b
  7405  001EA0  0EA5               	movlw	165
  7406  001EA2  6F91               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7407  001EA4  0E00               	movlw	0
  7408  001EA6  6F92               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7409  001EA8  0E00               	movlw	0
  7410  001EAA  6F93               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7411  001EAC  EC49  F039         	call	___lmul	;wreg free
  7412  001EB0  C08C  F098         	movff	?___lmul,___xxtofl@val
  7413  001EB4  C08D  F099         	movff	?___lmul+1,___xxtofl@val+1
  7414  001EB8  C08E  F09A         	movff	?___lmul+2,___xxtofl@val+2
  7415  001EBC  C08F  F09B         	movff	?___lmul+3,___xxtofl@val+3
  7416  001EC0  0E01               	movlw	1
  7417  001EC2  EC1F  F024         	call	___xxtofl
  7418  001EC6  C098  F100         	movff	?___xxtofl,___flmul@b
  7419  001ECA  C099  F101         	movff	?___xxtofl+1,___flmul@b+1
  7420  001ECE  C09A  F102         	movff	?___xxtofl+2,___flmul@b+2
  7421  001ED2  C09B  F103         	movff	?___xxtofl+3,___flmul@b+3
  7422  001ED6  ECBB  F010         	call	___flmul	;wreg free
  7423  001EDA  C100  F11D         	movff	?___flmul,___flge@ff2
  7424  001EDE  C101  F11E         	movff	?___flmul+1,___flge@ff2+1
  7425  001EE2  C102  F11F         	movff	?___flmul+2,___flge@ff2+2
  7426  001EE6  C103  F120         	movff	?___flmul+3,___flge@ff2+3
  7427  001EEA  EC23  F030         	call	___flge	;wreg free
  7428  001EEE  A0D8               	btfss	status,0,c
  7429  001EF0  D7B6               	goto	l14782
  7430  001EF2                     u18240:
  7431                           
  7432                           ; BSR set to: 1
  7433                           ;guia.c: 164:          pasos =(int) (distancia * 33 * ustep);
  7434  001EF2  0E00               	movlw	0
  7435  001EF4  6F04               	movwf	___flmul@a& (0+255),b
  7436  001EF6  0E00               	movlw	0
  7437  001EF8  6F05               	movwf	(___flmul@a+1)& (0+255),b
  7438  001EFA  0E04               	movlw	4
  7439  001EFC  6F06               	movwf	(___flmul@a+2)& (0+255),b
  7440  001EFE  0E42               	movlw	66
  7441  001F00  6F07               	movwf	(___flmul@a+3)& (0+255),b
  7442  001F02  C125  F100         	movff	mover_2@distancia,___flmul@b
  7443  001F06  C126  F101         	movff	mover_2@distancia+1,___flmul@b+1
  7444  001F0A  C127  F102         	movff	mover_2@distancia+2,___flmul@b+2
  7445  001F0E  C128  F103         	movff	mover_2@distancia+3,___flmul@b+3
  7446  001F12  ECBB  F010         	call	___flmul	;wreg free
  7447  001F16  C100  F12B         	movff	?___flmul,_mover_2$5755
  7448  001F1A  C101  F12C         	movff	?___flmul+1,_mover_2$5755+1
  7449  001F1E  C102  F12D         	movff	?___flmul+2,_mover_2$5755+2
  7450  001F22  C103  F12E         	movff	?___flmul+3,_mover_2$5755+3
  7451                           
  7452                           ;guia.c: 164:          pasos =(int) (distancia * 33 * ustep);
  7453  001F26  505E               	movf	_ustep^0,w,c
  7454  001F28  0100               	movlb	0	; () banked
  7455  001F2A  6F98               	movwf	___xxtofl@val& (0+255),b
  7456  001F2C  6B99               	clrf	(___xxtofl@val+1)& (0+255),b
  7457  001F2E  6B9A               	clrf	(___xxtofl@val+2)& (0+255),b
  7458  001F30  6B9B               	clrf	(___xxtofl@val+3)& (0+255),b
  7459  001F32  0E01               	movlw	1
  7460  001F34  EC1F  F024         	call	___xxtofl
  7461  001F38  C098  F104         	movff	?___xxtofl,___flmul@a
  7462  001F3C  C099  F105         	movff	?___xxtofl+1,___flmul@a+1
  7463  001F40  C09A  F106         	movff	?___xxtofl+2,___flmul@a+2
  7464  001F44  C09B  F107         	movff	?___xxtofl+3,___flmul@a+3
  7465  001F48  C12B  F100         	movff	_mover_2$5755,___flmul@b
  7466  001F4C  C12C  F101         	movff	_mover_2$5755+1,___flmul@b+1
  7467  001F50  C12D  F102         	movff	_mover_2$5755+2,___flmul@b+2
  7468  001F54  C12E  F103         	movff	_mover_2$5755+3,___flmul@b+3
  7469  001F58  ECBB  F010         	call	___flmul	;wreg free
  7470  001F5C  C100  F119         	movff	?___flmul,___fltol@f1
  7471  001F60  C101  F11A         	movff	?___flmul+1,___fltol@f1+1
  7472  001F64  C102  F11B         	movff	?___flmul+2,___fltol@f1+2
  7473  001F68  C103  F11C         	movff	?___flmul+3,___fltol@f1+3
  7474  001F6C  EC51  F02F         	call	___fltol	;wreg free
  7475  001F70  C119  F1C7         	movff	?___fltol,_pasos	;volatile
  7476  001F74  C11A  F1C8         	movff	?___fltol+1,_pasos+1	;volatile
  7477                           
  7478                           ;guia.c: 165:          setMicroStep(ustep);
  7479  001F78  505E               	movf	_ustep^0,w,c
  7480  001F7A  ECFB  F037         	call	_setMicroStep
  7481                           
  7482                           ;guia.c: 166:          break;
  7483  001F7E  D0B7               	goto	l14808
  7484  001F80                     l14792:
  7485                           
  7486                           ; BSR set to: 1
  7487                           ;guia.c: 168:          ustep=1;
  7488  001F80  0E01               	movlw	1
  7489  001F82  6E5E               	movwf	_ustep^0,c
  7490                           
  7491                           ;guia.c: 169:          while((uint16_t)(46665*60/(2*33)*ustep*S*inverse_time_feed)>255){
  7492  001F84  D009               	goto	l14798
  7493  001F86                     l14794:
  7494                           
  7495                           ; BSR set to: 1
  7496                           ;guia.c: 170:             ustep=ustep<<1;
  7497  001F86  505E               	movf	_ustep^0,w,c
  7498  001F88  245E               	addwf	_ustep^0,w,c
  7499  001F8A  6E5E               	movwf	_ustep^0,c
  7500                           
  7501                           ;guia.c: 171:             if(ustep>16){
  7502  001F8C  0E10               	movlw	16
  7503  001F8E  645E               	cpfsgt	_ustep^0,c
  7504  001F90  D003               	goto	l14798
  7505                           
  7506                           ; BSR set to: 1
  7507                           ;guia.c: 172:                ustep=16;
  7508  001F92  0E10               	movlw	16
  7509  001F94  6E5E               	movwf	_ustep^0,c
  7510                           
  7511                           ;guia.c: 173:                break;
  7512  001F96  D055               	goto	u18260
  7513  001F98                     l14798:
  7514                           
  7515                           ; BSR set to: 1
  7516                           ;guia.c: 169:          while((uint16_t)(46665*60/(2*33)*ustep*S*inverse_time_feed)>255){
  7517  001F98  C2C6  F104         	movff	_S,___flmul@a
  7518  001F9C  C2C7  F105         	movff	_S+1,___flmul@a+1
  7519  001FA0  C2C8  F106         	movff	_S+2,___flmul@a+2
  7520  001FA4  C2C9  F107         	movff	_S+3,___flmul@a+3
  7521  001FA8  505E               	movf	_ustep^0,w,c
  7522  001FAA  0100               	movlb	0	; () banked
  7523  001FAC  6F8C               	movwf	___lmul@multiplier& (0+255),b
  7524  001FAE  6B8D               	clrf	(___lmul@multiplier+1)& (0+255),b
  7525  001FB0  6B8E               	clrf	(___lmul@multiplier+2)& (0+255),b
  7526  001FB2  6B8F               	clrf	(___lmul@multiplier+3)& (0+255),b
  7527  001FB4  0EB6               	movlw	182
  7528  001FB6  6F90               	movwf	___lmul@multiplicand& (0+255),b
  7529  001FB8  0EA5               	movlw	165
  7530  001FBA  6F91               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7531  001FBC  0E00               	movlw	0
  7532  001FBE  6F92               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7533  001FC0  0E00               	movlw	0
  7534  001FC2  6F93               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7535  001FC4  EC49  F039         	call	___lmul	;wreg free
  7536  001FC8  C08C  F098         	movff	?___lmul,___xxtofl@val
  7537  001FCC  C08D  F099         	movff	?___lmul+1,___xxtofl@val+1
  7538  001FD0  C08E  F09A         	movff	?___lmul+2,___xxtofl@val+2
  7539  001FD4  C08F  F09B         	movff	?___lmul+3,___xxtofl@val+3
  7540  001FD8  0E01               	movlw	1
  7541  001FDA  EC1F  F024         	call	___xxtofl
  7542  001FDE  C098  F100         	movff	?___xxtofl,___flmul@b
  7543  001FE2  C099  F101         	movff	?___xxtofl+1,___flmul@b+1
  7544  001FE6  C09A  F102         	movff	?___xxtofl+2,___flmul@b+2
  7545  001FEA  C09B  F103         	movff	?___xxtofl+3,___flmul@b+3
  7546  001FEE  ECBB  F010         	call	___flmul	;wreg free
  7547  001FF2  C100  F12B         	movff	?___flmul,_mover_2$5755
  7548  001FF6  C101  F12C         	movff	?___flmul+1,_mover_2$5755+1
  7549  001FFA  C102  F12D         	movff	?___flmul+2,_mover_2$5755+2
  7550  001FFE  C103  F12E         	movff	?___flmul+3,_mover_2$5755+3
  7551                           
  7552                           ;guia.c: 169:          while((uint16_t)(46665*60/(2*33)*ustep*S*inverse_time_feed)>255){
  7553  002002  C1B5  F104         	movff	_inverse_time_feed,___flmul@a
  7554  002006  C1B6  F105         	movff	_inverse_time_feed+1,___flmul@a+1
  7555  00200A  C1B7  F106         	movff	_inverse_time_feed+2,___flmul@a+2
  7556  00200E  C1B8  F107         	movff	_inverse_time_feed+3,___flmul@a+3
  7557  002012  C12B  F100         	movff	_mover_2$5755,___flmul@b
  7558  002016  C12C  F101         	movff	_mover_2$5755+1,___flmul@b+1
  7559  00201A  C12D  F102         	movff	_mover_2$5755+2,___flmul@b+2
  7560  00201E  C12E  F103         	movff	_mover_2$5755+3,___flmul@b+3
  7561  002022  ECBB  F010         	call	___flmul	;wreg free
  7562  002026  C100  F119         	movff	?___flmul,___fltol@f1
  7563  00202A  C101  F11A         	movff	?___flmul+1,___fltol@f1+1
  7564  00202E  C102  F11B         	movff	?___flmul+2,___fltol@f1+2
  7565  002032  C103  F11C         	movff	?___flmul+3,___fltol@f1+3
  7566  002036  EC51  F02F         	call	___fltol	;wreg free
  7567  00203A  0101               	movlb	1	; () banked
  7568  00203C  051A               	decf	(?___fltol+1)& (0+255),w,b
  7569  00203E  B0D8               	btfsc	status,0,c
  7570  002040  D7A2               	goto	l14794
  7571  002042                     u18260:
  7572                           
  7573                           ; BSR set to: 1
  7574                           ;guia.c: 176:          pasos =(int) (distancia * 33 * ustep);
  7575  002042  0E00               	movlw	0
  7576  002044  6F04               	movwf	___flmul@a& (0+255),b
  7577  002046  0E00               	movlw	0
  7578  002048  6F05               	movwf	(___flmul@a+1)& (0+255),b
  7579  00204A  0E04               	movlw	4
  7580  00204C  6F06               	movwf	(___flmul@a+2)& (0+255),b
  7581  00204E  0E42               	movlw	66
  7582  002050  6F07               	movwf	(___flmul@a+3)& (0+255),b
  7583  002052  C125  F100         	movff	mover_2@distancia,___flmul@b
  7584  002056  C126  F101         	movff	mover_2@distancia+1,___flmul@b+1
  7585  00205A  C127  F102         	movff	mover_2@distancia+2,___flmul@b+2
  7586  00205E  C128  F103         	movff	mover_2@distancia+3,___flmul@b+3
  7587  002062  ECBB  F010         	call	___flmul	;wreg free
  7588  002066  C100  F12B         	movff	?___flmul,_mover_2$5755
  7589  00206A  C101  F12C         	movff	?___flmul+1,_mover_2$5755+1
  7590  00206E  C102  F12D         	movff	?___flmul+2,_mover_2$5755+2
  7591  002072  C103  F12E         	movff	?___flmul+3,_mover_2$5755+3
  7592                           
  7593                           ;guia.c: 176:          pasos =(int) (distancia * 33 * ustep);
  7594  002076  505E               	movf	_ustep^0,w,c
  7595  002078  0100               	movlb	0	; () banked
  7596  00207A  6F98               	movwf	___xxtofl@val& (0+255),b
  7597  00207C  6B99               	clrf	(___xxtofl@val+1)& (0+255),b
  7598  00207E  6B9A               	clrf	(___xxtofl@val+2)& (0+255),b
  7599  002080  6B9B               	clrf	(___xxtofl@val+3)& (0+255),b
  7600  002082  0E01               	movlw	1
  7601  002084  EC1F  F024         	call	___xxtofl
  7602  002088  C098  F104         	movff	?___xxtofl,___flmul@a
  7603  00208C  C099  F105         	movff	?___xxtofl+1,___flmul@a+1
  7604  002090  C09A  F106         	movff	?___xxtofl+2,___flmul@a+2
  7605  002094  C09B  F107         	movff	?___xxtofl+3,___flmul@a+3
  7606  002098  C12B  F100         	movff	_mover_2$5755,___flmul@b
  7607  00209C  C12C  F101         	movff	_mover_2$5755+1,___flmul@b+1
  7608  0020A0  C12D  F102         	movff	_mover_2$5755+2,___flmul@b+2
  7609  0020A4  C12E  F103         	movff	_mover_2$5755+3,___flmul@b+3
  7610  0020A8  ECBB  F010         	call	___flmul	;wreg free
  7611  0020AC  C100  F119         	movff	?___flmul,___fltol@f1
  7612  0020B0  C101  F11A         	movff	?___flmul+1,___fltol@f1+1
  7613  0020B4  C102  F11B         	movff	?___flmul+2,___fltol@f1+2
  7614  0020B8  C103  F11C         	movff	?___flmul+3,___fltol@f1+3
  7615  0020BC  EC51  F02F         	call	___fltol	;wreg free
  7616  0020C0  C119  F1C7         	movff	?___fltol,_pasos	;volatile
  7617  0020C4  C11A  F1C8         	movff	?___fltol+1,_pasos+1	;volatile
  7618                           
  7619                           ;guia.c: 177:          setMicroStep(ustep);
  7620  0020C8  505E               	movf	_ustep^0,w,c
  7621  0020CA  ECFB  F037         	call	_setMicroStep
  7622                           
  7623                           ;guia.c: 178:       break;
  7624  0020CE  D00F               	goto	l14808
  7625  0020D0                     l14806:
  7626  0020D0  0101               	movlb	1	; () banked
  7627  0020D2  51E1               	movf	_feed_state& (0+255),w,b
  7628  0020D4  6F29               	movwf	??_mover_2& (0+255),b
  7629  0020D6  6B2A               	clrf	(??_mover_2+1)& (0+255),b
  7630                           
  7631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7632                           ; Switch size 1, requested type "simple"
  7633                           ; Number of cases is 1, Range of values is 0 to 0
  7634                           ; switch strategies available:
  7635                           ; Name         Instructions Cycles
  7636                           ; simple_byte            4     3 (average)
  7637                           ;	Chosen strategy is simple_byte
  7638  0020D8  512A               	movf	(??_mover_2+1)& (0+255),w,b
  7639  0020DA  0A00               	xorlw	0	; case 0
  7640  0020DC  A4D8               	btfss	status,2,c
  7641  0020DE  D007               	goto	l14808
  7642                           
  7643                           ; BSR set to: 1
  7644                           ; Switch size 1, requested type "simple"
  7645                           ; Number of cases is 2, Range of values is 1 to 95
  7646                           ; switch strategies available:
  7647                           ; Name         Instructions Cycles
  7648                           ; simple_byte            7     4 (average)
  7649                           ;	Chosen strategy is simple_byte
  7650  0020E0  5129               	movf	??_mover_2& (0+255),w,b
  7651  0020E2  0A01               	xorlw	1	; case 1
  7652  0020E4  B4D8               	btfsc	status,2,c
  7653  0020E6  D683               	goto	l14778
  7654  0020E8  0A5E               	xorlw	94	; case 95
  7655  0020EA  B4D8               	btfsc	status,2,c
  7656  0020EC  D749               	goto	l14792
  7657  0020EE                     l14808:
  7658                           
  7659                           ;guia.c: 187:    flag=0;
  7660  0020EE  0E00               	movlw	0
  7661  0020F0  0101               	movlb	1	; () banked
  7662  0020F2  6FDC               	movwf	_flag& (0+255),b
  7663                           
  7664                           ; BSR set to: 1
  7665                           ;guia.c: 188:    TMR2_WriteTimer(0);
  7666  0020F4  0E00               	movlw	0
  7667  0020F6  ECCD  F03E         	call	_TMR2_WriteTimer
  7668                           
  7669                           ;guia.c: 190:    TMR2_LoadPeriodRegister((uint8_t)(46665*60/(2*33)*ustep/feed));
  7670  0020FA  C1E6  F104         	movff	_feed,___fldiv@a
  7671  0020FE  C1E7  F105         	movff	_feed+1,___fldiv@a+1
  7672  002102  C1E8  F106         	movff	_feed+2,___fldiv@a+2
  7673  002106  C1E9  F107         	movff	_feed+3,___fldiv@a+3
  7674  00210A  505E               	movf	_ustep^0,w,c
  7675  00210C  0100               	movlb	0	; () banked
  7676  00210E  6F8C               	movwf	___lmul@multiplier& (0+255),b
  7677  002110  6B8D               	clrf	(___lmul@multiplier+1)& (0+255),b
  7678  002112  6B8E               	clrf	(___lmul@multiplier+2)& (0+255),b
  7679  002114  6B8F               	clrf	(___lmul@multiplier+3)& (0+255),b
  7680  002116  0EB6               	movlw	182
  7681  002118  6F90               	movwf	___lmul@multiplicand& (0+255),b
  7682  00211A  0EA5               	movlw	165
  7683  00211C  6F91               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7684  00211E  0E00               	movlw	0
  7685  002120  6F92               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7686  002122  0E00               	movlw	0
  7687  002124  6F93               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7688  002126  EC49  F039         	call	___lmul	;wreg free
  7689  00212A  C08C  F098         	movff	?___lmul,___xxtofl@val
  7690  00212E  C08D  F099         	movff	?___lmul+1,___xxtofl@val+1
  7691  002132  C08E  F09A         	movff	?___lmul+2,___xxtofl@val+2
  7692  002136  C08F  F09B         	movff	?___lmul+3,___xxtofl@val+3
  7693  00213A  0E01               	movlw	1
  7694  00213C  EC1F  F024         	call	___xxtofl
  7695  002140  C098  F100         	movff	?___xxtofl,___fldiv@b
  7696  002144  C099  F101         	movff	?___xxtofl+1,___fldiv@b+1
  7697  002148  C09A  F102         	movff	?___xxtofl+2,___fldiv@b+2
  7698  00214C  C09B  F103         	movff	?___xxtofl+3,___fldiv@b+3
  7699  002150  EC9F  F019         	call	___fldiv	;wreg free
  7700  002154  C100  F119         	movff	?___fldiv,___fltol@f1
  7701  002158  C101  F11A         	movff	?___fldiv+1,___fltol@f1+1
  7702  00215C  C102  F11B         	movff	?___fldiv+2,___fltol@f1+2
  7703  002160  C103  F11C         	movff	?___fldiv+3,___fltol@f1+3
  7704  002164  EC51  F02F         	call	___fltol	;wreg free
  7705  002168  0101               	movlb	1	; () banked
  7706  00216A  5119               	movf	?___fltol& (0+255),w,b
  7707  00216C  ECD2  F03E         	call	_TMR2_LoadPeriodRegister
  7708                           
  7709                           ;guia.c: 191:    TMR2_StartTimer();
  7710  002170  EC02  F03F         	call	_TMR2_StartTimer	;wreg free
  7711  002174  0012               	return		;funcret
  7712  002176                     __end_of_mover_2:
  7713                           	callstack 0
  7714                           
  7715 ;; *************** function _setMicroStep *****************
  7716 ;; Defined at:
  7717 ;;		line 195 in file "guia.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  ustep           1    wreg     unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  ustep           1   46[BANK0 ] unsigned char 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      void 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 3E/1
  7728 ;;		On exit  : 3F/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0
  7732 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7733 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7734 ;;      Totals:         0       3       0       0       0       0       0       0       0
  7735 ;;Total ram usage:        3 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 10
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_mover_2
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text24
  7746  006FF6                     __ptext24:
  7747                           	callstack 0
  7748  006FF6                     _setMicroStep:
  7749                           	callstack 17
  7750                           
  7751                           ;incstack = 0
  7752                           ;setMicroStep@ustep stored from wreg
  7753  006FF6  0100               	movlb	0	; () banked
  7754  006FF8  6F8E               	movwf	setMicroStep@ustep& (0+255),b
  7755                           
  7756                           ;guia.c: 200:    switch(ustep){
  7757  006FFA  D018               	goto	l9902
  7758  006FFC                     l1262:
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;guia.c: 202:          LATBbits.LATB1=0;
  7762  006FFC  928A               	bcf	138,1,c	;volatile
  7763                           
  7764                           ;guia.c: 203:          LATBbits.LATB2=0;
  7765  006FFE  948A               	bcf	138,2,c	;volatile
  7766                           
  7767                           ;guia.c: 204:          LATBbits.LATB3=0;
  7768  007000  968A               	bcf	138,3,c	;volatile
  7769                           
  7770                           ;guia.c: 205:          break;
  7771  007002  0012               	return	
  7772  007004                     l1264:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;guia.c: 207:          LATBbits.LATB1=1;
  7776  007004  828A               	bsf	138,1,c	;volatile
  7777                           
  7778                           ;guia.c: 208:          LATBbits.LATB2=0;
  7779  007006  948A               	bcf	138,2,c	;volatile
  7780                           
  7781                           ;guia.c: 209:          LATBbits.LATB3=0;
  7782  007008  968A               	bcf	138,3,c	;volatile
  7783                           
  7784                           ;guia.c: 210:          break;
  7785  00700A  0012               	return	
  7786  00700C                     l1265:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;guia.c: 212:          LATBbits.LATB1=0;
  7790  00700C  928A               	bcf	138,1,c	;volatile
  7791                           
  7792                           ;guia.c: 213:          LATBbits.LATB2=1;
  7793  00700E  848A               	bsf	138,2,c	;volatile
  7794                           
  7795                           ;guia.c: 214:          LATBbits.LATB3=0;
  7796  007010  968A               	bcf	138,3,c	;volatile
  7797                           
  7798                           ;guia.c: 215:          break;
  7799  007012  0012               	return	
  7800  007014                     l1266:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;guia.c: 217:          LATBbits.LATB1=1;
  7804  007014  828A               	bsf	138,1,c	;volatile
  7805                           
  7806                           ;guia.c: 218:          LATBbits.LATB2=1;
  7807  007016  848A               	bsf	138,2,c	;volatile
  7808                           
  7809                           ;guia.c: 219:          LATBbits.LATB3=0;
  7810  007018  968A               	bcf	138,3,c	;volatile
  7811                           
  7812                           ;guia.c: 220:          break;
  7813  00701A  0012               	return	
  7814  00701C                     l1267:
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;guia.c: 222:          LATBbits.LATB1=1;
  7818  00701C  828A               	bsf	138,1,c	;volatile
  7819                           
  7820                           ;guia.c: 223:          LATBbits.LATB2=1;
  7821  00701E  848A               	bsf	138,2,c	;volatile
  7822                           
  7823                           ;guia.c: 224:          LATBbits.LATB3=1;
  7824  007020  868A               	bsf	138,3,c	;volatile
  7825                           
  7826                           ;guia.c: 225:          break;
  7827  007022  0012               	return	
  7828  007024                     l1268:
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;guia.c: 227:          LATBbits.LATB1=1;
  7832  007024  828A               	bsf	138,1,c	;volatile
  7833                           
  7834                           ;guia.c: 228:          LATBbits.LATB2=1;
  7835  007026  848A               	bsf	138,2,c	;volatile
  7836                           
  7837                           ;guia.c: 229:          LATBbits.LATB3=1;
  7838  007028  868A               	bsf	138,3,c	;volatile
  7839                           
  7840                           ;guia.c: 230:          break;
  7841  00702A  0012               	return	
  7842  00702C                     l9902:
  7843  00702C  0100               	movlb	0	; () banked
  7844  00702E  518E               	movf	setMicroStep@ustep& (0+255),w,b
  7845  007030  6F8C               	movwf	??_setMicroStep& (0+255),b
  7846  007032  6B8D               	clrf	(??_setMicroStep+1)& (0+255),b
  7847                           
  7848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7849                           ; Switch size 1, requested type "simple"
  7850                           ; Number of cases is 1, Range of values is 0 to 0
  7851                           ; switch strategies available:
  7852                           ; Name         Instructions Cycles
  7853                           ; simple_byte            4     3 (average)
  7854                           ;	Chosen strategy is simple_byte
  7855  007034  518D               	movf	(??_setMicroStep+1)& (0+255),w,b
  7856  007036  0A00               	xorlw	0	; case 0
  7857  007038  A4D8               	btfss	status,2,c
  7858  00703A  D7F4               	goto	l1268
  7859                           
  7860                           ; BSR set to: 0
  7861                           ; Switch size 1, requested type "simple"
  7862                           ; Number of cases is 5, Range of values is 1 to 16
  7863                           ; switch strategies available:
  7864                           ; Name         Instructions Cycles
  7865                           ; simple_byte           16     9 (average)
  7866                           ;	Chosen strategy is simple_byte
  7867  00703C  518C               	movf	??_setMicroStep& (0+255),w,b
  7868  00703E  0A01               	xorlw	1	; case 1
  7869  007040  B4D8               	btfsc	status,2,c
  7870  007042  D7DC               	goto	l1262
  7871  007044  0A03               	xorlw	3	; case 2
  7872  007046  B4D8               	btfsc	status,2,c
  7873  007048  D7DD               	goto	l1264
  7874  00704A  0A06               	xorlw	6	; case 4
  7875  00704C  B4D8               	btfsc	status,2,c
  7876  00704E  D7DE               	goto	l1265
  7877  007050  0A0C               	xorlw	12	; case 8
  7878  007052  B4D8               	btfsc	status,2,c
  7879  007054  D7DF               	goto	l1266
  7880  007056  0A18               	xorlw	24	; case 16
  7881  007058  B4D8               	btfsc	status,2,c
  7882  00705A  D7E0               	goto	l1267
  7883  00705C  D7E3               	goto	l1268
  7884  00705E                     __end_of_setMicroStep:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function ___xxtofl *****************
  7888 ;; Defined at:
  7889 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  sign            1    wreg     unsigned char 
  7892 ;;  val             4   56[BANK0 ] long 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  sign            1   64[BANK0 ] unsigned char 
  7895 ;;  arg             4   66[BANK0 ] unsigned long 
  7896 ;;  exp             1   65[BANK0 ] unsigned char 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  4   56[BANK0 ] unsigned char 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 3E/1
  7903 ;;		On exit  : 3F/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7906 ;;      Params:         0       4       0       0       0       0       0       0       0
  7907 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7908 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7909 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7910 ;;Total ram usage:       14 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 10
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_mover_2
  7917 ;;		_strtof
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text25
  7922  00483E                     __ptext25:
  7923                           	callstack 0
  7924  00483E                     ___xxtofl:
  7925                           	callstack 17
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;incstack = 0
  7929                           ;___xxtofl@sign stored from wreg
  7930  00483E  0100               	movlb	0	; () banked
  7931  004840  6FA0               	movwf	___xxtofl@sign& (0+255),b
  7932  004842  0100               	movlb	0	; () banked
  7933  004844  51A0               	movf	___xxtofl@sign& (0+255),w,b
  7934  004846  A4D8               	btfss	status,2,c
  7935                           
  7936                           ; BSR set to: 0
  7937  004848  AF9B               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7938  00484A  D01A               	goto	l2123
  7939                           
  7940                           ; BSR set to: 0
  7941  00484C  C098  F09C         	movff	___xxtofl@val,??___xxtofl
  7942  004850  C099  F09D         	movff	___xxtofl@val+1,??___xxtofl+1
  7943  004854  C09A  F09E         	movff	___xxtofl@val+2,??___xxtofl+2
  7944  004858  C09B  F09F         	movff	___xxtofl@val+3,??___xxtofl+3
  7945  00485C  1F9C               	comf	??___xxtofl& (0+255),f,b
  7946  00485E  1F9D               	comf	(??___xxtofl+1)& (0+255),f,b
  7947  004860  1F9E               	comf	(??___xxtofl+2)& (0+255),f,b
  7948  004862  1F9F               	comf	(??___xxtofl+3)& (0+255),f,b
  7949  004864  2B9C               	incf	??___xxtofl& (0+255),f,b
  7950  004866  0E00               	movlw	0
  7951  004868  239D               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7952  00486A  239E               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7953  00486C  239F               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7954  00486E  C09C  F0A2         	movff	??___xxtofl,___xxtofl@arg
  7955  004872  C09D  F0A3         	movff	??___xxtofl+1,___xxtofl@arg+1
  7956  004876  C09E  F0A4         	movff	??___xxtofl+2,___xxtofl@arg+2
  7957  00487A  C09F  F0A5         	movff	??___xxtofl+3,___xxtofl@arg+3
  7958  00487E  D008               	goto	l9926
  7959  004880                     l2123:
  7960                           
  7961                           ; BSR set to: 0
  7962  004880  C098  F0A2         	movff	___xxtofl@val,___xxtofl@arg
  7963  004884  C099  F0A3         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7964  004888  C09A  F0A4         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7965  00488C  C09B  F0A5         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7966  004890                     l9926:
  7967                           
  7968                           ; BSR set to: 0
  7969  004890  5198               	movf	___xxtofl@val& (0+255),w,b
  7970  004892  1199               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7971  004894  119A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7972  004896  119B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7973  004898  A4D8               	btfss	status,2,c
  7974  00489A  D009               	goto	l9932
  7975                           
  7976                           ; BSR set to: 0
  7977  00489C  0E00               	movlw	0
  7978  00489E  6F98               	movwf	?___xxtofl& (0+255),b
  7979  0048A0  0E00               	movlw	0
  7980  0048A2  6F99               	movwf	(?___xxtofl+1)& (0+255),b
  7981  0048A4  0E00               	movlw	0
  7982  0048A6  6F9A               	movwf	(?___xxtofl+2)& (0+255),b
  7983  0048A8  0E00               	movlw	0
  7984  0048AA  6F9B               	movwf	(?___xxtofl+3)& (0+255),b
  7985  0048AC  0012               	return	
  7986  0048AE                     l9932:
  7987                           
  7988                           ; BSR set to: 0
  7989  0048AE  0E96               	movlw	150
  7990  0048B0  6FA1               	movwf	___xxtofl@exp& (0+255),b
  7991  0048B2  D006               	goto	l9936
  7992  0048B4                     l9934:
  7993                           
  7994                           ; BSR set to: 0
  7995  0048B4  2BA1               	incf	___xxtofl@exp& (0+255),f,b
  7996  0048B6  90D8               	bcf	status,0,c
  7997  0048B8  33A5               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7998  0048BA  33A4               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7999  0048BC  33A3               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8000  0048BE  33A2               	rrcf	___xxtofl@arg& (0+255),f,b
  8001  0048C0                     l9936:
  8002                           
  8003                           ; BSR set to: 0
  8004  0048C0  0E00               	movlw	0
  8005  0048C2  15A2               	andwf	___xxtofl@arg& (0+255),w,b
  8006  0048C4  6F9C               	movwf	??___xxtofl& (0+255),b
  8007  0048C6  0E00               	movlw	0
  8008  0048C8  15A3               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8009  0048CA  6F9D               	movwf	(??___xxtofl+1)& (0+255),b
  8010  0048CC  0E00               	movlw	0
  8011  0048CE  15A4               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8012  0048D0  6F9E               	movwf	(??___xxtofl+2)& (0+255),b
  8013  0048D2  0EFE               	movlw	254
  8014  0048D4  15A5               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8015  0048D6  6F9F               	movwf	(??___xxtofl+3)& (0+255),b
  8016  0048D8  519C               	movf	??___xxtofl& (0+255),w,b
  8017  0048DA  119D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8018  0048DC  119E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8019  0048DE  119F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8020  0048E0  B4D8               	btfsc	status,2,c
  8021  0048E2  D00D               	goto	l2130
  8022  0048E4  D7E7               	goto	l9934
  8023  0048E6                     l9938:
  8024                           
  8025                           ; BSR set to: 0
  8026  0048E6  2BA1               	incf	___xxtofl@exp& (0+255),f,b
  8027                           
  8028                           ; BSR set to: 0
  8029  0048E8  0E01               	movlw	1
  8030  0048EA  27A2               	addwf	___xxtofl@arg& (0+255),f,b
  8031  0048EC  0E00               	movlw	0
  8032  0048EE  23A3               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8033  0048F0  23A4               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8034  0048F2  23A5               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8035                           
  8036                           ; BSR set to: 0
  8037  0048F4  90D8               	bcf	status,0,c
  8038  0048F6  33A5               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8039  0048F8  33A4               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8040  0048FA  33A3               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8041  0048FC  33A2               	rrcf	___xxtofl@arg& (0+255),f,b
  8042  0048FE                     l2130:
  8043                           
  8044                           ; BSR set to: 0
  8045  0048FE  0E00               	movlw	0
  8046  004900  15A2               	andwf	___xxtofl@arg& (0+255),w,b
  8047  004902  6F9C               	movwf	??___xxtofl& (0+255),b
  8048  004904  0E00               	movlw	0
  8049  004906  15A3               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8050  004908  6F9D               	movwf	(??___xxtofl+1)& (0+255),b
  8051  00490A  0E00               	movlw	0
  8052  00490C  15A4               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8053  00490E  6F9E               	movwf	(??___xxtofl+2)& (0+255),b
  8054  004910  0EFF               	movlw	255
  8055  004912  15A5               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8056  004914  6F9F               	movwf	(??___xxtofl+3)& (0+255),b
  8057  004916  519C               	movf	??___xxtofl& (0+255),w,b
  8058  004918  119D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8059  00491A  119E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8060  00491C  119F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8061  00491E  B4D8               	btfsc	status,2,c
  8062  004920  D007               	goto	l9946
  8063  004922  D7E1               	goto	l9938
  8064  004924                     l9944:
  8065                           
  8066                           ; BSR set to: 0
  8067  004924  07A1               	decf	___xxtofl@exp& (0+255),f,b
  8068  004926  90D8               	bcf	status,0,c
  8069  004928  37A2               	rlcf	___xxtofl@arg& (0+255),f,b
  8070  00492A  37A3               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8071  00492C  37A4               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8072  00492E  37A5               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8073  004930                     l9946:
  8074                           
  8075                           ; BSR set to: 0
  8076  004930  BFA4               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8077  004932  D003               	goto	u10920
  8078                           
  8079                           ; BSR set to: 0
  8080  004934  0E02               	movlw	2
  8081  004936  61A1               	cpfslt	___xxtofl@exp& (0+255),b
  8082  004938  D7F5               	goto	l9944
  8083  00493A                     u10920:
  8084                           
  8085                           ; BSR set to: 0
  8086  00493A  A1A1               	btfss	___xxtofl@exp& (0+255),0,b
  8087                           
  8088                           ; BSR set to: 0
  8089  00493C  9FA4               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8090                           
  8091                           ; BSR set to: 0
  8092  00493E  90D8               	bcf	status,0,c
  8093  004940  33A1               	rrcf	___xxtofl@exp& (0+255),f,b
  8094                           
  8095                           ; BSR set to: 0
  8096  004942  C0A1  F09C         	movff	___xxtofl@exp,??___xxtofl
  8097  004946  6B9D               	clrf	(??___xxtofl+1)& (0+255),b
  8098  004948  6B9E               	clrf	(??___xxtofl+2)& (0+255),b
  8099  00494A  6B9F               	clrf	(??___xxtofl+3)& (0+255),b
  8100  00494C  C09C  F09F         	movff	??___xxtofl,??___xxtofl+3
  8101  004950  6B9E               	clrf	(??___xxtofl+2)& (0+255),b
  8102  004952  6B9D               	clrf	(??___xxtofl+1)& (0+255),b
  8103  004954  6B9C               	clrf	??___xxtofl& (0+255),b
  8104  004956  519C               	movf	??___xxtofl& (0+255),w,b
  8105  004958  13A2               	iorwf	___xxtofl@arg& (0+255),f,b
  8106  00495A  519D               	movf	(??___xxtofl+1)& (0+255),w,b
  8107  00495C  13A3               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8108  00495E  519E               	movf	(??___xxtofl+2)& (0+255),w,b
  8109  004960  13A4               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8110  004962  519F               	movf	(??___xxtofl+3)& (0+255),w,b
  8111  004964  13A5               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8112                           
  8113                           ; BSR set to: 0
  8114  004966  51A0               	movf	___xxtofl@sign& (0+255),w,b
  8115  004968  A4D8               	btfss	status,2,c
  8116                           
  8117                           ; BSR set to: 0
  8118  00496A  AF9B               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8119  00496C  D001               	goto	l9962
  8120                           
  8121                           ; BSR set to: 0
  8122  00496E  8FA5               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8123  004970                     l9962:
  8124                           
  8125                           ; BSR set to: 0
  8126  004970  C0A2  F098         	movff	___xxtofl@arg,?___xxtofl
  8127  004974  C0A3  F099         	movff	___xxtofl@arg+1,?___xxtofl+1
  8128  004978  C0A4  F09A         	movff	___xxtofl@arg+2,?___xxtofl+2
  8129  00497C  C0A5  F09B         	movff	___xxtofl@arg+3,?___xxtofl+3
  8130                           
  8131                           ; BSR set to: 0
  8132  004980  0012               	return		;funcret
  8133  004982                     __end_of___xxtofl:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function ___lmul *****************
  8137 ;; Defined at:
  8138 ;;		line 15 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/Umul32.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  multiplier      4   44[BANK0 ] unsigned long 
  8141 ;;  multiplicand    4   48[BANK0 ] unsigned long 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  product         4   52[BANK0 ] unsigned long 
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  4   44[BANK0 ] unsigned long 
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0
  8148 ;; Tracked objects:
  8149 ;;		On entry : 3F/0
  8150 ;;		On exit  : 3F/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8153 ;;      Params:         0       8       0       0       0       0       0       0       0
  8154 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8156 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8157 ;;Total ram usage:       12 bytes
  8158 ;; Hardware stack levels used: 1
  8159 ;; Hardware stack levels required when called: 10
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_mover_2
  8164 ;;		_strtof
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text26
  8169  007292                     __ptext26:
  8170                           	callstack 0
  8171  007292                     ___lmul:
  8172                           	callstack 17
  8173                           
  8174                           ; BSR set to: 0
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;incstack = 0
  8178  007292  0E00               	movlw	0
  8179  007294  6F94               	movwf	___lmul@product& (0+255),b
  8180  007296  0E00               	movlw	0
  8181  007298  6F95               	movwf	(___lmul@product+1)& (0+255),b
  8182  00729A  0E00               	movlw	0
  8183  00729C  6F96               	movwf	(___lmul@product+2)& (0+255),b
  8184  00729E  0E00               	movlw	0
  8185  0072A0  6F97               	movwf	(___lmul@product+3)& (0+255),b
  8186  0072A2                     l9912:
  8187                           
  8188                           ; BSR set to: 0
  8189  0072A2  A18C               	btfss	___lmul@multiplier& (0+255),0,b
  8190  0072A4  D008               	goto	l9916
  8191                           
  8192                           ; BSR set to: 0
  8193  0072A6  5190               	movf	___lmul@multiplicand& (0+255),w,b
  8194  0072A8  2794               	addwf	___lmul@product& (0+255),f,b
  8195  0072AA  5191               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  8196  0072AC  2395               	addwfc	(___lmul@product+1)& (0+255),f,b
  8197  0072AE  5192               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  8198  0072B0  2396               	addwfc	(___lmul@product+2)& (0+255),f,b
  8199  0072B2  5193               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  8200  0072B4  2397               	addwfc	(___lmul@product+3)& (0+255),f,b
  8201  0072B6                     l9916:
  8202                           
  8203                           ; BSR set to: 0
  8204  0072B6  90D8               	bcf	status,0,c
  8205  0072B8  3790               	rlcf	___lmul@multiplicand& (0+255),f,b
  8206  0072BA  3791               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  8207  0072BC  3792               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  8208  0072BE  3793               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  8209                           
  8210                           ; BSR set to: 0
  8211  0072C0  90D8               	bcf	status,0,c
  8212  0072C2  338F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  8213  0072C4  338E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  8214  0072C6  338D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  8215  0072C8  338C               	rrcf	___lmul@multiplier& (0+255),f,b
  8216  0072CA  518C               	movf	___lmul@multiplier& (0+255),w,b
  8217  0072CC  118D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  8218  0072CE  118E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  8219  0072D0  118F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  8220  0072D2  A4D8               	btfss	status,2,c
  8221  0072D4  D7E6               	goto	l9912
  8222                           
  8223                           ; BSR set to: 0
  8224  0072D6  C094  F08C         	movff	___lmul@product,?___lmul
  8225  0072DA  C095  F08D         	movff	___lmul@product+1,?___lmul+1
  8226  0072DE  C096  F08E         	movff	___lmul@product+2,?___lmul+2
  8227  0072E2  C097  F08F         	movff	___lmul@product+3,?___lmul+3
  8228                           
  8229                           ; BSR set to: 0
  8230  0072E6  0012               	return		;funcret
  8231  0072E8                     __end_of___lmul:
  8232                           	callstack 0
  8233                           
  8234 ;; *************** function _TMR2_WriteTimer *****************
  8235 ;; Defined at:
  8236 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  timerVal        1    wreg     unsigned char 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  timerVal        1   44[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg
  8245 ;; Tracked objects:
  8246 ;;		On entry : 3F/1
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8250 ;;      Params:         0       0       0       0       0       0       0       0       0
  8251 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8253 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8254 ;;Total ram usage:        1 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 10
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_mover_2
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text27
  8265  007D9A                     __ptext27:
  8266                           	callstack 0
  8267  007D9A                     _TMR2_WriteTimer:
  8268                           	callstack 17
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;incstack = 0
  8272                           ;TMR2_WriteTimer@timerVal stored from wreg
  8273  007D9A  0100               	movlb	0	; () banked
  8274  007D9C  6F8C               	movwf	TMR2_WriteTimer@timerVal& (0+255),b
  8275                           
  8276                           ;mcc_generated_files/tmr2.c: 108: void TMR2_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr2.c: 109: {;mcc_generated_files/tmr2.c: 111:     TMR2 = timerVal;
  8277  007D9E  C08C  FFBC         	movff	TMR2_WriteTimer@timerVal,4028	;volatile
  8278  007DA2  0012               	return		;funcret
  8279  007DA4                     __end_of_TMR2_WriteTimer:
  8280                           	callstack 0
  8281                           
  8282 ;; *************** function _TMR2_StartTimer *****************
  8283 ;; Defined at:
  8284 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		None
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/1
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 10
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_mover_2
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text28
  8313  007E04                     __ptext28:
  8314                           	callstack 0
  8315  007E04                     _TMR2_StartTimer:
  8316                           	callstack 17
  8317                           
  8318                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  8319                           
  8320                           ;incstack = 0
  8321  007E04  84BA               	bsf	186,2,c	;volatile
  8322  007E06  0012               	return		;funcret
  8323  007E08                     __end_of_TMR2_StartTimer:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _TMR2_LoadPeriodRegister *****************
  8327 ;; Defined at:
  8328 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  periodVal       1    wreg     unsigned char 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  periodVal       1   44[BANK0 ] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg
  8337 ;; Tracked objects:
  8338 ;;		On entry : 3F/1
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0
  8343 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8345 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8346 ;;Total ram usage:        1 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 10
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_mover_2
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text29
  8357  007DA4                     __ptext29:
  8358                           	callstack 0
  8359  007DA4                     _TMR2_LoadPeriodRegister:
  8360                           	callstack 17
  8361                           
  8362                           ;incstack = 0
  8363                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  8364  007DA4  0100               	movlb	0	; () banked
  8365  007DA6  6F8C               	movwf	TMR2_LoadPeriodRegister@periodVal& (0+255),b
  8366                           
  8367                           ;mcc_generated_files/tmr2.c: 114: void TMR2_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr2.c: 115: {;mcc_generated_files/tmr2.c: 116:    PR2 = periodVal;
  8368  007DA8  C08C  FFBB         	movff	TMR2_LoadPeriodRegister@periodVal,4027	;volatile
  8369  007DAC  0012               	return		;funcret
  8370  007DAE                     __end_of_TMR2_LoadPeriodRegister:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function _FilaPop *****************
  8374 ;; Defined at:
  8375 ;;		line 30 in file "fila.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  str             2   55[BANK0 ] PTR unsigned char 
  8378 ;;		 -> executeCommand@strCommand(30), 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  2   55[BANK0 ] int 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 3F/0
  8387 ;;		On exit  : 3F/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8390 ;;      Params:         0       2       0       0       0       0       0       0       0
  8391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8393 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8394 ;;Total ram usage:        2 bytes
  8395 ;; Hardware stack levels used: 1
  8396 ;; Hardware stack levels required when called: 11
  8397 ;; This function calls:
  8398 ;;		___lbmod
  8399 ;;		_memcpy
  8400 ;; This function is called by:
  8401 ;;		_executeCommand
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text30
  8406  007482                     __ptext30:
  8407                           	callstack 0
  8408  007482                     _FilaPop:
  8409                           	callstack 18
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;fila.c: 31:    if(largo>0){
  8413                           
  8414                           ;incstack = 0
  8415  007482  51C4               	movf	_largo& (0+255),w,b
  8416  007484  B4D8               	btfsc	status,2,c
  8417  007486  0012               	return	
  8418                           
  8419                           ; BSR set to: 0
  8420                           ;fila.c: 32:          memcpy(str,fila[cola],32);
  8421  007488  C097  F08C         	movff	FilaPop@str,memcpy@d1
  8422  00748C  C098  F08D         	movff	FilaPop@str+1,memcpy@d1+1
  8423  007490  0101               	movlb	1	; () banked
  8424  007492  51DE               	movf	_cola& (0+255),w,b
  8425  007494  0D20               	mullw	32
  8426  007496  0E80               	movlw	low _fila
  8427  007498  24F3               	addwf	243,w,c
  8428  00749A  0100               	movlb	0	; () banked
  8429  00749C  6F8E               	movwf	memcpy@s1& (0+255),b
  8430  00749E  0E05               	movlw	high _fila
  8431  0074A0  20F4               	addwfc	prodh,w,c
  8432  0074A2  6F8F               	movwf	(memcpy@s1+1)& (0+255),b
  8433  0074A4  0E00               	movlw	0
  8434  0074A6  6F91               	movwf	(memcpy@n+1)& (0+255),b
  8435  0074A8  0E20               	movlw	32
  8436  0074AA  6F90               	movwf	memcpy@n& (0+255),b
  8437  0074AC  ECAC  F03A         	call	_memcpy	;wreg free
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;fila.c: 33:          cola++;
  8441  0074B0  0101               	movlb	1	; () banked
  8442  0074B2  2BDE               	incf	_cola& (0+255),f,b
  8443                           
  8444                           ; BSR set to: 1
  8445                           ;fila.c: 34:          cola=cola%10;
  8446  0074B4  0E0A               	movlw	10
  8447  0074B6  0100               	movlb	0	; () banked
  8448  0074B8  6F8C               	movwf	___lbmod@divisor& (0+255),b
  8449  0074BA  0101               	movlb	1	; () banked
  8450  0074BC  51DE               	movf	_cola& (0+255),w,b
  8451  0074BE  EC48  F03D         	call	___lbmod
  8452  0074C2  0101               	movlb	1	; () banked
  8453  0074C4  6FDE               	movwf	_cola& (0+255),b
  8454                           
  8455                           ; BSR set to: 1
  8456                           ;fila.c: 35:          largo--;
  8457  0074C6  0100               	movlb	0	; () banked
  8458  0074C8  07C4               	decf	_largo& (0+255),f,b
  8459                           
  8460                           ; BSR set to: 0
  8461  0074CA  0012               	return		;funcret
  8462  0074CC                     __end_of_FilaPop:
  8463                           	callstack 0
  8464                           
  8465 ;; *************** function _USBCommandFetch *****************
  8466 ;; Defined at:
  8467 ;;		line 14 in file "CommandHandler.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;		None
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;  readTokens     60    0[BANK2 ] PTR unsigned char [30]
  8472 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  8473 ;;  i               2   64[BANK2 ] int 
  8474 ;;  s               2   60[BANK2 ] unsigned char [2]
  8475 ;;  lastTokenFla    2   62[BANK2 ] int 
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 3E/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8485 ;;      Params:         0       0       0       0       0       0       0       0       0
  8486 ;;      Locals:         0       0       0      66       0       0       0       0       0
  8487 ;;      Temps:          0       0       4       0       0       0       0       0       0
  8488 ;;      Totals:         0       0       4      66       0       0       0       0       0
  8489 ;;Total ram usage:       70 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; Hardware stack levels required when called: 18
  8492 ;; This function calls:
  8493 ;;		_Fila_Agregar
  8494 ;;		_MCC_USB_READ
  8495 ;;		_memset
  8496 ;;		_sprintf
  8497 ;;		_strcpy
  8498 ;;		_strlen
  8499 ;;		_strtok
  8500 ;; This function is called by:
  8501 ;;		_main
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text31
  8506  003F98                     __ptext31:
  8507                           	callstack 0
  8508  003F98                     _USBCommandFetch:
  8509                           	callstack 12
  8510                           
  8511                           ;CommandHandler.c: 15:    char* readTokens[30];;CommandHandler.c: 16:    char s[2]="\n";
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;incstack = 0
  8515  003F98  C2F6  F23C         	movff	USBCommandFetch@F5850,USBCommandFetch@s
  8516  003F9C  C2F7  F23D         	movff	USBCommandFetch@F5850+1,USBCommandFetch@s+1
  8517                           
  8518                           ;CommandHandler.c: 18:    int lastTokenFlag=0;
  8519  003FA0  0E00               	movlw	0
  8520  003FA2  0102               	movlb	2	; () banked
  8521  003FA4  6F3F               	movwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),b
  8522  003FA6  0E00               	movlw	0
  8523  003FA8  6F3E               	movwf	USBCommandFetch@lastTokenFlag& (0+255),b
  8524                           
  8525                           ; BSR set to: 2
  8526                           ;CommandHandler.c: 19:    if(largo<5){
  8527  003FAA  0E05               	movlw	5
  8528  003FAC  0100               	movlb	0	; () banked
  8529  003FAE  61C4               	cpfslt	_largo& (0+255),b
  8530  003FB0  0012               	return	
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;CommandHandler.c: 20:          MCC_USB_READ();
  8534  003FB2  EC0D  F03E         	call	_MCC_USB_READ	;wreg free
  8535                           
  8536                           ;CommandHandler.c: 23:          if(numBytesRead>0){
  8537  003FB6  0101               	movlb	1	; () banked
  8538  003FB8  51E0               	movf	_numBytesRead& (0+255),w,b
  8539  003FBA  B4D8               	btfsc	status,2,c
  8540  003FBC  0012               	return	
  8541                           
  8542                           ; BSR set to: 1
  8543                           ;CommandHandler.c: 24:             memset(readTokens,0,sizeof(readTokens));
  8544  003FBE  0E00               	movlw	low USBCommandFetch@readTokens
  8545  003FC0  0100               	movlb	0	; () banked
  8546  003FC2  6F8C               	movwf	memset@dest& (0+255),b
  8547  003FC4  0E02               	movlw	high USBCommandFetch@readTokens
  8548  003FC6  6F8D               	movwf	(memset@dest+1)& (0+255),b
  8549  003FC8  0E00               	movlw	0
  8550  003FCA  6F8F               	movwf	(memset@c+1)& (0+255),b
  8551  003FCC  0E00               	movlw	0
  8552  003FCE  6F8E               	movwf	memset@c& (0+255),b
  8553  003FD0  0E00               	movlw	0
  8554  003FD2  6F91               	movwf	(memset@n+1)& (0+255),b
  8555  003FD4  0E3C               	movlw	60
  8556  003FD6  6F90               	movwf	memset@n& (0+255),b
  8557  003FD8  ECFD  F025         	call	_memset	;wreg free
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;CommandHandler.c: 25:             if(readBuffer[numBytesRead-1]!=0x0A){
  8561  003FDC  0E85               	movlw	low (_readBuffer+65535)
  8562  003FDE  0101               	movlb	1	; () banked
  8563  003FE0  25E0               	addwf	_numBytesRead& (0+255),w,b
  8564  003FE2  6ED9               	movwf	fsr2l,c
  8565  003FE4  6ADA               	clrf	fsr2h,c
  8566  003FE6  0E03               	movlw	high (_readBuffer+65535)
  8567  003FE8  22DA               	addwfc	fsr2h,f,c
  8568  003FEA  0E0A               	movlw	10
  8569  003FEC  18DE               	xorwf	postinc2,w,c
  8570  003FEE  B4D8               	btfsc	status,2,c
  8571  003FF0  D005               	goto	l15416
  8572                           
  8573                           ; BSR set to: 1
  8574                           ;CommandHandler.c: 26:                lastTokenFlag=1;
  8575  003FF2  0E00               	movlw	0
  8576  003FF4  0102               	movlb	2	; () banked
  8577  003FF6  6F3F               	movwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),b
  8578  003FF8  0E01               	movlw	1
  8579  003FFA  D004               	goto	L5
  8580  003FFC                     l15416:
  8581                           
  8582                           ; BSR set to: 1
  8583                           ;CommandHandler.c: 29:                lastTokenFlag=0;
  8584  003FFC  0E00               	movlw	0
  8585  003FFE  0102               	movlb	2	; () banked
  8586  004000  6F3F               	movwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),b
  8587  004002  0E00               	movlw	0
  8588  004004                     L5:
  8589  004004  6F3E               	movwf	USBCommandFetch@lastTokenFlag& (0+255),b
  8590                           
  8591                           ; BSR set to: 2
  8592                           ;CommandHandler.c: 32:             readTokens[0]=strtok(readBuffer,s);
  8593  004006  0E86               	movlw	low _readBuffer
  8594  004008  0100               	movlb	0	; () banked
  8595  00400A  6F98               	movwf	strtok@s& (0+255),b
  8596  00400C  0E03               	movlw	high _readBuffer
  8597  00400E  6F99               	movwf	(strtok@s+1)& (0+255),b
  8598  004010  0E3C               	movlw	low USBCommandFetch@s
  8599  004012  6F9A               	movwf	strtok@sep& (0+255),b
  8600  004014  0E02               	movlw	high USBCommandFetch@s
  8601  004016  6F9B               	movwf	(strtok@sep+1)& (0+255),b
  8602  004018  EC3D  F033         	call	_strtok	;wreg free
  8603  00401C  C098  F200         	movff	?_strtok,USBCommandFetch@readTokens
  8604  004020  C099  F201         	movff	?_strtok+1,USBCommandFetch@readTokens+1
  8605                           
  8606                           ;CommandHandler.c: 33:             sprintf(lastToken,"%s%s",lastToken,readTokens[0]);
  8607  004024  0EC6               	movlw	low _lastToken
  8608  004026  0101               	movlb	1	; () banked
  8609  004028  6F91               	movwf	sprintf@s& (0+255),b
  8610  00402A  0E03               	movlw	high _lastToken
  8611  00402C  6F92               	movwf	(sprintf@s+1)& (0+255),b
  8612  00402E  0EE2               	movlw	low STR_2
  8613  004030  6F93               	movwf	sprintf@fmt& (0+255),b
  8614  004032  0E7F               	movlw	high STR_2
  8615  004034  6F94               	movwf	(sprintf@fmt+1)& (0+255),b
  8616  004036  0EC6               	movlw	low _lastToken
  8617  004038  6F95               	movwf	(?_sprintf+4)& (0+255),b
  8618  00403A  0E03               	movlw	high _lastToken
  8619  00403C  6F96               	movwf	(?_sprintf+5)& (0+255),b
  8620  00403E  C200  F197         	movff	USBCommandFetch@readTokens,?_sprintf+6
  8621  004042  C201  F198         	movff	USBCommandFetch@readTokens+1,?_sprintf+7
  8622  004046  EC19  F03A         	call	_sprintf	;wreg free
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;CommandHandler.c: 34:             Fila_Agregar(lastToken,strlen(lastToken));
  8626  00404A  0EC6               	movlw	low _lastToken
  8627  00404C  0100               	movlb	0	; () banked
  8628  00404E  6F97               	movwf	Fila_Agregar@comando& (0+255),b
  8629  004050  0E03               	movlw	high _lastToken
  8630  004052  6F98               	movwf	(Fila_Agregar@comando+1)& (0+255),b
  8631  004054  0EC6               	movlw	low _lastToken
  8632  004056  6F8C               	movwf	strlen@s& (0+255),b
  8633  004058  0E03               	movlw	high _lastToken
  8634  00405A  6F8D               	movwf	(strlen@s+1)& (0+255),b
  8635  00405C  EC03  F03D         	call	_strlen	;wreg free
  8636  004060  C08C  F099         	movff	?_strlen,Fila_Agregar@nBytes
  8637  004064  C08D  F09A         	movff	?_strlen+1,Fila_Agregar@nBytes+1
  8638  004068  EC1C  F039         	call	_Fila_Agregar	;wreg free
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;CommandHandler.c: 35:             readTokens[1]=strtok(((void*)0),s);
  8642  00406C  0E00               	movlw	0
  8643  00406E  6F98               	movwf	strtok@s& (0+255),b
  8644  004070  0E00               	movlw	0
  8645  004072  6F99               	movwf	(strtok@s+1)& (0+255),b
  8646  004074  0E3C               	movlw	low USBCommandFetch@s
  8647  004076  6F9A               	movwf	strtok@sep& (0+255),b
  8648  004078  0E02               	movlw	high USBCommandFetch@s
  8649  00407A  6F9B               	movwf	(strtok@sep+1)& (0+255),b
  8650  00407C  EC3D  F033         	call	_strtok	;wreg free
  8651  004080  C098  F202         	movff	?_strtok,USBCommandFetch@readTokens+2
  8652  004084  C099  F203         	movff	?_strtok+1,USBCommandFetch@readTokens+3
  8653                           
  8654                           ;CommandHandler.c: 36:             i=1;
  8655  004088  0E00               	movlw	0
  8656  00408A  0102               	movlb	2	; () banked
  8657  00408C  6F41               	movwf	(USBCommandFetch@i+1)& (0+255),b
  8658  00408E  0E01               	movlw	1
  8659  004090  6F40               	movwf	USBCommandFetch@i& (0+255),b
  8660                           
  8661                           ;CommandHandler.c: 37:             while(readTokens[i]!=((void*)0)){
  8662  004092  D079               	goto	l15440
  8663  004094                     l15428:
  8664                           
  8665                           ; BSR set to: 2
  8666                           ;CommandHandler.c: 38:                readTokens[i+1]=strtok(((void*)0),s);
  8667  004094  0E00               	movlw	0
  8668  004096  0100               	movlb	0	; () banked
  8669  004098  6F98               	movwf	strtok@s& (0+255),b
  8670  00409A  0E00               	movlw	0
  8671  00409C  6F99               	movwf	(strtok@s+1)& (0+255),b
  8672  00409E  0E3C               	movlw	low USBCommandFetch@s
  8673  0040A0  6F9A               	movwf	strtok@sep& (0+255),b
  8674  0040A2  0E02               	movlw	high USBCommandFetch@s
  8675  0040A4  6F9B               	movwf	(strtok@sep+1)& (0+255),b
  8676  0040A6  EC3D  F033         	call	_strtok	;wreg free
  8677  0040AA  C240  F1AA         	movff	USBCommandFetch@i,??_USBCommandFetch
  8678  0040AE  C241  F1AB         	movff	USBCommandFetch@i+1,??_USBCommandFetch+1
  8679  0040B2  90D8               	bcf	status,0,c
  8680  0040B4  0101               	movlb	1	; () banked
  8681  0040B6  37AA               	rlcf	??_USBCommandFetch& (0+255),f,b
  8682  0040B8  37AB               	rlcf	(??_USBCommandFetch+1)& (0+255),f,b
  8683  0040BA  0E02               	movlw	2
  8684  0040BC  27AA               	addwf	??_USBCommandFetch& (0+255),f,b
  8685  0040BE  0E00               	movlw	0
  8686  0040C0  23AB               	addwfc	(??_USBCommandFetch+1)& (0+255),f,b
  8687  0040C2  0E00               	movlw	low USBCommandFetch@readTokens
  8688  0040C4  25AA               	addwf	??_USBCommandFetch& (0+255),w,b
  8689  0040C6  6ED9               	movwf	fsr2l,c
  8690  0040C8  0E02               	movlw	high USBCommandFetch@readTokens
  8691  0040CA  21AB               	addwfc	(??_USBCommandFetch+1)& (0+255),w,b
  8692  0040CC  6EDA               	movwf	fsr2h,c
  8693  0040CE  0100               	movlb	0	; () banked
  8694  0040D0  C098  FFDE         	movff	?_strtok,postinc2
  8695  0040D4  C099  FFDD         	movff	?_strtok+1,postdec2
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;CommandHandler.c: 39:                if(readTokens[i+1]!=((void*)0)||lastTokenFlag==0){
  8699  0040D8  C240  F1AA         	movff	USBCommandFetch@i,??_USBCommandFetch
  8700  0040DC  C241  F1AB         	movff	USBCommandFetch@i+1,??_USBCommandFetch+1
  8701  0040E0  90D8               	bcf	status,0,c
  8702  0040E2  0101               	movlb	1	; () banked
  8703  0040E4  37AA               	rlcf	??_USBCommandFetch& (0+255),f,b
  8704  0040E6  37AB               	rlcf	(??_USBCommandFetch+1)& (0+255),f,b
  8705  0040E8  0E02               	movlw	2
  8706  0040EA  27AA               	addwf	??_USBCommandFetch& (0+255),f,b
  8707  0040EC  0E00               	movlw	0
  8708  0040EE  23AB               	addwfc	(??_USBCommandFetch+1)& (0+255),f,b
  8709  0040F0  0E00               	movlw	low USBCommandFetch@readTokens
  8710  0040F2  25AA               	addwf	??_USBCommandFetch& (0+255),w,b
  8711  0040F4  6ED9               	movwf	fsr2l,c
  8712  0040F6  0E02               	movlw	high USBCommandFetch@readTokens
  8713  0040F8  21AB               	addwfc	(??_USBCommandFetch+1)& (0+255),w,b
  8714  0040FA  6EDA               	movwf	fsr2h,c
  8715  0040FC  50DE               	movf	postinc2,w,c
  8716  0040FE  10DE               	iorwf	postinc2,w,c
  8717  004100  A4D8               	btfss	status,2,c
  8718  004102  D005               	goto	u19050
  8719                           
  8720                           ; BSR set to: 1
  8721  004104  0102               	movlb	2	; () banked
  8722  004106  513E               	movf	USBCommandFetch@lastTokenFlag& (0+255),w,b
  8723  004108  113F               	iorwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),w,b
  8724  00410A  A4D8               	btfss	status,2,c
  8725  00410C  D024               	goto	l15436
  8726  00410E                     u19050:
  8727                           
  8728                           ;CommandHandler.c: 40:                   Fila_Agregar(readTokens[i],strlen(readTokens[i]
      +                          ));
  8729  00410E  90D8               	bcf	status,0,c
  8730  004110  0102               	movlb	2	; () banked
  8731  004112  3540               	rlcf	USBCommandFetch@i& (0+255),w,b
  8732  004114  6ED9               	movwf	fsr2l,c
  8733  004116  3541               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  8734  004118  6EDA               	movwf	fsr2h,c
  8735  00411A  0E00               	movlw	low USBCommandFetch@readTokens
  8736  00411C  26D9               	addwf	fsr2l,f,c
  8737  00411E  0E02               	movlw	high USBCommandFetch@readTokens
  8738  004120  22DA               	addwfc	fsr2h,f,c
  8739  004122  CFDE F097          	movff	postinc2,Fila_Agregar@comando
  8740  004126  CFDD F098          	movff	postdec2,Fila_Agregar@comando+1
  8741  00412A  90D8               	bcf	status,0,c
  8742  00412C  3540               	rlcf	USBCommandFetch@i& (0+255),w,b
  8743  00412E  6ED9               	movwf	fsr2l,c
  8744  004130  3541               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  8745  004132  6EDA               	movwf	fsr2h,c
  8746  004134  0E00               	movlw	low USBCommandFetch@readTokens
  8747  004136  26D9               	addwf	fsr2l,f,c
  8748  004138  0E02               	movlw	high USBCommandFetch@readTokens
  8749  00413A  22DA               	addwfc	fsr2h,f,c
  8750  00413C  CFDE F08C          	movff	postinc2,strlen@s
  8751  004140  CFDD F08D          	movff	postdec2,strlen@s+1
  8752  004144  EC03  F03D         	call	_strlen	;wreg free
  8753  004148  C08C  F099         	movff	?_strlen,Fila_Agregar@nBytes
  8754  00414C  C08D  F09A         	movff	?_strlen+1,Fila_Agregar@nBytes+1
  8755  004150  EC1C  F039         	call	_Fila_Agregar	;wreg free
  8756                           
  8757                           ;CommandHandler.c: 41:                }
  8758  004154  D015               	goto	l15438
  8759  004156                     l15436:
  8760                           
  8761                           ; BSR set to: 2
  8762  004156  0EC6               	movlw	low _lastToken
  8763  004158  0100               	movlb	0	; () banked
  8764  00415A  6F8C               	movwf	strcpy@dest& (0+255),b
  8765  00415C  0E03               	movlw	high _lastToken
  8766  00415E  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
  8767  004160  90D8               	bcf	status,0,c
  8768  004162  0102               	movlb	2	; () banked
  8769  004164  3540               	rlcf	USBCommandFetch@i& (0+255),w,b
  8770  004166  6ED9               	movwf	fsr2l,c
  8771  004168  3541               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  8772  00416A  6EDA               	movwf	fsr2h,c
  8773  00416C  0E00               	movlw	low USBCommandFetch@readTokens
  8774  00416E  26D9               	addwf	fsr2l,f,c
  8775  004170  0E02               	movlw	high USBCommandFetch@readTokens
  8776  004172  22DA               	addwfc	fsr2h,f,c
  8777  004174  CFDE F08E          	movff	postinc2,strcpy@src
  8778  004178  CFDD F08F          	movff	postdec2,strcpy@src+1
  8779  00417C  EC9F  F039         	call	_strcpy	;wreg free
  8780  004180                     l15438:
  8781                           
  8782                           ;CommandHandler.c: 43:                i++;
  8783  004180  0102               	movlb	2	; () banked
  8784  004182  4B40               	infsnz	USBCommandFetch@i& (0+255),f,b
  8785  004184  2B41               	incf	(USBCommandFetch@i+1)& (0+255),f,b
  8786  004186                     l15440:
  8787                           
  8788                           ; BSR set to: 2
  8789                           ;CommandHandler.c: 37:             while(readTokens[i]!=((void*)0)){
  8790  004186  90D8               	bcf	status,0,c
  8791  004188  3540               	rlcf	USBCommandFetch@i& (0+255),w,b
  8792  00418A  6ED9               	movwf	fsr2l,c
  8793  00418C  3541               	rlcf	(USBCommandFetch@i+1)& (0+255),w,b
  8794  00418E  6EDA               	movwf	fsr2h,c
  8795  004190  0E00               	movlw	low USBCommandFetch@readTokens
  8796  004192  26D9               	addwf	fsr2l,f,c
  8797  004194  0E02               	movlw	high USBCommandFetch@readTokens
  8798  004196  22DA               	addwfc	fsr2h,f,c
  8799  004198  50DE               	movf	postinc2,w,c
  8800  00419A  10DE               	iorwf	postinc2,w,c
  8801  00419C  A4D8               	btfss	status,2,c
  8802  00419E  D77A               	goto	l15428
  8803                           
  8804                           ; BSR set to: 2
  8805                           ;CommandHandler.c: 45:             if(lastTokenFlag==0){
  8806  0041A0  513E               	movf	USBCommandFetch@lastTokenFlag& (0+255),w,b
  8807  0041A2  113F               	iorwf	(USBCommandFetch@lastTokenFlag+1)& (0+255),w,b
  8808  0041A4  A4D8               	btfss	status,2,c
  8809  0041A6  D00F               	goto	l15446
  8810                           
  8811                           ; BSR set to: 2
  8812                           ;CommandHandler.c: 46:                memset(lastToken,0,sizeof(lastToken));
  8813  0041A8  0EC6               	movlw	low _lastToken
  8814  0041AA  0100               	movlb	0	; () banked
  8815  0041AC  6F8C               	movwf	memset@dest& (0+255),b
  8816  0041AE  0E03               	movlw	high _lastToken
  8817  0041B0  6F8D               	movwf	(memset@dest+1)& (0+255),b
  8818  0041B2  0E00               	movlw	0
  8819  0041B4  6F8F               	movwf	(memset@c+1)& (0+255),b
  8820  0041B6  0E00               	movlw	0
  8821  0041B8  6F8E               	movwf	memset@c& (0+255),b
  8822  0041BA  0E00               	movlw	0
  8823  0041BC  6F91               	movwf	(memset@n+1)& (0+255),b
  8824  0041BE  0E1E               	movlw	30
  8825  0041C0  6F90               	movwf	memset@n& (0+255),b
  8826  0041C2  ECFD  F025         	call	_memset	;wreg free
  8827  0041C6                     l15446:
  8828                           
  8829                           ;CommandHandler.c: 48:             numBytesRead=0;
  8830  0041C6  0E00               	movlw	0
  8831  0041C8  0101               	movlb	1	; () banked
  8832  0041CA  6FE0               	movwf	_numBytesRead& (0+255),b
  8833                           
  8834                           ; BSR set to: 1
  8835                           ;CommandHandler.c: 49:             memset(readBuffer,0,sizeof(readBuffer));
  8836  0041CC  0E86               	movlw	low _readBuffer
  8837  0041CE  0100               	movlb	0	; () banked
  8838  0041D0  6F8C               	movwf	memset@dest& (0+255),b
  8839  0041D2  0E03               	movlw	high _readBuffer
  8840  0041D4  6F8D               	movwf	(memset@dest+1)& (0+255),b
  8841  0041D6  0E00               	movlw	0
  8842  0041D8  6F8F               	movwf	(memset@c+1)& (0+255),b
  8843  0041DA  0E00               	movlw	0
  8844  0041DC  6F8E               	movwf	memset@c& (0+255),b
  8845  0041DE  0E00               	movlw	0
  8846  0041E0  6F91               	movwf	(memset@n+1)& (0+255),b
  8847  0041E2  0E20               	movlw	32
  8848  0041E4  6F90               	movwf	memset@n& (0+255),b
  8849  0041E6  ECFD  F025         	call	_memset	;wreg free
  8850  0041EA  0012               	return		;funcret
  8851  0041EC                     __end_of_USBCommandFetch:
  8852                           	callstack 0
  8853                           
  8854 ;; *************** function _strtok *****************
  8855 ;; Defined at:
  8856 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strtok.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  s               2   56[BANK0 ] PTR unsigned char 
  8859 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  8860 ;;  sep             2   58[BANK0 ] PTR const unsigned char 
  8861 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  2   56[BANK0 ] PTR unsigned char 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 3F/0
  8870 ;;		On exit  : 3E/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8873 ;;      Params:         0       4       0       0       0       0       0       0       0
  8874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8876 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8877 ;;Total ram usage:        4 bytes
  8878 ;; Hardware stack levels used: 1
  8879 ;; Hardware stack levels required when called: 12
  8880 ;; This function calls:
  8881 ;;		_strcspn
  8882 ;;		_strspn
  8883 ;; This function is called by:
  8884 ;;		_getTokens
  8885 ;;		_USBCommandFetch
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text32
  8890  00667A                     __ptext32:
  8891                           	callstack 0
  8892  00667A                     _strtok:
  8893                           	callstack 16
  8894                           
  8895                           ; BSR set to: 0
  8896                           
  8897                           ;incstack = 0
  8898  00667A  5198               	movf	strtok@s& (0+255),w,b
  8899  00667C  1199               	iorwf	(strtok@s+1)& (0+255),w,b
  8900  00667E  A4D8               	btfss	status,2,c
  8901  006680  D00D               	goto	l14334
  8902                           
  8903                           ; BSR set to: 0
  8904  006682  C1C5  F098         	movff	strtok@p,strtok@s
  8905  006686  C1C6  F099         	movff	strtok@p+1,strtok@s+1
  8906  00668A  5198               	movf	strtok@s& (0+255),w,b
  8907  00668C  1199               	iorwf	(strtok@s+1)& (0+255),w,b
  8908  00668E  A4D8               	btfss	status,2,c
  8909  006690  D005               	goto	l14334
  8910                           
  8911                           ; BSR set to: 0
  8912  006692  0E00               	movlw	0
  8913  006694  6F98               	movwf	?_strtok& (0+255),b
  8914  006696  0E00               	movlw	0
  8915  006698  6F99               	movwf	(?_strtok+1)& (0+255),b
  8916  00669A  0012               	return	
  8917  00669C                     l14334:
  8918                           
  8919                           ; BSR set to: 0
  8920  00669C  C098  F091         	movff	strtok@s,strspn@s
  8921  0066A0  C099  F092         	movff	strtok@s+1,strspn@s+1
  8922  0066A4  C09A  F093         	movff	strtok@sep,strspn@c
  8923  0066A8  C09B  F094         	movff	strtok@sep+1,strspn@c+1
  8924  0066AC  ECC9  F039         	call	_strspn	;wreg free
  8925  0066B0  5191               	movf	?_strspn& (0+255),w,b
  8926  0066B2  2798               	addwf	strtok@s& (0+255),f,b
  8927  0066B4  5192               	movf	(?_strspn+1)& (0+255),w,b
  8928  0066B6  2399               	addwfc	(strtok@s+1)& (0+255),f,b
  8929                           
  8930                           ; BSR set to: 0
  8931  0066B8  C098  FFD9         	movff	strtok@s,fsr2l
  8932  0066BC  C099  FFDA         	movff	strtok@s+1,fsr2h
  8933  0066C0  50DF               	movf	indf2,w,c
  8934  0066C2  A4D8               	btfss	status,2,c
  8935  0066C4  D00A               	goto	l14342
  8936                           
  8937                           ; BSR set to: 0
  8938  0066C6  0E00               	movlw	0
  8939  0066C8  0101               	movlb	1	; () banked
  8940  0066CA  6FC5               	movwf	strtok@p& (0+255),b
  8941  0066CC  0E00               	movlw	0
  8942  0066CE  6FC6               	movwf	(strtok@p+1)& (0+255),b
  8943  0066D0  C1C5  F098         	movff	strtok@p,?_strtok
  8944  0066D4  C1C6  F099         	movff	strtok@p+1,?_strtok+1
  8945  0066D8  0012               	return	
  8946  0066DA                     l14342:
  8947                           
  8948                           ; BSR set to: 0
  8949  0066DA  C098  F091         	movff	strtok@s,strcspn@s
  8950  0066DE  C099  F092         	movff	strtok@s+1,strcspn@s+1
  8951  0066E2  C09A  F093         	movff	strtok@sep,strcspn@c
  8952  0066E6  C09B  F094         	movff	strtok@sep+1,strcspn@c+1
  8953  0066EA  ECF1  F039         	call	_strcspn	;wreg free
  8954  0066EE  5191               	movf	?_strcspn& (0+255),w,b
  8955  0066F0  2598               	addwf	strtok@s& (0+255),w,b
  8956  0066F2  0101               	movlb	1	; () banked
  8957  0066F4  6FC5               	movwf	strtok@p& (0+255),b
  8958  0066F6  0100               	movlb	0	; () banked
  8959  0066F8  5192               	movf	(?_strcspn+1)& (0+255),w,b
  8960  0066FA  2199               	addwfc	(strtok@s+1)& (0+255),w,b
  8961  0066FC  0101               	movlb	1	; () banked
  8962  0066FE  6FC6               	movwf	(strtok@p+1)& (0+255),b
  8963                           
  8964                           ; BSR set to: 1
  8965  006700  C1C5  FFD9         	movff	strtok@p,fsr2l
  8966  006704  C1C6  FFDA         	movff	strtok@p+1,fsr2h
  8967  006708  50DF               	movf	indf2,w,c
  8968  00670A  B4D8               	btfsc	status,2,c
  8969  00670C  D009               	goto	l14350
  8970                           
  8971                           ; BSR set to: 1
  8972  00670E  C1C5  FFD9         	movff	strtok@p,fsr2l
  8973  006712  C1C6  FFDA         	movff	strtok@p+1,fsr2h
  8974  006716  0E00               	movlw	0
  8975  006718  6EDF               	movwf	indf2,c
  8976                           
  8977                           ; BSR set to: 1
  8978  00671A  4BC5               	infsnz	strtok@p& (0+255),f,b
  8979  00671C  2BC6               	incf	(strtok@p+1)& (0+255),f,b
  8980  00671E  D004               	goto	l2724
  8981  006720                     l14350:
  8982                           
  8983                           ; BSR set to: 1
  8984  006720  0E00               	movlw	0
  8985  006722  6FC5               	movwf	strtok@p& (0+255),b
  8986  006724  0E00               	movlw	0
  8987  006726  6FC6               	movwf	(strtok@p+1)& (0+255),b
  8988  006728                     l2724:
  8989                           
  8990                           ; BSR set to: 1
  8991  006728  C098  F098         	movff	strtok@s,?_strtok
  8992  00672C  C099  F099         	movff	strtok@s+1,?_strtok+1
  8993  006730  0012               	return		;funcret
  8994  006732                     __end_of_strtok:
  8995                           	callstack 0
  8996                           
  8997 ;; *************** function _strspn *****************
  8998 ;; Defined at:
  8999 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strspn.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  s               2   49[BANK0 ] PTR const unsigned char 
  9002 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  9003 ;;  c               2   51[BANK0 ] PTR const unsigned char 
  9004 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  i               2   54[BANK0 ] unsigned int 
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  2   49[BANK0 ] unsigned int 
  9009 ;; Registers used:
  9010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 3F/0
  9013 ;;		On exit  : 3F/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9016 ;;      Params:         0       4       0       0       0       0       0       0       0
  9017 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9018 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9019 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9020 ;;Total ram usage:        7 bytes
  9021 ;; Hardware stack levels used: 1
  9022 ;; Hardware stack levels required when called: 11
  9023 ;; This function calls:
  9024 ;;		_strchr
  9025 ;; This function is called by:
  9026 ;;		_strtok
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text33
  9031  007392                     __ptext33:
  9032                           	callstack 0
  9033  007392                     _strspn:
  9034                           	callstack 16
  9035                           
  9036                           ; BSR set to: 0
  9037                           
  9038                           ;incstack = 0
  9039  007392  0E00               	movlw	0
  9040  007394  6F97               	movwf	(strspn@i+1)& (0+255),b
  9041  007396  0E00               	movlw	0
  9042  007398  6F96               	movwf	strspn@i& (0+255),b
  9043  00739A  D004               	goto	l14220
  9044  00739C                     l14218:
  9045                           
  9046                           ; BSR set to: 0
  9047  00739C  4B91               	infsnz	strspn@s& (0+255),f,b
  9048  00739E  2B92               	incf	(strspn@s+1)& (0+255),f,b
  9049  0073A0  4B96               	infsnz	strspn@i& (0+255),f,b
  9050  0073A2  2B97               	incf	(strspn@i+1)& (0+255),f,b
  9051  0073A4                     l14220:
  9052                           
  9053                           ; BSR set to: 0
  9054  0073A4  C091  FFD9         	movff	strspn@s,fsr2l
  9055  0073A8  C092  FFDA         	movff	strspn@s+1,fsr2h
  9056  0073AC  50DF               	movf	indf2,w,c
  9057  0073AE  B4D8               	btfsc	status,2,c
  9058  0073B0  D013               	goto	u17130
  9059                           
  9060                           ; BSR set to: 0
  9061  0073B2  C093  F08C         	movff	strspn@c,strchr@s
  9062  0073B6  C094  F08D         	movff	strspn@c+1,strchr@s+1
  9063  0073BA  C091  FFD9         	movff	strspn@s,fsr2l
  9064  0073BE  C092  FFDA         	movff	strspn@s+1,fsr2h
  9065  0073C2  50DF               	movf	indf2,w,c
  9066  0073C4  6F95               	movwf	??_strspn& (0+255),b
  9067  0073C6  5195               	movf	??_strspn& (0+255),w,b
  9068  0073C8  6F8E               	movwf	strchr@c& (0+255),b
  9069  0073CA  6B8F               	clrf	(strchr@c+1)& (0+255),b
  9070  0073CC  EC21  F03C         	call	_strchr	;wreg free
  9071  0073D0  518C               	movf	?_strchr& (0+255),w,b
  9072  0073D2  118D               	iorwf	(?_strchr+1)& (0+255),w,b
  9073  0073D4  A4D8               	btfss	status,2,c
  9074  0073D6  D7E2               	goto	l14218
  9075  0073D8                     u17130:
  9076                           
  9077                           ; BSR set to: 0
  9078  0073D8  C096  F091         	movff	strspn@i,?_strspn
  9079  0073DC  C097  F092         	movff	strspn@i+1,?_strspn+1
  9080                           
  9081                           ; BSR set to: 0
  9082  0073E0  0012               	return		;funcret
  9083  0073E2                     __end_of_strspn:
  9084                           	callstack 0
  9085                           
  9086 ;; *************** function _strcspn *****************
  9087 ;; Defined at:
  9088 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strcspn.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;  s               2   49[BANK0 ] PTR const unsigned char 
  9091 ;;		 -> executeCommand@strCommand(30), readBuffer(32), NULL(0), 
  9092 ;;  c               2   51[BANK0 ] PTR const unsigned char 
  9093 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  i               2   54[BANK0 ] unsigned int 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  2   49[BANK0 ] unsigned int 
  9098 ;; Registers used:
  9099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9100 ;; Tracked objects:
  9101 ;;		On entry : 3F/0
  9102 ;;		On exit  : 3F/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9105 ;;      Params:         0       4       0       0       0       0       0       0       0
  9106 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9107 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9108 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9109 ;;Total ram usage:        7 bytes
  9110 ;; Hardware stack levels used: 1
  9111 ;; Hardware stack levels required when called: 11
  9112 ;; This function calls:
  9113 ;;		_strchr
  9114 ;; This function is called by:
  9115 ;;		_strtok
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text34
  9120  0073E2                     __ptext34:
  9121                           	callstack 0
  9122  0073E2                     _strcspn:
  9123                           	callstack 16
  9124                           
  9125                           ; BSR set to: 0
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;incstack = 0
  9129  0073E2  0E00               	movlw	0
  9130  0073E4  6F97               	movwf	(strcspn@i+1)& (0+255),b
  9131  0073E6  0E00               	movlw	0
  9132  0073E8  6F96               	movwf	strcspn@i& (0+255),b
  9133  0073EA  D004               	goto	l14228
  9134  0073EC                     l14226:
  9135                           
  9136                           ; BSR set to: 0
  9137  0073EC  4B91               	infsnz	strcspn@s& (0+255),f,b
  9138  0073EE  2B92               	incf	(strcspn@s+1)& (0+255),f,b
  9139  0073F0  4B96               	infsnz	strcspn@i& (0+255),f,b
  9140  0073F2  2B97               	incf	(strcspn@i+1)& (0+255),f,b
  9141  0073F4                     l14228:
  9142                           
  9143                           ; BSR set to: 0
  9144  0073F4  C091  FFD9         	movff	strcspn@s,fsr2l
  9145  0073F8  C092  FFDA         	movff	strcspn@s+1,fsr2h
  9146  0073FC  50DF               	movf	indf2,w,c
  9147  0073FE  B4D8               	btfsc	status,2,c
  9148  007400  D013               	goto	u17150
  9149                           
  9150                           ; BSR set to: 0
  9151  007402  C093  F08C         	movff	strcspn@c,strchr@s
  9152  007406  C094  F08D         	movff	strcspn@c+1,strchr@s+1
  9153  00740A  C091  FFD9         	movff	strcspn@s,fsr2l
  9154  00740E  C092  FFDA         	movff	strcspn@s+1,fsr2h
  9155  007412  50DF               	movf	indf2,w,c
  9156  007414  6F95               	movwf	??_strcspn& (0+255),b
  9157  007416  5195               	movf	??_strcspn& (0+255),w,b
  9158  007418  6F8E               	movwf	strchr@c& (0+255),b
  9159  00741A  6B8F               	clrf	(strchr@c+1)& (0+255),b
  9160  00741C  EC21  F03C         	call	_strchr	;wreg free
  9161  007420  518C               	movf	?_strchr& (0+255),w,b
  9162  007422  118D               	iorwf	(?_strchr+1)& (0+255),w,b
  9163  007424  B4D8               	btfsc	status,2,c
  9164  007426  D7E2               	goto	l14226
  9165  007428                     u17150:
  9166                           
  9167                           ; BSR set to: 0
  9168  007428  C096  F091         	movff	strcspn@i,?_strcspn
  9169  00742C  C097  F092         	movff	strcspn@i+1,?_strcspn+1
  9170                           
  9171                           ; BSR set to: 0
  9172  007430  0012               	return		;funcret
  9173  007432                     __end_of_strcspn:
  9174                           	callstack 0
  9175                           
  9176 ;; *************** function _strchr *****************
  9177 ;; Defined at:
  9178 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strchr.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  s               2   44[BANK0 ] PTR const unsigned char 
  9181 ;;		 -> USBCommandFetch@s(2), getTokens@s(2), 
  9182 ;;  c               2   46[BANK0 ] int 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  2   44[BANK0 ] PTR unsigned char 
  9187 ;; Registers used:
  9188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9189 ;; Tracked objects:
  9190 ;;		On entry : 3F/0
  9191 ;;		On exit  : 3F/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9194 ;;      Params:         0       4       0       0       0       0       0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9196 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9197 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9198 ;;Total ram usage:        5 bytes
  9199 ;; Hardware stack levels used: 1
  9200 ;; Hardware stack levels required when called: 10
  9201 ;; This function calls:
  9202 ;;		Nothing
  9203 ;; This function is called by:
  9204 ;;		_strcspn
  9205 ;;		_strspn
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text35
  9210  007842                     __ptext35:
  9211                           	callstack 0
  9212  007842                     _strchr:
  9213                           	callstack 16
  9214                           
  9215                           ; BSR set to: 0
  9216                           
  9217                           ; BSR set to: 0
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;incstack = 0
  9221  007842  C08C  FFD9         	movff	strchr@s,fsr2l
  9222  007846  C08D  FFDA         	movff	strchr@s+1,fsr2h
  9223  00784A  518E               	movf	strchr@c& (0+255),w,b
  9224  00784C  18DE               	xorwf	postinc2,w,c
  9225  00784E  A4D8               	btfss	status,2,c
  9226  007850  D005               	goto	l13994
  9227                           
  9228                           ; BSR set to: 0
  9229  007852  C08C  F08C         	movff	strchr@s,?_strchr
  9230  007856  C08D  F08D         	movff	strchr@s+1,?_strchr+1
  9231  00785A  0012               	return	
  9232  00785C                     l13994:
  9233                           
  9234                           ; BSR set to: 0
  9235  00785C  C08C  FFD9         	movff	strchr@s,fsr2l
  9236  007860  C08D  FFDA         	movff	strchr@s+1,fsr2h
  9237  007864  4B8C               	infsnz	strchr@s& (0+255),f,b
  9238  007866  2B8D               	incf	(strchr@s+1)& (0+255),f,b
  9239  007868  50DF               	movf	indf2,w,c
  9240  00786A  A4D8               	btfss	status,2,c
  9241  00786C  D7EA               	goto	__ptext35
  9242                           
  9243                           ; BSR set to: 0
  9244  00786E  0E00               	movlw	0
  9245  007870  6F8C               	movwf	?_strchr& (0+255),b
  9246  007872  0E00               	movlw	0
  9247  007874  6F8D               	movwf	(?_strchr+1)& (0+255),b
  9248                           
  9249                           ; BSR set to: 0
  9250  007876  0012               	return		;funcret
  9251  007878                     __end_of_strchr:
  9252                           	callstack 0
  9253                           
  9254 ;; *************** function _sprintf *****************
  9255 ;; Defined at:
  9256 ;;		line 9 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  s               2  145[BANK1 ] PTR unsigned char 
  9259 ;;		 -> lastToken(30), writeBuffer(32), 
  9260 ;;  fmt             2  147[BANK1 ] PTR const unsigned char 
  9261 ;;		 -> STR_3(5), STR_2(5), STR_1(13), 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  f              11  159[BANK1 ] struct _IO_FILE
  9264 ;;  ap              2  157[BANK1 ] PTR void [1]
  9265 ;;		 -> ?_sprintf(2), 
  9266 ;;  ret             2    0        int 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  2  145[BANK1 ] int 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 3F/1
  9273 ;;		On exit  : 3F/1
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9276 ;;      Params:         0       0      12       0       0       0       0       0       0
  9277 ;;      Locals:         0       0      13       0       0       0       0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9279 ;;      Totals:         0       0      25       0       0       0       0       0       0
  9280 ;;Total ram usage:       25 bytes
  9281 ;; Hardware stack levels used: 1
  9282 ;; Hardware stack levels required when called: 17
  9283 ;; This function calls:
  9284 ;;		_vfprintf
  9285 ;; This function is called by:
  9286 ;;		_main
  9287 ;;		_USBCommandFetch
  9288 ;;		_executeCommand
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text36
  9293  007432                     __ptext36:
  9294                           	callstack 0
  9295  007432                     _sprintf:
  9296                           	callstack 13
  9297                           
  9298                           ; BSR set to: 1
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;incstack = 0
  9302  007432  0E95               	movlw	low (?_sprintf+4)
  9303  007434  6F9D               	movwf	sprintf@ap& (0+255),b
  9304  007436  0E01               	movlw	high (?_sprintf+4)
  9305  007438  6F9E               	movwf	(sprintf@ap+1)& (0+255),b
  9306  00743A  C191  F19F         	movff	sprintf@s,sprintf@f
  9307  00743E  C192  F1A0         	movff	sprintf@s+1,sprintf@f+1
  9308                           
  9309                           ; BSR set to: 1
  9310  007442  0E00               	movlw	0
  9311  007444  6FA3               	movwf	(sprintf@f+4)& (0+255),b
  9312  007446  0E00               	movlw	0
  9313  007448  6FA2               	movwf	(sprintf@f+3)& (0+255),b
  9314                           
  9315                           ; BSR set to: 1
  9316  00744A  0E00               	movlw	0
  9317  00744C  6FA9               	movwf	(sprintf@f+10)& (0+255),b
  9318  00744E  0E00               	movlw	0
  9319  007450  6FA8               	movwf	(sprintf@f+9)& (0+255),b
  9320                           
  9321                           ; BSR set to: 1
  9322  007452  0E9F               	movlw	low sprintf@f
  9323  007454  6F89               	movwf	vfprintf@fp& (0+255),b
  9324  007456  0E01               	movlw	high sprintf@f
  9325  007458  6F8A               	movwf	(vfprintf@fp+1)& (0+255),b
  9326  00745A  C193  F18B         	movff	sprintf@fmt,vfprintf@fmt
  9327  00745E  C194  F18C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9328  007462  0E9D               	movlw	low sprintf@ap
  9329  007464  6F8D               	movwf	vfprintf@ap& (0+255),b
  9330  007466  0E01               	movlw	high sprintf@ap
  9331  007468  6F8E               	movwf	(vfprintf@ap+1)& (0+255),b
  9332  00746A  EC63  F038         	call	_vfprintf	;wreg free
  9333                           
  9334                           ; BSR set to: 2
  9335  00746E  0101               	movlb	1	; () banked
  9336  007470  51A2               	movf	(sprintf@f+3)& (0+255),w,b
  9337  007472  2591               	addwf	sprintf@s& (0+255),w,b
  9338  007474  6ED9               	movwf	fsr2l,c
  9339  007476  51A3               	movf	(sprintf@f+4)& (0+255),w,b
  9340  007478  2192               	addwfc	(sprintf@s+1)& (0+255),w,b
  9341  00747A  6EDA               	movwf	fsr2h,c
  9342  00747C  0E00               	movlw	0
  9343  00747E  6EDF               	movwf	indf2,c
  9344                           
  9345                           ; BSR set to: 1
  9346  007480  0012               	return		;funcret
  9347  007482                     __end_of_sprintf:
  9348                           	callstack 0
  9349                           
  9350 ;; *************** function _vfprintf *****************
  9351 ;; Defined at:
  9352 ;;		line 1390 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  fp              2  137[BANK1 ] PTR struct _IO_FILE
  9355 ;;		 -> sprintf@f(11), 
  9356 ;;  fmt             2  139[BANK1 ] PTR const unsigned char 
  9357 ;;		 -> STR_3(5), STR_2(5), STR_1(13), 
  9358 ;;  ap              2  141[BANK1 ] PTR PTR void 
  9359 ;;		 -> sprintf@ap(2), 
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;  cfmt            2  143[BANK1 ] PTR unsigned char 
  9362 ;;		 -> STR_3(5), STR_2(5), STR_1(13), 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  2  137[BANK1 ] int 
  9365 ;; Registers used:
  9366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 3F/1
  9369 ;;		On exit  : 3F/2
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9372 ;;      Params:         0       0       6       0       0       0       0       0       0
  9373 ;;      Locals:         0       0       2       0       0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9375 ;;      Totals:         0       0       8       0       0       0       0       0       0
  9376 ;;Total ram usage:        8 bytes
  9377 ;; Hardware stack levels used: 1
  9378 ;; Hardware stack levels required when called: 16
  9379 ;; This function calls:
  9380 ;;		_vfpfcnvrt
  9381 ;; This function is called by:
  9382 ;;		_sprintf
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text37
  9387  0070C6                     __ptext37:
  9388                           	callstack 0
  9389  0070C6                     _vfprintf:
  9390                           	callstack 13
  9391                           
  9392                           ; BSR set to: 1
  9393                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.36/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  9394                           
  9395                           ; BSR set to: 1
  9396                           ;incstack = 0
  9397  0070C6  C18B  F18F         	movff	vfprintf@fmt,vfprintf@cfmt
  9398  0070CA  C18C  F190         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9399                           
  9400                           ; BSR set to: 1
  9401                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  9402  0070CE  0E00               	movlw	0
  9403  0070D0  0102               	movlb	2	; () banked
  9404  0070D2  6FD3               	movwf	(_nout+1)& (0+255),b
  9405  0070D4  0E00               	movlw	0
  9406  0070D6  6FD2               	movwf	_nout& (0+255),b
  9407                           
  9408                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  9409  0070D8  D017               	goto	l14846
  9410  0070DA                     l14844:
  9411                           
  9412                           ; BSR set to: 2
  9413                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  9414  0070DA  C189  F16B         	movff	vfprintf@fp,vfpfcnvrt@fp
  9415  0070DE  C18A  F16C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9416  0070E2  0E8F               	movlw	low vfprintf@cfmt
  9417  0070E4  0101               	movlb	1	; () banked
  9418  0070E6  6F6D               	movwf	vfpfcnvrt@fmt& (0+255),b
  9419  0070E8  0E01               	movlw	high vfprintf@cfmt
  9420  0070EA  6F6E               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9421  0070EC  C18D  F16F         	movff	vfprintf@ap,vfpfcnvrt@ap
  9422  0070F0  C18E  F170         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9423  0070F4  ECF1  F00B         	call	_vfpfcnvrt	;wreg free
  9424  0070F8  0101               	movlb	1	; () banked
  9425  0070FA  516B               	movf	?_vfpfcnvrt& (0+255),w,b
  9426  0070FC  0102               	movlb	2	; () banked
  9427  0070FE  27D2               	addwf	_nout& (0+255),f,b
  9428  007100  0101               	movlb	1	; () banked
  9429  007102  516C               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9430  007104  0102               	movlb	2	; () banked
  9431  007106  23D3               	addwfc	(_nout+1)& (0+255),f,b
  9432  007108                     l14846:
  9433                           
  9434                           ; BSR set to: 2
  9435                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  9436  007108  C18F  FFF6         	movff	vfprintf@cfmt,tblptrl
  9437  00710C  C190  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9438  007110                     	if	0	;tblptru may be non-zero
  9439  007110                     	endif
  9440  007110                     	if	0	;tblptru may be non-zero
  9441  007110                     	endif
  9442  007110  0008               	tblrd		*
  9443  007112  50F5               	movf	tablat,w,c
  9444  007114  0900               	iorlw	0
  9445  007116  A4D8               	btfss	status,2,c
  9446  007118  D7E0               	goto	l14844
  9447                           
  9448                           ; BSR set to: 2
  9449                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  9450  00711A  C2D2  F189         	movff	_nout,?_vfprintf
  9451  00711E  C2D3  F18A         	movff	_nout+1,?_vfprintf+1
  9452                           
  9453                           ; BSR set to: 2
  9454  007122  0012               	return		;funcret
  9455  007124                     __end_of_vfprintf:
  9456                           	callstack 0
  9457                           
  9458 ;; *************** function _vfpfcnvrt *****************
  9459 ;; Defined at:
  9460 ;;		line 692 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  fp              2  107[BANK1 ] PTR struct _IO_FILE
  9463 ;;		 -> sprintf@f(11), 
  9464 ;;  fmt             2  109[BANK1 ] PTR PTR unsigned char 
  9465 ;;		 -> vfprintf@cfmt(2), 
  9466 ;;  ap              2  111[BANK1 ] PTR PTR void 
  9467 ;;		 -> sprintf@ap(2), 
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  ll              8  117[BANK1 ] long long 
  9470 ;;  llu             8    0        unsigned long long 
  9471 ;;  f               4  129[BANK1 ] unsigned long long 
  9472 ;;  ct              3  133[BANK1 ] unsigned char [3]
  9473 ;;  vp              3    0        PTR void 
  9474 ;;  cp              2  125[BANK1 ] PTR unsigned char 
  9475 ;;		 -> ?_sprintf(2), executeCommand@strCommand(30), lastToken(30), readBuffer(32), 
  9476 ;;		 -> Encoder_ISR@salida(4), Encoder_ISR@tics(4), ustep(1), NULL(0), 
  9477 ;;  i               2    0        int 
  9478 ;;  done            2    0        int 
  9479 ;;  c               1  136[BANK1 ] unsigned char 
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  2  107[BANK1 ] int 
  9482 ;; Registers used:
  9483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9484 ;; Tracked objects:
  9485 ;;		On entry : 3F/1
  9486 ;;		On exit  : 3E/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9489 ;;      Params:         0       0       6       0       0       0       0       0       0
  9490 ;;      Locals:         0       0      20       0       0       0       0       0       0
  9491 ;;      Temps:          0       0       4       0       0       0       0       0       0
  9492 ;;      Totals:         0       0      30       0       0       0       0       0       0
  9493 ;;Total ram usage:       30 bytes
  9494 ;; Hardware stack levels used: 1
  9495 ;; Hardware stack levels required when called: 15
  9496 ;; This function calls:
  9497 ;;		_atoi
  9498 ;;		_ctoa
  9499 ;;		_dtoa
  9500 ;;		_efgtoa
  9501 ;;		_fputc
  9502 ;;		_isdigit
  9503 ;;		_isupper
  9504 ;;		_stoa
  9505 ;;		_strncmp
  9506 ;;		_tolower
  9507 ;; This function is called by:
  9508 ;;		_vfprintf
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text38
  9513  0017E2                     __ptext38:
  9514                           	callstack 0
  9515  0017E2                     _vfpfcnvrt:
  9516                           	callstack 13
  9517                           
  9518                           ; BSR set to: 1
  9519                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.36/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.36/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.36/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.36/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  9520                           
  9521                           ; BSR set to: 2
  9522                           ;incstack = 0
  9523  0017E2  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9524  0017E6  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9525  0017EA  CFDE FFF6          	movff	postinc2,tblptrl
  9526  0017EE  CFDD FFF7          	movff	postdec2,tblptrh
  9527  0017F2                     	if	0	;tblptru may be non-zero
  9528  0017F2                     	endif
  9529  0017F2                     	if	0	;tblptru may be non-zero
  9530  0017F2                     	endif
  9531  0017F2  0008               	tblrd		*
  9532  0017F4  50F5               	movf	tablat,w,c
  9533  0017F6  0A25               	xorlw	37
  9534  0017F8  A4D8               	btfss	status,2,c
  9535  0017FA  D2A9               	goto	l14190
  9536                           
  9537                           ; BSR set to: 1
  9538                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  9539  0017FC  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9540  001800  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9541  001804  2ADE               	incf	postinc2,f,c
  9542  001806  0E00               	movlw	0
  9543  001808  22DD               	addwfc	postdec2,f,c
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  9547  00180A  0E00               	movlw	0
  9548  00180C  0100               	movlb	0	; () banked
  9549  00180E  6FBD               	movwf	(_width+1)& (0+255),b
  9550  001810  0E00               	movlw	0
  9551  001812  6FBC               	movwf	_width& (0+255),b
  9552  001814  C0BC  F0C0         	movff	_width,_flags
  9553  001818  C0BD  F0C1         	movff	_width+1,_flags+1
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  9557  00181C  69BE               	setf	_prec& (0+255),b
  9558  00181E  69BF               	setf	(_prec+1)& (0+255),b
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*f
      +                          mt)[0] == '.') {
  9562  001820  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9563  001824  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9564  001828  CFDE FFF6          	movff	postinc2,tblptrl
  9565  00182C  CFDD FFF7          	movff	postdec2,tblptrh
  9566  001830                     	if	0	;tblptru may be non-zero
  9567  001830                     	endif
  9568  001830                     	if	0	;tblptru may be non-zero
  9569  001830                     	endif
  9570  001830  0008               	tblrd		*
  9571  001832  50F5               	movf	tablat,w,c
  9572  001834  0A2E               	xorlw	46
  9573  001836  A4D8               	btfss	status,2,c
  9574  001838  D065               	goto	u16970
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             pre
      +                          c = 0;
  9578  00183A  0E00               	movlw	0
  9579  00183C  6FBF               	movwf	(_prec+1)& (0+255),b
  9580  00183E  0E00               	movlw	0
  9581  001840  6FBE               	movwf	_prec& (0+255),b
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*
      +                          fmt;
  9585  001842  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9586  001846  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9587  00184A  2ADE               	incf	postinc2,f,c
  9588  00184C  0E00               	movlw	0
  9589  00184E  22DD               	addwfc	postdec2,f,c
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if 
      +                          ((*fmt)[0] == '*') {
  9593  001850  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9594  001854  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9595  001858  CFDE FFF6          	movff	postinc2,tblptrl
  9596  00185C  CFDD FFF7          	movff	postdec2,tblptrh
  9597  001860                     	if	0	;tblptru may be non-zero
  9598  001860                     	endif
  9599  001860                     	if	0	;tblptru may be non-zero
  9600  001860                     	endif
  9601  001860  0008               	tblrd		*
  9602  001862  50F5               	movf	tablat,w,c
  9603  001864  0A2A               	xorlw	42
  9604  001866  A4D8               	btfss	status,2,c
  9605  001868  D01C               	goto	l14092
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                
      +                           ++*fmt;
  9609  00186A  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9610  00186E  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9611  001872  2ADE               	incf	postinc2,f,c
  9612  001874  0E00               	movlw	0
  9613  001876  22DD               	addwfc	postdec2,f,c
  9614                           
  9615                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  9616  001878  C16F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9617  00187C  C170  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9618  001880  CFDF F171          	movff	indf2,??_vfpfcnvrt
  9619  001884  0E02               	movlw	2
  9620  001886  26DE               	addwf	postinc2,f,c
  9621  001888  CFDF F172          	movff	indf2,??_vfpfcnvrt+1
  9622  00188C  0E00               	movlw	0
  9623  00188E  22DD               	addwfc	postdec2,f,c
  9624  001890  C171  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9625  001894  C172  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9626  001898  CFDE F0BE          	movff	postinc2,_prec
  9627  00189C  CFDD F0BF          	movff	postdec2,_prec+1
  9628                           
  9629                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } e
      +                          lse {
  9630  0018A0  D031               	goto	u16970
  9631  0018A2                     l14092:
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                
      +                           prec = atoi(*fmt);
  9635  0018A2  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9636  0018A6  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9637  0018AA  CFDE F093          	movff	postinc2,atoi@s
  9638  0018AE  CFDD F094          	movff	postdec2,atoi@s+1
  9639  0018B2  EC15  F02A         	call	_atoi	;wreg free
  9640  0018B6  C093  F0BE         	movff	?_atoi,_prec
  9641  0018BA  C094  F0BF         	movff	?_atoi+1,_prec+1
  9642                           
  9643                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  9644  0018BE  D007               	goto	l14098
  9645  0018C0                     l14094:
  9646                           
  9647                           ; BSR set to: 1
  9648                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                
      +                               ++*fmt;
  9649  0018C0  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9650  0018C4  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9651  0018C8  2ADE               	incf	postinc2,f,c
  9652  0018CA  0E00               	movlw	0
  9653  0018CC  22DD               	addwfc	postdec2,f,c
  9654  0018CE                     l14098:
  9655  0018CE  0ED0               	movlw	208
  9656  0018D0  0101               	movlb	1	; () banked
  9657  0018D2  6F71               	movwf	??_vfpfcnvrt& (0+255),b
  9658  0018D4  0EFF               	movlw	255
  9659  0018D6  6F72               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9660  0018D8  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9661  0018DC  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9662  0018E0  CFDE FFF6          	movff	postinc2,tblptrl
  9663  0018E4  CFDD FFF7          	movff	postdec2,tblptrh
  9664  0018E8                     	if	0	;tblptru may be non-zero
  9665  0018E8                     	endif
  9666  0018E8                     	if	0	;tblptru may be non-zero
  9667  0018E8                     	endif
  9668  0018E8  0008               	tblrd		*
  9669  0018EA  50F5               	movf	tablat,w,c
  9670  0018EC  6F73               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9671  0018EE  6B74               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9672  0018F0  5171               	movf	??_vfpfcnvrt& (0+255),w,b
  9673  0018F2  2773               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9674  0018F4  5172               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9675  0018F6  2374               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9676  0018F8  5174               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9677  0018FA  E104               	bnz	u16970
  9678  0018FC  0E0A               	movlw	10
  9679  0018FE  5D73               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9680  001900  A0D8               	btfss	status,0,c
  9681  001902  D7DE               	goto	l14094
  9682  001904                     u16970:
  9683                           
  9684                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] =
      +                           (char)tolower((int)(*fmt)[0]);
  9685  001904  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9686  001908  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9687  00190C  CFDE FFF6          	movff	postinc2,tblptrl
  9688  001910  CFDD FFF7          	movff	postdec2,tblptrh
  9689  001914                     	if	0	;tblptru may be non-zero
  9690  001914                     	endif
  9691  001914                     	if	0	;tblptru may be non-zero
  9692  001914                     	endif
  9693  001914  0008               	tblrd		*
  9694  001916  50F5               	movf	tablat,w,c
  9695  001918  0100               	movlb	0	; () banked
  9696  00191A  6F92               	movwf	tolower@c& (0+255),b
  9697  00191C  6B93               	clrf	(tolower@c+1)& (0+255),b
  9698  00191E  ECB0  F03B         	call	_tolower	;wreg free
  9699  001922  5192               	movf	?_tolower& (0+255),w,b
  9700  001924  0101               	movlb	1	; () banked
  9701  001926  6F85               	movwf	vfpfcnvrt@ct& (0+255),b
  9702                           
  9703                           ; BSR set to: 1
  9704                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[
      +                          0]) {
  9705  001928  5185               	movf	vfpfcnvrt@ct& (0+255),w,b
  9706  00192A  B4D8               	btfsc	status,2,c
  9707  00192C  D037               	goto	l14110
  9708                           
  9709                           ; BSR set to: 1
  9710                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[
      +                          1] = (char)tolower((int)(*fmt)[1]);
  9711  00192E  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9712  001932  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9713  001936  CFDE F171          	movff	postinc2,??_vfpfcnvrt
  9714  00193A  CFDD F172          	movff	postdec2,??_vfpfcnvrt+1
  9715  00193E  0E01               	movlw	1
  9716  001940  2771               	addwf	??_vfpfcnvrt& (0+255),f,b
  9717  001942  0E00               	movlw	0
  9718  001944  2372               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9719  001946  C171  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9720  00194A  C172  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9721  00194E                     	if	0	;tblptru may be non-zero
  9722  00194E                     	endif
  9723  00194E                     	if	0	;tblptru may be non-zero
  9724  00194E                     	endif
  9725  00194E  0008               	tblrd		*
  9726  001950  50F5               	movf	tablat,w,c
  9727  001952  0100               	movlb	0	; () banked
  9728  001954  6F92               	movwf	tolower@c& (0+255),b
  9729  001956  6B93               	clrf	(tolower@c+1)& (0+255),b
  9730  001958  ECB0  F03B         	call	_tolower	;wreg free
  9731  00195C  5192               	movf	?_tolower& (0+255),w,b
  9732  00195E  0101               	movlb	1	; () banked
  9733  001960  6F86               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  9734                           
  9735                           ; BSR set to: 1
  9736                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if 
      +                          (ct[1]) {
  9737  001962  5186               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  9738  001964  B4D8               	btfsc	status,2,c
  9739  001966  D01A               	goto	l14110
  9740                           
  9741                           ; BSR set to: 1
  9742                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                
      +                           ct[2] = (char)tolower((int)(*fmt)[2]);
  9743  001968  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9744  00196C  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9745  001970  CFDE F171          	movff	postinc2,??_vfpfcnvrt
  9746  001974  CFDD F172          	movff	postdec2,??_vfpfcnvrt+1
  9747  001978  0E02               	movlw	2
  9748  00197A  2771               	addwf	??_vfpfcnvrt& (0+255),f,b
  9749  00197C  0E00               	movlw	0
  9750  00197E  2372               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9751  001980  C171  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9752  001984  C172  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9753  001988                     	if	0	;tblptru may be non-zero
  9754  001988                     	endif
  9755  001988                     	if	0	;tblptru may be non-zero
  9756  001988                     	endif
  9757  001988  0008               	tblrd		*
  9758  00198A  50F5               	movf	tablat,w,c
  9759  00198C  0100               	movlb	0	; () banked
  9760  00198E  6F92               	movwf	tolower@c& (0+255),b
  9761  001990  6B93               	clrf	(tolower@c+1)& (0+255),b
  9762  001992  ECB0  F03B         	call	_tolower	;wreg free
  9763  001996  5192               	movf	?_tolower& (0+255),w,b
  9764  001998  0101               	movlb	1	; () banked
  9765  00199A  6F87               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  9766  00199C                     l14110:
  9767                           
  9768                           ; BSR set to: 1
  9769                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
  9770  00199C  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9771  0019A0  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9772  0019A4  CFDE FFF6          	movff	postinc2,tblptrl
  9773  0019A8  CFDD FFF7          	movff	postdec2,tblptrh
  9774  0019AC                     	if	0	;tblptru may be non-zero
  9775  0019AC                     	endif
  9776  0019AC                     	if	0	;tblptru may be non-zero
  9777  0019AC                     	endif
  9778  0019AC  0008               	tblrd		*
  9779  0019AE  50F5               	movf	tablat,w,c
  9780  0019B0  0A63               	xorlw	99
  9781  0019B2  A4D8               	btfss	status,2,c
  9782  0019B4  D026               	goto	l14118
  9783                           
  9784                           ; BSR set to: 1
  9785                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
  9786  0019B6  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9787  0019BA  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9788  0019BE  2ADE               	incf	postinc2,f,c
  9789  0019C0  0E00               	movlw	0
  9790  0019C2  22DD               	addwfc	postdec2,f,c
  9791                           
  9792                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9793  0019C4  C16F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9794  0019C8  C170  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9795  0019CC  CFDF F171          	movff	indf2,??_vfpfcnvrt
  9796  0019D0  0E02               	movlw	2
  9797  0019D2  26DE               	addwf	postinc2,f,c
  9798  0019D4  CFDF F172          	movff	indf2,??_vfpfcnvrt+1
  9799  0019D8  0E00               	movlw	0
  9800  0019DA  22DD               	addwfc	postdec2,f,c
  9801  0019DC  C171  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9802  0019E0  C172  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9803  0019E4  50DF               	movf	indf2,w,c
  9804  0019E6  6F88               	movwf	vfpfcnvrt@c& (0+255),b
  9805                           
  9806                           ; BSR set to: 1
  9807                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
  9808  0019E8  C16B  F095         	movff	vfpfcnvrt@fp,ctoa@fp
  9809  0019EC  C16C  F096         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  9810  0019F0  C188  F097         	movff	vfpfcnvrt@c,ctoa@c
  9811  0019F4  ECED  F034         	call	_ctoa	;wreg free
  9812  0019F8  C095  F16B         	movff	?_ctoa,?_vfpfcnvrt
  9813  0019FC  C096  F16C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  9814  001A00  0012               	return	
  9815  001A02                     l14118:
  9816                           
  9817                           ; BSR set to: 1
  9818                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  9819  001A02  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9820  001A06  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9821  001A0A  CFDE FFF6          	movff	postinc2,tblptrl
  9822  001A0E  CFDD FFF7          	movff	postdec2,tblptrh
  9823  001A12                     	if	0	;tblptru may be non-zero
  9824  001A12                     	endif
  9825  001A12                     	if	0	;tblptru may be non-zero
  9826  001A12                     	endif
  9827  001A12  0008               	tblrd		*
  9828  001A14  50F5               	movf	tablat,w,c
  9829  001A16  0A64               	xorlw	100
  9830  001A18  B4D8               	btfsc	status,2,c
  9831  001A1A  D00D               	goto	u17020
  9832                           
  9833                           ; BSR set to: 1
  9834  001A1C  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9835  001A20  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9836  001A24  CFDE FFF6          	movff	postinc2,tblptrl
  9837  001A28  CFDD FFF7          	movff	postdec2,tblptrh
  9838  001A2C                     	if	0	;tblptru may be non-zero
  9839  001A2C                     	endif
  9840  001A2C                     	if	0	;tblptru may be non-zero
  9841  001A2C                     	endif
  9842  001A2C  0008               	tblrd		*
  9843  001A2E  50F5               	movf	tablat,w,c
  9844  001A30  0A69               	xorlw	105
  9845  001A32  A4D8               	btfss	status,2,c
  9846  001A34  D03F               	goto	l14128
  9847  001A36                     u17020:
  9848                           
  9849                           ; BSR set to: 1
  9850                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  9851  001A36  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9852  001A3A  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9853  001A3E  2ADE               	incf	postinc2,f,c
  9854  001A40  0E00               	movlw	0
  9855  001A42  22DD               	addwfc	postdec2,f,c
  9856                           
  9857                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9858  001A44  C16F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9859  001A48  C170  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9860  001A4C  CFDF F171          	movff	indf2,??_vfpfcnvrt
  9861  001A50  0E02               	movlw	2
  9862  001A52  26DE               	addwf	postinc2,f,c
  9863  001A54  CFDF F172          	movff	indf2,??_vfpfcnvrt+1
  9864  001A58  0E00               	movlw	0
  9865  001A5A  22DD               	addwfc	postdec2,f,c
  9866  001A5C  C171  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9867  001A60  C172  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9868  001A64  CFDE F175          	movff	postinc2,vfpfcnvrt@ll
  9869  001A68  CFDD F176          	movff	postdec2,vfpfcnvrt@ll+1
  9870  001A6C  0E00               	movlw	0
  9871  001A6E  BF76               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9872  001A70  0EFF               	movlw	-1
  9873  001A72  6F77               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9874  001A74  6F78               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9875  001A76  6F79               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9876  001A78  6F7A               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9877  001A7A  6F7B               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9878  001A7C  6F7C               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9879                           
  9880                           ; BSR set to: 1
  9881                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  9882  001A7E  C16B  F100         	movff	vfpfcnvrt@fp,dtoa@fp
  9883  001A82  C16C  F101         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9884  001A86  C175  F102         	movff	vfpfcnvrt@ll,dtoa@d
  9885  001A8A  C176  F103         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9886  001A8E  C177  F104         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9887  001A92  C178  F105         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9888  001A96  C179  F106         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9889  001A9A  C17A  F107         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9890  001A9E  C17B  F108         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9891  001AA2  C17C  F109         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9892  001AA6  EC65  F01D         	call	_dtoa	;wreg free
  9893  001AAA  C100  F16B         	movff	?_dtoa,?_vfpfcnvrt
  9894  001AAE  C101  F16C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9895  001AB2  0012               	return	
  9896  001AB4                     l14128:
  9897                           
  9898                           ; BSR set to: 1
  9899                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[
      +                          0] == 'f') {
  9900  001AB4  0E66               	movlw	102
  9901  001AB6  1985               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  9902  001AB8  A4D8               	btfss	status,2,c
  9903  001ABA  D03F               	goto	l14140
  9904                           
  9905                           ; BSR set to: 1
  9906                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c =
      +                           (*fmt)[0];
  9907  001ABC  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9908  001AC0  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9909  001AC4  CFDE FFF6          	movff	postinc2,tblptrl
  9910  001AC8  CFDD FFF7          	movff	postdec2,tblptrh
  9911  001ACC                     	if	0	;tblptru may be non-zero
  9912  001ACC                     	endif
  9913  001ACC                     	if	0	;tblptru may be non-zero
  9914  001ACC                     	endif
  9915  001ACC  0008               	tblrd		*
  9916  001ACE  CFF5 F188          	movff	tablat,vfpfcnvrt@c
  9917                           
  9918                           ; BSR set to: 1
  9919                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*
      +                          fmt;
  9920  001AD2  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9921  001AD6  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9922  001ADA  2ADE               	incf	postinc2,f,c
  9923  001ADC  0E00               	movlw	0
  9924  001ADE  22DD               	addwfc	postdec2,f,c
  9925                           
  9926                           ; BSR set to: 1
  9927                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9928  001AE0  C16F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9929  001AE4  C170  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9930  001AE8  CFDF F171          	movff	indf2,??_vfpfcnvrt
  9931  001AEC  0E04               	movlw	4
  9932  001AEE  26DE               	addwf	postinc2,f,c
  9933  001AF0  CFDF F172          	movff	indf2,??_vfpfcnvrt+1
  9934  001AF4  0E00               	movlw	0
  9935  001AF6  22DD               	addwfc	postdec2,f,c
  9936  001AF8  C171  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9937  001AFC  C172  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9938  001B00  CFDE F181          	movff	postinc2,vfpfcnvrt@f
  9939  001B04  CFDE F182          	movff	postinc2,vfpfcnvrt@f+1
  9940  001B08  CFDE F183          	movff	postinc2,vfpfcnvrt@f+2
  9941  001B0C  CFDE F184          	movff	postinc2,vfpfcnvrt@f+3
  9942                           
  9943                           ; BSR set to: 1
  9944                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             ret
      +                          urn efgtoa(fp, f, c);
  9945  001B10  C16B  F12D         	movff	vfpfcnvrt@fp,efgtoa@fp
  9946  001B14  C16C  F12E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  9947  001B18  C181  F12F         	movff	vfpfcnvrt@f,efgtoa@f
  9948  001B1C  C182  F130         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  9949  001B20  C183  F131         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  9950  001B24  C184  F132         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  9951  001B28  C188  F133         	movff	vfpfcnvrt@c,efgtoa@c
  9952  001B2C  ECBE  F006         	call	_efgtoa	;wreg free
  9953  001B30  C12D  F16B         	movff	?_efgtoa,?_vfpfcnvrt
  9954  001B34  C12E  F16C         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  9955  001B38  0012               	return	
  9956  001B3A                     l14140:
  9957                           
  9958                           ; BSR set to: 1
  9959                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9960  001B3A  0E85               	movlw	low vfpfcnvrt@ct
  9961  001B3C  0100               	movlb	0	; () banked
  9962  001B3E  6F8C               	movwf	strncmp@_l& (0+255),b
  9963  001B40  0E01               	movlw	high vfpfcnvrt@ct
  9964  001B42  6F8D               	movwf	(strncmp@_l+1)& (0+255),b
  9965  001B44  0EFB               	movlw	low STR_12
  9966  001B46  6F8E               	movwf	strncmp@_r& (0+255),b
  9967  001B48  0E7F               	movlw	high STR_12
  9968  001B4A  6F8F               	movwf	(strncmp@_r+1)& (0+255),b
  9969  001B4C  0E00               	movlw	0
  9970  001B4E  6F91               	movwf	(strncmp@n+1)& (0+255),b
  9971  001B50  0E02               	movlw	2
  9972  001B52  6F90               	movwf	strncmp@n& (0+255),b
  9973  001B54  EC1C  F02D         	call	_strncmp	;wreg free
  9974  001B58  518C               	movf	?_strncmp& (0+255),w,b
  9975  001B5A  118D               	iorwf	(?_strncmp+1)& (0+255),w,b
  9976  001B5C  A4D8               	btfss	status,2,c
  9977  001B5E  D061               	goto	l14156
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c =
      +                           (*fmt)[1];
  9981  001B60  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9982  001B64  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9983  001B68  CFDE F171          	movff	postinc2,??_vfpfcnvrt
  9984  001B6C  CFDD F172          	movff	postdec2,??_vfpfcnvrt+1
  9985  001B70  0E01               	movlw	1
  9986  001B72  0101               	movlb	1	; () banked
  9987  001B74  2771               	addwf	??_vfpfcnvrt& (0+255),f,b
  9988  001B76  0E00               	movlw	0
  9989  001B78  2372               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9990  001B7A  C171  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9991  001B7E  C172  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9992  001B82                     	if	0	;tblptru may be non-zero
  9993  001B82                     	endif
  9994  001B82                     	if	0	;tblptru may be non-zero
  9995  001B82                     	endif
  9996  001B82  0008               	tblrd		*
  9997  001B84  CFF5 F188          	movff	tablat,vfpfcnvrt@c
  9998                           
  9999                           ; BSR set to: 1
 10000                           
 10001                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if 
      +                          ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10002  001B88  0EBF               	movlw	191
 10003  001B8A  6F71               	movwf	??_vfpfcnvrt& (0+255),b
 10004  001B8C  0EFF               	movlw	255
 10005  001B8E  6F72               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10006  001B90  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10007  001B94  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10008  001B98  CFDE FFF6          	movff	postinc2,tblptrl
 10009  001B9C  CFDD FFF7          	movff	postdec2,tblptrh
 10010  001BA0                     	if	0	;tblptru may be non-zero
 10011  001BA0                     	endif
 10012  001BA0                     	if	0	;tblptru may be non-zero
 10013  001BA0                     	endif
 10014  001BA0  0008               	tblrd		*
 10015  001BA2  50F5               	movf	tablat,w,c
 10016  001BA4  6F73               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10017  001BA6  6B74               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10018  001BA8  5171               	movf	??_vfpfcnvrt& (0+255),w,b
 10019  001BAA  2773               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10020  001BAC  5172               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10021  001BAE  2374               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10022  001BB0  5174               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10023  001BB2  E102               	bnz	l14150
 10024  001BB4  0E1A               	movlw	26
 10025  001BB6  5D73               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10026  001BB8                     l14150:
 10027                           
 10028                           ; BSR set to: 1
 10029                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10030  001BB8  C16F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10031  001BBC  C170  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10032  001BC0  CFDF F171          	movff	indf2,??_vfpfcnvrt
 10033  001BC4  0E04               	movlw	4
 10034  001BC6  26DE               	addwf	postinc2,f,c
 10035  001BC8  CFDF F172          	movff	indf2,??_vfpfcnvrt+1
 10036  001BCC  0E00               	movlw	0
 10037  001BCE  22DD               	addwfc	postdec2,f,c
 10038  001BD0  C171  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10039  001BD4  C172  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10040  001BD8  CFDE F181          	movff	postinc2,vfpfcnvrt@f
 10041  001BDC  CFDE F182          	movff	postinc2,vfpfcnvrt@f+1
 10042  001BE0  CFDE F183          	movff	postinc2,vfpfcnvrt@f+2
 10043  001BE4  CFDE F184          	movff	postinc2,vfpfcnvrt@f+3
 10044                           
 10045                           ; BSR set to: 1
 10046                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
 10047                           
 10048                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 957:             }
 10049  001BE8  0E02               	movlw	2
 10050  001BEA  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10051  001BEE  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10052  001BF2  26DE               	addwf	postinc2,f,c
 10053  001BF4  0E00               	movlw	0
 10054  001BF6  22DD               	addwfc	postdec2,f,c
 10055                           
 10056                           ; BSR set to: 1
 10057                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 960:             ret
      +                          urn efgtoa(fp, f, c);
 10058  001BF8  C16B  F12D         	movff	vfpfcnvrt@fp,efgtoa@fp
 10059  001BFC  C16C  F12E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 10060  001C00  C181  F12F         	movff	vfpfcnvrt@f,efgtoa@f
 10061  001C04  C182  F130         	movff	vfpfcnvrt@f+1,efgtoa@f+1
 10062  001C08  C183  F131         	movff	vfpfcnvrt@f+2,efgtoa@f+2
 10063  001C0C  C184  F132         	movff	vfpfcnvrt@f+3,efgtoa@f+3
 10064  001C10  C188  F133         	movff	vfpfcnvrt@c,efgtoa@c
 10065  001C14  ECBE  F006         	call	_efgtoa	;wreg free
 10066  001C18  C12D  F16B         	movff	?_efgtoa,?_vfpfcnvrt
 10067  001C1C  C12E  F16C         	movff	?_efgtoa+1,?_vfpfcnvrt+1
 10068  001C20  0012               	return	
 10069  001C22                     l14156:
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*f
      +                          mt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
 10073  001C22  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10074  001C26  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10075  001C2A  CFDE FFF6          	movff	postinc2,tblptrl
 10076  001C2E  CFDD FFF7          	movff	postdec2,tblptrh
 10077  001C32                     	if	0	;tblptru may be non-zero
 10078  001C32                     	endif
 10079  001C32                     	if	0	;tblptru may be non-zero
 10080  001C32                     	endif
 10081  001C32  0008               	tblrd		*
 10082  001C34  50F5               	movf	tablat,w,c
 10083  001C36  0A73               	xorlw	115
 10084  001C38  B4D8               	btfsc	status,2,c
 10085  001C3A  D016               	goto	u17070
 10086                           
 10087                           ; BSR set to: 0
 10088  001C3C  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10089  001C40  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10090  001C44  CFDE F08C          	movff	postinc2,strncmp@_l
 10091  001C48  CFDD F08D          	movff	postdec2,strncmp@_l+1
 10092  001C4C  0EF7               	movlw	low STR_17
 10093  001C4E  6F8E               	movwf	strncmp@_r& (0+255),b
 10094  001C50  0E7F               	movlw	high STR_17
 10095  001C52  6F8F               	movwf	(strncmp@_r+1)& (0+255),b
 10096  001C54  0E00               	movlw	0
 10097  001C56  6F91               	movwf	(strncmp@n+1)& (0+255),b
 10098  001C58  0E03               	movlw	3
 10099  001C5A  6F90               	movwf	strncmp@n& (0+255),b
 10100  001C5C  EC1C  F02D         	call	_strncmp	;wreg free
 10101  001C60  518C               	movf	?_strncmp& (0+255),w,b
 10102  001C62  118D               	iorwf	(?_strncmp+1)& (0+255),w,b
 10103  001C64  A4D8               	btfss	status,2,c
 10104  001C66  D042               	goto	l14174
 10105  001C68                     u17070:
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fm
      +                          t[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
 10109  001C68  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10110  001C6C  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10111  001C70  CFDE FFF6          	movff	postinc2,tblptrl
 10112  001C74  CFDD FFF7          	movff	postdec2,tblptrh
 10113  001C78                     	if	0	;tblptru may be non-zero
 10114  001C78                     	endif
 10115  001C78                     	if	0	;tblptru may be non-zero
 10116  001C78                     	endif
 10117  001C78  0008               	tblrd		*
 10118  001C7A  50F5               	movf	tablat,w,c
 10119  001C7C  0A73               	xorlw	115
 10120  001C7E  B4D8               	btfsc	status,2,c
 10121  001C80  D005               	goto	l14164
 10122                           
 10123                           ; BSR set to: 0
 10124  001C82  0E00               	movlw	0
 10125  001C84  0101               	movlb	1	; () banked
 10126  001C86  6F80               	movwf	(_vfpfcnvrt$5046+1)& (0+255),b
 10127  001C88  0E03               	movlw	3
 10128  001C8A  D004               	goto	L6
 10129  001C8C                     l14164:
 10130                           
 10131                           ; BSR set to: 0
 10132  001C8C  0E00               	movlw	0
 10133  001C8E  0101               	movlb	1	; () banked
 10134  001C90  6F80               	movwf	(_vfpfcnvrt$5046+1)& (0+255),b
 10135  001C92  0E01               	movlw	1
 10136  001C94                     L6:
 10137  001C94  6F7F               	movwf	_vfpfcnvrt$5046& (0+255),b
 10138                           
 10139                           ; BSR set to: 1
 10140  001C96  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10141  001C9A  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10142  001C9E  517F               	movf	_vfpfcnvrt$5046& (0+255),w,b
 10143  001CA0  26DE               	addwf	postinc2,f,c
 10144  001CA2  5180               	movf	(_vfpfcnvrt$5046+1)& (0+255),w,b
 10145  001CA4  22DD               	addwfc	postdec2,f,c
 10146                           
 10147                           ; BSR set to: 1
 10148                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 10149  001CA6  C16F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10150  001CAA  C170  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10151  001CAE  CFDF F171          	movff	indf2,??_vfpfcnvrt
 10152  001CB2  0E02               	movlw	2
 10153  001CB4  26DE               	addwf	postinc2,f,c
 10154  001CB6  CFDF F172          	movff	indf2,??_vfpfcnvrt+1
 10155  001CBA  0E00               	movlw	0
 10156  001CBC  22DD               	addwfc	postdec2,f,c
 10157  001CBE  C171  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10158  001CC2  C172  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10159  001CC6  CFDE F17D          	movff	postinc2,vfpfcnvrt@cp
 10160  001CCA  CFDD F17E          	movff	postdec2,vfpfcnvrt@cp+1
 10161                           
 10162                           ; BSR set to: 1
 10163                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             re
      +                          turn stoa(fp, cp);
 10164  001CCE  C16B  F095         	movff	vfpfcnvrt@fp,stoa@fp
 10165  001CD2  C16C  F096         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 10166  001CD6  C17D  F097         	movff	vfpfcnvrt@cp,stoa@s
 10167  001CDA  C17E  F098         	movff	vfpfcnvrt@cp+1,stoa@s+1
 10168  001CDE  ECD3  F022         	call	_stoa	;wreg free
 10169  001CE2  C095  F16B         	movff	?_stoa,?_vfpfcnvrt
 10170  001CE6  C096  F16C         	movff	?_stoa+1,?_vfpfcnvrt+1
 10171  001CEA  0012               	return	
 10172  001CEC                     l14174:
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
 10176  001CEC  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10177  001CF0  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10178  001CF4  CFDE FFF6          	movff	postinc2,tblptrl
 10179  001CF8  CFDD FFF7          	movff	postdec2,tblptrh
 10180  001CFC                     	if	0	;tblptru may be non-zero
 10181  001CFC                     	endif
 10182  001CFC                     	if	0	;tblptru may be non-zero
 10183  001CFC                     	endif
 10184  001CFC  0008               	tblrd		*
 10185  001CFE  50F5               	movf	tablat,w,c
 10186  001D00  0A25               	xorlw	37
 10187  001D02  A4D8               	btfss	status,2,c
 10188  001D04  D017               	goto	l14184
 10189                           
 10190                           ; BSR set to: 0
 10191                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
 10192  001D06  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10193  001D0A  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10194  001D0E  2ADE               	incf	postinc2,f,c
 10195  001D10  0E00               	movlw	0
 10196  001D12  22DD               	addwfc	postdec2,f,c
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
 10200  001D14  0E00               	movlw	0
 10201  001D16  6F8D               	movwf	(fputc@c+1)& (0+255),b
 10202  001D18  0E25               	movlw	37
 10203  001D1A  6F8C               	movwf	fputc@c& (0+255),b
 10204  001D1C  C16B  F08E         	movff	vfpfcnvrt@fp,fputc@fp
 10205  001D20  C16C  F08F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10206  001D24  EC9D  F034         	call	_fputc	;wreg free
 10207  001D28                     l14180:
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
 10211  001D28  0E00               	movlw	0
 10212  001D2A  0101               	movlb	1	; () banked
 10213  001D2C  6F6C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10214  001D2E  0E01               	movlw	1
 10215  001D30  6F6B               	movwf	?_vfpfcnvrt& (0+255),b
 10216  001D32  0012               	return	
 10217  001D34                     l14184:
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
 10221  001D34  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10222  001D38  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10223  001D3C  2ADE               	incf	postinc2,f,c
 10224  001D3E  0E00               	movlw	0
 10225  001D40  22DD               	addwfc	postdec2,f,c
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
 10229  001D42  0E00               	movlw	0
 10230  001D44  0101               	movlb	1	; () banked
 10231  001D46  6F6C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10232  001D48  0E00               	movlw	0
 10233  001D4A  6F6B               	movwf	?_vfpfcnvrt& (0+255),b
 10234  001D4C  0012               	return	
 10235  001D4E                     l14190:
 10236                           
 10237                           ; BSR set to: 1
 10238                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
 10239  001D4E  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10240  001D52  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10241  001D56  CFDE FFF6          	movff	postinc2,tblptrl
 10242  001D5A  CFDD FFF7          	movff	postdec2,tblptrh
 10243  001D5E                     	if	0	;tblptru may be non-zero
 10244  001D5E                     	endif
 10245  001D5E                     	if	0	;tblptru may be non-zero
 10246  001D5E                     	endif
 10247  001D5E  0008               	tblrd		*
 10248  001D60  50F5               	movf	tablat,w,c
 10249  001D62  0100               	movlb	0	; () banked
 10250  001D64  6F8C               	movwf	fputc@c& (0+255),b
 10251  001D66  6B8D               	clrf	(fputc@c+1)& (0+255),b
 10252  001D68  C16B  F08E         	movff	vfpfcnvrt@fp,fputc@fp
 10253  001D6C  C16C  F08F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10254  001D70  EC9D  F034         	call	_fputc	;wreg free
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
 10258  001D74  C16D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10259  001D78  C16E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10260  001D7C  2ADE               	incf	postinc2,f,c
 10261  001D7E  0E00               	movlw	0
 10262  001D80  22DD               	addwfc	postdec2,f,c
 10263  001D82  D7D2               	goto	l14180
 10264  001D84                     __end_of_vfpfcnvrt:
 10265                           	callstack 0
 10266                           
 10267 ;; *************** function _strncmp *****************
 10268 ;; Defined at:
 10269 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;  _l              2   44[BANK0 ] PTR const unsigned char 
 10272 ;;		 -> vfpfcnvrt@ct(3), STR_3(5), STR_2(5), STR_1(13), 
 10273 ;;  _r              2   46[BANK0 ] PTR const unsigned char 
 10274 ;;		 -> STR_19(4), STR_14(3), 
 10275 ;;  n               2   48[BANK0 ] unsigned int 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;  r               2   53[BANK0 ] PTR const unsigned char 
 10278 ;;		 -> STR_19(4), STR_14(3), 
 10279 ;;  l               2   51[BANK0 ] PTR const unsigned char 
 10280 ;;		 -> vfpfcnvrt@ct(3), STR_3(5), STR_2(5), STR_1(13), 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  2   44[BANK0 ] int 
 10283 ;; Registers used:
 10284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10285 ;; Tracked objects:
 10286 ;;		On entry : 3F/0
 10287 ;;		On exit  : 3F/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10290 ;;      Params:         0       6       0       0       0       0       0       0       0
 10291 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10292 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10293 ;;      Totals:         0      11       0       0       0       0       0       0       0
 10294 ;;Total ram usage:       11 bytes
 10295 ;; Hardware stack levels used: 1
 10296 ;; Hardware stack levels required when called: 10
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_vfpfcnvrt
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text39
 10305  005A38                     __ptext39:
 10306                           	callstack 0
 10307  005A38                     _strncmp:
 10308                           	callstack 17
 10309                           
 10310                           ; BSR set to: 0
 10311                           
 10312                           ;incstack = 0
 10313  005A38  C08C  F093         	movff	strncmp@_l,strncmp@l
 10314  005A3C  C08D  F094         	movff	strncmp@_l+1,strncmp@l+1
 10315  005A40  C08E  F095         	movff	strncmp@_r,strncmp@r
 10316  005A44  C08F  F096         	movff	strncmp@_r+1,strncmp@r+1
 10317  005A48  0790               	decf	strncmp@n& (0+255),f,b
 10318  005A4A  A0D8               	btfss	status,0,c
 10319  005A4C  0791               	decf	(strncmp@n+1)& (0+255),f,b
 10320  005A4E  2990               	incf	strncmp@n& (0+255),w,b
 10321  005A50  E110               	bnz	l13976
 10322  005A52  2991               	incf	(strncmp@n+1)& (0+255),w,b
 10323  005A54  A4D8               	btfss	status,2,c
 10324  005A56  D00D               	goto	l13976
 10325                           
 10326                           ; BSR set to: 0
 10327  005A58  0E00               	movlw	0
 10328  005A5A  6F8D               	movwf	(?_strncmp+1)& (0+255),b
 10329  005A5C  0E00               	movlw	0
 10330  005A5E  6F8C               	movwf	?_strncmp& (0+255),b
 10331  005A60  0012               	return	
 10332  005A62                     l13974:
 10333  005A62  0100               	movlb	0	; () banked
 10334  005A64  4B93               	infsnz	strncmp@l& (0+255),f,b
 10335  005A66  2B94               	incf	(strncmp@l+1)& (0+255),f,b
 10336  005A68  4B95               	infsnz	strncmp@r& (0+255),f,b
 10337  005A6A  2B96               	incf	(strncmp@r+1)& (0+255),f,b
 10338  005A6C  0790               	decf	strncmp@n& (0+255),f,b
 10339  005A6E  A0D8               	btfss	status,0,c
 10340  005A70  0791               	decf	(strncmp@n+1)& (0+255),f,b
 10341  005A72                     l13976:
 10342                           
 10343                           ; BSR set to: 0
 10344  005A72  C093  FFF6         	movff	strncmp@l,tblptrl
 10345  005A76  C094  FFF7         	movff	strncmp@l+1,tblptrh
 10346  005A7A  6AF8               	clrf	tblptru,c
 10347  005A7C  0E07               	movlw	(high __ramtop+-1)
 10348  005A7E  64F7               	cpfsgt	tblptrh,c
 10349  005A80  D003               	bra	u16827
 10350  005A82  0008               	tblrd		*
 10351  005A84  50F5               	movf	tablat,w,c
 10352  005A86  D005               	bra	u16820
 10353  005A88                     u16827:
 10354  005A88  CFF6 FFE1          	movff	tblptrl,fsr1l
 10355  005A8C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10356  005A90  50E7               	movf	indf1,w,c
 10357  005A92                     u16820:
 10358  005A92  0900               	iorlw	0
 10359  005A94  B4D8               	btfsc	status,2,c
 10360  005A96  D028               	goto	u16860
 10361  005A98  C095  FFF6         	movff	strncmp@r,tblptrl
 10362  005A9C  C096  FFF7         	movff	strncmp@r+1,tblptrh
 10363  005AA0                     	if	0	;tblptru may be non-zero
 10364  005AA0                     	endif
 10365  005AA0                     	if	0	;tblptru may be non-zero
 10366  005AA0                     	endif
 10367  005AA0  0008               	tblrd		*
 10368  005AA2  50F5               	movf	tablat,w,c
 10369  005AA4  0900               	iorlw	0
 10370  005AA6  B4D8               	btfsc	status,2,c
 10371  005AA8  D01F               	goto	u16860
 10372  005AAA  0100               	movlb	0	; () banked
 10373  005AAC  5190               	movf	strncmp@n& (0+255),w,b
 10374  005AAE  1191               	iorwf	(strncmp@n+1)& (0+255),w,b
 10375  005AB0  B4D8               	btfsc	status,2,c
 10376  005AB2  D01A               	goto	u16860
 10377                           
 10378                           ; BSR set to: 0
 10379  005AB4  C095  FFF6         	movff	strncmp@r,tblptrl
 10380  005AB8  C096  FFF7         	movff	strncmp@r+1,tblptrh
 10381  005ABC                     	if	0	;tblptru may be non-zero
 10382  005ABC                     	endif
 10383  005ABC                     	if	0	;tblptru may be non-zero
 10384  005ABC                     	endif
 10385  005ABC  0008               	tblrd		*
 10386  005ABE  CFF5 F092          	movff	tablat,??_strncmp
 10387  005AC2  C093  FFF6         	movff	strncmp@l,tblptrl
 10388  005AC6  C094  FFF7         	movff	strncmp@l+1,tblptrh
 10389  005ACA  6AF8               	clrf	tblptru,c
 10390  005ACC  0E07               	movlw	(high __ramtop+-1)
 10391  005ACE  64F7               	cpfsgt	tblptrh,c
 10392  005AD0  D003               	bra	u16867
 10393  005AD2  0008               	tblrd		*
 10394  005AD4  50F5               	movf	tablat,w,c
 10395  005AD6  D005               	bra	u16865
 10396  005AD8                     u16867:
 10397  005AD8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10398  005ADC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10399  005AE0  50E7               	movf	indf1,w,c
 10400  005AE2                     u16865:
 10401  005AE2  1992               	xorwf	??_strncmp& (0+255),w,b
 10402  005AE4  B4D8               	btfsc	status,2,c
 10403  005AE6  D7BD               	goto	l13974
 10404  005AE8                     u16860:
 10405  005AE8  C093  FFF6         	movff	strncmp@l,tblptrl
 10406  005AEC  C094  FFF7         	movff	strncmp@l+1,tblptrh
 10407  005AF0  6AF8               	clrf	tblptru,c
 10408  005AF2  0E07               	movlw	(high __ramtop+-1)
 10409  005AF4  64F7               	cpfsgt	tblptrh,c
 10410  005AF6  D003               	bra	u16877
 10411  005AF8  0008               	tblrd		*
 10412  005AFA  50F5               	movf	tablat,w,c
 10413  005AFC  D005               	bra	u16870
 10414  005AFE                     u16877:
 10415  005AFE  CFF6 FFE1          	movff	tblptrl,fsr1l
 10416  005B02  CFF7 FFE2          	movff	tblptrh,fsr1h
 10417  005B06  50E7               	movf	indf1,w,c
 10418  005B08                     u16870:
 10419  005B08  0100               	movlb	0	; () banked
 10420  005B0A  6F92               	movwf	??_strncmp& (0+255),b
 10421  005B0C  C095  FFF6         	movff	strncmp@r,tblptrl
 10422  005B10  C096  FFF7         	movff	strncmp@r+1,tblptrh
 10423  005B14                     	if	0	;tblptru may be non-zero
 10424  005B14                     	endif
 10425  005B14                     	if	0	;tblptru may be non-zero
 10426  005B14                     	endif
 10427  005B14  0008               	tblrd		*
 10428  005B16  50F5               	movf	tablat,w,c
 10429  005B18  5D92               	subwf	??_strncmp& (0+255),w,b
 10430  005B1A  6F8C               	movwf	?_strncmp& (0+255),b
 10431  005B1C  6B8D               	clrf	(?_strncmp+1)& (0+255),b
 10432  005B1E  A0D8               	btfss	status,0,c
 10433  005B20  078D               	decf	(?_strncmp+1)& (0+255),f,b
 10434                           
 10435                           ; BSR set to: 0
 10436  005B22  0012               	return		;funcret
 10437  005B24                     __end_of_strncmp:
 10438                           	callstack 0
 10439                           
 10440 ;; *************** function _stoa *****************
 10441 ;; Defined at:
 10442 ;;		line 568 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
 10445 ;;		 -> sprintf@f(11), 
 10446 ;;  s               2   55[BANK0 ] PTR unsigned char 
 10447 ;;		 -> ?_sprintf(2), executeCommand@strCommand(30), lastToken(30), readBuffer(32), 
 10448 ;;		 -> Encoder_ISR@salida(4), Encoder_ISR@tics(4), ustep(1), NULL(0), 
 10449 ;; Auto vars:     Size  Location     Type
 10450 ;;  nuls            7    0[BANK1 ] unsigned char [7]
 10451 ;;  l               2   15[BANK1 ] int 
 10452 ;;  p               2   13[BANK1 ] int 
 10453 ;;  cp              2   11[BANK1 ] PTR unsigned char 
 10454 ;;		 -> stoa@nuls(7), ?_sprintf(2), executeCommand@strCommand(30), lastToken(30), 
 10455 ;;		 -> readBuffer(32), Encoder_ISR@salida(4), Encoder_ISR@tics(4), ustep(1), 
 10456 ;;		 -> NULL(0), 
 10457 ;;  w               2    9[BANK1 ] int 
 10458 ;;  i               2    7[BANK1 ] int 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  2   53[BANK0 ] int 
 10461 ;; Registers used:
 10462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 3F/1
 10465 ;;		On exit  : 3F/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10468 ;;      Params:         0       4       0       0       0       0       0       0       0
 10469 ;;      Locals:         0       0      17       0       0       0       0       0       0
 10470 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10471 ;;      Totals:         0       5      17       0       0       0       0       0       0
 10472 ;;Total ram usage:       22 bytes
 10473 ;; Hardware stack levels used: 1
 10474 ;; Hardware stack levels required when called: 12
 10475 ;; This function calls:
 10476 ;;		_fputc
 10477 ;;		_strlen
 10478 ;; This function is called by:
 10479 ;;		_vfpfcnvrt
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	text40
 10484  0045A6                     __ptext40:
 10485                           	callstack 0
 10486  0045A6                     _stoa:
 10487                           	callstack 15
 10488                           
 10489                           ; BSR set to: 1
 10490                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 5
      +                          69: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *
      +                          cp, nuls[] = "(null)";
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;incstack = 0
 10494  0045A6  EE22  F0EF         	lfsr	2,stoa@F1177
 10495  0045AA  EE11  F000         	lfsr	1,stoa@nuls
 10496  0045AE  0E06               	movlw	6
 10497  0045B0                     u16681:
 10498  0045B0  CFDB FFE3          	movff	plusw2,plusw1
 10499  0045B4  06E8               	decf	wreg,f,c
 10500  0045B6  E2FC               	bc	u16681
 10501                           
 10502                           ; BSR set to: 1
 10503                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
 10504  0045B8  C097  F10B         	movff	stoa@s,stoa@cp
 10505  0045BC  C098  F10C         	movff	stoa@s+1,stoa@cp+1
 10506                           
 10507                           ; BSR set to: 1
 10508                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
 10509  0045C0  510B               	movf	stoa@cp& (0+255),w,b
 10510  0045C2  110C               	iorwf	(stoa@cp+1)& (0+255),w,b
 10511  0045C4  A4D8               	btfss	status,2,c
 10512  0045C6  D004               	goto	l13902
 10513                           
 10514                           ; BSR set to: 1
 10515                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nu
      +                          ls;
 10516  0045C8  0E00               	movlw	low stoa@nuls
 10517  0045CA  6F0B               	movwf	stoa@cp& (0+255),b
 10518  0045CC  0E01               	movlw	high stoa@nuls
 10519  0045CE  6F0C               	movwf	(stoa@cp+1)& (0+255),b
 10520  0045D0                     l13902:
 10521                           
 10522                           ; BSR set to: 1
 10523                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)st
      +                          rlen(cp);
 10524  0045D0  C10B  F08C         	movff	stoa@cp,strlen@s
 10525  0045D4  C10C  F08D         	movff	stoa@cp+1,strlen@s+1
 10526  0045D8  EC03  F03D         	call	_strlen	;wreg free
 10527  0045DC  C08C  F10F         	movff	?_strlen,stoa@l
 10528  0045E0  C08D  F110         	movff	?_strlen+1,stoa@l+1
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
 10532  0045E4  C0BE  F10D         	movff	_prec,stoa@p
 10533  0045E8  C0BF  F10E         	movff	_prec+1,stoa@p+1
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 10537  0045EC  0101               	movlb	1	; () banked
 10538  0045EE  BF0E               	btfsc	(stoa@p+1)& (0+255),7,b
 10539  0045F0  D011               	goto	l2348
 10540                           
 10541                           ; BSR set to: 1
 10542  0045F2  510F               	movf	stoa@l& (0+255),w,b
 10543  0045F4  5D0D               	subwf	stoa@p& (0+255),w,b
 10544  0045F6  510E               	movf	(stoa@p+1)& (0+255),w,b
 10545  0045F8  0A80               	xorlw	128
 10546  0045FA  0100               	movlb	0	; () banked
 10547  0045FC  6F99               	movwf	??_stoa& (0+255),b
 10548  0045FE  0101               	movlb	1	; () banked
 10549  004600  5110               	movf	(stoa@l+1)& (0+255),w,b
 10550  004602  0A80               	xorlw	128
 10551  004604  0100               	movlb	0	; () banked
 10552  004606  5999               	subwfb	??_stoa& (0+255),w,b
 10553  004608  B0D8               	btfsc	status,0,c
 10554  00460A  D004               	goto	l2348
 10555                           
 10556                           ; BSR set to: 0
 10557  00460C  C10D  F10F         	movff	stoa@p,stoa@l
 10558  004610  C10E  F110         	movff	stoa@p+1,stoa@l+1
 10559  004614                     l2348:
 10560                           
 10561                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
 10562  004614  C10F  F10D         	movff	stoa@l,stoa@p
 10563  004618  C110  F10E         	movff	stoa@l+1,stoa@p+1
 10564                           
 10565                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
 10566  00461C  C0BC  F109         	movff	_width,stoa@w
 10567  004620  C0BD  F10A         	movff	_width+1,stoa@w+1
 10568                           
 10569                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags
      +                           & (1 << 0))) {
 10570  004624  0100               	movlb	0	; () banked
 10571  004626  A1C0               	btfss	_flags& (0+255),0,b
 10572  004628  D00E               	goto	l13916
 10573  00462A  D01B               	goto	u16730
 10574  00462C                     l13912:
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fpu
      +                          tc(' ', fp);
 10578  00462C  0E00               	movlw	0
 10579  00462E  6F8D               	movwf	(fputc@c+1)& (0+255),b
 10580  004630  0E20               	movlw	32
 10581  004632  6F8C               	movwf	fputc@c& (0+255),b
 10582  004634  C095  F08E         	movff	stoa@fp,fputc@fp
 10583  004638  C096  F08F         	movff	stoa@fp+1,fputc@fp+1
 10584  00463C  EC9D  F034         	call	_fputc	;wreg free
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l
      +                          ;
 10588  004640  0101               	movlb	1	; () banked
 10589  004642  4B0F               	infsnz	stoa@l& (0+255),f,b
 10590  004644  2B10               	incf	(stoa@l+1)& (0+255),f,b
 10591  004646                     l13916:
 10592                           
 10593                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (
      +                          l < w) {
 10594  004646  0101               	movlb	1	; () banked
 10595  004648  5109               	movf	stoa@w& (0+255),w,b
 10596  00464A  5D0F               	subwf	stoa@l& (0+255),w,b
 10597  00464C  5110               	movf	(stoa@l+1)& (0+255),w,b
 10598  00464E  0A80               	xorlw	128
 10599  004650  0100               	movlb	0	; () banked
 10600  004652  6F99               	movwf	??_stoa& (0+255),b
 10601  004654  0101               	movlb	1	; () banked
 10602  004656  510A               	movf	(stoa@w+1)& (0+255),w,b
 10603  004658  0A80               	xorlw	128
 10604  00465A  0100               	movlb	0	; () banked
 10605  00465C  5999               	subwfb	??_stoa& (0+255),w,b
 10606  00465E  A0D8               	btfss	status,0,c
 10607  004660  D7E5               	goto	l13912
 10608  004662                     u16730:
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
 10612  004662  0E00               	movlw	0
 10613  004664  0101               	movlb	1	; () banked
 10614  004666  6F08               	movwf	(stoa@i+1)& (0+255),b
 10615  004668  0E00               	movlw	0
 10616  00466A  6F07               	movwf	stoa@i& (0+255),b
 10617                           
 10618                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 10619  00466C  D014               	goto	l13926
 10620  00466E                     l13920:
 10621                           
 10622                           ; BSR set to: 0
 10623                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*
      +                          cp, fp);
 10624  00466E  C10B  FFD9         	movff	stoa@cp,fsr2l
 10625  004672  C10C  FFDA         	movff	stoa@cp+1,fsr2h
 10626  004676  50DF               	movf	indf2,w,c
 10627  004678  6F99               	movwf	??_stoa& (0+255),b
 10628  00467A  5199               	movf	??_stoa& (0+255),w,b
 10629  00467C  6F8C               	movwf	fputc@c& (0+255),b
 10630  00467E  6B8D               	clrf	(fputc@c+1)& (0+255),b
 10631  004680  C095  F08E         	movff	stoa@fp,fputc@fp
 10632  004684  C096  F08F         	movff	stoa@fp+1,fputc@fp+1
 10633  004688  EC9D  F034         	call	_fputc	;wreg free
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
 10637  00468C  0101               	movlb	1	; () banked
 10638  00468E  4B0B               	infsnz	stoa@cp& (0+255),f,b
 10639  004690  2B0C               	incf	(stoa@cp+1)& (0+255),f,b
 10640                           
 10641                           ; BSR set to: 1
 10642                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
 10643  004692  4B07               	infsnz	stoa@i& (0+255),f,b
 10644  004694  2B08               	incf	(stoa@i+1)& (0+255),f,b
 10645  004696                     l13926:
 10646                           
 10647                           ; BSR set to: 1
 10648                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 10649  004696  510D               	movf	stoa@p& (0+255),w,b
 10650  004698  5D07               	subwf	stoa@i& (0+255),w,b
 10651  00469A  5108               	movf	(stoa@i+1)& (0+255),w,b
 10652  00469C  0A80               	xorlw	128
 10653  00469E  0100               	movlb	0	; () banked
 10654  0046A0  6F99               	movwf	??_stoa& (0+255),b
 10655  0046A2  0101               	movlb	1	; () banked
 10656  0046A4  510E               	movf	(stoa@p+1)& (0+255),w,b
 10657  0046A6  0A80               	xorlw	128
 10658  0046A8  0100               	movlb	0	; () banked
 10659  0046AA  5999               	subwfb	??_stoa& (0+255),w,b
 10660  0046AC  A0D8               	btfss	status,0,c
 10661  0046AE  D7DF               	goto	l13920
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags &
      +                           (1 << 0)) {
 10665  0046B0  B1C0               	btfsc	_flags& (0+255),0,b
 10666  0046B2  D00E               	goto	l13934
 10667  0046B4  D01B               	goto	u16760
 10668  0046B6                     l13930:
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fpu
      +                          tc(' ', fp);
 10672  0046B6  0E00               	movlw	0
 10673  0046B8  6F8D               	movwf	(fputc@c+1)& (0+255),b
 10674  0046BA  0E20               	movlw	32
 10675  0046BC  6F8C               	movwf	fputc@c& (0+255),b
 10676  0046BE  C095  F08E         	movff	stoa@fp,fputc@fp
 10677  0046C2  C096  F08F         	movff	stoa@fp+1,fputc@fp+1
 10678  0046C6  EC9D  F034         	call	_fputc	;wreg free
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l
      +                          ;
 10682  0046CA  0101               	movlb	1	; () banked
 10683  0046CC  4B0F               	infsnz	stoa@l& (0+255),f,b
 10684  0046CE  2B10               	incf	(stoa@l+1)& (0+255),f,b
 10685  0046D0                     l13934:
 10686                           
 10687                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (
      +                          l < w) {
 10688  0046D0  0101               	movlb	1	; () banked
 10689  0046D2  5109               	movf	stoa@w& (0+255),w,b
 10690  0046D4  5D0F               	subwf	stoa@l& (0+255),w,b
 10691  0046D6  5110               	movf	(stoa@l+1)& (0+255),w,b
 10692  0046D8  0A80               	xorlw	128
 10693  0046DA  0100               	movlb	0	; () banked
 10694  0046DC  6F99               	movwf	??_stoa& (0+255),b
 10695  0046DE  0101               	movlb	1	; () banked
 10696  0046E0  510A               	movf	(stoa@w+1)& (0+255),w,b
 10697  0046E2  0A80               	xorlw	128
 10698  0046E4  0100               	movlb	0	; () banked
 10699  0046E6  5999               	subwfb	??_stoa& (0+255),w,b
 10700  0046E8  A0D8               	btfss	status,0,c
 10701  0046EA  D7E5               	goto	l13930
 10702  0046EC                     u16760:
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
 10706                           
 10707                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
 10708  0046EC  C10F  F095         	movff	stoa@l,?_stoa
 10709  0046F0  C110  F096         	movff	stoa@l+1,?_stoa+1
 10710                           
 10711                           ; BSR set to: 0
 10712  0046F4  0012               	return		;funcret
 10713  0046F6                     __end_of_stoa:
 10714                           	callstack 0
 10715                           
 10716 ;; *************** function _efgtoa *****************
 10717 ;; Defined at:
 10718 ;;		line 332 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  fp              2   45[BANK1 ] PTR struct _IO_FILE
 10721 ;;		 -> sprintf@f(11), 
 10722 ;;  f               4   47[BANK1 ] PTR struct _IO_FILE
 10723 ;;  c               1   51[BANK1 ] unsigned char 
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;  u               4  103[BANK1 ] unsigned char 
 10726 ;;  g               4   95[BANK1 ] unsigned char 
 10727 ;;  l               4   89[BANK1 ] unsigned char 
 10728 ;;  h               4   85[BANK1 ] unsigned char 
 10729 ;;  ou              4   71[BANK1 ] unsigned char 
 10730 ;;  n               2  101[BANK1 ] int 
 10731 ;;  e               2   99[BANK1 ] int 
 10732 ;;  i               2   93[BANK1 ] int 
 10733 ;;  w               2   81[BANK1 ] int 
 10734 ;;  p               2   79[BANK1 ] int 
 10735 ;;  sign            2   77[BANK1 ] int 
 10736 ;;  d               2   75[BANK1 ] int 
 10737 ;;  m               2   69[BANK1 ] int 
 10738 ;;  ne              2   67[BANK1 ] int 
 10739 ;;  pp              2   65[BANK1 ] int 
 10740 ;;  t               2   63[BANK1 ] int 
 10741 ;;  mode            1   84[BANK1 ] unsigned char 
 10742 ;;  nmode           1   83[BANK1 ] unsigned char 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  2   45[BANK1 ] int 
 10745 ;; Registers used:
 10746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 3F/1
 10749 ;;		On exit  : 3F/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10752 ;;      Params:         0       0       7       0       0       0       0       0       0
 10753 ;;      Locals:         0       0      50       0       0       0       0       0       0
 10754 ;;      Temps:          0       0       5       0       0       0       0       0       0
 10755 ;;      Totals:         0       0      62       0       0       0       0       0       0
 10756 ;;Total ram usage:       62 bytes
 10757 ;; Hardware stack levels used: 1
 10758 ;; Hardware stack levels required when called: 14
 10759 ;; This function calls:
 10760 ;;		___awdiv
 10761 ;;		___awmod
 10762 ;;		___fladd
 10763 ;;		___fldiv
 10764 ;;		___fleq
 10765 ;;		___flge
 10766 ;;		___flmul
 10767 ;;		___flneg
 10768 ;;		___flsub
 10769 ;;		___fltol
 10770 ;;		___fpclassifyf
 10771 ;;		_floorf
 10772 ;;		_isupper
 10773 ;;		_pad
 10774 ;;		_strcpy
 10775 ;;		_tolower
 10776 ;; This function is called by:
 10777 ;;		_vfpfcnvrt
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           	psect	text41
 10782  000D7C                     __ptext41:
 10783                           	callstack 0
 10784  000D7C                     _efgtoa:
 10785                           	callstack 13
 10786                           
 10787                           ; BSR set to: 1
 10788                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.36/pic/sources/c99/co
      +                          mmon/doprnt.c: 333: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c:
      +                           334:     char mode, nmode;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/dop
      +                          rnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .36/pic/sources/c99/common/doprnt.c: 336:     long double g, h, l, ou, u;
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;incstack = 0
 10792  000D7C  0E00               	movlw	0
 10793  000D7E  6F4E               	movwf	(efgtoa@sign+1)& (0+255),b
 10794  000D80  0E00               	movlw	0
 10795  000D82  6F4D               	movwf	efgtoa@sign& (0+255),b
 10796                           
 10797                           ; BSR set to: 1
 10798                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
 10799  000D84  C12F  F15F         	movff	efgtoa@f,efgtoa@g
 10800  000D88  C130  F160         	movff	efgtoa@f+1,efgtoa@g+1
 10801  000D8C  C131  F161         	movff	efgtoa@f+2,efgtoa@g+2
 10802  000D90  C132  F162         	movff	efgtoa@f+3,efgtoa@g+3
 10803                           
 10804                           ; BSR set to: 1
 10805                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0
      +                          ) {
 10806  000D94  AF62               	btfss	(efgtoa@g+3)& (0+255),7,b
 10807  000D96  D016               	goto	l13598
 10808                           
 10809                           ; BSR set to: 1
 10810                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 
      +                          1;
 10811  000D98  0E00               	movlw	0
 10812  000D9A  6F4E               	movwf	(efgtoa@sign+1)& (0+255),b
 10813  000D9C  0E01               	movlw	1
 10814  000D9E  6F4D               	movwf	efgtoa@sign& (0+255),b
 10815                           
 10816                           ; BSR set to: 1
 10817                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
 10818  000DA0  C15F  F08C         	movff	efgtoa@g,___flneg@f1
 10819  000DA4  C160  F08D         	movff	efgtoa@g+1,___flneg@f1+1
 10820  000DA8  C161  F08E         	movff	efgtoa@g+2,___flneg@f1+2
 10821  000DAC  C162  F08F         	movff	efgtoa@g+3,___flneg@f1+3
 10822  000DB0  ECBB  F03C         	call	___flneg	;wreg free
 10823  000DB4  C08C  F15F         	movff	?___flneg,efgtoa@g
 10824  000DB8  C08D  F160         	movff	?___flneg+1,efgtoa@g+1
 10825  000DBC  C08E  F161         	movff	?___flneg+2,efgtoa@g+2
 10826  000DC0  C08F  F162         	movff	?___flneg+3,efgtoa@g+3
 10827  000DC4                     l13598:
 10828                           
 10829                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
 10830  000DC4  0E00               	movlw	0
 10831  000DC6  0101               	movlb	1	; () banked
 10832  000DC8  6F66               	movwf	(efgtoa@n+1)& (0+255),b
 10833  000DCA  0E00               	movlw	0
 10834  000DCC  6F65               	movwf	efgtoa@n& (0+255),b
 10835                           
 10836                           ; BSR set to: 1
 10837                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
 10838  000DCE  C0BC  F151         	movff	_width,efgtoa@w
 10839  000DD2  C0BD  F152         	movff	_width+1,efgtoa@w+1
 10840                           
 10841                           ; BSR set to: 1
 10842                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign ||
      +                           (flags & (1 << 2))) {
 10843  000DD6  514D               	movf	efgtoa@sign& (0+255),w,b
 10844  000DD8  114E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10845  000DDA  A4D8               	btfss	status,2,c
 10846  000DDC  D003               	goto	u16220
 10847                           
 10848                           ; BSR set to: 1
 10849  000DDE  0100               	movlb	0	; () banked
 10850  000DE0  A5C0               	btfss	_flags& (0+255),2,b
 10851  000DE2  D014               	goto	l13618
 10852  000DE4                     u16220:
 10853                           
 10854                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n]
      +                           = sign ? '-' : '+';
 10855  000DE4  0101               	movlb	1	; () banked
 10856  000DE6  514D               	movf	efgtoa@sign& (0+255),w,b
 10857  000DE8  114E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10858  000DEA  A4D8               	btfss	status,2,c
 10859  000DEC  D004               	goto	l13610
 10860                           
 10861                           ; BSR set to: 1
 10862  000DEE  0E00               	movlw	0
 10863  000DF0  6F3A               	movwf	(_efgtoa$5005+1)& (0+255),b
 10864  000DF2  0E2B               	movlw	43
 10865  000DF4  D003               	goto	L7
 10866  000DF6                     l13610:
 10867                           
 10868                           ; BSR set to: 1
 10869  000DF6  0E00               	movlw	0
 10870  000DF8  6F3A               	movwf	(_efgtoa$5005+1)& (0+255),b
 10871  000DFA  0E2D               	movlw	45
 10872  000DFC                     L7:
 10873  000DFC  6F39               	movwf	_efgtoa$5005& (0+255),b
 10874                           
 10875                           ; BSR set to: 1
 10876  000DFE  C139  F336         	movff	_efgtoa$5005,_dbuf
 10877                           
 10878                           ; BSR set to: 1
 10879                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
 10880  000E02  4B65               	infsnz	efgtoa@n& (0+255),f,b
 10881  000E04  2B66               	incf	(efgtoa@n+1)& (0+255),f,b
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
 10885  000E06  0751               	decf	efgtoa@w& (0+255),f,b
 10886  000E08  A0D8               	btfss	status,0,c
 10887  000E0A  0752               	decf	(efgtoa@w+1)& (0+255),f,b
 10888  000E0C                     l13618:
 10889                           
 10890                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpc
      +                          lassifyf(g) == 1 )) {
 10891  000E0C  C15F  F08C         	movff	efgtoa@g,___fpclassifyf@x
 10892  000E10  C160  F08D         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10893  000E14  C161  F08E         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10894  000E18  C162  F08F         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10895  000E1C  ECF3  F030         	call	___fpclassifyf	;wreg free
 10896  000E20  058C               	decf	?___fpclassifyf& (0+255),w,b
 10897  000E22  118D               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 10898  000E24  A4D8               	btfss	status,2,c
 10899  000E26  D04A               	goto	l13636
 10900                           
 10901                           ; BSR set to: 0
 10902  000E28  0EBF               	movlw	191
 10903  000E2A  0101               	movlb	1	; () banked
 10904  000E2C  6F34               	movwf	??_efgtoa& (0+255),b
 10905  000E2E  0EFF               	movlw	255
 10906  000E30  6F35               	movwf	(??_efgtoa+1)& (0+255),b
 10907  000E32  5133               	movf	efgtoa@c& (0+255),w,b
 10908  000E34  6F36               	movwf	(??_efgtoa+2)& (0+255),b
 10909  000E36  6B37               	clrf	(??_efgtoa+3)& (0+255),b
 10910  000E38  5134               	movf	??_efgtoa& (0+255),w,b
 10911  000E3A  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
 10912  000E3C  5135               	movf	(??_efgtoa+1)& (0+255),w,b
 10913  000E3E  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10914  000E40  5137               	movf	(??_efgtoa+3)& (0+255),w,b
 10915  000E42  E114               	bnz	l13628
 10916  000E44  0E1A               	movlw	26
 10917  000E46  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
 10918  000E48  B0D8               	btfsc	status,0,c
 10919  000E4A  D010               	goto	l13628
 10920                           
 10921                           ; BSR set to: 1
 10922                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             str
      +                          cpy(&dbuf[n], "INF");
 10923  000E4C  0E36               	movlw	low _dbuf
 10924  000E4E  2565               	addwf	efgtoa@n& (0+255),w,b
 10925  000E50  0100               	movlb	0	; () banked
 10926  000E52  6F8C               	movwf	strcpy@dest& (0+255),b
 10927  000E54  0E03               	movlw	high _dbuf
 10928  000E56  0101               	movlb	1	; () banked
 10929  000E58  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10930  000E5A  0100               	movlb	0	; () banked
 10931  000E5C  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 10932  000E5E  0EE7               	movlw	low STR_4
 10933  000E60  6F8E               	movwf	strcpy@src& (0+255),b
 10934  000E62  0E7F               	movlw	high STR_4
 10935  000E64  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 10936  000E66  EC9F  F039         	call	_strcpy	;wreg free
 10937                           
 10938                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else 
      +                          {
 10939  000E6A  D00F               	goto	l13630
 10940  000E6C                     l13628:
 10941                           
 10942                           ; BSR set to: 1
 10943                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             str
      +                          cpy(&dbuf[n], "inf");
 10944  000E6C  0E36               	movlw	low _dbuf
 10945  000E6E  2565               	addwf	efgtoa@n& (0+255),w,b
 10946  000E70  0100               	movlb	0	; () banked
 10947  000E72  6F8C               	movwf	strcpy@dest& (0+255),b
 10948  000E74  0E03               	movlw	high _dbuf
 10949  000E76  0101               	movlb	1	; () banked
 10950  000E78  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10951  000E7A  0100               	movlb	0	; () banked
 10952  000E7C  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 10953  000E7E  0EEF               	movlw	low STR_5
 10954  000E80  6F8E               	movwf	strcpy@src& (0+255),b
 10955  000E82  0E7F               	movlw	high STR_5
 10956  000E84  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 10957  000E86  EC9F  F039         	call	_strcpy	;wreg free
 10958  000E8A                     l13630:
 10959                           
 10960                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 10961  000E8A  0101               	movlb	1	; () banked
 10962  000E8C  0EFD               	movlw	253
 10963  000E8E  2751               	addwf	efgtoa@w& (0+255),f,b
 10964  000E90  0EFF               	movlw	255
 10965  000E92  2352               	addwfc	(efgtoa@w+1)& (0+255),f,b
 10966                           
 10967                           ; BSR set to: 1
 10968                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return 
      +                          pad(fp, &dbuf[0], w);
 10969  000E94  C12D  F09C         	movff	efgtoa@fp,pad@fp
 10970  000E98  C12E  F09D         	movff	efgtoa@fp+1,pad@fp+1
 10971  000E9C  0E36               	movlw	low _dbuf
 10972  000E9E  0100               	movlb	0	; () banked
 10973  000EA0  6F9E               	movwf	pad@buf& (0+255),b
 10974  000EA2  0E03               	movlw	high _dbuf
 10975  000EA4  6F9F               	movwf	(pad@buf+1)& (0+255),b
 10976  000EA6  C151  F0A0         	movff	efgtoa@w,pad@p
 10977  000EAA  C152  F0A1         	movff	efgtoa@w+1,pad@p+1
 10978  000EAE  EC3B  F035         	call	_pad	;wreg free
 10979  000EB2  C09C  F12D         	movff	?_pad,?_efgtoa
 10980  000EB6  C09D  F12E         	movff	?_pad+1,?_efgtoa+1
 10981  000EBA  0012               	return	
 10982  000EBC                     l13636:
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpc
      +                          lassifyf(g) == 0 )) {
 10986  000EBC  C15F  F08C         	movff	efgtoa@g,___fpclassifyf@x
 10987  000EC0  C160  F08D         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10988  000EC4  C161  F08E         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10989  000EC8  C162  F08F         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10990  000ECC  ECF3  F030         	call	___fpclassifyf	;wreg free
 10991  000ED0  518C               	movf	?___fpclassifyf& (0+255),w,b
 10992  000ED2  118D               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 10993  000ED4  A4D8               	btfss	status,2,c
 10994  000ED6  D04A               	goto	l13654
 10995                           
 10996                           ; BSR set to: 0
 10997  000ED8  0EBF               	movlw	191
 10998  000EDA  0101               	movlb	1	; () banked
 10999  000EDC  6F34               	movwf	??_efgtoa& (0+255),b
 11000  000EDE  0EFF               	movlw	255
 11001  000EE0  6F35               	movwf	(??_efgtoa+1)& (0+255),b
 11002  000EE2  5133               	movf	efgtoa@c& (0+255),w,b
 11003  000EE4  6F36               	movwf	(??_efgtoa+2)& (0+255),b
 11004  000EE6  6B37               	clrf	(??_efgtoa+3)& (0+255),b
 11005  000EE8  5134               	movf	??_efgtoa& (0+255),w,b
 11006  000EEA  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
 11007  000EEC  5135               	movf	(??_efgtoa+1)& (0+255),w,b
 11008  000EEE  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
 11009  000EF0  5137               	movf	(??_efgtoa+3)& (0+255),w,b
 11010  000EF2  E114               	bnz	l13646
 11011  000EF4  0E1A               	movlw	26
 11012  000EF6  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
 11013  000EF8  B0D8               	btfsc	status,0,c
 11014  000EFA  D010               	goto	l13646
 11015                           
 11016                           ; BSR set to: 1
 11017                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             str
      +                          cpy(&dbuf[n], "NAN");
 11018  000EFC  0E36               	movlw	low _dbuf
 11019  000EFE  2565               	addwf	efgtoa@n& (0+255),w,b
 11020  000F00  0100               	movlb	0	; () banked
 11021  000F02  6F8C               	movwf	strcpy@dest& (0+255),b
 11022  000F04  0E03               	movlw	high _dbuf
 11023  000F06  0101               	movlb	1	; () banked
 11024  000F08  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11025  000F0A  0100               	movlb	0	; () banked
 11026  000F0C  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 11027  000F0E  0EEB               	movlw	low STR_8
 11028  000F10  6F8E               	movwf	strcpy@src& (0+255),b
 11029  000F12  0E7F               	movlw	high STR_8
 11030  000F14  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 11031  000F16  EC9F  F039         	call	_strcpy	;wreg free
 11032                           
 11033                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else 
      +                          {
 11034  000F1A  D00F               	goto	l13648
 11035  000F1C                     l13646:
 11036                           
 11037                           ; BSR set to: 1
 11038                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             str
      +                          cpy(&dbuf[n], "nan");
 11039  000F1C  0E36               	movlw	low _dbuf
 11040  000F1E  2565               	addwf	efgtoa@n& (0+255),w,b
 11041  000F20  0100               	movlb	0	; () banked
 11042  000F22  6F8C               	movwf	strcpy@dest& (0+255),b
 11043  000F24  0E03               	movlw	high _dbuf
 11044  000F26  0101               	movlb	1	; () banked
 11045  000F28  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11046  000F2A  0100               	movlb	0	; () banked
 11047  000F2C  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 11048  000F2E  0EF3               	movlw	low STR_9
 11049  000F30  6F8E               	movwf	strcpy@src& (0+255),b
 11050  000F32  0E7F               	movlw	high STR_9
 11051  000F34  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 11052  000F36  EC9F  F039         	call	_strcpy	;wreg free
 11053  000F3A                     l13648:
 11054                           
 11055                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 371:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 11056  000F3A  0101               	movlb	1	; () banked
 11057  000F3C  0EFD               	movlw	253
 11058  000F3E  2751               	addwf	efgtoa@w& (0+255),f,b
 11059  000F40  0EFF               	movlw	255
 11060  000F42  2352               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11061                           
 11062                           ; BSR set to: 1
 11063                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 372:         return 
      +                          pad(fp, &dbuf[0], w);
 11064  000F44  C12D  F09C         	movff	efgtoa@fp,pad@fp
 11065  000F48  C12E  F09D         	movff	efgtoa@fp+1,pad@fp+1
 11066  000F4C  0E36               	movlw	low _dbuf
 11067  000F4E  0100               	movlb	0	; () banked
 11068  000F50  6F9E               	movwf	pad@buf& (0+255),b
 11069  000F52  0E03               	movlw	high _dbuf
 11070  000F54  6F9F               	movwf	(pad@buf+1)& (0+255),b
 11071  000F56  C151  F0A0         	movff	efgtoa@w,pad@p
 11072  000F5A  C152  F0A1         	movff	efgtoa@w+1,pad@p+1
 11073  000F5E  EC3B  F035         	call	_pad	;wreg free
 11074  000F62  C09C  F12D         	movff	?_pad,?_efgtoa
 11075  000F66  C09D  F12E         	movff	?_pad+1,?_efgtoa+1
 11076  000F6A  0012               	return	
 11077  000F6C                     l13654:
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
 11081  000F6C  0E00               	movlw	0
 11082  000F6E  0101               	movlb	1	; () banked
 11083  000F70  6F67               	movwf	efgtoa@u& (0+255),b
 11084  000F72  0E00               	movlw	0
 11085  000F74  6F68               	movwf	(efgtoa@u+1)& (0+255),b
 11086  000F76  0E80               	movlw	128
 11087  000F78  6F69               	movwf	(efgtoa@u+2)& (0+255),b
 11088  000F7A  0E3F               	movlw	63
 11089  000F7C  6F6A               	movwf	(efgtoa@u+3)& (0+255),b
 11090                           
 11091                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
 11092  000F7E  0E00               	movlw	0
 11093  000F80  6F64               	movwf	(efgtoa@e+1)& (0+255),b
 11094  000F82  0E00               	movlw	0
 11095  000F84  6F63               	movwf	efgtoa@e& (0+255),b
 11096                           
 11097                           ; BSR set to: 1
 11098                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 
      +                          0.0)) {
 11099  000F86  C15F  F08C         	movff	efgtoa@g,___fleq@ff1
 11100  000F8A  C160  F08D         	movff	efgtoa@g+1,___fleq@ff1+1
 11101  000F8E  C161  F08E         	movff	efgtoa@g+2,___fleq@ff1+2
 11102  000F92  C162  F08F         	movff	efgtoa@g+3,___fleq@ff1+3
 11103  000F96  0E00               	movlw	0
 11104  000F98  0100               	movlb	0	; () banked
 11105  000F9A  6F90               	movwf	___fleq@ff2& (0+255),b
 11106  000F9C  0E00               	movlw	0
 11107  000F9E  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
 11108  000FA0  0E00               	movlw	0
 11109  000FA2  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
 11110  000FA4  0E00               	movlw	0
 11111  000FA6  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
 11112  000FA8  EC3B  F037         	call	___fleq	;wreg free
 11113  000FAC  A0D8               	btfss	status,0,c
 11114  000FAE  D01D               	goto	l13664
 11115  000FB0  D075               	goto	u16300
 11116  000FB2                     l13660:
 11117                           
 11118                           ; BSR set to: 1
 11119                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u =
      +                           u*10.0;
 11120  000FB2  C167  F100         	movff	efgtoa@u,___flmul@b
 11121  000FB6  C168  F101         	movff	efgtoa@u+1,___flmul@b+1
 11122  000FBA  C169  F102         	movff	efgtoa@u+2,___flmul@b+2
 11123  000FBE  C16A  F103         	movff	efgtoa@u+3,___flmul@b+3
 11124  000FC2  0E00               	movlw	0
 11125  000FC4  6F04               	movwf	___flmul@a& (0+255),b
 11126  000FC6  0E00               	movlw	0
 11127  000FC8  6F05               	movwf	(___flmul@a+1)& (0+255),b
 11128  000FCA  0E20               	movlw	32
 11129  000FCC  6F06               	movwf	(___flmul@a+2)& (0+255),b
 11130  000FCE  0E41               	movlw	65
 11131  000FD0  6F07               	movwf	(___flmul@a+3)& (0+255),b
 11132  000FD2  ECBB  F010         	call	___flmul	;wreg free
 11133  000FD6  C100  F167         	movff	?___flmul,efgtoa@u
 11134  000FDA  C101  F168         	movff	?___flmul+1,efgtoa@u+1
 11135  000FDE  C102  F169         	movff	?___flmul+2,efgtoa@u+2
 11136  000FE2  C103  F16A         	movff	?___flmul+3,efgtoa@u+3
 11137                           
 11138                           ; BSR set to: 1
 11139                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e
      +                          ;
 11140  000FE6  4B63               	infsnz	efgtoa@e& (0+255),f,b
 11141  000FE8  2B64               	incf	(efgtoa@e+1)& (0+255),f,b
 11142  000FEA                     l13664:
 11143                           
 11144                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (
      +                          !(g < (u*10.0))) {
 11145  000FEA  C15F  F119         	movff	efgtoa@g,___flge@ff1
 11146  000FEE  C160  F11A         	movff	efgtoa@g+1,___flge@ff1+1
 11147  000FF2  C161  F11B         	movff	efgtoa@g+2,___flge@ff1+2
 11148  000FF6  C162  F11C         	movff	efgtoa@g+3,___flge@ff1+3
 11149  000FFA  0E00               	movlw	0
 11150  000FFC  0101               	movlb	1	; () banked
 11151  000FFE  6F04               	movwf	___flmul@a& (0+255),b
 11152  001000  0E00               	movlw	0
 11153  001002  6F05               	movwf	(___flmul@a+1)& (0+255),b
 11154  001004  0E20               	movlw	32
 11155  001006  6F06               	movwf	(___flmul@a+2)& (0+255),b
 11156  001008  0E41               	movlw	65
 11157  00100A  6F07               	movwf	(___flmul@a+3)& (0+255),b
 11158  00100C  C167  F100         	movff	efgtoa@u,___flmul@b
 11159  001010  C168  F101         	movff	efgtoa@u+1,___flmul@b+1
 11160  001014  C169  F102         	movff	efgtoa@u+2,___flmul@b+2
 11161  001018  C16A  F103         	movff	efgtoa@u+3,___flmul@b+3
 11162  00101C  ECBB  F010         	call	___flmul	;wreg free
 11163  001020  C100  F11D         	movff	?___flmul,___flge@ff2
 11164  001024  C101  F11E         	movff	?___flmul+1,___flge@ff2+1
 11165  001028  C102  F11F         	movff	?___flmul+2,___flge@ff2+2
 11166  00102C  C103  F120         	movff	?___flmul+3,___flge@ff2+3
 11167  001030  EC23  F030         	call	___flge	;wreg free
 11168  001034  A0D8               	btfss	status,0,c
 11169  001036  D01E               	goto	l13670
 11170  001038  D7BC               	goto	l13660
 11171  00103A                     l13666:
 11172                           
 11173                           ; BSR set to: 1
 11174                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u =
      +                           u/10.0;
 11175  00103A  C167  F100         	movff	efgtoa@u,___fldiv@b
 11176  00103E  C168  F101         	movff	efgtoa@u+1,___fldiv@b+1
 11177  001042  C169  F102         	movff	efgtoa@u+2,___fldiv@b+2
 11178  001046  C16A  F103         	movff	efgtoa@u+3,___fldiv@b+3
 11179  00104A  0E00               	movlw	0
 11180  00104C  6F04               	movwf	___fldiv@a& (0+255),b
 11181  00104E  0E00               	movlw	0
 11182  001050  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 11183  001052  0E20               	movlw	32
 11184  001054  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 11185  001056  0E41               	movlw	65
 11186  001058  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 11187  00105A  EC9F  F019         	call	___fldiv	;wreg free
 11188  00105E  C100  F167         	movff	?___fldiv,efgtoa@u
 11189  001062  C101  F168         	movff	?___fldiv+1,efgtoa@u+1
 11190  001066  C102  F169         	movff	?___fldiv+2,efgtoa@u+2
 11191  00106A  C103  F16A         	movff	?___fldiv+3,efgtoa@u+3
 11192                           
 11193                           ; BSR set to: 1
 11194                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e
      +                          ;
 11195  00106E  0763               	decf	efgtoa@e& (0+255),f,b
 11196  001070  A0D8               	btfss	status,0,c
 11197  001072  0764               	decf	(efgtoa@e+1)& (0+255),f,b
 11198  001074                     l13670:
 11199                           
 11200                           ; BSR set to: 1
 11201                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (
      +                          g < u) {
 11202  001074  C15F  F119         	movff	efgtoa@g,___flge@ff1
 11203  001078  C160  F11A         	movff	efgtoa@g+1,___flge@ff1+1
 11204  00107C  C161  F11B         	movff	efgtoa@g+2,___flge@ff1+2
 11205  001080  C162  F11C         	movff	efgtoa@g+3,___flge@ff1+3
 11206  001084  C167  F11D         	movff	efgtoa@u,___flge@ff2
 11207  001088  C168  F11E         	movff	efgtoa@u+1,___flge@ff2+1
 11208  00108C  C169  F11F         	movff	efgtoa@u+2,___flge@ff2+2
 11209  001090  C16A  F120         	movff	efgtoa@u+3,___flge@ff2+3
 11210  001094  EC23  F030         	call	___flge	;wreg free
 11211  001098  A0D8               	btfss	status,0,c
 11212  00109A  D7CF               	goto	l13666
 11213  00109C                     u16300:
 11214                           
 11215                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (cha
      +                          r)tolower((int)c);
 11216  00109C  C133  F092         	movff	efgtoa@c,tolower@c
 11217  0010A0  0100               	movlb	0	; () banked
 11218  0010A2  6B93               	clrf	(tolower@c+1)& (0+255),b
 11219  0010A4  ECB0  F03B         	call	_tolower	;wreg free
 11220  0010A8  5192               	movf	?_tolower& (0+255),w,b
 11221  0010AA  0101               	movlb	1	; () banked
 11222  0010AC  6F54               	movwf	efgtoa@mode& (0+255),b
 11223                           
 11224                           ; BSR set to: 1
 11225                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mod
      +                          e;
 11226  0010AE  C154  F153         	movff	efgtoa@mode,efgtoa@nmode
 11227                           
 11228                           ; BSR set to: 1
 11229                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode ==
      +                           'g') {
 11230  0010B2  0E67               	movlw	103
 11231  0010B4  1954               	xorwf	efgtoa@mode& (0+255),w,b
 11232  0010B6  A4D8               	btfss	status,2,c
 11233  0010B8  D01B               	goto	l13686
 11234                           
 11235                           ; BSR set to: 1
 11236                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0
      +                          ) {
 11237  0010BA  0100               	movlb	0	; () banked
 11238  0010BC  51BE               	movf	_prec& (0+255),w,b
 11239  0010BE  11BF               	iorwf	(_prec+1)& (0+255),w,b
 11240  0010C0  A4D8               	btfss	status,2,c
 11241  0010C2  D004               	goto	l13682
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
 11245  0010C4  0E00               	movlw	0
 11246  0010C6  6FBF               	movwf	(_prec+1)& (0+255),b
 11247  0010C8  0E01               	movlw	1
 11248  0010CA  6FBE               	movwf	_prec& (0+255),b
 11249  0010CC                     l13682:
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 
      +                          < prec) ? prec : 6;
 11253  0010CC  BFBF               	btfsc	(_prec+1)& (0+255),7,b
 11254  0010CE  D005               	goto	u16330
 11255  0010D0  51BF               	movf	(_prec+1)& (0+255),w,b
 11256  0010D2  E109               	bnz	l2284
 11257  0010D4  05BE               	decf	_prec& (0+255),w,b
 11258  0010D6  B0D8               	btfsc	status,0,c
 11259  0010D8  D006               	goto	l2284
 11260  0010DA                     u16330:
 11261                           
 11262                           ; BSR set to: 0
 11263  0010DA  0E00               	movlw	0
 11264  0010DC  0101               	movlb	1	; () banked
 11265  0010DE  6F50               	movwf	(efgtoa@p+1)& (0+255),b
 11266  0010E0  0E06               	movlw	6
 11267  0010E2  6F4F               	movwf	efgtoa@p& (0+255),b
 11268  0010E4  D009               	goto	l13692
 11269  0010E6                     l2284:
 11270                           
 11271                           ; BSR set to: 0
 11272  0010E6  C0BE  F14F         	movff	_prec,efgtoa@p
 11273  0010EA  C0BF  F150         	movff	_prec+1,efgtoa@p+1
 11274  0010EE  D004               	goto	l13692
 11275  0010F0                     l13686:
 11276                           
 11277                           ; BSR set to: 1
 11278                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (pr
      +                          ec < 0) ? 6 : prec;
 11279  0010F0  0100               	movlb	0	; () banked
 11280  0010F2  AFBF               	btfss	(_prec+1)& (0+255),7,b
 11281  0010F4  D7F8               	goto	l2284
 11282  0010F6  D7F1               	goto	u16330
 11283  0010F8                     l13692:
 11284                           
 11285                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode ==
      +                           'g') {
 11286  0010F8  0E67               	movlw	103
 11287  0010FA  0101               	movlb	1	; () banked
 11288  0010FC  1954               	xorwf	efgtoa@mode& (0+255),w,b
 11289  0010FE  A4D8               	btfss	status,2,c
 11290  001100  D022               	goto	l13702
 11291                           
 11292                           ; BSR set to: 1
 11293                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
 11294  001102  AF64               	btfss	(efgtoa@e+1)& (0+255),7,b
 11295  001104  D006               	goto	u16360
 11296  001106  0EFC               	movlw	252
 11297  001108  5D63               	subwf	efgtoa@e& (0+255),w,b
 11298  00110A  0EFF               	movlw	255
 11299  00110C  5964               	subwfb	(efgtoa@e+1)& (0+255),w,b
 11300  00110E  A0D8               	btfss	status,0,c
 11301  001110  D018               	goto	l13700
 11302  001112                     u16360:
 11303                           
 11304                           ; BSR set to: 1
 11305  001112  0EFF               	movlw	255
 11306  001114  6F34               	movwf	??_efgtoa& (0+255),b
 11307  001116  0EFF               	movlw	255
 11308  001118  6F35               	movwf	(??_efgtoa+1)& (0+255),b
 11309  00111A  C14F  F136         	movff	efgtoa@p,??_efgtoa+2
 11310  00111E  C150  F137         	movff	efgtoa@p+1,??_efgtoa+3
 11311  001122  5134               	movf	??_efgtoa& (0+255),w,b
 11312  001124  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
 11313  001126  5135               	movf	(??_efgtoa+1)& (0+255),w,b
 11314  001128  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
 11315  00112A  5163               	movf	efgtoa@e& (0+255),w,b
 11316  00112C  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
 11317  00112E  5137               	movf	(??_efgtoa+3)& (0+255),w,b
 11318  001130  0A80               	xorlw	128
 11319  001132  6F38               	movwf	(??_efgtoa+4)& (0+255),b
 11320  001134  5164               	movf	(efgtoa@e+1)& (0+255),w,b
 11321  001136  0A80               	xorlw	128
 11322  001138  5938               	subwfb	(??_efgtoa+4)& (0+255),w,b
 11323  00113A  A0D8               	btfss	status,0,c
 11324  00113C  D002               	goto	l13700
 11325                           
 11326                           ; BSR set to: 1
 11327                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmo
      +                          de = 'f';
 11328  00113E  0E66               	movlw	102
 11329  001140  D001               	goto	L8
 11330  001142                     l13700:
 11331                           
 11332                           ; BSR set to: 1
 11333                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmo
      +                          de = 'e';
 11334  001142  0E65               	movlw	101
 11335  001144                     L8:
 11336  001144  6F53               	movwf	efgtoa@nmode& (0+255),b
 11337  001146                     l13702:
 11338                           
 11339                           ; BSR set to: 1
 11340                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
 11341  001146  C14F  F145         	movff	efgtoa@p,efgtoa@m
 11342  00114A  C150  F146         	movff	efgtoa@p+1,efgtoa@m+1
 11343                           
 11344                           ; BSR set to: 1
 11345                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
 11346  00114E  0E67               	movlw	103
 11347  001150  1954               	xorwf	efgtoa@mode& (0+255),w,b
 11348  001152  A4D8               	btfss	status,2,c
 11349  001154  D005               	goto	u16400
 11350                           
 11351                           ; BSR set to: 1
 11352  001156  0E66               	movlw	102
 11353  001158  1953               	xorwf	efgtoa@nmode& (0+255),w,b
 11354  00115A  B4D8               	btfsc	status,2,c
 11355                           
 11356                           ; BSR set to: 1
 11357  00115C  AF64               	btfss	(efgtoa@e+1)& (0+255),7,b
 11358  00115E  D002               	goto	l13712
 11359  001160                     u16400:
 11360                           
 11361                           ; BSR set to: 1
 11362                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
 11363  001160  4B45               	infsnz	efgtoa@m& (0+255),f,b
 11364  001162  2B46               	incf	(efgtoa@m+1)& (0+255),f,b
 11365  001164                     l13712:
 11366                           
 11367                           ; BSR set to: 1
 11368                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode =
      +                          = 'f') {
 11369  001164  0E66               	movlw	102
 11370  001166  1953               	xorwf	efgtoa@nmode& (0+255),w,b
 11371  001168  A4D8               	btfss	status,2,c
 11372  00116A  D016               	goto	l13722
 11373                           
 11374                           ; BSR set to: 1
 11375                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e <
      +                           0) {
 11376  00116C  AF64               	btfss	(efgtoa@e+1)& (0+255),7,b
 11377  00116E  D00C               	goto	l13718
 11378                           
 11379                           ; BSR set to: 1
 11380                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u =
      +                           1.0;
 11381  001170  0E00               	movlw	0
 11382  001172  6F67               	movwf	efgtoa@u& (0+255),b
 11383  001174  0E00               	movlw	0
 11384  001176  6F68               	movwf	(efgtoa@u+1)& (0+255),b
 11385  001178  0E80               	movlw	128
 11386  00117A  6F69               	movwf	(efgtoa@u+2)& (0+255),b
 11387  00117C  0E3F               	movlw	63
 11388  00117E  6F6A               	movwf	(efgtoa@u+3)& (0+255),b
 11389                           
 11390                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e =
      +                           0;
 11391  001180  0E00               	movlw	0
 11392  001182  6F64               	movwf	(efgtoa@e+1)& (0+255),b
 11393  001184  0E00               	movlw	0
 11394  001186  6F63               	movwf	efgtoa@e& (0+255),b
 11395  001188                     l13718:
 11396                           
 11397                           ; BSR set to: 1
 11398                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(m
      +                          ode == 'g')) {
 11399  001188  0E67               	movlw	103
 11400  00118A  1954               	xorwf	efgtoa@mode& (0+255),w,b
 11401  00118C  B4D8               	btfsc	status,2,c
 11402  00118E  D004               	goto	l13722
 11403                           
 11404                           ; BSR set to: 1
 11405                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m +
      +                          = e;
 11406  001190  5163               	movf	efgtoa@e& (0+255),w,b
 11407  001192  2745               	addwf	efgtoa@m& (0+255),f,b
 11408  001194  5164               	movf	(efgtoa@e+1)& (0+255),w,b
 11409  001196  2346               	addwfc	(efgtoa@m+1)& (0+255),f,b
 11410  001198                     l13722:
 11411                           
 11412                           ; BSR set to: 1
 11413                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
 11414  001198  0E00               	movlw	0
 11415  00119A  6F5E               	movwf	(efgtoa@i+1)& (0+255),b
 11416  00119C  0E00               	movlw	0
 11417  00119E  6F5D               	movwf	efgtoa@i& (0+255),b
 11418                           
 11419                           ; BSR set to: 1
 11420                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
 11421  0011A0  C15F  F155         	movff	efgtoa@g,efgtoa@h
 11422  0011A4  C160  F156         	movff	efgtoa@g+1,efgtoa@h+1
 11423  0011A8  C161  F157         	movff	efgtoa@g+2,efgtoa@h+2
 11424  0011AC  C162  F158         	movff	efgtoa@g+3,efgtoa@h+3
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
 11428  0011B0  C167  F147         	movff	efgtoa@u,efgtoa@ou
 11429  0011B4  C168  F148         	movff	efgtoa@u+1,efgtoa@ou+1
 11430  0011B8  C169  F149         	movff	efgtoa@u+2,efgtoa@ou+2
 11431  0011BC  C16A  F14A         	movff	efgtoa@u+3,efgtoa@ou+3
 11432                           
 11433                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
 11434  0011C0  D07B               	goto	l13736
 11435  0011C2                     l13728:
 11436                           
 11437                           ; BSR set to: 1
 11438                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = flo
      +                          orf(h/u);
 11439  0011C2  C155  F100         	movff	efgtoa@h,___fldiv@b
 11440  0011C6  C156  F101         	movff	efgtoa@h+1,___fldiv@b+1
 11441  0011CA  C157  F102         	movff	efgtoa@h+2,___fldiv@b+2
 11442  0011CE  C158  F103         	movff	efgtoa@h+3,___fldiv@b+3
 11443  0011D2  C167  F104         	movff	efgtoa@u,___fldiv@a
 11444  0011D6  C168  F105         	movff	efgtoa@u+1,___fldiv@a+1
 11445  0011DA  C169  F106         	movff	efgtoa@u+2,___fldiv@a+2
 11446  0011DE  C16A  F107         	movff	efgtoa@u+3,___fldiv@a+3
 11447  0011E2  EC9F  F019         	call	___fldiv	;wreg free
 11448  0011E6  C100  F119         	movff	?___fldiv,floorf@x
 11449  0011EA  C101  F11A         	movff	?___fldiv+1,floorf@x+1
 11450  0011EE  C102  F11B         	movff	?___fldiv+2,floorf@x+2
 11451  0011F2  C103  F11C         	movff	?___fldiv+3,floorf@x+3
 11452  0011F6  ECFE  F021         	call	_floorf	;wreg free
 11453  0011FA  C119  F159         	movff	?_floorf,efgtoa@l
 11454  0011FE  C11A  F15A         	movff	?_floorf+1,efgtoa@l+1
 11455  001202  C11B  F15B         	movff	?_floorf+2,efgtoa@l+2
 11456  001206  C11C  F15C         	movff	?_floorf+3,efgtoa@l+3
 11457                           
 11458                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (in
      +                          t)l;
 11459  00120A  C159  F119         	movff	efgtoa@l,___fltol@f1
 11460  00120E  C15A  F11A         	movff	efgtoa@l+1,___fltol@f1+1
 11461  001212  C15B  F11B         	movff	efgtoa@l+2,___fltol@f1+2
 11462  001216  C15C  F11C         	movff	efgtoa@l+3,___fltol@f1+3
 11463  00121A  EC51  F02F         	call	___fltol	;wreg free
 11464  00121E  C119  F14B         	movff	?___fltol,efgtoa@d
 11465  001222  C11A  F14C         	movff	?___fltol+1,efgtoa@d+1
 11466                           
 11467                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*
      +                          u;
 11468  001226  C155  F119         	movff	efgtoa@h,___flsub@b
 11469  00122A  C156  F11A         	movff	efgtoa@h+1,___flsub@b+1
 11470  00122E  C157  F11B         	movff	efgtoa@h+2,___flsub@b+2
 11471  001232  C158  F11C         	movff	efgtoa@h+3,___flsub@b+3
 11472  001236  C167  F104         	movff	efgtoa@u,___flmul@a
 11473  00123A  C168  F105         	movff	efgtoa@u+1,___flmul@a+1
 11474  00123E  C169  F106         	movff	efgtoa@u+2,___flmul@a+2
 11475  001242  C16A  F107         	movff	efgtoa@u+3,___flmul@a+3
 11476  001246  C159  F100         	movff	efgtoa@l,___flmul@b
 11477  00124A  C15A  F101         	movff	efgtoa@l+1,___flmul@b+1
 11478  00124E  C15B  F102         	movff	efgtoa@l+2,___flmul@b+2
 11479  001252  C15C  F103         	movff	efgtoa@l+3,___flmul@b+3
 11480  001256  ECBB  F010         	call	___flmul	;wreg free
 11481  00125A  C100  F11D         	movff	?___flmul,___flsub@a
 11482  00125E  C101  F11E         	movff	?___flmul+1,___flsub@a+1
 11483  001262  C102  F11F         	movff	?___flmul+2,___flsub@a+2
 11484  001266  C103  F120         	movff	?___flmul+3,___flsub@a+3
 11485  00126A  EC66  F03A         	call	___flsub	;wreg free
 11486  00126E  C119  F155         	movff	?___flsub,efgtoa@h
 11487  001272  C11A  F156         	movff	?___flsub+1,efgtoa@h+1
 11488  001276  C11B  F157         	movff	?___flsub+2,efgtoa@h+2
 11489  00127A  C11C  F158         	movff	?___flsub+3,efgtoa@h+3
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/1
      +                          0.0;
 11493  00127E  C167  F100         	movff	efgtoa@u,___fldiv@b
 11494  001282  C168  F101         	movff	efgtoa@u+1,___fldiv@b+1
 11495  001286  C169  F102         	movff	efgtoa@u+2,___fldiv@b+2
 11496  00128A  C16A  F103         	movff	efgtoa@u+3,___fldiv@b+3
 11497  00128E  0E00               	movlw	0
 11498  001290  0101               	movlb	1	; () banked
 11499  001292  6F04               	movwf	___fldiv@a& (0+255),b
 11500  001294  0E00               	movlw	0
 11501  001296  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 11502  001298  0E20               	movlw	32
 11503  00129A  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 11504  00129C  0E41               	movlw	65
 11505  00129E  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 11506  0012A0  EC9F  F019         	call	___fldiv	;wreg free
 11507  0012A4  C100  F167         	movff	?___fldiv,efgtoa@u
 11508  0012A8  C101  F168         	movff	?___fldiv+1,efgtoa@u+1
 11509  0012AC  C102  F169         	movff	?___fldiv+2,efgtoa@u+2
 11510  0012B0  C103  F16A         	movff	?___fldiv+3,efgtoa@u+3
 11511                           
 11512                           ; BSR set to: 1
 11513                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
 11514  0012B4  4B5D               	infsnz	efgtoa@i& (0+255),f,b
 11515  0012B6  2B5E               	incf	(efgtoa@i+1)& (0+255),f,b
 11516  0012B8                     l13736:
 11517                           
 11518                           ; BSR set to: 1
 11519                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
 11520  0012B8  5145               	movf	efgtoa@m& (0+255),w,b
 11521  0012BA  5D5D               	subwf	efgtoa@i& (0+255),w,b
 11522  0012BC  515E               	movf	(efgtoa@i+1)& (0+255),w,b
 11523  0012BE  0A80               	xorlw	128
 11524  0012C0  6F34               	movwf	??_efgtoa& (0+255),b
 11525  0012C2  5146               	movf	(efgtoa@m+1)& (0+255),w,b
 11526  0012C4  0A80               	xorlw	128
 11527  0012C6  5934               	subwfb	??_efgtoa& (0+255),w,b
 11528  0012C8  A0D8               	btfss	status,0,c
 11529  0012CA  D77B               	goto	l13728
 11530                           
 11531                           ; BSR set to: 1
 11532                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
 11533  0012CC  C167  F100         	movff	efgtoa@u,___flmul@b
 11534  0012D0  C168  F101         	movff	efgtoa@u+1,___flmul@b+1
 11535  0012D4  C169  F102         	movff	efgtoa@u+2,___flmul@b+2
 11536  0012D8  C16A  F103         	movff	efgtoa@u+3,___flmul@b+3
 11537  0012DC  0E00               	movlw	0
 11538  0012DE  6F04               	movwf	___flmul@a& (0+255),b
 11539  0012E0  0E00               	movlw	0
 11540  0012E2  6F05               	movwf	(___flmul@a+1)& (0+255),b
 11541  0012E4  0EA0               	movlw	160
 11542  0012E6  6F06               	movwf	(___flmul@a+2)& (0+255),b
 11543  0012E8  0E40               	movlw	64
 11544  0012EA  6F07               	movwf	(___flmul@a+3)& (0+255),b
 11545  0012EC  ECBB  F010         	call	___flmul	;wreg free
 11546  0012F0  C100  F159         	movff	?___flmul,efgtoa@l
 11547  0012F4  C101  F15A         	movff	?___flmul+1,efgtoa@l+1
 11548  0012F8  C102  F15B         	movff	?___flmul+2,efgtoa@l+2
 11549  0012FC  C103  F15C         	movff	?___flmul+3,efgtoa@l+3
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) 
      +                          {
 11553  001300  C155  F119         	movff	efgtoa@h,___flge@ff1
 11554  001304  C156  F11A         	movff	efgtoa@h+1,___flge@ff1+1
 11555  001308  C157  F11B         	movff	efgtoa@h+2,___flge@ff1+2
 11556  00130C  C158  F11C         	movff	efgtoa@h+3,___flge@ff1+3
 11557  001310  C159  F11D         	movff	efgtoa@l,___flge@ff2
 11558  001314  C15A  F11E         	movff	efgtoa@l+1,___flge@ff2+1
 11559  001318  C15B  F11F         	movff	efgtoa@l+2,___flge@ff2+2
 11560  00131C  C15C  F120         	movff	efgtoa@l+3,___flge@ff2+3
 11561  001320  EC23  F030         	call	___flge	;wreg free
 11562  001324  A0D8               	btfss	status,0,c
 11563  001326  D017               	goto	u16470
 11564                           
 11565                           ; BSR set to: 1
 11566                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h 
      +                          == l) && !(d % 2)) {
 11567                           
 11568                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
 11569                           
 11570                           ; BSR set to: 1
 11571                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0
      +                          ;
 11572  001328  C155  F08C         	movff	efgtoa@h,___fleq@ff1
 11573  00132C  C156  F08D         	movff	efgtoa@h+1,___fleq@ff1+1
 11574  001330  C157  F08E         	movff	efgtoa@h+2,___fleq@ff1+2
 11575  001334  C158  F08F         	movff	efgtoa@h+3,___fleq@ff1+3
 11576  001338  C159  F090         	movff	efgtoa@l,___fleq@ff2
 11577  00133C  C15A  F091         	movff	efgtoa@l+1,___fleq@ff2+1
 11578  001340  C15B  F092         	movff	efgtoa@l+2,___fleq@ff2+2
 11579  001344  C15C  F093         	movff	efgtoa@l+3,___fleq@ff2+3
 11580  001348  EC3B  F037         	call	___fleq	;wreg free
 11581  00134C  A0D8               	btfss	status,0,c
 11582  00134E  D00B               	goto	l13750
 11583                           
 11584                           ; BSR set to: 0
 11585  001350  0101               	movlb	1	; () banked
 11586  001352  B14B               	btfsc	efgtoa@d& (0+255),0,b
 11587  001354  D008               	goto	l13750
 11588  001356                     u16470:
 11589                           
 11590                           ; BSR set to: 1
 11591                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l =
      +                           0.0;
 11592  001356  0E00               	movlw	0
 11593  001358  6F59               	movwf	efgtoa@l& (0+255),b
 11594  00135A  0E00               	movlw	0
 11595  00135C  6F5A               	movwf	(efgtoa@l+1)& (0+255),b
 11596  00135E  0E00               	movlw	0
 11597  001360  6F5B               	movwf	(efgtoa@l+2)& (0+255),b
 11598  001362  0E00               	movlw	0
 11599  001364  6F5C               	movwf	(efgtoa@l+3)& (0+255),b
 11600  001366                     l13750:
 11601                           
 11602                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
 11603  001366  C15F  F08C         	movff	efgtoa@g,___fladd@b
 11604  00136A  C160  F08D         	movff	efgtoa@g+1,___fladd@b+1
 11605  00136E  C161  F08E         	movff	efgtoa@g+2,___fladd@b+2
 11606  001372  C162  F08F         	movff	efgtoa@g+3,___fladd@b+3
 11607  001376  C159  F090         	movff	efgtoa@l,___fladd@a
 11608  00137A  C15A  F091         	movff	efgtoa@l+1,___fladd@a+1
 11609  00137E  C15B  F092         	movff	efgtoa@l+2,___fladd@a+2
 11610  001382  C15C  F093         	movff	efgtoa@l+3,___fladd@a+3
 11611  001386  ECE8  F013         	call	___fladd	;wreg free
 11612  00138A  C08C  F155         	movff	?___fladd,efgtoa@h
 11613  00138E  C08D  F156         	movff	?___fladd+1,efgtoa@h+1
 11614  001392  C08E  F157         	movff	?___fladd+2,efgtoa@h+2
 11615  001396  C08F  F158         	movff	?___fladd+3,efgtoa@h+3
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*1
      +                          0.0)) {
 11619  00139A  C155  F119         	movff	efgtoa@h,___flge@ff1
 11620  00139E  C156  F11A         	movff	efgtoa@h+1,___flge@ff1+1
 11621  0013A2  C157  F11B         	movff	efgtoa@h+2,___flge@ff1+2
 11622  0013A6  C158  F11C         	movff	efgtoa@h+3,___flge@ff1+3
 11623  0013AA  0E00               	movlw	0
 11624  0013AC  0101               	movlb	1	; () banked
 11625  0013AE  6F04               	movwf	___flmul@a& (0+255),b
 11626  0013B0  0E00               	movlw	0
 11627  0013B2  6F05               	movwf	(___flmul@a+1)& (0+255),b
 11628  0013B4  0E20               	movlw	32
 11629  0013B6  6F06               	movwf	(___flmul@a+2)& (0+255),b
 11630  0013B8  0E41               	movlw	65
 11631  0013BA  6F07               	movwf	(___flmul@a+3)& (0+255),b
 11632  0013BC  C147  F100         	movff	efgtoa@ou,___flmul@b
 11633  0013C0  C148  F101         	movff	efgtoa@ou+1,___flmul@b+1
 11634  0013C4  C149  F102         	movff	efgtoa@ou+2,___flmul@b+2
 11635  0013C8  C14A  F103         	movff	efgtoa@ou+3,___flmul@b+3
 11636  0013CC  ECBB  F010         	call	___flmul	;wreg free
 11637  0013D0  C100  F11D         	movff	?___flmul,___flge@ff2
 11638  0013D4  C101  F11E         	movff	?___flmul+1,___flge@ff2+1
 11639  0013D8  C102  F11F         	movff	?___flmul+2,___flge@ff2+2
 11640  0013DC  C103  F120         	movff	?___flmul+3,___flge@ff2+3
 11641  0013E0  EC23  F030         	call	___flge	;wreg free
 11642  0013E4  A0D8               	btfss	status,0,c
 11643  0013E6  D022               	goto	l13762
 11644                           
 11645                           ; BSR set to: 1
 11646                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
 11647  0013E8  4B63               	infsnz	efgtoa@e& (0+255),f,b
 11648  0013EA  2B64               	incf	(efgtoa@e+1)& (0+255),f,b
 11649                           
 11650                           ; BSR set to: 1
 11651                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
 11652  0013EC  C147  F100         	movff	efgtoa@ou,___flmul@b
 11653  0013F0  C148  F101         	movff	efgtoa@ou+1,___flmul@b+1
 11654  0013F4  C149  F102         	movff	efgtoa@ou+2,___flmul@b+2
 11655  0013F8  C14A  F103         	movff	efgtoa@ou+3,___flmul@b+3
 11656  0013FC  0E00               	movlw	0
 11657  0013FE  6F04               	movwf	___flmul@a& (0+255),b
 11658  001400  0E00               	movlw	0
 11659  001402  6F05               	movwf	(___flmul@a+1)& (0+255),b
 11660  001404  0E20               	movlw	32
 11661  001406  6F06               	movwf	(___flmul@a+2)& (0+255),b
 11662  001408  0E41               	movlw	65
 11663  00140A  6F07               	movwf	(___flmul@a+3)& (0+255),b
 11664  00140C  ECBB  F010         	call	___flmul	;wreg free
 11665  001410  C100  F147         	movff	?___flmul,efgtoa@ou
 11666  001414  C101  F148         	movff	?___flmul+1,efgtoa@ou+1
 11667  001418  C102  F149         	movff	?___flmul+2,efgtoa@ou+2
 11668  00141C  C103  F14A         	movff	?___flmul+3,efgtoa@ou+3
 11669                           
 11670                           ; BSR set to: 1
 11671                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 
      +                          'f') {
 11672  001420  0E66               	movlw	102
 11673  001422  1953               	xorwf	efgtoa@nmode& (0+255),w,b
 11674  001424  A4D8               	btfss	status,2,c
 11675  001426  D002               	goto	l13762
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
 11679  001428  4B45               	infsnz	efgtoa@m& (0+255),f,b
 11680  00142A  2B46               	incf	(efgtoa@m+1)& (0+255),f,b
 11681  00142C                     l13762:
 11682                           
 11683                           ; BSR set to: 1
 11684                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
 11685  00142C  C147  F167         	movff	efgtoa@ou,efgtoa@u
 11686  001430  C148  F168         	movff	efgtoa@ou+1,efgtoa@u+1
 11687  001434  C149  F169         	movff	efgtoa@ou+2,efgtoa@u+2
 11688  001438  C14A  F16A         	movff	efgtoa@ou+3,efgtoa@u+3
 11689                           
 11690                           ; BSR set to: 1
 11691                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode
      +                           == 'e') ? 0 : e;
 11692  00143C  0E65               	movlw	101
 11693  00143E  1953               	xorwf	efgtoa@nmode& (0+255),w,b
 11694  001440  B4D8               	btfsc	status,2,c
 11695  001442  D005               	goto	l13768
 11696                           
 11697                           ; BSR set to: 1
 11698  001444  C163  F143         	movff	efgtoa@e,efgtoa@ne
 11699  001448  C164  F144         	movff	efgtoa@e+1,efgtoa@ne+1
 11700  00144C  D004               	goto	l2312
 11701  00144E                     l13768:
 11702                           
 11703                           ; BSR set to: 1
 11704  00144E  0E00               	movlw	0
 11705  001450  6F44               	movwf	(efgtoa@ne+1)& (0+255),b
 11706  001452  0E00               	movlw	0
 11707  001454  6F43               	movwf	efgtoa@ne& (0+255),b
 11708  001456                     l2312:
 11709                           
 11710                           ; BSR set to: 1
 11711                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
 11712  001456  0E00               	movlw	0
 11713  001458  6F42               	movwf	(efgtoa@pp+1)& (0+255),b
 11714  00145A  0E00               	movlw	0
 11715  00145C  6F41               	movwf	efgtoa@pp& (0+255),b
 11716                           
 11717                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
 11718  00145E  0E00               	movlw	0
 11719  001460  6F40               	movwf	(efgtoa@t+1)& (0+255),b
 11720  001462  0E00               	movlw	0
 11721  001464  6F3F               	movwf	efgtoa@t& (0+255),b
 11722                           
 11723                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
 11724  001466  0E00               	movlw	0
 11725  001468  6F5E               	movwf	(efgtoa@i+1)& (0+255),b
 11726  00146A  0E00               	movlw	0
 11727  00146C  6F5D               	movwf	efgtoa@i& (0+255),b
 11728                           
 11729                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
 11730  00146E  D0C8               	goto	l13818
 11731  001470                     l13770:
 11732                           
 11733                           ; BSR set to: 1
 11734                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = flo
      +                          orf(h/u);
 11735  001470  C155  F100         	movff	efgtoa@h,___fldiv@b
 11736  001474  C156  F101         	movff	efgtoa@h+1,___fldiv@b+1
 11737  001478  C157  F102         	movff	efgtoa@h+2,___fldiv@b+2
 11738  00147C  C158  F103         	movff	efgtoa@h+3,___fldiv@b+3
 11739  001480  C167  F104         	movff	efgtoa@u,___fldiv@a
 11740  001484  C168  F105         	movff	efgtoa@u+1,___fldiv@a+1
 11741  001488  C169  F106         	movff	efgtoa@u+2,___fldiv@a+2
 11742  00148C  C16A  F107         	movff	efgtoa@u+3,___fldiv@a+3
 11743  001490  EC9F  F019         	call	___fldiv	;wreg free
 11744  001494  C100  F119         	movff	?___fldiv,floorf@x
 11745  001498  C101  F11A         	movff	?___fldiv+1,floorf@x+1
 11746  00149C  C102  F11B         	movff	?___fldiv+2,floorf@x+2
 11747  0014A0  C103  F11C         	movff	?___fldiv+3,floorf@x+3
 11748  0014A4  ECFE  F021         	call	_floorf	;wreg free
 11749  0014A8  C119  F159         	movff	?_floorf,efgtoa@l
 11750  0014AC  C11A  F15A         	movff	?_floorf+1,efgtoa@l+1
 11751  0014B0  C11B  F15B         	movff	?_floorf+2,efgtoa@l+2
 11752  0014B4  C11C  F15C         	movff	?_floorf+3,efgtoa@l+3
 11753                           
 11754                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (in
      +                          t)l;
 11755  0014B8  C159  F119         	movff	efgtoa@l,___fltol@f1
 11756  0014BC  C15A  F11A         	movff	efgtoa@l+1,___fltol@f1+1
 11757  0014C0  C15B  F11B         	movff	efgtoa@l+2,___fltol@f1+2
 11758  0014C4  C15C  F11C         	movff	efgtoa@l+3,___fltol@f1+3
 11759  0014C8  EC51  F02F         	call	___fltol	;wreg free
 11760  0014CC  C119  F14B         	movff	?___fltol,efgtoa@d
 11761  0014D0  C11A  F14C         	movff	?___fltol+1,efgtoa@d+1
 11762                           
 11763                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11764  0014D4  0100               	movlb	0	; () banked
 11765  0014D6  B9C0               	btfsc	_flags& (0+255),4,b
 11766  0014D8  D00D               	goto	l13782
 11767                           
 11768                           ; BSR set to: 0
 11769  0014DA  0101               	movlb	1	; () banked
 11770  0014DC  514B               	movf	efgtoa@d& (0+255),w,b
 11771  0014DE  114C               	iorwf	(efgtoa@d+1)& (0+255),w,b
 11772  0014E0  A4D8               	btfss	status,2,c
 11773  0014E2  D008               	goto	l13782
 11774                           
 11775                           ; BSR set to: 1
 11776  0014E4  0E67               	movlw	103
 11777  0014E6  1954               	xorwf	efgtoa@mode& (0+255),w,b
 11778  0014E8  B4D8               	btfsc	status,2,c
 11779                           
 11780                           ; BSR set to: 1
 11781  0014EA  AF44               	btfss	(efgtoa@ne+1)& (0+255),7,b
 11782  0014EC  D003               	goto	l13782
 11783                           
 11784                           ; BSR set to: 1
 11785                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t
      +                          ;
 11786  0014EE  4B3F               	infsnz	efgtoa@t& (0+255),f,b
 11787  0014F0  2B40               	incf	(efgtoa@t+1)& (0+255),f,b
 11788                           
 11789                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else 
      +                          {
 11790  0014F2  D03A               	goto	l13810
 11791  0014F4                     l13782:
 11792                           
 11793                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if 
      +                          (!pp && (ne < 0)) {
 11794  0014F4  0101               	movlb	1	; () banked
 11795  0014F6  5141               	movf	efgtoa@pp& (0+255),w,b
 11796  0014F8  1142               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 11797  0014FA  B4D8               	btfsc	status,2,c
 11798                           
 11799                           ; BSR set to: 1
 11800  0014FC  AF44               	btfss	(efgtoa@ne+1)& (0+255),7,b
 11801  0014FE  D022               	goto	l13802
 11802                           
 11803                           ; BSR set to: 1
 11804                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                
      +                           dbuf[n++] = '.';
 11805  001500  0E36               	movlw	low _dbuf
 11806  001502  2565               	addwf	efgtoa@n& (0+255),w,b
 11807  001504  6ED9               	movwf	fsr2l,c
 11808  001506  0E03               	movlw	high _dbuf
 11809  001508  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11810  00150A  6EDA               	movwf	fsr2h,c
 11811  00150C  0E2E               	movlw	46
 11812  00150E  6EDF               	movwf	indf2,c
 11813                           
 11814                           ; BSR set to: 1
 11815  001510  4B65               	infsnz	efgtoa@n& (0+255),f,b
 11816  001512  2B66               	incf	(efgtoa@n+1)& (0+255),f,b
 11817                           
 11818                           ; BSR set to: 1
 11819                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                
      +                           --w;
 11820  001514  0751               	decf	efgtoa@w& (0+255),f,b
 11821  001516  A0D8               	btfss	status,0,c
 11822  001518  0752               	decf	(efgtoa@w+1)& (0+255),f,b
 11823                           
 11824                           ; BSR set to: 1
 11825                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                
      +                           pp = 1;
 11826  00151A  0E00               	movlw	0
 11827  00151C  6F42               	movwf	(efgtoa@pp+1)& (0+255),b
 11828  00151E  0E01               	movlw	1
 11829  001520  6F41               	movwf	efgtoa@pp& (0+255),b
 11830  001522  D010               	goto	l13802
 11831  001524                     l13794:
 11832                           
 11833                           ; BSR set to: 1
 11834                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                
      +                           dbuf[n++] = '0';
 11835  001524  0E36               	movlw	low _dbuf
 11836  001526  2565               	addwf	efgtoa@n& (0+255),w,b
 11837  001528  6ED9               	movwf	fsr2l,c
 11838  00152A  0E03               	movlw	high _dbuf
 11839  00152C  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11840  00152E  6EDA               	movwf	fsr2h,c
 11841  001530  0E30               	movlw	48
 11842  001532  6EDF               	movwf	indf2,c
 11843                           
 11844                           ; BSR set to: 1
 11845  001534  4B65               	infsnz	efgtoa@n& (0+255),f,b
 11846  001536  2B66               	incf	(efgtoa@n+1)& (0+255),f,b
 11847                           
 11848                           ; BSR set to: 1
 11849                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                
      +                           --w;
 11850  001538  0751               	decf	efgtoa@w& (0+255),f,b
 11851  00153A  A0D8               	btfss	status,0,c
 11852  00153C  0752               	decf	(efgtoa@w+1)& (0+255),f,b
 11853                           
 11854                           ; BSR set to: 1
 11855                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                
      +                           --t;
 11856  00153E  073F               	decf	efgtoa@t& (0+255),f,b
 11857  001540  A0D8               	btfss	status,0,c
 11858  001542  0740               	decf	(efgtoa@t+1)& (0+255),f,b
 11859  001544                     l13802:
 11860                           
 11861                           ; BSR set to: 1
 11862                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             whi
      +                          le (t) {
 11863  001544  513F               	movf	efgtoa@t& (0+255),w,b
 11864  001546  1140               	iorwf	(efgtoa@t+1)& (0+255),w,b
 11865  001548  A4D8               	btfss	status,2,c
 11866  00154A  D7EC               	goto	l13794
 11867                           
 11868                           ; BSR set to: 1
 11869                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbu
      +                          f[n++] = (char)((int)'0' + d);
 11870  00154C  0E36               	movlw	low _dbuf
 11871  00154E  2565               	addwf	efgtoa@n& (0+255),w,b
 11872  001550  6ED9               	movwf	fsr2l,c
 11873  001552  0E03               	movlw	high _dbuf
 11874  001554  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11875  001556  6EDA               	movwf	fsr2h,c
 11876  001558  514B               	movf	efgtoa@d& (0+255),w,b
 11877  00155A  0F30               	addlw	48
 11878  00155C  6EDF               	movwf	indf2,c
 11879                           
 11880                           ; BSR set to: 1
 11881  00155E  4B65               	infsnz	efgtoa@n& (0+255),f,b
 11882  001560  2B66               	incf	(efgtoa@n+1)& (0+255),f,b
 11883                           
 11884                           ; BSR set to: 1
 11885                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w
      +                          ;
 11886  001562  0751               	decf	efgtoa@w& (0+255),f,b
 11887  001564  A0D8               	btfss	status,0,c
 11888  001566  0752               	decf	(efgtoa@w+1)& (0+255),f,b
 11889  001568                     l13810:
 11890                           
 11891                           ; BSR set to: 1
 11892                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*
      +                          u;
 11893  001568  C155  F119         	movff	efgtoa@h,___flsub@b
 11894  00156C  C156  F11A         	movff	efgtoa@h+1,___flsub@b+1
 11895  001570  C157  F11B         	movff	efgtoa@h+2,___flsub@b+2
 11896  001574  C158  F11C         	movff	efgtoa@h+3,___flsub@b+3
 11897  001578  C167  F104         	movff	efgtoa@u,___flmul@a
 11898  00157C  C168  F105         	movff	efgtoa@u+1,___flmul@a+1
 11899  001580  C169  F106         	movff	efgtoa@u+2,___flmul@a+2
 11900  001584  C16A  F107         	movff	efgtoa@u+3,___flmul@a+3
 11901  001588  C159  F100         	movff	efgtoa@l,___flmul@b
 11902  00158C  C15A  F101         	movff	efgtoa@l+1,___flmul@b+1
 11903  001590  C15B  F102         	movff	efgtoa@l+2,___flmul@b+2
 11904  001594  C15C  F103         	movff	efgtoa@l+3,___flmul@b+3
 11905  001598  ECBB  F010         	call	___flmul	;wreg free
 11906  00159C  C100  F11D         	movff	?___flmul,___flsub@a
 11907  0015A0  C101  F11E         	movff	?___flmul+1,___flsub@a+1
 11908  0015A4  C102  F11F         	movff	?___flmul+2,___flsub@a+2
 11909  0015A8  C103  F120         	movff	?___flmul+3,___flsub@a+3
 11910  0015AC  EC66  F03A         	call	___flsub	;wreg free
 11911  0015B0  C119  F155         	movff	?___flsub,efgtoa@h
 11912  0015B4  C11A  F156         	movff	?___flsub+1,efgtoa@h+1
 11913  0015B8  C11B  F157         	movff	?___flsub+2,efgtoa@h+2
 11914  0015BC  C11C  F158         	movff	?___flsub+3,efgtoa@h+3
 11915                           
 11916                           ; BSR set to: 0
 11917                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/1
      +                          0.0;
 11918  0015C0  C167  F100         	movff	efgtoa@u,___fldiv@b
 11919  0015C4  C168  F101         	movff	efgtoa@u+1,___fldiv@b+1
 11920  0015C8  C169  F102         	movff	efgtoa@u+2,___fldiv@b+2
 11921  0015CC  C16A  F103         	movff	efgtoa@u+3,___fldiv@b+3
 11922  0015D0  0E00               	movlw	0
 11923  0015D2  0101               	movlb	1	; () banked
 11924  0015D4  6F04               	movwf	___fldiv@a& (0+255),b
 11925  0015D6  0E00               	movlw	0
 11926  0015D8  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 11927  0015DA  0E20               	movlw	32
 11928  0015DC  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 11929  0015DE  0E41               	movlw	65
 11930  0015E0  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 11931  0015E2  EC9F  F019         	call	___fldiv	;wreg free
 11932  0015E6  C100  F167         	movff	?___fldiv,efgtoa@u
 11933  0015EA  C101  F168         	movff	?___fldiv+1,efgtoa@u+1
 11934  0015EE  C102  F169         	movff	?___fldiv+2,efgtoa@u+2
 11935  0015F2  C103  F16A         	movff	?___fldiv+3,efgtoa@u+3
 11936                           
 11937                           ; BSR set to: 1
 11938                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
 11939  0015F6  0743               	decf	efgtoa@ne& (0+255),f,b
 11940  0015F8  A0D8               	btfss	status,0,c
 11941  0015FA  0744               	decf	(efgtoa@ne+1)& (0+255),f,b
 11942                           
 11943                           ; BSR set to: 1
 11944                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
 11945  0015FC  4B5D               	infsnz	efgtoa@i& (0+255),f,b
 11946  0015FE  2B5E               	incf	(efgtoa@i+1)& (0+255),f,b
 11947  001600                     l13818:
 11948                           
 11949                           ; BSR set to: 1
 11950                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
 11951  001600  5145               	movf	efgtoa@m& (0+255),w,b
 11952  001602  5D5D               	subwf	efgtoa@i& (0+255),w,b
 11953  001604  515E               	movf	(efgtoa@i+1)& (0+255),w,b
 11954  001606  0A80               	xorlw	128
 11955  001608  6F34               	movwf	??_efgtoa& (0+255),b
 11956  00160A  5146               	movf	(efgtoa@m+1)& (0+255),w,b
 11957  00160C  0A80               	xorlw	128
 11958  00160E  5934               	subwfb	??_efgtoa& (0+255),w,b
 11959  001610  B0D8               	btfsc	status,0,c
 11960  001612  D008               	goto	u16590
 11961                           
 11962                           ; BSR set to: 1
 11963  001614  BF66               	btfsc	(efgtoa@n+1)& (0+255),7,b
 11964  001616  D72C               	goto	l13770
 11965  001618  5166               	movf	(efgtoa@n+1)& (0+255),w,b
 11966  00161A  E104               	bnz	u16590
 11967  00161C  0E4B               	movlw	75
 11968  00161E  5D65               	subwf	efgtoa@n& (0+255),w,b
 11969  001620  A0D8               	btfss	status,0,c
 11970  001622  D726               	goto	l13770
 11971  001624                     u16590:
 11972                           
 11973                           ; BSR set to: 1
 11974                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && 
      +                          (flags & (1 << 4))) {
 11975  001624  5141               	movf	efgtoa@pp& (0+255),w,b
 11976  001626  1142               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 11977  001628  A4D8               	btfss	status,2,c
 11978  00162A  D00E               	goto	l13830
 11979                           
 11980                           ; BSR set to: 1
 11981  00162C  0100               	movlb	0	; () banked
 11982  00162E  A9C0               	btfss	_flags& (0+255),4,b
 11983  001630  D00B               	goto	l13830
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n+
      +                          +] = '.';
 11987  001632  0E36               	movlw	low _dbuf
 11988  001634  0101               	movlb	1	; () banked
 11989  001636  2565               	addwf	efgtoa@n& (0+255),w,b
 11990  001638  6ED9               	movwf	fsr2l,c
 11991  00163A  0E03               	movlw	high _dbuf
 11992  00163C  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11993  00163E  6EDA               	movwf	fsr2h,c
 11994  001640  0E2E               	movlw	46
 11995  001642  6EDF               	movwf	indf2,c
 11996                           
 11997                           ; BSR set to: 1
 11998  001644  4B65               	infsnz	efgtoa@n& (0+255),f,b
 11999  001646  2B66               	incf	(efgtoa@n+1)& (0+255),f,b
 12000  001648                     l13830:
 12001                           
 12002                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '
      +                          \0';
 12003  001648  0E36               	movlw	low _dbuf
 12004  00164A  0101               	movlb	1	; () banked
 12005  00164C  2565               	addwf	efgtoa@n& (0+255),w,b
 12006  00164E  6ED9               	movwf	fsr2l,c
 12007  001650  0E03               	movlw	high _dbuf
 12008  001652  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12009  001654  6EDA               	movwf	fsr2h,c
 12010  001656  0E00               	movlw	0
 12011  001658  6EDF               	movwf	indf2,c
 12012                           
 12013                           ; BSR set to: 1
 12014                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode =
      +                          = 'e') {
 12015  00165A  0E65               	movlw	101
 12016  00165C  1953               	xorwf	efgtoa@nmode& (0+255),w,b
 12017  00165E  A4D8               	btfss	status,2,c
 12018  001660  D0AC               	goto	l13890
 12019                           
 12020                           ; BSR set to: 1
 12021                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = siz
      +                          eof(dbuf) - 1;
 12022  001662  0E00               	movlw	0
 12023  001664  6F5E               	movwf	(efgtoa@i+1)& (0+255),b
 12024  001666  0E4F               	movlw	79
 12025  001668  6F5D               	movwf	efgtoa@i& (0+255),b
 12026                           
 12027                           ; BSR set to: 1
 12028                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i]
      +                           = '\0';
 12029  00166A  0E36               	movlw	low _dbuf
 12030  00166C  255D               	addwf	efgtoa@i& (0+255),w,b
 12031  00166E  6ED9               	movwf	fsr2l,c
 12032  001670  0E03               	movlw	high _dbuf
 12033  001672  215E               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12034  001674  6EDA               	movwf	fsr2h,c
 12035  001676  0E00               	movlw	0
 12036  001678  6EDF               	movwf	indf2,c
 12037                           
 12038                           ; BSR set to: 1
 12039                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 
      +                          0;
 12040  00167A  0E00               	movlw	0
 12041  00167C  6F4E               	movwf	(efgtoa@sign+1)& (0+255),b
 12042  00167E  0E00               	movlw	0
 12043  001680  6F4D               	movwf	efgtoa@sign& (0+255),b
 12044                           
 12045                           ; BSR set to: 1
 12046                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e <
      +                           0) {
 12047  001682  AF64               	btfss	(efgtoa@e+1)& (0+255),7,b
 12048  001684  D008               	goto	l13846
 12049                           
 12050                           ; BSR set to: 1
 12051                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sig
      +                          n = 1;
 12052  001686  0E00               	movlw	0
 12053  001688  6F4E               	movwf	(efgtoa@sign+1)& (0+255),b
 12054  00168A  0E01               	movlw	1
 12055  00168C  6F4D               	movwf	efgtoa@sign& (0+255),b
 12056                           
 12057                           ; BSR set to: 1
 12058                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e =
      +                           -e;
 12059  00168E  6D63               	negf	efgtoa@e& (0+255),b
 12060  001690  1F64               	comf	(efgtoa@e+1)& (0+255),f,b
 12061  001692  B0D8               	btfsc	status,0,c
 12062  001694  2B64               	incf	(efgtoa@e+1)& (0+255),f,b
 12063  001696                     l13846:
 12064                           
 12065                           ; BSR set to: 1
 12066                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
 12067  001696  0E00               	movlw	0
 12068  001698  6F50               	movwf	(efgtoa@p+1)& (0+255),b
 12069  00169A  0E02               	movlw	2
 12070  00169C  6F4F               	movwf	efgtoa@p& (0+255),b
 12071                           
 12072                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
 12073  00169E  D02C               	goto	l13858
 12074  0016A0                     l13848:
 12075                           
 12076                           ; BSR set to: 1
 12077                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i
      +                          ;
 12078  0016A0  075D               	decf	efgtoa@i& (0+255),f,b
 12079  0016A2  A0D8               	btfss	status,0,c
 12080  0016A4  075E               	decf	(efgtoa@i+1)& (0+255),f,b
 12081                           
 12082                           ; BSR set to: 1
 12083                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbu
      +                          f[i] = '0' + (e % 10);
 12084  0016A6  0E36               	movlw	low _dbuf
 12085  0016A8  255D               	addwf	efgtoa@i& (0+255),w,b
 12086  0016AA  6ED9               	movwf	fsr2l,c
 12087  0016AC  0E03               	movlw	high _dbuf
 12088  0016AE  215E               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12089  0016B0  6EDA               	movwf	fsr2h,c
 12090  0016B2  C163  F08C         	movff	efgtoa@e,___awmod@dividend
 12091  0016B6  C164  F08D         	movff	efgtoa@e+1,___awmod@dividend+1
 12092  0016BA  0E00               	movlw	0
 12093  0016BC  0100               	movlb	0	; () banked
 12094  0016BE  6F8F               	movwf	(___awmod@divisor+1)& (0+255),b
 12095  0016C0  0E0A               	movlw	10
 12096  0016C2  6F8E               	movwf	___awmod@divisor& (0+255),b
 12097  0016C4  ECC3  F037         	call	___awmod	;wreg free
 12098  0016C8  518C               	movf	?___awmod& (0+255),w,b
 12099  0016CA  0F30               	addlw	48
 12100  0016CC  6EDF               	movwf	indf2,c
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e =
      +                           e / 10;
 12104  0016CE  C163  F08C         	movff	efgtoa@e,___awdiv@dividend
 12105  0016D2  C164  F08D         	movff	efgtoa@e+1,___awdiv@dividend+1
 12106  0016D6  0E00               	movlw	0
 12107  0016D8  6F8F               	movwf	(___awdiv@divisor+1)& (0+255),b
 12108  0016DA  0E0A               	movlw	10
 12109  0016DC  6F8E               	movwf	___awdiv@divisor& (0+255),b
 12110  0016DE  EC81  F037         	call	___awdiv	;wreg free
 12111  0016E2  C08C  F163         	movff	?___awdiv,efgtoa@e
 12112  0016E6  C08D  F164         	movff	?___awdiv+1,efgtoa@e+1
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p
      +                          ;
 12116  0016EA  0101               	movlb	1	; () banked
 12117  0016EC  074F               	decf	efgtoa@p& (0+255),f,b
 12118  0016EE  A0D8               	btfss	status,0,c
 12119  0016F0  0750               	decf	(efgtoa@p+1)& (0+255),f,b
 12120                           
 12121                           ; BSR set to: 1
 12122                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w
      +                          ;
 12123  0016F2  0751               	decf	efgtoa@w& (0+255),f,b
 12124  0016F4  A0D8               	btfss	status,0,c
 12125  0016F6  0752               	decf	(efgtoa@w+1)& (0+255),f,b
 12126  0016F8                     l13858:
 12127                           
 12128                           ; BSR set to: 1
 12129                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
 12130  0016F8  5163               	movf	efgtoa@e& (0+255),w,b
 12131  0016FA  1164               	iorwf	(efgtoa@e+1)& (0+255),w,b
 12132  0016FC  A4D8               	btfss	status,2,c
 12133  0016FE  D7D0               	goto	l13848
 12134                           
 12135                           ; BSR set to: 1
 12136  001700  BF50               	btfsc	(efgtoa@p+1)& (0+255),7,b
 12137  001702  D005               	goto	u16650
 12138  001704  5150               	movf	(efgtoa@p+1)& (0+255),w,b
 12139  001706  E1CC               	bnz	l13848
 12140  001708  054F               	decf	efgtoa@p& (0+255),w,b
 12141  00170A  B0D8               	btfsc	status,0,c
 12142  00170C  D7C9               	goto	l13848
 12143  00170E                     u16650:
 12144                           
 12145                           ; BSR set to: 1
 12146                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
 12147  00170E  075D               	decf	efgtoa@i& (0+255),f,b
 12148  001710  A0D8               	btfss	status,0,c
 12149  001712  075E               	decf	(efgtoa@i+1)& (0+255),f,b
 12150                           
 12151                           ; BSR set to: 1
 12152                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i]
      +                           = sign ? '-' : '+';
 12153  001714  514D               	movf	efgtoa@sign& (0+255),w,b
 12154  001716  114E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 12155  001718  A4D8               	btfss	status,2,c
 12156  00171A  D004               	goto	l13868
 12157                           
 12158                           ; BSR set to: 1
 12159  00171C  0E00               	movlw	0
 12160  00171E  6F3C               	movwf	(_efgtoa$5012+1)& (0+255),b
 12161  001720  0E2B               	movlw	43
 12162  001722  D003               	goto	L9
 12163  001724                     l13868:
 12164                           
 12165                           ; BSR set to: 1
 12166  001724  0E00               	movlw	0
 12167  001726  6F3C               	movwf	(_efgtoa$5012+1)& (0+255),b
 12168  001728  0E2D               	movlw	45
 12169  00172A                     L9:
 12170  00172A  6F3B               	movwf	_efgtoa$5012& (0+255),b
 12171                           
 12172                           ; BSR set to: 1
 12173  00172C  0E36               	movlw	low _dbuf
 12174  00172E  255D               	addwf	efgtoa@i& (0+255),w,b
 12175  001730  6ED9               	movwf	fsr2l,c
 12176  001732  0E03               	movlw	high _dbuf
 12177  001734  215E               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12178  001736  6EDA               	movwf	fsr2h,c
 12179  001738  C13B  FFDF         	movff	_efgtoa$5012,indf2
 12180                           
 12181                           ; BSR set to: 1
 12182                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
 12183  00173C  0751               	decf	efgtoa@w& (0+255),f,b
 12184  00173E  A0D8               	btfss	status,0,c
 12185  001740  0752               	decf	(efgtoa@w+1)& (0+255),f,b
 12186                           
 12187                           ; BSR set to: 1
 12188                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
 12189  001742  075D               	decf	efgtoa@i& (0+255),f,b
 12190  001744  A0D8               	btfss	status,0,c
 12191  001746  075E               	decf	(efgtoa@i+1)& (0+255),f,b
 12192                           
 12193                           ; BSR set to: 1
 12194                           
 12195                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i]
      +                           = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12196  001748  0EBF               	movlw	191
 12197  00174A  6F34               	movwf	??_efgtoa& (0+255),b
 12198  00174C  0EFF               	movlw	255
 12199  00174E  6F35               	movwf	(??_efgtoa+1)& (0+255),b
 12200  001750  5133               	movf	efgtoa@c& (0+255),w,b
 12201  001752  6F36               	movwf	(??_efgtoa+2)& (0+255),b
 12202  001754  6B37               	clrf	(??_efgtoa+3)& (0+255),b
 12203  001756  5134               	movf	??_efgtoa& (0+255),w,b
 12204  001758  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
 12205  00175A  5135               	movf	(??_efgtoa+1)& (0+255),w,b
 12206  00175C  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
 12207  00175E  5137               	movf	(??_efgtoa+3)& (0+255),w,b
 12208  001760  E104               	bnz	u16670
 12209  001762  0E1A               	movlw	26
 12210  001764  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
 12211  001766  A0D8               	btfss	status,0,c
 12212  001768  D004               	goto	l13882
 12213  00176A                     u16670:
 12214                           
 12215                           ; BSR set to: 1
 12216  00176A  0E00               	movlw	0
 12217  00176C  6F3E               	movwf	(_efgtoa$5013+1)& (0+255),b
 12218  00176E  0E65               	movlw	101
 12219  001770  D003               	goto	L10
 12220  001772                     l13882:
 12221                           
 12222                           ; BSR set to: 1
 12223  001772  0E00               	movlw	0
 12224  001774  6F3E               	movwf	(_efgtoa$5013+1)& (0+255),b
 12225  001776  0E45               	movlw	69
 12226  001778                     L10:
 12227  001778  6F3D               	movwf	_efgtoa$5013& (0+255),b
 12228                           
 12229                           ; BSR set to: 1
 12230  00177A  0E36               	movlw	low _dbuf
 12231  00177C  255D               	addwf	efgtoa@i& (0+255),w,b
 12232  00177E  6ED9               	movwf	fsr2l,c
 12233  001780  0E03               	movlw	high _dbuf
 12234  001782  215E               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12235  001784  6EDA               	movwf	fsr2h,c
 12236  001786  C13D  FFDF         	movff	_efgtoa$5013,indf2
 12237                           
 12238                           ; BSR set to: 1
 12239                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
 12240  00178A  0751               	decf	efgtoa@w& (0+255),f,b
 12241  00178C  A0D8               	btfss	status,0,c
 12242  00178E  0752               	decf	(efgtoa@w+1)& (0+255),f,b
 12243                           
 12244                           ; BSR set to: 1
 12245                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
 12246  001790  0E36               	movlw	low _dbuf
 12247  001792  2565               	addwf	efgtoa@n& (0+255),w,b
 12248  001794  0100               	movlb	0	; () banked
 12249  001796  6F8C               	movwf	strcpy@dest& (0+255),b
 12250  001798  0E03               	movlw	high _dbuf
 12251  00179A  0101               	movlb	1	; () banked
 12252  00179C  2166               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12253  00179E  0100               	movlb	0	; () banked
 12254  0017A0  6F8D               	movwf	(strcpy@dest+1)& (0+255),b
 12255  0017A2  0E36               	movlw	low _dbuf
 12256  0017A4  0101               	movlb	1	; () banked
 12257  0017A6  255D               	addwf	efgtoa@i& (0+255),w,b
 12258  0017A8  0100               	movlb	0	; () banked
 12259  0017AA  6F8E               	movwf	strcpy@src& (0+255),b
 12260  0017AC  0E03               	movlw	high _dbuf
 12261  0017AE  0101               	movlb	1	; () banked
 12262  0017B0  215E               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12263  0017B2  0100               	movlb	0	; () banked
 12264  0017B4  6F8F               	movwf	(strcpy@src+1)& (0+255),b
 12265  0017B6  EC9F  F039         	call	_strcpy	;wreg free
 12266  0017BA                     l13890:
 12267                           
 12268                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 524:     return pad(
      +                          fp, &dbuf[0], w);
 12269  0017BA  C12D  F09C         	movff	efgtoa@fp,pad@fp
 12270  0017BE  C12E  F09D         	movff	efgtoa@fp+1,pad@fp+1
 12271  0017C2  0E36               	movlw	low _dbuf
 12272  0017C4  0100               	movlb	0	; () banked
 12273  0017C6  6F9E               	movwf	pad@buf& (0+255),b
 12274  0017C8  0E03               	movlw	high _dbuf
 12275  0017CA  6F9F               	movwf	(pad@buf+1)& (0+255),b
 12276  0017CC  C151  F0A0         	movff	efgtoa@w,pad@p
 12277  0017D0  C152  F0A1         	movff	efgtoa@w+1,pad@p+1
 12278  0017D4  EC3B  F035         	call	_pad	;wreg free
 12279  0017D8  C09C  F12D         	movff	?_pad,?_efgtoa
 12280  0017DC  C09D  F12E         	movff	?_pad+1,?_efgtoa+1
 12281                           
 12282                           ; BSR set to: 0
 12283  0017E0  0012               	return		;funcret
 12284  0017E2                     __end_of_efgtoa:
 12285                           	callstack 0
 12286                           
 12287 ;; *************** function _tolower *****************
 12288 ;; Defined at:
 12289 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;  c               2   50[BANK0 ] int 
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;		None
 12294 ;; Return value:  Size  Location     Type
 12295 ;;                  2   50[BANK0 ] int 
 12296 ;; Registers used:
 12297 ;;		wreg, status,2, status,0
 12298 ;; Tracked objects:
 12299 ;;		On entry : 3F/0
 12300 ;;		On exit  : 3F/0
 12301 ;;		Unchanged: 0/0
 12302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12303 ;;      Params:         0       2       0       0       0       0       0       0       0
 12304 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12305 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12306 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12307 ;;Total ram usage:        6 bytes
 12308 ;; Hardware stack levels used: 1
 12309 ;; Hardware stack levels required when called: 11
 12310 ;; This function calls:
 12311 ;;		_isupper
 12312 ;; This function is called by:
 12313 ;;		_efgtoa
 12314 ;;		_vfpfcnvrt
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text42
 12319  007760                     __ptext42:
 12320                           	callstack 0
 12321  007760                     _tolower:
 12322                           	callstack 16
 12323                           
 12324                           ; BSR set to: 0
 12325                           
 12326                           ; BSR set to: 0
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;incstack = 0
 12330  007760  0EBF               	movlw	191
 12331  007762  6F94               	movwf	??_tolower& (0+255),b
 12332  007764  0EFF               	movlw	255
 12333  007766  6F95               	movwf	(??_tolower+1)& (0+255),b
 12334  007768  C092  F096         	movff	tolower@c,??_tolower+2
 12335  00776C  C093  F097         	movff	tolower@c+1,??_tolower+3
 12336  007770  5194               	movf	??_tolower& (0+255),w,b
 12337  007772  2796               	addwf	(??_tolower+2)& (0+255),f,b
 12338  007774  5195               	movf	(??_tolower+1)& (0+255),w,b
 12339  007776  2397               	addwfc	(??_tolower+3)& (0+255),f,b
 12340  007778  5197               	movf	(??_tolower+3)& (0+255),w,b
 12341  00777A  E10A               	bnz	l2755
 12342  00777C  0E1A               	movlw	26
 12343  00777E  5D96               	subwf	(??_tolower+2)& (0+255),w,b
 12344  007780  B0D8               	btfsc	status,0,c
 12345  007782  D006               	goto	l2755
 12346                           
 12347                           ; BSR set to: 0
 12348  007784  0E20               	movlw	32
 12349  007786  1192               	iorwf	tolower@c& (0+255),w,b
 12350  007788  6F92               	movwf	?_tolower& (0+255),b
 12351  00778A  5193               	movf	(tolower@c+1)& (0+255),w,b
 12352  00778C  6F93               	movwf	(?_tolower+1)& (0+255),b
 12353  00778E  0012               	return	
 12354  007790                     l2755:
 12355                           
 12356                           ; BSR set to: 0
 12357  007790  C092  F092         	movff	tolower@c,?_tolower
 12358  007794  C093  F093         	movff	tolower@c+1,?_tolower+1
 12359                           
 12360                           ; BSR set to: 0
 12361  007798  0012               	return		;funcret
 12362  00779A                     __end_of_tolower:
 12363                           	callstack 0
 12364                           
 12365 ;; *************** function _isupper *****************
 12366 ;; Defined at:
 12367 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;  c               2   44[BANK0 ] int 
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  2   44[BANK0 ] int 
 12374 ;; Registers used:
 12375 ;;		wreg, status,2, status,0
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 3F/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12381 ;;      Params:         0       2       0       0       0       0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12383 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12384 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12385 ;;Total ram usage:        6 bytes
 12386 ;; Hardware stack levels used: 1
 12387 ;; Hardware stack levels required when called: 10
 12388 ;; This function calls:
 12389 ;;		Nothing
 12390 ;; This function is called by:
 12391 ;;		_efgtoa
 12392 ;;		_vfpfcnvrt
 12393 ;;		_tolower
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           	psect	text43
 12398  0078E0                     __ptext43:
 12399                           	callstack 0
 12400  0078E0                     _isupper:
 12401                           	callstack 16
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;incstack = 0
 12405  0078E0  0EBF               	movlw	191
 12406  0078E2  0100               	movlb	0	; () banked
 12407  0078E4  6F8E               	movwf	??_isupper& (0+255),b
 12408  0078E6  0EFF               	movlw	255
 12409  0078E8  6F8F               	movwf	(??_isupper+1)& (0+255),b
 12410  0078EA  C08C  F090         	movff	isupper@c,??_isupper+2
 12411  0078EE  C08D  F091         	movff	isupper@c+1,??_isupper+3
 12412  0078F2  518E               	movf	??_isupper& (0+255),w,b
 12413  0078F4  2790               	addwf	(??_isupper+2)& (0+255),f,b
 12414  0078F6  518F               	movf	(??_isupper+1)& (0+255),w,b
 12415  0078F8  2391               	addwfc	(??_isupper+3)& (0+255),f,b
 12416  0078FA  5191               	movf	(??_isupper+3)& (0+255),w,b
 12417  0078FC  E106               	bnz	u14800
 12418  0078FE  0E1A               	movlw	26
 12419  007900  5D90               	subwf	(??_isupper+2)& (0+255),w,b
 12420  007902  B0D8               	btfsc	status,0,c
 12421  007904  D002               	goto	u14800
 12422  007906  0E01               	movlw	1
 12423  007908  D001               	goto	u14810
 12424  00790A                     u14800:
 12425  00790A  0E00               	movlw	0
 12426  00790C                     u14810:
 12427  00790C  6F8C               	movwf	?_isupper& (0+255),b
 12428  00790E  6B8D               	clrf	(?_isupper+1)& (0+255),b
 12429                           
 12430                           ; BSR set to: 0
 12431  007910  0012               	return		;funcret
 12432  007912                     __end_of_isupper:
 12433                           	callstack 0
 12434                           
 12435 ;; *************** function _strcpy *****************
 12436 ;; Defined at:
 12437 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
 12438 ;; Parameters:    Size  Location     Type
 12439 ;;  dest            2   44[BANK0 ] PTR unsigned char 
 12440 ;;		 -> dbuf(80), lastToken(30), getComands@buff(10), 
 12441 ;;  src             2   46[BANK0 ] PTR const unsigned char 
 12442 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 12443 ;;		 -> dbuf(80), executeCommand@strCommand(30), readBuffer(32), NULL(0), 
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;  d               2   52[BANK0 ] PTR unsigned char 
 12446 ;;		 -> dbuf(80), lastToken(30), getComands@buff(10), 
 12447 ;;  s               2   50[BANK0 ] PTR const unsigned char 
 12448 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 12449 ;;		 -> dbuf(80), executeCommand@strCommand(30), readBuffer(32), NULL(0), 
 12450 ;; Return value:  Size  Location     Type
 12451 ;;                  2   44[BANK0 ] PTR unsigned char 
 12452 ;; Registers used:
 12453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12454 ;; Tracked objects:
 12455 ;;		On entry : 3D/0
 12456 ;;		On exit  : 0/0
 12457 ;;		Unchanged: 0/0
 12458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12459 ;;      Params:         0       4       0       0       0       0       0       0       0
 12460 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12461 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12462 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12463 ;;Total ram usage:       10 bytes
 12464 ;; Hardware stack levels used: 1
 12465 ;; Hardware stack levels required when called: 10
 12466 ;; This function calls:
 12467 ;;		Nothing
 12468 ;; This function is called by:
 12469 ;;		_getComands
 12470 ;;		_USBCommandFetch
 12471 ;;		_efgtoa
 12472 ;; This function uses a non-reentrant model
 12473 ;;
 12474                           
 12475                           	psect	text44
 12476  00733E                     __ptext44:
 12477                           	callstack 0
 12478  00733E                     _strcpy:
 12479                           	callstack 16
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;incstack = 0
 12483  00733E  C08E  F092         	movff	strcpy@src,strcpy@s
 12484  007342  C08F  F093         	movff	strcpy@src+1,strcpy@s+1
 12485  007346  C08C  F094         	movff	strcpy@dest,strcpy@d
 12486  00734A  C08D  F095         	movff	strcpy@dest+1,strcpy@d+1
 12487  00734E                     l12794:
 12488  00734E  0100               	movlb	0	; () banked
 12489  007350  5192               	movf	strcpy@s& (0+255),w,b
 12490  007352  6F90               	movwf	??_strcpy& (0+255),b
 12491  007354  5193               	movf	(strcpy@s+1)& (0+255),w,b
 12492  007356  6F91               	movwf	(??_strcpy+1)& (0+255),b
 12493  007358  4B92               	infsnz	strcpy@s& (0+255),f,b
 12494  00735A  2B93               	incf	(strcpy@s+1)& (0+255),f,b
 12495  00735C  C090  FFF6         	movff	??_strcpy,tblptrl
 12496  007360  C091  FFF7         	movff	??_strcpy+1,tblptrh
 12497  007364  6AF8               	clrf	tblptru,c
 12498  007366  C094  FFD9         	movff	strcpy@d,fsr2l
 12499  00736A  C095  FFDA         	movff	strcpy@d+1,fsr2h
 12500  00736E  4B94               	infsnz	strcpy@d& (0+255),f,b
 12501  007370  2B95               	incf	(strcpy@d+1)& (0+255),f,b
 12502  007372  0E07               	movlw	(high __ramtop+-1)
 12503  007374  64F7               	cpfsgt	tblptrh,c
 12504  007376  D003               	bra	u14827
 12505  007378  0008               	tblrd		*
 12506  00737A  50F5               	movf	tablat,w,c
 12507  00737C  D005               	bra	u14820
 12508  00737E                     u14827:
 12509  00737E  CFF6 FFE1          	movff	tblptrl,fsr1l
 12510  007382  CFF7 FFE2          	movff	tblptrh,fsr1h
 12511  007386  50E7               	movf	indf1,w,c
 12512  007388                     u14820:
 12513  007388  6EDF               	movwf	indf2,c
 12514  00738A  50DF               	movf	indf2,w,c
 12515  00738C  B4D8               	btfsc	status,2,c
 12516  00738E  0012               	return	
 12517  007390  D7DE               	goto	l12794
 12518  007392                     __end_of_strcpy:
 12519                           	callstack 0
 12520                           
 12521 ;; *************** function _floorf *****************
 12522 ;; Defined at:
 12523 ;;		line 3 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;  x               4   25[BANK1 ] float 
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;  u               4   41[BANK1 ] struct .
 12528 ;;  m               4   35[BANK1 ] unsigned long 
 12529 ;;  e               2   39[BANK1 ] int 
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  4   25[BANK1 ] float 
 12532 ;; Registers used:
 12533 ;;		wreg, status,2, status,0
 12534 ;; Tracked objects:
 12535 ;;		On entry : 3F/1
 12536 ;;		On exit  : 3F/1
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12539 ;;      Params:         0       0       4       0       0       0       0       0       0
 12540 ;;      Locals:         0       0      10       0       0       0       0       0       0
 12541 ;;      Temps:          0       0       6       0       0       0       0       0       0
 12542 ;;      Totals:         0       0      20       0       0       0       0       0       0
 12543 ;;Total ram usage:       20 bytes
 12544 ;; Hardware stack levels used: 1
 12545 ;; Hardware stack levels required when called: 10
 12546 ;; This function calls:
 12547 ;;		Nothing
 12548 ;; This function is called by:
 12549 ;;		_efgtoa
 12550 ;; This function uses a non-reentrant model
 12551 ;;
 12552                           
 12553                           	psect	text45
 12554  0043FC                     __ptext45:
 12555                           	callstack 0
 12556  0043FC                     _floorf:
 12557                           	callstack 16
 12558                           
 12559                           ; BSR set to: 1
 12560                           
 12561                           ;incstack = 0
 12562  0043FC  C2AE  F129         	movff	floorf@F526,floorf@u
 12563  004400  C2AF  F12A         	movff	floorf@F526+1,floorf@u+1
 12564  004404  C2B0  F12B         	movff	floorf@F526+2,floorf@u+2
 12565  004408  C2B1  F12C         	movff	floorf@F526+3,floorf@u+3
 12566  00440C  C119  F129         	movff	floorf@x,floorf@u
 12567  004410  C11A  F12A         	movff	floorf@x+1,floorf@u+1
 12568  004414  C11B  F12B         	movff	floorf@x+2,floorf@u+2
 12569  004418  C11C  F12C         	movff	floorf@x+3,floorf@u+3
 12570                           
 12571                           ; BSR set to: 1
 12572  00441C  0E81               	movlw	129
 12573  00441E  6F1D               	movwf	??_floorf& (0+255),b
 12574  004420  0EFF               	movlw	255
 12575  004422  6F1E               	movwf	(??_floorf+1)& (0+255),b
 12576  004424  C129  F11F         	movff	floorf@u,??_floorf+2
 12577  004428  C12A  F120         	movff	floorf@u+1,??_floorf+3
 12578  00442C  C12B  F121         	movff	floorf@u+2,??_floorf+4
 12579  004430  C12C  F122         	movff	floorf@u+3,??_floorf+5
 12580  004434  0E18               	movlw	24
 12581  004436  D005               	goto	u15790
 12582  004438                     u15795:
 12583  004438  90D8               	bcf	status,0,c
 12584  00443A  3322               	rrcf	(??_floorf+5)& (0+255),f,b
 12585  00443C  3321               	rrcf	(??_floorf+4)& (0+255),f,b
 12586  00443E  3320               	rrcf	(??_floorf+3)& (0+255),f,b
 12587  004440  331F               	rrcf	(??_floorf+2)& (0+255),f,b
 12588  004442                     u15790:
 12589  004442  2EE8               	decfsz	wreg,f,c
 12590  004444  D7F9               	goto	u15795
 12591  004446  511F               	movf	(??_floorf+2)& (0+255),w,b
 12592  004448  251D               	addwf	??_floorf& (0+255),w,b
 12593  00444A  6F27               	movwf	floorf@e& (0+255),b
 12594  00444C  0E00               	movlw	0
 12595  00444E  211E               	addwfc	(??_floorf+1)& (0+255),w,b
 12596  004450  6F28               	movwf	(floorf@e+1)& (0+255),b
 12597  004452  BF28               	btfsc	(floorf@e+1)& (0+255),7,b
 12598  004454  D00F               	goto	l13390
 12599  004456  5128               	movf	(floorf@e+1)& (0+255),w,b
 12600  004458  E104               	bnz	u15800
 12601  00445A  0E17               	movlw	23
 12602  00445C  5D27               	subwf	floorf@e& (0+255),w,b
 12603  00445E  A0D8               	btfss	status,0,c
 12604  004460  D009               	goto	l13390
 12605  004462                     u15800:
 12606                           
 12607                           ; BSR set to: 1
 12608  004462  C119  F119         	movff	floorf@x,?_floorf
 12609  004466  C11A  F11A         	movff	floorf@x+1,?_floorf+1
 12610  00446A  C11B  F11B         	movff	floorf@x+2,?_floorf+2
 12611  00446E  C11C  F11C         	movff	floorf@x+3,?_floorf+3
 12612  004472  0012               	return	
 12613  004474                     l13390:
 12614                           
 12615                           ; BSR set to: 1
 12616  004474  BF28               	btfsc	(floorf@e+1)& (0+255),7,b
 12617  004476  D05C               	goto	l13400
 12618                           
 12619                           ; BSR set to: 1
 12620  004478  C127  F11D         	movff	floorf@e,??_floorf
 12621  00447C  0EFF               	movlw	255
 12622  00447E  6F1E               	movwf	(??_floorf+1)& (0+255),b
 12623  004480  0EFF               	movlw	255
 12624  004482  6F1F               	movwf	(??_floorf+2)& (0+255),b
 12625  004484  0E7F               	movlw	127
 12626  004486  6F20               	movwf	(??_floorf+3)& (0+255),b
 12627  004488  0E00               	movlw	0
 12628  00448A  6F21               	movwf	(??_floorf+4)& (0+255),b
 12629  00448C                     u15825:
 12630  00448C  671D               	tstfsz	??_floorf& (0+255),b
 12631  00448E  D001               	goto	u15826
 12632  004490  D007               	goto	u15827
 12633  004492                     u15826:
 12634  004492  3521               	rlcf	(??_floorf+4)& (0+255),w,b
 12635  004494  3321               	rrcf	(??_floorf+4)& (0+255),f,b
 12636  004496  3320               	rrcf	(??_floorf+3)& (0+255),f,b
 12637  004498  331F               	rrcf	(??_floorf+2)& (0+255),f,b
 12638  00449A  331E               	rrcf	(??_floorf+1)& (0+255),f,b
 12639  00449C  2F1D               	decfsz	??_floorf& (0+255),f,b
 12640  00449E  D7F6               	goto	u15825
 12641  0044A0                     u15827:
 12642  0044A0  C11E  F123         	movff	??_floorf+1,floorf@m
 12643  0044A4  C11F  F124         	movff	??_floorf+2,floorf@m+1
 12644  0044A8  C120  F125         	movff	??_floorf+3,floorf@m+2
 12645  0044AC  C121  F126         	movff	??_floorf+4,floorf@m+3
 12646  0044B0  0101               	movlb	1	; () banked
 12647  0044B2  5123               	movf	floorf@m& (0+255),w,b
 12648  0044B4  1529               	andwf	floorf@u& (0+255),w,b
 12649  0044B6  6F1D               	movwf	??_floorf& (0+255),b
 12650  0044B8  5124               	movf	(floorf@m+1)& (0+255),w,b
 12651  0044BA  152A               	andwf	(floorf@u+1)& (0+255),w,b
 12652  0044BC  6F1E               	movwf	(??_floorf+1)& (0+255),b
 12653  0044BE  5125               	movf	(floorf@m+2)& (0+255),w,b
 12654  0044C0  152B               	andwf	(floorf@u+2)& (0+255),w,b
 12655  0044C2  6F1F               	movwf	(??_floorf+2)& (0+255),b
 12656  0044C4  5126               	movf	(floorf@m+3)& (0+255),w,b
 12657  0044C6  152C               	andwf	(floorf@u+3)& (0+255),w,b
 12658  0044C8  6F20               	movwf	(??_floorf+3)& (0+255),b
 12659  0044CA  511D               	movf	??_floorf& (0+255),w,b
 12660  0044CC  111E               	iorwf	(??_floorf+1)& (0+255),w,b
 12661  0044CE  111F               	iorwf	(??_floorf+2)& (0+255),w,b
 12662  0044D0  1120               	iorwf	(??_floorf+3)& (0+255),w,b
 12663  0044D2  B4D8               	btfsc	status,2,c
 12664  0044D4  D7C6               	goto	u15800
 12665                           
 12666                           ; BSR set to: 1
 12667  0044D6  C129  F11D         	movff	floorf@u,??_floorf
 12668  0044DA  C12A  F11E         	movff	floorf@u+1,??_floorf+1
 12669  0044DE  C12B  F11F         	movff	floorf@u+2,??_floorf+2
 12670  0044E2  C12C  F120         	movff	floorf@u+3,??_floorf+3
 12671  0044E6  0E20               	movlw	32
 12672  0044E8  D005               	goto	u15840
 12673  0044EA                     u15845:
 12674  0044EA  90D8               	bcf	status,0,c
 12675  0044EC  3320               	rrcf	(??_floorf+3)& (0+255),f,b
 12676  0044EE  331F               	rrcf	(??_floorf+2)& (0+255),f,b
 12677  0044F0  331E               	rrcf	(??_floorf+1)& (0+255),f,b
 12678  0044F2  331D               	rrcf	??_floorf& (0+255),f,b
 12679  0044F4                     u15840:
 12680  0044F4  2EE8               	decfsz	wreg,f,c
 12681  0044F6  D7F9               	goto	u15845
 12682  0044F8  511D               	movf	??_floorf& (0+255),w,b
 12683  0044FA  B4D8               	btfsc	status,2,c
 12684  0044FC  D008               	goto	l2452
 12685                           
 12686                           ; BSR set to: 1
 12687  0044FE  5123               	movf	floorf@m& (0+255),w,b
 12688  004500  2729               	addwf	floorf@u& (0+255),f,b
 12689  004502  5124               	movf	(floorf@m+1)& (0+255),w,b
 12690  004504  232A               	addwfc	(floorf@u+1)& (0+255),f,b
 12691  004506  5125               	movf	(floorf@m+2)& (0+255),w,b
 12692  004508  232B               	addwfc	(floorf@u+2)& (0+255),f,b
 12693  00450A  5126               	movf	(floorf@m+3)& (0+255),w,b
 12694  00450C  232C               	addwfc	(floorf@u+3)& (0+255),f,b
 12695  00450E                     l2452:
 12696                           
 12697                           ; BSR set to: 1
 12698  00450E  1D23               	comf	floorf@m& (0+255),w,b
 12699  004510  6F1D               	movwf	??_floorf& (0+255),b
 12700  004512  1D24               	comf	(floorf@m+1)& (0+255),w,b
 12701  004514  6F1E               	movwf	(??_floorf+1)& (0+255),b
 12702  004516  1D25               	comf	(floorf@m+2)& (0+255),w,b
 12703  004518  6F1F               	movwf	(??_floorf+2)& (0+255),b
 12704  00451A  1D26               	comf	(floorf@m+3)& (0+255),w,b
 12705  00451C  6F20               	movwf	(??_floorf+3)& (0+255),b
 12706  00451E  511D               	movf	??_floorf& (0+255),w,b
 12707  004520  1729               	andwf	floorf@u& (0+255),f,b
 12708  004522  511E               	movf	(??_floorf+1)& (0+255),w,b
 12709  004524  172A               	andwf	(floorf@u+1)& (0+255),f,b
 12710  004526  511F               	movf	(??_floorf+2)& (0+255),w,b
 12711  004528  172B               	andwf	(floorf@u+2)& (0+255),f,b
 12712  00452A  5120               	movf	(??_floorf+3)& (0+255),w,b
 12713  00452C  172C               	andwf	(floorf@u+3)& (0+255),f,b
 12714  00452E  D032               	goto	l13408
 12715  004530                     l13400:
 12716                           
 12717                           ; BSR set to: 1
 12718  004530  C129  F11D         	movff	floorf@u,??_floorf
 12719  004534  C12A  F11E         	movff	floorf@u+1,??_floorf+1
 12720  004538  C12B  F11F         	movff	floorf@u+2,??_floorf+2
 12721  00453C  C12C  F120         	movff	floorf@u+3,??_floorf+3
 12722  004540  0E20               	movlw	32
 12723  004542  D005               	goto	u15860
 12724  004544                     u15865:
 12725  004544  90D8               	bcf	status,0,c
 12726  004546  3320               	rrcf	(??_floorf+3)& (0+255),f,b
 12727  004548  331F               	rrcf	(??_floorf+2)& (0+255),f,b
 12728  00454A  331E               	rrcf	(??_floorf+1)& (0+255),f,b
 12729  00454C  331D               	rrcf	??_floorf& (0+255),f,b
 12730  00454E                     u15860:
 12731  00454E  2EE8               	decfsz	wreg,f,c
 12732  004550  D7F9               	goto	u15865
 12733  004552  671D               	tstfsz	??_floorf& (0+255),b
 12734  004554  D008               	goto	l13404
 12735                           
 12736                           ; BSR set to: 1
 12737  004556  0E00               	movlw	0
 12738  004558  6F29               	movwf	floorf@u& (0+255),b
 12739  00455A  0E00               	movlw	0
 12740  00455C  6F2A               	movwf	(floorf@u+1)& (0+255),b
 12741  00455E  0E00               	movlw	0
 12742  004560  6F2B               	movwf	(floorf@u+2)& (0+255),b
 12743  004562  0E00               	movlw	0
 12744  004564  D016               	goto	L11
 12745  004566                     l13404:
 12746                           
 12747                           ; BSR set to: 1
 12748  004566  90D8               	bcf	status,0,c
 12749  004568  3529               	rlcf	floorf@u& (0+255),w,b
 12750  00456A  6F1D               	movwf	??_floorf& (0+255),b
 12751  00456C  352A               	rlcf	(floorf@u+1)& (0+255),w,b
 12752  00456E  6F1E               	movwf	(??_floorf+1)& (0+255),b
 12753  004570  352B               	rlcf	(floorf@u+2)& (0+255),w,b
 12754  004572  6F1F               	movwf	(??_floorf+2)& (0+255),b
 12755  004574  352C               	rlcf	(floorf@u+3)& (0+255),w,b
 12756  004576  6F20               	movwf	(??_floorf+3)& (0+255),b
 12757  004578  511D               	movf	??_floorf& (0+255),w,b
 12758  00457A  111E               	iorwf	(??_floorf+1)& (0+255),w,b
 12759  00457C  111F               	iorwf	(??_floorf+2)& (0+255),w,b
 12760  00457E  1120               	iorwf	(??_floorf+3)& (0+255),w,b
 12761  004580  B4D8               	btfsc	status,2,c
 12762  004582  D008               	goto	l13408
 12763                           
 12764                           ; BSR set to: 1
 12765  004584  0E00               	movlw	0
 12766  004586  6F29               	movwf	floorf@u& (0+255),b
 12767  004588  0E00               	movlw	0
 12768  00458A  6F2A               	movwf	(floorf@u+1)& (0+255),b
 12769  00458C  0E80               	movlw	128
 12770  00458E  6F2B               	movwf	(floorf@u+2)& (0+255),b
 12771  004590  0EBF               	movlw	191
 12772  004592                     L11:
 12773  004592  6F2C               	movwf	(floorf@u+3)& (0+255),b
 12774  004594                     l13408:
 12775                           
 12776                           ; BSR set to: 1
 12777  004594  C129  F119         	movff	floorf@u,?_floorf
 12778  004598  C12A  F11A         	movff	floorf@u+1,?_floorf+1
 12779  00459C  C12B  F11B         	movff	floorf@u+2,?_floorf+2
 12780  0045A0  C12C  F11C         	movff	floorf@u+3,?_floorf+3
 12781                           
 12782                           ; BSR set to: 1
 12783  0045A4  0012               	return		;funcret
 12784  0045A6                     __end_of_floorf:
 12785                           	callstack 0
 12786                           
 12787 ;; *************** function ___fpclassifyf *****************
 12788 ;; Defined at:
 12789 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  x               4   44[BANK0 ] float 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;  u               4   54[BANK0 ] struct .
 12794 ;;  e               2   52[BANK0 ] int 
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  2   44[BANK0 ] int 
 12797 ;; Registers used:
 12798 ;;		wreg, status,2, status,0
 12799 ;; Tracked objects:
 12800 ;;		On entry : 3E/0
 12801 ;;		On exit  : 3F/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12804 ;;      Params:         0       4       0       0       0       0       0       0       0
 12805 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12806 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12807 ;;      Totals:         0      14       0       0       0       0       0       0       0
 12808 ;;Total ram usage:       14 bytes
 12809 ;; Hardware stack levels used: 1
 12810 ;; Hardware stack levels required when called: 10
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		_efgtoa
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           	psect	text46
 12819  0061E6                     __ptext46:
 12820                           	callstack 0
 12821  0061E6                     ___fpclassifyf:
 12822                           	callstack 16
 12823                           
 12824                           ; BSR set to: 1
 12825                           ;incstack = 0
 12826  0061E6  C2B2  F096         	movff	___fpclassifyf@F465,___fpclassifyf@u
 12827  0061EA  C2B3  F097         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 12828  0061EE  C2B4  F098         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 12829  0061F2  C2B5  F099         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 12830  0061F6  C08C  F096         	movff	___fpclassifyf@x,___fpclassifyf@u
 12831  0061FA  C08D  F097         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 12832  0061FE  C08E  F098         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 12833  006202  C08F  F099         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 12834  006206  C096  F090         	movff	___fpclassifyf@u,??___fpclassifyf
 12835  00620A  C097  F091         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 12836  00620E  C098  F092         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 12837  006212  C099  F093         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 12838  006216  0E18               	movlw	24
 12839  006218  D006               	goto	u15710
 12840  00621A                     u15715:
 12841  00621A  0100               	movlb	0	; () banked
 12842  00621C  90D8               	bcf	status,0,c
 12843  00621E  3393               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 12844  006220  3392               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 12845  006222  3391               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 12846  006224  3390               	rrcf	??___fpclassifyf& (0+255),f,b
 12847  006226                     u15710:
 12848  006226  2EE8               	decfsz	wreg,f,c
 12849  006228  D7F8               	goto	u15715
 12850  00622A  5190               	movf	??___fpclassifyf& (0+255),w,b
 12851  00622C  6F94               	movwf	___fpclassifyf@e& (0+255),b
 12852  00622E  6B95               	clrf	(___fpclassifyf@e+1)& (0+255),b
 12853  006230  5194               	movf	___fpclassifyf@e& (0+255),w,b
 12854  006232  1195               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 12855  006234  A4D8               	btfss	status,2,c
 12856  006236  D019               	goto	l13364
 12857                           
 12858                           ; BSR set to: 0
 12859  006238  90D8               	bcf	status,0,c
 12860  00623A  3596               	rlcf	___fpclassifyf@u& (0+255),w,b
 12861  00623C  6F90               	movwf	??___fpclassifyf& (0+255),b
 12862  00623E  3597               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 12863  006240  6F91               	movwf	(??___fpclassifyf+1)& (0+255),b
 12864  006242  3598               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 12865  006244  6F92               	movwf	(??___fpclassifyf+2)& (0+255),b
 12866  006246  3599               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 12867  006248  6F93               	movwf	(??___fpclassifyf+3)& (0+255),b
 12868  00624A  5190               	movf	??___fpclassifyf& (0+255),w,b
 12869  00624C  1191               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 12870  00624E  1192               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 12871  006250  1193               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 12872  006252  A4D8               	btfss	status,2,c
 12873  006254  D005               	goto	l13360
 12874                           
 12875                           ; BSR set to: 0
 12876  006256  0E00               	movlw	0
 12877  006258  6F8D               	movwf	(?___fpclassifyf+1)& (0+255),b
 12878  00625A  0E02               	movlw	2
 12879  00625C  6F8C               	movwf	?___fpclassifyf& (0+255),b
 12880  00625E  0012               	return	
 12881  006260                     l13360:
 12882                           
 12883                           ; BSR set to: 0
 12884  006260  0E00               	movlw	0
 12885  006262  6F8D               	movwf	(?___fpclassifyf+1)& (0+255),b
 12886  006264  0E03               	movlw	3
 12887  006266  6F8C               	movwf	?___fpclassifyf& (0+255),b
 12888  006268  0012               	return	
 12889  00626A                     l13364:
 12890                           
 12891                           ; BSR set to: 0
 12892  00626A  2994               	incf	___fpclassifyf@e& (0+255),w,b
 12893  00626C  1195               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 12894  00626E  A4D8               	btfss	status,2,c
 12895  006270  D01C               	goto	l13370
 12896                           
 12897                           ; BSR set to: 0
 12898  006272  C096  F090         	movff	___fpclassifyf@u,??___fpclassifyf
 12899  006276  C097  F091         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 12900  00627A  C098  F092         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 12901  00627E  C099  F093         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 12902  006282  0E09               	movlw	9
 12903  006284                     u15755:
 12904  006284  90D8               	bcf	status,0,c
 12905  006286  3790               	rlcf	??___fpclassifyf& (0+255),f,b
 12906  006288  3791               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 12907  00628A  3792               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 12908  00628C  3793               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 12909  00628E  2EE8               	decfsz	wreg,f,c
 12910  006290  D7F9               	goto	u15755
 12911  006292  5190               	movf	??___fpclassifyf& (0+255),w,b
 12912  006294  1191               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 12913  006296  1192               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 12914  006298  1193               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 12915  00629A  A4D8               	btfss	status,2,c
 12916  00629C  D002               	goto	u15760
 12917  00629E  0E01               	movlw	1
 12918  0062A0  D001               	goto	u15770
 12919  0062A2                     u15760:
 12920  0062A2  0E00               	movlw	0
 12921  0062A4                     u15770:
 12922  0062A4  6F8C               	movwf	?___fpclassifyf& (0+255),b
 12923  0062A6  6B8D               	clrf	(?___fpclassifyf+1)& (0+255),b
 12924  0062A8  0012               	return	
 12925  0062AA                     l13370:
 12926                           
 12927                           ; BSR set to: 0
 12928  0062AA  0E00               	movlw	0
 12929  0062AC  6F8D               	movwf	(?___fpclassifyf+1)& (0+255),b
 12930  0062AE  0E04               	movlw	4
 12931  0062B0  6F8C               	movwf	?___fpclassifyf& (0+255),b
 12932                           
 12933                           ; BSR set to: 0
 12934  0062B2  0012               	return		;funcret
 12935  0062B4                     __end_of___fpclassifyf:
 12936                           	callstack 0
 12937                           
 12938 ;; *************** function ___fltol *****************
 12939 ;; Defined at:
 12940 ;;		line 43 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;  f1              4   25[BANK1 ] int 
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;  exp1            1   71[BANK0 ] unsigned char 
 12945 ;;  sign1           1   70[BANK0 ] unsigned char 
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  4   25[BANK1 ] long 
 12948 ;; Registers used:
 12949 ;;		wreg, status,2, status,0
 12950 ;; Tracked objects:
 12951 ;;		On entry : 3C/2
 12952 ;;		On exit  : 3E/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12955 ;;      Params:         0       0       4       0       0       0       0       0       0
 12956 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12957 ;;      Temps:          0       0       4       0       0       0       0       0       0
 12958 ;;      Totals:         0       2       8       0       0       0       0       0       0
 12959 ;;Total ram usage:       10 bytes
 12960 ;; Hardware stack levels used: 1
 12961 ;; Hardware stack levels required when called: 10
 12962 ;; This function calls:
 12963 ;;		Nothing
 12964 ;; This function is called by:
 12965 ;;		_mover_2
 12966 ;;		_executeCommand
 12967 ;;		_efgtoa
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           	psect	text47
 12972  005EA2                     __ptext47:
 12973                           	callstack 0
 12974  005EA2                     ___fltol:
 12975                           	callstack 16
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;incstack = 0
 12979  005EA2  0101               	movlb	1	; () banked
 12980  005EA4  351B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12981  005EA6  351C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12982  005EA8  0100               	movlb	0	; () banked
 12983  005EAA  6FA7               	movwf	___fltol@exp1& (0+255),b
 12984  005EAC  51A7               	movf	___fltol@exp1& (0+255),w,b
 12985  005EAE  A4D8               	btfss	status,2,c
 12986  005EB0  D00A               	goto	l13288
 12987  005EB2                     u15590:
 12988                           
 12989                           ; BSR set to: 0
 12990  005EB2  0E00               	movlw	0
 12991  005EB4  0101               	movlb	1	; () banked
 12992  005EB6  6F19               	movwf	?___fltol& (0+255),b
 12993  005EB8  0E00               	movlw	0
 12994  005EBA  6F1A               	movwf	(?___fltol+1)& (0+255),b
 12995  005EBC  0E00               	movlw	0
 12996  005EBE  6F1B               	movwf	(?___fltol+2)& (0+255),b
 12997  005EC0  0E00               	movlw	0
 12998  005EC2  6F1C               	movwf	(?___fltol+3)& (0+255),b
 12999  005EC4  0012               	return	
 13000  005EC6                     l13288:
 13001                           
 13002                           ; BSR set to: 0
 13003  005EC6  C119  F11D         	movff	___fltol@f1,??___fltol
 13004  005ECA  C11A  F11E         	movff	___fltol@f1+1,??___fltol+1
 13005  005ECE  C11B  F11F         	movff	___fltol@f1+2,??___fltol+2
 13006  005ED2  C11C  F120         	movff	___fltol@f1+3,??___fltol+3
 13007  005ED6  0E20               	movlw	32
 13008  005ED8  D006               	goto	u15600
 13009  005EDA                     u15605:
 13010  005EDA  0101               	movlb	1	; () banked
 13011  005EDC  90D8               	bcf	status,0,c
 13012  005EDE  3320               	rrcf	(??___fltol+3)& (0+255),f,b
 13013  005EE0  331F               	rrcf	(??___fltol+2)& (0+255),f,b
 13014  005EE2  331E               	rrcf	(??___fltol+1)& (0+255),f,b
 13015  005EE4  331D               	rrcf	??___fltol& (0+255),f,b
 13016  005EE6                     u15600:
 13017  005EE6  2EE8               	decfsz	wreg,f,c
 13018  005EE8  D7F8               	goto	u15605
 13019  005EEA  511D               	movf	??___fltol& (0+255),w,b
 13020  005EEC  0100               	movlb	0	; () banked
 13021  005EEE  6FA6               	movwf	___fltol@sign1& (0+255),b
 13022                           
 13023                           ; BSR set to: 0
 13024  005EF0  0101               	movlb	1	; () banked
 13025  005EF2  8F1B               	bsf	(___fltol@f1+2)& (0+255),7,b
 13026                           
 13027                           ; BSR set to: 1
 13028  005EF4  0EFF               	movlw	255
 13029  005EF6  1719               	andwf	___fltol@f1& (0+255),f,b
 13030  005EF8  0EFF               	movlw	255
 13031  005EFA  171A               	andwf	(___fltol@f1+1)& (0+255),f,b
 13032  005EFC  0EFF               	movlw	255
 13033  005EFE  171B               	andwf	(___fltol@f1+2)& (0+255),f,b
 13034  005F00  0E00               	movlw	0
 13035  005F02  171C               	andwf	(___fltol@f1+3)& (0+255),f,b
 13036                           
 13037                           ; BSR set to: 1
 13038  005F04  0E96               	movlw	150
 13039  005F06  0100               	movlb	0	; () banked
 13040  005F08  5FA7               	subwf	___fltol@exp1& (0+255),f,b
 13041                           
 13042                           ; BSR set to: 0
 13043  005F0A  AFA7               	btfss	___fltol@exp1& (0+255),7,b
 13044  005F0C  D00F               	goto	l13308
 13045                           
 13046                           ; BSR set to: 0
 13047  005F0E  51A7               	movf	___fltol@exp1& (0+255),w,b
 13048  005F10  0A80               	xorlw	128
 13049  005F12  0F97               	addlw	151
 13050  005F14  A0D8               	btfss	status,0,c
 13051  005F16  D7CD               	goto	u15590
 13052  005F18                     l13304:
 13053                           
 13054                           ; BSR set to: 0
 13055  005F18  0101               	movlb	1	; () banked
 13056  005F1A  90D8               	bcf	status,0,c
 13057  005F1C  331C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13058  005F1E  331B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13059  005F20  331A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13060  005F22  3319               	rrcf	___fltol@f1& (0+255),f,b
 13061                           
 13062                           ; BSR set to: 1
 13063  005F24  0100               	movlb	0	; () banked
 13064  005F26  3FA7               	incfsz	___fltol@exp1& (0+255),f,b
 13065  005F28  D7F7               	goto	l13304
 13066  005F2A  D00F               	goto	u15640
 13067  005F2C                     l13308:
 13068                           
 13069                           ; BSR set to: 0
 13070  005F2C  0E1F               	movlw	31
 13071  005F2E  65A7               	cpfsgt	___fltol@exp1& (0+255),b
 13072  005F30  D009               	goto	l13316
 13073  005F32  D7BF               	goto	u15590
 13074  005F34                     l13314:
 13075                           
 13076                           ; BSR set to: 0
 13077  005F34  0101               	movlb	1	; () banked
 13078  005F36  90D8               	bcf	status,0,c
 13079  005F38  3719               	rlcf	___fltol@f1& (0+255),f,b
 13080  005F3A  371A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13081  005F3C  371B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13082  005F3E  371C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13083  005F40  0100               	movlb	0	; () banked
 13084  005F42  07A7               	decf	___fltol@exp1& (0+255),f,b
 13085  005F44                     l13316:
 13086                           
 13087                           ; BSR set to: 0
 13088  005F44  51A7               	movf	___fltol@exp1& (0+255),w,b
 13089  005F46  A4D8               	btfss	status,2,c
 13090  005F48  D7F5               	goto	l13314
 13091  005F4A                     u15640:
 13092                           
 13093                           ; BSR set to: 0
 13094  005F4A  51A6               	movf	___fltol@sign1& (0+255),w,b
 13095  005F4C  B4D8               	btfsc	status,2,c
 13096  005F4E  D009               	goto	l13322
 13097                           
 13098                           ; BSR set to: 0
 13099  005F50  0101               	movlb	1	; () banked
 13100  005F52  1F1C               	comf	(___fltol@f1+3)& (0+255),f,b
 13101  005F54  1F1B               	comf	(___fltol@f1+2)& (0+255),f,b
 13102  005F56  1F1A               	comf	(___fltol@f1+1)& (0+255),f,b
 13103  005F58  6D19               	negf	___fltol@f1& (0+255),b
 13104  005F5A  0E00               	movlw	0
 13105  005F5C  231A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13106  005F5E  231B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13107  005F60  231C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13108  005F62                     l13322:
 13109  005F62  C119  F119         	movff	___fltol@f1,?___fltol
 13110  005F66  C11A  F11A         	movff	___fltol@f1+1,?___fltol+1
 13111  005F6A  C11B  F11B         	movff	___fltol@f1+2,?___fltol+2
 13112  005F6E  C11C  F11C         	movff	___fltol@f1+3,?___fltol+3
 13113  005F72  0012               	return		;funcret
 13114  005F74                     __end_of___fltol:
 13115                           	callstack 0
 13116                           
 13117 ;; *************** function ___flsub *****************
 13118 ;; Defined at:
 13119 ;;		line 245 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 13120 ;; Parameters:    Size  Location     Type
 13121 ;;  b               4   25[BANK1 ] long 
 13122 ;;  a               4   29[BANK1 ] long 
 13123 ;; Auto vars:     Size  Location     Type
 13124 ;;		None
 13125 ;; Return value:  Size  Location     Type
 13126 ;;                  4   25[BANK1 ] long 
 13127 ;; Registers used:
 13128 ;;		wreg, status,2, status,0, cstack
 13129 ;; Tracked objects:
 13130 ;;		On entry : 3F/1
 13131 ;;		On exit  : 3F/0
 13132 ;;		Unchanged: 0/0
 13133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13134 ;;      Params:         0       0       8       0       0       0       0       0       0
 13135 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13136 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13137 ;;      Totals:         0       0       8       0       0       0       0       0       0
 13138 ;;Total ram usage:        8 bytes
 13139 ;; Hardware stack levels used: 1
 13140 ;; Hardware stack levels required when called: 11
 13141 ;; This function calls:
 13142 ;;		___fladd
 13143 ;; This function is called by:
 13144 ;;		_G_01
 13145 ;;		_G_95
 13146 ;;		_efgtoa
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150                           	psect	text48
 13151  0074CC                     __ptext48:
 13152                           	callstack 0
 13153  0074CC                     ___flsub:
 13154                           	callstack 15
 13155                           
 13156                           ; BSR set to: 1
 13157                           
 13158                           ;incstack = 0
 13159  0074CC  0E00               	movlw	0
 13160  0074CE  1B1D               	xorwf	___flsub@a& (0+255),f,b
 13161  0074D0  0E00               	movlw	0
 13162  0074D2  1B1E               	xorwf	(___flsub@a+1)& (0+255),f,b
 13163  0074D4  0E00               	movlw	0
 13164  0074D6  1B1F               	xorwf	(___flsub@a+2)& (0+255),f,b
 13165  0074D8  0E80               	movlw	128
 13166  0074DA  1B20               	xorwf	(___flsub@a+3)& (0+255),f,b
 13167                           
 13168                           ; BSR set to: 1
 13169  0074DC  C119  F08C         	movff	___flsub@b,___fladd@b
 13170  0074E0  C11A  F08D         	movff	___flsub@b+1,___fladd@b+1
 13171  0074E4  C11B  F08E         	movff	___flsub@b+2,___fladd@b+2
 13172  0074E8  C11C  F08F         	movff	___flsub@b+3,___fladd@b+3
 13173  0074EC  C11D  F090         	movff	___flsub@a,___fladd@a
 13174  0074F0  C11E  F091         	movff	___flsub@a+1,___fladd@a+1
 13175  0074F4  C11F  F092         	movff	___flsub@a+2,___fladd@a+2
 13176  0074F8  C120  F093         	movff	___flsub@a+3,___fladd@a+3
 13177  0074FC  ECE8  F013         	call	___fladd	;wreg free
 13178  007500  C08C  F119         	movff	?___fladd,?___flsub
 13179  007504  C08D  F11A         	movff	?___fladd+1,?___flsub+1
 13180  007508  C08E  F11B         	movff	?___fladd+2,?___flsub+2
 13181  00750C  C08F  F11C         	movff	?___fladd+3,?___flsub+3
 13182                           
 13183                           ; BSR set to: 0
 13184  007510  0012               	return		;funcret
 13185  007512                     __end_of___flsub:
 13186                           	callstack 0
 13187                           
 13188 ;; *************** function ___fladd *****************
 13189 ;; Defined at:
 13190 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 13191 ;; Parameters:    Size  Location     Type
 13192 ;;  b               4   44[BANK0 ] long 
 13193 ;;  a               4   48[BANK0 ] long 
 13194 ;; Auto vars:     Size  Location     Type
 13195 ;;  grs             1   59[BANK0 ] unsigned char 
 13196 ;;  bexp            1   58[BANK0 ] unsigned char 
 13197 ;;  aexp            1   57[BANK0 ] unsigned char 
 13198 ;;  signs           1   56[BANK0 ] unsigned char 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  4   44[BANK0 ] unsigned char 
 13201 ;; Registers used:
 13202 ;;		wreg, status,2, status,0
 13203 ;; Tracked objects:
 13204 ;;		On entry : 3E/1
 13205 ;;		On exit  : 3F/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13208 ;;      Params:         0       8       0       0       0       0       0       0       0
 13209 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13210 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13211 ;;      Totals:         0      16       0       0       0       0       0       0       0
 13212 ;;Total ram usage:       16 bytes
 13213 ;; Hardware stack levels used: 1
 13214 ;; Hardware stack levels required when called: 10
 13215 ;; This function calls:
 13216 ;;		Nothing
 13217 ;; This function is called by:
 13218 ;;		_G_01
 13219 ;;		_G_95
 13220 ;;		___flsub
 13221 ;;		_efgtoa
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225                           	psect	text49
 13226  0027D0                     __ptext49:
 13227                           	callstack 0
 13228  0027D0                     ___fladd:
 13229                           	callstack 15
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;incstack = 0
 13233  0027D0  0100               	movlb	0	; () banked
 13234  0027D2  518F               	movf	(___fladd@b+3)& (0+255),w,b
 13235  0027D4  0B80               	andlw	128
 13236  0027D6  6F98               	movwf	___fladd@signs& (0+255),b
 13237  0027D8  518F               	movf	(___fladd@b+3)& (0+255),w,b
 13238  0027DA  258F               	addwf	(___fladd@b+3)& (0+255),w,b
 13239  0027DC  6F9A               	movwf	___fladd@bexp& (0+255),b
 13240                           
 13241                           ; BSR set to: 0
 13242  0027DE  BF8E               	btfsc	(___fladd@b+2)& (0+255),7,b
 13243                           
 13244                           ; BSR set to: 0
 13245  0027E0  819A               	bsf	___fladd@bexp& (0+255),0,b
 13246                           
 13247                           ; BSR set to: 0
 13248  0027E2  519A               	movf	___fladd@bexp& (0+255),w,b
 13249  0027E4  B4D8               	btfsc	status,2,c
 13250  0027E6  D00D               	goto	l12594
 13251                           
 13252                           ; BSR set to: 0
 13253  0027E8  299A               	incf	___fladd@bexp& (0+255),w,b
 13254  0027EA  A4D8               	btfss	status,2,c
 13255  0027EC  D008               	goto	l12590
 13256                           
 13257                           ; BSR set to: 0
 13258  0027EE  0E00               	movlw	0
 13259  0027F0  6F8C               	movwf	___fladd@b& (0+255),b
 13260  0027F2  0E00               	movlw	0
 13261  0027F4  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 13262  0027F6  0E00               	movlw	0
 13263  0027F8  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 13264  0027FA  0E00               	movlw	0
 13265  0027FC  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 13266  0027FE                     l12590:
 13267                           
 13268                           ; BSR set to: 0
 13269  0027FE  8F8E               	bsf	(___fladd@b+2)& (0+255),7,b
 13270  002800  D006               	goto	L12
 13271  002802                     l12594:
 13272                           
 13273                           ; BSR set to: 0
 13274  002802  0E00               	movlw	0
 13275  002804  6F8C               	movwf	___fladd@b& (0+255),b
 13276  002806  0E00               	movlw	0
 13277  002808  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 13278  00280A  0E00               	movlw	0
 13279  00280C  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 13280  00280E                     L12:
 13281  00280E  0E00               	movlw	0
 13282  002810  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 13283                           
 13284                           ; BSR set to: 0
 13285  002812  5193               	movf	(___fladd@a+3)& (0+255),w,b
 13286  002814  0B80               	andlw	128
 13287  002816  6F99               	movwf	___fladd@aexp& (0+255),b
 13288                           
 13289                           ; BSR set to: 0
 13290  002818  5198               	movf	___fladd@signs& (0+255),w,b
 13291  00281A  1999               	xorwf	___fladd@aexp& (0+255),w,b
 13292  00281C  A4D8               	btfss	status,2,c
 13293                           
 13294                           ; BSR set to: 0
 13295  00281E  8D98               	bsf	___fladd@signs& (0+255),6,b
 13296                           
 13297                           ; BSR set to: 0
 13298  002820  5193               	movf	(___fladd@a+3)& (0+255),w,b
 13299  002822  2593               	addwf	(___fladd@a+3)& (0+255),w,b
 13300  002824  6F99               	movwf	___fladd@aexp& (0+255),b
 13301                           
 13302                           ; BSR set to: 0
 13303  002826  BF92               	btfsc	(___fladd@a+2)& (0+255),7,b
 13304                           
 13305                           ; BSR set to: 0
 13306  002828  8199               	bsf	___fladd@aexp& (0+255),0,b
 13307                           
 13308                           ; BSR set to: 0
 13309  00282A  5199               	movf	___fladd@aexp& (0+255),w,b
 13310  00282C  B4D8               	btfsc	status,2,c
 13311  00282E  D00D               	goto	l12618
 13312                           
 13313                           ; BSR set to: 0
 13314  002830  2999               	incf	___fladd@aexp& (0+255),w,b
 13315  002832  A4D8               	btfss	status,2,c
 13316  002834  D008               	goto	l12614
 13317                           
 13318                           ; BSR set to: 0
 13319  002836  0E00               	movlw	0
 13320  002838  6F90               	movwf	___fladd@a& (0+255),b
 13321  00283A  0E00               	movlw	0
 13322  00283C  6F91               	movwf	(___fladd@a+1)& (0+255),b
 13323  00283E  0E00               	movlw	0
 13324  002840  6F92               	movwf	(___fladd@a+2)& (0+255),b
 13325  002842  0E00               	movlw	0
 13326  002844  6F93               	movwf	(___fladd@a+3)& (0+255),b
 13327  002846                     l12614:
 13328                           
 13329                           ; BSR set to: 0
 13330  002846  8F92               	bsf	(___fladd@a+2)& (0+255),7,b
 13331  002848  D006               	goto	L13
 13332  00284A                     l12618:
 13333                           
 13334                           ; BSR set to: 0
 13335  00284A  0E00               	movlw	0
 13336  00284C  6F90               	movwf	___fladd@a& (0+255),b
 13337  00284E  0E00               	movlw	0
 13338  002850  6F91               	movwf	(___fladd@a+1)& (0+255),b
 13339  002852  0E00               	movlw	0
 13340  002854  6F92               	movwf	(___fladd@a+2)& (0+255),b
 13341  002856                     L13:
 13342  002856  0E00               	movlw	0
 13343  002858  6F93               	movwf	(___fladd@a+3)& (0+255),b
 13344                           
 13345                           ; BSR set to: 0
 13346  00285A  519A               	movf	___fladd@bexp& (0+255),w,b
 13347  00285C  5D99               	subwf	___fladd@aexp& (0+255),w,b
 13348  00285E  B0D8               	btfsc	status,0,c
 13349  002860  D022               	goto	l12656
 13350                           
 13351                           ; BSR set to: 0
 13352  002862  AD98               	btfss	___fladd@signs& (0+255),6,b
 13353  002864  D002               	goto	l12626
 13354                           
 13355                           ; BSR set to: 0
 13356  002866  0E80               	movlw	128
 13357  002868  1B98               	xorwf	___fladd@signs& (0+255),f,b
 13358  00286A                     l12626:
 13359                           
 13360                           ; BSR set to: 0
 13361  00286A  C09A  F09B         	movff	___fladd@bexp,___fladd@grs
 13362                           
 13363                           ; BSR set to: 0
 13364  00286E  C099  F09A         	movff	___fladd@aexp,___fladd@bexp
 13365                           
 13366                           ; BSR set to: 0
 13367  002872  C09B  F099         	movff	___fladd@grs,___fladd@aexp
 13368                           
 13369                           ; BSR set to: 0
 13370  002876  C08C  F09B         	movff	___fladd@b,___fladd@grs
 13371                           
 13372                           ; BSR set to: 0
 13373  00287A  C090  F08C         	movff	___fladd@a,___fladd@b
 13374                           
 13375                           ; BSR set to: 0
 13376  00287E  C09B  F090         	movff	___fladd@grs,___fladd@a
 13377                           
 13378                           ; BSR set to: 0
 13379  002882  C08D  F09B         	movff	___fladd@b+1,___fladd@grs
 13380                           
 13381                           ; BSR set to: 0
 13382  002886  C091  F08D         	movff	___fladd@a+1,___fladd@b+1
 13383                           
 13384                           ; BSR set to: 0
 13385  00288A  C09B  F091         	movff	___fladd@grs,___fladd@a+1
 13386                           
 13387                           ; BSR set to: 0
 13388  00288E  C08E  F09B         	movff	___fladd@b+2,___fladd@grs
 13389                           
 13390                           ; BSR set to: 0
 13391  002892  C092  F08E         	movff	___fladd@a+2,___fladd@b+2
 13392                           
 13393                           ; BSR set to: 0
 13394  002896  C09B  F092         	movff	___fladd@grs,___fladd@a+2
 13395                           
 13396                           ; BSR set to: 0
 13397  00289A  C08F  F09B         	movff	___fladd@b+3,___fladd@grs
 13398                           
 13399                           ; BSR set to: 0
 13400  00289E  C093  F08F         	movff	___fladd@a+3,___fladd@b+3
 13401                           
 13402                           ; BSR set to: 0
 13403  0028A2  C09B  F093         	movff	___fladd@grs,___fladd@a+3
 13404  0028A6                     l12656:
 13405                           
 13406                           ; BSR set to: 0
 13407  0028A6  0E00               	movlw	0
 13408  0028A8  6F9B               	movwf	___fladd@grs& (0+255),b
 13409                           
 13410                           ; BSR set to: 0
 13411  0028AA  519A               	movf	___fladd@bexp& (0+255),w,b
 13412  0028AC  C099  F094         	movff	___fladd@aexp,??___fladd
 13413  0028B0  6B95               	clrf	(??___fladd+1)& (0+255),b
 13414  0028B2  5F94               	subwf	??___fladd& (0+255),f,b
 13415  0028B4  0E00               	movlw	0
 13416  0028B6  5B95               	subwfb	(??___fladd+1)& (0+255),f,b
 13417  0028B8  BF95               	btfsc	(??___fladd+1)& (0+255),7,b
 13418  0028BA  D02C               	goto	l1997
 13419  0028BC  5195               	movf	(??___fladd+1)& (0+255),w,b
 13420  0028BE  E104               	bnz	u14490
 13421  0028C0  0E1A               	movlw	26
 13422  0028C2  5D94               	subwf	??___fladd& (0+255),w,b
 13423  0028C4  A0D8               	btfss	status,0,c
 13424  0028C6  D026               	goto	l1997
 13425  0028C8                     u14490:
 13426                           
 13427                           ; BSR set to: 0
 13428  0028C8  518C               	movf	___fladd@b& (0+255),w,b
 13429  0028CA  118D               	iorwf	(___fladd@b+1)& (0+255),w,b
 13430  0028CC  118E               	iorwf	(___fladd@b+2)& (0+255),w,b
 13431  0028CE  118F               	iorwf	(___fladd@b+3)& (0+255),w,b
 13432  0028D0  B4D8               	btfsc	status,2,c
 13433  0028D2  D002               	goto	u14500
 13434  0028D4  0E01               	movlw	1
 13435  0028D6  D001               	goto	u14510
 13436  0028D8                     u14500:
 13437  0028D8  0E00               	movlw	0
 13438  0028DA                     u14510:
 13439  0028DA  6F9B               	movwf	___fladd@grs& (0+255),b
 13440                           
 13441                           ; BSR set to: 0
 13442  0028DC  0E00               	movlw	0
 13443  0028DE  6F8C               	movwf	___fladd@b& (0+255),b
 13444  0028E0  0E00               	movlw	0
 13445  0028E2  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 13446  0028E4  0E00               	movlw	0
 13447  0028E6  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 13448  0028E8  0E00               	movlw	0
 13449  0028EA  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 13450                           
 13451                           ; BSR set to: 0
 13452  0028EC  C099  F09A         	movff	___fladd@aexp,___fladd@bexp
 13453  0028F0  D015               	goto	u14540
 13454  0028F2                     l1998:
 13455                           
 13456                           ; BSR set to: 0
 13457  0028F2  A19B               	btfss	___fladd@grs& (0+255),0,b
 13458  0028F4  D005               	goto	l12668
 13459                           
 13460                           ; BSR set to: 0
 13461  0028F6  90D8               	bcf	status,0,c
 13462  0028F8  319B               	rrcf	___fladd@grs& (0+255),w,b
 13463  0028FA  0901               	iorlw	1
 13464  0028FC  6F9B               	movwf	___fladd@grs& (0+255),b
 13465  0028FE  D002               	goto	l12670
 13466  002900                     l12668:
 13467                           
 13468                           ; BSR set to: 0
 13469  002900  90D8               	bcf	status,0,c
 13470  002902  339B               	rrcf	___fladd@grs& (0+255),f,b
 13471  002904                     l12670:
 13472                           
 13473                           ; BSR set to: 0
 13474  002904  B18C               	btfsc	___fladd@b& (0+255),0,b
 13475                           
 13476                           ; BSR set to: 0
 13477  002906  8F9B               	bsf	___fladd@grs& (0+255),7,b
 13478                           
 13479                           ; BSR set to: 0
 13480  002908  358F               	rlcf	(___fladd@b+3)& (0+255),w,b
 13481  00290A  338F               	rrcf	(___fladd@b+3)& (0+255),f,b
 13482  00290C  338E               	rrcf	(___fladd@b+2)& (0+255),f,b
 13483  00290E  338D               	rrcf	(___fladd@b+1)& (0+255),f,b
 13484  002910  338C               	rrcf	___fladd@b& (0+255),f,b
 13485                           
 13486                           ; BSR set to: 0
 13487  002912  2B9A               	incf	___fladd@bexp& (0+255),f,b
 13488  002914                     l1997:
 13489                           
 13490                           ; BSR set to: 0
 13491  002914  5199               	movf	___fladd@aexp& (0+255),w,b
 13492  002916  5D9A               	subwf	___fladd@bexp& (0+255),w,b
 13493  002918  A0D8               	btfss	status,0,c
 13494  00291A  D7EB               	goto	l1998
 13495  00291C                     u14540:
 13496                           
 13497                           ; BSR set to: 0
 13498  00291C  BD98               	btfsc	___fladd@signs& (0+255),6,b
 13499  00291E  D028               	goto	l12702
 13500                           
 13501                           ; BSR set to: 0
 13502  002920  519A               	movf	___fladd@bexp& (0+255),w,b
 13503  002922  A4D8               	btfss	status,2,c
 13504  002924  D009               	goto	l12684
 13505                           
 13506                           ; BSR set to: 0
 13507  002926  0E00               	movlw	0
 13508  002928  6F8C               	movwf	?___fladd& (0+255),b
 13509  00292A  0E00               	movlw	0
 13510  00292C  6F8D               	movwf	(?___fladd+1)& (0+255),b
 13511  00292E  0E00               	movlw	0
 13512  002930  6F8E               	movwf	(?___fladd+2)& (0+255),b
 13513  002932  0E00               	movlw	0
 13514  002934  6F8F               	movwf	(?___fladd+3)& (0+255),b
 13515  002936  0012               	return	
 13516  002938                     l12684:
 13517                           
 13518                           ; BSR set to: 0
 13519  002938  5190               	movf	___fladd@a& (0+255),w,b
 13520  00293A  278C               	addwf	___fladd@b& (0+255),f,b
 13521  00293C  5191               	movf	(___fladd@a+1)& (0+255),w,b
 13522  00293E  238D               	addwfc	(___fladd@b+1)& (0+255),f,b
 13523  002940  5192               	movf	(___fladd@a+2)& (0+255),w,b
 13524  002942  238E               	addwfc	(___fladd@b+2)& (0+255),f,b
 13525  002944  5193               	movf	(___fladd@a+3)& (0+255),w,b
 13526  002946  238F               	addwfc	(___fladd@b+3)& (0+255),f,b
 13527                           
 13528                           ; BSR set to: 0
 13529  002948  A18F               	btfss	(___fladd@b+3)& (0+255),0,b
 13530  00294A  D071               	goto	u14670
 13531                           
 13532                           ; BSR set to: 0
 13533  00294C  A19B               	btfss	___fladd@grs& (0+255),0,b
 13534  00294E  D005               	goto	l12692
 13535                           
 13536                           ; BSR set to: 0
 13537  002950  90D8               	bcf	status,0,c
 13538  002952  319B               	rrcf	___fladd@grs& (0+255),w,b
 13539  002954  0901               	iorlw	1
 13540  002956  6F9B               	movwf	___fladd@grs& (0+255),b
 13541  002958  D002               	goto	l12694
 13542  00295A                     l12692:
 13543                           
 13544                           ; BSR set to: 0
 13545  00295A  90D8               	bcf	status,0,c
 13546  00295C  339B               	rrcf	___fladd@grs& (0+255),f,b
 13547  00295E                     l12694:
 13548                           
 13549                           ; BSR set to: 0
 13550  00295E  B18C               	btfsc	___fladd@b& (0+255),0,b
 13551                           
 13552                           ; BSR set to: 0
 13553  002960  8F9B               	bsf	___fladd@grs& (0+255),7,b
 13554                           
 13555                           ; BSR set to: 0
 13556  002962  358F               	rlcf	(___fladd@b+3)& (0+255),w,b
 13557  002964  338F               	rrcf	(___fladd@b+3)& (0+255),f,b
 13558  002966  338E               	rrcf	(___fladd@b+2)& (0+255),f,b
 13559  002968  338D               	rrcf	(___fladd@b+1)& (0+255),f,b
 13560  00296A  338C               	rrcf	___fladd@b& (0+255),f,b
 13561                           
 13562                           ; BSR set to: 0
 13563  00296C  2B9A               	incf	___fladd@bexp& (0+255),f,b
 13564  00296E  D05F               	goto	u14670
 13565  002970                     l12702:
 13566                           
 13567                           ; BSR set to: 0
 13568  002970  5190               	movf	___fladd@a& (0+255),w,b
 13569  002972  5D8C               	subwf	___fladd@b& (0+255),w,b
 13570  002974  5191               	movf	(___fladd@a+1)& (0+255),w,b
 13571  002976  598D               	subwfb	(___fladd@b+1)& (0+255),w,b
 13572  002978  5192               	movf	(___fladd@a+2)& (0+255),w,b
 13573  00297A  598E               	subwfb	(___fladd@b+2)& (0+255),w,b
 13574  00297C  518F               	movf	(___fladd@b+3)& (0+255),w,b
 13575  00297E  0A80               	xorlw	128
 13576  002980  6F94               	movwf	??___fladd& (0+255),b
 13577  002982  5193               	movf	(___fladd@a+3)& (0+255),w,b
 13578  002984  0A80               	xorlw	128
 13579  002986  5994               	subwfb	??___fladd& (0+255),w,b
 13580  002988  B0D8               	btfsc	status,0,c
 13581  00298A  D025               	goto	l12712
 13582                           
 13583                           ; BSR set to: 0
 13584  00298C  518C               	movf	___fladd@b& (0+255),w,b
 13585  00298E  5D90               	subwf	___fladd@a& (0+255),w,b
 13586  002990  6F94               	movwf	??___fladd& (0+255),b
 13587  002992  518D               	movf	(___fladd@b+1)& (0+255),w,b
 13588  002994  5991               	subwfb	(___fladd@a+1)& (0+255),w,b
 13589  002996  6F95               	movwf	(??___fladd+1)& (0+255),b
 13590  002998  518E               	movf	(___fladd@b+2)& (0+255),w,b
 13591  00299A  5992               	subwfb	(___fladd@a+2)& (0+255),w,b
 13592  00299C  6F96               	movwf	(??___fladd+2)& (0+255),b
 13593  00299E  518F               	movf	(___fladd@b+3)& (0+255),w,b
 13594  0029A0  5993               	subwfb	(___fladd@a+3)& (0+255),w,b
 13595  0029A2  6F97               	movwf	(??___fladd+3)& (0+255),b
 13596  0029A4  0EFF               	movlw	255
 13597  0029A6  2594               	addwf	??___fladd& (0+255),w,b
 13598  0029A8  6F8C               	movwf	___fladd@b& (0+255),b
 13599  0029AA  0EFF               	movlw	255
 13600  0029AC  2195               	addwfc	(??___fladd+1)& (0+255),w,b
 13601  0029AE  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 13602  0029B0  0EFF               	movlw	255
 13603  0029B2  2196               	addwfc	(??___fladd+2)& (0+255),w,b
 13604  0029B4  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 13605  0029B6  0EFF               	movlw	255
 13606  0029B8  2197               	addwfc	(??___fladd+3)& (0+255),w,b
 13607  0029BA  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 13608  0029BC  0E80               	movlw	128
 13609  0029BE  1B98               	xorwf	___fladd@signs& (0+255),f,b
 13610                           
 13611                           ; BSR set to: 0
 13612  0029C0  6D9B               	negf	___fladd@grs& (0+255),b
 13613                           
 13614                           ; BSR set to: 0
 13615  0029C2  519B               	movf	___fladd@grs& (0+255),w,b
 13616  0029C4  A4D8               	btfss	status,2,c
 13617  0029C6  D00F               	goto	l2013
 13618                           
 13619                           ; BSR set to: 0
 13620  0029C8  0E01               	movlw	1
 13621  0029CA  278C               	addwf	___fladd@b& (0+255),f,b
 13622  0029CC  0E00               	movlw	0
 13623  0029CE  238D               	addwfc	(___fladd@b+1)& (0+255),f,b
 13624  0029D0  238E               	addwfc	(___fladd@b+2)& (0+255),f,b
 13625  0029D2  238F               	addwfc	(___fladd@b+3)& (0+255),f,b
 13626  0029D4  D008               	goto	l2013
 13627  0029D6                     l12712:
 13628                           
 13629                           ; BSR set to: 0
 13630  0029D6  5190               	movf	___fladd@a& (0+255),w,b
 13631  0029D8  5F8C               	subwf	___fladd@b& (0+255),f,b
 13632  0029DA  5191               	movf	(___fladd@a+1)& (0+255),w,b
 13633  0029DC  5B8D               	subwfb	(___fladd@b+1)& (0+255),f,b
 13634  0029DE  5192               	movf	(___fladd@a+2)& (0+255),w,b
 13635  0029E0  5B8E               	subwfb	(___fladd@b+2)& (0+255),f,b
 13636  0029E2  5193               	movf	(___fladd@a+3)& (0+255),w,b
 13637  0029E4  5B8F               	subwfb	(___fladd@b+3)& (0+255),f,b
 13638  0029E6                     l2013:
 13639                           
 13640                           ; BSR set to: 0
 13641  0029E6  518C               	movf	___fladd@b& (0+255),w,b
 13642  0029E8  118D               	iorwf	(___fladd@b+1)& (0+255),w,b
 13643  0029EA  118E               	iorwf	(___fladd@b+2)& (0+255),w,b
 13644  0029EC  118F               	iorwf	(___fladd@b+3)& (0+255),w,b
 13645  0029EE  A4D8               	btfss	status,2,c
 13646  0029F0  D01C               	goto	l12736
 13647                           
 13648                           ; BSR set to: 0
 13649  0029F2  519B               	movf	___fladd@grs& (0+255),w,b
 13650  0029F4  A4D8               	btfss	status,2,c
 13651  0029F6  D019               	goto	l12736
 13652                           
 13653                           ; BSR set to: 0
 13654  0029F8  0E00               	movlw	0
 13655  0029FA  6F8C               	movwf	?___fladd& (0+255),b
 13656  0029FC  0E00               	movlw	0
 13657  0029FE  6F8D               	movwf	(?___fladd+1)& (0+255),b
 13658  002A00  0E00               	movlw	0
 13659  002A02  6F8E               	movwf	(?___fladd+2)& (0+255),b
 13660  002A04  0E00               	movlw	0
 13661  002A06  6F8F               	movwf	(?___fladd+3)& (0+255),b
 13662  002A08  0012               	return	
 13663  002A0A                     l12720:
 13664                           
 13665                           ; BSR set to: 0
 13666  002A0A  90D8               	bcf	status,0,c
 13667  002A0C  378C               	rlcf	___fladd@b& (0+255),f,b
 13668  002A0E  378D               	rlcf	(___fladd@b+1)& (0+255),f,b
 13669  002A10  378E               	rlcf	(___fladd@b+2)& (0+255),f,b
 13670  002A12  378F               	rlcf	(___fladd@b+3)& (0+255),f,b
 13671                           
 13672                           ; BSR set to: 0
 13673  002A14  BF9B               	btfsc	___fladd@grs& (0+255),7,b
 13674                           
 13675                           ; BSR set to: 0
 13676  002A16  818C               	bsf	___fladd@b& (0+255),0,b
 13677                           
 13678                           ; BSR set to: 0
 13679  002A18  A19B               	btfss	___fladd@grs& (0+255),0,b
 13680  002A1A  D002               	goto	l12730
 13681                           
 13682                           ; BSR set to: 0
 13683  002A1C  80D8               	bsf	status,0,c
 13684  002A1E  D001               	goto	L14
 13685  002A20                     l12730:
 13686                           
 13687                           ; BSR set to: 0
 13688  002A20  90D8               	bcf	status,0,c
 13689  002A22                     L14:
 13690  002A22  379B               	rlcf	___fladd@grs& (0+255),f,b
 13691                           
 13692                           ; BSR set to: 0
 13693  002A24  519A               	movf	___fladd@bexp& (0+255),w,b
 13694  002A26  A4D8               	btfss	status,2,c
 13695                           
 13696                           ; BSR set to: 0
 13697  002A28  079A               	decf	___fladd@bexp& (0+255),f,b
 13698  002A2A                     l12736:
 13699                           
 13700                           ; BSR set to: 0
 13701  002A2A  AF8E               	btfss	(___fladd@b+2)& (0+255),7,b
 13702  002A2C  D7EE               	goto	l12720
 13703  002A2E                     u14670:
 13704                           
 13705                           ; BSR set to: 0
 13706  002A2E  0E00               	movlw	0
 13707  002A30  6F99               	movwf	___fladd@aexp& (0+255),b
 13708                           
 13709                           ; BSR set to: 0
 13710  002A32  AF9B               	btfss	___fladd@grs& (0+255),7,b
 13711  002A34  D00B               	goto	l2022
 13712                           
 13713                           ; BSR set to: 0
 13714  002A36  C09B  F094         	movff	___fladd@grs,??___fladd
 13715  002A3A  0E7F               	movlw	127
 13716  002A3C  1794               	andwf	??___fladd& (0+255),f,b
 13717  002A3E  B4D8               	btfsc	status,2,c
 13718  002A40  D003               	goto	l2023
 13719  002A42                     u14690:
 13720                           
 13721                           ; BSR set to: 0
 13722  002A42  0E01               	movlw	1
 13723  002A44  6F99               	movwf	___fladd@aexp& (0+255),b
 13724  002A46  D002               	goto	l2022
 13725  002A48                     l2023:
 13726                           
 13727                           ; BSR set to: 0
 13728  002A48  B18C               	btfsc	___fladd@b& (0+255),0,b
 13729  002A4A  D7FB               	goto	u14690
 13730  002A4C                     l2022:
 13731                           
 13732                           ; BSR set to: 0
 13733  002A4C  5199               	movf	___fladd@aexp& (0+255),w,b
 13734  002A4E  B4D8               	btfsc	status,2,c
 13735  002A50  D020               	goto	l12756
 13736                           
 13737                           ; BSR set to: 0
 13738  002A52  0E01               	movlw	1
 13739  002A54  278C               	addwf	___fladd@b& (0+255),f,b
 13740  002A56  0E00               	movlw	0
 13741  002A58  238D               	addwfc	(___fladd@b+1)& (0+255),f,b
 13742  002A5A  238E               	addwfc	(___fladd@b+2)& (0+255),f,b
 13743  002A5C  238F               	addwfc	(___fladd@b+3)& (0+255),f,b
 13744                           
 13745                           ; BSR set to: 0
 13746  002A5E  A18F               	btfss	(___fladd@b+3)& (0+255),0,b
 13747  002A60  D018               	goto	l12756
 13748                           
 13749                           ; BSR set to: 0
 13750  002A62  C08C  F094         	movff	___fladd@b,??___fladd
 13751  002A66  C08D  F095         	movff	___fladd@b+1,??___fladd+1
 13752  002A6A  C08E  F096         	movff	___fladd@b+2,??___fladd+2
 13753  002A6E  C08F  F097         	movff	___fladd@b+3,??___fladd+3
 13754  002A72  3597               	rlcf	(??___fladd+3)& (0+255),w,b
 13755  002A74  3397               	rrcf	(??___fladd+3)& (0+255),f,b
 13756  002A76  3396               	rrcf	(??___fladd+2)& (0+255),f,b
 13757  002A78  3395               	rrcf	(??___fladd+1)& (0+255),f,b
 13758  002A7A  3394               	rrcf	??___fladd& (0+255),f,b
 13759  002A7C  C094  F08C         	movff	??___fladd,___fladd@b
 13760  002A80  C095  F08D         	movff	??___fladd+1,___fladd@b+1
 13761  002A84  C096  F08E         	movff	??___fladd+2,___fladd@b+2
 13762  002A88  C097  F08F         	movff	??___fladd+3,___fladd@b+3
 13763  002A8C  299A               	incf	___fladd@bexp& (0+255),w,b
 13764  002A8E  A4D8               	btfss	status,2,c
 13765                           
 13766                           ; BSR set to: 0
 13767  002A90  2B9A               	incf	___fladd@bexp& (0+255),f,b
 13768  002A92                     l12756:
 13769                           
 13770                           ; BSR set to: 0
 13771  002A92  299A               	incf	___fladd@bexp& (0+255),w,b
 13772  002A94  B4D8               	btfsc	status,2,c
 13773  002A96  D003               	goto	u14750
 13774                           
 13775                           ; BSR set to: 0
 13776  002A98  519A               	movf	___fladd@bexp& (0+255),w,b
 13777  002A9A  A4D8               	btfss	status,2,c
 13778  002A9C  D00D               	goto	l12764
 13779  002A9E                     u14750:
 13780                           
 13781                           ; BSR set to: 0
 13782  002A9E  0E00               	movlw	0
 13783  002AA0  6F8C               	movwf	___fladd@b& (0+255),b
 13784  002AA2  0E00               	movlw	0
 13785  002AA4  6F8D               	movwf	(___fladd@b+1)& (0+255),b
 13786  002AA6  0E00               	movlw	0
 13787  002AA8  6F8E               	movwf	(___fladd@b+2)& (0+255),b
 13788  002AAA  0E00               	movlw	0
 13789  002AAC  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 13790  002AAE  519A               	movf	___fladd@bexp& (0+255),w,b
 13791  002AB0  A4D8               	btfss	status,2,c
 13792  002AB2  D002               	goto	l12764
 13793                           
 13794                           ; BSR set to: 0
 13795  002AB4  0E00               	movlw	0
 13796  002AB6  6F98               	movwf	___fladd@signs& (0+255),b
 13797  002AB8                     l12764:
 13798                           
 13799                           ; BSR set to: 0
 13800  002AB8  A19A               	btfss	___fladd@bexp& (0+255),0,b
 13801  002ABA  D002               	goto	l12768
 13802                           
 13803                           ; BSR set to: 0
 13804  002ABC  8F8E               	bsf	(___fladd@b+2)& (0+255),7,b
 13805  002ABE  D001               	goto	l12770
 13806  002AC0                     l12768:
 13807                           
 13808                           ; BSR set to: 0
 13809  002AC0  9F8E               	bcf	(___fladd@b+2)& (0+255),7,b
 13810  002AC2                     l12770:
 13811                           
 13812                           ; BSR set to: 0
 13813  002AC2  90D8               	bcf	status,0,c
 13814  002AC4  319A               	rrcf	___fladd@bexp& (0+255),w,b
 13815  002AC6  6F8F               	movwf	(___fladd@b+3)& (0+255),b
 13816                           
 13817                           ; BSR set to: 0
 13818  002AC8  BF98               	btfsc	___fladd@signs& (0+255),7,b
 13819                           
 13820                           ; BSR set to: 0
 13821  002ACA  8F8F               	bsf	(___fladd@b+3)& (0+255),7,b
 13822                           
 13823                           ; BSR set to: 0
 13824  002ACC  C08C  F08C         	movff	___fladd@b,?___fladd
 13825  002AD0  C08D  F08D         	movff	___fladd@b+1,?___fladd+1
 13826  002AD4  C08E  F08E         	movff	___fladd@b+2,?___fladd+2
 13827  002AD8  C08F  F08F         	movff	___fladd@b+3,?___fladd+3
 13828                           
 13829                           ; BSR set to: 0
 13830  002ADC  0012               	return		;funcret
 13831  002ADE                     __end_of___fladd:
 13832                           	callstack 0
 13833                           
 13834 ;; *************** function ___flneg *****************
 13835 ;; Defined at:
 13836 ;;		line 15 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;  f1              4   44[BANK0 ] unsigned char 
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;		None
 13841 ;; Return value:  Size  Location     Type
 13842 ;;                  4   44[BANK0 ] unsigned char 
 13843 ;; Registers used:
 13844 ;;		wreg, status,2, status,0
 13845 ;; Tracked objects:
 13846 ;;		On entry : 3F/1
 13847 ;;		On exit  : 3F/0
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13850 ;;      Params:         0       4       0       0       0       0       0       0       0
 13851 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13852 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13853 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13854 ;;Total ram usage:        4 bytes
 13855 ;; Hardware stack levels used: 1
 13856 ;; Hardware stack levels required when called: 10
 13857 ;; This function calls:
 13858 ;;		Nothing
 13859 ;; This function is called by:
 13860 ;;		_mover_2
 13861 ;;		_efgtoa
 13862 ;;		_strtof
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           	psect	text50
 13867  007976                     __ptext50:
 13868                           	callstack 0
 13869  007976                     ___flneg:
 13870                           	callstack 16
 13871                           
 13872                           ; BSR set to: 1
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;incstack = 0
 13876  007976  0100               	movlb	0	; () banked
 13877  007978  518C               	movf	___flneg@f1& (0+255),w,b
 13878  00797A  118D               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13879  00797C  118E               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13880  00797E  118F               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13881  007980  B4D8               	btfsc	status,2,c
 13882  007982  D008               	goto	l13278
 13883                           
 13884                           ; BSR set to: 0
 13885  007984  0E00               	movlw	0
 13886  007986  1B8C               	xorwf	___flneg@f1& (0+255),f,b
 13887  007988  0E00               	movlw	0
 13888  00798A  1B8D               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13889  00798C  0E00               	movlw	0
 13890  00798E  1B8E               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13891  007990  0E80               	movlw	128
 13892  007992  1B8F               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13893  007994                     l13278:
 13894                           
 13895                           ; BSR set to: 0
 13896  007994  C08C  F08C         	movff	___flneg@f1,?___flneg
 13897  007998  C08D  F08D         	movff	___flneg@f1+1,?___flneg+1
 13898  00799C  C08E  F08E         	movff	___flneg@f1+2,?___flneg+2
 13899  0079A0  C08F  F08F         	movff	___flneg@f1+3,?___flneg+3
 13900                           
 13901                           ; BSR set to: 0
 13902  0079A4  0012               	return		;funcret
 13903  0079A6                     __end_of___flneg:
 13904                           	callstack 0
 13905                           
 13906 ;; *************** function ___flmul *****************
 13907 ;; Defined at:
 13908 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;  b               4    0[BANK1 ] unsigned char 
 13911 ;;  a               4    4[BANK1 ] unsigned char 
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;  prod            4   19[BANK1 ] struct .
 13914 ;;  grs             4   15[BANK1 ] unsigned long 
 13915 ;;  temp            2   23[BANK1 ] struct .
 13916 ;;  bexp            1   14[BANK1 ] unsigned char 
 13917 ;;  aexp            1   13[BANK1 ] unsigned char 
 13918 ;;  sign            1   12[BANK1 ] unsigned char 
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  4    0[BANK1 ] unsigned char 
 13921 ;; Registers used:
 13922 ;;		wreg, status,2, status,0, prodl, prodh
 13923 ;; Tracked objects:
 13924 ;;		On entry : 3E/1
 13925 ;;		On exit  : 3F/1
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13928 ;;      Params:         0       0       8       0       0       0       0       0       0
 13929 ;;      Locals:         0       0      13       0       0       0       0       0       0
 13930 ;;      Temps:          0       0       4       0       0       0       0       0       0
 13931 ;;      Totals:         0       0      25       0       0       0       0       0       0
 13932 ;;Total ram usage:       25 bytes
 13933 ;; Hardware stack levels used: 1
 13934 ;; Hardware stack levels required when called: 10
 13935 ;; This function calls:
 13936 ;;		Nothing
 13937 ;; This function is called by:
 13938 ;;		_mover_2
 13939 ;;		_efgtoa
 13940 ;;		_strtof
 13941 ;; This function uses a non-reentrant model
 13942 ;;
 13943                           
 13944                           	psect	text51
 13945  002176                     __ptext51:
 13946                           	callstack 0
 13947  002176                     ___flmul:
 13948                           	callstack 16
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;incstack = 0
 13952  002176  0101               	movlb	1	; () banked
 13953  002178  5103               	movf	(___flmul@b+3)& (0+255),w,b
 13954  00217A  0B80               	andlw	128
 13955  00217C  6F0C               	movwf	___flmul@sign& (0+255),b
 13956  00217E  5103               	movf	(___flmul@b+3)& (0+255),w,b
 13957  002180  2503               	addwf	(___flmul@b+3)& (0+255),w,b
 13958  002182  6F0E               	movwf	___flmul@bexp& (0+255),b
 13959                           
 13960                           ; BSR set to: 1
 13961  002184  BF02               	btfsc	(___flmul@b+2)& (0+255),7,b
 13962                           
 13963                           ; BSR set to: 1
 13964  002186  810E               	bsf	___flmul@bexp& (0+255),0,b
 13965                           
 13966                           ; BSR set to: 1
 13967  002188  510E               	movf	___flmul@bexp& (0+255),w,b
 13968  00218A  B4D8               	btfsc	status,2,c
 13969  00218C  D00D               	goto	l13034
 13970                           
 13971                           ; BSR set to: 1
 13972  00218E  290E               	incf	___flmul@bexp& (0+255),w,b
 13973  002190  A4D8               	btfss	status,2,c
 13974  002192  D008               	goto	l13032
 13975                           
 13976                           ; BSR set to: 1
 13977  002194  0E00               	movlw	0
 13978  002196  6F00               	movwf	___flmul@b& (0+255),b
 13979  002198  0E00               	movlw	0
 13980  00219A  6F01               	movwf	(___flmul@b+1)& (0+255),b
 13981  00219C  0E00               	movlw	0
 13982  00219E  6F02               	movwf	(___flmul@b+2)& (0+255),b
 13983  0021A0  0E00               	movlw	0
 13984  0021A2  6F03               	movwf	(___flmul@b+3)& (0+255),b
 13985  0021A4                     l13032:
 13986                           
 13987                           ; BSR set to: 1
 13988  0021A4  8F02               	bsf	(___flmul@b+2)& (0+255),7,b
 13989  0021A6  D008               	goto	l13036
 13990  0021A8                     l13034:
 13991                           
 13992                           ; BSR set to: 1
 13993  0021A8  0E00               	movlw	0
 13994  0021AA  6F00               	movwf	___flmul@b& (0+255),b
 13995  0021AC  0E00               	movlw	0
 13996  0021AE  6F01               	movwf	(___flmul@b+1)& (0+255),b
 13997  0021B0  0E00               	movlw	0
 13998  0021B2  6F02               	movwf	(___flmul@b+2)& (0+255),b
 13999  0021B4  0E00               	movlw	0
 14000  0021B6  6F03               	movwf	(___flmul@b+3)& (0+255),b
 14001  0021B8                     l13036:
 14002                           
 14003                           ; BSR set to: 1
 14004  0021B8  5107               	movf	(___flmul@a+3)& (0+255),w,b
 14005  0021BA  0B80               	andlw	128
 14006  0021BC  1B0C               	xorwf	___flmul@sign& (0+255),f,b
 14007                           
 14008                           ; BSR set to: 1
 14009  0021BE  5107               	movf	(___flmul@a+3)& (0+255),w,b
 14010  0021C0  2507               	addwf	(___flmul@a+3)& (0+255),w,b
 14011  0021C2  6F0D               	movwf	___flmul@aexp& (0+255),b
 14012                           
 14013                           ; BSR set to: 1
 14014  0021C4  BF06               	btfsc	(___flmul@a+2)& (0+255),7,b
 14015                           
 14016                           ; BSR set to: 1
 14017  0021C6  810D               	bsf	___flmul@aexp& (0+255),0,b
 14018                           
 14019                           ; BSR set to: 1
 14020  0021C8  510D               	movf	___flmul@aexp& (0+255),w,b
 14021  0021CA  B4D8               	btfsc	status,2,c
 14022  0021CC  D00D               	goto	l13052
 14023                           
 14024                           ; BSR set to: 1
 14025  0021CE  290D               	incf	___flmul@aexp& (0+255),w,b
 14026  0021D0  A4D8               	btfss	status,2,c
 14027  0021D2  D008               	goto	l13050
 14028                           
 14029                           ; BSR set to: 1
 14030  0021D4  0E00               	movlw	0
 14031  0021D6  6F04               	movwf	___flmul@a& (0+255),b
 14032  0021D8  0E00               	movlw	0
 14033  0021DA  6F05               	movwf	(___flmul@a+1)& (0+255),b
 14034  0021DC  0E00               	movlw	0
 14035  0021DE  6F06               	movwf	(___flmul@a+2)& (0+255),b
 14036  0021E0  0E00               	movlw	0
 14037  0021E2  6F07               	movwf	(___flmul@a+3)& (0+255),b
 14038  0021E4                     l13050:
 14039                           
 14040                           ; BSR set to: 1
 14041  0021E4  8F06               	bsf	(___flmul@a+2)& (0+255),7,b
 14042  0021E6  D008               	goto	l2082
 14043  0021E8                     l13052:
 14044                           
 14045                           ; BSR set to: 1
 14046  0021E8  0E00               	movlw	0
 14047  0021EA  6F04               	movwf	___flmul@a& (0+255),b
 14048  0021EC  0E00               	movlw	0
 14049  0021EE  6F05               	movwf	(___flmul@a+1)& (0+255),b
 14050  0021F0  0E00               	movlw	0
 14051  0021F2  6F06               	movwf	(___flmul@a+2)& (0+255),b
 14052  0021F4  0E00               	movlw	0
 14053  0021F6  6F07               	movwf	(___flmul@a+3)& (0+255),b
 14054  0021F8                     l2082:
 14055                           
 14056                           ; BSR set to: 1
 14057  0021F8  510D               	movf	___flmul@aexp& (0+255),w,b
 14058  0021FA  B4D8               	btfsc	status,2,c
 14059  0021FC  D003               	goto	u15270
 14060                           
 14061                           ; BSR set to: 1
 14062  0021FE  510E               	movf	___flmul@bexp& (0+255),w,b
 14063  002200  A4D8               	btfss	status,2,c
 14064  002202  D009               	goto	l13060
 14065  002204                     u15270:
 14066                           
 14067                           ; BSR set to: 1
 14068  002204  0E00               	movlw	0
 14069  002206  6F00               	movwf	?___flmul& (0+255),b
 14070  002208  0E00               	movlw	0
 14071  00220A  6F01               	movwf	(?___flmul+1)& (0+255),b
 14072  00220C  0E00               	movlw	0
 14073  00220E  6F02               	movwf	(?___flmul+2)& (0+255),b
 14074  002210  0E00               	movlw	0
 14075  002212  6F03               	movwf	(?___flmul+3)& (0+255),b
 14076  002214  0012               	return	
 14077  002216                     l13060:
 14078                           
 14079                           ; BSR set to: 1
 14080  002216  5106               	movf	(___flmul@a+2)& (0+255),w,b
 14081  002218  0300               	mulwf	___flmul@b& (0+255),b
 14082  00221A  CFF3 F117          	movff	prodl,___flmul@temp
 14083  00221E  CFF4 F118          	movff	prodh,___flmul@temp+1
 14084                           
 14085                           ; BSR set to: 1
 14086  002222  5117               	movf	___flmul@temp& (0+255),w,b
 14087  002224  6F0F               	movwf	___flmul@grs& (0+255),b
 14088  002226  6B10               	clrf	(___flmul@grs+1)& (0+255),b
 14089  002228  6B11               	clrf	(___flmul@grs+2)& (0+255),b
 14090  00222A  6B12               	clrf	(___flmul@grs+3)& (0+255),b
 14091                           
 14092                           ; BSR set to: 1
 14093  00222C  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14094  00222E  6F13               	movwf	___flmul@prod& (0+255),b
 14095  002230  6B14               	clrf	(___flmul@prod+1)& (0+255),b
 14096  002232  6B15               	clrf	(___flmul@prod+2)& (0+255),b
 14097  002234  6B16               	clrf	(___flmul@prod+3)& (0+255),b
 14098  002236  5105               	movf	(___flmul@a+1)& (0+255),w,b
 14099  002238  0301               	mulwf	(___flmul@b+1)& (0+255),b
 14100  00223A  CFF3 F117          	movff	prodl,___flmul@temp
 14101  00223E  CFF4 F118          	movff	prodh,___flmul@temp+1
 14102                           
 14103                           ; BSR set to: 1
 14104  002242  5117               	movf	___flmul@temp& (0+255),w,b
 14105  002244  270F               	addwf	___flmul@grs& (0+255),f,b
 14106  002246  0E00               	movlw	0
 14107  002248  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14108  00224A  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14109  00224C  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14110                           
 14111                           ; BSR set to: 1
 14112  00224E  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14113  002250  2713               	addwf	___flmul@prod& (0+255),f,b
 14114  002252  0E00               	movlw	0
 14115  002254  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14116  002256  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14117  002258  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14118  00225A  5104               	movf	___flmul@a& (0+255),w,b
 14119  00225C  0302               	mulwf	(___flmul@b+2)& (0+255),b
 14120  00225E  CFF3 F117          	movff	prodl,___flmul@temp
 14121  002262  CFF4 F118          	movff	prodh,___flmul@temp+1
 14122                           
 14123                           ; BSR set to: 1
 14124  002266  5117               	movf	___flmul@temp& (0+255),w,b
 14125  002268  270F               	addwf	___flmul@grs& (0+255),f,b
 14126  00226A  0E00               	movlw	0
 14127  00226C  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14128  00226E  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14129  002270  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14130                           
 14131                           ; BSR set to: 1
 14132  002272  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14133  002274  2713               	addwf	___flmul@prod& (0+255),f,b
 14134  002276  0E00               	movlw	0
 14135  002278  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14136  00227A  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14137  00227C  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14138                           
 14139                           ; BSR set to: 1
 14140  00227E  C111  F112         	movff	___flmul@grs+2,___flmul@grs+3
 14141  002282  C110  F111         	movff	___flmul@grs+1,___flmul@grs+2
 14142  002286  C10F  F110         	movff	___flmul@grs,___flmul@grs+1
 14143  00228A  6B0F               	clrf	___flmul@grs& (0+255),b
 14144                           
 14145                           ; BSR set to: 1
 14146  00228C  5104               	movf	___flmul@a& (0+255),w,b
 14147  00228E  0301               	mulwf	(___flmul@b+1)& (0+255),b
 14148  002290  CFF3 F117          	movff	prodl,___flmul@temp
 14149  002294  CFF4 F118          	movff	prodh,___flmul@temp+1
 14150                           
 14151                           ; BSR set to: 1
 14152  002298  5117               	movf	___flmul@temp& (0+255),w,b
 14153  00229A  270F               	addwf	___flmul@grs& (0+255),f,b
 14154  00229C  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14155  00229E  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14156  0022A0  0E00               	movlw	0
 14157  0022A2  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14158  0022A4  0E00               	movlw	0
 14159  0022A6  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14160                           
 14161                           ; BSR set to: 1
 14162  0022A8  5105               	movf	(___flmul@a+1)& (0+255),w,b
 14163  0022AA  0300               	mulwf	___flmul@b& (0+255),b
 14164  0022AC  CFF3 F117          	movff	prodl,___flmul@temp
 14165  0022B0  CFF4 F118          	movff	prodh,___flmul@temp+1
 14166                           
 14167                           ; BSR set to: 1
 14168  0022B4  5117               	movf	___flmul@temp& (0+255),w,b
 14169  0022B6  270F               	addwf	___flmul@grs& (0+255),f,b
 14170  0022B8  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14171  0022BA  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14172  0022BC  0E00               	movlw	0
 14173  0022BE  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14174  0022C0  0E00               	movlw	0
 14175  0022C2  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14176                           
 14177                           ; BSR set to: 1
 14178  0022C4  C111  F112         	movff	___flmul@grs+2,___flmul@grs+3
 14179  0022C8  C110  F111         	movff	___flmul@grs+1,___flmul@grs+2
 14180  0022CC  C10F  F110         	movff	___flmul@grs,___flmul@grs+1
 14181  0022D0  6B0F               	clrf	___flmul@grs& (0+255),b
 14182  0022D2  5104               	movf	___flmul@a& (0+255),w,b
 14183  0022D4  0300               	mulwf	___flmul@b& (0+255),b
 14184  0022D6  CFF3 F117          	movff	prodl,___flmul@temp
 14185  0022DA  CFF4 F118          	movff	prodh,___flmul@temp+1
 14186                           
 14187                           ; BSR set to: 1
 14188  0022DE  5117               	movf	___flmul@temp& (0+255),w,b
 14189  0022E0  270F               	addwf	___flmul@grs& (0+255),f,b
 14190  0022E2  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14191  0022E4  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14192  0022E6  0E00               	movlw	0
 14193  0022E8  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14194  0022EA  0E00               	movlw	0
 14195  0022EC  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14196                           
 14197                           ; BSR set to: 1
 14198  0022EE  5106               	movf	(___flmul@a+2)& (0+255),w,b
 14199  0022F0  0301               	mulwf	(___flmul@b+1)& (0+255),b
 14200  0022F2  CFF3 F117          	movff	prodl,___flmul@temp
 14201  0022F6  CFF4 F118          	movff	prodh,___flmul@temp+1
 14202  0022FA  5117               	movf	___flmul@temp& (0+255),w,b
 14203  0022FC  2713               	addwf	___flmul@prod& (0+255),f,b
 14204  0022FE  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14205  002300  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14206  002302  0E00               	movlw	0
 14207  002304  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14208  002306  0E00               	movlw	0
 14209  002308  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14210                           
 14211                           ; BSR set to: 1
 14212  00230A  5105               	movf	(___flmul@a+1)& (0+255),w,b
 14213  00230C  0302               	mulwf	(___flmul@b+2)& (0+255),b
 14214  00230E  CFF3 F117          	movff	prodl,___flmul@temp
 14215  002312  CFF4 F118          	movff	prodh,___flmul@temp+1
 14216                           
 14217                           ; BSR set to: 1
 14218  002316  5117               	movf	___flmul@temp& (0+255),w,b
 14219  002318  2713               	addwf	___flmul@prod& (0+255),f,b
 14220  00231A  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14221  00231C  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14222  00231E  0E00               	movlw	0
 14223  002320  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14224  002322  0E00               	movlw	0
 14225  002324  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14226  002326  5106               	movf	(___flmul@a+2)& (0+255),w,b
 14227  002328  0302               	mulwf	(___flmul@b+2)& (0+255),b
 14228  00232A  CFF3 F117          	movff	prodl,___flmul@temp
 14229  00232E  CFF4 F118          	movff	prodh,___flmul@temp+1
 14230                           
 14231                           ; BSR set to: 1
 14232  002332  5117               	movf	___flmul@temp& (0+255),w,b
 14233  002334  6F08               	movwf	??___flmul& (0+255),b
 14234  002336  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14235  002338  6F09               	movwf	(??___flmul+1)& (0+255),b
 14236  00233A  6B0A               	clrf	(??___flmul+2)& (0+255),b
 14237  00233C  6B0B               	clrf	(??___flmul+3)& (0+255),b
 14238  00233E  C10A  F10B         	movff	??___flmul+2,??___flmul+3
 14239  002342  C109  F10A         	movff	??___flmul+1,??___flmul+2
 14240  002346  C108  F109         	movff	??___flmul,??___flmul+1
 14241  00234A  6B08               	clrf	??___flmul& (0+255),b
 14242  00234C  5108               	movf	??___flmul& (0+255),w,b
 14243  00234E  2713               	addwf	___flmul@prod& (0+255),f,b
 14244  002350  5109               	movf	(??___flmul+1)& (0+255),w,b
 14245  002352  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14246  002354  510A               	movf	(??___flmul+2)& (0+255),w,b
 14247  002356  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14248  002358  510B               	movf	(??___flmul+3)& (0+255),w,b
 14249  00235A  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14250                           
 14251                           ; BSR set to: 1
 14252  00235C  5112               	movf	(___flmul@grs+3)& (0+255),w,b
 14253  00235E  2713               	addwf	___flmul@prod& (0+255),f,b
 14254  002360  0E00               	movlw	0
 14255  002362  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14256  002364  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14257  002366  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14258                           
 14259                           ; BSR set to: 1
 14260  002368  C111  F112         	movff	___flmul@grs+2,___flmul@grs+3
 14261  00236C  C110  F111         	movff	___flmul@grs+1,___flmul@grs+2
 14262  002370  C10F  F110         	movff	___flmul@grs,___flmul@grs+1
 14263  002374  6B0F               	clrf	___flmul@grs& (0+255),b
 14264                           
 14265                           ; BSR set to: 1
 14266  002376  510D               	movf	___flmul@aexp& (0+255),w,b
 14267  002378  C10E  F108         	movff	___flmul@bexp,??___flmul
 14268  00237C  6B09               	clrf	(??___flmul+1)& (0+255),b
 14269  00237E  2708               	addwf	??___flmul& (0+255),f,b
 14270  002380  0E00               	movlw	0
 14271  002382  2309               	addwfc	(??___flmul+1)& (0+255),f,b
 14272  002384  0E82               	movlw	130
 14273  002386  2508               	addwf	??___flmul& (0+255),w,b
 14274  002388  6F17               	movwf	___flmul@temp& (0+255),b
 14275  00238A  0EFF               	movlw	255
 14276  00238C  2109               	addwfc	(??___flmul+1)& (0+255),w,b
 14277  00238E  6F18               	movwf	(___flmul@temp+1)& (0+255),b
 14278  002390  D00F               	goto	l13108
 14279  002392                     l13102:
 14280                           
 14281                           ; BSR set to: 1
 14282  002392  90D8               	bcf	status,0,c
 14283  002394  3713               	rlcf	___flmul@prod& (0+255),f,b
 14284  002396  3714               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14285  002398  3715               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14286  00239A  3716               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14287                           
 14288                           ; BSR set to: 1
 14289  00239C  BF12               	btfsc	(___flmul@grs+3)& (0+255),7,b
 14290                           
 14291                           ; BSR set to: 1
 14292  00239E  8113               	bsf	___flmul@prod& (0+255),0,b
 14293                           
 14294                           ; BSR set to: 1
 14295  0023A0  90D8               	bcf	status,0,c
 14296  0023A2  370F               	rlcf	___flmul@grs& (0+255),f,b
 14297  0023A4  3710               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14298  0023A6  3711               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14299  0023A8  3712               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14300  0023AA  0717               	decf	___flmul@temp& (0+255),f,b
 14301  0023AC  A0D8               	btfss	status,0,c
 14302  0023AE  0718               	decf	(___flmul@temp+1)& (0+255),f,b
 14303  0023B0                     l13108:
 14304                           
 14305                           ; BSR set to: 1
 14306  0023B0  AF15               	btfss	(___flmul@prod+2)& (0+255),7,b
 14307  0023B2  D7EF               	goto	l13102
 14308                           
 14309                           ; BSR set to: 1
 14310  0023B4  0E00               	movlw	0
 14311  0023B6  6F0D               	movwf	___flmul@aexp& (0+255),b
 14312                           
 14313                           ; BSR set to: 1
 14314  0023B8  AF12               	btfss	(___flmul@grs+3)& (0+255),7,b
 14315  0023BA  D017               	goto	l2091
 14316                           
 14317                           ; BSR set to: 1
 14318  0023BC  0EFF               	movlw	255
 14319  0023BE  150F               	andwf	___flmul@grs& (0+255),w,b
 14320  0023C0  6F08               	movwf	??___flmul& (0+255),b
 14321  0023C2  0EFF               	movlw	255
 14322  0023C4  1510               	andwf	(___flmul@grs+1)& (0+255),w,b
 14323  0023C6  6F09               	movwf	(??___flmul+1)& (0+255),b
 14324  0023C8  0EFF               	movlw	255
 14325  0023CA  1511               	andwf	(___flmul@grs+2)& (0+255),w,b
 14326  0023CC  6F0A               	movwf	(??___flmul+2)& (0+255),b
 14327  0023CE  0E7F               	movlw	127
 14328  0023D0  1512               	andwf	(___flmul@grs+3)& (0+255),w,b
 14329  0023D2  6F0B               	movwf	(??___flmul+3)& (0+255),b
 14330  0023D4  5108               	movf	??___flmul& (0+255),w,b
 14331  0023D6  1109               	iorwf	(??___flmul+1)& (0+255),w,b
 14332  0023D8  110A               	iorwf	(??___flmul+2)& (0+255),w,b
 14333  0023DA  110B               	iorwf	(??___flmul+3)& (0+255),w,b
 14334  0023DC  B4D8               	btfsc	status,2,c
 14335  0023DE  D003               	goto	l2092
 14336  0023E0                     u15310:
 14337                           
 14338                           ; BSR set to: 1
 14339  0023E0  0E01               	movlw	1
 14340  0023E2  6F0D               	movwf	___flmul@aexp& (0+255),b
 14341  0023E4  D002               	goto	l2091
 14342  0023E6                     l2092:
 14343                           
 14344                           ; BSR set to: 1
 14345  0023E6  B113               	btfsc	___flmul@prod& (0+255),0,b
 14346  0023E8  D7FB               	goto	u15310
 14347  0023EA                     l2091:
 14348                           
 14349                           ; BSR set to: 1
 14350  0023EA  510D               	movf	___flmul@aexp& (0+255),w,b
 14351  0023EC  B4D8               	btfsc	status,2,c
 14352  0023EE  D01F               	goto	l13128
 14353                           
 14354                           ; BSR set to: 1
 14355  0023F0  0E01               	movlw	1
 14356  0023F2  2713               	addwf	___flmul@prod& (0+255),f,b
 14357  0023F4  0E00               	movlw	0
 14358  0023F6  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14359  0023F8  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14360  0023FA  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14361                           
 14362                           ; BSR set to: 1
 14363  0023FC  A116               	btfss	(___flmul@prod+3)& (0+255),0,b
 14364  0023FE  D017               	goto	l13128
 14365                           
 14366                           ; BSR set to: 1
 14367  002400  C113  F108         	movff	___flmul@prod,??___flmul
 14368  002404  C114  F109         	movff	___flmul@prod+1,??___flmul+1
 14369  002408  C115  F10A         	movff	___flmul@prod+2,??___flmul+2
 14370  00240C  C116  F10B         	movff	___flmul@prod+3,??___flmul+3
 14371  002410  350B               	rlcf	(??___flmul+3)& (0+255),w,b
 14372  002412  330B               	rrcf	(??___flmul+3)& (0+255),f,b
 14373  002414  330A               	rrcf	(??___flmul+2)& (0+255),f,b
 14374  002416  3309               	rrcf	(??___flmul+1)& (0+255),f,b
 14375  002418  3308               	rrcf	??___flmul& (0+255),f,b
 14376  00241A  C108  F113         	movff	??___flmul,___flmul@prod
 14377  00241E  C109  F114         	movff	??___flmul+1,___flmul@prod+1
 14378  002422  C10A  F115         	movff	??___flmul+2,___flmul@prod+2
 14379  002426  C10B  F116         	movff	??___flmul+3,___flmul@prod+3
 14380                           
 14381                           ; BSR set to: 1
 14382  00242A  4B17               	infsnz	___flmul@temp& (0+255),f,b
 14383  00242C  2B18               	incf	(___flmul@temp+1)& (0+255),f,b
 14384  00242E                     l13128:
 14385                           
 14386                           ; BSR set to: 1
 14387  00242E  BF18               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14388  002430  D00D               	goto	l13132
 14389  002432  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14390  002434  E103               	bnz	u15350
 14391  002436  2917               	incf	___flmul@temp& (0+255),w,b
 14392  002438  A0D8               	btfss	status,0,c
 14393  00243A  D008               	goto	l13132
 14394  00243C                     u15350:
 14395                           
 14396                           ; BSR set to: 1
 14397  00243C  0E00               	movlw	0
 14398  00243E  6F13               	movwf	___flmul@prod& (0+255),b
 14399  002440  0E00               	movlw	0
 14400  002442  6F14               	movwf	(___flmul@prod+1)& (0+255),b
 14401  002444  0E80               	movlw	128
 14402  002446  6F15               	movwf	(___flmul@prod+2)& (0+255),b
 14403  002448  0E7F               	movlw	127
 14404  00244A  D020               	goto	L15
 14405  00244C                     l13132:
 14406                           
 14407                           ; BSR set to: 1
 14408  00244C  BF18               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14409  00244E  D005               	goto	u15360
 14410  002450  5118               	movf	(___flmul@temp+1)& (0+255),w,b
 14411  002452  E10E               	bnz	l2099
 14412  002454  0517               	decf	___flmul@temp& (0+255),w,b
 14413  002456  B0D8               	btfsc	status,0,c
 14414  002458  D00B               	goto	l2099
 14415  00245A                     u15360:
 14416                           
 14417                           ; BSR set to: 1
 14418  00245A  0E00               	movlw	0
 14419  00245C  6F13               	movwf	___flmul@prod& (0+255),b
 14420  00245E  0E00               	movlw	0
 14421  002460  6F14               	movwf	(___flmul@prod+1)& (0+255),b
 14422  002462  0E00               	movlw	0
 14423  002464  6F15               	movwf	(___flmul@prod+2)& (0+255),b
 14424  002466  0E00               	movlw	0
 14425  002468  6F16               	movwf	(___flmul@prod+3)& (0+255),b
 14426  00246A  0E00               	movlw	0
 14427  00246C  6F0C               	movwf	___flmul@sign& (0+255),b
 14428  00246E  D00F               	goto	l13144
 14429  002470                     l2099:
 14430                           
 14431                           ; BSR set to: 1
 14432  002470  C117  F10E         	movff	___flmul@temp,___flmul@bexp
 14433                           
 14434                           ; BSR set to: 1
 14435  002474  0EFF               	movlw	255
 14436  002476  1713               	andwf	___flmul@prod& (0+255),f,b
 14437  002478  0EFF               	movlw	255
 14438  00247A  1714               	andwf	(___flmul@prod+1)& (0+255),f,b
 14439  00247C  0E7F               	movlw	127
 14440  00247E  1715               	andwf	(___flmul@prod+2)& (0+255),f,b
 14441  002480  0E00               	movlw	0
 14442  002482  1716               	andwf	(___flmul@prod+3)& (0+255),f,b
 14443                           
 14444                           ; BSR set to: 1
 14445  002484  B10E               	btfsc	___flmul@bexp& (0+255),0,b
 14446                           
 14447                           ; BSR set to: 1
 14448  002486  8F15               	bsf	(___flmul@prod+2)& (0+255),7,b
 14449                           
 14450                           ; BSR set to: 1
 14451  002488  90D8               	bcf	status,0,c
 14452  00248A  310E               	rrcf	___flmul@bexp& (0+255),w,b
 14453  00248C                     L15:
 14454  00248C  6F16               	movwf	(___flmul@prod+3)& (0+255),b
 14455  00248E                     l13144:
 14456                           
 14457                           ; BSR set to: 1
 14458  00248E  510C               	movf	___flmul@sign& (0+255),w,b
 14459  002490  1316               	iorwf	(___flmul@prod+3)& (0+255),f,b
 14460                           
 14461                           ; BSR set to: 1
 14462  002492  C113  F100         	movff	___flmul@prod,?___flmul
 14463  002496  C114  F101         	movff	___flmul@prod+1,?___flmul+1
 14464  00249A  C115  F102         	movff	___flmul@prod+2,?___flmul+2
 14465  00249E  C116  F103         	movff	___flmul@prod+3,?___flmul+3
 14466                           
 14467                           ; BSR set to: 1
 14468  0024A2  0012               	return		;funcret
 14469  0024A4                     __end_of___flmul:
 14470                           	callstack 0
 14471                           
 14472 ;; *************** function ___flge *****************
 14473 ;; Defined at:
 14474 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;  ff1             4   25[BANK1 ] unsigned char 
 14477 ;;  ff2             4   29[BANK1 ] unsigned char 
 14478 ;; Auto vars:     Size  Location     Type
 14479 ;;		None
 14480 ;; Return value:  Size  Location     Type
 14481 ;;		None               void
 14482 ;; Registers used:
 14483 ;;		wreg, status,2, status,0
 14484 ;; Tracked objects:
 14485 ;;		On entry : 3F/1
 14486 ;;		On exit  : 3F/1
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14489 ;;      Params:         0       0       8       0       0       0       0       0       0
 14490 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14491 ;;      Temps:          0       0       4       0       0       0       0       0       0
 14492 ;;      Totals:         0       0      12       0       0       0       0       0       0
 14493 ;;Total ram usage:       12 bytes
 14494 ;; Hardware stack levels used: 1
 14495 ;; Hardware stack levels required when called: 10
 14496 ;; This function calls:
 14497 ;;		Nothing
 14498 ;; This function is called by:
 14499 ;;		_mover_2
 14500 ;;		_efgtoa
 14501 ;;		_strtof
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text52
 14506  006046                     __ptext52:
 14507                           	callstack 0
 14508  006046                     ___flge:
 14509                           	callstack 16
 14510                           
 14511                           ; BSR set to: 1
 14512                           
 14513                           ; BSR set to: 1
 14514                           ;incstack = 0
 14515  006046  0E00               	movlw	0
 14516  006048  1519               	andwf	___flge@ff1& (0+255),w,b
 14517  00604A  6F21               	movwf	??___flge& (0+255),b
 14518  00604C  0E00               	movlw	0
 14519  00604E  151A               	andwf	(___flge@ff1+1)& (0+255),w,b
 14520  006050  6F22               	movwf	(??___flge+1)& (0+255),b
 14521  006052  0E80               	movlw	128
 14522  006054  151B               	andwf	(___flge@ff1+2)& (0+255),w,b
 14523  006056  6F23               	movwf	(??___flge+2)& (0+255),b
 14524  006058  0E7F               	movlw	127
 14525  00605A  151C               	andwf	(___flge@ff1+3)& (0+255),w,b
 14526  00605C  6F24               	movwf	(??___flge+3)& (0+255),b
 14527  00605E  5121               	movf	??___flge& (0+255),w,b
 14528  006060  1122               	iorwf	(??___flge+1)& (0+255),w,b
 14529  006062  1123               	iorwf	(??___flge+2)& (0+255),w,b
 14530  006064  1124               	iorwf	(??___flge+3)& (0+255),w,b
 14531  006066  A4D8               	btfss	status,2,c
 14532  006068  D008               	goto	l13256
 14533                           
 14534                           ; BSR set to: 1
 14535  00606A  0E00               	movlw	0
 14536  00606C  6F19               	movwf	___flge@ff1& (0+255),b
 14537  00606E  0E00               	movlw	0
 14538  006070  6F1A               	movwf	(___flge@ff1+1)& (0+255),b
 14539  006072  0E00               	movlw	0
 14540  006074  6F1B               	movwf	(___flge@ff1+2)& (0+255),b
 14541  006076  0E00               	movlw	0
 14542  006078  6F1C               	movwf	(___flge@ff1+3)& (0+255),b
 14543  00607A                     l13256:
 14544                           
 14545                           ; BSR set to: 1
 14546  00607A  0E00               	movlw	0
 14547  00607C  151D               	andwf	___flge@ff2& (0+255),w,b
 14548  00607E  6F21               	movwf	??___flge& (0+255),b
 14549  006080  0E00               	movlw	0
 14550  006082  151E               	andwf	(___flge@ff2+1)& (0+255),w,b
 14551  006084  6F22               	movwf	(??___flge+1)& (0+255),b
 14552  006086  0E80               	movlw	128
 14553  006088  151F               	andwf	(___flge@ff2+2)& (0+255),w,b
 14554  00608A  6F23               	movwf	(??___flge+2)& (0+255),b
 14555  00608C  0E7F               	movlw	127
 14556  00608E  1520               	andwf	(___flge@ff2+3)& (0+255),w,b
 14557  006090  6F24               	movwf	(??___flge+3)& (0+255),b
 14558  006092  5121               	movf	??___flge& (0+255),w,b
 14559  006094  1122               	iorwf	(??___flge+1)& (0+255),w,b
 14560  006096  1123               	iorwf	(??___flge+2)& (0+255),w,b
 14561  006098  1124               	iorwf	(??___flge+3)& (0+255),w,b
 14562  00609A  A4D8               	btfss	status,2,c
 14563  00609C  D008               	goto	l13260
 14564                           
 14565                           ; BSR set to: 1
 14566  00609E  0E00               	movlw	0
 14567  0060A0  6F1D               	movwf	___flge@ff2& (0+255),b
 14568  0060A2  0E00               	movlw	0
 14569  0060A4  6F1E               	movwf	(___flge@ff2+1)& (0+255),b
 14570  0060A6  0E00               	movlw	0
 14571  0060A8  6F1F               	movwf	(___flge@ff2+2)& (0+255),b
 14572  0060AA  0E00               	movlw	0
 14573  0060AC  6F20               	movwf	(___flge@ff2+3)& (0+255),b
 14574  0060AE                     l13260:
 14575                           
 14576                           ; BSR set to: 1
 14577  0060AE  AF1C               	btfss	(___flge@ff1+3)& (0+255),7,b
 14578  0060B0  D009               	goto	l13264
 14579                           
 14580                           ; BSR set to: 1
 14581  0060B2  6D19               	negf	___flge@ff1& (0+255),b
 14582  0060B4  1F1A               	comf	(___flge@ff1+1)& (0+255),f,b
 14583  0060B6  B0D8               	btfsc	status,0,c
 14584  0060B8  2B1A               	incf	(___flge@ff1+1)& (0+255),f,b
 14585  0060BA  1F1B               	comf	(___flge@ff1+2)& (0+255),f,b
 14586  0060BC  B0D8               	btfsc	status,0,c
 14587  0060BE  2B1B               	incf	(___flge@ff1+2)& (0+255),f,b
 14588  0060C0  0E80               	movlw	128
 14589  0060C2  571C               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14590  0060C4                     l13264:
 14591                           
 14592                           ; BSR set to: 1
 14593  0060C4  AF20               	btfss	(___flge@ff2+3)& (0+255),7,b
 14594  0060C6  D009               	goto	l1733
 14595                           
 14596                           ; BSR set to: 1
 14597  0060C8  6D1D               	negf	___flge@ff2& (0+255),b
 14598  0060CA  1F1E               	comf	(___flge@ff2+1)& (0+255),f,b
 14599  0060CC  B0D8               	btfsc	status,0,c
 14600  0060CE  2B1E               	incf	(___flge@ff2+1)& (0+255),f,b
 14601  0060D0  1F1F               	comf	(___flge@ff2+2)& (0+255),f,b
 14602  0060D2  B0D8               	btfsc	status,0,c
 14603  0060D4  2B1F               	incf	(___flge@ff2+2)& (0+255),f,b
 14604  0060D6  0E80               	movlw	128
 14605  0060D8  5720               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14606  0060DA                     l1733:
 14607                           
 14608                           ; BSR set to: 1
 14609  0060DA  0E00               	movlw	0
 14610  0060DC  1B19               	xorwf	___flge@ff1& (0+255),f,b
 14611  0060DE  0E00               	movlw	0
 14612  0060E0  1B1A               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14613  0060E2  0E00               	movlw	0
 14614  0060E4  1B1B               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14615  0060E6  0E80               	movlw	128
 14616  0060E8  1B1C               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14617  0060EA  0E00               	movlw	0
 14618  0060EC  1B1D               	xorwf	___flge@ff2& (0+255),f,b
 14619  0060EE  0E00               	movlw	0
 14620  0060F0  1B1E               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14621  0060F2  0E00               	movlw	0
 14622  0060F4  1B1F               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14623  0060F6  0E80               	movlw	128
 14624  0060F8  1B20               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14625  0060FA  511D               	movf	___flge@ff2& (0+255),w,b
 14626  0060FC  5D19               	subwf	___flge@ff1& (0+255),w,b
 14627  0060FE  511E               	movf	(___flge@ff2+1)& (0+255),w,b
 14628  006100  591A               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14629  006102  511F               	movf	(___flge@ff2+2)& (0+255),w,b
 14630  006104  591B               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14631  006106  5120               	movf	(___flge@ff2+3)& (0+255),w,b
 14632  006108  591C               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14633  00610A  B0D8               	btfsc	status,0,c
 14634  00610C  D002               	goto	l13270
 14635                           
 14636                           ; BSR set to: 1
 14637  00610E  90D8               	bcf	status,0,c
 14638  006110  0012               	return	
 14639  006112                     l13270:
 14640                           
 14641                           ; BSR set to: 1
 14642  006112  80D8               	bsf	status,0,c
 14643                           
 14644                           ; BSR set to: 1
 14645  006114  0012               	return		;funcret
 14646  006116                     __end_of___flge:
 14647                           	callstack 0
 14648                           
 14649 ;; *************** function ___fleq *****************
 14650 ;; Defined at:
 14651 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;  ff1             4   44[BANK0 ] unsigned char 
 14654 ;;  ff2             4   48[BANK0 ] unsigned char 
 14655 ;; Auto vars:     Size  Location     Type
 14656 ;;		None
 14657 ;; Return value:  Size  Location     Type
 14658 ;;		None               void
 14659 ;; Registers used:
 14660 ;;		wreg, status,2, status,0
 14661 ;; Tracked objects:
 14662 ;;		On entry : 3E/0
 14663 ;;		On exit  : 3F/0
 14664 ;;		Unchanged: 0/0
 14665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14666 ;;      Params:         0       8       0       0       0       0       0       0       0
 14667 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14668 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14669 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14670 ;;Total ram usage:       12 bytes
 14671 ;; Hardware stack levels used: 1
 14672 ;; Hardware stack levels required when called: 10
 14673 ;; This function calls:
 14674 ;;		Nothing
 14675 ;; This function is called by:
 14676 ;;		_G_97
 14677 ;;		_mover_2
 14678 ;;		_efgtoa
 14679 ;;		_strtof
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683                           	psect	text53
 14684  006E76                     __ptext53:
 14685                           	callstack 0
 14686  006E76                     ___fleq:
 14687                           	callstack 16
 14688                           
 14689                           ; BSR set to: 1
 14690                           ;incstack = 0
 14691  006E76  0E00               	movlw	0
 14692  006E78  0100               	movlb	0	; () banked
 14693  006E7A  158C               	andwf	___fleq@ff1& (0+255),w,b
 14694  006E7C  6F94               	movwf	??___fleq& (0+255),b
 14695  006E7E  0E00               	movlw	0
 14696  006E80  158D               	andwf	(___fleq@ff1+1)& (0+255),w,b
 14697  006E82  6F95               	movwf	(??___fleq+1)& (0+255),b
 14698  006E84  0E80               	movlw	128
 14699  006E86  158E               	andwf	(___fleq@ff1+2)& (0+255),w,b
 14700  006E88  6F96               	movwf	(??___fleq+2)& (0+255),b
 14701  006E8A  0E7F               	movlw	127
 14702  006E8C  158F               	andwf	(___fleq@ff1+3)& (0+255),w,b
 14703  006E8E  6F97               	movwf	(??___fleq+3)& (0+255),b
 14704  006E90  5194               	movf	??___fleq& (0+255),w,b
 14705  006E92  1195               	iorwf	(??___fleq+1)& (0+255),w,b
 14706  006E94  1196               	iorwf	(??___fleq+2)& (0+255),w,b
 14707  006E96  1197               	iorwf	(??___fleq+3)& (0+255),w,b
 14708  006E98  A4D8               	btfss	status,2,c
 14709  006E9A  D008               	goto	l13240
 14710                           
 14711                           ; BSR set to: 0
 14712  006E9C  0E00               	movlw	0
 14713  006E9E  6F8C               	movwf	___fleq@ff1& (0+255),b
 14714  006EA0  0E00               	movlw	0
 14715  006EA2  6F8D               	movwf	(___fleq@ff1+1)& (0+255),b
 14716  006EA4  0E00               	movlw	0
 14717  006EA6  6F8E               	movwf	(___fleq@ff1+2)& (0+255),b
 14718  006EA8  0E00               	movlw	0
 14719  006EAA  6F8F               	movwf	(___fleq@ff1+3)& (0+255),b
 14720  006EAC                     l13240:
 14721                           
 14722                           ; BSR set to: 0
 14723  006EAC  0E00               	movlw	0
 14724  006EAE  1590               	andwf	___fleq@ff2& (0+255),w,b
 14725  006EB0  6F94               	movwf	??___fleq& (0+255),b
 14726  006EB2  0E00               	movlw	0
 14727  006EB4  1591               	andwf	(___fleq@ff2+1)& (0+255),w,b
 14728  006EB6  6F95               	movwf	(??___fleq+1)& (0+255),b
 14729  006EB8  0E80               	movlw	128
 14730  006EBA  1592               	andwf	(___fleq@ff2+2)& (0+255),w,b
 14731  006EBC  6F96               	movwf	(??___fleq+2)& (0+255),b
 14732  006EBE  0E7F               	movlw	127
 14733  006EC0  1593               	andwf	(___fleq@ff2+3)& (0+255),w,b
 14734  006EC2  6F97               	movwf	(??___fleq+3)& (0+255),b
 14735  006EC4  5194               	movf	??___fleq& (0+255),w,b
 14736  006EC6  1195               	iorwf	(??___fleq+1)& (0+255),w,b
 14737  006EC8  1196               	iorwf	(??___fleq+2)& (0+255),w,b
 14738  006ECA  1197               	iorwf	(??___fleq+3)& (0+255),w,b
 14739  006ECC  A4D8               	btfss	status,2,c
 14740  006ECE  D008               	goto	l13244
 14741                           
 14742                           ; BSR set to: 0
 14743  006ED0  0E00               	movlw	0
 14744  006ED2  6F90               	movwf	___fleq@ff2& (0+255),b
 14745  006ED4  0E00               	movlw	0
 14746  006ED6  6F91               	movwf	(___fleq@ff2+1)& (0+255),b
 14747  006ED8  0E00               	movlw	0
 14748  006EDA  6F92               	movwf	(___fleq@ff2+2)& (0+255),b
 14749  006EDC  0E00               	movlw	0
 14750  006EDE  6F93               	movwf	(___fleq@ff2+3)& (0+255),b
 14751  006EE0                     l13244:
 14752                           
 14753                           ; BSR set to: 0
 14754  006EE0  5190               	movf	___fleq@ff2& (0+255),w,b
 14755  006EE2  198C               	xorwf	___fleq@ff1& (0+255),w,b
 14756  006EE4  E10A               	bnz	u15520
 14757  006EE6  5191               	movf	(___fleq@ff2+1)& (0+255),w,b
 14758  006EE8  198D               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 14759  006EEA  E107               	bnz	u15520
 14760  006EEC  5192               	movf	(___fleq@ff2+2)& (0+255),w,b
 14761  006EEE  198E               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 14762  006EF0  E104               	bnz	u15520
 14763  006EF2  5193               	movf	(___fleq@ff2+3)& (0+255),w,b
 14764  006EF4  198F               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 14765  006EF6  B4D8               	btfsc	status,2,c
 14766  006EF8  D002               	goto	l13248
 14767  006EFA                     u15520:
 14768                           
 14769                           ; BSR set to: 0
 14770  006EFA  90D8               	bcf	status,0,c
 14771  006EFC  0012               	return	
 14772  006EFE                     l13248:
 14773                           
 14774                           ; BSR set to: 0
 14775  006EFE  80D8               	bsf	status,0,c
 14776                           
 14777                           ; BSR set to: 0
 14778  006F00  0012               	return		;funcret
 14779  006F02                     __end_of___fleq:
 14780                           	callstack 0
 14781                           
 14782 ;; *************** function ___fldiv *****************
 14783 ;; Defined at:
 14784 ;;		line 11 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  b               4    0[BANK1 ] unsigned char 
 14787 ;;  a               4    4[BANK1 ] unsigned char 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  grs             4   19[BANK1 ] unsigned long 
 14790 ;;  rem             4   12[BANK1 ] unsigned long 
 14791 ;;  new_exp         2   17[BANK1 ] short 
 14792 ;;  aexp            1   24[BANK1 ] unsigned char 
 14793 ;;  bexp            1   23[BANK1 ] unsigned char 
 14794 ;;  sign            1   16[BANK1 ] unsigned char 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  4    0[BANK1 ] unsigned char 
 14797 ;; Registers used:
 14798 ;;		wreg, status,2, status,0
 14799 ;; Tracked objects:
 14800 ;;		On entry : 3E/1
 14801 ;;		On exit  : 3F/1
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14804 ;;      Params:         0       0       8       0       0       0       0       0       0
 14805 ;;      Locals:         0       0      13       0       0       0       0       0       0
 14806 ;;      Temps:          0       0       4       0       0       0       0       0       0
 14807 ;;      Totals:         0       0      25       0       0       0       0       0       0
 14808 ;;Total ram usage:       25 bytes
 14809 ;; Hardware stack levels used: 1
 14810 ;; Hardware stack levels required when called: 10
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_G_01
 14815 ;;		_G_95
 14816 ;;		_mover_2
 14817 ;;		_efgtoa
 14818 ;;		_strtof
 14819 ;; This function uses a non-reentrant model
 14820 ;;
 14821                           
 14822                           	psect	text54
 14823  00333E                     __ptext54:
 14824                           	callstack 0
 14825  00333E                     ___fldiv:
 14826                           	callstack 16
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;incstack = 0
 14830  00333E  0101               	movlb	1	; () banked
 14831  003340  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 14832  003342  0B80               	andlw	128
 14833  003344  6F10               	movwf	___fldiv@sign& (0+255),b
 14834  003346  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 14835  003348  2503               	addwf	(___fldiv@b+3)& (0+255),w,b
 14836  00334A  6F17               	movwf	___fldiv@bexp& (0+255),b
 14837                           
 14838                           ; BSR set to: 1
 14839  00334C  BF02               	btfsc	(___fldiv@b+2)& (0+255),7,b
 14840                           
 14841                           ; BSR set to: 1
 14842  00334E  8117               	bsf	___fldiv@bexp& (0+255),0,b
 14843                           
 14844                           ; BSR set to: 1
 14845  003350  5117               	movf	___fldiv@bexp& (0+255),w,b
 14846  003352  B4D8               	btfsc	status,2,c
 14847  003354  D00D               	goto	l12898
 14848                           
 14849                           ; BSR set to: 1
 14850  003356  2917               	incf	___fldiv@bexp& (0+255),w,b
 14851  003358  A4D8               	btfss	status,2,c
 14852  00335A  D008               	goto	l12894
 14853                           
 14854                           ; BSR set to: 1
 14855  00335C  0E00               	movlw	0
 14856  00335E  6F00               	movwf	___fldiv@b& (0+255),b
 14857  003360  0E00               	movlw	0
 14858  003362  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 14859  003364  0E00               	movlw	0
 14860  003366  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 14861  003368  0E00               	movlw	0
 14862  00336A  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 14863  00336C                     l12894:
 14864                           
 14865                           ; BSR set to: 1
 14866  00336C  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 14867  00336E  D006               	goto	L16
 14868  003370                     l12898:
 14869                           
 14870                           ; BSR set to: 1
 14871  003370  0E00               	movlw	0
 14872  003372  6F00               	movwf	___fldiv@b& (0+255),b
 14873  003374  0E00               	movlw	0
 14874  003376  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 14875  003378  0E00               	movlw	0
 14876  00337A  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 14877  00337C                     L16:
 14878  00337C  0E00               	movlw	0
 14879  00337E  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 14880                           
 14881                           ; BSR set to: 1
 14882  003380  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 14883  003382  0B80               	andlw	128
 14884  003384  1B10               	xorwf	___fldiv@sign& (0+255),f,b
 14885                           
 14886                           ; BSR set to: 1
 14887  003386  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 14888  003388  2507               	addwf	(___fldiv@a+3)& (0+255),w,b
 14889  00338A  6F18               	movwf	___fldiv@aexp& (0+255),b
 14890                           
 14891                           ; BSR set to: 1
 14892  00338C  BF06               	btfsc	(___fldiv@a+2)& (0+255),7,b
 14893                           
 14894                           ; BSR set to: 1
 14895  00338E  8118               	bsf	___fldiv@aexp& (0+255),0,b
 14896                           
 14897                           ; BSR set to: 1
 14898  003390  5118               	movf	___fldiv@aexp& (0+255),w,b
 14899  003392  B4D8               	btfsc	status,2,c
 14900  003394  D00D               	goto	l12918
 14901                           
 14902                           ; BSR set to: 1
 14903  003396  2918               	incf	___fldiv@aexp& (0+255),w,b
 14904  003398  A4D8               	btfss	status,2,c
 14905  00339A  D008               	goto	l12914
 14906                           
 14907                           ; BSR set to: 1
 14908  00339C  0E00               	movlw	0
 14909  00339E  6F04               	movwf	___fldiv@a& (0+255),b
 14910  0033A0  0E00               	movlw	0
 14911  0033A2  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 14912  0033A4  0E00               	movlw	0
 14913  0033A6  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 14914  0033A8  0E00               	movlw	0
 14915  0033AA  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 14916  0033AC                     l12914:
 14917                           
 14918                           ; BSR set to: 1
 14919  0033AC  8F06               	bsf	(___fldiv@a+2)& (0+255),7,b
 14920  0033AE  D006               	goto	L17
 14921  0033B0                     l12918:
 14922                           
 14923                           ; BSR set to: 1
 14924  0033B0  0E00               	movlw	0
 14925  0033B2  6F04               	movwf	___fldiv@a& (0+255),b
 14926  0033B4  0E00               	movlw	0
 14927  0033B6  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 14928  0033B8  0E00               	movlw	0
 14929  0033BA  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 14930  0033BC                     L17:
 14931  0033BC  0E00               	movlw	0
 14932  0033BE  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 14933                           
 14934                           ; BSR set to: 1
 14935  0033C0  5104               	movf	___fldiv@a& (0+255),w,b
 14936  0033C2  1105               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14937  0033C4  1106               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14938  0033C6  1107               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14939  0033C8  A4D8               	btfss	status,2,c
 14940  0033CA  D017               	goto	l12932
 14941                           
 14942                           ; BSR set to: 1
 14943  0033CC  0E00               	movlw	0
 14944  0033CE  6F00               	movwf	___fldiv@b& (0+255),b
 14945  0033D0  0E00               	movlw	0
 14946  0033D2  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 14947  0033D4  0E00               	movlw	0
 14948  0033D6  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 14949  0033D8  0E00               	movlw	0
 14950  0033DA  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 14951                           
 14952                           ; BSR set to: 1
 14953  0033DC  0E80               	movlw	128
 14954  0033DE  1302               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14955  0033E0  0E7F               	movlw	127
 14956  0033E2  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14957  0033E4                     l12926:
 14958                           
 14959                           ; BSR set to: 1
 14960  0033E4  5110               	movf	___fldiv@sign& (0+255),w,b
 14961  0033E6  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14962                           
 14963                           ; BSR set to: 1
 14964  0033E8  C100  F100         	movff	___fldiv@b,?___fldiv
 14965  0033EC  C101  F101         	movff	___fldiv@b+1,?___fldiv+1
 14966  0033F0  C102  F102         	movff	___fldiv@b+2,?___fldiv+2
 14967  0033F4  C103  F103         	movff	___fldiv@b+3,?___fldiv+3
 14968  0033F8  0012               	return	
 14969  0033FA                     l12932:
 14970                           
 14971                           ; BSR set to: 1
 14972  0033FA  5117               	movf	___fldiv@bexp& (0+255),w,b
 14973  0033FC  A4D8               	btfss	status,2,c
 14974  0033FE  D009               	goto	l12940
 14975                           
 14976                           ; BSR set to: 1
 14977                           
 14978                           ; BSR set to: 1
 14979  003400  0E00               	movlw	0
 14980  003402  6F00               	movwf	?___fldiv& (0+255),b
 14981  003404  0E00               	movlw	0
 14982  003406  6F01               	movwf	(?___fldiv+1)& (0+255),b
 14983  003408  0E00               	movlw	0
 14984  00340A  6F02               	movwf	(?___fldiv+2)& (0+255),b
 14985  00340C  0E00               	movlw	0
 14986  00340E  6F03               	movwf	(?___fldiv+3)& (0+255),b
 14987  003410  0012               	return	
 14988  003412                     l12940:
 14989                           
 14990                           ; BSR set to: 1
 14991  003412  5118               	movf	___fldiv@aexp& (0+255),w,b
 14992  003414  C117  F108         	movff	___fldiv@bexp,??___fldiv
 14993  003418  6B09               	clrf	(??___fldiv+1)& (0+255),b
 14994  00341A  5F08               	subwf	??___fldiv& (0+255),f,b
 14995  00341C  0E00               	movlw	0
 14996  00341E  5B09               	subwfb	(??___fldiv+1)& (0+255),f,b
 14997  003420  0E7F               	movlw	127
 14998  003422  2508               	addwf	??___fldiv& (0+255),w,b
 14999  003424  6F11               	movwf	___fldiv@new_exp& (0+255),b
 15000  003426  0E00               	movlw	0
 15001  003428  2109               	addwfc	(??___fldiv+1)& (0+255),w,b
 15002  00342A  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15003                           
 15004                           ; BSR set to: 1
 15005  00342C  C100  F10C         	movff	___fldiv@b,___fldiv@rem
 15006  003430  C101  F10D         	movff	___fldiv@b+1,___fldiv@rem+1
 15007  003434  C102  F10E         	movff	___fldiv@b+2,___fldiv@rem+2
 15008  003438  C103  F10F         	movff	___fldiv@b+3,___fldiv@rem+3
 15009                           
 15010                           ; BSR set to: 1
 15011  00343C  0E00               	movlw	0
 15012  00343E  6F00               	movwf	___fldiv@b& (0+255),b
 15013  003440  0E00               	movlw	0
 15014  003442  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 15015  003444  0E00               	movlw	0
 15016  003446  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 15017  003448  0E00               	movlw	0
 15018  00344A  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 15019                           
 15020                           ; BSR set to: 1
 15021  00344C  0E00               	movlw	0
 15022  00344E  6F13               	movwf	___fldiv@grs& (0+255),b
 15023  003450  0E00               	movlw	0
 15024  003452  6F14               	movwf	(___fldiv@grs+1)& (0+255),b
 15025  003454  0E00               	movlw	0
 15026  003456  6F15               	movwf	(___fldiv@grs+2)& (0+255),b
 15027  003458  0E00               	movlw	0
 15028  00345A  6F16               	movwf	(___fldiv@grs+3)& (0+255),b
 15029                           
 15030                           ; BSR set to: 1
 15031  00345C  0E00               	movlw	0
 15032  00345E  6F18               	movwf	___fldiv@aexp& (0+255),b
 15033  003460  D028               	goto	l2052
 15034  003462                     l12950:
 15035                           
 15036                           ; BSR set to: 1
 15037  003462  5118               	movf	___fldiv@aexp& (0+255),w,b
 15038  003464  B4D8               	btfsc	status,2,c
 15039  003466  D011               	goto	l12958
 15040                           
 15041                           ; BSR set to: 1
 15042  003468  90D8               	bcf	status,0,c
 15043  00346A  370C               	rlcf	___fldiv@rem& (0+255),f,b
 15044  00346C  370D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15045  00346E  370E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15046  003470  370F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15047  003472  90D8               	bcf	status,0,c
 15048  003474  3700               	rlcf	___fldiv@b& (0+255),f,b
 15049  003476  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15050  003478  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15051  00347A  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15052                           
 15053                           ; BSR set to: 1
 15054  00347C  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15055                           
 15056                           ; BSR set to: 1
 15057  00347E  8100               	bsf	___fldiv@b& (0+255),0,b
 15058                           
 15059                           ; BSR set to: 1
 15060  003480  90D8               	bcf	status,0,c
 15061  003482  3713               	rlcf	___fldiv@grs& (0+255),f,b
 15062  003484  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15063  003486  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15064  003488  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15065  00348A                     l12958:
 15066                           
 15067                           ; BSR set to: 1
 15068  00348A  5104               	movf	___fldiv@a& (0+255),w,b
 15069  00348C  5D0C               	subwf	___fldiv@rem& (0+255),w,b
 15070  00348E  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 15071  003490  590D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15072  003492  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 15073  003494  590E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15074  003496  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 15075  003498  590F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15076  00349A  A0D8               	btfss	status,0,c
 15077  00349C  D009               	goto	l12964
 15078                           
 15079                           ; BSR set to: 1
 15080  00349E  8D16               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15081                           
 15082                           ; BSR set to: 1
 15083  0034A0  5104               	movf	___fldiv@a& (0+255),w,b
 15084  0034A2  5F0C               	subwf	___fldiv@rem& (0+255),f,b
 15085  0034A4  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 15086  0034A6  5B0D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15087  0034A8  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 15088  0034AA  5B0E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15089  0034AC  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 15090  0034AE  5B0F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15091  0034B0                     l12964:
 15092                           
 15093                           ; BSR set to: 1
 15094  0034B0  2B18               	incf	___fldiv@aexp& (0+255),f,b
 15095  0034B2                     l2052:
 15096                           
 15097                           ; BSR set to: 1
 15098  0034B2  0E19               	movlw	25
 15099  0034B4  6518               	cpfsgt	___fldiv@aexp& (0+255),b
 15100  0034B6  D7D5               	goto	l12950
 15101                           
 15102                           ; BSR set to: 1
 15103  0034B8  510C               	movf	___fldiv@rem& (0+255),w,b
 15104  0034BA  110D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15105  0034BC  110E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15106  0034BE  110F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15107  0034C0  B4D8               	btfsc	status,2,c
 15108  0034C2  D011               	goto	l12976
 15109                           
 15110                           ; BSR set to: 1
 15111  0034C4  8113               	bsf	___fldiv@grs& (0+255),0,b
 15112  0034C6  D00F               	goto	l12976
 15113  0034C8                     l12970:
 15114                           
 15115                           ; BSR set to: 1
 15116  0034C8  90D8               	bcf	status,0,c
 15117  0034CA  3700               	rlcf	___fldiv@b& (0+255),f,b
 15118  0034CC  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15119  0034CE  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15120  0034D0  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15121                           
 15122                           ; BSR set to: 1
 15123  0034D2  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15124                           
 15125                           ; BSR set to: 1
 15126  0034D4  8100               	bsf	___fldiv@b& (0+255),0,b
 15127                           
 15128                           ; BSR set to: 1
 15129  0034D6  90D8               	bcf	status,0,c
 15130  0034D8  3713               	rlcf	___fldiv@grs& (0+255),f,b
 15131  0034DA  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15132  0034DC  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15133  0034DE  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15134  0034E0  0711               	decf	___fldiv@new_exp& (0+255),f,b
 15135  0034E2  A0D8               	btfss	status,0,c
 15136  0034E4  0712               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15137  0034E6                     l12976:
 15138                           
 15139                           ; BSR set to: 1
 15140  0034E6  AF02               	btfss	(___fldiv@b+2)& (0+255),7,b
 15141  0034E8  D7EF               	goto	l12970
 15142                           
 15143                           ; BSR set to: 1
 15144  0034EA  0E00               	movlw	0
 15145  0034EC  6F18               	movwf	___fldiv@aexp& (0+255),b
 15146                           
 15147                           ; BSR set to: 1
 15148  0034EE  AF16               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15149  0034F0  D017               	goto	l2063
 15150                           
 15151                           ; BSR set to: 1
 15152  0034F2  0EFF               	movlw	255
 15153  0034F4  1513               	andwf	___fldiv@grs& (0+255),w,b
 15154  0034F6  6F08               	movwf	??___fldiv& (0+255),b
 15155  0034F8  0EFF               	movlw	255
 15156  0034FA  1514               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15157  0034FC  6F09               	movwf	(??___fldiv+1)& (0+255),b
 15158  0034FE  0EFF               	movlw	255
 15159  003500  1515               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15160  003502  6F0A               	movwf	(??___fldiv+2)& (0+255),b
 15161  003504  0E7F               	movlw	127
 15162  003506  1516               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15163  003508  6F0B               	movwf	(??___fldiv+3)& (0+255),b
 15164  00350A  5108               	movf	??___fldiv& (0+255),w,b
 15165  00350C  1109               	iorwf	(??___fldiv+1)& (0+255),w,b
 15166  00350E  110A               	iorwf	(??___fldiv+2)& (0+255),w,b
 15167  003510  110B               	iorwf	(??___fldiv+3)& (0+255),w,b
 15168  003512  B4D8               	btfsc	status,2,c
 15169  003514  D003               	goto	l2064
 15170  003516                     u15130:
 15171                           
 15172                           ; BSR set to: 1
 15173  003516  0E01               	movlw	1
 15174  003518  6F18               	movwf	___fldiv@aexp& (0+255),b
 15175  00351A  D002               	goto	l2063
 15176  00351C                     l2064:
 15177                           
 15178                           ; BSR set to: 1
 15179  00351C  B100               	btfsc	___fldiv@b& (0+255),0,b
 15180  00351E  D7FB               	goto	u15130
 15181  003520                     l2063:
 15182                           
 15183                           ; BSR set to: 1
 15184  003520  5118               	movf	___fldiv@aexp& (0+255),w,b
 15185  003522  B4D8               	btfsc	status,2,c
 15186  003524  D01F               	goto	l12996
 15187                           
 15188                           ; BSR set to: 1
 15189  003526  0E01               	movlw	1
 15190  003528  2700               	addwf	___fldiv@b& (0+255),f,b
 15191  00352A  0E00               	movlw	0
 15192  00352C  2301               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15193  00352E  2302               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15194  003530  2303               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15195                           
 15196                           ; BSR set to: 1
 15197  003532  A103               	btfss	(___fldiv@b+3)& (0+255),0,b
 15198  003534  D017               	goto	l12996
 15199                           
 15200                           ; BSR set to: 1
 15201  003536  C100  F108         	movff	___fldiv@b,??___fldiv
 15202  00353A  C101  F109         	movff	___fldiv@b+1,??___fldiv+1
 15203  00353E  C102  F10A         	movff	___fldiv@b+2,??___fldiv+2
 15204  003542  C103  F10B         	movff	___fldiv@b+3,??___fldiv+3
 15205  003546  350B               	rlcf	(??___fldiv+3)& (0+255),w,b
 15206  003548  330B               	rrcf	(??___fldiv+3)& (0+255),f,b
 15207  00354A  330A               	rrcf	(??___fldiv+2)& (0+255),f,b
 15208  00354C  3309               	rrcf	(??___fldiv+1)& (0+255),f,b
 15209  00354E  3308               	rrcf	??___fldiv& (0+255),f,b
 15210  003550  C108  F100         	movff	??___fldiv,___fldiv@b
 15211  003554  C109  F101         	movff	??___fldiv+1,___fldiv@b+1
 15212  003558  C10A  F102         	movff	??___fldiv+2,___fldiv@b+2
 15213  00355C  C10B  F103         	movff	??___fldiv+3,___fldiv@b+3
 15214                           
 15215                           ; BSR set to: 1
 15216  003560  4B11               	infsnz	___fldiv@new_exp& (0+255),f,b
 15217  003562  2B12               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15218  003564                     l12996:
 15219                           
 15220                           ; BSR set to: 1
 15221  003564  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15222  003566  D010               	goto	l13000
 15223  003568  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15224  00356A  E103               	bnz	u15170
 15225  00356C  2911               	incf	___fldiv@new_exp& (0+255),w,b
 15226  00356E  A0D8               	btfss	status,0,c
 15227  003570  D00B               	goto	l13000
 15228  003572                     u15170:
 15229                           
 15230                           ; BSR set to: 1
 15231  003572  0E00               	movlw	0
 15232  003574  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15233  003576  6911               	setf	___fldiv@new_exp& (0+255),b
 15234  003578  0E00               	movlw	0
 15235  00357A  6F00               	movwf	___fldiv@b& (0+255),b
 15236  00357C  0E00               	movlw	0
 15237  00357E  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 15238  003580  0E00               	movlw	0
 15239  003582  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 15240  003584  0E00               	movlw	0
 15241  003586  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 15242  003588                     l13000:
 15243                           
 15244                           ; BSR set to: 1
 15245  003588  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15246  00358A  D005               	goto	u15180
 15247  00358C  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15248  00358E  E111               	bnz	l13004
 15249  003590  0511               	decf	___fldiv@new_exp& (0+255),w,b
 15250  003592  B0D8               	btfsc	status,0,c
 15251  003594  D00E               	goto	l13004
 15252  003596                     u15180:
 15253                           
 15254                           ; BSR set to: 1
 15255  003596  0E00               	movlw	0
 15256  003598  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15257  00359A  0E00               	movlw	0
 15258  00359C  6F11               	movwf	___fldiv@new_exp& (0+255),b
 15259  00359E  0E00               	movlw	0
 15260  0035A0  6F00               	movwf	___fldiv@b& (0+255),b
 15261  0035A2  0E00               	movlw	0
 15262  0035A4  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 15263  0035A6  0E00               	movlw	0
 15264  0035A8  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 15265  0035AA  0E00               	movlw	0
 15266  0035AC  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 15267  0035AE  0E00               	movlw	0
 15268  0035B0  6F10               	movwf	___fldiv@sign& (0+255),b
 15269  0035B2                     l13004:
 15270                           
 15271                           ; BSR set to: 1
 15272  0035B2  C111  F117         	movff	___fldiv@new_exp,___fldiv@bexp
 15273                           
 15274                           ; BSR set to: 1
 15275  0035B6  A117               	btfss	___fldiv@bexp& (0+255),0,b
 15276  0035B8  D002               	goto	l13010
 15277                           
 15278                           ; BSR set to: 1
 15279  0035BA  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 15280  0035BC  D001               	goto	l13012
 15281  0035BE                     l13010:
 15282                           
 15283                           ; BSR set to: 1
 15284  0035BE  9F02               	bcf	(___fldiv@b+2)& (0+255),7,b
 15285  0035C0                     l13012:
 15286                           
 15287                           ; BSR set to: 1
 15288  0035C0  90D8               	bcf	status,0,c
 15289  0035C2  3117               	rrcf	___fldiv@bexp& (0+255),w,b
 15290  0035C4  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 15291  0035C6  D70E               	goto	l12926
 15292  0035C8                     __end_of___fldiv:
 15293                           	callstack 0
 15294                           
 15295 ;; *************** function ___awmod *****************
 15296 ;; Defined at:
 15297 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;  dividend        2   44[BANK0 ] int 
 15300 ;;  divisor         2   46[BANK0 ] int 
 15301 ;; Auto vars:     Size  Location     Type
 15302 ;;  sign            1   49[BANK0 ] unsigned char 
 15303 ;;  counter         1   48[BANK0 ] unsigned char 
 15304 ;; Return value:  Size  Location     Type
 15305 ;;                  2   44[BANK0 ] int 
 15306 ;; Registers used:
 15307 ;;		wreg, status,2, status,0
 15308 ;; Tracked objects:
 15309 ;;		On entry : 3F/0
 15310 ;;		On exit  : 3F/0
 15311 ;;		Unchanged: 0/0
 15312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15313 ;;      Params:         0       4       0       0       0       0       0       0       0
 15314 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15316 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15317 ;;Total ram usage:        6 bytes
 15318 ;; Hardware stack levels used: 1
 15319 ;; Hardware stack levels required when called: 10
 15320 ;; This function calls:
 15321 ;;		Nothing
 15322 ;; This function is called by:
 15323 ;;		_efgtoa
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327                           	psect	text55
 15328  006F86                     __ptext55:
 15329                           	callstack 0
 15330  006F86                     ___awmod:
 15331                           	callstack 16
 15332                           
 15333                           ; BSR set to: 0
 15334                           
 15335                           ; BSR set to: 1
 15336                           ;incstack = 0
 15337  006F86  0E00               	movlw	0
 15338  006F88  6F91               	movwf	___awmod@sign& (0+255),b
 15339                           
 15340                           ; BSR set to: 0
 15341  006F8A  AF8D               	btfss	(___awmod@dividend+1)& (0+255),7,b
 15342  006F8C  D006               	goto	l13208
 15343                           
 15344                           ; BSR set to: 0
 15345  006F8E  6D8C               	negf	___awmod@dividend& (0+255),b
 15346  006F90  1F8D               	comf	(___awmod@dividend+1)& (0+255),f,b
 15347  006F92  B0D8               	btfsc	status,0,c
 15348  006F94  2B8D               	incf	(___awmod@dividend+1)& (0+255),f,b
 15349                           
 15350                           ; BSR set to: 0
 15351  006F96  0E01               	movlw	1
 15352  006F98  6F91               	movwf	___awmod@sign& (0+255),b
 15353  006F9A                     l13208:
 15354                           
 15355                           ; BSR set to: 0
 15356  006F9A  AF8F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 15357  006F9C  D004               	goto	l13212
 15358                           
 15359                           ; BSR set to: 0
 15360  006F9E  6D8E               	negf	___awmod@divisor& (0+255),b
 15361  006FA0  1F8F               	comf	(___awmod@divisor+1)& (0+255),f,b
 15362  006FA2  B0D8               	btfsc	status,0,c
 15363  006FA4  2B8F               	incf	(___awmod@divisor+1)& (0+255),f,b
 15364  006FA6                     l13212:
 15365                           
 15366                           ; BSR set to: 0
 15367  006FA6  518E               	movf	___awmod@divisor& (0+255),w,b
 15368  006FA8  118F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 15369  006FAA  B4D8               	btfsc	status,2,c
 15370  006FAC  D018               	goto	l13228
 15371                           
 15372                           ; BSR set to: 0
 15373  006FAE  0E01               	movlw	1
 15374  006FB0  6F90               	movwf	___awmod@counter& (0+255),b
 15375  006FB2  D004               	goto	l13218
 15376  006FB4                     l13216:
 15377                           
 15378                           ; BSR set to: 0
 15379  006FB4  90D8               	bcf	status,0,c
 15380  006FB6  378E               	rlcf	___awmod@divisor& (0+255),f,b
 15381  006FB8  378F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 15382  006FBA  2B90               	incf	___awmod@counter& (0+255),f,b
 15383  006FBC                     l13218:
 15384                           
 15385                           ; BSR set to: 0
 15386  006FBC  AF8F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 15387  006FBE  D7FA               	goto	l13216
 15388  006FC0                     u15470:
 15389                           
 15390                           ; BSR set to: 0
 15391  006FC0  518E               	movf	___awmod@divisor& (0+255),w,b
 15392  006FC2  5D8C               	subwf	___awmod@dividend& (0+255),w,b
 15393  006FC4  518F               	movf	(___awmod@divisor+1)& (0+255),w,b
 15394  006FC6  598D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 15395  006FC8  A0D8               	btfss	status,0,c
 15396  006FCA  D004               	goto	l13224
 15397                           
 15398                           ; BSR set to: 0
 15399  006FCC  518E               	movf	___awmod@divisor& (0+255),w,b
 15400  006FCE  5F8C               	subwf	___awmod@dividend& (0+255),f,b
 15401  006FD0  518F               	movf	(___awmod@divisor+1)& (0+255),w,b
 15402  006FD2  5B8D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 15403  006FD4                     l13224:
 15404                           
 15405                           ; BSR set to: 0
 15406  006FD4  90D8               	bcf	status,0,c
 15407  006FD6  338F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 15408  006FD8  338E               	rrcf	___awmod@divisor& (0+255),f,b
 15409                           
 15410                           ; BSR set to: 0
 15411  006FDA  2F90               	decfsz	___awmod@counter& (0+255),f,b
 15412  006FDC  D7F1               	goto	u15470
 15413  006FDE                     l13228:
 15414                           
 15415                           ; BSR set to: 0
 15416  006FDE  5191               	movf	___awmod@sign& (0+255),w,b
 15417  006FE0  B4D8               	btfsc	status,2,c
 15418  006FE2  D004               	goto	l13232
 15419                           
 15420                           ; BSR set to: 0
 15421  006FE4  6D8C               	negf	___awmod@dividend& (0+255),b
 15422  006FE6  1F8D               	comf	(___awmod@dividend+1)& (0+255),f,b
 15423  006FE8  B0D8               	btfsc	status,0,c
 15424  006FEA  2B8D               	incf	(___awmod@dividend+1)& (0+255),f,b
 15425  006FEC                     l13232:
 15426                           
 15427                           ; BSR set to: 0
 15428  006FEC  C08C  F08C         	movff	___awmod@dividend,?___awmod
 15429  006FF0  C08D  F08D         	movff	___awmod@dividend+1,?___awmod+1
 15430                           
 15431                           ; BSR set to: 0
 15432  006FF4  0012               	return		;funcret
 15433  006FF6                     __end_of___awmod:
 15434                           	callstack 0
 15435                           
 15436 ;; *************** function ___awdiv *****************
 15437 ;; Defined at:
 15438 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
 15439 ;; Parameters:    Size  Location     Type
 15440 ;;  dividend        2   44[BANK0 ] int 
 15441 ;;  divisor         2   46[BANK0 ] int 
 15442 ;; Auto vars:     Size  Location     Type
 15443 ;;  quotient        2   50[BANK0 ] int 
 15444 ;;  sign            1   49[BANK0 ] unsigned char 
 15445 ;;  counter         1   48[BANK0 ] unsigned char 
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  2   44[BANK0 ] int 
 15448 ;; Registers used:
 15449 ;;		wreg, status,2, status,0
 15450 ;; Tracked objects:
 15451 ;;		On entry : 3F/0
 15452 ;;		On exit  : 3F/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15455 ;;      Params:         0       4       0       0       0       0       0       0       0
 15456 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15458 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15459 ;;Total ram usage:        8 bytes
 15460 ;; Hardware stack levels used: 1
 15461 ;; Hardware stack levels required when called: 10
 15462 ;; This function calls:
 15463 ;;		Nothing
 15464 ;; This function is called by:
 15465 ;;		_efgtoa
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	text56
 15470  006F02                     __ptext56:
 15471                           	callstack 0
 15472  006F02                     ___awdiv:
 15473                           	callstack 16
 15474                           
 15475                           ; BSR set to: 0
 15476                           
 15477                           ; BSR set to: 0
 15478                           ;incstack = 0
 15479  006F02  0E00               	movlw	0
 15480  006F04  6F91               	movwf	___awdiv@sign& (0+255),b
 15481                           
 15482                           ; BSR set to: 0
 15483  006F06  AF8F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15484  006F08  D006               	goto	l13164
 15485                           
 15486                           ; BSR set to: 0
 15487  006F0A  6D8E               	negf	___awdiv@divisor& (0+255),b
 15488  006F0C  1F8F               	comf	(___awdiv@divisor+1)& (0+255),f,b
 15489  006F0E  B0D8               	btfsc	status,0,c
 15490  006F10  2B8F               	incf	(___awdiv@divisor+1)& (0+255),f,b
 15491                           
 15492                           ; BSR set to: 0
 15493  006F12  0E01               	movlw	1
 15494  006F14  6F91               	movwf	___awdiv@sign& (0+255),b
 15495  006F16                     l13164:
 15496                           
 15497                           ; BSR set to: 0
 15498  006F16  AF8D               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 15499  006F18  D006               	goto	l13170
 15500                           
 15501                           ; BSR set to: 0
 15502  006F1A  6D8C               	negf	___awdiv@dividend& (0+255),b
 15503  006F1C  1F8D               	comf	(___awdiv@dividend+1)& (0+255),f,b
 15504  006F1E  B0D8               	btfsc	status,0,c
 15505  006F20  2B8D               	incf	(___awdiv@dividend+1)& (0+255),f,b
 15506                           
 15507                           ; BSR set to: 0
 15508  006F22  0E01               	movlw	1
 15509  006F24  1B91               	xorwf	___awdiv@sign& (0+255),f,b
 15510  006F26                     l13170:
 15511                           
 15512                           ; BSR set to: 0
 15513  006F26  0E00               	movlw	0
 15514  006F28  6F93               	movwf	(___awdiv@quotient+1)& (0+255),b
 15515  006F2A  0E00               	movlw	0
 15516  006F2C  6F92               	movwf	___awdiv@quotient& (0+255),b
 15517                           
 15518                           ; BSR set to: 0
 15519  006F2E  518E               	movf	___awdiv@divisor& (0+255),w,b
 15520  006F30  118F               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 15521  006F32  B4D8               	btfsc	status,2,c
 15522  006F34  D01C               	goto	l13192
 15523                           
 15524                           ; BSR set to: 0
 15525  006F36  0E01               	movlw	1
 15526  006F38  6F90               	movwf	___awdiv@counter& (0+255),b
 15527  006F3A  D004               	goto	l13178
 15528  006F3C                     l13176:
 15529                           
 15530                           ; BSR set to: 0
 15531  006F3C  90D8               	bcf	status,0,c
 15532  006F3E  378E               	rlcf	___awdiv@divisor& (0+255),f,b
 15533  006F40  378F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 15534  006F42  2B90               	incf	___awdiv@counter& (0+255),f,b
 15535  006F44                     l13178:
 15536                           
 15537                           ; BSR set to: 0
 15538  006F44  AF8F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15539  006F46  D7FA               	goto	l13176
 15540  006F48                     u15410:
 15541                           
 15542                           ; BSR set to: 0
 15543  006F48  90D8               	bcf	status,0,c
 15544  006F4A  3792               	rlcf	___awdiv@quotient& (0+255),f,b
 15545  006F4C  3793               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 15546                           
 15547                           ; BSR set to: 0
 15548  006F4E  518E               	movf	___awdiv@divisor& (0+255),w,b
 15549  006F50  5D8C               	subwf	___awdiv@dividend& (0+255),w,b
 15550  006F52  518F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15551  006F54  598D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 15552  006F56  A0D8               	btfss	status,0,c
 15553  006F58  D005               	goto	l13188
 15554                           
 15555                           ; BSR set to: 0
 15556  006F5A  518E               	movf	___awdiv@divisor& (0+255),w,b
 15557  006F5C  5F8C               	subwf	___awdiv@dividend& (0+255),f,b
 15558  006F5E  518F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15559  006F60  5B8D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 15560                           
 15561                           ; BSR set to: 0
 15562  006F62  8192               	bsf	___awdiv@quotient& (0+255),0,b
 15563  006F64                     l13188:
 15564                           
 15565                           ; BSR set to: 0
 15566  006F64  90D8               	bcf	status,0,c
 15567  006F66  338F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 15568  006F68  338E               	rrcf	___awdiv@divisor& (0+255),f,b
 15569                           
 15570                           ; BSR set to: 0
 15571  006F6A  2F90               	decfsz	___awdiv@counter& (0+255),f,b
 15572  006F6C  D7ED               	goto	u15410
 15573  006F6E                     l13192:
 15574                           
 15575                           ; BSR set to: 0
 15576  006F6E  5191               	movf	___awdiv@sign& (0+255),w,b
 15577  006F70  B4D8               	btfsc	status,2,c
 15578  006F72  D004               	goto	l13196
 15579                           
 15580                           ; BSR set to: 0
 15581  006F74  6D92               	negf	___awdiv@quotient& (0+255),b
 15582  006F76  1F93               	comf	(___awdiv@quotient+1)& (0+255),f,b
 15583  006F78  B0D8               	btfsc	status,0,c
 15584  006F7A  2B93               	incf	(___awdiv@quotient+1)& (0+255),f,b
 15585  006F7C                     l13196:
 15586                           
 15587                           ; BSR set to: 0
 15588  006F7C  C092  F08C         	movff	___awdiv@quotient,?___awdiv
 15589  006F80  C093  F08D         	movff	___awdiv@quotient+1,?___awdiv+1
 15590                           
 15591                           ; BSR set to: 0
 15592  006F84  0012               	return		;funcret
 15593  006F86                     __end_of___awdiv:
 15594                           	callstack 0
 15595                           
 15596 ;; *************** function _dtoa *****************
 15597 ;; Defined at:
 15598 ;;		line 287 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 15601 ;;		 -> sprintf@f(11), 
 15602 ;;  d               8    2[BANK1 ] long long 
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;  n               8   26[BANK1 ] long long 
 15605 ;;  i               2   34[BANK1 ] int 
 15606 ;;  s               2   24[BANK1 ] int 
 15607 ;;  w               2   22[BANK1 ] int 
 15608 ;;  p               2   20[BANK1 ] int 
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  2    0[BANK1 ] int 
 15611 ;; Registers used:
 15612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15613 ;; Tracked objects:
 15614 ;;		On entry : 3F/1
 15615 ;;		On exit  : 3F/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15618 ;;      Params:         0       0      10       0       0       0       0       0       0
 15619 ;;      Locals:         0       0      18       0       0       0       0       0       0
 15620 ;;      Temps:          0       0       8       0       0       0       0       0       0
 15621 ;;      Totals:         0       0      36       0       0       0       0       0       0
 15622 ;;Total ram usage:       36 bytes
 15623 ;; Hardware stack levels used: 1
 15624 ;; Hardware stack levels required when called: 14
 15625 ;; This function calls:
 15626 ;;		___aodiv
 15627 ;;		___aomod
 15628 ;;		_abs
 15629 ;;		_pad
 15630 ;; This function is called by:
 15631 ;;		_vfpfcnvrt
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text57
 15636  003ACA                     __ptext57:
 15637                           	callstack 0
 15638  003ACA                     _dtoa:
 15639                           	callstack 13
 15640                           
 15641                           ; BSR set to: 1
 15642                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;incstack = 0
 15646  003ACA  C102  F11A         	movff	dtoa@d,dtoa@n
 15647  003ACE  C103  F11B         	movff	dtoa@d+1,dtoa@n+1
 15648  003AD2  C104  F11C         	movff	dtoa@d+2,dtoa@n+2
 15649  003AD6  C105  F11D         	movff	dtoa@d+3,dtoa@n+3
 15650  003ADA  C106  F11E         	movff	dtoa@d+4,dtoa@n+4
 15651  003ADE  C107  F11F         	movff	dtoa@d+5,dtoa@n+5
 15652  003AE2  C108  F120         	movff	dtoa@d+6,dtoa@n+6
 15653  003AE6  C109  F121         	movff	dtoa@d+7,dtoa@n+7
 15654                           
 15655                           ; BSR set to: 1
 15656                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
 15657  003AEA  AF21               	btfss	(dtoa@n+7)& (0+255),7,b
 15658  003AEC  D002               	goto	u16050
 15659  003AEE  0E01               	movlw	1
 15660  003AF0  D001               	goto	u16060
 15661  003AF2                     u16050:
 15662  003AF2  0E00               	movlw	0
 15663  003AF4                     u16060:
 15664  003AF4  6F18               	movwf	dtoa@s& (0+255),b
 15665  003AF6  6B19               	clrf	(dtoa@s+1)& (0+255),b
 15666                           
 15667                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 15668  003AF8  5118               	movf	dtoa@s& (0+255),w,b
 15669  003AFA  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 15670  003AFC  B4D8               	btfsc	status,2,c
 15671  003AFE  D010               	goto	l13532
 15672                           
 15673                           ; BSR set to: 1
 15674                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 15675  003B00  1F21               	comf	(dtoa@n+7)& (0+255),f,b
 15676  003B02  1F20               	comf	(dtoa@n+6)& (0+255),f,b
 15677  003B04  1F1F               	comf	(dtoa@n+5)& (0+255),f,b
 15678  003B06  1F1E               	comf	(dtoa@n+4)& (0+255),f,b
 15679  003B08  1F1D               	comf	(dtoa@n+3)& (0+255),f,b
 15680  003B0A  1F1C               	comf	(dtoa@n+2)& (0+255),f,b
 15681  003B0C  1F1B               	comf	(dtoa@n+1)& (0+255),f,b
 15682  003B0E  6D1A               	negf	dtoa@n& (0+255),b
 15683  003B10  0E00               	movlw	0
 15684  003B12  231B               	addwfc	(dtoa@n+1)& (0+255),f,b
 15685  003B14  231C               	addwfc	(dtoa@n+2)& (0+255),f,b
 15686  003B16  231D               	addwfc	(dtoa@n+3)& (0+255),f,b
 15687  003B18  231E               	addwfc	(dtoa@n+4)& (0+255),f,b
 15688  003B1A  231F               	addwfc	(dtoa@n+5)& (0+255),f,b
 15689  003B1C  2320               	addwfc	(dtoa@n+6)& (0+255),f,b
 15690  003B1E  2321               	addwfc	(dtoa@n+7)& (0+255),f,b
 15691  003B20                     l13532:
 15692                           
 15693                           ; BSR set to: 1
 15694                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
 15695  003B20  0100               	movlb	0	; () banked
 15696  003B22  AFBF               	btfss	(_prec+1)& (0+255),7,b
 15697                           
 15698                           ; BSR set to: 0
 15699                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
 15700  003B24  93C0               	bcf	_flags& (0+255),1,b
 15701                           
 15702                           ; BSR set to: 0
 15703                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
 15704  003B26  BFBF               	btfsc	(_prec+1)& (0+255),7,b
 15705  003B28  D005               	goto	u16090
 15706  003B2A  51BF               	movf	(_prec+1)& (0+255),w,b
 15707  003B2C  E109               	bnz	l2232
 15708  003B2E  05BE               	decf	_prec& (0+255),w,b
 15709  003B30  B0D8               	btfsc	status,0,c
 15710  003B32  D006               	goto	l2232
 15711  003B34                     u16090:
 15712                           
 15713                           ; BSR set to: 0
 15714  003B34  0E00               	movlw	0
 15715  003B36  0101               	movlb	1	; () banked
 15716  003B38  6F15               	movwf	(dtoa@p+1)& (0+255),b
 15717  003B3A  0E01               	movlw	1
 15718  003B3C  6F14               	movwf	dtoa@p& (0+255),b
 15719  003B3E  D004               	goto	l2234
 15720  003B40                     l2232:
 15721                           
 15722                           ; BSR set to: 0
 15723  003B40  C0BE  F114         	movff	_prec,dtoa@p
 15724  003B44  C0BF  F115         	movff	_prec+1,dtoa@p+1
 15725  003B48                     l2234:
 15726                           
 15727                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 304:     w = width;
 15728  003B48  C0BC  F116         	movff	_width,dtoa@w
 15729  003B4C  C0BD  F117         	movff	_width+1,dtoa@w+1
 15730                           
 15731                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
 15732  003B50  0101               	movlb	1	; () banked
 15733  003B52  5118               	movf	dtoa@s& (0+255),w,b
 15734  003B54  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 15735  003B56  A4D8               	btfss	status,2,c
 15736  003B58  D003               	goto	u16110
 15737                           
 15738                           ; BSR set to: 1
 15739  003B5A  0100               	movlb	0	; () banked
 15740  003B5C  A5C0               	btfss	_flags& (0+255),2,b
 15741  003B5E  D004               	goto	l13546
 15742  003B60                     u16110:
 15743                           
 15744                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 306:         --w;
 15745  003B60  0101               	movlb	1	; () banked
 15746  003B62  0716               	decf	dtoa@w& (0+255),f,b
 15747  003B64  A0D8               	btfss	status,0,c
 15748  003B66  0717               	decf	(dtoa@w+1)& (0+255),f,b
 15749  003B68                     l13546:
 15750                           
 15751                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
 15752  003B68  0E00               	movlw	0
 15753  003B6A  0101               	movlb	1	; () banked
 15754  003B6C  6F23               	movwf	(dtoa@i+1)& (0+255),b
 15755  003B6E  0E4F               	movlw	79
 15756  003B70  6F22               	movwf	dtoa@i& (0+255),b
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
 15760  003B72  0E00               	movlw	0
 15761  003B74  0103               	movlb	3	; () banked
 15762  003B76  6F85               	movwf	(_dbuf+79)& (0+255),b
 15763                           
 15764                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15765  003B78  D080               	goto	l13560
 15766  003B7A                     l13550:
 15767                           
 15768                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 313:         --i;
 15769  003B7A  0101               	movlb	1	; () banked
 15770  003B7C  0722               	decf	dtoa@i& (0+255),f,b
 15771  003B7E  A0D8               	btfss	status,0,c
 15772  003B80  0723               	decf	(dtoa@i+1)& (0+255),f,b
 15773                           
 15774                           ; BSR set to: 1
 15775                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
 15776  003B82  0E36               	movlw	low _dbuf
 15777  003B84  2522               	addwf	dtoa@i& (0+255),w,b
 15778  003B86  6ED9               	movwf	fsr2l,c
 15779  003B88  0E03               	movlw	high _dbuf
 15780  003B8A  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 15781  003B8C  6EDA               	movwf	fsr2h,c
 15782  003B8E  C11A  F08C         	movff	dtoa@n,___aomod@dividend
 15783  003B92  C11B  F08D         	movff	dtoa@n+1,___aomod@dividend+1
 15784  003B96  C11C  F08E         	movff	dtoa@n+2,___aomod@dividend+2
 15785  003B9A  C11D  F08F         	movff	dtoa@n+3,___aomod@dividend+3
 15786  003B9E  C11E  F090         	movff	dtoa@n+4,___aomod@dividend+4
 15787  003BA2  C11F  F091         	movff	dtoa@n+5,___aomod@dividend+5
 15788  003BA6  C120  F092         	movff	dtoa@n+6,___aomod@dividend+6
 15789  003BAA  C121  F093         	movff	dtoa@n+7,___aomod@dividend+7
 15790  003BAE  0E0A               	movlw	10
 15791  003BB0  0100               	movlb	0	; () banked
 15792  003BB2  6F94               	movwf	___aomod@divisor& (0+255),b
 15793  003BB4  0E00               	movlw	0
 15794  003BB6  6F95               	movwf	(___aomod@divisor+1)& (0+255),b
 15795  003BB8  0E00               	movlw	0
 15796  003BBA  6F96               	movwf	(___aomod@divisor+2)& (0+255),b
 15797  003BBC  0E00               	movlw	0
 15798  003BBE  6F97               	movwf	(___aomod@divisor+3)& (0+255),b
 15799  003BC0  0E00               	movlw	0
 15800  003BC2  6F98               	movwf	(___aomod@divisor+4)& (0+255),b
 15801  003BC4  0E00               	movlw	0
 15802  003BC6  6F99               	movwf	(___aomod@divisor+5)& (0+255),b
 15803  003BC8  0E00               	movlw	0
 15804  003BCA  6F9A               	movwf	(___aomod@divisor+6)& (0+255),b
 15805  003BCC  0E00               	movlw	0
 15806  003BCE  6F9B               	movwf	(___aomod@divisor+7)& (0+255),b
 15807  003BD0  ECF3  F028         	call	___aomod	;wreg free
 15808  003BD4  C08C  F10A         	movff	?___aomod,??_dtoa
 15809  003BD8  C08D  F10B         	movff	?___aomod+1,??_dtoa+1
 15810  003BDC  C08E  F10C         	movff	?___aomod+2,??_dtoa+2
 15811  003BE0  C08F  F10D         	movff	?___aomod+3,??_dtoa+3
 15812  003BE4  C090  F10E         	movff	?___aomod+4,??_dtoa+4
 15813  003BE8  C091  F10F         	movff	?___aomod+5,??_dtoa+5
 15814  003BEC  C092  F110         	movff	?___aomod+6,??_dtoa+6
 15815  003BF0  C093  F111         	movff	?___aomod+7,??_dtoa+7
 15816  003BF4  C10A  F09E         	movff	??_dtoa,abs@a
 15817  003BF8  C10C  F09F         	movff	??_dtoa+2,abs@a+1
 15818  003BFC  EC89  F03C         	call	_abs	;wreg free
 15819  003C00  519E               	movf	?_abs& (0+255),w,b
 15820  003C02  0F30               	addlw	48
 15821  003C04  6EDF               	movwf	indf2,c
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 315:         --p;
 15825  003C06  0101               	movlb	1	; () banked
 15826  003C08  0714               	decf	dtoa@p& (0+255),f,b
 15827  003C0A  A0D8               	btfss	status,0,c
 15828  003C0C  0715               	decf	(dtoa@p+1)& (0+255),f,b
 15829                           
 15830                           ; BSR set to: 1
 15831                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 316:         --w;
 15832  003C0E  0716               	decf	dtoa@w& (0+255),f,b
 15833  003C10  A0D8               	btfss	status,0,c
 15834  003C12  0717               	decf	(dtoa@w+1)& (0+255),f,b
 15835                           
 15836                           ; BSR set to: 1
 15837                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
 15838  003C14  C11A  F08C         	movff	dtoa@n,___aodiv@dividend
 15839  003C18  C11B  F08D         	movff	dtoa@n+1,___aodiv@dividend+1
 15840  003C1C  C11C  F08E         	movff	dtoa@n+2,___aodiv@dividend+2
 15841  003C20  C11D  F08F         	movff	dtoa@n+3,___aodiv@dividend+3
 15842  003C24  C11E  F090         	movff	dtoa@n+4,___aodiv@dividend+4
 15843  003C28  C11F  F091         	movff	dtoa@n+5,___aodiv@dividend+5
 15844  003C2C  C120  F092         	movff	dtoa@n+6,___aodiv@dividend+6
 15845  003C30  C121  F093         	movff	dtoa@n+7,___aodiv@dividend+7
 15846  003C34  0E0A               	movlw	10
 15847  003C36  0100               	movlb	0	; () banked
 15848  003C38  6F94               	movwf	___aodiv@divisor& (0+255),b
 15849  003C3A  0E00               	movlw	0
 15850  003C3C  6F95               	movwf	(___aodiv@divisor+1)& (0+255),b
 15851  003C3E  0E00               	movlw	0
 15852  003C40  6F96               	movwf	(___aodiv@divisor+2)& (0+255),b
 15853  003C42  0E00               	movlw	0
 15854  003C44  6F97               	movwf	(___aodiv@divisor+3)& (0+255),b
 15855  003C46  0E00               	movlw	0
 15856  003C48  6F98               	movwf	(___aodiv@divisor+4)& (0+255),b
 15857  003C4A  0E00               	movlw	0
 15858  003C4C  6F99               	movwf	(___aodiv@divisor+5)& (0+255),b
 15859  003C4E  0E00               	movlw	0
 15860  003C50  6F9A               	movwf	(___aodiv@divisor+6)& (0+255),b
 15861  003C52  0E00               	movlw	0
 15862  003C54  6F9B               	movwf	(___aodiv@divisor+7)& (0+255),b
 15863  003C56  EC7B  F023         	call	___aodiv	;wreg free
 15864  003C5A  C08C  F11A         	movff	?___aodiv,dtoa@n
 15865  003C5E  C08D  F11B         	movff	?___aodiv+1,dtoa@n+1
 15866  003C62  C08E  F11C         	movff	?___aodiv+2,dtoa@n+2
 15867  003C66  C08F  F11D         	movff	?___aodiv+3,dtoa@n+3
 15868  003C6A  C090  F11E         	movff	?___aodiv+4,dtoa@n+4
 15869  003C6E  C091  F11F         	movff	?___aodiv+5,dtoa@n+5
 15870  003C72  C092  F120         	movff	?___aodiv+6,dtoa@n+6
 15871  003C76  C093  F121         	movff	?___aodiv+7,dtoa@n+7
 15872  003C7A                     l13560:
 15873                           
 15874                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15875  003C7A  0101               	movlb	1	; () banked
 15876  003C7C  BF23               	btfsc	(dtoa@i+1)& (0+255),7,b
 15877  003C7E  D020               	goto	u16160
 15878  003C80  5123               	movf	(dtoa@i+1)& (0+255),w,b
 15879  003C82  E103               	bnz	u16120
 15880  003C84  0522               	decf	dtoa@i& (0+255),w,b
 15881  003C86  A0D8               	btfss	status,0,c
 15882  003C88  D01B               	goto	u16160
 15883  003C8A                     u16120:
 15884                           
 15885                           ; BSR set to: 1
 15886  003C8A  511A               	movf	dtoa@n& (0+255),w,b
 15887  003C8C  111B               	iorwf	(dtoa@n+1)& (0+255),w,b
 15888  003C8E  111C               	iorwf	(dtoa@n+2)& (0+255),w,b
 15889  003C90  111D               	iorwf	(dtoa@n+3)& (0+255),w,b
 15890  003C92  111E               	iorwf	(dtoa@n+4)& (0+255),w,b
 15891  003C94  111F               	iorwf	(dtoa@n+5)& (0+255),w,b
 15892  003C96  1120               	iorwf	(dtoa@n+6)& (0+255),w,b
 15893  003C98  1121               	iorwf	(dtoa@n+7)& (0+255),w,b
 15894  003C9A  A4D8               	btfss	status,2,c
 15895  003C9C  D76E               	goto	l13550
 15896                           
 15897                           ; BSR set to: 1
 15898  003C9E  BF15               	btfsc	(dtoa@p+1)& (0+255),7,b
 15899  003CA0  D005               	goto	u16140
 15900  003CA2  5115               	movf	(dtoa@p+1)& (0+255),w,b
 15901  003CA4  E102               	bnz	u16141
 15902  003CA6  0514               	decf	dtoa@p& (0+255),w,b
 15903  003CA8  B0D8               	btfsc	status,0,c
 15904  003CAA                     u16141:
 15905  003CAA  D767               	goto	l13550
 15906  003CAC                     u16140:
 15907                           
 15908                           ; BSR set to: 1
 15909  003CAC  BF17               	btfsc	(dtoa@w+1)& (0+255),7,b
 15910  003CAE  D008               	goto	u16160
 15911  003CB0  5117               	movf	(dtoa@w+1)& (0+255),w,b
 15912  003CB2  E103               	bnz	u16150
 15913  003CB4  0516               	decf	dtoa@w& (0+255),w,b
 15914  003CB6  A0D8               	btfss	status,0,c
 15915  003CB8  D003               	goto	u16160
 15916  003CBA                     u16150:
 15917                           
 15918                           ; BSR set to: 1
 15919  003CBA  0100               	movlb	0	; () banked
 15920  003CBC  B3C0               	btfsc	_flags& (0+255),1,b
 15921  003CBE  D75D               	goto	l13550
 15922  003CC0                     u16160:
 15923                           
 15924                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
 15925  003CC0  0101               	movlb	1	; () banked
 15926  003CC2  5118               	movf	dtoa@s& (0+255),w,b
 15927  003CC4  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 15928  003CC6  A4D8               	btfss	status,2,c
 15929  003CC8  D003               	goto	u16180
 15930                           
 15931                           ; BSR set to: 1
 15932  003CCA  0100               	movlb	0	; () banked
 15933  003CCC  A5C0               	btfss	_flags& (0+255),2,b
 15934  003CCE  D018               	goto	l13584
 15935  003CD0                     u16180:
 15936                           
 15937                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 322:         --i;
 15938  003CD0  0101               	movlb	1	; () banked
 15939  003CD2  0722               	decf	dtoa@i& (0+255),f,b
 15940  003CD4  A0D8               	btfss	status,0,c
 15941  003CD6  0723               	decf	(dtoa@i+1)& (0+255),f,b
 15942                           
 15943                           ; BSR set to: 1
 15944                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
 15945  003CD8  5118               	movf	dtoa@s& (0+255),w,b
 15946  003CDA  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 15947  003CDC  A4D8               	btfss	status,2,c
 15948  003CDE  D004               	goto	l13580
 15949                           
 15950                           ; BSR set to: 1
 15951  003CE0  0E00               	movlw	0
 15952  003CE2  6F13               	movwf	(_dtoa$4981+1)& (0+255),b
 15953  003CE4  0E2B               	movlw	43
 15954  003CE6  D003               	goto	L18
 15955  003CE8                     l13580:
 15956                           
 15957                           ; BSR set to: 1
 15958  003CE8  0E00               	movlw	0
 15959  003CEA  6F13               	movwf	(_dtoa$4981+1)& (0+255),b
 15960  003CEC  0E2D               	movlw	45
 15961  003CEE                     L18:
 15962  003CEE  6F12               	movwf	_dtoa$4981& (0+255),b
 15963                           
 15964                           ; BSR set to: 1
 15965  003CF0  0E36               	movlw	low _dbuf
 15966  003CF2  2522               	addwf	dtoa@i& (0+255),w,b
 15967  003CF4  6ED9               	movwf	fsr2l,c
 15968  003CF6  0E03               	movlw	high _dbuf
 15969  003CF8  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 15970  003CFA  6EDA               	movwf	fsr2h,c
 15971  003CFC  C112  FFDF         	movff	_dtoa$4981,indf2
 15972  003D00                     l13584:
 15973                           
 15974                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
 15975  003D00  C100  F09C         	movff	dtoa@fp,pad@fp
 15976  003D04  C101  F09D         	movff	dtoa@fp+1,pad@fp+1
 15977  003D08  0E36               	movlw	low _dbuf
 15978  003D0A  0101               	movlb	1	; () banked
 15979  003D0C  2522               	addwf	dtoa@i& (0+255),w,b
 15980  003D0E  0100               	movlb	0	; () banked
 15981  003D10  6F9E               	movwf	pad@buf& (0+255),b
 15982  003D12  0E03               	movlw	high _dbuf
 15983  003D14  0101               	movlb	1	; () banked
 15984  003D16  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 15985  003D18  0100               	movlb	0	; () banked
 15986  003D1A  6F9F               	movwf	(pad@buf+1)& (0+255),b
 15987  003D1C  C116  F0A0         	movff	dtoa@w,pad@p
 15988  003D20  C117  F0A1         	movff	dtoa@w+1,pad@p+1
 15989  003D24  EC3B  F035         	call	_pad	;wreg free
 15990  003D28  C09C  F100         	movff	?_pad,?_dtoa
 15991  003D2C  C09D  F101         	movff	?_pad+1,?_dtoa+1
 15992                           
 15993                           ; BSR set to: 0
 15994  003D30  0012               	return		;funcret
 15995  003D32                     __end_of_dtoa:
 15996                           	callstack 0
 15997                           
 15998 ;; *************** function _pad *****************
 15999 ;; Defined at:
 16000 ;;		line 72 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
 16003 ;;		 -> sprintf@f(11), 
 16004 ;;  buf             2   62[BANK0 ] PTR unsigned char 
 16005 ;;		 -> dbuf(80), 
 16006 ;;  p               2   64[BANK0 ] int 
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;  w               2   69[BANK0 ] int 
 16009 ;;  i               2   67[BANK0 ] int 
 16010 ;; Return value:  Size  Location     Type
 16011 ;;                  2   60[BANK0 ] int 
 16012 ;; Registers used:
 16013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16014 ;; Tracked objects:
 16015 ;;		On entry : 3F/0
 16016 ;;		On exit  : 3F/0
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16019 ;;      Params:         0       6       0       0       0       0       0       0       0
 16020 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16021 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16022 ;;      Totals:         0      11       0       0       0       0       0       0       0
 16023 ;;Total ram usage:       11 bytes
 16024 ;; Hardware stack levels used: 1
 16025 ;; Hardware stack levels required when called: 13
 16026 ;; This function calls:
 16027 ;;		_fputc
 16028 ;;		_fputs
 16029 ;;		_strlen
 16030 ;; This function is called by:
 16031 ;;		_dtoa
 16032 ;;		_efgtoa
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text58
 16037  006A76                     __ptext58:
 16038                           	callstack 0
 16039  006A76                     _pad:
 16040                           	callstack 13
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 16044                           
 16045                           ; BSR set to: 0
 16046                           ;incstack = 0
 16047  006A76  A1C0               	btfss	_flags& (0+255),0,b
 16048  006A78  D00A               	goto	l13330
 16049                           
 16050                           ; BSR set to: 0
 16051                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 16052  006A7A  C09E  F095         	movff	pad@buf,fputs@s
 16053  006A7E  C09F  F096         	movff	pad@buf+1,fputs@s+1
 16054  006A82  C09C  F097         	movff	pad@fp,fputs@fp
 16055  006A86  C09D  F098         	movff	pad@fp+1,fputs@fp+1
 16056  006A8A  ECE9  F03B         	call	_fputs	;wreg free
 16057  006A8E                     l13330:
 16058                           
 16059                           ; BSR set to: 0
 16060                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 16061  006A8E  BFA1               	btfsc	(pad@p+1)& (0+255),7,b
 16062  006A90  D005               	goto	l13334
 16063                           
 16064                           ; BSR set to: 0
 16065  006A92  C0A0  F0A5         	movff	pad@p,pad@w
 16066  006A96  C0A1  F0A6         	movff	pad@p+1,pad@w+1
 16067  006A9A  D004               	goto	l2205
 16068  006A9C                     l13334:
 16069                           
 16070                           ; BSR set to: 0
 16071  006A9C  0E00               	movlw	0
 16072  006A9E  6FA6               	movwf	(pad@w+1)& (0+255),b
 16073  006AA0  0E00               	movlw	0
 16074  006AA2  6FA5               	movwf	pad@w& (0+255),b
 16075  006AA4                     l2205:
 16076                           
 16077                           ; BSR set to: 0
 16078                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 16079  006AA4  0E00               	movlw	0
 16080  006AA6  6FA4               	movwf	(pad@i+1)& (0+255),b
 16081  006AA8  0E00               	movlw	0
 16082  006AAA  6FA3               	movwf	pad@i& (0+255),b
 16083                           
 16084                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 16085  006AAC  D00C               	goto	l13340
 16086  006AAE                     l13336:
 16087                           
 16088                           ; BSR set to: 0
 16089                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 16090  006AAE  0E00               	movlw	0
 16091  006AB0  6F8D               	movwf	(fputc@c+1)& (0+255),b
 16092  006AB2  0E20               	movlw	32
 16093  006AB4  6F8C               	movwf	fputc@c& (0+255),b
 16094  006AB6  C09C  F08E         	movff	pad@fp,fputc@fp
 16095  006ABA  C09D  F08F         	movff	pad@fp+1,fputc@fp+1
 16096  006ABE  EC9D  F034         	call	_fputc	;wreg free
 16097                           
 16098                           ; BSR set to: 0
 16099                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
 16100  006AC2  4BA3               	infsnz	pad@i& (0+255),f,b
 16101  006AC4  2BA4               	incf	(pad@i+1)& (0+255),f,b
 16102  006AC6                     l13340:
 16103                           
 16104                           ; BSR set to: 0
 16105                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 16106  006AC6  51A5               	movf	pad@w& (0+255),w,b
 16107  006AC8  5DA3               	subwf	pad@i& (0+255),w,b
 16108  006ACA  51A4               	movf	(pad@i+1)& (0+255),w,b
 16109  006ACC  0A80               	xorlw	128
 16110  006ACE  6FA2               	movwf	??_pad& (0+255),b
 16111  006AD0  51A6               	movf	(pad@w+1)& (0+255),w,b
 16112  006AD2  0A80               	xorlw	128
 16113  006AD4  59A2               	subwfb	??_pad& (0+255),w,b
 16114  006AD6  A0D8               	btfss	status,0,c
 16115  006AD8  D7EA               	goto	l13336
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 16119  006ADA  B1C0               	btfsc	_flags& (0+255),0,b
 16120  006ADC  D00A               	goto	l13344
 16121                           
 16122                           ; BSR set to: 0
 16123                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 16124  006ADE  C09E  F095         	movff	pad@buf,fputs@s
 16125  006AE2  C09F  F096         	movff	pad@buf+1,fputs@s+1
 16126  006AE6  C09C  F097         	movff	pad@fp,fputs@fp
 16127  006AEA  C09D  F098         	movff	pad@fp+1,fputs@fp+1
 16128  006AEE  ECE9  F03B         	call	_fputs	;wreg free
 16129  006AF2                     l13344:
 16130                           
 16131                           ; BSR set to: 0
 16132                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
 16133  006AF2  C09E  F08C         	movff	pad@buf,strlen@s
 16134  006AF6  C09F  F08D         	movff	pad@buf+1,strlen@s+1
 16135  006AFA  EC03  F03D         	call	_strlen	;wreg free
 16136  006AFE  51A5               	movf	pad@w& (0+255),w,b
 16137  006B00  258C               	addwf	?_strlen& (0+255),w,b
 16138  006B02  6F9C               	movwf	?_pad& (0+255),b
 16139  006B04  51A6               	movf	(pad@w+1)& (0+255),w,b
 16140  006B06  218D               	addwfc	(?_strlen+1)& (0+255),w,b
 16141  006B08  6F9D               	movwf	(?_pad+1)& (0+255),b
 16142                           
 16143                           ; BSR set to: 0
 16144  006B0A  0012               	return		;funcret
 16145  006B0C                     __end_of_pad:
 16146                           	callstack 0
 16147                           
 16148 ;; *************** function _strlen *****************
 16149 ;; Defined at:
 16150 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 16151 ;; Parameters:    Size  Location     Type
 16152 ;;  s               2   44[BANK0 ] PTR const unsigned char 
 16153 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), executeCommand@strCommand(30), 
 16154 ;;		 -> lastToken(30), readBuffer(32), Encoder_ISR@salida(4), Encoder_ISR@tics(4), 
 16155 ;;		 -> ustep(1), NULL(0), 
 16156 ;; Auto vars:     Size  Location     Type
 16157 ;;  a               2   46[BANK0 ] PTR const unsigned char 
 16158 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), executeCommand@strCommand(30), 
 16159 ;;		 -> lastToken(30), readBuffer(32), Encoder_ISR@salida(4), Encoder_ISR@tics(4), 
 16160 ;;		 -> ustep(1), NULL(0), 
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  2   44[BANK0 ] unsigned int 
 16163 ;; Registers used:
 16164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16165 ;; Tracked objects:
 16166 ;;		On entry : 3C/0
 16167 ;;		On exit  : 3F/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16170 ;;      Params:         0       2       0       0       0       0       0       0       0
 16171 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16173 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16174 ;;Total ram usage:        4 bytes
 16175 ;; Hardware stack levels used: 1
 16176 ;; Hardware stack levels required when called: 10
 16177 ;; This function calls:
 16178 ;;		Nothing
 16179 ;; This function is called by:
 16180 ;;		_USBCommandFetch
 16181 ;;		_pad
 16182 ;;		_stoa
 16183 ;; This function uses a non-reentrant model
 16184 ;;
 16185                           
 16186                           	psect	text59
 16187  007A06                     __ptext59:
 16188                           	callstack 0
 16189  007A06                     _strlen:
 16190                           	callstack 16
 16191                           
 16192                           ; BSR set to: 0
 16193                           ;incstack = 0
 16194  007A06  C08C  F08E         	movff	strlen@s,strlen@a
 16195  007A0A  C08D  F08F         	movff	strlen@s+1,strlen@a+1
 16196  007A0E  D003               	goto	l12572
 16197  007A10                     l12570:
 16198  007A10  0100               	movlb	0	; () banked
 16199  007A12  4B8C               	infsnz	strlen@s& (0+255),f,b
 16200  007A14  2B8D               	incf	(strlen@s+1)& (0+255),f,b
 16201  007A16                     l12572:
 16202  007A16  C08C  FFD9         	movff	strlen@s,fsr2l
 16203  007A1A  C08D  FFDA         	movff	strlen@s+1,fsr2h
 16204  007A1E  50DF               	movf	indf2,w,c
 16205  007A20  A4D8               	btfss	status,2,c
 16206  007A22  D7F6               	goto	l12570
 16207  007A24  0100               	movlb	0	; () banked
 16208  007A26  518E               	movf	strlen@a& (0+255),w,b
 16209  007A28  5D8C               	subwf	strlen@s& (0+255),w,b
 16210  007A2A  6F8C               	movwf	?_strlen& (0+255),b
 16211  007A2C  518F               	movf	(strlen@a+1)& (0+255),w,b
 16212  007A2E  598D               	subwfb	(strlen@s+1)& (0+255),w,b
 16213  007A30  6F8D               	movwf	(?_strlen+1)& (0+255),b
 16214                           
 16215                           ; BSR set to: 0
 16216  007A32  0012               	return		;funcret
 16217  007A34                     __end_of_strlen:
 16218                           	callstack 0
 16219                           
 16220 ;; *************** function _fputs *****************
 16221 ;; Defined at:
 16222 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 16223 ;; Parameters:    Size  Location     Type
 16224 ;;  s               2   53[BANK0 ] PTR const unsigned char 
 16225 ;;		 -> dbuf(80), 
 16226 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
 16227 ;;		 -> sprintf@f(11), 
 16228 ;; Auto vars:     Size  Location     Type
 16229 ;;  i               2   58[BANK0 ] int 
 16230 ;;  c               1   57[BANK0 ] unsigned char 
 16231 ;; Return value:  Size  Location     Type
 16232 ;;                  2   53[BANK0 ] int 
 16233 ;; Registers used:
 16234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16235 ;; Tracked objects:
 16236 ;;		On entry : 3F/0
 16237 ;;		On exit  : 3F/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16240 ;;      Params:         0       4       0       0       0       0       0       0       0
 16241 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16242 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16243 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16244 ;;Total ram usage:        7 bytes
 16245 ;; Hardware stack levels used: 1
 16246 ;; Hardware stack levels required when called: 12
 16247 ;; This function calls:
 16248 ;;		_fputc
 16249 ;; This function is called by:
 16250 ;;		_pad
 16251 ;; This function uses a non-reentrant model
 16252 ;;
 16253                           
 16254                           	psect	text60
 16255  0077D2                     __ptext60:
 16256                           	callstack 0
 16257  0077D2                     _fputs:
 16258                           	callstack 13
 16259                           
 16260                           ; BSR set to: 0
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;incstack = 0
 16264  0077D2  0E00               	movlw	0
 16265  0077D4  6F9B               	movwf	(fputs@i+1)& (0+255),b
 16266  0077D6  0E00               	movlw	0
 16267  0077D8  6F9A               	movwf	fputs@i& (0+255),b
 16268  0077DA  D00B               	goto	l12786
 16269  0077DC                     l12782:
 16270                           
 16271                           ; BSR set to: 0
 16272  0077DC  C099  F08C         	movff	fputs@c,fputc@c
 16273  0077E0  6B8D               	clrf	(fputc@c+1)& (0+255),b
 16274  0077E2  C097  F08E         	movff	fputs@fp,fputc@fp
 16275  0077E6  C098  F08F         	movff	fputs@fp+1,fputc@fp+1
 16276  0077EA  EC9D  F034         	call	_fputc	;wreg free
 16277                           
 16278                           ; BSR set to: 0
 16279  0077EE  4B9A               	infsnz	fputs@i& (0+255),f,b
 16280  0077F0  2B9B               	incf	(fputs@i+1)& (0+255),f,b
 16281  0077F2                     l12786:
 16282                           
 16283                           ; BSR set to: 0
 16284  0077F2  519A               	movf	fputs@i& (0+255),w,b
 16285  0077F4  2595               	addwf	fputs@s& (0+255),w,b
 16286  0077F6  6ED9               	movwf	fsr2l,c
 16287  0077F8  519B               	movf	(fputs@i+1)& (0+255),w,b
 16288  0077FA  2196               	addwfc	(fputs@s+1)& (0+255),w,b
 16289  0077FC  6EDA               	movwf	fsr2h,c
 16290  0077FE  50DF               	movf	indf2,w,c
 16291  007800  6F99               	movwf	fputs@c& (0+255),b
 16292  007802  5199               	movf	fputs@c& (0+255),w,b
 16293  007804  B4D8               	btfsc	status,2,c
 16294  007806  0012               	return	
 16295  007808  D7E9               	goto	l12782
 16296  00780A                     __end_of_fputs:
 16297                           	callstack 0
 16298                           
 16299 ;; *************** function _abs *****************
 16300 ;; Defined at:
 16301 ;;		line 1 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/abs.c"
 16302 ;; Parameters:    Size  Location     Type
 16303 ;;  a               2   62[BANK0 ] int 
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;		None
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  2   62[BANK0 ] int 
 16308 ;; Registers used:
 16309 ;;		wreg, status,2, status,0
 16310 ;; Tracked objects:
 16311 ;;		On entry : 3F/0
 16312 ;;		On exit  : 3F/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16315 ;;      Params:         0       2       0       0       0       0       0       0       0
 16316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16317 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16318 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16319 ;;Total ram usage:        4 bytes
 16320 ;; Hardware stack levels used: 1
 16321 ;; Hardware stack levels required when called: 10
 16322 ;; This function calls:
 16323 ;;		Nothing
 16324 ;; This function is called by:
 16325 ;;		_dtoa
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text61
 16330  007912                     __ptext61:
 16331                           	callstack 0
 16332  007912                     _abs:
 16333                           	callstack 16
 16334                           
 16335                           ; BSR set to: 0
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;incstack = 0
 16339  007912  BF9F               	btfsc	(abs@a+1)& (0+255),7,b
 16340  007914  D005               	goto	u15700
 16341  007916  519F               	movf	(abs@a+1)& (0+255),w,b
 16342  007918  E110               	bnz	l2415
 16343  00791A  059E               	decf	abs@a& (0+255),w,b
 16344  00791C  B0D8               	btfsc	status,0,c
 16345  00791E  D00D               	goto	l2415
 16346  007920                     u15700:
 16347                           
 16348                           ; BSR set to: 0
 16349  007920  C09E  F0A0         	movff	abs@a,??_abs
 16350  007924  C09F  F0A1         	movff	abs@a+1,??_abs+1
 16351  007928  1FA0               	comf	??_abs& (0+255),f,b
 16352  00792A  1FA1               	comf	(??_abs+1)& (0+255),f,b
 16353  00792C  4BA0               	infsnz	??_abs& (0+255),f,b
 16354  00792E  2BA1               	incf	(??_abs+1)& (0+255),f,b
 16355  007930  C0A0  F09E         	movff	??_abs,?_abs
 16356  007934  C0A1  F09F         	movff	??_abs+1,?_abs+1
 16357  007938  0012               	return	
 16358  00793A                     l2415:
 16359                           
 16360                           ; BSR set to: 0
 16361  00793A  C09E  F09E         	movff	abs@a,?_abs
 16362  00793E  C09F  F09F         	movff	abs@a+1,?_abs+1
 16363                           
 16364                           ; BSR set to: 0
 16365  007942  0012               	return		;funcret
 16366  007944                     __end_of_abs:
 16367                           	callstack 0
 16368                           
 16369 ;; *************** function ___aomod *****************
 16370 ;; Defined at:
 16371 ;;		line 9 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/aomod.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  dividend        8   44[BANK0 ] long long 
 16374 ;;  divisor         8   52[BANK0 ] long long 
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;  sign            1   61[BANK0 ] unsigned char 
 16377 ;;  counter         1   60[BANK0 ] unsigned char 
 16378 ;; Return value:  Size  Location     Type
 16379 ;;                  8   44[BANK0 ] long long 
 16380 ;; Registers used:
 16381 ;;		wreg, status,2, status,0
 16382 ;; Tracked objects:
 16383 ;;		On entry : 3F/0
 16384 ;;		On exit  : 3F/0
 16385 ;;		Unchanged: 0/0
 16386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16387 ;;      Params:         0      16       0       0       0       0       0       0       0
 16388 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16390 ;;      Totals:         0      18       0       0       0       0       0       0       0
 16391 ;;Total ram usage:       18 bytes
 16392 ;; Hardware stack levels used: 1
 16393 ;; Hardware stack levels required when called: 10
 16394 ;; This function calls:
 16395 ;;		Nothing
 16396 ;; This function is called by:
 16397 ;;		_dtoa
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           	psect	text62
 16402  0051E6                     __ptext62:
 16403                           	callstack 0
 16404  0051E6                     ___aomod:
 16405                           	callstack 16
 16406                           
 16407                           ; BSR set to: 0
 16408                           
 16409                           ; BSR set to: 0
 16410                           ;incstack = 0
 16411  0051E6  0E00               	movlw	0
 16412  0051E8  6F9D               	movwf	___aomod@sign& (0+255),b
 16413                           
 16414                           ; BSR set to: 0
 16415  0051EA  AF93               	btfss	(___aomod@dividend+7)& (0+255),7,b
 16416  0051EC  D012               	goto	l12854
 16417                           
 16418                           ; BSR set to: 0
 16419  0051EE  1F93               	comf	(___aomod@dividend+7)& (0+255),f,b
 16420  0051F0  1F92               	comf	(___aomod@dividend+6)& (0+255),f,b
 16421  0051F2  1F91               	comf	(___aomod@dividend+5)& (0+255),f,b
 16422  0051F4  1F90               	comf	(___aomod@dividend+4)& (0+255),f,b
 16423  0051F6  1F8F               	comf	(___aomod@dividend+3)& (0+255),f,b
 16424  0051F8  1F8E               	comf	(___aomod@dividend+2)& (0+255),f,b
 16425  0051FA  1F8D               	comf	(___aomod@dividend+1)& (0+255),f,b
 16426  0051FC  6D8C               	negf	___aomod@dividend& (0+255),b
 16427  0051FE  0E00               	movlw	0
 16428  005200  238D               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 16429  005202  238E               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 16430  005204  238F               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 16431  005206  2390               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 16432  005208  2391               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 16433  00520A  2392               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 16434  00520C  2393               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 16435                           
 16436                           ; BSR set to: 0
 16437  00520E  0E01               	movlw	1
 16438  005210  6F9D               	movwf	___aomod@sign& (0+255),b
 16439  005212                     l12854:
 16440                           
 16441                           ; BSR set to: 0
 16442  005212  AF9B               	btfss	(___aomod@divisor+7)& (0+255),7,b
 16443  005214  D010               	goto	l12858
 16444                           
 16445                           ; BSR set to: 0
 16446  005216  1F9B               	comf	(___aomod@divisor+7)& (0+255),f,b
 16447  005218  1F9A               	comf	(___aomod@divisor+6)& (0+255),f,b
 16448  00521A  1F99               	comf	(___aomod@divisor+5)& (0+255),f,b
 16449  00521C  1F98               	comf	(___aomod@divisor+4)& (0+255),f,b
 16450  00521E  1F97               	comf	(___aomod@divisor+3)& (0+255),f,b
 16451  005220  1F96               	comf	(___aomod@divisor+2)& (0+255),f,b
 16452  005222  1F95               	comf	(___aomod@divisor+1)& (0+255),f,b
 16453  005224  6D94               	negf	___aomod@divisor& (0+255),b
 16454  005226  0E00               	movlw	0
 16455  005228  2395               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 16456  00522A  2396               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 16457  00522C  2397               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 16458  00522E  2398               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 16459  005230  2399               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 16460  005232  239A               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 16461  005234  239B               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 16462  005236                     l12858:
 16463                           
 16464                           ; BSR set to: 0
 16465  005236  5194               	movf	___aomod@divisor& (0+255),w,b
 16466  005238  1195               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 16467  00523A  1196               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 16468  00523C  1197               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 16469  00523E  1198               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 16470  005240  1199               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 16471  005242  119A               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 16472  005244  119B               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 16473  005246  B4D8               	btfsc	status,2,c
 16474  005248  D03C               	goto	l12874
 16475                           
 16476                           ; BSR set to: 0
 16477  00524A  0E01               	movlw	1
 16478  00524C  6F9C               	movwf	___aomod@counter& (0+255),b
 16479  00524E  D00A               	goto	l12864
 16480  005250                     l12862:
 16481                           
 16482                           ; BSR set to: 0
 16483  005250  90D8               	bcf	status,0,c
 16484  005252  3794               	rlcf	___aomod@divisor& (0+255),f,b
 16485  005254  3795               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 16486  005256  3796               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 16487  005258  3797               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 16488  00525A  3798               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 16489  00525C  3799               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 16490  00525E  379A               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 16491  005260  379B               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 16492  005262  2B9C               	incf	___aomod@counter& (0+255),f,b
 16493  005264                     l12864:
 16494                           
 16495                           ; BSR set to: 0
 16496  005264  AF9B               	btfss	(___aomod@divisor+7)& (0+255),7,b
 16497  005266  D7F4               	goto	l12862
 16498  005268                     u14940:
 16499                           
 16500                           ; BSR set to: 0
 16501  005268  5194               	movf	___aomod@divisor& (0+255),w,b
 16502  00526A  5D8C               	subwf	___aomod@dividend& (0+255),w,b
 16503  00526C  5195               	movf	(___aomod@divisor+1)& (0+255),w,b
 16504  00526E  598D               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 16505  005270  5196               	movf	(___aomod@divisor+2)& (0+255),w,b
 16506  005272  598E               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 16507  005274  5197               	movf	(___aomod@divisor+3)& (0+255),w,b
 16508  005276  598F               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 16509  005278  5198               	movf	(___aomod@divisor+4)& (0+255),w,b
 16510  00527A  5990               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 16511  00527C  5199               	movf	(___aomod@divisor+5)& (0+255),w,b
 16512  00527E  5991               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 16513  005280  519A               	movf	(___aomod@divisor+6)& (0+255),w,b
 16514  005282  5992               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 16515  005284  519B               	movf	(___aomod@divisor+7)& (0+255),w,b
 16516  005286  5993               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 16517  005288  A0D8               	btfss	status,0,c
 16518  00528A  D010               	goto	l12870
 16519                           
 16520                           ; BSR set to: 0
 16521  00528C  5194               	movf	___aomod@divisor& (0+255),w,b
 16522  00528E  5F8C               	subwf	___aomod@dividend& (0+255),f,b
 16523  005290  5195               	movf	(___aomod@divisor+1)& (0+255),w,b
 16524  005292  5B8D               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 16525  005294  5196               	movf	(___aomod@divisor+2)& (0+255),w,b
 16526  005296  5B8E               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 16527  005298  5197               	movf	(___aomod@divisor+3)& (0+255),w,b
 16528  00529A  5B8F               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 16529  00529C  5198               	movf	(___aomod@divisor+4)& (0+255),w,b
 16530  00529E  5B90               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 16531  0052A0  5199               	movf	(___aomod@divisor+5)& (0+255),w,b
 16532  0052A2  5B91               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 16533  0052A4  519A               	movf	(___aomod@divisor+6)& (0+255),w,b
 16534  0052A6  5B92               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 16535  0052A8  519B               	movf	(___aomod@divisor+7)& (0+255),w,b
 16536  0052AA  5B93               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 16537  0052AC                     l12870:
 16538                           
 16539                           ; BSR set to: 0
 16540  0052AC  90D8               	bcf	status,0,c
 16541  0052AE  339B               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 16542  0052B0  339A               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 16543  0052B2  3399               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 16544  0052B4  3398               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 16545  0052B6  3397               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 16546  0052B8  3396               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 16547  0052BA  3395               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 16548  0052BC  3394               	rrcf	___aomod@divisor& (0+255),f,b
 16549                           
 16550                           ; BSR set to: 0
 16551  0052BE  2F9C               	decfsz	___aomod@counter& (0+255),f,b
 16552  0052C0  D7D3               	goto	u14940
 16553  0052C2                     l12874:
 16554                           
 16555                           ; BSR set to: 0
 16556  0052C2  519D               	movf	___aomod@sign& (0+255),w,b
 16557  0052C4  B4D8               	btfsc	status,2,c
 16558  0052C6  D010               	goto	l12878
 16559                           
 16560                           ; BSR set to: 0
 16561  0052C8  1F93               	comf	(___aomod@dividend+7)& (0+255),f,b
 16562  0052CA  1F92               	comf	(___aomod@dividend+6)& (0+255),f,b
 16563  0052CC  1F91               	comf	(___aomod@dividend+5)& (0+255),f,b
 16564  0052CE  1F90               	comf	(___aomod@dividend+4)& (0+255),f,b
 16565  0052D0  1F8F               	comf	(___aomod@dividend+3)& (0+255),f,b
 16566  0052D2  1F8E               	comf	(___aomod@dividend+2)& (0+255),f,b
 16567  0052D4  1F8D               	comf	(___aomod@dividend+1)& (0+255),f,b
 16568  0052D6  6D8C               	negf	___aomod@dividend& (0+255),b
 16569  0052D8  0E00               	movlw	0
 16570  0052DA  238D               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 16571  0052DC  238E               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 16572  0052DE  238F               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 16573  0052E0  2390               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 16574  0052E2  2391               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 16575  0052E4  2392               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 16576  0052E6  2393               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 16577  0052E8                     l12878:
 16578                           
 16579                           ; BSR set to: 0
 16580  0052E8  C08C  F08C         	movff	___aomod@dividend,?___aomod
 16581  0052EC  C08D  F08D         	movff	___aomod@dividend+1,?___aomod+1
 16582  0052F0  C08E  F08E         	movff	___aomod@dividend+2,?___aomod+2
 16583  0052F4  C08F  F08F         	movff	___aomod@dividend+3,?___aomod+3
 16584  0052F8  C090  F090         	movff	___aomod@dividend+4,?___aomod+4
 16585  0052FC  C091  F091         	movff	___aomod@dividend+5,?___aomod+5
 16586  005300  C092  F092         	movff	___aomod@dividend+6,?___aomod+6
 16587  005304  C093  F093         	movff	___aomod@dividend+7,?___aomod+7
 16588                           
 16589                           ; BSR set to: 0
 16590  005308  0012               	return		;funcret
 16591  00530A                     __end_of___aomod:
 16592                           	callstack 0
 16593                           
 16594 ;; *************** function ___aodiv *****************
 16595 ;; Defined at:
 16596 ;;		line 9 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/aodiv.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;  dividend        8   44[BANK0 ] long long 
 16599 ;;  divisor         8   52[BANK0 ] long long 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  quotient        8   62[BANK0 ] long long 
 16602 ;;  sign            1   61[BANK0 ] unsigned char 
 16603 ;;  counter         1   60[BANK0 ] unsigned char 
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  8   44[BANK0 ] long long 
 16606 ;; Registers used:
 16607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16608 ;; Tracked objects:
 16609 ;;		On entry : 3F/0
 16610 ;;		On exit  : 3F/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16613 ;;      Params:         0      16       0       0       0       0       0       0       0
 16614 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16616 ;;      Totals:         0      26       0       0       0       0       0       0       0
 16617 ;;Total ram usage:       26 bytes
 16618 ;; Hardware stack levels used: 1
 16619 ;; Hardware stack levels required when called: 10
 16620 ;; This function calls:
 16621 ;;		Nothing
 16622 ;; This function is called by:
 16623 ;;		_dtoa
 16624 ;; This function uses a non-reentrant model
 16625 ;;
 16626                           
 16627                           	psect	text63
 16628  0046F6                     __ptext63:
 16629                           	callstack 0
 16630  0046F6                     ___aodiv:
 16631                           	callstack 16
 16632                           
 16633                           ; BSR set to: 0
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;incstack = 0
 16637  0046F6  0E00               	movlw	0
 16638  0046F8  6F9D               	movwf	___aodiv@sign& (0+255),b
 16639                           
 16640                           ; BSR set to: 0
 16641  0046FA  AF9B               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 16642  0046FC  D012               	goto	l12810
 16643                           
 16644                           ; BSR set to: 0
 16645  0046FE  1F9B               	comf	(___aodiv@divisor+7)& (0+255),f,b
 16646  004700  1F9A               	comf	(___aodiv@divisor+6)& (0+255),f,b
 16647  004702  1F99               	comf	(___aodiv@divisor+5)& (0+255),f,b
 16648  004704  1F98               	comf	(___aodiv@divisor+4)& (0+255),f,b
 16649  004706  1F97               	comf	(___aodiv@divisor+3)& (0+255),f,b
 16650  004708  1F96               	comf	(___aodiv@divisor+2)& (0+255),f,b
 16651  00470A  1F95               	comf	(___aodiv@divisor+1)& (0+255),f,b
 16652  00470C  6D94               	negf	___aodiv@divisor& (0+255),b
 16653  00470E  0E00               	movlw	0
 16654  004710  2395               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 16655  004712  2396               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 16656  004714  2397               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 16657  004716  2398               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 16658  004718  2399               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 16659  00471A  239A               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 16660  00471C  239B               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 16661                           
 16662                           ; BSR set to: 0
 16663  00471E  0E01               	movlw	1
 16664  004720  6F9D               	movwf	___aodiv@sign& (0+255),b
 16665  004722                     l12810:
 16666                           
 16667                           ; BSR set to: 0
 16668  004722  AF93               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 16669  004724  D012               	goto	l12816
 16670                           
 16671                           ; BSR set to: 0
 16672  004726  1F93               	comf	(___aodiv@dividend+7)& (0+255),f,b
 16673  004728  1F92               	comf	(___aodiv@dividend+6)& (0+255),f,b
 16674  00472A  1F91               	comf	(___aodiv@dividend+5)& (0+255),f,b
 16675  00472C  1F90               	comf	(___aodiv@dividend+4)& (0+255),f,b
 16676  00472E  1F8F               	comf	(___aodiv@dividend+3)& (0+255),f,b
 16677  004730  1F8E               	comf	(___aodiv@dividend+2)& (0+255),f,b
 16678  004732  1F8D               	comf	(___aodiv@dividend+1)& (0+255),f,b
 16679  004734  6D8C               	negf	___aodiv@dividend& (0+255),b
 16680  004736  0E00               	movlw	0
 16681  004738  238D               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 16682  00473A  238E               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 16683  00473C  238F               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 16684  00473E  2390               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 16685  004740  2391               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 16686  004742  2392               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 16687  004744  2393               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 16688                           
 16689                           ; BSR set to: 0
 16690  004746  0E01               	movlw	1
 16691  004748  1B9D               	xorwf	___aodiv@sign& (0+255),f,b
 16692  00474A                     l12816:
 16693                           
 16694                           ; BSR set to: 0
 16695  00474A  EE20  F09E         	lfsr	2,___aodiv@quotient
 16696  00474E  0E07               	movlw	7
 16697  004750                     u14861:
 16698  004750  6ADE               	clrf	postinc2,c
 16699  004752  06E8               	decf	wreg,f,c
 16700  004754  E2FD               	bc	u14861
 16701                           
 16702                           ; BSR set to: 0
 16703  004756  5194               	movf	___aodiv@divisor& (0+255),w,b
 16704  004758  1195               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 16705  00475A  1196               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 16706  00475C  1197               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 16707  00475E  1198               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 16708  004760  1199               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 16709  004762  119A               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 16710  004764  119B               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 16711  004766  B4D8               	btfsc	status,2,c
 16712  004768  D046               	goto	l12838
 16713                           
 16714                           ; BSR set to: 0
 16715  00476A  0E01               	movlw	1
 16716  00476C  6F9C               	movwf	___aodiv@counter& (0+255),b
 16717  00476E  D00A               	goto	l12824
 16718  004770                     l12822:
 16719                           
 16720                           ; BSR set to: 0
 16721  004770  90D8               	bcf	status,0,c
 16722  004772  3794               	rlcf	___aodiv@divisor& (0+255),f,b
 16723  004774  3795               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 16724  004776  3796               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 16725  004778  3797               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 16726  00477A  3798               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 16727  00477C  3799               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 16728  00477E  379A               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 16729  004780  379B               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 16730  004782  2B9C               	incf	___aodiv@counter& (0+255),f,b
 16731  004784                     l12824:
 16732                           
 16733                           ; BSR set to: 0
 16734  004784  AF9B               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 16735  004786  D7F4               	goto	l12822
 16736  004788                     u14880:
 16737                           
 16738                           ; BSR set to: 0
 16739  004788  90D8               	bcf	status,0,c
 16740  00478A  379E               	rlcf	___aodiv@quotient& (0+255),f,b
 16741  00478C  379F               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 16742  00478E  37A0               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 16743  004790  37A1               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 16744  004792  37A2               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 16745  004794  37A3               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 16746  004796  37A4               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 16747  004798  37A5               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 16748                           
 16749                           ; BSR set to: 0
 16750  00479A  5194               	movf	___aodiv@divisor& (0+255),w,b
 16751  00479C  5D8C               	subwf	___aodiv@dividend& (0+255),w,b
 16752  00479E  5195               	movf	(___aodiv@divisor+1)& (0+255),w,b
 16753  0047A0  598D               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 16754  0047A2  5196               	movf	(___aodiv@divisor+2)& (0+255),w,b
 16755  0047A4  598E               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 16756  0047A6  5197               	movf	(___aodiv@divisor+3)& (0+255),w,b
 16757  0047A8  598F               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 16758  0047AA  5198               	movf	(___aodiv@divisor+4)& (0+255),w,b
 16759  0047AC  5990               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 16760  0047AE  5199               	movf	(___aodiv@divisor+5)& (0+255),w,b
 16761  0047B0  5991               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 16762  0047B2  519A               	movf	(___aodiv@divisor+6)& (0+255),w,b
 16763  0047B4  5992               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 16764  0047B6  519B               	movf	(___aodiv@divisor+7)& (0+255),w,b
 16765  0047B8  5993               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 16766  0047BA  A0D8               	btfss	status,0,c
 16767  0047BC  D011               	goto	l12834
 16768                           
 16769                           ; BSR set to: 0
 16770  0047BE  5194               	movf	___aodiv@divisor& (0+255),w,b
 16771  0047C0  5F8C               	subwf	___aodiv@dividend& (0+255),f,b
 16772  0047C2  5195               	movf	(___aodiv@divisor+1)& (0+255),w,b
 16773  0047C4  5B8D               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 16774  0047C6  5196               	movf	(___aodiv@divisor+2)& (0+255),w,b
 16775  0047C8  5B8E               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 16776  0047CA  5197               	movf	(___aodiv@divisor+3)& (0+255),w,b
 16777  0047CC  5B8F               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 16778  0047CE  5198               	movf	(___aodiv@divisor+4)& (0+255),w,b
 16779  0047D0  5B90               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 16780  0047D2  5199               	movf	(___aodiv@divisor+5)& (0+255),w,b
 16781  0047D4  5B91               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 16782  0047D6  519A               	movf	(___aodiv@divisor+6)& (0+255),w,b
 16783  0047D8  5B92               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 16784  0047DA  519B               	movf	(___aodiv@divisor+7)& (0+255),w,b
 16785  0047DC  5B93               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 16786                           
 16787                           ; BSR set to: 0
 16788  0047DE  819E               	bsf	___aodiv@quotient& (0+255),0,b
 16789  0047E0                     l12834:
 16790                           
 16791                           ; BSR set to: 0
 16792  0047E0  90D8               	bcf	status,0,c
 16793  0047E2  339B               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 16794  0047E4  339A               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 16795  0047E6  3399               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 16796  0047E8  3398               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 16797  0047EA  3397               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 16798  0047EC  3396               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 16799  0047EE  3395               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 16800  0047F0  3394               	rrcf	___aodiv@divisor& (0+255),f,b
 16801                           
 16802                           ; BSR set to: 0
 16803  0047F2  2F9C               	decfsz	___aodiv@counter& (0+255),f,b
 16804  0047F4  D7C9               	goto	u14880
 16805  0047F6                     l12838:
 16806                           
 16807                           ; BSR set to: 0
 16808  0047F6  519D               	movf	___aodiv@sign& (0+255),w,b
 16809  0047F8  B4D8               	btfsc	status,2,c
 16810  0047FA  D010               	goto	l12842
 16811                           
 16812                           ; BSR set to: 0
 16813  0047FC  1FA5               	comf	(___aodiv@quotient+7)& (0+255),f,b
 16814  0047FE  1FA4               	comf	(___aodiv@quotient+6)& (0+255),f,b
 16815  004800  1FA3               	comf	(___aodiv@quotient+5)& (0+255),f,b
 16816  004802  1FA2               	comf	(___aodiv@quotient+4)& (0+255),f,b
 16817  004804  1FA1               	comf	(___aodiv@quotient+3)& (0+255),f,b
 16818  004806  1FA0               	comf	(___aodiv@quotient+2)& (0+255),f,b
 16819  004808  1F9F               	comf	(___aodiv@quotient+1)& (0+255),f,b
 16820  00480A  6D9E               	negf	___aodiv@quotient& (0+255),b
 16821  00480C  0E00               	movlw	0
 16822  00480E  239F               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 16823  004810  23A0               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 16824  004812  23A1               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 16825  004814  23A2               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 16826  004816  23A3               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 16827  004818  23A4               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 16828  00481A  23A5               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 16829  00481C                     l12842:
 16830                           
 16831                           ; BSR set to: 0
 16832  00481C  C09E  F08C         	movff	___aodiv@quotient,?___aodiv
 16833  004820  C09F  F08D         	movff	___aodiv@quotient+1,?___aodiv+1
 16834  004824  C0A0  F08E         	movff	___aodiv@quotient+2,?___aodiv+2
 16835  004828  C0A1  F08F         	movff	___aodiv@quotient+3,?___aodiv+3
 16836  00482C  C0A2  F090         	movff	___aodiv@quotient+4,?___aodiv+4
 16837  004830  C0A3  F091         	movff	___aodiv@quotient+5,?___aodiv+5
 16838  004834  C0A4  F092         	movff	___aodiv@quotient+6,?___aodiv+6
 16839  004838  C0A5  F093         	movff	___aodiv@quotient+7,?___aodiv+7
 16840                           
 16841                           ; BSR set to: 0
 16842  00483C  0012               	return		;funcret
 16843  00483E                     __end_of___aodiv:
 16844                           	callstack 0
 16845                           
 16846 ;; *************** function _ctoa *****************
 16847 ;; Defined at:
 16848 ;;		line 259 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
 16851 ;;		 -> sprintf@f(11), 
 16852 ;;  c               1   55[BANK0 ] unsigned char 
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;  w               2   59[BANK0 ] int 
 16855 ;;  l               2   57[BANK0 ] int 
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  2   53[BANK0 ] int 
 16858 ;; Registers used:
 16859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16860 ;; Tracked objects:
 16861 ;;		On entry : 3F/1
 16862 ;;		On exit  : 3F/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16865 ;;      Params:         0       3       0       0       0       0       0       0       0
 16866 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16867 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16868 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16869 ;;Total ram usage:        8 bytes
 16870 ;; Hardware stack levels used: 1
 16871 ;; Hardware stack levels required when called: 12
 16872 ;; This function calls:
 16873 ;;		_fputc
 16874 ;; This function is called by:
 16875 ;;		_vfpfcnvrt
 16876 ;; This function uses a non-reentrant model
 16877 ;;
 16878                           
 16879                           	psect	text64
 16880  0069DA                     __ptext64:
 16881                           	callstack 0
 16882  0069DA                     _ctoa:
 16883                           	callstack 15
 16884                           
 16885                           ; BSR set to: 1
 16886                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;incstack = 0
 16890  0069DA  0100               	movlb	0	; () banked
 16891  0069DC  51BC               	movf	_width& (0+255),w,b
 16892  0069DE  11BD               	iorwf	(_width+1)& (0+255),w,b
 16893  0069E0  A4D8               	btfss	status,2,c
 16894  0069E2  D005               	goto	l13502
 16895                           
 16896                           ; BSR set to: 0
 16897  0069E4  C0BC  F09B         	movff	_width,ctoa@w
 16898  0069E8  C0BD  F09C         	movff	_width+1,ctoa@w+1
 16899  0069EC  D006               	goto	l13504
 16900  0069EE                     l13502:
 16901                           
 16902                           ; BSR set to: 0
 16903  0069EE  0EFF               	movlw	255
 16904  0069F0  25BC               	addwf	_width& (0+255),w,b
 16905  0069F2  6F9B               	movwf	ctoa@w& (0+255),b
 16906  0069F4  0EFF               	movlw	255
 16907  0069F6  21BD               	addwfc	(_width+1)& (0+255),w,b
 16908  0069F8  6F9C               	movwf	(ctoa@w+1)& (0+255),b
 16909  0069FA                     l13504:
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
 16913  0069FA  A1C0               	btfss	_flags& (0+255),0,b
 16914  0069FC  D009               	goto	l13508
 16915                           
 16916                           ; BSR set to: 0
 16917                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
 16918  0069FE  C097  F08C         	movff	ctoa@c,fputc@c
 16919  006A02  6B8D               	clrf	(fputc@c+1)& (0+255),b
 16920  006A04  C095  F08E         	movff	ctoa@fp,fputc@fp
 16921  006A08  C096  F08F         	movff	ctoa@fp+1,fputc@fp+1
 16922  006A0C  EC9D  F034         	call	_fputc	;wreg free
 16923  006A10                     l13508:
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
 16927  006A10  AF9C               	btfss	(ctoa@w+1)& (0+255),7,b
 16928  006A12  D004               	goto	l2221
 16929                           
 16930                           ; BSR set to: 0
 16931  006A14  0E00               	movlw	0
 16932  006A16  6F9C               	movwf	(ctoa@w+1)& (0+255),b
 16933  006A18  0E00               	movlw	0
 16934  006A1A  6F9B               	movwf	ctoa@w& (0+255),b
 16935  006A1C                     l2221:
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 272:     l = 0;
 16939  006A1C  0E00               	movlw	0
 16940  006A1E  6F9A               	movwf	(ctoa@l+1)& (0+255),b
 16941  006A20  0E00               	movlw	0
 16942  006A22  6F99               	movwf	ctoa@l& (0+255),b
 16943                           
 16944                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 16945  006A24  D00C               	goto	l13518
 16946  006A26                     l13514:
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
 16950  006A26  0E00               	movlw	0
 16951  006A28  6F8D               	movwf	(fputc@c+1)& (0+255),b
 16952  006A2A  0E20               	movlw	32
 16953  006A2C  6F8C               	movwf	fputc@c& (0+255),b
 16954  006A2E  C095  F08E         	movff	ctoa@fp,fputc@fp
 16955  006A32  C096  F08F         	movff	ctoa@fp+1,fputc@fp+1
 16956  006A36  EC9D  F034         	call	_fputc	;wreg free
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 275:         ++l;
 16960  006A3A  4B99               	infsnz	ctoa@l& (0+255),f,b
 16961  006A3C  2B9A               	incf	(ctoa@l+1)& (0+255),f,b
 16962  006A3E                     l13518:
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
 16966  006A3E  519B               	movf	ctoa@w& (0+255),w,b
 16967  006A40  5D99               	subwf	ctoa@l& (0+255),w,b
 16968  006A42  519A               	movf	(ctoa@l+1)& (0+255),w,b
 16969  006A44  0A80               	xorlw	128
 16970  006A46  6F98               	movwf	??_ctoa& (0+255),b
 16971  006A48  519C               	movf	(ctoa@w+1)& (0+255),w,b
 16972  006A4A  0A80               	xorlw	128
 16973  006A4C  5998               	subwfb	??_ctoa& (0+255),w,b
 16974  006A4E  A0D8               	btfss	status,0,c
 16975  006A50  D7EA               	goto	l13514
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
 16979  006A52  B1C0               	btfsc	_flags& (0+255),0,b
 16980  006A54  D009               	goto	l13522
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
 16984  006A56  C097  F08C         	movff	ctoa@c,fputc@c
 16985  006A5A  6B8D               	clrf	(fputc@c+1)& (0+255),b
 16986  006A5C  C095  F08E         	movff	ctoa@fp,fputc@fp
 16987  006A60  C096  F08F         	movff	ctoa@fp+1,fputc@fp+1
 16988  006A64  EC9D  F034         	call	_fputc	;wreg free
 16989  006A68                     l13522:
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;/Applications/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 282:     return l+1;
 16993  006A68  0E01               	movlw	1
 16994  006A6A  2599               	addwf	ctoa@l& (0+255),w,b
 16995  006A6C  6F95               	movwf	?_ctoa& (0+255),b
 16996  006A6E  0E00               	movlw	0
 16997  006A70  219A               	addwfc	(ctoa@l+1)& (0+255),w,b
 16998  006A72  6F96               	movwf	(?_ctoa+1)& (0+255),b
 16999                           
 17000                           ; BSR set to: 0
 17001  006A74  0012               	return		;funcret
 17002  006A76                     __end_of_ctoa:
 17003                           	callstack 0
 17004                           
 17005 ;; *************** function _fputc *****************
 17006 ;; Defined at:
 17007 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 17008 ;; Parameters:    Size  Location     Type
 17009 ;;  c               2   44[BANK0 ] int 
 17010 ;;  fp              2   46[BANK0 ] PTR struct _IO_FILE
 17011 ;;		 -> sprintf@f(11), 
 17012 ;; Auto vars:     Size  Location     Type
 17013 ;;		None
 17014 ;; Return value:  Size  Location     Type
 17015 ;;                  2   44[BANK0 ] int 
 17016 ;; Registers used:
 17017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17018 ;; Tracked objects:
 17019 ;;		On entry : 3F/0
 17020 ;;		On exit  : 3F/0
 17021 ;;		Unchanged: 0/0
 17022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17023 ;;      Params:         0       4       0       0       0       0       0       0       0
 17024 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17025 ;;      Temps:          0       5       0       0       0       0       0       0       0
 17026 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17027 ;;Total ram usage:        9 bytes
 17028 ;; Hardware stack levels used: 1
 17029 ;; Hardware stack levels required when called: 11
 17030 ;; This function calls:
 17031 ;;		_putch
 17032 ;; This function is called by:
 17033 ;;		_pad
 17034 ;;		_ctoa
 17035 ;;		_stoa
 17036 ;;		_vfpfcnvrt
 17037 ;;		_fputs
 17038 ;; This function uses a non-reentrant model
 17039 ;;
 17040                           
 17041                           	psect	text65
 17042  00693A                     __ptext65:
 17043                           	callstack 0
 17044  00693A                     _fputc:
 17045                           	callstack 15
 17046                           
 17047                           ; BSR set to: 0
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;incstack = 0
 17051  00693A  518E               	movf	fputc@fp& (0+255),w,b
 17052  00693C  118F               	iorwf	(fputc@fp+1)& (0+255),w,b
 17053  00693E  B4D8               	btfsc	status,2,c
 17054  006940  D004               	goto	u14360
 17055                           
 17056                           ; BSR set to: 0
 17057  006942  518E               	movf	fputc@fp& (0+255),w,b
 17058  006944  118F               	iorwf	(fputc@fp+1)& (0+255),w,b
 17059  006946  A4D8               	btfss	status,2,c
 17060  006948  D004               	goto	l12560
 17061  00694A                     u14360:
 17062                           
 17063                           ; BSR set to: 0
 17064  00694A  518C               	movf	fputc@c& (0+255),w,b
 17065  00694C  EC0E  F03F         	call	_putch
 17066  006950  0012               	return	
 17067  006952                     l12560:
 17068                           
 17069                           ; BSR set to: 0
 17070  006952  EE20 F009          	lfsr	2,9
 17071  006956  518E               	movf	fputc@fp& (0+255),w,b
 17072  006958  26D9               	addwf	fsr2l,f,c
 17073  00695A  518F               	movf	(fputc@fp+1)& (0+255),w,b
 17074  00695C  22DA               	addwfc	fsr2h,f,c
 17075  00695E  50DE               	movf	postinc2,w,c
 17076  006960  10DE               	iorwf	postinc2,w,c
 17077  006962  B4D8               	btfsc	status,2,c
 17078  006964  D016               	goto	u14380
 17079                           
 17080                           ; BSR set to: 0
 17081  006966  EE20 F009          	lfsr	2,9
 17082  00696A  518E               	movf	fputc@fp& (0+255),w,b
 17083  00696C  26D9               	addwf	fsr2l,f,c
 17084  00696E  518F               	movf	(fputc@fp+1)& (0+255),w,b
 17085  006970  22DA               	addwfc	fsr2h,f,c
 17086  006972  EE10 F003          	lfsr	1,3
 17087  006976  518E               	movf	fputc@fp& (0+255),w,b
 17088  006978  26E1               	addwf	fsr1l,f,c
 17089  00697A  518F               	movf	(fputc@fp+1)& (0+255),w,b
 17090  00697C  22E2               	addwfc	fsr1h,f,c
 17091  00697E  50DE               	movf	postinc2,w,c
 17092  006980  5CE6               	subwf	postinc1,w,c
 17093  006982  50E6               	movf	postinc1,w,c
 17094  006984  0A80               	xorlw	128
 17095  006986  6F94               	movwf	(??_fputc+4)& (0+255),b
 17096  006988  50DE               	movf	postinc2,w,c
 17097  00698A  0A80               	xorlw	128
 17098  00698C  5994               	subwfb	(??_fputc+4)& (0+255),w,b
 17099  00698E  B0D8               	btfsc	status,0,c
 17100  006990  0012               	return	
 17101  006992                     u14380:
 17102                           
 17103                           ; BSR set to: 0
 17104  006992  EE20 F003          	lfsr	2,3
 17105  006996  518E               	movf	fputc@fp& (0+255),w,b
 17106  006998  26D9               	addwf	fsr2l,f,c
 17107  00699A  518F               	movf	(fputc@fp+1)& (0+255),w,b
 17108  00699C  22DA               	addwfc	fsr2h,f,c
 17109  00699E  CFDE F090          	movff	postinc2,??_fputc
 17110  0069A2  CFDD F091          	movff	postdec2,??_fputc+1
 17111  0069A6  C08E  FFD9         	movff	fputc@fp,fsr2l
 17112  0069AA  C08F  FFDA         	movff	fputc@fp+1,fsr2h
 17113  0069AE  CFDE F092          	movff	postinc2,??_fputc+2
 17114  0069B2  CFDD F093          	movff	postdec2,??_fputc+3
 17115  0069B6  5190               	movf	??_fputc& (0+255),w,b
 17116  0069B8  2592               	addwf	(??_fputc+2)& (0+255),w,b
 17117  0069BA  6ED9               	movwf	fsr2l,c
 17118  0069BC  5191               	movf	(??_fputc+1)& (0+255),w,b
 17119  0069BE  2193               	addwfc	(??_fputc+3)& (0+255),w,b
 17120  0069C0  6EDA               	movwf	fsr2h,c
 17121  0069C2  C08C  FFDF         	movff	fputc@c,indf2
 17122  0069C6  EE20 F003          	lfsr	2,3
 17123  0069CA  518E               	movf	fputc@fp& (0+255),w,b
 17124  0069CC  26D9               	addwf	fsr2l,f,c
 17125  0069CE  518F               	movf	(fputc@fp+1)& (0+255),w,b
 17126  0069D0  22DA               	addwfc	fsr2h,f,c
 17127  0069D2  2ADE               	incf	postinc2,f,c
 17128  0069D4  0E00               	movlw	0
 17129  0069D6  22DD               	addwfc	postdec2,f,c
 17130                           
 17131                           ; BSR set to: 0
 17132  0069D8  0012               	return		;funcret
 17133  0069DA                     __end_of_fputc:
 17134                           	callstack 0
 17135                           
 17136 ;; *************** function _putch *****************
 17137 ;; Defined at:
 17138 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/putch.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;  c               1    wreg     unsigned char 
 17141 ;; Auto vars:     Size  Location     Type
 17142 ;;  c               1    0[COMRAM] unsigned char 
 17143 ;; Return value:  Size  Location     Type
 17144 ;;                  1    wreg      void 
 17145 ;; Registers used:
 17146 ;;		wreg
 17147 ;; Tracked objects:
 17148 ;;		On entry : 3F/0
 17149 ;;		On exit  : 3F/0
 17150 ;;		Unchanged: 3F/0
 17151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17152 ;;      Params:         0       0       0       0       0       0       0       0       0
 17153 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17155 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17156 ;;Total ram usage:        0 bytes
 17157 ;; Hardware stack levels used: 1
 17158 ;; Hardware stack levels required when called: 10
 17159 ;; This function calls:
 17160 ;;		Nothing
 17161 ;; This function is called by:
 17162 ;;		_fputc
 17163 ;; This function uses a non-reentrant model
 17164 ;;
 17165                           
 17166                           	psect	text66
 17167  007E1C                     __ptext66:
 17168                           	callstack 0
 17169  007E1C                     _putch:
 17170                           	callstack 15
 17171                           
 17172                           ; BSR set to: 0
 17173                           
 17174                           ; BSR set to: 0
 17175                           ;incstack = 0
 17176  007E1C  0012               	return		;funcret
 17177  007E1E                     __end_of_putch:
 17178                           	callstack 0
 17179                           
 17180 ;; *************** function _atoi *****************
 17181 ;; Defined at:
 17182 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
 17183 ;; Parameters:    Size  Location     Type
 17184 ;;  s               2   51[BANK0 ] PTR const unsigned char 
 17185 ;;		 -> STR_3(5), STR_2(5), STR_1(13), 
 17186 ;; Auto vars:     Size  Location     Type
 17187 ;;  n               2   59[BANK0 ] int 
 17188 ;;  neg             2   57[BANK0 ] int 
 17189 ;; Return value:  Size  Location     Type
 17190 ;;                  2   51[BANK0 ] int 
 17191 ;; Registers used:
 17192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17193 ;; Tracked objects:
 17194 ;;		On entry : 3F/0
 17195 ;;		On exit  : 3F/0
 17196 ;;		Unchanged: 0/0
 17197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17198 ;;      Params:         0       2       0       0       0       0       0       0       0
 17199 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17200 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17201 ;;      Totals:         0      10       0       0       0       0       0       0       0
 17202 ;;Total ram usage:       10 bytes
 17203 ;; Hardware stack levels used: 1
 17204 ;; Hardware stack levels required when called: 11
 17205 ;; This function calls:
 17206 ;;		___wmul
 17207 ;;		_isdigit
 17208 ;;		_isspace
 17209 ;; This function is called by:
 17210 ;;		_vfpfcnvrt
 17211 ;; This function uses a non-reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text67
 17215  00542A                     __ptext67:
 17216                           	callstack 0
 17217  00542A                     _atoi:
 17218                           	callstack 16
 17219                           
 17220                           ; BSR set to: 0
 17221                           
 17222                           ; BSR set to: 0
 17223                           ;incstack = 0
 17224  00542A  0E00               	movlw	0
 17225  00542C  6F9C               	movwf	(atoi@n+1)& (0+255),b
 17226  00542E  0E00               	movlw	0
 17227  005430  6F9B               	movwf	atoi@n& (0+255),b
 17228  005432  0E00               	movlw	0
 17229  005434  6F9A               	movwf	(atoi@neg+1)& (0+255),b
 17230  005436  0E00               	movlw	0
 17231  005438  6F99               	movwf	atoi@neg& (0+255),b
 17232  00543A  D002               	goto	l13942
 17233  00543C                     l13938:
 17234                           
 17235                           ; BSR set to: 0
 17236  00543C  4B93               	infsnz	atoi@s& (0+255),f,b
 17237  00543E  2B94               	incf	(atoi@s+1)& (0+255),f,b
 17238  005440                     l13942:
 17239                           
 17240                           ; BSR set to: 0
 17241  005440  C093  FFF6         	movff	atoi@s,tblptrl
 17242  005444  C094  FFF7         	movff	atoi@s+1,tblptrh
 17243  005448                     	if	0	;tblptru may be non-zero
 17244  005448                     	endif
 17245  005448                     	if	0	;tblptru may be non-zero
 17246  005448                     	endif
 17247  005448  0008               	tblrd		*
 17248  00544A  50F5               	movf	tablat,w,c
 17249  00544C  0A20               	xorlw	32
 17250  00544E  B4D8               	btfsc	status,2,c
 17251  005450  D7F5               	goto	l13938
 17252                           
 17253                           ; BSR set to: 0
 17254  005452  0EF7               	movlw	247
 17255  005454  6F95               	movwf	??_atoi& (0+255),b
 17256  005456  0EFF               	movlw	255
 17257  005458  6F96               	movwf	(??_atoi+1)& (0+255),b
 17258  00545A  C093  FFF6         	movff	atoi@s,tblptrl
 17259  00545E  C094  FFF7         	movff	atoi@s+1,tblptrh
 17260  005462                     	if	0	;tblptru may be non-zero
 17261  005462                     	endif
 17262  005462                     	if	0	;tblptru may be non-zero
 17263  005462                     	endif
 17264  005462  0008               	tblrd		*
 17265  005464  50F5               	movf	tablat,w,c
 17266  005466  6F97               	movwf	(??_atoi+2)& (0+255),b
 17267  005468  6B98               	clrf	(??_atoi+3)& (0+255),b
 17268  00546A  5195               	movf	??_atoi& (0+255),w,b
 17269  00546C  2797               	addwf	(??_atoi+2)& (0+255),f,b
 17270  00546E  5196               	movf	(??_atoi+1)& (0+255),w,b
 17271  005470  2398               	addwfc	(??_atoi+3)& (0+255),f,b
 17272  005472  5198               	movf	(??_atoi+3)& (0+255),w,b
 17273  005474  E10C               	bnz	l13950
 17274  005476  0E05               	movlw	5
 17275  005478  5D97               	subwf	(??_atoi+2)& (0+255),w,b
 17276  00547A  B0D8               	btfsc	status,0,c
 17277  00547C  D008               	goto	l13950
 17278  00547E  D7DE               	goto	l13938
 17279  005480                     l13946:
 17280                           
 17281                           ; BSR set to: 0
 17282  005480  0E00               	movlw	0
 17283  005482  6F9A               	movwf	(atoi@neg+1)& (0+255),b
 17284  005484  0E01               	movlw	1
 17285  005486  6F99               	movwf	atoi@neg& (0+255),b
 17286  005488                     l13948:
 17287                           
 17288                           ; BSR set to: 0
 17289  005488  4B93               	infsnz	atoi@s& (0+255),f,b
 17290  00548A  2B94               	incf	(atoi@s+1)& (0+255),f,b
 17291  00548C  D02E               	goto	l13958
 17292  00548E                     l13950:
 17293                           
 17294                           ; BSR set to: 0
 17295  00548E  C093  FFF6         	movff	atoi@s,tblptrl
 17296  005492  C094  FFF7         	movff	atoi@s+1,tblptrh
 17297  005496                     	if	0	;tblptru may be non-zero
 17298  005496                     	endif
 17299  005496                     	if	0	;tblptru may be non-zero
 17300  005496                     	endif
 17301  005496  0008               	tblrd		*
 17302  005498  50F5               	movf	tablat,w,c
 17303  00549A  6F95               	movwf	??_atoi& (0+255),b
 17304  00549C  6B96               	clrf	(??_atoi+1)& (0+255),b
 17305                           
 17306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17307                           ; Switch size 1, requested type "simple"
 17308                           ; Number of cases is 1, Range of values is 0 to 0
 17309                           ; switch strategies available:
 17310                           ; Name         Instructions Cycles
 17311                           ; simple_byte            4     3 (average)
 17312                           ;	Chosen strategy is simple_byte
 17313  00549E  5196               	movf	(??_atoi+1)& (0+255),w,b
 17314  0054A0  0A00               	xorlw	0	; case 0
 17315  0054A2  A4D8               	btfss	status,2,c
 17316  0054A4  D022               	goto	l13958
 17317                           
 17318                           ; BSR set to: 0
 17319                           ; Switch size 1, requested type "simple"
 17320                           ; Number of cases is 2, Range of values is 43 to 45
 17321                           ; switch strategies available:
 17322                           ; Name         Instructions Cycles
 17323                           ; simple_byte            7     4 (average)
 17324                           ;	Chosen strategy is simple_byte
 17325  0054A6  5195               	movf	??_atoi& (0+255),w,b
 17326  0054A8  0A2B               	xorlw	43	; case 43
 17327  0054AA  B4D8               	btfsc	status,2,c
 17328  0054AC  D7ED               	goto	l13948
 17329  0054AE  0A06               	xorlw	6	; case 45
 17330  0054B0  B4D8               	btfsc	status,2,c
 17331  0054B2  D7E6               	goto	l13946
 17332  0054B4  D01A               	goto	l13958
 17333  0054B6                     l13952:
 17334                           
 17335                           ; BSR set to: 0
 17336  0054B6  C09B  F08C         	movff	atoi@n,___wmul@multiplier
 17337  0054BA  C09C  F08D         	movff	atoi@n+1,___wmul@multiplier+1
 17338  0054BE  0E00               	movlw	0
 17339  0054C0  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17340  0054C2  0E0A               	movlw	10
 17341  0054C4  6F8E               	movwf	___wmul@multiplicand& (0+255),b
 17342  0054C6  ECA1  F03D         	call	___wmul	;wreg free
 17343  0054CA  C093  FFF6         	movff	atoi@s,tblptrl
 17344  0054CE  C094  FFF7         	movff	atoi@s+1,tblptrh
 17345  0054D2                     	if	0	;tblptru may be non-zero
 17346  0054D2                     	endif
 17347  0054D2                     	if	0	;tblptru may be non-zero
 17348  0054D2                     	endif
 17349  0054D2  0008               	tblrd		*
 17350  0054D4  50F5               	movf	tablat,w,c
 17351  0054D6  5F8C               	subwf	?___wmul& (0+255),f,b
 17352  0054D8  0E00               	movlw	0
 17353  0054DA  5B8D               	subwfb	(?___wmul+1)& (0+255),f,b
 17354  0054DC  0E30               	movlw	48
 17355  0054DE  258C               	addwf	?___wmul& (0+255),w,b
 17356  0054E0  6F9B               	movwf	atoi@n& (0+255),b
 17357  0054E2  0E00               	movlw	0
 17358  0054E4  218D               	addwfc	(?___wmul+1)& (0+255),w,b
 17359  0054E6  6F9C               	movwf	(atoi@n+1)& (0+255),b
 17360  0054E8  D7CF               	goto	l13948
 17361  0054EA                     l13958:
 17362                           
 17363                           ; BSR set to: 0
 17364  0054EA  0ED0               	movlw	208
 17365  0054EC  6F95               	movwf	??_atoi& (0+255),b
 17366  0054EE  0EFF               	movlw	255
 17367  0054F0  6F96               	movwf	(??_atoi+1)& (0+255),b
 17368  0054F2  C093  FFF6         	movff	atoi@s,tblptrl
 17369  0054F6  C094  FFF7         	movff	atoi@s+1,tblptrh
 17370  0054FA                     	if	0	;tblptru may be non-zero
 17371  0054FA                     	endif
 17372  0054FA                     	if	0	;tblptru may be non-zero
 17373  0054FA                     	endif
 17374  0054FA  0008               	tblrd		*
 17375  0054FC  50F5               	movf	tablat,w,c
 17376  0054FE  6F97               	movwf	(??_atoi+2)& (0+255),b
 17377  005500  6B98               	clrf	(??_atoi+3)& (0+255),b
 17378  005502  5195               	movf	??_atoi& (0+255),w,b
 17379  005504  2797               	addwf	(??_atoi+2)& (0+255),f,b
 17380  005506  5196               	movf	(??_atoi+1)& (0+255),w,b
 17381  005508  2398               	addwfc	(??_atoi+3)& (0+255),f,b
 17382  00550A  5198               	movf	(??_atoi+3)& (0+255),w,b
 17383  00550C  E104               	bnz	u16790
 17384  00550E  0E0A               	movlw	10
 17385  005510  5D97               	subwf	(??_atoi+2)& (0+255),w,b
 17386  005512  A0D8               	btfss	status,0,c
 17387  005514  D7D0               	goto	l13952
 17388  005516                     u16790:
 17389                           
 17390                           ; BSR set to: 0
 17391  005516  5199               	movf	atoi@neg& (0+255),w,b
 17392  005518  119A               	iorwf	(atoi@neg+1)& (0+255),w,b
 17393  00551A  A4D8               	btfss	status,2,c
 17394  00551C  D00D               	goto	l2440
 17395                           
 17396                           ; BSR set to: 0
 17397  00551E  C09B  F095         	movff	atoi@n,??_atoi
 17398  005522  C09C  F096         	movff	atoi@n+1,??_atoi+1
 17399  005526  1F95               	comf	??_atoi& (0+255),f,b
 17400  005528  1F96               	comf	(??_atoi+1)& (0+255),f,b
 17401  00552A  4B95               	infsnz	??_atoi& (0+255),f,b
 17402  00552C  2B96               	incf	(??_atoi+1)& (0+255),f,b
 17403  00552E  C095  F093         	movff	??_atoi,?_atoi
 17404  005532  C096  F094         	movff	??_atoi+1,?_atoi+1
 17405  005536  0012               	return	
 17406  005538                     l2440:
 17407                           
 17408                           ; BSR set to: 0
 17409  005538  C09B  F093         	movff	atoi@n,?_atoi
 17410  00553C  C09C  F094         	movff	atoi@n+1,?_atoi+1
 17411                           
 17412                           ; BSR set to: 0
 17413  005540  0012               	return		;funcret
 17414  005542                     __end_of_atoi:
 17415                           	callstack 0
 17416                           
 17417 ;; *************** function _isspace *****************
 17418 ;; Defined at:
 17419 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
 17420 ;; Parameters:    Size  Location     Type
 17421 ;;  c               2   44[BANK0 ] int 
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;		None
 17424 ;; Return value:  Size  Location     Type
 17425 ;;                  2   44[BANK0 ] int 
 17426 ;; Registers used:
 17427 ;;		wreg, status,2, status,0
 17428 ;; Tracked objects:
 17429 ;;		On entry : 0/0
 17430 ;;		On exit  : 3F/0
 17431 ;;		Unchanged: 0/0
 17432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17433 ;;      Params:         0       2       0       0       0       0       0       0       0
 17434 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17435 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17436 ;;      Totals:         0       7       0       0       0       0       0       0       0
 17437 ;;Total ram usage:        7 bytes
 17438 ;; Hardware stack levels used: 1
 17439 ;; Hardware stack levels required when called: 10
 17440 ;; This function calls:
 17441 ;;		Nothing
 17442 ;; This function is called by:
 17443 ;;		_atoi
 17444 ;;		_strtof
 17445 ;; This function uses a non-reentrant model
 17446 ;;
 17447                           
 17448                           	psect	text68
 17449  007622                     __ptext68:
 17450                           	callstack 0
 17451  007622                     _isspace:
 17452                           	callstack 16
 17453                           
 17454                           ; BSR set to: 0
 17455                           ;incstack = 0
 17456  007622  0E01               	movlw	1
 17457  007624  0100               	movlb	0	; () banked
 17458  007626  6F92               	movwf	_isspace$5112& (0+255),b
 17459                           
 17460                           ; BSR set to: 0
 17461  007628  0E20               	movlw	32
 17462  00762A  198C               	xorwf	isspace@c& (0+255),w,b
 17463  00762C  118D               	iorwf	(isspace@c+1)& (0+255),w,b
 17464  00762E  B4D8               	btfsc	status,2,c
 17465  007630  D014               	goto	l13424
 17466                           
 17467                           ; BSR set to: 0
 17468  007632  0EF7               	movlw	247
 17469  007634  6F8E               	movwf	??_isspace& (0+255),b
 17470  007636  0EFF               	movlw	255
 17471  007638  6F8F               	movwf	(??_isspace+1)& (0+255),b
 17472  00763A  C08C  F090         	movff	isspace@c,??_isspace+2
 17473  00763E  C08D  F091         	movff	isspace@c+1,??_isspace+3
 17474  007642  518E               	movf	??_isspace& (0+255),w,b
 17475  007644  2790               	addwf	(??_isspace+2)& (0+255),f,b
 17476  007646  518F               	movf	(??_isspace+1)& (0+255),w,b
 17477  007648  2391               	addwfc	(??_isspace+3)& (0+255),f,b
 17478  00764A  5191               	movf	(??_isspace+3)& (0+255),w,b
 17479  00764C  E104               	bnz	u15920
 17480  00764E  0E05               	movlw	5
 17481  007650  5D90               	subwf	(??_isspace+2)& (0+255),w,b
 17482  007652  A0D8               	btfss	status,0,c
 17483  007654  D002               	goto	l13424
 17484  007656                     u15920:
 17485                           
 17486                           ; BSR set to: 0
 17487  007656  0E00               	movlw	0
 17488  007658  6F92               	movwf	_isspace$5112& (0+255),b
 17489  00765A                     l13424:
 17490                           
 17491                           ; BSR set to: 0
 17492  00765A  C092  F08C         	movff	_isspace$5112,?_isspace
 17493  00765E  6B8D               	clrf	(?_isspace+1)& (0+255),b
 17494                           
 17495                           ; BSR set to: 0
 17496  007660  0012               	return		;funcret
 17497  007662                     __end_of_isspace:
 17498                           	callstack 0
 17499                           
 17500 ;; *************** function _isdigit *****************
 17501 ;; Defined at:
 17502 ;;		line 5 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
 17503 ;; Parameters:    Size  Location     Type
 17504 ;;  c               2   44[BANK0 ] int 
 17505 ;; Auto vars:     Size  Location     Type
 17506 ;;		None
 17507 ;; Return value:  Size  Location     Type
 17508 ;;                  2   44[BANK0 ] int 
 17509 ;; Registers used:
 17510 ;;		wreg, status,2, status,0
 17511 ;; Tracked objects:
 17512 ;;		On entry : 0/0
 17513 ;;		On exit  : 3F/0
 17514 ;;		Unchanged: 0/0
 17515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17516 ;;      Params:         0       2       0       0       0       0       0       0       0
 17517 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17518 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17519 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17520 ;;Total ram usage:        6 bytes
 17521 ;; Hardware stack levels used: 1
 17522 ;; Hardware stack levels required when called: 10
 17523 ;; This function calls:
 17524 ;;		Nothing
 17525 ;; This function is called by:
 17526 ;;		_vfpfcnvrt
 17527 ;;		_atoi
 17528 ;;		_strtof
 17529 ;;		_isxdigit
 17530 ;; This function uses a non-reentrant model
 17531 ;;
 17532                           
 17533                           	psect	text69
 17534  007944                     __ptext69:
 17535                           	callstack 0
 17536  007944                     _isdigit:
 17537                           	callstack 17
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;incstack = 0
 17541  007944  0ED0               	movlw	208
 17542  007946  0100               	movlb	0	; () banked
 17543  007948  6F8E               	movwf	??_isdigit& (0+255),b
 17544  00794A  0EFF               	movlw	255
 17545  00794C  6F8F               	movwf	(??_isdigit+1)& (0+255),b
 17546  00794E  C08C  F090         	movff	isdigit@c,??_isdigit+2
 17547  007952  C08D  F091         	movff	isdigit@c+1,??_isdigit+3
 17548  007956  518E               	movf	??_isdigit& (0+255),w,b
 17549  007958  2790               	addwf	(??_isdigit+2)& (0+255),f,b
 17550  00795A  518F               	movf	(??_isdigit+1)& (0+255),w,b
 17551  00795C  2391               	addwfc	(??_isdigit+3)& (0+255),f,b
 17552  00795E  5191               	movf	(??_isdigit+3)& (0+255),w,b
 17553  007960  E106               	bnz	u15890
 17554  007962  0E0A               	movlw	10
 17555  007964  5D90               	subwf	(??_isdigit+2)& (0+255),w,b
 17556  007966  B0D8               	btfsc	status,0,c
 17557  007968  D002               	goto	u15890
 17558  00796A  0E01               	movlw	1
 17559  00796C  D001               	goto	u15900
 17560  00796E                     u15890:
 17561  00796E  0E00               	movlw	0
 17562  007970                     u15900:
 17563  007970  6F8C               	movwf	?_isdigit& (0+255),b
 17564  007972  6B8D               	clrf	(?_isdigit+1)& (0+255),b
 17565                           
 17566                           ; BSR set to: 0
 17567  007974  0012               	return		;funcret
 17568  007976                     __end_of_isdigit:
 17569                           	callstack 0
 17570                           
 17571 ;; *************** function ___wmul *****************
 17572 ;; Defined at:
 17573 ;;		line 15 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
 17574 ;; Parameters:    Size  Location     Type
 17575 ;;  multiplier      2   44[BANK0 ] unsigned int 
 17576 ;;  multiplicand    2   46[BANK0 ] unsigned int 
 17577 ;; Auto vars:     Size  Location     Type
 17578 ;;  product         2   48[BANK0 ] unsigned int 
 17579 ;; Return value:  Size  Location     Type
 17580 ;;                  2   44[BANK0 ] unsigned int 
 17581 ;; Registers used:
 17582 ;;		wreg, status,2, status,0, prodl, prodh
 17583 ;; Tracked objects:
 17584 ;;		On entry : 3F/0
 17585 ;;		On exit  : 3F/0
 17586 ;;		Unchanged: 0/0
 17587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17588 ;;      Params:         0       4       0       0       0       0       0       0       0
 17589 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17590 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17591 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17592 ;;Total ram usage:        6 bytes
 17593 ;; Hardware stack levels used: 1
 17594 ;; Hardware stack levels required when called: 10
 17595 ;; This function calls:
 17596 ;;		Nothing
 17597 ;; This function is called by:
 17598 ;;		_atoi
 17599 ;;		_strtof
 17600 ;;		_G_01
 17601 ;;		_G_95
 17602 ;;		_G_53
 17603 ;; This function uses a non-reentrant model
 17604 ;;
 17605                           
 17606                           	psect	text70
 17607  007B42                     __ptext70:
 17608                           	callstack 0
 17609  007B42                     ___wmul:
 17610                           	callstack 16
 17611                           
 17612                           ; BSR set to: 0
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;incstack = 0
 17616  007B42  518C               	movf	___wmul@multiplier& (0+255),w,b
 17617  007B44  038E               	mulwf	___wmul@multiplicand& (0+255),b
 17618  007B46  CFF3 F090          	movff	prodl,___wmul@product
 17619  007B4A  CFF4 F091          	movff	prodh,___wmul@product+1
 17620  007B4E  518C               	movf	___wmul@multiplier& (0+255),w,b
 17621  007B50  038F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17622  007B52  50F3               	movf	243,w,c
 17623  007B54  2791               	addwf	(___wmul@product+1)& (0+255),f,b
 17624  007B56  518D               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17625  007B58  038E               	mulwf	___wmul@multiplicand& (0+255),b
 17626  007B5A  50F3               	movf	243,w,c
 17627  007B5C  2791               	addwf	(___wmul@product+1)& (0+255),f,b
 17628                           
 17629                           ; BSR set to: 0
 17630  007B5E  C090  F08C         	movff	___wmul@product,?___wmul
 17631  007B62  C091  F08D         	movff	___wmul@product+1,?___wmul+1
 17632                           
 17633                           ; BSR set to: 0
 17634  007B66  0012               	return		;funcret
 17635  007B68                     __end_of___wmul:
 17636                           	callstack 0
 17637                           
 17638 ;; *************** function _MCC_USB_READ *****************
 17639 ;; Defined at:
 17640 ;;		line 136 in file "CommandHandler.c"
 17641 ;; Parameters:    Size  Location     Type
 17642 ;;		None
 17643 ;; Auto vars:     Size  Location     Type
 17644 ;;		None
 17645 ;; Return value:  Size  Location     Type
 17646 ;;                  1    wreg      void 
 17647 ;; Registers used:
 17648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17649 ;; Tracked objects:
 17650 ;;		On entry : 3F/0
 17651 ;;		On exit  : 3E/0
 17652 ;;		Unchanged: 0/0
 17653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17654 ;;      Params:         0       0       0       0       0       0       0       0       0
 17655 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17656 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17657 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17658 ;;Total ram usage:        0 bytes
 17659 ;; Hardware stack levels used: 1
 17660 ;; Hardware stack levels required when called: 12
 17661 ;; This function calls:
 17662 ;;		_getsUSBUSART
 17663 ;; This function is called by:
 17664 ;;		_USBCommandFetch
 17665 ;; This function uses a non-reentrant model
 17666 ;;
 17667                           
 17668                           	psect	text71
 17669  007C1A                     __ptext71:
 17670                           	callstack 0
 17671  007C1A                     _MCC_USB_READ:
 17672                           	callstack 17
 17673                           
 17674                           ; BSR set to: 0
 17675                           ;CommandHandler.c: 138:     if( USBDeviceState < CONFIGURED_STATE )
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;incstack = 0
 17679  007C1A  0E20               	movlw	32
 17680  007C1C  605C               	cpfslt	_USBDeviceState^0,c
 17681  007C1E  D001               	goto	l1463
 17682  007C20  0012               	return	
 17683  007C22                     l1463:
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;CommandHandler.c: 142:     if( UCONbits.SUSPND== 1 )
 17687  007C22  B260               	btfsc	96,1,c	;volatile
 17688  007C24  0012               	return	
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;CommandHandler.c: 146:       numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
 17692  007C26  0E86               	movlw	low _readBuffer
 17693  007C28  6F95               	movwf	getsUSBUSART@buffer& (0+255),b
 17694  007C2A  0E03               	movlw	high _readBuffer
 17695  007C2C  6F96               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 17696  007C2E  0E20               	movlw	32
 17697  007C30  6F97               	movwf	getsUSBUSART@len& (0+255),b
 17698  007C32  ECD1  F035         	call	_getsUSBUSART	;wreg free
 17699  007C36  0101               	movlb	1	; () banked
 17700  007C38  6FE0               	movwf	_numBytesRead& (0+255),b
 17701  007C3A  0012               	return		;funcret
 17702  007C3C                     __end_of_MCC_USB_READ:
 17703                           	callstack 0
 17704                           
 17705 ;; *************** function _getsUSBUSART *****************
 17706 ;; Defined at:
 17707 ;;		line 503 in file "mcc_generated_files/usb/usb_device_cdc.c"
 17708 ;; Parameters:    Size  Location     Type
 17709 ;;  buffer          2   53[BANK0 ] PTR unsigned char 
 17710 ;;		 -> readBuffer(32), 
 17711 ;;  len             1   55[BANK0 ] unsigned char 
 17712 ;; Auto vars:     Size  Location     Type
 17713 ;;		None
 17714 ;; Return value:  Size  Location     Type
 17715 ;;                  1    wreg      unsigned char 
 17716 ;; Registers used:
 17717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17718 ;; Tracked objects:
 17719 ;;		On entry : 3F/0
 17720 ;;		On exit  : 3F/0
 17721 ;;		Unchanged: 0/0
 17722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17723 ;;      Params:         0       3       0       0       0       0       0       0       0
 17724 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17725 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17726 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17727 ;;Total ram usage:        4 bytes
 17728 ;; Hardware stack levels used: 1
 17729 ;; Hardware stack levels required when called: 11
 17730 ;; This function calls:
 17731 ;;		_USBTransferOnePacket
 17732 ;; This function is called by:
 17733 ;;		_MCC_USB_READ
 17734 ;; This function uses a non-reentrant model
 17735 ;;
 17736                           
 17737                           	psect	text72
 17738  006BA2                     __ptext72:
 17739                           	callstack 0
 17740  006BA2                     _getsUSBUSART:
 17741                           	callstack 17
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;mcc_generated_files/usb/usb_device_cdc.c: 503: uint8_t getsUSBUSART(uint8_t *buffer, ui
      +                          nt8_t len);mcc_generated_files/usb/usb_device_cdc.c: 504: {;mcc_generated_files/usb/usb_
      +                          device_cdc.c: 505:     cdc_rx_len = 0;
 17745                           
 17746                           ;incstack = 0
 17747  006BA2  0E00               	movlw	0
 17748  006BA4  6FC8               	movwf	_cdc_rx_len& (0+255),b
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;mcc_generated_files/usb/usb_device_cdc.c: 507:     if(!((CDCDataOutHandle != 0x0000) &&
      +                           ((*(volatile uint8_t*)CDCDataOutHandle & 0x80) != 0x00)))
 17752  006BA6  0101               	movlb	1	; () banked
 17753  006BA8  51D5               	movf	_CDCDataOutHandle& (0+255),w,b
 17754  006BAA  11D6               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17755  006BAC  B4D8               	btfsc	status,2,c
 17756  006BAE  D006               	goto	u17230
 17757                           
 17758                           ; BSR set to: 1
 17759  006BB0  C1D5  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17760  006BB4  C1D6  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17761  006BB8  BEDF               	btfsc	indf2,7,c
 17762  006BBA  D03A               	goto	l14322
 17763  006BBC                     u17230:
 17764                           
 17765                           ; BSR set to: 1
 17766                           ;mcc_generated_files/usb/usb_device_cdc.c: 508:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 513:         if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17767  006BBC  EE20 F001          	lfsr	2,1
 17768  006BC0  51D5               	movf	_CDCDataOutHandle& (0+255),w,b
 17769  006BC2  26D9               	addwf	fsr2l,f,c
 17770  006BC4  51D6               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17771  006BC6  22DA               	addwfc	fsr2h,f,c
 17772  006BC8  0100               	movlb	0	; () banked
 17773  006BCA  5197               	movf	getsUSBUSART@len& (0+255),w,b
 17774  006BCC  5CDE               	subwf	postinc2,w,c
 17775  006BCE  B0D8               	btfsc	status,0,c
 17776  006BD0  D00A               	goto	l14312
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;mcc_generated_files/usb/usb_device_cdc.c: 514:             len = (((volatile BDT_ENTRY*
      +                          )CDCDataOutHandle)->CNT);
 17780  006BD2  0101               	movlb	1	; () banked
 17781  006BD4  EE20 F001          	lfsr	2,1
 17782  006BD8  51D5               	movf	_CDCDataOutHandle& (0+255),w,b
 17783  006BDA  26D9               	addwf	fsr2l,f,c
 17784  006BDC  51D6               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17785  006BDE  22DA               	addwfc	fsr2h,f,c
 17786  006BE0  50DF               	movf	indf2,w,c
 17787  006BE2  0100               	movlb	0	; () banked
 17788  006BE4  6F97               	movwf	getsUSBUSART@len& (0+255),b
 17789  006BE6                     l14312:
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;mcc_generated_files/usb/usb_device_cdc.c: 519:         for(cdc_rx_len = 0; cdc_rx_len <
      +                           len; cdc_rx_len++)
 17793  006BE6  0E00               	movlw	0
 17794  006BE8  6FC8               	movwf	_cdc_rx_len& (0+255),b
 17795  006BEA  D00F               	goto	l14318
 17796  006BEC                     l14314:
 17797                           
 17798                           ; BSR set to: 0
 17799                           ;mcc_generated_files/usb/usb_device_cdc.c: 520:             buffer[cdc_rx_len] = cdc_dat
      +                          a_rx[cdc_rx_len];
 17800  006BEC  0E40               	movlw	64
 17801  006BEE  25C8               	addwf	_cdc_rx_len& (0+255),w,b
 17802  006BF0  6ED9               	movwf	fsr2l,c
 17803  006BF2  6ADA               	clrf	fsr2h,c
 17804  006BF4  0E05               	movlw	5
 17805  006BF6  22DA               	addwfc	fsr2h,f,c
 17806  006BF8  51C8               	movf	_cdc_rx_len& (0+255),w,b
 17807  006BFA  2595               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17808  006BFC  6EE1               	movwf	fsr1l,c
 17809  006BFE  0E00               	movlw	0
 17810  006C00  2196               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17811  006C02  6EE2               	movwf	fsr1h,c
 17812  006C04  CFDF FFE7          	movff	indf2,indf1
 17813                           
 17814                           ; BSR set to: 0
 17815  006C08  2BC8               	incf	_cdc_rx_len& (0+255),f,b
 17816  006C0A                     l14318:
 17817                           
 17818                           ; BSR set to: 0
 17819  006C0A  5197               	movf	getsUSBUSART@len& (0+255),w,b
 17820  006C0C  5DC8               	subwf	_cdc_rx_len& (0+255),w,b
 17821  006C0E  A0D8               	btfss	status,0,c
 17822  006C10  D7ED               	goto	l14314
 17823                           
 17824                           ; BSR set to: 0
 17825                           ;mcc_generated_files/usb/usb_device_cdc.c: 526:         CDCDataOutHandle = USBTransferOn
      +                          ePacket(2,0,(uint8_t*)&cdc_data_rx,sizeof(cdc_data_rx));
 17826  006C12  0E00               	movlw	0
 17827  006C14  6F8C               	movwf	USBTransferOnePacket@dir& (0+255),b
 17828  006C16  0E40               	movlw	64
 17829  006C18  6F8D               	movwf	USBTransferOnePacket@data& (0+255),b
 17830  006C1A  0E05               	movlw	5
 17831  006C1C  6F8E               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17832  006C1E  0E40               	movlw	64
 17833  006C20  6F8F               	movwf	USBTransferOnePacket@len& (0+255),b
 17834  006C22  0E02               	movlw	2
 17835  006C24  ECA8  F02B         	call	_USBTransferOnePacket
 17836  006C28  C08C  F1D5         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17837  006C2C  C08D  F1D6         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17838  006C30                     l14322:
 17839                           
 17840                           ;mcc_generated_files/usb/usb_device_cdc.c: 530:     return cdc_rx_len;
 17841  006C30  0100               	movlb	0	; () banked
 17842  006C32  51C8               	movf	_cdc_rx_len& (0+255),w,b
 17843                           
 17844                           ; BSR set to: 0
 17845  006C34  0012               	return		;funcret
 17846  006C36                     __end_of_getsUSBUSART:
 17847                           	callstack 0
 17848                           
 17849 ;; *************** function _Fila_Agregar *****************
 17850 ;; Defined at:
 17851 ;;		line 18 in file "fila.c"
 17852 ;; Parameters:    Size  Location     Type
 17853 ;;  comando         2   55[BANK0 ] PTR unsigned char 
 17854 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), NULL(0), 
 17855 ;;  nBytes          2   57[BANK0 ] int 
 17856 ;; Auto vars:     Size  Location     Type
 17857 ;;		None
 17858 ;; Return value:  Size  Location     Type
 17859 ;;                  2   55[BANK0 ] int 
 17860 ;; Registers used:
 17861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17862 ;; Tracked objects:
 17863 ;;		On entry : 3F/0
 17864 ;;		On exit  : 3F/0
 17865 ;;		Unchanged: 0/0
 17866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17867 ;;      Params:         0       4       0       0       0       0       0       0       0
 17868 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17869 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17870 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17871 ;;Total ram usage:        4 bytes
 17872 ;; Hardware stack levels used: 1
 17873 ;; Hardware stack levels required when called: 11
 17874 ;; This function calls:
 17875 ;;		___lbmod
 17876 ;;		_memcpy
 17877 ;; This function is called by:
 17878 ;;		_USBCommandFetch
 17879 ;; This function uses a non-reentrant model
 17880 ;;
 17881                           
 17882                           	psect	text73
 17883  007238                     __ptext73:
 17884                           	callstack 0
 17885  007238                     _Fila_Agregar:
 17886                           	callstack 18
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;fila.c: 19:    if(largo<10){
 17890                           
 17891                           ; BSR set to: 0
 17892                           ;incstack = 0
 17893  007238  0E0A               	movlw	10
 17894  00723A  61C4               	cpfslt	_largo& (0+255),b
 17895  00723C  0012               	return	
 17896                           
 17897                           ; BSR set to: 0
 17898                           ;fila.c: 20:       if(nBytes<32){
 17899  00723E  BF9A               	btfsc	(Fila_Agregar@nBytes+1)& (0+255),7,b
 17900  007240  D006               	goto	u18360
 17901  007242  519A               	movf	(Fila_Agregar@nBytes+1)& (0+255),w,b
 17902  007244  E125               	bnz	l1084
 17903  007246  0E20               	movlw	32
 17904  007248  5D99               	subwf	Fila_Agregar@nBytes& (0+255),w,b
 17905  00724A  B0D8               	btfsc	status,0,c
 17906  00724C  0012               	return	
 17907  00724E                     u18360:
 17908                           
 17909                           ; BSR set to: 0
 17910                           ;fila.c: 21:          memcpy(fila[cabeza],comando,nBytes);
 17911  00724E  0101               	movlb	1	; () banked
 17912  007250  51DF               	movf	_cabeza& (0+255),w,b
 17913  007252  0D20               	mullw	32
 17914  007254  0E80               	movlw	low _fila
 17915  007256  24F3               	addwf	243,w,c
 17916  007258  0100               	movlb	0	; () banked
 17917  00725A  6F8C               	movwf	memcpy@d1& (0+255),b
 17918  00725C  0E05               	movlw	high _fila
 17919  00725E  20F4               	addwfc	prodh,w,c
 17920  007260  6F8D               	movwf	(memcpy@d1+1)& (0+255),b
 17921  007262  C097  F08E         	movff	Fila_Agregar@comando,memcpy@s1
 17922  007266  C098  F08F         	movff	Fila_Agregar@comando+1,memcpy@s1+1
 17923  00726A  C099  F090         	movff	Fila_Agregar@nBytes,memcpy@n
 17924  00726E  C09A  F091         	movff	Fila_Agregar@nBytes+1,memcpy@n+1
 17925  007272  ECAC  F03A         	call	_memcpy	;wreg free
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;fila.c: 22:          cabeza++;
 17929  007276  0101               	movlb	1	; () banked
 17930  007278  2BDF               	incf	_cabeza& (0+255),f,b
 17931                           
 17932                           ; BSR set to: 1
 17933                           ;fila.c: 23:          cabeza=cabeza%10;
 17934  00727A  0E0A               	movlw	10
 17935  00727C  0100               	movlb	0	; () banked
 17936  00727E  6F8C               	movwf	___lbmod@divisor& (0+255),b
 17937  007280  0101               	movlb	1	; () banked
 17938  007282  51DF               	movf	_cabeza& (0+255),w,b
 17939  007284  EC48  F03D         	call	___lbmod
 17940  007288  0101               	movlb	1	; () banked
 17941  00728A  6FDF               	movwf	_cabeza& (0+255),b
 17942                           
 17943                           ; BSR set to: 1
 17944                           ;fila.c: 24:          largo++;
 17945  00728C  0100               	movlb	0	; () banked
 17946  00728E  2BC4               	incf	_largo& (0+255),f,b
 17947  007290                     l1084:
 17948                           
 17949                           ; BSR set to: 0
 17950  007290  0012               	return		;funcret
 17951  007292                     __end_of_Fila_Agregar:
 17952                           	callstack 0
 17953                           
 17954 ;; *************** function _memcpy *****************
 17955 ;; Defined at:
 17956 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;  d1              2   44[BANK0 ] PTR void 
 17959 ;;		 -> executeCommand@strCommand(30), fila(320), SetupPkt(8), 
 17960 ;;  s1              2   46[BANK0 ] PTR const void 
 17961 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(320), 
 17962 ;;		 -> RAM(2047), NULL(0), 
 17963 ;;  n               2   48[BANK0 ] unsigned int 
 17964 ;; Auto vars:     Size  Location     Type
 17965 ;;  s               2   53[BANK0 ] PTR const unsigned char 
 17966 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(320), 
 17967 ;;		 -> RAM(2047), NULL(0), 
 17968 ;;  d               2   51[BANK0 ] PTR unsigned char 
 17969 ;;		 -> executeCommand@strCommand(30), fila(320), SetupPkt(8), 
 17970 ;;  tmp             1   50[BANK0 ] unsigned char 
 17971 ;; Return value:  Size  Location     Type
 17972 ;;                  2   44[BANK0 ] PTR void 
 17973 ;; Registers used:
 17974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17975 ;; Tracked objects:
 17976 ;;		On entry : 3F/0
 17977 ;;		On exit  : 3F/0
 17978 ;;		Unchanged: 0/0
 17979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17980 ;;      Params:         0       6       0       0       0       0       0       0       0
 17981 ;;      Locals:         0       5       0       0       0       0       0       0       0
 17982 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17983 ;;      Totals:         0      11       0       0       0       0       0       0       0
 17984 ;;Total ram usage:       11 bytes
 17985 ;; Hardware stack levels used: 1
 17986 ;; Hardware stack levels required when called: 10
 17987 ;; This function calls:
 17988 ;;		Nothing
 17989 ;; This function is called by:
 17990 ;;		_Fila_Agregar
 17991 ;;		_FilaPop
 17992 ;; This function uses a non-reentrant model
 17993 ;;
 17994                           
 17995                           	psect	text74
 17996  007558                     __ptext74:
 17997                           	callstack 0
 17998  007558                     _memcpy:
 17999                           	callstack 18
 18000                           
 18001                           ; BSR set to: 0
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;incstack = 0
 18005  007558  C08E  F095         	movff	memcpy@s1,memcpy@s
 18006  00755C  C08F  F096         	movff	memcpy@s1+1,memcpy@s+1
 18007  007560  C08C  F093         	movff	memcpy@d1,memcpy@d
 18008  007564  C08D  F094         	movff	memcpy@d1+1,memcpy@d+1
 18009  007568  D010               	goto	l14274
 18010  00756A                     l14266:
 18011                           
 18012                           ; BSR set to: 0
 18013  00756A  C095  FFD9         	movff	memcpy@s,fsr2l
 18014  00756E  C096  FFDA         	movff	memcpy@s+1,fsr2h
 18015  007572  50DF               	movf	indf2,w,c
 18016  007574  6F92               	movwf	memcpy@tmp& (0+255),b
 18017                           
 18018                           ; BSR set to: 0
 18019  007576  4B95               	infsnz	memcpy@s& (0+255),f,b
 18020  007578  2B96               	incf	(memcpy@s+1)& (0+255),f,b
 18021                           
 18022                           ; BSR set to: 0
 18023  00757A  C093  FFD9         	movff	memcpy@d,fsr2l
 18024  00757E  C094  FFDA         	movff	memcpy@d+1,fsr2h
 18025  007582  C092  FFDF         	movff	memcpy@tmp,indf2
 18026                           
 18027                           ; BSR set to: 0
 18028  007586  4B93               	infsnz	memcpy@d& (0+255),f,b
 18029  007588  2B94               	incf	(memcpy@d+1)& (0+255),f,b
 18030  00758A                     l14274:
 18031                           
 18032                           ; BSR set to: 0
 18033  00758A  0790               	decf	memcpy@n& (0+255),f,b
 18034  00758C  A0D8               	btfss	status,0,c
 18035  00758E  0791               	decf	(memcpy@n+1)& (0+255),f,b
 18036  007590  2990               	incf	memcpy@n& (0+255),w,b
 18037  007592  E1EB               	bnz	l14266
 18038  007594  2991               	incf	(memcpy@n+1)& (0+255),w,b
 18039  007596  B4D8               	btfsc	status,2,c
 18040  007598  0012               	return	
 18041  00759A  D7E7               	goto	l14266
 18042  00759C                     __end_of_memcpy:
 18043                           	callstack 0
 18044                           
 18045 ;; *************** function _TMR3_StopTimer *****************
 18046 ;; Defined at:
 18047 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 18048 ;; Parameters:    Size  Location     Type
 18049 ;;		None
 18050 ;; Auto vars:     Size  Location     Type
 18051 ;;		None
 18052 ;; Return value:  Size  Location     Type
 18053 ;;                  1    wreg      void 
 18054 ;; Registers used:
 18055 ;;		None
 18056 ;; Tracked objects:
 18057 ;;		On entry : 3F/0
 18058 ;;		On exit  : 3F/0
 18059 ;;		Unchanged: 3F/0
 18060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18061 ;;      Params:         0       0       0       0       0       0       0       0       0
 18062 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18063 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18064 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18065 ;;Total ram usage:        0 bytes
 18066 ;; Hardware stack levels used: 1
 18067 ;; Hardware stack levels required when called: 10
 18068 ;; This function calls:
 18069 ;;		Nothing
 18070 ;; This function is called by:
 18071 ;;		_main
 18072 ;; This function uses a non-reentrant model
 18073 ;;
 18074                           
 18075                           	psect	text75
 18076  007E08                     __ptext75:
 18077                           	callstack 0
 18078  007E08                     _TMR3_StopTimer:
 18079                           	callstack 20
 18080                           
 18081                           ; BSR set to: 0
 18082                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 0;
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;incstack = 0
 18086  007E08  90B1               	bcf	177,0,c	;volatile
 18087                           
 18088                           ; BSR set to: 0
 18089  007E0A  0012               	return		;funcret
 18090  007E0C                     __end_of_TMR3_StopTimer:
 18091                           	callstack 0
 18092                           
 18093 ;; *************** function _TMR2_StopTimer *****************
 18094 ;; Defined at:
 18095 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 18096 ;; Parameters:    Size  Location     Type
 18097 ;;		None
 18098 ;; Auto vars:     Size  Location     Type
 18099 ;;		None
 18100 ;; Return value:  Size  Location     Type
 18101 ;;                  1    wreg      void 
 18102 ;; Registers used:
 18103 ;;		None
 18104 ;; Tracked objects:
 18105 ;;		On entry : 3F/0
 18106 ;;		On exit  : 3F/0
 18107 ;;		Unchanged: 3F/0
 18108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18109 ;;      Params:         0       0       0       0       0       0       0       0       0
 18110 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18111 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18112 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18113 ;;Total ram usage:        0 bytes
 18114 ;; Hardware stack levels used: 1
 18115 ;; Hardware stack levels required when called: 10
 18116 ;; This function calls:
 18117 ;;		Nothing
 18118 ;; This function is called by:
 18119 ;;		_main
 18120 ;; This function uses a non-reentrant model
 18121 ;;
 18122                           
 18123                           	psect	text76
 18124  007E0C                     __ptext76:
 18125                           	callstack 0
 18126  007E0C                     _TMR2_StopTimer:
 18127                           	callstack 20
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;incstack = 0
 18134  007E0C  94BA               	bcf	186,2,c	;volatile
 18135                           
 18136                           ; BSR set to: 0
 18137  007E0E  0012               	return		;funcret
 18138  007E10                     __end_of_TMR2_StopTimer:
 18139                           	callstack 0
 18140                           
 18141 ;; *************** function _TMR0_StartTimer *****************
 18142 ;; Defined at:
 18143 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 18144 ;; Parameters:    Size  Location     Type
 18145 ;;		None
 18146 ;; Auto vars:     Size  Location     Type
 18147 ;;		None
 18148 ;; Return value:  Size  Location     Type
 18149 ;;                  1    wreg      void 
 18150 ;; Registers used:
 18151 ;;		None
 18152 ;; Tracked objects:
 18153 ;;		On entry : 3F/0
 18154 ;;		On exit  : 3F/0
 18155 ;;		Unchanged: 3F/0
 18156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18157 ;;      Params:         0       0       0       0       0       0       0       0       0
 18158 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18159 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18160 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18161 ;;Total ram usage:        0 bytes
 18162 ;; Hardware stack levels used: 1
 18163 ;; Hardware stack levels required when called: 10
 18164 ;; This function calls:
 18165 ;;		Nothing
 18166 ;; This function is called by:
 18167 ;;		_main
 18168 ;; This function uses a non-reentrant model
 18169 ;;
 18170                           
 18171                           	psect	text77
 18172  007E10                     __ptext77:
 18173                           	callstack 0
 18174  007E10                     _TMR0_StartTimer:
 18175                           	callstack 20
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;mcc_generated_files/tmr0.c: 100:     T0CONbits.TMR0ON = 1;
 18179                           
 18180                           ; BSR set to: 0
 18181                           ;incstack = 0
 18182  007E10  8ED5               	bsf	213,7,c	;volatile
 18183                           
 18184                           ; BSR set to: 0
 18185  007E12  0012               	return		;funcret
 18186  007E14                     __end_of_TMR0_StartTimer:
 18187                           	callstack 0
 18188                           
 18189 ;; *************** function _SYSTEM_Initialize *****************
 18190 ;; Defined at:
 18191 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18192 ;; Parameters:    Size  Location     Type
 18193 ;;		None
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;		None
 18196 ;; Return value:  Size  Location     Type
 18197 ;;                  1    wreg      void 
 18198 ;; Registers used:
 18199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18200 ;; Tracked objects:
 18201 ;;		On entry : 0/0
 18202 ;;		On exit  : 3F/0
 18203 ;;		Unchanged: 0/0
 18204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18205 ;;      Params:         0       0       0       0       0       0       0       0       0
 18206 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18207 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18208 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18209 ;;Total ram usage:        0 bytes
 18210 ;; Hardware stack levels used: 1
 18211 ;; Hardware stack levels required when called: 12
 18212 ;; This function calls:
 18213 ;;		_ADC_Initialize
 18214 ;;		_CCP2_Initialize
 18215 ;;		_INTERRUPT_Initialize
 18216 ;;		_OSCILLATOR_Initialize
 18217 ;;		_PIN_MANAGER_Initialize
 18218 ;;		_TMR0_Initialize
 18219 ;;		_TMR1_Initialize
 18220 ;;		_TMR2_Initialize
 18221 ;;		_TMR3_Initialize
 18222 ;;		_USBDeviceAttach
 18223 ;;		_USBDeviceInit
 18224 ;; This function is called by:
 18225 ;;		_main
 18226 ;; This function uses a non-reentrant model
 18227 ;;
 18228                           
 18229                           	psect	text78
 18230  007A34                     __ptext78:
 18231                           	callstack 0
 18232  007A34                     _SYSTEM_Initialize:
 18233                           	callstack 18
 18234                           
 18235                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 18236                           
 18237                           ; BSR set to: 0
 18238                           ;incstack = 0
 18239  007A34  EC0A  F03F         	call	_INTERRUPT_Initialize	;wreg free
 18240                           
 18241                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 18242  007A38  EC31  F03B         	call	_PIN_MANAGER_Initialize	;wreg free
 18243                           
 18244                           ; BSR set to: 0
 18245                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 18246  007A3C  EC90  F03E         	call	_OSCILLATOR_Initialize	;wreg free
 18247                           
 18248                           ; BSR set to: 0
 18249                           ;mcc_generated_files/mcc.c: 56:     CCP2_Initialize();
 18250  007A40  ECB4  F03E         	call	_CCP2_Initialize	;wreg free
 18251                           
 18252                           ; BSR set to: 0
 18253                           ;mcc_generated_files/mcc.c: 57:     USBDeviceInit();
 18254  007A44  ECC8  F027         	call	_USBDeviceInit	;wreg free
 18255                           
 18256                           ; BSR set to: 1
 18257                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 18258  007A48  EC9B  F03E         	call	_ADC_Initialize	;wreg free
 18259                           
 18260                           ; BSR set to: 1
 18261                           ;mcc_generated_files/mcc.c: 59:     TMR3_Initialize();
 18262  007A4C  EC75  F03D         	call	_TMR3_Initialize	;wreg free
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 18266  007A50  EC2F  F03E         	call	_TMR2_Initialize	;wreg free
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;mcc_generated_files/mcc.c: 61:     TMR1_Initialize();
 18270  007A54  EC5B  F03E         	call	_TMR1_Initialize	;wreg free
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 18274  007A58  EC91  F03B         	call	_TMR0_Initialize	;wreg free
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;mcc_generated_files/mcc.c: 63:     USBDeviceAttach();
 18278  007A5C  EC5F  F03D         	call	_USBDeviceAttach	;wreg free
 18279                           
 18280                           ; BSR set to: 0
 18281  007A60  0012               	return		;funcret
 18282  007A62                     __end_of_SYSTEM_Initialize:
 18283                           	callstack 0
 18284                           
 18285 ;; *************** function _USBDeviceInit *****************
 18286 ;; Defined at:
 18287 ;;		line 281 in file "mcc_generated_files/usb/usb_device.c"
 18288 ;; Parameters:    Size  Location     Type
 18289 ;;		None
 18290 ;; Auto vars:     Size  Location     Type
 18291 ;;  i               1   56[BANK0 ] unsigned char 
 18292 ;; Return value:  Size  Location     Type
 18293 ;;                  1    wreg      void 
 18294 ;; Registers used:
 18295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18296 ;; Tracked objects:
 18297 ;;		On entry : 3F/0
 18298 ;;		On exit  : 3F/1
 18299 ;;		Unchanged: 0/0
 18300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18301 ;;      Params:         0       0       0       0       0       0       0       0       0
 18302 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18304 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18305 ;;Total ram usage:        1 bytes
 18306 ;; Hardware stack levels used: 1
 18307 ;; Hardware stack levels required when called: 11
 18308 ;; This function calls:
 18309 ;;		_memset
 18310 ;; This function is called by:
 18311 ;;		_SYSTEM_Initialize
 18312 ;; This function uses a non-reentrant model
 18313 ;;
 18314                           
 18315                           	psect	text79
 18316  004F90                     __ptext79:
 18317                           	callstack 0
 18318  004F90                     _USBDeviceInit:
 18319                           	callstack 18
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;mcc_generated_files/usb/usb_device.c: 283:     uint8_t i;;mcc_generated_files/usb/usb_d
      +                          evice.c: 285:     {PIE3bits.USBIE = 0;};
 18323                           
 18324                           ; BSR set to: 0
 18325                           ;incstack = 0
 18326  004F90  94A3               	bcf	163,2,c	;volatile
 18327                           
 18328                           ; BSR set to: 0
 18329                           ;mcc_generated_files/usb/usb_device.c: 292:     {UEIR = 0;};
 18330  004F92  0E00               	movlw	0
 18331  004F94  6E67               	movwf	103,c	;volatile
 18332                           
 18333                           ;mcc_generated_files/usb/usb_device.c: 295:     {UIR = 0;};
 18334  004F96  0E00               	movlw	0
 18335  004F98  6E65               	movwf	101,c	;volatile
 18336                           
 18337                           ;mcc_generated_files/usb/usb_device.c: 298:     UEP0 = 0;
 18338  004F9A  0E00               	movlw	0
 18339  004F9C  6E6A               	movwf	106,c	;volatile
 18340                           
 18341                           ; BSR set to: 0
 18342                           ;mcc_generated_files/usb/usb_device.c: 300:     memset((void*)&UEP1,0x00,(2));;
 18343  004F9E  0E6B               	movlw	107
 18344  004FA0  6F8C               	movwf	memset@dest& (0+255),b
 18345  004FA2  0E0F               	movlw	15
 18346  004FA4  6F8D               	movwf	(memset@dest+1)& (0+255),b
 18347  004FA6  0E00               	movlw	0
 18348  004FA8  6F8F               	movwf	(memset@c+1)& (0+255),b
 18349  004FAA  0E00               	movlw	0
 18350  004FAC  6F8E               	movwf	memset@c& (0+255),b
 18351  004FAE  0E00               	movlw	0
 18352  004FB0  6F91               	movwf	(memset@n+1)& (0+255),b
 18353  004FB2  0E02               	movlw	2
 18354  004FB4  6F90               	movwf	memset@n& (0+255),b
 18355  004FB6  ECFD  F025         	call	_memset	;wreg free
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;mcc_generated_files/usb/usb_device.c: 302:     { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE
      +                           = 0x9F; UIE = 0x39 | 0x40 | 0x02; };
 18359  004FBA  0E16               	movlw	22
 18360  004FBC  6E62               	movwf	98,c	;volatile
 18361                           
 18362                           ; BSR set to: 0
 18363  004FBE  0E9F               	movlw	159
 18364  004FC0  6E66               	movwf	102,c	;volatile
 18365                           
 18366                           ; BSR set to: 0
 18367  004FC2  0E7B               	movlw	123
 18368  004FC4  6E64               	movwf	100,c	;volatile
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;mcc_generated_files/usb/usb_device.c: 311:     for(i = 0; i < (sizeof(BDT)/sizeof(BDT_E
      +                          NTRY)); i++)
 18372  004FC6  0E00               	movlw	0
 18373  004FC8  6F98               	movwf	USBDeviceInit@i& (0+255),b
 18374  004FCA                     l14866:
 18375                           
 18376                           ; BSR set to: 0
 18377                           ;mcc_generated_files/usb/usb_device.c: 312:     {;mcc_generated_files/usb/usb_device.c: 
      +                          313:         BDT[i].Val = 0x00;
 18378  004FCA  5198               	movf	USBDeviceInit@i& (0+255),w,b
 18379  004FCC  0D04               	mullw	4
 18380  004FCE  0E00               	movlw	0
 18381  004FD0  24F3               	addwf	243,w,c
 18382  004FD2  6ED9               	movwf	fsr2l,c
 18383  004FD4  0E04               	movlw	4
 18384  004FD6  20F4               	addwfc	prodh,w,c
 18385  004FD8  6EDA               	movwf	fsr2h,c
 18386  004FDA  6ADE               	clrf	postinc2,c
 18387  004FDC  6ADE               	clrf	postinc2,c
 18388  004FDE  6ADE               	clrf	postinc2,c
 18389  004FE0  6ADD               	clrf	postdec2,c
 18390                           
 18391                           ; BSR set to: 0
 18392                           ;mcc_generated_files/usb/usb_device.c: 314:     }
 18393  004FE2  2B98               	incf	USBDeviceInit@i& (0+255),f,b
 18394                           
 18395                           ; BSR set to: 0
 18396  004FE4  0E0B               	movlw	11
 18397  004FE6  6598               	cpfsgt	USBDeviceInit@i& (0+255),b
 18398  004FE8  D7F0               	goto	l14866
 18399                           
 18400                           ; BSR set to: 0
 18401                           ;mcc_generated_files/usb/usb_device.c: 317:     UCONbits.PPBRST = 1;
 18402  004FEA  8C60               	bsf	96,6,c	;volatile
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;mcc_generated_files/usb/usb_device.c: 320:     UADDR = 0x00;
 18406  004FEC  0E00               	movlw	0
 18407  004FEE  6E63               	movwf	99,c	;volatile
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;mcc_generated_files/usb/usb_device.c: 323:     UCONbits.PKTDIS = 0;
 18411  004FF0  9860               	bcf	96,4,c	;volatile
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;mcc_generated_files/usb/usb_device.c: 326:     UCONbits.PPBRST = 0;
 18415  004FF2  9C60               	bcf	96,6,c	;volatile
 18416  004FF4                     l14878:
 18417                           
 18418                           ; BSR set to: 0
 18419                           ;mcc_generated_files/usb/usb_device.c: 330:     {;mcc_generated_files/usb/usb_device.c: 
      +                          331:         (UIR &= 0xF7);
 18420  004FF4  9665               	bcf	101,3,c	;volatile
 18421                           
 18422                           ; BSR set to: 0
 18423                           ;mcc_generated_files/usb/usb_device.c: 333:         inPipes[0].info.Val = 0;
 18424  004FF6  0E00               	movlw	0
 18425  004FF8  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18426                           
 18427                           ; BSR set to: 0
 18428                           ;mcc_generated_files/usb/usb_device.c: 334:         outPipes[0].info.Val = 0;
 18429  004FFA  0E00               	movlw	0
 18430  004FFC  6FAB               	movwf	(_outPipes+3)& (0+255),b	;volatile
 18431                           
 18432                           ; BSR set to: 0
 18433                           ;mcc_generated_files/usb/usb_device.c: 335:         outPipes[0].wCount.Val = 0;
 18434  004FFE  0E00               	movlw	0
 18435  005000  6FAD               	movwf	(_outPipes+5)& (0+255),b	;volatile
 18436  005002  0E00               	movlw	0
 18437  005004  6FAC               	movwf	(_outPipes+4)& (0+255),b	;volatile
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;mcc_generated_files/usb/usb_device.c: 336:     }while(UIRbits.TRNIF == 1);
 18441  005006  B665               	btfsc	101,3,c	;volatile
 18442  005008  D7F5               	goto	l14878
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;mcc_generated_files/usb/usb_device.c: 340:     USBStatusStageEnabledFlag1 = 1;
 18446  00500A  0E01               	movlw	1
 18447  00500C  6FCB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18448                           
 18449                           ;mcc_generated_files/usb/usb_device.c: 341:     USBStatusStageEnabledFlag2 = 1;
 18450  00500E  0E01               	movlw	1
 18451  005010  6FCA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18452                           
 18453                           ;mcc_generated_files/usb/usb_device.c: 343:     USBDeferINDataStagePackets = 0;
 18454  005012  0E00               	movlw	0
 18455  005014  6FC9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18456                           
 18457                           ;mcc_generated_files/usb/usb_device.c: 344:     USBDeferOUTDataStagePackets = 0;
 18458  005016  0E00               	movlw	0
 18459  005018  0101               	movlb	1	; () banked
 18460  00501A  6FE5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18461                           
 18462                           ;mcc_generated_files/usb/usb_device.c: 345:     USBBusIsSuspended = 0;
 18463  00501C  0E00               	movlw	0
 18464  00501E  0100               	movlb	0	; () banked
 18465  005020  6FD0               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 18466                           
 18467                           ;mcc_generated_files/usb/usb_device.c: 349:     for(i = 0; i < (uint8_t)(2 +1u); i++)
 18468  005022  0E00               	movlw	0
 18469  005024  6F98               	movwf	USBDeviceInit@i& (0+255),b
 18470  005026                     l14894:
 18471                           
 18472                           ; BSR set to: 0
 18473                           ;mcc_generated_files/usb/usb_device.c: 350:     {;mcc_generated_files/usb/usb_device.c: 
      +                          351:         pBDTEntryIn[i] = 0u;
 18474  005026  5198               	movf	USBDeviceInit@i& (0+255),w,b
 18475  005028  0D02               	mullw	2
 18476  00502A  50F3               	movf	243,w,c
 18477  00502C  0FB6               	addlw	low _pBDTEntryIn
 18478  00502E  6ED9               	movwf	fsr2l,c
 18479  005030  6ADA               	clrf	fsr2h,c
 18480  005032  0E00               	movlw	0
 18481  005034  6EDE               	movwf	postinc2,c
 18482  005036  0E00               	movlw	0
 18483  005038  6EDD               	movwf	postdec2,c
 18484                           
 18485                           ;mcc_generated_files/usb/usb_device.c: 352:         pBDTEntryOut[i] = 0u;
 18486  00503A  5198               	movf	USBDeviceInit@i& (0+255),w,b
 18487  00503C  0D02               	mullw	2
 18488  00503E  0EAF               	movlw	low _pBDTEntryOut
 18489  005040  24F3               	addwf	243,w,c
 18490  005042  6ED9               	movwf	fsr2l,c
 18491  005044  0E01               	movlw	high _pBDTEntryOut
 18492  005046  20F4               	addwfc	prodh,w,c
 18493  005048  6EDA               	movwf	fsr2h,c
 18494  00504A  0E00               	movlw	0
 18495  00504C  6EDE               	movwf	postinc2,c
 18496  00504E  0E00               	movlw	0
 18497  005050  6EDD               	movwf	postdec2,c
 18498                           
 18499                           ; BSR set to: 0
 18500                           ;mcc_generated_files/usb/usb_device.c: 353:         ep_data_in[i].Val = 0u;
 18501  005052  0EC2               	movlw	low _ep_data_in
 18502  005054  2598               	addwf	USBDeviceInit@i& (0+255),w,b
 18503  005056  6ED9               	movwf	fsr2l,c
 18504  005058  6ADA               	clrf	fsr2h,c
 18505  00505A  0E01               	movlw	high _ep_data_in
 18506  00505C  22DA               	addwfc	fsr2h,f,c
 18507  00505E  0E00               	movlw	0
 18508  005060  6EDF               	movwf	indf2,c
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;mcc_generated_files/usb/usb_device.c: 354:         ep_data_out[i].Val = 0u;
 18512  005062  0EBF               	movlw	low _ep_data_out
 18513  005064  2598               	addwf	USBDeviceInit@i& (0+255),w,b
 18514  005066  6ED9               	movwf	fsr2l,c
 18515  005068  6ADA               	clrf	fsr2h,c
 18516  00506A  0E01               	movlw	high _ep_data_out
 18517  00506C  22DA               	addwfc	fsr2h,f,c
 18518  00506E  0E00               	movlw	0
 18519  005070  6EDF               	movwf	indf2,c
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;mcc_generated_files/usb/usb_device.c: 355:     }
 18523  005072  2B98               	incf	USBDeviceInit@i& (0+255),f,b
 18524                           
 18525                           ; BSR set to: 0
 18526  005074  0E02               	movlw	2
 18527  005076  6598               	cpfsgt	USBDeviceInit@i& (0+255),b
 18528  005078  D7D6               	goto	l14894
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;mcc_generated_files/usb/usb_device.c: 358:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)&B
      +                          DT[2];
 18532  00507A  0E08               	movlw	8
 18533  00507C  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 18534  00507E  0E04               	movlw	4
 18535  005080  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;mcc_generated_files/usb/usb_device.c: 360:     UEP0 = 0x06|0x10;
 18539  005082  0E16               	movlw	22
 18540  005084  6E6A               	movwf	106,c	;volatile
 18541                           
 18542                           ; BSR set to: 0
 18543                           ;mcc_generated_files/usb/usb_device.c: 362:     BDT[0].ADR = ((uint16_t)(&SetupPkt));
 18544  005086  0E04               	movlw	4
 18545  005088  0104               	movlb	4	; () banked
 18546  00508A  6F03               	movwf	3,b	;volatile
 18547  00508C  0E30               	movlw	48
 18548  00508E  6F02               	movwf	2,b	;volatile
 18549                           
 18550                           ; BSR set to: 4
 18551                           ;mcc_generated_files/usb/usb_device.c: 363:     BDT[0].CNT = 8;
 18552  005090  0E08               	movlw	8
 18553  005092  6F01               	movwf	1,b	;volatile
 18554                           
 18555                           ; BSR set to: 4
 18556                           ;mcc_generated_files/usb/usb_device.c: 364:     BDT[0].STAT.Val = 0x00|0x04;
 18557  005094  0E04               	movlw	4
 18558  005096  6F00               	movwf	0,b	;volatile
 18559                           
 18560                           ; BSR set to: 4
 18561                           ;mcc_generated_files/usb/usb_device.c: 365:     BDT[0].STAT.Val |= 0x80;
 18562  005098  8F00               	bsf	0,7,b	;volatile
 18563                           
 18564                           ; BSR set to: 4
 18565                           ;mcc_generated_files/usb/usb_device.c: 368:     USBActiveConfiguration = 0;
 18566  00509A  0E00               	movlw	0
 18567  00509C  0100               	movlb	0	; () banked
 18568  00509E  6FD3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;mcc_generated_files/usb/usb_device.c: 370:     USB1msTickCount = 0;
 18572  0050A0  0E00               	movlw	0
 18573  0050A2  0102               	movlb	2	; () banked
 18574  0050A4  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
 18575  0050A6  0E00               	movlw	0
 18576  0050A8  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 18577  0050AA  0E00               	movlw	0
 18578  0050AC  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 18579  0050AE  0E00               	movlw	0
 18580  0050B0  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 18581                           
 18582                           ; BSR set to: 2
 18583                           ;mcc_generated_files/usb/usb_device.c: 371:     USBTicksSinceSuspendEnd = 0;
 18584  0050B2  0E00               	movlw	0
 18585  0050B4  0101               	movlb	1	; () banked
 18586  0050B6  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 18587                           
 18588                           ; BSR set to: 1
 18589                           ;mcc_generated_files/usb/usb_device.c: 374:     USBDeviceState = DETACHED_STATE;
 18590  0050B8  0E00               	movlw	0
 18591  0050BA  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 18592                           
 18593                           ; BSR set to: 1
 18594  0050BC  0012               	return		;funcret
 18595  0050BE                     __end_of_USBDeviceInit:
 18596                           	callstack 0
 18597                           
 18598 ;; *************** function _USBDeviceAttach *****************
 18599 ;; Defined at:
 18600 ;;		line 1356 in file "mcc_generated_files/usb/usb_device.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;		None
 18603 ;; Auto vars:     Size  Location     Type
 18604 ;;		None
 18605 ;; Return value:  Size  Location     Type
 18606 ;;                  1    wreg      void 
 18607 ;; Registers used:
 18608 ;;		wreg, status,2
 18609 ;; Tracked objects:
 18610 ;;		On entry : 3F/0
 18611 ;;		On exit  : 3F/0
 18612 ;;		Unchanged: 3F/0
 18613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18614 ;;      Params:         0       0       0       0       0       0       0       0       0
 18615 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18617 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18618 ;;Total ram usage:        0 bytes
 18619 ;; Hardware stack levels used: 1
 18620 ;; Hardware stack levels required when called: 10
 18621 ;; This function calls:
 18622 ;;		Nothing
 18623 ;; This function is called by:
 18624 ;;		_SYSTEM_Initialize
 18625 ;; This function uses a non-reentrant model
 18626 ;;
 18627                           
 18628                           	psect	text80
 18629  007ABE                     __ptext80:
 18630                           	callstack 0
 18631  007ABE                     _USBDeviceAttach:
 18632                           	callstack 19
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;mcc_generated_files/usb/usb_device.c: 1360:     {;mcc_generated_files/usb/usb_device.c:
      +                           1361:         if(1 == 1)
 18636                           
 18637                           ; BSR set to: 1
 18638                           ;incstack = 0
 18639  007ABE  505C               	movf	_USBDeviceState^0,w,c
 18640  007AC0  A4D8               	btfss	status,2,c
 18641  007AC2  0012               	return	
 18642                           
 18643                           ; BSR set to: 0
 18644                           ;mcc_generated_files/usb/usb_device.c: 1362:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1364:             UCON = 0;
 18645  007AC4  0E00               	movlw	0
 18646  007AC6  6E60               	movwf	96,c	;volatile
 18647                           
 18648                           ;mcc_generated_files/usb/usb_device.c: 1367:             UIE = 0;
 18649  007AC8  0E00               	movlw	0
 18650  007ACA  6E64               	movwf	100,c	;volatile
 18651                           
 18652                           ;mcc_generated_files/usb/usb_device.c: 1371:             { UCFG = 0x10 | 0x00 | 0x04 | 0
      +                          x02; UEIE = 0x9F; UIE = 0x39 | 0x40 | 0x02; };
 18653  007ACC  0E16               	movlw	22
 18654  007ACE  6E62               	movwf	98,c	;volatile
 18655  007AD0  0E9F               	movlw	159
 18656  007AD2  6E66               	movwf	102,c	;volatile
 18657  007AD4  0E7B               	movlw	123
 18658  007AD6  6E64               	movwf	100,c	;volatile
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;mcc_generated_files/usb/usb_device.c: 1373:             {IPR3bits.USBIP = 1;PIE3bits.US
      +                          BIE = 1;};
 18662  007AD8  84A5               	bsf	165,2,c	;volatile
 18663                           
 18664                           ; BSR set to: 0
 18665  007ADA  84A3               	bsf	163,2,c	;volatile
 18666                           
 18667                           ;mcc_generated_files/usb/usb_device.c: 1376:             while(!UCONbits.USBEN){UCONbits
      +                          .USBEN = 1;}
 18668  007ADC  D001               	goto	l196
 18669  007ADE                     l197:
 18670                           
 18671                           ; BSR set to: 0
 18672  007ADE  8660               	bsf	96,3,c	;volatile
 18673  007AE0                     l196:
 18674                           
 18675                           ; BSR set to: 0
 18676  007AE0  A660               	btfss	96,3,c	;volatile
 18677  007AE2  D7FD               	goto	l197
 18678                           
 18679                           ; BSR set to: 0
 18680                           ;mcc_generated_files/usb/usb_device.c: 1379:             USBDeviceState = ATTACHED_STATE
      +                          ;
 18681  007AE4  0E01               	movlw	1
 18682  007AE6  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 18683                           
 18684                           ; BSR set to: 0
 18685  007AE8  0012               	return		;funcret
 18686  007AEA                     __end_of_USBDeviceAttach:
 18687                           	callstack 0
 18688                           
 18689 ;; *************** function _TMR3_Initialize *****************
 18690 ;; Defined at:
 18691 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;		None
 18694 ;; Auto vars:     Size  Location     Type
 18695 ;;		None
 18696 ;; Return value:  Size  Location     Type
 18697 ;;                  1    wreg      void 
 18698 ;; Registers used:
 18699 ;;		wreg, status,2, status,0, cstack
 18700 ;; Tracked objects:
 18701 ;;		On entry : 3F/1
 18702 ;;		On exit  : 3F/0
 18703 ;;		Unchanged: 0/0
 18704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18705 ;;      Params:         0       0       0       0       0       0       0       0       0
 18706 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18707 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18708 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18709 ;;Total ram usage:        0 bytes
 18710 ;; Hardware stack levels used: 1
 18711 ;; Hardware stack levels required when called: 11
 18712 ;; This function calls:
 18713 ;;		_TMR3_SetInterruptHandler
 18714 ;; This function is called by:
 18715 ;;		_SYSTEM_Initialize
 18716 ;; This function uses a non-reentrant model
 18717 ;;
 18718                           
 18719                           	psect	text81
 18720  007AEA                     __ptext81:
 18721                           	callstack 0
 18722  007AEA                     _TMR3_Initialize:
 18723                           	callstack 18
 18724                           
 18725                           ; BSR set to: 1
 18726                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
 18727                           
 18728                           ; BSR set to: 0
 18729                           ;incstack = 0
 18730  007AEA  0E00               	movlw	0
 18731  007AEC  6EB4               	movwf	180,c	;volatile
 18732                           
 18733                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x44;
 18734  007AEE  0E44               	movlw	68
 18735  007AF0  6EB3               	movwf	179,c	;volatile
 18736                           
 18737                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0x80;
 18738  007AF2  0E80               	movlw	128
 18739  007AF4  6EB2               	movwf	178,c	;volatile
 18740                           
 18741                           ; BSR set to: 1
 18742                           ;mcc_generated_files/tmr3.c: 78:     timer3ReloadVal=TMR3;
 18743  007AF6  CFB2 F1D1          	movff	4018,_timer3ReloadVal	;volatile
 18744  007AFA  CFB3 F1D2          	movff	4019,_timer3ReloadVal+1	;volatile
 18745                           
 18746                           ; BSR set to: 1
 18747                           ;mcc_generated_files/tmr3.c: 81:     PIR2bits.TMR3IF = 0;
 18748  007AFE  92A1               	bcf	161,1,c	;volatile
 18749                           
 18750                           ; BSR set to: 1
 18751                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
 18752  007B00  82A0               	bsf	160,1,c	;volatile
 18753                           
 18754                           ; BSR set to: 1
 18755                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 18756  007B02  0E20               	movlw	low _TMR3_DefaultInterruptHandler
 18757  007B04  0100               	movlb	0	; () banked
 18758  007B06  6F8C               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 18759  007B08  0E7E               	movlw	high _TMR3_DefaultInterruptHandler
 18760  007B0A  6F8D               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 18761  007B0C  ECD7  F03E         	call	_TMR3_SetInterruptHandler	;wreg free
 18762                           
 18763                           ; BSR set to: 0
 18764                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x01;
 18765  007B10  0E01               	movlw	1
 18766  007B12  6EB1               	movwf	177,c	;volatile
 18767                           
 18768                           ; BSR set to: 0
 18769  007B14  0012               	return		;funcret
 18770  007B16                     __end_of_TMR3_Initialize:
 18771                           	callstack 0
 18772                           
 18773 ;; *************** function _TMR3_SetInterruptHandler *****************
 18774 ;; Defined at:
 18775 ;;		line 172 in file "mcc_generated_files/tmr3.c"
 18776 ;; Parameters:    Size  Location     Type
 18777 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
 18778 ;;		 -> TMR3_DefaultInterruptHandler(1), 
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;		None
 18781 ;; Return value:  Size  Location     Type
 18782 ;;                  1    wreg      void 
 18783 ;; Registers used:
 18784 ;;		wreg, status,2, status,0
 18785 ;; Tracked objects:
 18786 ;;		On entry : 3F/0
 18787 ;;		On exit  : 3F/0
 18788 ;;		Unchanged: 3F/0
 18789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18790 ;;      Params:         0       2       0       0       0       0       0       0       0
 18791 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18793 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18794 ;;Total ram usage:        2 bytes
 18795 ;; Hardware stack levels used: 1
 18796 ;; Hardware stack levels required when called: 10
 18797 ;; This function calls:
 18798 ;;		Nothing
 18799 ;; This function is called by:
 18800 ;;		_TMR3_Initialize
 18801 ;; This function uses a non-reentrant model
 18802 ;;
 18803                           
 18804                           	psect	text82
 18805  007DAE                     __ptext82:
 18806                           	callstack 0
 18807  007DAE                     _TMR3_SetInterruptHandler:
 18808                           	callstack 18
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;mcc_generated_files/tmr3.c: 173:     TMR3_InterruptHandler = InterruptHandler;
 18812                           
 18813                           ; BSR set to: 0
 18814                           ;incstack = 0
 18815  007DAE  C08C  F1CF         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 18816  007DB2  C08D  F1D0         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 18817                           
 18818                           ; BSR set to: 0
 18819  007DB6  0012               	return		;funcret
 18820  007DB8                     __end_of_TMR3_SetInterruptHandler:
 18821                           	callstack 0
 18822                           
 18823 ;; *************** function _TMR2_Initialize *****************
 18824 ;; Defined at:
 18825 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;		None
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;		None
 18830 ;; Return value:  Size  Location     Type
 18831 ;;                  1    wreg      void 
 18832 ;; Registers used:
 18833 ;;		wreg, status,2, status,0, cstack
 18834 ;; Tracked objects:
 18835 ;;		On entry : 3F/0
 18836 ;;		On exit  : 3F/0
 18837 ;;		Unchanged: 0/0
 18838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18839 ;;      Params:         0       0       0       0       0       0       0       0       0
 18840 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18841 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18842 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18843 ;;Total ram usage:        0 bytes
 18844 ;; Hardware stack levels used: 1
 18845 ;; Hardware stack levels required when called: 11
 18846 ;; This function calls:
 18847 ;;		_TMR2_SetInterruptHandler
 18848 ;; This function is called by:
 18849 ;;		_SYSTEM_Initialize
 18850 ;; This function uses a non-reentrant model
 18851 ;;
 18852                           
 18853                           	psect	text83
 18854  007C5E                     __ptext83:
 18855                           	callstack 0
 18856  007C5E                     _TMR2_Initialize:
 18857                           	callstack 18
 18858                           
 18859                           ; BSR set to: 0
 18860                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xBB;
 18861                           
 18862                           ; BSR set to: 0
 18863                           ;incstack = 0
 18864  007C5E  0EBB               	movlw	187
 18865  007C60  6EBB               	movwf	187,c	;volatile
 18866                           
 18867                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 18868  007C62  0E00               	movlw	0
 18869  007C64  6EBC               	movwf	188,c	;volatile
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 18873  007C66  929E               	bcf	158,1,c	;volatile
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 18877  007C68  829D               	bsf	157,1,c	;volatile
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 18881  007C6A  0E22               	movlw	low _TMR2_DefaultInterruptHandler
 18882  007C6C  6F8C               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 18883  007C6E  0E7E               	movlw	high _TMR2_DefaultInterruptHandler
 18884  007C70  6F8D               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 18885  007C72  ECDC  F03E         	call	_TMR2_SetInterruptHandler	;wreg free
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
 18889  007C76  0E7E               	movlw	126
 18890  007C78  6EBA               	movwf	186,c	;volatile
 18891                           
 18892                           ; BSR set to: 0
 18893  007C7A  0012               	return		;funcret
 18894  007C7C                     __end_of_TMR2_Initialize:
 18895                           	callstack 0
 18896                           
 18897 ;; *************** function _TMR2_SetInterruptHandler *****************
 18898 ;; Defined at:
 18899 ;;		line 132 in file "mcc_generated_files/tmr2.c"
 18900 ;; Parameters:    Size  Location     Type
 18901 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
 18902 ;;		 -> G01_TMR2_ISR(1), TMR2_DefaultInterruptHandler(1), 
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;		None
 18905 ;; Return value:  Size  Location     Type
 18906 ;;                  1    wreg      void 
 18907 ;; Registers used:
 18908 ;;		wreg, status,2, status,0
 18909 ;; Tracked objects:
 18910 ;;		On entry : 3F/0
 18911 ;;		On exit  : 3F/0
 18912 ;;		Unchanged: 3F/0
 18913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18914 ;;      Params:         0       2       0       0       0       0       0       0       0
 18915 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18917 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18918 ;;Total ram usage:        2 bytes
 18919 ;; Hardware stack levels used: 1
 18920 ;; Hardware stack levels required when called: 10
 18921 ;; This function calls:
 18922 ;;		Nothing
 18923 ;; This function is called by:
 18924 ;;		_TMR2_Initialize
 18925 ;;		_G_01
 18926 ;;		_G_95
 18927 ;; This function uses a non-reentrant model
 18928 ;;
 18929                           
 18930                           	psect	text84
 18931  007DB8                     __ptext84:
 18932                           	callstack 0
 18933  007DB8                     _TMR2_SetInterruptHandler:
 18934                           	callstack 18
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;incstack = 0
 18941  007DB8  C08C  F1CD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 18942  007DBC  C08D  F1CE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 18943                           
 18944                           ; BSR set to: 0
 18945  007DC0  0012               	return		;funcret
 18946  007DC2                     __end_of_TMR2_SetInterruptHandler:
 18947                           	callstack 0
 18948                           
 18949 ;; *************** function _TMR1_Initialize *****************
 18950 ;; Defined at:
 18951 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 18952 ;; Parameters:    Size  Location     Type
 18953 ;;		None
 18954 ;; Auto vars:     Size  Location     Type
 18955 ;;		None
 18956 ;; Return value:  Size  Location     Type
 18957 ;;                  1    wreg      void 
 18958 ;; Registers used:
 18959 ;;		wreg, status,2
 18960 ;; Tracked objects:
 18961 ;;		On entry : 3F/0
 18962 ;;		On exit  : 3F/0
 18963 ;;		Unchanged: 3F/0
 18964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18965 ;;      Params:         0       0       0       0       0       0       0       0       0
 18966 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18967 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18968 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18969 ;;Total ram usage:        0 bytes
 18970 ;; Hardware stack levels used: 1
 18971 ;; Hardware stack levels required when called: 10
 18972 ;; This function calls:
 18973 ;;		Nothing
 18974 ;; This function is called by:
 18975 ;;		_SYSTEM_Initialize
 18976 ;; This function uses a non-reentrant model
 18977 ;;
 18978                           
 18979                           	psect	text85
 18980  007CB6                     __ptext85:
 18981                           	callstack 0
 18982  007CB6                     _TMR1_Initialize:
 18983                           	callstack 19
 18984                           
 18985                           ; BSR set to: 0
 18986                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 18987                           
 18988                           ; BSR set to: 0
 18989                           ;incstack = 0
 18990  007CB6  0E00               	movlw	0
 18991  007CB8  6ECC               	movwf	204,c	;volatile
 18992                           
 18993                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
 18994  007CBA  0E00               	movlw	0
 18995  007CBC  6ECF               	movwf	207,c	;volatile
 18996                           
 18997                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
 18998  007CBE  0E00               	movlw	0
 18999  007CC0  6ECE               	movwf	206,c	;volatile
 19000                           
 19001                           ; BSR set to: 0
 19002                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
 19003  007CC2  CFCE F2DA          	movff	4046,_timer1ReloadVal	;volatile
 19004  007CC6  CFCF F2DB          	movff	4047,_timer1ReloadVal+1	;volatile
 19005                           
 19006                           ; BSR set to: 0
 19007                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
 19008  007CCA  909E               	bcf	158,0,c	;volatile
 19009                           
 19010                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
 19011  007CCC  0E01               	movlw	1
 19012  007CCE  6ECD               	movwf	205,c	;volatile
 19013                           
 19014                           ; BSR set to: 0
 19015  007CD0  0012               	return		;funcret
 19016  007CD2                     __end_of_TMR1_Initialize:
 19017                           	callstack 0
 19018                           
 19019 ;; *************** function _TMR0_Initialize *****************
 19020 ;; Defined at:
 19021 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 19022 ;; Parameters:    Size  Location     Type
 19023 ;;		None
 19024 ;; Auto vars:     Size  Location     Type
 19025 ;;		None
 19026 ;; Return value:  Size  Location     Type
 19027 ;;                  1    wreg      void 
 19028 ;; Registers used:
 19029 ;;		wreg, status,2, status,0, cstack
 19030 ;; Tracked objects:
 19031 ;;		On entry : 3F/0
 19032 ;;		On exit  : 3F/0
 19033 ;;		Unchanged: 0/0
 19034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19035 ;;      Params:         0       0       0       0       0       0       0       0       0
 19036 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19037 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19038 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19039 ;;Total ram usage:        2 bytes
 19040 ;; Hardware stack levels used: 1
 19041 ;; Hardware stack levels required when called: 11
 19042 ;; This function calls:
 19043 ;;		_TMR0_SetInterruptHandler
 19044 ;; This function is called by:
 19045 ;;		_SYSTEM_Initialize
 19046 ;; This function uses a non-reentrant model
 19047 ;;
 19048                           
 19049                           	psect	text86
 19050  007722                     __ptext86:
 19051                           	callstack 0
 19052  007722                     _TMR0_Initialize:
 19053                           	callstack 18
 19054                           
 19055                           ; BSR set to: 0
 19056                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;incstack = 0
 19060  007722  9CD5               	bcf	213,6,c	;volatile
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
 19064  007724  0E00               	movlw	0
 19065  007726  6ED7               	movwf	215,c	;volatile
 19066                           
 19067                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 19068  007728  0E00               	movlw	0
 19069  00772A  6ED6               	movwf	214,c	;volatile
 19070                           
 19071                           ; BSR set to: 0
 19072                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 19073  00772C  50D6               	movf	214,w,c	;volatile
 19074  00772E  CFD7 F08E          	movff	4055,??_TMR0_Initialize	;volatile
 19075  007732  6B8F               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 19076  007734  C08E  F08F         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 19077  007738  6B8E               	clrf	??_TMR0_Initialize& (0+255),b
 19078  00773A  118E               	iorwf	??_TMR0_Initialize& (0+255),w,b
 19079  00773C  0101               	movlb	1	; () banked
 19080  00773E  6FC9               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 19081  007740  0100               	movlb	0	; () banked
 19082  007742  518F               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 19083  007744  0101               	movlb	1	; () banked
 19084  007746  6FCA               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 19085                           
 19086                           ; BSR set to: 1
 19087                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
 19088  007748  94F2               	bcf	242,2,c	;volatile
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
 19092  00774A  8AF2               	bsf	242,5,c	;volatile
 19093                           
 19094                           ; BSR set to: 1
 19095                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 19096  00774C  0E24               	movlw	low _TMR0_DefaultInterruptHandler
 19097  00774E  0100               	movlb	0	; () banked
 19098  007750  6F8C               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 19099  007752  0E7E               	movlw	high _TMR0_DefaultInterruptHandler
 19100  007754  6F8D               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19101  007756  ECE1  F03E         	call	_TMR0_SetInterruptHandler	;wreg free
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x94;
 19105  00775A  0E94               	movlw	148
 19106  00775C  6ED5               	movwf	213,c	;volatile
 19107                           
 19108                           ; BSR set to: 0
 19109  00775E  0012               	return		;funcret
 19110  007760                     __end_of_TMR0_Initialize:
 19111                           	callstack 0
 19112                           
 19113 ;; *************** function _TMR0_SetInterruptHandler *****************
 19114 ;; Defined at:
 19115 ;;		line 156 in file "mcc_generated_files/tmr0.c"
 19116 ;; Parameters:    Size  Location     Type
 19117 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
 19118 ;;		 -> Timing_TMR0_ISR(1), TMR0_DefaultInterruptHandler(1), 
 19119 ;; Auto vars:     Size  Location     Type
 19120 ;;		None
 19121 ;; Return value:  Size  Location     Type
 19122 ;;                  1    wreg      void 
 19123 ;; Registers used:
 19124 ;;		wreg, status,2, status,0
 19125 ;; Tracked objects:
 19126 ;;		On entry : 3F/0
 19127 ;;		On exit  : 3F/0
 19128 ;;		Unchanged: 3F/0
 19129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19130 ;;      Params:         0       2       0       0       0       0       0       0       0
 19131 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19132 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19133 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19134 ;;Total ram usage:        2 bytes
 19135 ;; Hardware stack levels used: 1
 19136 ;; Hardware stack levels required when called: 10
 19137 ;; This function calls:
 19138 ;;		Nothing
 19139 ;; This function is called by:
 19140 ;;		_TMR0_Initialize
 19141 ;;		_main
 19142 ;; This function uses a non-reentrant model
 19143 ;;
 19144                           
 19145                           	psect	text87
 19146  007DC2                     __ptext87:
 19147                           	callstack 0
 19148  007DC2                     _TMR0_SetInterruptHandler:
 19149                           	callstack 20
 19150                           
 19151                           ; BSR set to: 0
 19152                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;incstack = 0
 19156  007DC2  C08C  F1CB         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 19157  007DC6  C08D  F1CC         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 19158                           
 19159                           ; BSR set to: 0
 19160  007DCA  0012               	return		;funcret
 19161  007DCC                     __end_of_TMR0_SetInterruptHandler:
 19162                           	callstack 0
 19163                           
 19164 ;; *************** function _PIN_MANAGER_Initialize *****************
 19165 ;; Defined at:
 19166 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 19167 ;; Parameters:    Size  Location     Type
 19168 ;;		None
 19169 ;; Auto vars:     Size  Location     Type
 19170 ;;		None
 19171 ;; Return value:  Size  Location     Type
 19172 ;;                  1    wreg      void 
 19173 ;; Registers used:
 19174 ;;		wreg, status,2, status,0, cstack
 19175 ;; Tracked objects:
 19176 ;;		On entry : 0/0
 19177 ;;		On exit  : 3F/0
 19178 ;;		Unchanged: 0/0
 19179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19180 ;;      Params:         0       0       0       0       0       0       0       0       0
 19181 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19183 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19184 ;;Total ram usage:        0 bytes
 19185 ;; Hardware stack levels used: 1
 19186 ;; Hardware stack levels required when called: 11
 19187 ;; This function calls:
 19188 ;;		_IOCC2_SetInterruptHandler
 19189 ;; This function is called by:
 19190 ;;		_SYSTEM_Initialize
 19191 ;; This function uses a non-reentrant model
 19192 ;;
 19193                           
 19194                           	psect	text88
 19195  007662                     __ptext88:
 19196                           	callstack 0
 19197  007662                     _PIN_MANAGER_Initialize:
 19198                           	callstack 18
 19199                           
 19200                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;incstack = 0
 19204  007662  0E00               	movlw	0
 19205  007664  6E89               	movwf	137,c	;volatile
 19206                           
 19207                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x3E;
 19208  007666  0E3E               	movlw	62
 19209  007668  6E8A               	movwf	138,c	;volatile
 19210                           
 19211                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 19212  00766A  0E00               	movlw	0
 19213  00766C  6E8B               	movwf	139,c	;volatile
 19214                           
 19215                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x7F;
 19216  00766E  0E7F               	movlw	127
 19217  007670  6E92               	movwf	146,c	;volatile
 19218                           
 19219                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x00;
 19220  007672  0E00               	movlw	0
 19221  007674  6E93               	movwf	147,c	;volatile
 19222                           
 19223                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x87;
 19224  007676  0E87               	movlw	135
 19225  007678  6E94               	movwf	148,c	;volatile
 19226                           
 19227                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x80;
 19228  00767A  0E80               	movlw	128
 19229  00767C  010F               	movlb	15	; () banked
 19230  00767E  6F5D               	movwf	93,b	;volatile
 19231                           
 19232                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
 19233  007680  0E00               	movlw	0
 19234  007682  6F5C               	movwf	92,b	;volatile
 19235                           
 19236                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x2F;
 19237  007684  0E2F               	movlw	47
 19238  007686  6F5B               	movwf	91,b	;volatile
 19239                           
 19240                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 19241  007688  0E00               	movlw	0
 19242  00768A  6E85               	movwf	133,c	;volatile
 19243                           
 19244                           ; BSR set to: 15
 19245                           ;mcc_generated_files/pin_manager.c: 84:     INTCON2bits.nRBPU = 1;
 19246  00768C  8EF1               	bsf	241,7,c	;volatile
 19247                           
 19248                           ; BSR set to: 15
 19249                           ;mcc_generated_files/pin_manager.c: 92:     IOCCbits.IOCC2 = 1;
 19250  00768E  8487               	bsf	135,2,c	;volatile
 19251                           
 19252                           ; BSR set to: 15
 19253                           ;mcc_generated_files/pin_manager.c: 97:     IOCC2_SetInterruptHandler(IOCC2_DefaultInter
      +                          ruptHandler);
 19254  007690  0E26               	movlw	low _IOCC2_DefaultInterruptHandler
 19255  007692  0100               	movlb	0	; () banked
 19256  007694  6F8C               	movwf	IOCC2_SetInterruptHandler@InterruptHandler& (0+255),b
 19257  007696  0E7E               	movlw	high _IOCC2_DefaultInterruptHandler
 19258  007698  6F8D               	movwf	(IOCC2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19259  00769A  ECE6  F03E         	call	_IOCC2_SetInterruptHandler	;wreg free
 19260                           
 19261                           ; BSR set to: 0
 19262                           ;mcc_generated_files/pin_manager.c: 100:     INTCONbits.IOCIE = 1;
 19263  00769E  86F2               	bsf	242,3,c	;volatile
 19264                           
 19265                           ; BSR set to: 0
 19266  0076A0  0012               	return		;funcret
 19267  0076A2                     __end_of_PIN_MANAGER_Initialize:
 19268                           	callstack 0
 19269                           
 19270 ;; *************** function _IOCC2_SetInterruptHandler *****************
 19271 ;; Defined at:
 19272 ;;		line 132 in file "mcc_generated_files/pin_manager.c"
 19273 ;; Parameters:    Size  Location     Type
 19274 ;;  InterruptHan    2   44[BANK0 ] PTR FTN()void 
 19275 ;;		 -> Encoder_ISR(1), IOCC2_DefaultInterruptHandler(1), 
 19276 ;; Auto vars:     Size  Location     Type
 19277 ;;		None
 19278 ;; Return value:  Size  Location     Type
 19279 ;;                  1    wreg      void 
 19280 ;; Registers used:
 19281 ;;		wreg, status,2, status,0
 19282 ;; Tracked objects:
 19283 ;;		On entry : 3F/0
 19284 ;;		On exit  : 3F/0
 19285 ;;		Unchanged: 3F/0
 19286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19287 ;;      Params:         0       2       0       0       0       0       0       0       0
 19288 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19289 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19290 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19291 ;;Total ram usage:        2 bytes
 19292 ;; Hardware stack levels used: 1
 19293 ;; Hardware stack levels required when called: 10
 19294 ;; This function calls:
 19295 ;;		Nothing
 19296 ;; This function is called by:
 19297 ;;		_PIN_MANAGER_Initialize
 19298 ;;		_main
 19299 ;; This function uses a non-reentrant model
 19300 ;;
 19301                           
 19302                           	psect	text89
 19303  007DCC                     __ptext89:
 19304                           	callstack 0
 19305  007DCC                     _IOCC2_SetInterruptHandler:
 19306                           	callstack 18
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;mcc_generated_files/pin_manager.c: 133:     IOCC2_InterruptHandler = InterruptHandler;
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;incstack = 0
 19313  007DCC  C08C  F2FA         	movff	IOCC2_SetInterruptHandler@InterruptHandler,_IOCC2_InterruptHandler
 19314  007DD0  C08D  F2FB         	movff	IOCC2_SetInterruptHandler@InterruptHandler+1,_IOCC2_InterruptHandler+1
 19315                           
 19316                           ; BSR set to: 0
 19317  007DD4  0012               	return		;funcret
 19318  007DD6                     __end_of_IOCC2_SetInterruptHandler:
 19319                           	callstack 0
 19320                           
 19321 ;; *************** function _OSCILLATOR_Initialize *****************
 19322 ;; Defined at:
 19323 ;;		line 66 in file "mcc_generated_files/mcc.c"
 19324 ;; Parameters:    Size  Location     Type
 19325 ;;		None
 19326 ;; Auto vars:     Size  Location     Type
 19327 ;;		None
 19328 ;; Return value:  Size  Location     Type
 19329 ;;                  1    wreg      void 
 19330 ;; Registers used:
 19331 ;;		wreg, status,2
 19332 ;; Tracked objects:
 19333 ;;		On entry : 3F/0
 19334 ;;		On exit  : 3F/0
 19335 ;;		Unchanged: 3F/0
 19336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19337 ;;      Params:         0       0       0       0       0       0       0       0       0
 19338 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19340 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19341 ;;Total ram usage:        0 bytes
 19342 ;; Hardware stack levels used: 1
 19343 ;; Hardware stack levels required when called: 10
 19344 ;; This function calls:
 19345 ;;		Nothing
 19346 ;; This function is called by:
 19347 ;;		_SYSTEM_Initialize
 19348 ;; This function uses a non-reentrant model
 19349 ;;
 19350                           
 19351                           	psect	text90
 19352  007D20                     __ptext90:
 19353                           	callstack 0
 19354  007D20                     _OSCILLATOR_Initialize:
 19355                           	callstack 19
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x70;
 19359                           
 19360                           ; BSR set to: 0
 19361                           ;incstack = 0
 19362  007D20  0E70               	movlw	112
 19363  007D22  6ED3               	movwf	211,c	;volatile
 19364                           
 19365                           ;mcc_generated_files/mcc.c: 71:     OSCCON2 = 0x00;
 19366  007D24  0E00               	movlw	0
 19367  007D26  6ED2               	movwf	210,c	;volatile
 19368                           
 19369                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x80;
 19370  007D28  0E80               	movlw	128
 19371  007D2A  6E9B               	movwf	155,c	;volatile
 19372                           
 19373                           ;mcc_generated_files/mcc.c: 75:     ACTCON = 0x00;
 19374  007D2C  0E00               	movlw	0
 19375  007D2E  6EB5               	movwf	181,c	;volatile
 19376  007D30                     l629:
 19377                           
 19378                           ; BSR set to: 0
 19379                           ;mcc_generated_files/mcc.c: 77:     while(PLLRDY == 0)
 19380  007D30  BED2               	btfsc	4050,7,c	;volatile
 19381  007D32  0012               	return	
 19382  007D34  D7FD               	goto	l629
 19383  007D36                     __end_of_OSCILLATOR_Initialize:
 19384                           	callstack 0
 19385                           
 19386 ;; *************** function _INTERRUPT_Initialize *****************
 19387 ;; Defined at:
 19388 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 19389 ;; Parameters:    Size  Location     Type
 19390 ;;		None
 19391 ;; Auto vars:     Size  Location     Type
 19392 ;;		None
 19393 ;; Return value:  Size  Location     Type
 19394 ;;                  1    wreg      void 
 19395 ;; Registers used:
 19396 ;;		None
 19397 ;; Tracked objects:
 19398 ;;		On entry : 0/0
 19399 ;;		On exit  : 0/0
 19400 ;;		Unchanged: 0/0
 19401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19402 ;;      Params:         0       0       0       0       0       0       0       0       0
 19403 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19405 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19406 ;;Total ram usage:        0 bytes
 19407 ;; Hardware stack levels used: 1
 19408 ;; Hardware stack levels required when called: 10
 19409 ;; This function calls:
 19410 ;;		Nothing
 19411 ;; This function is called by:
 19412 ;;		_SYSTEM_Initialize
 19413 ;; This function uses a non-reentrant model
 19414 ;;
 19415                           
 19416                           	psect	text91
 19417  007E14                     __ptext91:
 19418                           	callstack 0
 19419  007E14                     _INTERRUPT_Initialize:
 19420                           	callstack 19
 19421                           
 19422                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;incstack = 0
 19426  007E14  9ED0               	bcf	208,7,c	;volatile
 19427  007E16  0012               	return		;funcret
 19428  007E18                     __end_of_INTERRUPT_Initialize:
 19429                           	callstack 0
 19430                           
 19431 ;; *************** function _CCP2_Initialize *****************
 19432 ;; Defined at:
 19433 ;;		line 49 in file "mcc_generated_files/ccp2.c"
 19434 ;; Parameters:    Size  Location     Type
 19435 ;;		None
 19436 ;; Auto vars:     Size  Location     Type
 19437 ;;		None
 19438 ;; Return value:  Size  Location     Type
 19439 ;;                  1    wreg      void 
 19440 ;; Registers used:
 19441 ;;		wreg, status,2
 19442 ;; Tracked objects:
 19443 ;;		On entry : 3F/0
 19444 ;;		On exit  : 3F/0
 19445 ;;		Unchanged: 3F/0
 19446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19447 ;;      Params:         0       0       0       0       0       0       0       0       0
 19448 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19449 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19450 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19451 ;;Total ram usage:        0 bytes
 19452 ;; Hardware stack levels used: 1
 19453 ;; Hardware stack levels required when called: 10
 19454 ;; This function calls:
 19455 ;;		Nothing
 19456 ;; This function is called by:
 19457 ;;		_SYSTEM_Initialize
 19458 ;; This function uses a non-reentrant model
 19459 ;;
 19460                           
 19461                           	psect	text92
 19462  007D68                     __ptext92:
 19463                           	callstack 0
 19464  007D68                     _CCP2_Initialize:
 19465                           	callstack 19
 19466                           
 19467                           ; BSR set to: 0
 19468                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
 19469                           
 19470                           ;incstack = 0
 19471  007D68  0E00               	movlw	0
 19472  007D6A  6E97               	movwf	151,c	;volatile
 19473                           
 19474                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
 19475  007D6C  0E00               	movlw	0
 19476  007D6E  6E90               	movwf	144,c	;volatile
 19477                           
 19478                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
 19479  007D70  0E00               	movlw	0
 19480  007D72  6E91               	movwf	145,c	;volatile
 19481                           
 19482                           ; BSR set to: 0
 19483  007D74  0012               	return		;funcret
 19484  007D76                     __end_of_CCP2_Initialize:
 19485                           	callstack 0
 19486                           
 19487 ;; *************** function _ADC_Initialize *****************
 19488 ;; Defined at:
 19489 ;;		line 62 in file "mcc_generated_files/adc.c"
 19490 ;; Parameters:    Size  Location     Type
 19491 ;;		None
 19492 ;; Auto vars:     Size  Location     Type
 19493 ;;		None
 19494 ;; Return value:  Size  Location     Type
 19495 ;;                  1    wreg      void 
 19496 ;; Registers used:
 19497 ;;		wreg, status,2
 19498 ;; Tracked objects:
 19499 ;;		On entry : 3F/1
 19500 ;;		On exit  : 3F/1
 19501 ;;		Unchanged: 3F/0
 19502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19503 ;;      Params:         0       0       0       0       0       0       0       0       0
 19504 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19505 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19506 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19507 ;;Total ram usage:        0 bytes
 19508 ;; Hardware stack levels used: 1
 19509 ;; Hardware stack levels required when called: 10
 19510 ;; This function calls:
 19511 ;;		Nothing
 19512 ;; This function is called by:
 19513 ;;		_SYSTEM_Initialize
 19514 ;; This function uses a non-reentrant model
 19515 ;;
 19516                           
 19517                           	psect	text93
 19518  007D36                     __ptext93:
 19519                           	callstack 0
 19520  007D36                     _ADC_Initialize:
 19521                           	callstack 19
 19522                           
 19523                           ; BSR set to: 1
 19524                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;incstack = 0
 19528  007D36  0E00               	movlw	0
 19529  007D38  6EC1               	movwf	193,c	;volatile
 19530                           
 19531                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x06;
 19532  007D3A  0E06               	movlw	6
 19533  007D3C  6EC0               	movwf	192,c	;volatile
 19534                           
 19535                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
 19536  007D3E  0E00               	movlw	0
 19537  007D40  6EC3               	movwf	195,c	;volatile
 19538                           
 19539                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 19540  007D42  0E00               	movlw	0
 19541  007D44  6EC4               	movwf	196,c	;volatile
 19542                           
 19543                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
 19544  007D46  0E01               	movlw	1
 19545  007D48  6EC2               	movwf	194,c	;volatile
 19546                           
 19547                           ; BSR set to: 1
 19548  007D4A  0012               	return		;funcret
 19549  007D4C                     __end_of_ADC_Initialize:
 19550                           	callstack 0
 19551                           
 19552 ;; *************** function _MCC_USB_WRITE *****************
 19553 ;; Defined at:
 19554 ;;		line 121 in file "CommandHandler.c"
 19555 ;; Parameters:    Size  Location     Type
 19556 ;;  str             2   47[BANK0 ] PTR unsigned char 
 19557 ;;		 -> writeBuffer(32), 
 19558 ;;  nBytes          2   49[BANK0 ] int 
 19559 ;; Auto vars:     Size  Location     Type
 19560 ;;		None
 19561 ;; Return value:  Size  Location     Type
 19562 ;;                  1    wreg      void 
 19563 ;; Registers used:
 19564 ;;		wreg, status,2, status,0, cstack
 19565 ;; Tracked objects:
 19566 ;;		On entry : 3F/0
 19567 ;;		On exit  : 3F/0
 19568 ;;		Unchanged: 0/0
 19569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19570 ;;      Params:         0       4       0       0       0       0       0       0       0
 19571 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19572 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19573 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19574 ;;Total ram usage:        4 bytes
 19575 ;; Hardware stack levels used: 1
 19576 ;; Hardware stack levels required when called: 11
 19577 ;; This function calls:
 19578 ;;		_putUSBUSART
 19579 ;; This function is called by:
 19580 ;;		_main
 19581 ;; This function uses a non-reentrant model
 19582 ;;
 19583                           
 19584                           	psect	text94
 19585  007B68                     __ptext94:
 19586                           	callstack 0
 19587  007B68                     _MCC_USB_WRITE:
 19588                           	callstack 19
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;CommandHandler.c: 122:    if( USBDeviceState < CONFIGURED_STATE )
 19592                           
 19593                           ; BSR set to: 1
 19594                           ;incstack = 0
 19595  007B68  0E20               	movlw	32
 19596  007B6A  605C               	cpfslt	_USBDeviceState^0,c
 19597  007B6C  D001               	goto	l1457
 19598  007B6E  0012               	return	
 19599  007B70                     l1457:
 19600                           
 19601                           ; BSR set to: 0
 19602                           ;CommandHandler.c: 126:     if( UCONbits.SUSPND== 1 )
 19603  007B70  B260               	btfsc	96,1,c	;volatile
 19604  007B72  0012               	return	
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;CommandHandler.c: 130:    if( (cdc_trf_state == 0) == 1)
 19608  007B74  51C7               	movf	_cdc_trf_state& (0+255),w,b
 19609  007B76  A4D8               	btfss	status,2,c
 19610  007B78  0012               	return	
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;CommandHandler.c: 131:     {;CommandHandler.c: 132:       putUSBUSART(str,nBytes);
 19614  007B7A  C08F  F08C         	movff	MCC_USB_WRITE@str,putUSBUSART@data
 19615  007B7E  C090  F08D         	movff	MCC_USB_WRITE@str+1,putUSBUSART@data+1
 19616  007B82  C091  F08E         	movff	MCC_USB_WRITE@nBytes,putUSBUSART@length
 19617  007B86  ECC6  F03D         	call	_putUSBUSART	;wreg free
 19618                           
 19619                           ; BSR set to: 0
 19620  007B8A  0012               	return		;funcret
 19621  007B8C                     __end_of_MCC_USB_WRITE:
 19622                           	callstack 0
 19623                           
 19624 ;; *************** function _putUSBUSART *****************
 19625 ;; Defined at:
 19626 ;;		line 574 in file "mcc_generated_files/usb/usb_device_cdc.c"
 19627 ;; Parameters:    Size  Location     Type
 19628 ;;  data            2   44[BANK0 ] PTR unsigned char 
 19629 ;;		 -> writeBuffer(32), 
 19630 ;;  length          1   46[BANK0 ] unsigned char 
 19631 ;; Auto vars:     Size  Location     Type
 19632 ;;		None
 19633 ;; Return value:  Size  Location     Type
 19634 ;;                  1    wreg      void 
 19635 ;; Registers used:
 19636 ;;		wreg, status,2, status,0
 19637 ;; Tracked objects:
 19638 ;;		On entry : 3F/0
 19639 ;;		On exit  : 3F/0
 19640 ;;		Unchanged: 0/0
 19641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19642 ;;      Params:         0       3       0       0       0       0       0       0       0
 19643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19645 ;;      Totals:         0       3       0       0       0       0       0       0       0
 19646 ;;Total ram usage:        3 bytes
 19647 ;; Hardware stack levels used: 1
 19648 ;; Hardware stack levels required when called: 10
 19649 ;; This function calls:
 19650 ;;		Nothing
 19651 ;; This function is called by:
 19652 ;;		_MCC_USB_WRITE
 19653 ;; This function uses a non-reentrant model
 19654 ;;
 19655                           
 19656                           	psect	text95
 19657  007B8C                     __ptext95:
 19658                           	callstack 0
 19659  007B8C                     _putUSBUSART:
 19660                           	callstack 19
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;mcc_generated_files/usb/usb_device_cdc.c: 574: void putUSBUSART(uint8_t *data, uint8_t 
      +                          length);mcc_generated_files/usb/usb_device_cdc.c: 575: {;mcc_generated_files/usb/usb_dev
      +                          ice_cdc.c: 599:     {PIE3bits.USBIE = 0;};
 19664                           
 19665                           ; BSR set to: 0
 19666                           ;incstack = 0
 19667  007B8C  94A3               	bcf	163,2,c	;volatile
 19668                           
 19669                           ; BSR set to: 0
 19670                           ;mcc_generated_files/usb/usb_device_cdc.c: 600:     if(cdc_trf_state == 0)
 19671  007B8E  51C7               	movf	_cdc_trf_state& (0+255),w,b
 19672  007B90  A4D8               	btfss	status,2,c
 19673  007B92  D00C               	goto	l11430
 19674                           
 19675                           ; BSR set to: 0
 19676                           ;mcc_generated_files/usb/usb_device_cdc.c: 601:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 602:         { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
 19677  007B94  C08C  F1BC         	movff	putUSBUSART@data,_pCDCSrc
 19678  007B98  C08D  F1BD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 19679                           
 19680                           ; BSR set to: 0
 19681  007B9C  C08E  F0C6         	movff	putUSBUSART@length,_cdc_tx_len
 19682                           
 19683                           ; BSR set to: 0
 19684  007BA0  0E01               	movlw	1
 19685  007BA2  0101               	movlb	1	; () banked
 19686  007BA4  6FE3               	movwf	_cdc_mem_type& (0+255),b
 19687                           
 19688                           ; BSR set to: 1
 19689  007BA6  0E01               	movlw	1
 19690  007BA8  0100               	movlb	0	; () banked
 19691  007BAA  6FC7               	movwf	_cdc_trf_state& (0+255),b
 19692  007BAC                     l11430:
 19693                           
 19694                           ; BSR set to: 0
 19695                           ;mcc_generated_files/usb/usb_device_cdc.c: 604:     {PIE3bits.USBIE = 1;};
 19696  007BAC  84A3               	bsf	163,2,c	;volatile
 19697                           
 19698                           ; BSR set to: 0
 19699  007BAE  0012               	return		;funcret
 19700  007BB0                     __end_of_putUSBUSART:
 19701                           	callstack 0
 19702                           
 19703 ;; *************** function _Fila_Init *****************
 19704 ;; Defined at:
 19705 ;;		line 12 in file "fila.c"
 19706 ;; Parameters:    Size  Location     Type
 19707 ;;		None
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;		None
 19710 ;; Return value:  Size  Location     Type
 19711 ;;                  1    wreg      void 
 19712 ;; Registers used:
 19713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19714 ;; Tracked objects:
 19715 ;;		On entry : 3F/0
 19716 ;;		On exit  : 3F/0
 19717 ;;		Unchanged: 0/0
 19718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19719 ;;      Params:         0       0       0       0       0       0       0       0       0
 19720 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19721 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19722 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19723 ;;Total ram usage:        0 bytes
 19724 ;; Hardware stack levels used: 1
 19725 ;; Hardware stack levels required when called: 11
 19726 ;; This function calls:
 19727 ;;		_memset
 19728 ;; This function is called by:
 19729 ;;		_main
 19730 ;; This function uses a non-reentrant model
 19731 ;;
 19732                           
 19733                           	psect	text96
 19734  007A62                     __ptext96:
 19735                           	callstack 0
 19736  007A62                     _Fila_Init:
 19737                           	callstack 19
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;fila.c: 13:    cabeza=0;
 19741                           
 19742                           ; BSR set to: 0
 19743                           ;incstack = 0
 19744  007A62  0E00               	movlw	0
 19745  007A64  0101               	movlb	1	; () banked
 19746  007A66  6FDF               	movwf	_cabeza& (0+255),b
 19747                           
 19748                           ;fila.c: 14:    cola=0;
 19749  007A68  0E00               	movlw	0
 19750  007A6A  6FDE               	movwf	_cola& (0+255),b
 19751                           
 19752                           ;fila.c: 15:    largo=0;
 19753  007A6C  0E00               	movlw	0
 19754  007A6E  0100               	movlb	0	; () banked
 19755  007A70  6FC4               	movwf	_largo& (0+255),b
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;fila.c: 16:    memset(fila,0,sizeof(char)*32*10);
 19759  007A72  0E80               	movlw	low _fila
 19760  007A74  6F8C               	movwf	memset@dest& (0+255),b
 19761  007A76  0E05               	movlw	high _fila
 19762  007A78  6F8D               	movwf	(memset@dest+1)& (0+255),b
 19763  007A7A  0E00               	movlw	0
 19764  007A7C  6F8F               	movwf	(memset@c+1)& (0+255),b
 19765  007A7E  0E00               	movlw	0
 19766  007A80  6F8E               	movwf	memset@c& (0+255),b
 19767  007A82  0E01               	movlw	1
 19768  007A84  6F91               	movwf	(memset@n+1)& (0+255),b
 19769  007A86  0E40               	movlw	64
 19770  007A88  6F90               	movwf	memset@n& (0+255),b
 19771  007A8A  ECFD  F025         	call	_memset	;wreg free
 19772                           
 19773                           ; BSR set to: 0
 19774  007A8E  0012               	return		;funcret
 19775  007A90                     __end_of_Fila_Init:
 19776                           	callstack 0
 19777                           
 19778 ;; *************** function _memset *****************
 19779 ;; Defined at:
 19780 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 19781 ;; Parameters:    Size  Location     Type
 19782 ;;  dest            2   44[BANK0 ] PTR void 
 19783 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), readBuffer(32), 
 19784 ;;		 -> USBCommandFetch@readTokens(60), fila(320), writeBuffer(32), USBAlternateInterface(2), 
 19785 ;;		 -> BDT(48), UEP1(1), 
 19786 ;;  c               2   46[BANK0 ] int 
 19787 ;;  n               2   48[BANK0 ] unsigned int 
 19788 ;; Auto vars:     Size  Location     Type
 19789 ;;  s               2   54[BANK0 ] PTR unsigned char 
 19790 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), readBuffer(32), 
 19791 ;;		 -> USBCommandFetch@readTokens(60), fila(320), writeBuffer(32), USBAlternateInterface(2), 
 19792 ;;		 -> BDT(48), UEP1(1), 
 19793 ;;  k               2   52[BANK0 ] unsigned int 
 19794 ;; Return value:  Size  Location     Type
 19795 ;;                  2   44[BANK0 ] PTR void 
 19796 ;; Registers used:
 19797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19798 ;; Tracked objects:
 19799 ;;		On entry : 3F/0
 19800 ;;		On exit  : 3F/0
 19801 ;;		Unchanged: 0/0
 19802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19803 ;;      Params:         0       6       0       0       0       0       0       0       0
 19804 ;;      Locals:         0       4       0       0       0       0       0       0       0
 19805 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19806 ;;      Totals:         0      12       0       0       0       0       0       0       0
 19807 ;;Total ram usage:       12 bytes
 19808 ;; Hardware stack levels used: 1
 19809 ;; Hardware stack levels required when called: 10
 19810 ;; This function calls:
 19811 ;;		Nothing
 19812 ;; This function is called by:
 19813 ;;		_USBDeviceInit
 19814 ;;		_main
 19815 ;;		_Fila_Init
 19816 ;;		_USBCommandFetch
 19817 ;;		_executeCommand
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           	psect	text97
 19822  004BFA                     __ptext97:
 19823                           	callstack 0
 19824  004BFA                     _memset:
 19825                           	callstack 20
 19826                           
 19827                           ; BSR set to: 0
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;incstack = 0
 19831  004BFA  C08C  F096         	movff	memset@dest,memset@s
 19832  004BFE  C08D  F097         	movff	memset@dest+1,memset@s+1
 19833  004C02  5190               	movf	memset@n& (0+255),w,b
 19834  004C04  1191               	iorwf	(memset@n+1)& (0+255),w,b
 19835  004C06  B4D8               	btfsc	status,2,c
 19836  004C08  0012               	return	
 19837                           
 19838                           ; BSR set to: 0
 19839  004C0A  C096  FFD9         	movff	memset@s,fsr2l
 19840  004C0E  C097  FFDA         	movff	memset@s+1,fsr2h
 19841  004C12  C08E  FFDF         	movff	memset@c,indf2
 19842                           
 19843                           ; BSR set to: 0
 19844  004C16  5190               	movf	memset@n& (0+255),w,b
 19845  004C18  2596               	addwf	memset@s& (0+255),w,b
 19846  004C1A  6F92               	movwf	??_memset& (0+255),b
 19847  004C1C  5191               	movf	(memset@n+1)& (0+255),w,b
 19848  004C1E  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19849  004C20  6F93               	movwf	(??_memset+1)& (0+255),b
 19850  004C22  0EFF               	movlw	255
 19851  004C24  2592               	addwf	??_memset& (0+255),w,b
 19852  004C26  6ED9               	movwf	fsr2l,c
 19853  004C28  0EFF               	movlw	255
 19854  004C2A  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19855  004C2C  6EDA               	movwf	fsr2h,c
 19856  004C2E  C08E  FFDF         	movff	memset@c,indf2
 19857  004C32  5191               	movf	(memset@n+1)& (0+255),w,b
 19858  004C34  E104               	bnz	l14242
 19859  004C36  0E03               	movlw	3
 19860  004C38  5D90               	subwf	memset@n& (0+255),w,b
 19861  004C3A  A0D8               	btfss	status,0,c
 19862  004C3C  0012               	return	
 19863  004C3E                     l14242:
 19864                           
 19865                           ; BSR set to: 0
 19866  004C3E  EE20 F001          	lfsr	2,1
 19867  004C42  5196               	movf	memset@s& (0+255),w,b
 19868  004C44  26D9               	addwf	fsr2l,f,c
 19869  004C46  5197               	movf	(memset@s+1)& (0+255),w,b
 19870  004C48  22DA               	addwfc	fsr2h,f,c
 19871  004C4A  C08E  FFDF         	movff	memset@c,indf2
 19872  004C4E  EE20 F002          	lfsr	2,2
 19873  004C52  5196               	movf	memset@s& (0+255),w,b
 19874  004C54  26D9               	addwf	fsr2l,f,c
 19875  004C56  5197               	movf	(memset@s+1)& (0+255),w,b
 19876  004C58  22DA               	addwfc	fsr2h,f,c
 19877  004C5A  C08E  FFDF         	movff	memset@c,indf2
 19878  004C5E  5190               	movf	memset@n& (0+255),w,b
 19879  004C60  2596               	addwf	memset@s& (0+255),w,b
 19880  004C62  6F92               	movwf	??_memset& (0+255),b
 19881  004C64  5191               	movf	(memset@n+1)& (0+255),w,b
 19882  004C66  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19883  004C68  6F93               	movwf	(??_memset+1)& (0+255),b
 19884  004C6A  0EFE               	movlw	254
 19885  004C6C  2592               	addwf	??_memset& (0+255),w,b
 19886  004C6E  6ED9               	movwf	fsr2l,c
 19887  004C70  0EFF               	movlw	255
 19888  004C72  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19889  004C74  6EDA               	movwf	fsr2h,c
 19890  004C76  C08E  FFDF         	movff	memset@c,indf2
 19891  004C7A  5190               	movf	memset@n& (0+255),w,b
 19892  004C7C  2596               	addwf	memset@s& (0+255),w,b
 19893  004C7E  6F92               	movwf	??_memset& (0+255),b
 19894  004C80  5191               	movf	(memset@n+1)& (0+255),w,b
 19895  004C82  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19896  004C84  6F93               	movwf	(??_memset+1)& (0+255),b
 19897  004C86  0EFD               	movlw	253
 19898  004C88  2592               	addwf	??_memset& (0+255),w,b
 19899  004C8A  6ED9               	movwf	fsr2l,c
 19900  004C8C  0EFF               	movlw	255
 19901  004C8E  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19902  004C90  6EDA               	movwf	fsr2h,c
 19903  004C92  C08E  FFDF         	movff	memset@c,indf2
 19904                           
 19905                           ; BSR set to: 0
 19906  004C96  5191               	movf	(memset@n+1)& (0+255),w,b
 19907  004C98  E104               	bnz	l14248
 19908  004C9A  0E07               	movlw	7
 19909  004C9C  5D90               	subwf	memset@n& (0+255),w,b
 19910  004C9E  A0D8               	btfss	status,0,c
 19911  004CA0  0012               	return	
 19912  004CA2                     l14248:
 19913                           
 19914                           ; BSR set to: 0
 19915  004CA2  EE20 F003          	lfsr	2,3
 19916  004CA6  5196               	movf	memset@s& (0+255),w,b
 19917  004CA8  26D9               	addwf	fsr2l,f,c
 19918  004CAA  5197               	movf	(memset@s+1)& (0+255),w,b
 19919  004CAC  22DA               	addwfc	fsr2h,f,c
 19920  004CAE  C08E  FFDF         	movff	memset@c,indf2
 19921  004CB2  5190               	movf	memset@n& (0+255),w,b
 19922  004CB4  2596               	addwf	memset@s& (0+255),w,b
 19923  004CB6  6F92               	movwf	??_memset& (0+255),b
 19924  004CB8  5191               	movf	(memset@n+1)& (0+255),w,b
 19925  004CBA  2197               	addwfc	(memset@s+1)& (0+255),w,b
 19926  004CBC  6F93               	movwf	(??_memset+1)& (0+255),b
 19927  004CBE  0EFC               	movlw	252
 19928  004CC0  2592               	addwf	??_memset& (0+255),w,b
 19929  004CC2  6ED9               	movwf	fsr2l,c
 19930  004CC4  0EFF               	movlw	255
 19931  004CC6  2193               	addwfc	(??_memset+1)& (0+255),w,b
 19932  004CC8  6EDA               	movwf	fsr2h,c
 19933  004CCA  C08E  FFDF         	movff	memset@c,indf2
 19934                           
 19935                           ; BSR set to: 0
 19936  004CCE  5191               	movf	(memset@n+1)& (0+255),w,b
 19937  004CD0  E104               	bnz	l14254
 19938  004CD2  0E09               	movlw	9
 19939  004CD4  5D90               	subwf	memset@n& (0+255),w,b
 19940  004CD6  A0D8               	btfss	status,0,c
 19941  004CD8  0012               	return	
 19942  004CDA                     l14254:
 19943                           
 19944                           ; BSR set to: 0
 19945  004CDA  C096  F092         	movff	memset@s,??_memset
 19946  004CDE  C097  F093         	movff	memset@s+1,??_memset+1
 19947  004CE2  1F92               	comf	??_memset& (0+255),f,b
 19948  004CE4  1F93               	comf	(??_memset+1)& (0+255),f,b
 19949  004CE6  4B92               	infsnz	??_memset& (0+255),f,b
 19950  004CE8  2B93               	incf	(??_memset+1)& (0+255),f,b
 19951  004CEA  0E03               	movlw	3
 19952  004CEC  1592               	andwf	??_memset& (0+255),w,b
 19953  004CEE  6F94               	movwf	memset@k& (0+255),b
 19954  004CF0  6B95               	clrf	(memset@k+1)& (0+255),b
 19955  004CF2  5194               	movf	memset@k& (0+255),w,b
 19956  004CF4  2796               	addwf	memset@s& (0+255),f,b
 19957  004CF6  5195               	movf	(memset@k+1)& (0+255),w,b
 19958  004CF8  2397               	addwfc	(memset@s+1)& (0+255),f,b
 19959  004CFA  5194               	movf	memset@k& (0+255),w,b
 19960  004CFC  5F90               	subwf	memset@n& (0+255),f,b
 19961  004CFE  5195               	movf	(memset@k+1)& (0+255),w,b
 19962  004D00  5B91               	subwfb	(memset@n+1)& (0+255),f,b
 19963  004D02  0EFC               	movlw	252
 19964  004D04  1790               	andwf	memset@n& (0+255),f,b
 19965  004D06  0EFF               	movlw	255
 19966  004D08  1791               	andwf	(memset@n+1)& (0+255),f,b
 19967  004D0A  D00B               	goto	l14262
 19968  004D0C                     l14256:
 19969                           
 19970                           ; BSR set to: 0
 19971  004D0C  C096  FFD9         	movff	memset@s,fsr2l
 19972  004D10  C097  FFDA         	movff	memset@s+1,fsr2h
 19973  004D14  C08E  FFDF         	movff	memset@c,indf2
 19974                           
 19975                           ; BSR set to: 0
 19976  004D18  0790               	decf	memset@n& (0+255),f,b
 19977  004D1A  A0D8               	btfss	status,0,c
 19978  004D1C  0791               	decf	(memset@n+1)& (0+255),f,b
 19979                           
 19980                           ; BSR set to: 0
 19981  004D1E  4B96               	infsnz	memset@s& (0+255),f,b
 19982  004D20  2B97               	incf	(memset@s+1)& (0+255),f,b
 19983  004D22                     l14262:
 19984                           
 19985                           ; BSR set to: 0
 19986  004D22  5190               	movf	memset@n& (0+255),w,b
 19987  004D24  1191               	iorwf	(memset@n+1)& (0+255),w,b
 19988  004D26  B4D8               	btfsc	status,2,c
 19989  004D28  0012               	return	
 19990  004D2A  D7F0               	goto	l14256
 19991  004D2C                     __end_of_memset:
 19992                           	callstack 0
 19993                           
 19994 ;; *************** function _Encoder_Init *****************
 19995 ;; Defined at:
 19996 ;;		line 103 in file "encoder.c"
 19997 ;; Parameters:    Size  Location     Type
 19998 ;;		None
 19999 ;; Auto vars:     Size  Location     Type
 20000 ;;		None
 20001 ;; Return value:  Size  Location     Type
 20002 ;;                  1    wreg      void 
 20003 ;; Registers used:
 20004 ;;		None
 20005 ;; Tracked objects:
 20006 ;;		On entry : 3F/1
 20007 ;;		On exit  : 3F/1
 20008 ;;		Unchanged: 3F/0
 20009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20010 ;;      Params:         0       0       0       0       0       0       0       0       0
 20011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20013 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20014 ;;Total ram usage:        0 bytes
 20015 ;; Hardware stack levels used: 1
 20016 ;; Hardware stack levels required when called: 10
 20017 ;; This function calls:
 20018 ;;		Nothing
 20019 ;; This function is called by:
 20020 ;;		_main
 20021 ;; This function uses a non-reentrant model
 20022 ;;
 20023                           
 20024                           	psect	text98
 20025  007E1E                     __ptext98:
 20026                           	callstack 0
 20027  007E1E                     _Encoder_Init:
 20028                           	callstack 20
 20029                           
 20030                           ; BSR set to: 1
 20031                           
 20032                           ; BSR set to: 1
 20033                           ;encoder.c: 105:    return;
 20034                           
 20035                           ; BSR set to: 0
 20036                           ;incstack = 0
 20037  007E1E  0012               	return		;funcret
 20038  007E20                     __end_of_Encoder_Init:
 20039                           	callstack 0
 20040                           
 20041 ;; *************** function _CDCTxService *****************
 20042 ;; Defined at:
 20043 ;;		line 854 in file "mcc_generated_files/usb/usb_device_cdc.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;		None
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;  byte_to_send    1   54[BANK0 ] unsigned char 
 20048 ;;  i               1   53[BANK0 ] unsigned char 
 20049 ;; Return value:  Size  Location     Type
 20050 ;;                  1    wreg      void 
 20051 ;; Registers used:
 20052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20053 ;; Tracked objects:
 20054 ;;		On entry : 3F/0
 20055 ;;		On exit  : 3E/0
 20056 ;;		Unchanged: 0/0
 20057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20058 ;;      Params:         0       0       0       0       0       0       0       0       0
 20059 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20060 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20061 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20062 ;;Total ram usage:        2 bytes
 20063 ;; Hardware stack levels used: 1
 20064 ;; Hardware stack levels required when called: 11
 20065 ;; This function calls:
 20066 ;;		_USBTransferOnePacket
 20067 ;; This function is called by:
 20068 ;;		_main
 20069 ;; This function uses a non-reentrant model
 20070 ;;
 20071                           
 20072                           	psect	text99
 20073  00530A                     __ptext99:
 20074                           	callstack 0
 20075  00530A                     _CDCTxService:
 20076                           	callstack 19
 20077                           
 20078                           ; BSR set to: 0
 20079                           ;mcc_generated_files/usb/usb_device_cdc.c: 856:     uint8_t byte_to_send;;mcc_generated_
      +                          files/usb/usb_device_cdc.c: 857:     uint8_t i;;mcc_generated_files/usb/usb_device_cdc.c
      +                          : 859:     {PIE3bits.USBIE = 0;};
 20080                           
 20081                           ; BSR set to: 1
 20082                           ;incstack = 0
 20083  00530A  94A3               	bcf	163,2,c	;volatile
 20084                           
 20085                           ; BSR set to: 0
 20086                           ;mcc_generated_files/usb/usb_device_cdc.c: 861:     {};;mcc_generated_files/usb/usb_devi
      +                          ce_cdc.c: 863:     if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCDataInHan
      +                          dle & 0x80) != 0x00)))
 20087  00530C  0101               	movlb	1	; () banked
 20088  00530E  51D3               	movf	_CDCDataInHandle& (0+255),w,b
 20089  005310  11D4               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 20090  005312  B4D8               	btfsc	status,2,c
 20091  005314  D008               	goto	l15316
 20092                           
 20093                           ; BSR set to: 1
 20094  005316  C1D3  FFD9         	movff	_CDCDataInHandle,fsr2l
 20095  00531A  C1D4  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 20096  00531E  AEDF               	btfss	indf2,7,c
 20097  005320  D002               	goto	l15316
 20098                           
 20099                           ; BSR set to: 1
 20100                           ;mcc_generated_files/usb/usb_device_cdc.c: 864:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 865:         {PIE3bits.USBIE = 1;};
 20101  005322  84A3               	bsf	163,2,c	;volatile
 20102                           
 20103                           ;mcc_generated_files/usb/usb_device_cdc.c: 866:         return;
 20104  005324  0012               	return	
 20105  005326                     l15316:
 20106                           
 20107                           ; BSR set to: 1
 20108                           ;mcc_generated_files/usb/usb_device_cdc.c: 874:     if(cdc_trf_state == 3)
 20109  005326  0E03               	movlw	3
 20110  005328  0100               	movlb	0	; () banked
 20111  00532A  19C7               	xorwf	_cdc_trf_state& (0+255),w,b
 20112  00532C  A4D8               	btfss	status,2,c
 20113  00532E  D002               	goto	l528
 20114                           
 20115                           ; BSR set to: 0
 20116                           ;mcc_generated_files/usb/usb_device_cdc.c: 875:         cdc_trf_state = 0;
 20117  005330  0E00               	movlw	0
 20118  005332  6FC7               	movwf	_cdc_trf_state& (0+255),b
 20119  005334                     l528:
 20120                           
 20121                           ; BSR set to: 0
 20122                           ;mcc_generated_files/usb/usb_device_cdc.c: 880:     if(cdc_trf_state == 0)
 20123  005334  51C7               	movf	_cdc_trf_state& (0+255),w,b
 20124  005336  A4D8               	btfss	status,2,c
 20125  005338  D002               	goto	l15322
 20126                           
 20127                           ; BSR set to: 0
 20128                           ;mcc_generated_files/usb/usb_device_cdc.c: 881:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 882:         {PIE3bits.USBIE = 1;};
 20129  00533A  84A3               	bsf	163,2,c	;volatile
 20130                           
 20131                           ;mcc_generated_files/usb/usb_device_cdc.c: 883:         return;
 20132  00533C  0012               	return	
 20133  00533E                     l15322:
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;mcc_generated_files/usb/usb_device_cdc.c: 889:     if(cdc_trf_state == 2)
 20137  00533E  0E02               	movlw	2
 20138  005340  19C7               	xorwf	_cdc_trf_state& (0+255),w,b
 20139  005342  A4D8               	btfss	status,2,c
 20140  005344  D012               	goto	l15328
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;mcc_generated_files/usb/usb_device_cdc.c: 890:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 891:         CDCDataInHandle = USBTransferOnePacket(2,1,((void*)0),0);
 20144  005346  0E01               	movlw	1
 20145  005348  6F8C               	movwf	USBTransferOnePacket@dir& (0+255),b
 20146  00534A  0E00               	movlw	0
 20147  00534C  6F8D               	movwf	USBTransferOnePacket@data& (0+255),b
 20148  00534E  0E00               	movlw	0
 20149  005350  6F8E               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20150  005352  0E00               	movlw	0
 20151  005354  6F8F               	movwf	USBTransferOnePacket@len& (0+255),b
 20152  005356  0E02               	movlw	2
 20153  005358  ECA8  F02B         	call	_USBTransferOnePacket
 20154  00535C  C08C  F1D3         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 20155  005360  C08D  F1D4         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 20156                           
 20157                           ; BSR set to: 0
 20158                           ;mcc_generated_files/usb/usb_device_cdc.c: 893:         cdc_trf_state = 3;
 20159  005364  0E03               	movlw	3
 20160  005366  6FC7               	movwf	_cdc_trf_state& (0+255),b
 20161                           
 20162                           ;mcc_generated_files/usb/usb_device_cdc.c: 894:     }
 20163  005368  D05E               	goto	l15372
 20164  00536A                     l15328:
 20165                           
 20166                           ; BSR set to: 0
 20167  00536A  05C7               	decf	_cdc_trf_state& (0+255),w,b
 20168  00536C  A4D8               	btfss	status,2,c
 20169  00536E  D05B               	goto	l15372
 20170                           
 20171                           ; BSR set to: 0
 20172                           ;mcc_generated_files/usb/usb_device_cdc.c: 896:     {;mcc_generated_files/usb/usb_device
      +                          _cdc.c: 900:      if(cdc_tx_len > sizeof(cdc_data_tx))
 20173  005370  0E40               	movlw	64
 20174  005372  65C6               	cpfsgt	_cdc_tx_len& (0+255),b
 20175  005374  D003               	goto	l533
 20176                           
 20177                           ; BSR set to: 0
 20178                           ;mcc_generated_files/usb/usb_device_cdc.c: 901:          byte_to_send = sizeof(cdc_data_
      +                          tx);
 20179  005376  0E40               	movlw	64
 20180  005378  6F96               	movwf	CDCTxService@byte_to_send& (0+255),b
 20181  00537A  D002               	goto	l15334
 20182  00537C                     l533:
 20183                           
 20184                           ; BSR set to: 0
 20185                           ;mcc_generated_files/usb/usb_device_cdc.c: 903:          byte_to_send = cdc_tx_len;
 20186  00537C  C0C6  F096         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 20187  005380                     l15334:
 20188                           
 20189                           ; BSR set to: 0
 20190                           ;mcc_generated_files/usb/usb_device_cdc.c: 908:      cdc_tx_len = cdc_tx_len - byte_to_s
      +                          end;
 20191  005380  5196               	movf	CDCTxService@byte_to_send& (0+255),w,b
 20192  005382  5DC6               	subwf	_cdc_tx_len& (0+255),w,b
 20193  005384  6FC6               	movwf	_cdc_tx_len& (0+255),b
 20194                           
 20195                           ;mcc_generated_files/usb/usb_device_cdc.c: 910:         pCDCDst.bRam = (uint8_t*)&cdc_da
      +                          ta_tx;
 20196  005386  0E00               	movlw	0
 20197  005388  0101               	movlb	1	; () banked
 20198  00538A  6FB9               	movwf	_pCDCDst& (0+255),b
 20199  00538C  0E05               	movlw	5
 20200  00538E  6FBA               	movwf	(_pCDCDst+1)& (0+255),b
 20201                           
 20202                           ; BSR set to: 1
 20203                           ;mcc_generated_files/usb/usb_device_cdc.c: 912:         i = byte_to_send;
 20204  005390  C096  F095         	movff	CDCTxService@byte_to_send,CDCTxService@i
 20205                           
 20206                           ; BSR set to: 1
 20207                           ;mcc_generated_files/usb/usb_device_cdc.c: 913:         if(cdc_mem_type == 0x00)
 20208  005394  51E3               	movf	_cdc_mem_type& (0+255),w,b
 20209  005396  B4D8               	btfsc	status,2,c
 20210  005398  D012               	goto	l15350
 20211  00539A  D027               	goto	l15360
 20212  00539C                     l15342:
 20213                           
 20214                           ; BSR set to: 0
 20215                           ;mcc_generated_files/usb/usb_device_cdc.c: 916:             {;mcc_generated_files/usb/us
      +                          b_device_cdc.c: 917:                 *pCDCDst.bRam = *pCDCSrc.bRom;
 20216  00539C  C1BC  FFD9         	movff	_pCDCSrc,fsr2l
 20217  0053A0  C1BD  FFDA         	movff	_pCDCSrc+1,fsr2h
 20218  0053A4  C1B9  FFE1         	movff	_pCDCDst,fsr1l
 20219  0053A8  C1BA  FFE2         	movff	_pCDCDst+1,fsr1h
 20220  0053AC  CFDF FFE7          	movff	indf2,indf1
 20221                           
 20222                           ; BSR set to: 0
 20223                           ;mcc_generated_files/usb/usb_device_cdc.c: 918:                 pCDCDst.bRam++;
 20224  0053B0  0101               	movlb	1	; () banked
 20225  0053B2  4BB9               	infsnz	_pCDCDst& (0+255),f,b
 20226  0053B4  2BBA               	incf	(_pCDCDst+1)& (0+255),f,b
 20227                           
 20228                           ; BSR set to: 1
 20229                           ;mcc_generated_files/usb/usb_device_cdc.c: 919:                 pCDCSrc.bRom++;
 20230  0053B6  4BBC               	infsnz	_pCDCSrc& (0+255),f,b
 20231  0053B8  2BBD               	incf	(_pCDCSrc+1)& (0+255),f,b
 20232                           
 20233                           ; BSR set to: 1
 20234                           ;mcc_generated_files/usb/usb_device_cdc.c: 920:                 i--;
 20235  0053BA  0100               	movlb	0	; () banked
 20236  0053BC  0795               	decf	CDCTxService@i& (0+255),f,b
 20237  0053BE                     l15350:
 20238                           
 20239                           ;mcc_generated_files/usb/usb_device_cdc.c: 915:             while(i)
 20240  0053BE  0100               	movlb	0	; () banked
 20241  0053C0  5195               	movf	CDCTxService@i& (0+255),w,b
 20242  0053C2  B4D8               	btfsc	status,2,c
 20243  0053C4  D016               	goto	u18980
 20244  0053C6  D7EA               	goto	l15342
 20245  0053C8                     l15352:
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;mcc_generated_files/usb/usb_device_cdc.c: 926:             {;mcc_generated_files/usb/us
      +                          b_device_cdc.c: 927:                 *pCDCDst.bRam = *pCDCSrc.bRam;
 20249  0053C8  C1BC  FFD9         	movff	_pCDCSrc,fsr2l
 20250  0053CC  C1BD  FFDA         	movff	_pCDCSrc+1,fsr2h
 20251  0053D0  C1B9  FFE1         	movff	_pCDCDst,fsr1l
 20252  0053D4  C1BA  FFE2         	movff	_pCDCDst+1,fsr1h
 20253  0053D8  CFDF FFE7          	movff	indf2,indf1
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;mcc_generated_files/usb/usb_device_cdc.c: 928:                 pCDCDst.bRam++;
 20257  0053DC  0101               	movlb	1	; () banked
 20258  0053DE  4BB9               	infsnz	_pCDCDst& (0+255),f,b
 20259  0053E0  2BBA               	incf	(_pCDCDst+1)& (0+255),f,b
 20260                           
 20261                           ; BSR set to: 1
 20262                           ;mcc_generated_files/usb/usb_device_cdc.c: 929:                 pCDCSrc.bRam++;
 20263  0053E2  4BBC               	infsnz	_pCDCSrc& (0+255),f,b
 20264  0053E4  2BBD               	incf	(_pCDCSrc+1)& (0+255),f,b
 20265                           
 20266                           ; BSR set to: 1
 20267                           ;mcc_generated_files/usb/usb_device_cdc.c: 930:                 i--;
 20268  0053E6  0100               	movlb	0	; () banked
 20269  0053E8  0795               	decf	CDCTxService@i& (0+255),f,b
 20270  0053EA                     l15360:
 20271                           
 20272                           ;mcc_generated_files/usb/usb_device_cdc.c: 925:             while(i)
 20273  0053EA  0100               	movlb	0	; () banked
 20274  0053EC  5195               	movf	CDCTxService@i& (0+255),w,b
 20275  0053EE  A4D8               	btfss	status,2,c
 20276  0053F0  D7EB               	goto	l15352
 20277  0053F2                     u18980:
 20278                           
 20279                           ; BSR set to: 0
 20280                           ;mcc_generated_files/usb/usb_device_cdc.c: 938:         if(cdc_tx_len == 0)
 20281  0053F2  51C6               	movf	_cdc_tx_len& (0+255),w,b
 20282  0053F4  A4D8               	btfss	status,2,c
 20283  0053F6  D008               	goto	l15370
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;mcc_generated_files/usb/usb_device_cdc.c: 939:         {;mcc_generated_files/usb/usb_de
      +                          vice_cdc.c: 940:             if(byte_to_send == 64)
 20287  0053F8  0E40               	movlw	64
 20288  0053FA  1996               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 20289  0053FC  A4D8               	btfss	status,2,c
 20290  0053FE  D002               	goto	l15368
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;mcc_generated_files/usb/usb_device_cdc.c: 941:                 cdc_trf_state = 2;
 20294  005400  0E02               	movlw	2
 20295  005402  D001               	goto	L19
 20296  005404                     l15368:
 20297                           
 20298                           ; BSR set to: 0
 20299                           ;mcc_generated_files/usb/usb_device_cdc.c: 943:                 cdc_trf_state = 3;
 20300  005404  0E03               	movlw	3
 20301  005406                     L19:
 20302  005406  6FC7               	movwf	_cdc_trf_state& (0+255),b
 20303  005408                     l15370:
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;mcc_generated_files/usb/usb_device_cdc.c: 945:         CDCDataInHandle = USBTransferOne
      +                          Packet(2,1,(uint8_t*)&cdc_data_tx,byte_to_send);
 20307  005408  0E01               	movlw	1
 20308  00540A  6F8C               	movwf	USBTransferOnePacket@dir& (0+255),b
 20309  00540C  0E00               	movlw	0
 20310  00540E  6F8D               	movwf	USBTransferOnePacket@data& (0+255),b
 20311  005410  0E05               	movlw	5
 20312  005412  6F8E               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20313  005414  C096  F08F         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 20314  005418  0E02               	movlw	2
 20315  00541A  ECA8  F02B         	call	_USBTransferOnePacket
 20316  00541E  C08C  F1D3         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 20317  005422  C08D  F1D4         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 20318  005426                     l15372:
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;mcc_generated_files/usb/usb_device_cdc.c: 949:     {PIE3bits.USBIE = 1;};
 20322  005426  84A3               	bsf	163,2,c	;volatile
 20323  005428  0012               	return		;funcret
 20324  00542A                     __end_of_CDCTxService:
 20325                           	callstack 0
 20326                           
 20327 ;; *************** function _USBTransferOnePacket *****************
 20328 ;; Defined at:
 20329 ;;		line 999 in file "mcc_generated_files/usb/usb_device.c"
 20330 ;; Parameters:    Size  Location     Type
 20331 ;;  ep              1    wreg     unsigned char 
 20332 ;;  dir             1   44[BANK0 ] unsigned char 
 20333 ;;  data            2   45[BANK0 ] PTR unsigned char 
 20334 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 20335 ;;  len             1   47[BANK0 ] unsigned char 
 20336 ;; Auto vars:     Size  Location     Type
 20337 ;;  ep              1   50[BANK0 ] unsigned char 
 20338 ;;  handle          2   51[BANK0 ] PTR volatile struct __BD
 20339 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 20340 ;; Return value:  Size  Location     Type
 20341 ;;                  2   44[BANK0 ] PTR void 
 20342 ;; Registers used:
 20343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20344 ;; Tracked objects:
 20345 ;;		On entry : 3F/0
 20346 ;;		On exit  : 3F/0
 20347 ;;		Unchanged: 0/0
 20348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20349 ;;      Params:         0       4       0       0       0       0       0       0       0
 20350 ;;      Locals:         0       3       0       0       0       0       0       0       0
 20351 ;;      Temps:          0       2       0       0       0       0       0       0       0
 20352 ;;      Totals:         0       9       0       0       0       0       0       0       0
 20353 ;;Total ram usage:        9 bytes
 20354 ;; Hardware stack levels used: 1
 20355 ;; Hardware stack levels required when called: 10
 20356 ;; This function calls:
 20357 ;;		Nothing
 20358 ;; This function is called by:
 20359 ;;		_getsUSBUSART
 20360 ;;		_CDCTxService
 20361 ;; This function uses a non-reentrant model
 20362 ;;
 20363                           
 20364                           	psect	text100
 20365  005750                     __ptext100:
 20366                           	callstack 0
 20367  005750                     _USBTransferOnePacket:
 20368                           	callstack 17
 20369                           
 20370                           ;incstack = 0
 20371                           ;USBTransferOnePacket@ep stored from wreg
 20372  005750  6F92               	movwf	USBTransferOnePacket@ep& (0+255),b
 20373                           
 20374                           ;mcc_generated_files/usb/usb_device.c: 999: void* USBTransferOnePacket(uint8_t ep,uint8_
      +                          t dir,uint8_t* data,uint8_t len);mcc_generated_files/usb/usb_device.c: 1000: {;mcc_gener
      +                          ated_files/usb/usb_device.c: 1001:     volatile BDT_ENTRY* handle;;mcc_generated_files/u
      +                          sb/usb_device.c: 1004:     if(dir != 0)
 20375  005752  0100               	movlb	0	; () banked
 20376  005754  518C               	movf	USBTransferOnePacket@dir& (0+255),w,b
 20377  005756  B4D8               	btfsc	status,2,c
 20378  005758  D007               	goto	l14004
 20379                           
 20380                           ; BSR set to: 0
 20381                           ;mcc_generated_files/usb/usb_device.c: 1005:     {;mcc_generated_files/usb/usb_device.c:
      +                           1007:         handle = pBDTEntryIn[ep];
 20382  00575A  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20383  00575C  0D02               	mullw	2
 20384  00575E  50F3               	movf	243,w,c
 20385  005760  0FB6               	addlw	low _pBDTEntryIn
 20386  005762  6ED9               	movwf	fsr2l,c
 20387  005764  6ADA               	clrf	fsr2h,c
 20388  005766  D008               	goto	L20
 20389  005768                     l14004:
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;mcc_generated_files/usb/usb_device.c: 1010:     {;mcc_generated_files/usb/usb_device.c:
      +                           1012:         handle = pBDTEntryOut[ep];
 20393  005768  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20394  00576A  0D02               	mullw	2
 20395  00576C  0EAF               	movlw	low _pBDTEntryOut
 20396  00576E  24F3               	addwf	243,w,c
 20397  005770  6ED9               	movwf	fsr2l,c
 20398  005772  0E01               	movlw	high _pBDTEntryOut
 20399  005774  20F4               	addwfc	prodh,w,c
 20400  005776  6EDA               	movwf	fsr2h,c
 20401  005778                     L20:
 20402  005778  CFDE F093          	movff	postinc2,USBTransferOnePacket@handle
 20403  00577C  CFDD F094          	movff	postdec2,USBTransferOnePacket@handle+1
 20404                           
 20405                           ; BSR set to: 0
 20406                           ;mcc_generated_files/usb/usb_device.c: 1017:     if(handle == 0)
 20407  005780  5193               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20408  005782  1194               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20409  005784  A4D8               	btfss	status,2,c
 20410  005786  D005               	goto	l14012
 20411                           
 20412                           ; BSR set to: 0
 20413                           ;mcc_generated_files/usb/usb_device.c: 1018:     {;mcc_generated_files/usb/usb_device.c:
      +                           1019:         return 0;
 20414  005788  0E00               	movlw	0
 20415  00578A  6F8C               	movwf	?_USBTransferOnePacket& (0+255),b
 20416  00578C  0E00               	movlw	0
 20417  00578E  6F8D               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 20418  005790  0012               	return	
 20419  005792                     l14012:
 20420                           
 20421                           ; BSR set to: 0
 20422                           ;mcc_generated_files/usb/usb_device.c: 1033:     handle->ADR = ((uint16_t)(data));
 20423  005792  EE20 F002          	lfsr	2,2
 20424  005796  5193               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20425  005798  26D9               	addwf	fsr2l,f,c
 20426  00579A  5194               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20427  00579C  22DA               	addwfc	fsr2h,f,c
 20428  00579E  C08D  FFDE         	movff	USBTransferOnePacket@data,postinc2
 20429  0057A2  C08E  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 20430                           
 20431                           ;mcc_generated_files/usb/usb_device.c: 1034:     handle->CNT = len;
 20432  0057A6  EE20 F001          	lfsr	2,1
 20433  0057AA  5193               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20434  0057AC  26D9               	addwf	fsr2l,f,c
 20435  0057AE  5194               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20436  0057B0  22DA               	addwfc	fsr2h,f,c
 20437  0057B2  C08F  FFDF         	movff	USBTransferOnePacket@len,indf2
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;mcc_generated_files/usb/usb_device.c: 1035:     handle->STAT.Val &= 0x40;
 20441  0057B6  C093  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20442  0057BA  C094  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20443  0057BE  0E40               	movlw	64
 20444  0057C0  16DF               	andwf	indf2,f,c
 20445                           
 20446                           ; BSR set to: 0
 20447                           ;mcc_generated_files/usb/usb_device.c: 1036:     handle->STAT.Val |= (0x08 & 0x08);
 20448  0057C2  C093  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20449  0057C6  C094  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20450  0057CA  0E00               	movlw	0
 20451  0057CC  86DB               	bsf	plusw2,3,c
 20452                           
 20453                           ; BSR set to: 0
 20454                           ;mcc_generated_files/usb/usb_device.c: 1037:     handle->STAT.Val |= 0x80;
 20455  0057CE  C093  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20456  0057D2  C094  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20457  0057D6  0E00               	movlw	0
 20458  0057D8  8EDB               	bsf	plusw2,7,c
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;mcc_generated_files/usb/usb_device.c: 1040:     if(dir != 0)
 20462  0057DA  518C               	movf	USBTransferOnePacket@dir& (0+255),w,b
 20463  0057DC  B4D8               	btfsc	status,2,c
 20464  0057DE  D015               	goto	l14024
 20465                           
 20466                           ; BSR set to: 0
 20467                           ;mcc_generated_files/usb/usb_device.c: 1041:     {;mcc_generated_files/usb/usb_device.c:
      +                           1043:         pBDTEntryIn[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryIn[ep]) ^ 0x0004);
 20468  0057E0  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20469  0057E2  0D02               	mullw	2
 20470  0057E4  50F3               	movf	243,w,c
 20471  0057E6  0FB6               	addlw	low _pBDTEntryIn
 20472  0057E8  6ED9               	movwf	fsr2l,c
 20473  0057EA  6ADA               	clrf	fsr2h,c
 20474  0057EC  CFDE F090          	movff	postinc2,??_USBTransferOnePacket
 20475  0057F0  CFDD F091          	movff	postdec2,??_USBTransferOnePacket+1
 20476  0057F4  0E04               	movlw	4
 20477  0057F6  1B90               	xorwf	??_USBTransferOnePacket& (0+255),f,b
 20478  0057F8  0E00               	movlw	0
 20479  0057FA  1B91               	xorwf	(??_USBTransferOnePacket+1)& (0+255),f,b
 20480  0057FC  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20481  0057FE  0D02               	mullw	2
 20482  005800  50F3               	movf	243,w,c
 20483  005802  0FB6               	addlw	low _pBDTEntryIn
 20484  005804  6ED9               	movwf	fsr2l,c
 20485  005806  6ADA               	clrf	fsr2h,c
 20486  005808  D018               	goto	L21
 20487  00580A                     l14024:
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;mcc_generated_files/usb/usb_device.c: 1046:     {;mcc_generated_files/usb/usb_device.c:
      +                           1048:         pBDTEntryOut[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryOut[ep]) ^ 0x0004);
 20491  00580A  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20492  00580C  0D02               	mullw	2
 20493  00580E  0EAF               	movlw	low _pBDTEntryOut
 20494  005810  24F3               	addwf	243,w,c
 20495  005812  6ED9               	movwf	fsr2l,c
 20496  005814  0E01               	movlw	high _pBDTEntryOut
 20497  005816  20F4               	addwfc	prodh,w,c
 20498  005818  6EDA               	movwf	fsr2h,c
 20499  00581A  CFDE F090          	movff	postinc2,??_USBTransferOnePacket
 20500  00581E  CFDD F091          	movff	postdec2,??_USBTransferOnePacket+1
 20501  005822  0E04               	movlw	4
 20502  005824  1B90               	xorwf	??_USBTransferOnePacket& (0+255),f,b
 20503  005826  0E00               	movlw	0
 20504  005828  1B91               	xorwf	(??_USBTransferOnePacket+1)& (0+255),f,b
 20505  00582A  5192               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20506  00582C  0D02               	mullw	2
 20507  00582E  0EAF               	movlw	low _pBDTEntryOut
 20508  005830  24F3               	addwf	243,w,c
 20509  005832  6ED9               	movwf	fsr2l,c
 20510  005834  0E01               	movlw	high _pBDTEntryOut
 20511  005836  20F4               	addwfc	prodh,w,c
 20512  005838  6EDA               	movwf	fsr2h,c
 20513  00583A                     L21:
 20514  00583A  C090  FFDE         	movff	??_USBTransferOnePacket,postinc2
 20515  00583E  C091  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
 20516                           
 20517                           ; BSR set to: 0
 20518                           ;mcc_generated_files/usb/usb_device.c: 1050:     return (void*)handle;
 20519  005842  C093  F08C         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 20520  005846  C094  F08D         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 20521                           
 20522                           ; BSR set to: 0
 20523  00584A  0012               	return		;funcret
 20524  00584C                     __end_of_USBTransferOnePacket:
 20525                           	callstack 0
 20526                           
 20527 ;; *************** function _Actualizar_angulo *****************
 20528 ;; Defined at:
 20529 ;;		line 109 in file "encoder.c"
 20530 ;; Parameters:    Size  Location     Type
 20531 ;;		None
 20532 ;; Auto vars:     Size  Location     Type
 20533 ;;		None
 20534 ;; Return value:  Size  Location     Type
 20535 ;;                  1    wreg      void 
 20536 ;; Registers used:
 20537 ;;		wreg, status,2, status,0, cstack
 20538 ;; Tracked objects:
 20539 ;;		On entry : 0/0
 20540 ;;		On exit  : 3E/0
 20541 ;;		Unchanged: 0/0
 20542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20543 ;;      Params:         0       0       0       0       0       0       0       0       0
 20544 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20546 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20547 ;;Total ram usage:        0 bytes
 20548 ;; Hardware stack levels used: 1
 20549 ;; Hardware stack levels required when called: 11
 20550 ;; This function calls:
 20551 ;;		___lbmod
 20552 ;; This function is called by:
 20553 ;;		_main
 20554 ;; This function uses a non-reentrant model
 20555 ;;
 20556                           
 20557                           	psect	text101
 20558  0076A2                     __ptext101:
 20559                           	callstack 0
 20560  0076A2                     _Actualizar_angulo:
 20561                           	callstack 19
 20562                           
 20563                           ;encoder.c: 110:    if(PORTCbits.RC2==1){
 20564                           
 20565                           ; BSR set to: 0
 20566                           ;incstack = 0
 20567  0076A2  A482               	btfss	130,2,c	;volatile
 20568  0076A4  D00F               	goto	l15532
 20569                           
 20570                           ;encoder.c: 111:       if(flag_angulo==0){
 20571  0076A6  0101               	movlb	1	; () banked
 20572  0076A8  51D9               	movf	_flag_angulo& (0+255),w,b
 20573  0076AA  A4D8               	btfss	status,2,c
 20574  0076AC  0012               	return	
 20575                           
 20576                           ; BSR set to: 1
 20577                           ;encoder.c: 112:          flag_angulo=1;
 20578  0076AE  0E01               	movlw	1
 20579  0076B0  6FD9               	movwf	_flag_angulo& (0+255),b
 20580                           
 20581                           ; BSR set to: 1
 20582                           ;encoder.c: 113:          angulo++;
 20583  0076B2  0100               	movlb	0	; () banked
 20584  0076B4  2BC5               	incf	_angulo& (0+255),f,b
 20585                           
 20586                           ; BSR set to: 0
 20587                           ;encoder.c: 114:          angulo = angulo%72;
 20588  0076B6  0E48               	movlw	72
 20589  0076B8  6F8C               	movwf	___lbmod@divisor& (0+255),b
 20590  0076BA  51C5               	movf	_angulo& (0+255),w,b
 20591  0076BC  EC48  F03D         	call	___lbmod
 20592  0076C0  6FC5               	movwf	_angulo& (0+255),b
 20593  0076C2  0012               	return	
 20594  0076C4                     l15532:
 20595                           
 20596                           ;encoder.c: 117:       if(flag_angulo==1){
 20597  0076C4  0101               	movlb	1	; () banked
 20598  0076C6  05D9               	decf	_flag_angulo& (0+255),w,b
 20599  0076C8  A4D8               	btfss	status,2,c
 20600  0076CA  0012               	return	
 20601                           
 20602                           ; BSR set to: 1
 20603                           ;encoder.c: 118:          flag_angulo=0;
 20604  0076CC  0E00               	movlw	0
 20605  0076CE  6FD9               	movwf	_flag_angulo& (0+255),b
 20606                           
 20607                           ; BSR set to: 1
 20608                           ;encoder.c: 119:          angulo++;
 20609  0076D0  0100               	movlb	0	; () banked
 20610  0076D2  2BC5               	incf	_angulo& (0+255),f,b
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;encoder.c: 120:          angulo = angulo%72;
 20614  0076D4  0E48               	movlw	72
 20615  0076D6  6F8C               	movwf	___lbmod@divisor& (0+255),b
 20616  0076D8  51C5               	movf	_angulo& (0+255),w,b
 20617  0076DA  EC48  F03D         	call	___lbmod
 20618  0076DE  6FC5               	movwf	_angulo& (0+255),b
 20619  0076E0  0012               	return		;funcret
 20620  0076E2                     __end_of_Actualizar_angulo:
 20621                           	callstack 0
 20622                           
 20623 ;; *************** function ___lbmod *****************
 20624 ;; Defined at:
 20625 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/lbmod.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;  dividend        1    wreg     unsigned char 
 20628 ;;  divisor         1   44[BANK0 ] unsigned char 
 20629 ;; Auto vars:     Size  Location     Type
 20630 ;;  dividend        1   45[BANK0 ] unsigned char 
 20631 ;;  rem             1   47[BANK0 ] unsigned char 
 20632 ;;  counter         1   46[BANK0 ] unsigned char 
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  1    wreg      unsigned char 
 20635 ;; Registers used:
 20636 ;;		wreg, status,2, status,0
 20637 ;; Tracked objects:
 20638 ;;		On entry : 3E/1
 20639 ;;		On exit  : 3F/0
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20642 ;;      Params:         0       1       0       0       0       0       0       0       0
 20643 ;;      Locals:         0       3       0       0       0       0       0       0       0
 20644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20645 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20646 ;;Total ram usage:        4 bytes
 20647 ;; Hardware stack levels used: 1
 20648 ;; Hardware stack levels required when called: 10
 20649 ;; This function calls:
 20650 ;;		Nothing
 20651 ;; This function is called by:
 20652 ;;		_Fila_Agregar
 20653 ;;		_FilaPop
 20654 ;;		_Actualizar_angulo
 20655 ;; This function uses a non-reentrant model
 20656 ;;
 20657                           
 20658                           	psect	text102
 20659  007A90                     __ptext102:
 20660                           	callstack 0
 20661  007A90                     ___lbmod:
 20662                           	callstack 18
 20663                           
 20664                           ;incstack = 0
 20665                           ;___lbmod@dividend stored from wreg
 20666  007A90  0100               	movlb	0	; () banked
 20667  007A92  6F8D               	movwf	___lbmod@dividend& (0+255),b
 20668  007A94  0E08               	movlw	8
 20669  007A96  0100               	movlb	0	; () banked
 20670  007A98  6F8E               	movwf	___lbmod@counter& (0+255),b
 20671  007A9A  0E00               	movlw	0
 20672  007A9C  6F8F               	movwf	___lbmod@rem& (0+255),b
 20673  007A9E                     l14826:
 20674                           
 20675                           ; BSR set to: 0
 20676  007A9E  90D8               	bcf	status,0,c
 20677  007AA0  358D               	rlcf	___lbmod@dividend& (0+255),w,b
 20678  007AA2  358F               	rlcf	___lbmod@rem& (0+255),w,b
 20679  007AA4  6F8F               	movwf	___lbmod@rem& (0+255),b
 20680                           
 20681                           ; BSR set to: 0
 20682  007AA6  90D8               	bcf	status,0,c
 20683  007AA8  378D               	rlcf	___lbmod@dividend& (0+255),f,b
 20684                           
 20685                           ; BSR set to: 0
 20686  007AAA  518C               	movf	___lbmod@divisor& (0+255),w,b
 20687  007AAC  5D8F               	subwf	___lbmod@rem& (0+255),w,b
 20688  007AAE  A0D8               	btfss	status,0,c
 20689  007AB0  D002               	goto	l14834
 20690                           
 20691                           ; BSR set to: 0
 20692  007AB2  518C               	movf	___lbmod@divisor& (0+255),w,b
 20693  007AB4  5F8F               	subwf	___lbmod@rem& (0+255),f,b
 20694  007AB6                     l14834:
 20695                           
 20696                           ; BSR set to: 0
 20697  007AB6  2F8E               	decfsz	___lbmod@counter& (0+255),f,b
 20698  007AB8  D7F2               	goto	l14826
 20699                           
 20700                           ; BSR set to: 0
 20701  007ABA  518F               	movf	___lbmod@rem& (0+255),w,b
 20702                           
 20703                           ; BSR set to: 0
 20704  007ABC  0012               	return		;funcret
 20705  007ABE                     __end_of___lbmod:
 20706                           	callstack 0
 20707                           
 20708 ;; *************** function _ADC_SelectChannel *****************
 20709 ;; Defined at:
 20710 ;;		line 83 in file "mcc_generated_files/adc.c"
 20711 ;; Parameters:    Size  Location     Type
 20712 ;;  channel         1    wreg     enum E4607
 20713 ;; Auto vars:     Size  Location     Type
 20714 ;;  channel         1   45[BANK0 ] enum E4607
 20715 ;; Return value:  Size  Location     Type
 20716 ;;                  1    wreg      void 
 20717 ;; Registers used:
 20718 ;;		wreg, status,2, status,0
 20719 ;; Tracked objects:
 20720 ;;		On entry : 3F/1
 20721 ;;		On exit  : 3F/0
 20722 ;;		Unchanged: 0/0
 20723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20724 ;;      Params:         0       0       0       0       0       0       0       0       0
 20725 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20726 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20727 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20728 ;;Total ram usage:        2 bytes
 20729 ;; Hardware stack levels used: 1
 20730 ;; Hardware stack levels required when called: 10
 20731 ;; This function calls:
 20732 ;;		Nothing
 20733 ;; This function is called by:
 20734 ;;		_main
 20735 ;; This function uses a non-reentrant model
 20736 ;;
 20737                           
 20738                           	psect	text103
 20739  007CD2                     __ptext103:
 20740                           	callstack 0
 20741  007CD2                     _ADC_SelectChannel:
 20742                           	callstack 20
 20743                           
 20744                           ; BSR set to: 0
 20745                           ;incstack = 0
 20746                           ;ADC_SelectChannel@channel stored from wreg
 20747  007CD2  0100               	movlb	0	; () banked
 20748  007CD4  6F8D               	movwf	ADC_SelectChannel@channel& (0+255),b
 20749                           
 20750                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
 20751  007CD6  C08D  F08C         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
 20752  007CDA  0100               	movlb	0	; () banked
 20753  007CDC  478C               	rlncf	??_ADC_SelectChannel& (0+255),f,b
 20754  007CDE  478C               	rlncf	??_ADC_SelectChannel& (0+255),f,b
 20755  007CE0  50C2               	movf	194,w,c	;volatile
 20756  007CE2  198C               	xorwf	??_ADC_SelectChannel& (0+255),w,b
 20757  007CE4  0B83               	andlw	-125
 20758  007CE6  198C               	xorwf	??_ADC_SelectChannel& (0+255),w,b
 20759  007CE8  6EC2               	movwf	194,c	;volatile
 20760                           
 20761                           ; BSR set to: 0
 20762                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
 20763  007CEA  80C2               	bsf	194,0,c	;volatile
 20764                           
 20765                           ; BSR set to: 0
 20766  007CEC  0012               	return		;funcret
 20767  007CEE                     __end_of_ADC_SelectChannel:
 20768                           	callstack 0
 20769                           
 20770 ;; *************** function _INTERRUPT_InterruptManager *****************
 20771 ;; Defined at:
 20772 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 20773 ;; Parameters:    Size  Location     Type
 20774 ;;		None
 20775 ;; Auto vars:     Size  Location     Type
 20776 ;;		None
 20777 ;; Return value:  Size  Location     Type
 20778 ;;                  1    wreg      void 
 20779 ;; Registers used:
 20780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20781 ;; Tracked objects:
 20782 ;;		On entry : 0/0
 20783 ;;		On exit  : 0/0
 20784 ;;		Unchanged: 0/0
 20785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20786 ;;      Params:         0       0       0       0       0       0       0       0       0
 20787 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20788 ;;      Temps:          0      12       0       0       0       0       0       0       0
 20789 ;;      Totals:         0      12       0       0       0       0       0       0       0
 20790 ;;Total ram usage:       12 bytes
 20791 ;; Hardware stack levels used: 1
 20792 ;; Hardware stack levels required when called: 9
 20793 ;; This function calls:
 20794 ;;		_PIN_MANAGER_IOC
 20795 ;;		_TMR0_ISR
 20796 ;;		_TMR2_ISR
 20797 ;;		_TMR3_ISR
 20798 ;;		_USBDeviceTasks
 20799 ;; This function is called by:
 20800 ;;		Interrupt level 2
 20801 ;; This function uses a non-reentrant model
 20802 ;;
 20803                           
 20804                           	psect	intcode
 20805  000008                     __pintcode:
 20806                           	callstack 0
 20807  000008                     _INTERRUPT_InterruptManager:
 20808                           	callstack 12
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;incstack = 0
 20812  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20813  00000A  CFFA F080          	movff	pclath,??_INTERRUPT_InterruptManager
 20814  00000E  CFFB F081          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 20815  000012  CFE1 F082          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 20816  000016  CFE2 F083          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 20817  00001A  CFD9 F084          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 20818  00001E  CFDA F085          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 20819  000022  CFF3 F086          	movff	prodl,??_INTERRUPT_InterruptManager+6
 20820  000026  CFF4 F087          	movff	prodh,??_INTERRUPT_InterruptManager+7
 20821  00002A  CFF6 F088          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 20822  00002E  CFF7 F089          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 20823  000032  CFF8 F08A          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 20824  000036  CFF5 F08B          	movff	tablat,??_INTERRUPT_InterruptManager+11
 20825                           
 20826                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 20827  00003A  BAF2               	btfsc	242,5,c	;volatile
 20828  00003C  A4F2               	btfss	242,2,c	;volatile
 20829  00003E  D003               	goto	i2l579
 20830                           
 20831                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 20832  000040  EC8B  F03D         	call	_TMR0_ISR	;wreg free
 20833                           
 20834                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 20835  000044  D019               	goto	i2l585
 20836  000046                     i2l579:
 20837  000046  B6F2               	btfsc	242,3,c	;volatile
 20838  000048  A0F2               	btfss	242,0,c	;volatile
 20839  00004A  D003               	goto	i2l581
 20840                           
 20841                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 20842  00004C  ECEB  F03E         	call	_PIN_MANAGER_IOC	;wreg free
 20843                           
 20844                           ;mcc_generated_files/interrupt_manager.c: 68:     }
 20845  000050  D013               	goto	i2l585
 20846  000052                     i2l581:
 20847  000052  ACF2               	btfss	242,6,c	;volatile
 20848  000054  D011               	goto	i2l585
 20849                           
 20850                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE3bits.USBIE == 1 && PIR3bits.USBIF == 1)
 20851  000056  B4A3               	btfsc	163,2,c	;volatile
 20852  000058  A4A4               	btfss	164,2,c	;volatile
 20853  00005A  D003               	goto	i2l584
 20854                           
 20855                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             USBDeviceTasks();
 20856  00005C  EC5F  F028         	call	_USBDeviceTasks	;wreg free
 20857                           
 20858                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 20859  000060  D00B               	goto	i2l585
 20860  000062                     i2l584:
 20861  000062  B2A0               	btfsc	160,1,c	;volatile
 20862  000064  A2A1               	btfss	161,1,c	;volatile
 20863  000066  D003               	goto	i2l586
 20864                           
 20865                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR3_ISR();
 20866  000068  ECEB  F03C         	call	_TMR3_ISR	;wreg free
 20867                           
 20868                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 20869  00006C  D005               	goto	i2l585
 20870  00006E                     i2l586:
 20871  00006E  B29D               	btfsc	157,1,c	;volatile
 20872  000070  A29E               	btfss	158,1,c	;volatile
 20873  000072  D002               	goto	i2l585
 20874                           
 20875                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 20876  000074  ECEA  F03D         	call	_TMR2_ISR	;wreg free
 20877  000078                     i2l585:
 20878                           
 20879                           ;mcc_generated_files/interrupt_manager.c: 87:     }
 20880  000078  C08B  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 20881  00007C  C08A  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 20882  000080  C089  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 20883  000084  C088  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 20884  000088  C087  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 20885  00008C  C086  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 20886  000090  C085  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 20887  000094  C084  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 20888  000098  C083  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 20889  00009C  C082  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 20890  0000A0  C081  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 20891  0000A4  C080  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 20892  0000A8  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20893  0000AA  0011               	retfie		f
 20894  0000AC                     __end_of_INTERRUPT_InterruptManager:
 20895                           	callstack 0
 20896                           
 20897 ;; *************** function _USBDeviceTasks *****************
 20898 ;; Defined at:
 20899 ;;		line 481 in file "mcc_generated_files/usb/usb_device.c"
 20900 ;; Parameters:    Size  Location     Type
 20901 ;;		None
 20902 ;; Auto vars:     Size  Location     Type
 20903 ;;  i               1   30[COMRAM] unsigned char 
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  1    wreg      void 
 20906 ;; Registers used:
 20907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/0
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20913 ;;      Params:         0       0       0       0       0       0       0       0       0
 20914 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20915 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20916 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20917 ;;Total ram usage:        1 bytes
 20918 ;; Hardware stack levels used: 1
 20919 ;; Hardware stack levels required when called: 8
 20920 ;; This function calls:
 20921 ;;		_USBCtrlEPAllowStatusStage
 20922 ;;		_USBCtrlEPService
 20923 ;;		_USBIncrement1msInternalTimers
 20924 ;;		_USBStallHandler
 20925 ;;		_USBSuspend
 20926 ;;		_USBWakeFromSuspend
 20927 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20928 ;;		i2_USBDeviceInit
 20929 ;; This function is called by:
 20930 ;;		_INTERRUPT_InterruptManager
 20931 ;; This function uses a non-reentrant model
 20932 ;;
 20933                           
 20934                           	psect	text105
 20935  0050BE                     __ptext105:
 20936                           	callstack 0
 20937  0050BE                     _USBDeviceTasks:
 20938                           	callstack 12
 20939                           
 20940                           ;mcc_generated_files/usb/usb_device.c: 483:     uint8_t i;;mcc_generated_files/usb/usb_d
      +                          evice.c: 594:     if(USBDeviceState == ATTACHED_STATE)
 20941                           
 20942                           ;incstack = 0
 20943  0050BE  045C               	decf	_USBDeviceState^0,w,c
 20944  0050C0  B4D8               	btfsc	status,2,c
 20945                           
 20946                           ;mcc_generated_files/usb/usb_device.c: 595:     {;mcc_generated_files/usb/usb_device.c: 
      +                          605:         if(!UCONbits.SE0)
 20947  0050C2  BA60               	btfsc	96,5,c	;volatile
 20948  0050C4  D006               	goto	i2l15216
 20949                           
 20950                           ;mcc_generated_files/usb/usb_device.c: 606:         {;mcc_generated_files/usb/usb_device
      +                          .c: 612:                 {UIR = 0;};
 20951  0050C6  0E00               	movlw	0
 20952  0050C8  6E65               	movwf	101,c	;volatile
 20953                           
 20954                           ;mcc_generated_files/usb/usb_device.c: 618:             UIEbits.URSTIE = 1;
 20955  0050CA  8064               	bsf	100,0,c	;volatile
 20956                           
 20957                           ;mcc_generated_files/usb/usb_device.c: 619:             UIEbits.IDLEIE = 1;
 20958  0050CC  8864               	bsf	100,4,c	;volatile
 20959                           
 20960                           ;mcc_generated_files/usb/usb_device.c: 620:             USBDeviceState = POWERED_STATE;
 20961  0050CE  0E02               	movlw	2
 20962  0050D0  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 20963  0050D2                     i2l15216:
 20964                           
 20965                           ;mcc_generated_files/usb/usb_device.c: 638:     if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 20966  0050D2  B465               	btfsc	101,2,c	;volatile
 20967  0050D4  A464               	btfss	100,2,c	;volatile
 20968  0050D6  D003               	goto	i2l15224
 20969                           
 20970                           ;mcc_generated_files/usb/usb_device.c: 639:     {;mcc_generated_files/usb/usb_device.c: 
      +                          640:         (UIR &= 0xFB);
 20971  0050D8  9465               	bcf	101,2,c	;volatile
 20972                           
 20973                           ;mcc_generated_files/usb/usb_device.c: 644:             USBWakeFromSuspend();
 20974  0050DA  EC3C  F03C         	call	_USBWakeFromSuspend	;wreg free
 20975  0050DE                     i2l15224:
 20976                           
 20977                           ;mcc_generated_files/usb/usb_device.c: 651:     if(UCONbits.SUSPND==1)
 20978  0050DE  A260               	btfss	96,1,c	;volatile
 20979  0050E0  D002               	goto	i2l147
 20980                           
 20981                           ;mcc_generated_files/usb/usb_device.c: 652:     {;mcc_generated_files/usb/usb_device.c: 
      +                          653:         PIR3bits.USBIF = 0;;
 20982  0050E2  94A4               	bcf	164,2,c	;volatile
 20983                           
 20984                           ;mcc_generated_files/usb/usb_device.c: 654:         return;
 20985  0050E4  0012               	return	
 20986  0050E6                     i2l147:
 20987                           
 20988                           ;mcc_generated_files/usb/usb_device.c: 667:     if(UIRbits.URSTIF && UIEbits.URSTIE)
 20989  0050E6  B065               	btfsc	101,0,c	;volatile
 20990  0050E8  A064               	btfss	100,0,c	;volatile
 20991  0050EA  D006               	goto	i2l15238
 20992                           
 20993                           ;mcc_generated_files/usb/usb_device.c: 668:     {;mcc_generated_files/usb/usb_device.c: 
      +                          669:         USBDeviceInit();
 20994  0050EC  EC96  F026         	call	i2_USBDeviceInit	;wreg free
 20995                           
 20996                           ; BSR set to: 1
 20997                           ;mcc_generated_files/usb/usb_device.c: 673:         {PIE3bits.USBIE = 1;};
 20998  0050F0  84A3               	bsf	163,2,c	;volatile
 20999                           
 21000                           ; BSR set to: 1
 21001                           ;mcc_generated_files/usb/usb_device.c: 675:         USBDeviceState = DEFAULT_STATE;
 21002  0050F2  0E04               	movlw	4
 21003  0050F4  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 21004                           
 21005                           ; BSR set to: 1
 21006                           ;mcc_generated_files/usb/usb_device.c: 685:         (UIR &= 0xFE);
 21007  0050F6  9065               	bcf	101,0,c	;volatile
 21008  0050F8                     i2l15238:
 21009                           
 21010                           ;mcc_generated_files/usb/usb_device.c: 691:     if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 21011  0050F8  B865               	btfsc	101,4,c	;volatile
 21012  0050FA  A864               	btfss	100,4,c	;volatile
 21013  0050FC  D002               	goto	i2l15244
 21014                           
 21015                           ;mcc_generated_files/usb/usb_device.c: 692:     {;mcc_generated_files/usb/usb_device.c: 
      +                          698:             USBSuspend();
 21016  0050FE  ECD3  F03C         	call	_USBSuspend	;wreg free
 21017  005102                     i2l15244:
 21018                           
 21019                           ;mcc_generated_files/usb/usb_device.c: 712:     if(UIRbits.SOFIF)
 21020  005102  AC65               	btfss	101,6,c	;volatile
 21021  005104  D01B               	goto	i2l15262
 21022                           
 21023                           ;mcc_generated_files/usb/usb_device.c: 713:     {;mcc_generated_files/usb/usb_device.c: 
      +                          715:         if(UIEbits.SOFIE)
 21024  005106  AC64               	btfss	100,6,c	;volatile
 21025  005108  D00E               	goto	i2l15250
 21026                           
 21027                           ;mcc_generated_files/usb/usb_device.c: 716:         {;mcc_generated_files/usb/usb_device
      +                          .c: 717:             USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SOF,0,1);
 21028  00510A  0E00               	movlw	0
 21029  00510C  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21030  00510E  0E73               	movlw	115
 21031  005110  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21032  005112  0E00               	movlw	0
 21033  005114  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21034  005116  0E00               	movlw	0
 21035  005118  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21036  00511A  0E00               	movlw	0
 21037  00511C  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21038  00511E  0E01               	movlw	1
 21039  005120  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21040  005122  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21041  005126                     i2l15250:
 21042                           
 21043                           ;mcc_generated_files/usb/usb_device.c: 719:         (UIR &= 0xBF);
 21044  005126  9C65               	bcf	101,6,c	;volatile
 21045                           
 21046                           ;mcc_generated_files/usb/usb_device.c: 722:             USBIncrement1msInternalTimers();
 21047  005128  ECD8  F03D         	call	_USBIncrement1msInternalTimers	;wreg free
 21048                           
 21049                           ;mcc_generated_files/usb/usb_device.c: 739:             if(USBStatusStageTimeoutCounter 
      +                          != 0u)
 21050  00512C  0100               	movlb	0	; () banked
 21051  00512E  51CD               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 21052  005130  A4D8               	btfss	status,2,c
 21053                           
 21054                           ; BSR set to: 0
 21055                           ;mcc_generated_files/usb/usb_device.c: 740:             {;mcc_generated_files/usb/usb_de
      +                          vice.c: 741:                 USBStatusStageTimeoutCounter--;
 21056  005132  07CD               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;mcc_generated_files/usb/usb_device.c: 748:             if(USBStatusStageTimeoutCounter 
      +                          == 0)
 21060  005134  51CD               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 21061  005136  B4D8               	btfsc	status,2,c
 21062                           
 21063                           ; BSR set to: 0
 21064                           ;mcc_generated_files/usb/usb_device.c: 749:             {;mcc_generated_files/usb/usb_de
      +                          vice.c: 750:                 USBCtrlEPAllowStatusStage();
 21065  005138  ECBF  F031         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21066  00513C                     i2l15262:
 21067                           
 21068                           ;mcc_generated_files/usb/usb_device.c: 755:     if(UIRbits.STALLIF && UIEbits.STALLIE)
 21069  00513C  BA65               	btfsc	101,5,c	;volatile
 21070  00513E  AA64               	btfss	100,5,c	;volatile
 21071  005140  D002               	goto	i2l15268
 21072                           
 21073                           ;mcc_generated_files/usb/usb_device.c: 756:     {;mcc_generated_files/usb/usb_device.c: 
      +                          757:         USBStallHandler();
 21074  005142  ECF0  F03A         	call	_USBStallHandler	;wreg free
 21075  005146                     i2l15268:
 21076                           
 21077                           ;mcc_generated_files/usb/usb_device.c: 760:     if(UIRbits.UERRIF && UIEbits.UERRIE)
 21078  005146  B265               	btfsc	101,1,c	;volatile
 21079  005148  A264               	btfss	100,1,c	;volatile
 21080  00514A  D00F               	goto	i2l15276
 21081                           
 21082                           ;mcc_generated_files/usb/usb_device.c: 761:     {;mcc_generated_files/usb/usb_device.c: 
      +                          762:         USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_BUS_ERROR,0,1);
 21083  00514C  0E7F               	movlw	127
 21084  00514E  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21085  005150  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21086  005152  0E00               	movlw	0
 21087  005154  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21088  005156  0E00               	movlw	0
 21089  005158  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21090  00515A  0E00               	movlw	0
 21091  00515C  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21092  00515E  0E01               	movlw	1
 21093  005160  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21094  005162  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21095                           
 21096                           ;mcc_generated_files/usb/usb_device.c: 763:         {UEIR = 0;};
 21097  005166  0E00               	movlw	0
 21098  005168  6E67               	movwf	103,c	;volatile
 21099  00516A                     i2l15276:
 21100                           
 21101                           ;mcc_generated_files/usb/usb_device.c: 778:     if(USBDeviceState < DEFAULT_STATE)
 21102  00516A  0E04               	movlw	4
 21103  00516C  605C               	cpfslt	_USBDeviceState^0,c
 21104  00516E  D002               	goto	i2l157
 21105                           
 21106                           ;mcc_generated_files/usb/usb_device.c: 779:     {;mcc_generated_files/usb/usb_device.c: 
      +                          780:         PIR3bits.USBIF = 0;;
 21107  005170  94A4               	bcf	164,2,c	;volatile
 21108                           
 21109                           ;mcc_generated_files/usb/usb_device.c: 781:         return;
 21110  005172  0012               	return	
 21111  005174                     i2l157:
 21112                           
 21113                           ;mcc_generated_files/usb/usb_device.c: 787:     if(UIEbits.TRNIE)
 21114  005174  A664               	btfss	100,3,c	;volatile
 21115  005176  D035               	goto	i2u1888_40
 21116                           
 21117                           ;mcc_generated_files/usb/usb_device.c: 788:     {;mcc_generated_files/usb/usb_device.c: 
      +                          789:         for(i = 0; i < 4u; i++)
 21118  005178  0E00               	movlw	0
 21119  00517A  6E1F               	movwf	USBDeviceTasks@i^0,c
 21120  00517C                     i2l159:
 21121                           
 21122                           ;mcc_generated_files/usb/usb_device.c: 790:         {;mcc_generated_files/usb/usb_device
      +                          .c: 791:             if(UIRbits.TRNIF)
 21123  00517C  A665               	btfss	101,3,c	;volatile
 21124  00517E  D031               	goto	i2u1888_40
 21125                           
 21126                           ;mcc_generated_files/usb/usb_device.c: 792:             {;mcc_generated_files/usb/usb_de
      +                          vice.c: 794:                 USTATcopy.Val = USTAT;
 21127  005180  CF61 F05D          	movff	3937,_USTATcopy	;volatile
 21128                           
 21129                           ;mcc_generated_files/usb/usb_device.c: 795:                 endpoint_number = USTATcopy.
      +                          endpoint_number;
 21130  005184  305D               	rrcf	_USTATcopy^0,w,c	;volatile
 21131  005186  32E8               	rrcf	wreg,f,c
 21132  005188  32E8               	rrcf	wreg,f,c
 21133  00518A  0B0F               	andlw	15
 21134  00518C  0100               	movlb	0	; () banked
 21135  00518E  6FCF               	movwf	_endpoint_number& (0+255),b	;volatile
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;mcc_generated_files/usb/usb_device.c: 797:                 (UIR &= 0xF7);
 21139  005190  9665               	bcf	101,3,c	;volatile
 21140                           
 21141                           ; BSR set to: 0
 21142                           ;mcc_generated_files/usb/usb_device.c: 802:                 if(USTATcopy.direction == 0)
 21143  005192  B45D               	btfsc	_USTATcopy^0,2,c	;volatile
 21144  005194  D006               	goto	i2l15296
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;mcc_generated_files/usb/usb_device.c: 803:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 804:                     ep_data_out[endpoint_number].bits.ping_pong_state ^
      +                          = 1;
 21148  005196  0EBF               	movlw	low _ep_data_out
 21149  005198  25CF               	addwf	_endpoint_number& (0+255),w,b	;volatile
 21150  00519A  6ED9               	movwf	fsr2l,c
 21151  00519C  6ADA               	clrf	fsr2h,c
 21152  00519E  0E01               	movlw	high _ep_data_out
 21153  0051A0  D005               	goto	L22
 21154  0051A2                     i2l15296:
 21155                           
 21156                           ; BSR set to: 0
 21157                           ;mcc_generated_files/usb/usb_device.c: 807:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 808:                     ep_data_in[endpoint_number].bits.ping_pong_state ^=
      +                           1;
 21158  0051A2  0EC2               	movlw	low _ep_data_in
 21159  0051A4  25CF               	addwf	_endpoint_number& (0+255),w,b	;volatile
 21160  0051A6  6ED9               	movwf	fsr2l,c
 21161  0051A8  6ADA               	clrf	fsr2h,c
 21162  0051AA  0E01               	movlw	high _ep_data_in
 21163  0051AC                     L22:
 21164  0051AC  22DA               	addwfc	fsr2h,f,c
 21165  0051AE  0101               	movlb	1	; () banked
 21166  0051B0  70DF               	btg	indf2,0,c
 21167                           
 21168                           ; BSR set to: 1
 21169                           ;mcc_generated_files/usb/usb_device.c: 814:                 if(endpoint_number == 0)
 21170  0051B2  0100               	movlb	0	; () banked
 21171  0051B4  51CF               	movf	_endpoint_number& (0+255),w,b	;volatile
 21172  0051B6  A4D8               	btfss	status,2,c
 21173  0051B8  D003               	goto	i2l15302
 21174                           
 21175                           ; BSR set to: 0
 21176                           ;mcc_generated_files/usb/usb_device.c: 815:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 816:                     USBCtrlEPService();
 21177  0051BA  EC86  F035         	call	_USBCtrlEPService	;wreg free
 21178                           
 21179                           ;mcc_generated_files/usb/usb_device.c: 817:                 }
 21180  0051BE  D00D               	goto	i2l15304
 21181  0051C0                     i2l15302:
 21182                           
 21183                           ; BSR set to: 0
 21184                           ;mcc_generated_files/usb/usb_device.c: 819:                 {;mcc_generated_files/usb/us
      +                          b_device.c: 820:                     USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TR
      +                          ANSFER,(uint8_t*)&USTATcopy.Val,0);
 21185  0051C0  0E00               	movlw	0
 21186  0051C2  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21187  0051C4  0E72               	movlw	114
 21188  0051C6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21189  0051C8  0E5D               	movlw	low _USTATcopy
 21190  0051CA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21191  0051CC  6A10               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21192  0051CE  0E00               	movlw	0
 21193  0051D0  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21194  0051D2  0E00               	movlw	0
 21195  0051D4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21196  0051D6  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21197  0051DA                     i2l15304:
 21198                           
 21199                           ;mcc_generated_files/usb/usb_device.c: 827:         }
 21200  0051DA  2A1F               	incf	USBDeviceTasks@i^0,f,c
 21201  0051DC  0E03               	movlw	3
 21202  0051DE  641F               	cpfsgt	USBDeviceTasks@i^0,c
 21203  0051E0  D7CD               	goto	i2l159
 21204  0051E2                     i2u1888_40:
 21205                           
 21206                           ;mcc_generated_files/usb/usb_device.c: 830:     PIR3bits.USBIF = 0;;
 21207                           
 21208                           ;mcc_generated_files/usb/usb_device.c: 828:     }
 21209  0051E2  94A4               	bcf	164,2,c	;volatile
 21210  0051E4  0012               	return		;funcret
 21211  0051E6                     __end_of_USBDeviceTasks:
 21212                           	callstack 0
 21213                           
 21214 ;; *************** function i2_USBDeviceInit *****************
 21215 ;; Defined at:
 21216 ;;		line 281 in file "mcc_generated_files/usb/usb_device.c"
 21217 ;; Parameters:    Size  Location     Type
 21218 ;;		None
 21219 ;; Auto vars:     Size  Location     Type
 21220 ;;  i               1   12[COMRAM] unsigned char 
 21221 ;; Return value:  Size  Location     Type
 21222 ;;                  1    wreg      void 
 21223 ;; Registers used:
 21224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21225 ;; Tracked objects:
 21226 ;;		On entry : 0/0
 21227 ;;		On exit  : 3F/1
 21228 ;;		Unchanged: 0/0
 21229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21230 ;;      Params:         0       0       0       0       0       0       0       0       0
 21231 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21233 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21234 ;;Total ram usage:        1 bytes
 21235 ;; Hardware stack levels used: 1
 21236 ;; Hardware stack levels required when called: 1
 21237 ;; This function calls:
 21238 ;;		i2_memset
 21239 ;; This function is called by:
 21240 ;;		_USBDeviceTasks
 21241 ;; This function uses a non-reentrant model
 21242 ;;
 21243                           
 21244                           	psect	text106
 21245  004D2C                     __ptext106:
 21246                           	callstack 0
 21247  004D2C                     i2_USBDeviceInit:
 21248                           	callstack 18
 21249                           
 21250                           ;mcc_generated_files/usb/usb_device.c: 283:     uint8_t i;;mcc_generated_files/usb/usb_d
      +                          evice.c: 285:     {PIE3bits.USBIE = 0;};
 21251                           
 21252                           ;incstack = 0
 21253  004D2C  94A3               	bcf	163,2,c	;volatile
 21254                           
 21255                           ;mcc_generated_files/usb/usb_device.c: 292:     {UEIR = 0;};
 21256  004D2E  0E00               	movlw	0
 21257  004D30  6E67               	movwf	103,c	;volatile
 21258                           
 21259                           ;mcc_generated_files/usb/usb_device.c: 295:     {UIR = 0;};
 21260  004D32  0E00               	movlw	0
 21261  004D34  6E65               	movwf	101,c	;volatile
 21262                           
 21263                           ;mcc_generated_files/usb/usb_device.c: 298:     UEP0 = 0;
 21264  004D36  0E00               	movlw	0
 21265  004D38  6E6A               	movwf	106,c	;volatile
 21266                           
 21267                           ;mcc_generated_files/usb/usb_device.c: 300:     memset((void*)&UEP1,0x00,(2));;
 21268  004D3A  0E6B               	movlw	107
 21269  004D3C  6E01               	movwf	i2memset@dest^0,c
 21270  004D3E  0E0F               	movlw	15
 21271  004D40  6E02               	movwf	(i2memset@dest+1)^0,c
 21272  004D42  0E00               	movlw	0
 21273  004D44  6E04               	movwf	(i2memset@c+1)^0,c
 21274  004D46  0E00               	movlw	0
 21275  004D48  6E03               	movwf	i2memset@c^0,c
 21276  004D4A  0E00               	movlw	0
 21277  004D4C  6E06               	movwf	(i2memset@n+1)^0,c
 21278  004D4E  0E02               	movlw	2
 21279  004D50  6E05               	movwf	i2memset@n^0,c
 21280  004D52  EC2F  F027         	call	i2_memset	;wreg free
 21281                           
 21282                           ;mcc_generated_files/usb/usb_device.c: 302:     { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE
      +                           = 0x9F; UIE = 0x39 | 0x40 | 0x02; };
 21283  004D56  0E16               	movlw	22
 21284  004D58  6E62               	movwf	98,c	;volatile
 21285  004D5A  0E9F               	movlw	159
 21286  004D5C  6E66               	movwf	102,c	;volatile
 21287  004D5E  0E7B               	movlw	123
 21288  004D60  6E64               	movwf	100,c	;volatile
 21289                           
 21290                           ;mcc_generated_files/usb/usb_device.c: 311:     for(i = 0; i < (sizeof(BDT)/sizeof(BDT_E
      +                          NTRY)); i++)
 21291  004D62  0E00               	movlw	0
 21292  004D64  6E0D               	movwf	i2USBDeviceInit@i^0,c
 21293  004D66                     i2l15148:
 21294                           
 21295                           ;mcc_generated_files/usb/usb_device.c: 312:     {;mcc_generated_files/usb/usb_device.c: 
      +                          313:         BDT[i].Val = 0x00;
 21296  004D66  500D               	movf	i2USBDeviceInit@i^0,w,c
 21297  004D68  0D04               	mullw	4
 21298  004D6A  0E00               	movlw	0
 21299  004D6C  24F3               	addwf	243,w,c
 21300  004D6E  6ED9               	movwf	fsr2l,c
 21301  004D70  0E04               	movlw	4
 21302  004D72  20F4               	addwfc	prodh,w,c
 21303  004D74  6EDA               	movwf	fsr2h,c
 21304  004D76  6ADE               	clrf	postinc2,c
 21305  004D78  6ADE               	clrf	postinc2,c
 21306  004D7A  6ADE               	clrf	postinc2,c
 21307  004D7C  6ADD               	clrf	postdec2,c
 21308                           
 21309                           ;mcc_generated_files/usb/usb_device.c: 314:     }
 21310  004D7E  2A0D               	incf	i2USBDeviceInit@i^0,f,c
 21311  004D80  0E0B               	movlw	11
 21312  004D82  640D               	cpfsgt	i2USBDeviceInit@i^0,c
 21313  004D84  D7F0               	goto	i2l15148
 21314                           
 21315                           ;mcc_generated_files/usb/usb_device.c: 317:     UCONbits.PPBRST = 1;
 21316  004D86  8C60               	bsf	96,6,c	;volatile
 21317                           
 21318                           ;mcc_generated_files/usb/usb_device.c: 320:     UADDR = 0x00;
 21319  004D88  0E00               	movlw	0
 21320  004D8A  6E63               	movwf	99,c	;volatile
 21321                           
 21322                           ;mcc_generated_files/usb/usb_device.c: 323:     UCONbits.PKTDIS = 0;
 21323  004D8C  9860               	bcf	96,4,c	;volatile
 21324                           
 21325                           ;mcc_generated_files/usb/usb_device.c: 326:     UCONbits.PPBRST = 0;
 21326  004D8E  9C60               	bcf	96,6,c	;volatile
 21327  004D90                     i2l15160:
 21328                           
 21329                           ;mcc_generated_files/usb/usb_device.c: 330:     {;mcc_generated_files/usb/usb_device.c: 
      +                          331:         (UIR &= 0xF7);
 21330  004D90  9665               	bcf	101,3,c	;volatile
 21331                           
 21332                           ;mcc_generated_files/usb/usb_device.c: 333:         inPipes[0].info.Val = 0;
 21333  004D92  0E00               	movlw	0
 21334  004D94  0100               	movlb	0	; () banked
 21335  004D96  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21336                           
 21337                           ; BSR set to: 0
 21338                           ;mcc_generated_files/usb/usb_device.c: 334:         outPipes[0].info.Val = 0;
 21339  004D98  0E00               	movlw	0
 21340  004D9A  6FAB               	movwf	(_outPipes+3)& (0+255),b	;volatile
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;mcc_generated_files/usb/usb_device.c: 335:         outPipes[0].wCount.Val = 0;
 21344  004D9C  0E00               	movlw	0
 21345  004D9E  6FAD               	movwf	(_outPipes+5)& (0+255),b	;volatile
 21346  004DA0  0E00               	movlw	0
 21347  004DA2  6FAC               	movwf	(_outPipes+4)& (0+255),b	;volatile
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;mcc_generated_files/usb/usb_device.c: 336:     }while(UIRbits.TRNIF == 1);
 21351  004DA4  B665               	btfsc	101,3,c	;volatile
 21352  004DA6  D7F4               	goto	i2l15160
 21353                           
 21354                           ; BSR set to: 0
 21355                           ;mcc_generated_files/usb/usb_device.c: 340:     USBStatusStageEnabledFlag1 = 1;
 21356  004DA8  0E01               	movlw	1
 21357  004DAA  6FCB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21358                           
 21359                           ;mcc_generated_files/usb/usb_device.c: 341:     USBStatusStageEnabledFlag2 = 1;
 21360  004DAC  0E01               	movlw	1
 21361  004DAE  6FCA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21362                           
 21363                           ;mcc_generated_files/usb/usb_device.c: 343:     USBDeferINDataStagePackets = 0;
 21364  004DB0  0E00               	movlw	0
 21365  004DB2  6FC9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21366                           
 21367                           ;mcc_generated_files/usb/usb_device.c: 344:     USBDeferOUTDataStagePackets = 0;
 21368  004DB4  0E00               	movlw	0
 21369  004DB6  0101               	movlb	1	; () banked
 21370  004DB8  6FE5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21371                           
 21372                           ;mcc_generated_files/usb/usb_device.c: 345:     USBBusIsSuspended = 0;
 21373  004DBA  0E00               	movlw	0
 21374  004DBC  0100               	movlb	0	; () banked
 21375  004DBE  6FD0               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21376                           
 21377                           ;mcc_generated_files/usb/usb_device.c: 349:     for(i = 0; i < (uint8_t)(2 +1u); i++)
 21378  004DC0  0E00               	movlw	0
 21379  004DC2  6E0D               	movwf	i2USBDeviceInit@i^0,c
 21380  004DC4                     i2l15176:
 21381                           
 21382                           ;mcc_generated_files/usb/usb_device.c: 350:     {;mcc_generated_files/usb/usb_device.c: 
      +                          351:         pBDTEntryIn[i] = 0u;
 21383  004DC4  500D               	movf	i2USBDeviceInit@i^0,w,c
 21384  004DC6  0D02               	mullw	2
 21385  004DC8  50F3               	movf	243,w,c
 21386  004DCA  0FB6               	addlw	low _pBDTEntryIn
 21387  004DCC  6ED9               	movwf	fsr2l,c
 21388  004DCE  6ADA               	clrf	fsr2h,c
 21389  004DD0  0E00               	movlw	0
 21390  004DD2  6EDE               	movwf	postinc2,c
 21391  004DD4  0E00               	movlw	0
 21392  004DD6  6EDD               	movwf	postdec2,c
 21393                           
 21394                           ;mcc_generated_files/usb/usb_device.c: 352:         pBDTEntryOut[i] = 0u;
 21395  004DD8  500D               	movf	i2USBDeviceInit@i^0,w,c
 21396  004DDA  0D02               	mullw	2
 21397  004DDC  0EAF               	movlw	low _pBDTEntryOut
 21398  004DDE  24F3               	addwf	243,w,c
 21399  004DE0  6ED9               	movwf	fsr2l,c
 21400  004DE2  0E01               	movlw	high _pBDTEntryOut
 21401  004DE4  20F4               	addwfc	prodh,w,c
 21402  004DE6  6EDA               	movwf	fsr2h,c
 21403  004DE8  0E00               	movlw	0
 21404  004DEA  6EDE               	movwf	postinc2,c
 21405  004DEC  0E00               	movlw	0
 21406  004DEE  6EDD               	movwf	postdec2,c
 21407                           
 21408                           ;mcc_generated_files/usb/usb_device.c: 353:         ep_data_in[i].Val = 0u;
 21409  004DF0  0EC2               	movlw	low _ep_data_in
 21410  004DF2  240D               	addwf	i2USBDeviceInit@i^0,w,c
 21411  004DF4  6ED9               	movwf	fsr2l,c
 21412  004DF6  6ADA               	clrf	fsr2h,c
 21413  004DF8  0E01               	movlw	high _ep_data_in
 21414  004DFA  22DA               	addwfc	fsr2h,f,c
 21415  004DFC  0E00               	movlw	0
 21416  004DFE  6EDF               	movwf	indf2,c
 21417                           
 21418                           ;mcc_generated_files/usb/usb_device.c: 354:         ep_data_out[i].Val = 0u;
 21419  004E00  0EBF               	movlw	low _ep_data_out
 21420  004E02  240D               	addwf	i2USBDeviceInit@i^0,w,c
 21421  004E04  6ED9               	movwf	fsr2l,c
 21422  004E06  6ADA               	clrf	fsr2h,c
 21423  004E08  0E01               	movlw	high _ep_data_out
 21424  004E0A  22DA               	addwfc	fsr2h,f,c
 21425  004E0C  0E00               	movlw	0
 21426  004E0E  6EDF               	movwf	indf2,c
 21427                           
 21428                           ;mcc_generated_files/usb/usb_device.c: 355:     }
 21429  004E10  2A0D               	incf	i2USBDeviceInit@i^0,f,c
 21430  004E12  0E02               	movlw	2
 21431  004E14  640D               	cpfsgt	i2USBDeviceInit@i^0,c
 21432  004E16  D7D6               	goto	i2l15176
 21433                           
 21434                           ;mcc_generated_files/usb/usb_device.c: 358:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)&B
      +                          DT[2];
 21435  004E18  0E08               	movlw	8
 21436  004E1A  0100               	movlb	0	; () banked
 21437  004E1C  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 21438  004E1E  0E04               	movlw	4
 21439  004E20  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21440                           
 21441                           ; BSR set to: 0
 21442                           ;mcc_generated_files/usb/usb_device.c: 360:     UEP0 = 0x06|0x10;
 21443  004E22  0E16               	movlw	22
 21444  004E24  6E6A               	movwf	106,c	;volatile
 21445                           
 21446                           ; BSR set to: 0
 21447                           ;mcc_generated_files/usb/usb_device.c: 362:     BDT[0].ADR = ((uint16_t)(&SetupPkt));
 21448  004E26  0E04               	movlw	4
 21449  004E28  0104               	movlb	4	; () banked
 21450  004E2A  6F03               	movwf	3,b	;volatile
 21451  004E2C  0E30               	movlw	48
 21452  004E2E  6F02               	movwf	2,b	;volatile
 21453                           
 21454                           ; BSR set to: 4
 21455                           ;mcc_generated_files/usb/usb_device.c: 363:     BDT[0].CNT = 8;
 21456  004E30  0E08               	movlw	8
 21457  004E32  6F01               	movwf	1,b	;volatile
 21458                           
 21459                           ; BSR set to: 4
 21460                           ;mcc_generated_files/usb/usb_device.c: 364:     BDT[0].STAT.Val = 0x00|0x04;
 21461  004E34  0E04               	movlw	4
 21462  004E36  6F00               	movwf	0,b	;volatile
 21463                           
 21464                           ; BSR set to: 4
 21465                           ;mcc_generated_files/usb/usb_device.c: 365:     BDT[0].STAT.Val |= 0x80;
 21466  004E38  8F00               	bsf	0,7,b	;volatile
 21467                           
 21468                           ; BSR set to: 4
 21469                           ;mcc_generated_files/usb/usb_device.c: 368:     USBActiveConfiguration = 0;
 21470  004E3A  0E00               	movlw	0
 21471  004E3C  0100               	movlb	0	; () banked
 21472  004E3E  6FD3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;mcc_generated_files/usb/usb_device.c: 370:     USB1msTickCount = 0;
 21476  004E40  0E00               	movlw	0
 21477  004E42  0102               	movlb	2	; () banked
 21478  004E44  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
 21479  004E46  0E00               	movlw	0
 21480  004E48  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 21481  004E4A  0E00               	movlw	0
 21482  004E4C  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 21483  004E4E  0E00               	movlw	0
 21484  004E50  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 21485                           
 21486                           ; BSR set to: 2
 21487                           ;mcc_generated_files/usb/usb_device.c: 371:     USBTicksSinceSuspendEnd = 0;
 21488  004E52  0E00               	movlw	0
 21489  004E54  0101               	movlb	1	; () banked
 21490  004E56  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21491                           
 21492                           ; BSR set to: 1
 21493                           ;mcc_generated_files/usb/usb_device.c: 374:     USBDeviceState = DETACHED_STATE;
 21494  004E58  0E00               	movlw	0
 21495  004E5A  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 21496                           
 21497                           ; BSR set to: 1
 21498  004E5C  0012               	return		;funcret
 21499  004E5E                     __end_ofi2_USBDeviceInit:
 21500                           	callstack 0
 21501                           
 21502 ;; *************** function _USBWakeFromSuspend *****************
 21503 ;; Defined at:
 21504 ;;		line 2307 in file "mcc_generated_files/usb/usb_device.c"
 21505 ;; Parameters:    Size  Location     Type
 21506 ;;		None
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;		None
 21509 ;; Return value:  Size  Location     Type
 21510 ;;                  1    wreg      void 
 21511 ;; Registers used:
 21512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21513 ;; Tracked objects:
 21514 ;;		On entry : 0/0
 21515 ;;		On exit  : 3F/1
 21516 ;;		Unchanged: 0/0
 21517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21518 ;;      Params:         0       0       0       0       0       0       0       0       0
 21519 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21520 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21521 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21522 ;;Total ram usage:        0 bytes
 21523 ;; Hardware stack levels used: 1
 21524 ;; Hardware stack levels required when called: 4
 21525 ;; This function calls:
 21526 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21527 ;; This function is called by:
 21528 ;;		_USBDeviceTasks
 21529 ;; This function uses a non-reentrant model
 21530 ;;
 21531                           
 21532                           	psect	text107
 21533  007878                     __ptext107:
 21534                           	callstack 0
 21535  007878                     _USBWakeFromSuspend:
 21536                           	callstack 15
 21537                           
 21538                           ;mcc_generated_files/usb/usb_device.c: 2309:     USBBusIsSuspended = 0;
 21539                           
 21540                           ; BSR set to: 1
 21541                           ;incstack = 0
 21542  007878  0E00               	movlw	0
 21543  00787A  0100               	movlb	0	; () banked
 21544  00787C  6FD0               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21545                           
 21546                           ; BSR set to: 0
 21547                           ;mcc_generated_files/usb/usb_device.c: 2315:     USER_USB_CALLBACK_EVENT_HANDLER((USB_EV
      +                          ENT)EVENT_RESUME,0,0);
 21548  00787E  0E00               	movlw	0
 21549  007880  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21550  007882  0E74               	movlw	116
 21551  007884  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21552  007886  0E00               	movlw	0
 21553  007888  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21554  00788A  0E00               	movlw	0
 21555  00788C  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21556  00788E  0E00               	movlw	0
 21557  007890  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21558  007892  0E00               	movlw	0
 21559  007894  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21560  007896  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21561                           
 21562                           ;mcc_generated_files/usb/usb_device.c: 2322:         UCONbits.SUSPND = 0;
 21563  00789A  9260               	bcf	96,1,c	;volatile
 21564                           
 21565                           ;mcc_generated_files/usb/usb_device.c: 2327:     UIEbits.ACTVIE = 0;
 21566  00789C  9464               	bcf	100,2,c	;volatile
 21567                           
 21568                           ;mcc_generated_files/usb/usb_device.c: 2345:     while(UIRbits.ACTVIF)
 21569  00789E  D001               	goto	i2l11348
 21570  0078A0                     i2l11346:
 21571                           
 21572                           ;mcc_generated_files/usb/usb_device.c: 2347:     {;mcc_generated_files/usb/usb_device.c:
      +                           2348:         (UIR &= 0xFB);
 21573  0078A0  9465               	bcf	101,2,c	;volatile
 21574  0078A2                     i2l11348:
 21575                           
 21576                           ;mcc_generated_files/usb/usb_device.c: 2345:     while(UIRbits.ACTVIF)
 21577  0078A2  B465               	btfsc	101,2,c	;volatile
 21578  0078A4  D7FD               	goto	i2l11346
 21579                           
 21580                           ;mcc_generated_files/usb/usb_device.c: 2351:     USBTicksSinceSuspendEnd = 0;
 21581  0078A6  0E00               	movlw	0
 21582  0078A8  0101               	movlb	1	; () banked
 21583  0078AA  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21584                           
 21585                           ; BSR set to: 1
 21586  0078AC  0012               	return		;funcret
 21587  0078AE                     __end_of_USBWakeFromSuspend:
 21588                           	callstack 0
 21589                           
 21590 ;; *************** function _USBSuspend *****************
 21591 ;; Defined at:
 21592 ;;		line 2249 in file "mcc_generated_files/usb/usb_device.c"
 21593 ;; Parameters:    Size  Location     Type
 21594 ;;		None
 21595 ;; Auto vars:     Size  Location     Type
 21596 ;;		None
 21597 ;; Return value:  Size  Location     Type
 21598 ;;                  1    wreg      void 
 21599 ;; Registers used:
 21600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21601 ;; Tracked objects:
 21602 ;;		On entry : 0/0
 21603 ;;		On exit  : 0/0
 21604 ;;		Unchanged: 0/0
 21605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21606 ;;      Params:         0       0       0       0       0       0       0       0       0
 21607 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21609 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21610 ;;Total ram usage:        0 bytes
 21611 ;; Hardware stack levels used: 1
 21612 ;; Hardware stack levels required when called: 4
 21613 ;; This function calls:
 21614 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21615 ;; This function is called by:
 21616 ;;		_USBDeviceTasks
 21617 ;; This function uses a non-reentrant model
 21618 ;;
 21619                           
 21620                           	psect	text108
 21621  0079A6                     __ptext108:
 21622                           	callstack 0
 21623  0079A6                     _USBSuspend:
 21624                           	callstack 15
 21625                           
 21626                           ;mcc_generated_files/usb/usb_device.c: 2274:     UIEbits.ACTVIE = 1;
 21627                           
 21628                           ; BSR set to: 1
 21629                           ;incstack = 0
 21630  0079A6  8464               	bsf	100,2,c	;volatile
 21631                           
 21632                           ;mcc_generated_files/usb/usb_device.c: 2275:     (UIR &= 0xEF);
 21633  0079A8  9865               	bcf	101,4,c	;volatile
 21634                           
 21635                           ;mcc_generated_files/usb/usb_device.c: 2278:         UCONbits.SUSPND = 1;
 21636  0079AA  8260               	bsf	96,1,c	;volatile
 21637                           
 21638                           ;mcc_generated_files/usb/usb_device.c: 2281:     USBBusIsSuspended = 1;
 21639  0079AC  0E01               	movlw	1
 21640  0079AE  0100               	movlb	0	; () banked
 21641  0079B0  6FD0               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21642                           
 21643                           ; BSR set to: 0
 21644                           ;mcc_generated_files/usb/usb_device.c: 2282:     USBTicksSinceSuspendEnd = 0;
 21645  0079B2  0E00               	movlw	0
 21646  0079B4  0101               	movlb	1	; () banked
 21647  0079B6  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21648                           
 21649                           ; BSR set to: 1
 21650                           ;mcc_generated_files/usb/usb_device.c: 2289:     USER_USB_CALLBACK_EVENT_HANDLER((USB_EV
      +                          ENT)EVENT_SUSPEND,0,0);
 21651  0079B8  0E00               	movlw	0
 21652  0079BA  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 21653  0079BC  0E75               	movlw	117
 21654  0079BE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 21655  0079C0  0E00               	movlw	0
 21656  0079C2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 21657  0079C4  0E00               	movlw	0
 21658  0079C6  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 21659  0079C8  0E00               	movlw	0
 21660  0079CA  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 21661  0079CC  0E00               	movlw	0
 21662  0079CE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 21663  0079D0  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21664  0079D4  0012               	return		;funcret
 21665  0079D6                     __end_of_USBSuspend:
 21666                           	callstack 0
 21667                           
 21668 ;; *************** function _USBStallHandler *****************
 21669 ;; Defined at:
 21670 ;;		line 2206 in file "mcc_generated_files/usb/usb_device.c"
 21671 ;; Parameters:    Size  Location     Type
 21672 ;;		None
 21673 ;; Auto vars:     Size  Location     Type
 21674 ;;		None
 21675 ;; Return value:  Size  Location     Type
 21676 ;;                  1    wreg      void 
 21677 ;; Registers used:
 21678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21679 ;; Tracked objects:
 21680 ;;		On entry : 0/0
 21681 ;;		On exit  : 0/0
 21682 ;;		Unchanged: 0/0
 21683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21684 ;;      Params:         0       0       0       0       0       0       0       0       0
 21685 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21686 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21687 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21688 ;;Total ram usage:        1 bytes
 21689 ;; Hardware stack levels used: 1
 21690 ;; This function calls:
 21691 ;;		Nothing
 21692 ;; This function is called by:
 21693 ;;		_USBDeviceTasks
 21694 ;; This function uses a non-reentrant model
 21695 ;;
 21696                           
 21697                           	psect	text109
 21698  0075E0                     __ptext109:
 21699                           	callstack 0
 21700  0075E0                     _USBStallHandler:
 21701                           	callstack 19
 21702                           
 21703                           ;mcc_generated_files/usb/usb_device.c: 2218:     if(UEP0bits.EPSTALL == 1)
 21704                           
 21705                           ;incstack = 0
 21706  0075E0  A06A               	btfss	106,0,c	;volatile
 21707  0075E2  D01D               	goto	i2l297
 21708                           
 21709                           ;mcc_generated_files/usb/usb_device.c: 2219:     {;mcc_generated_files/usb/usb_device.c:
      +                           2221:         if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->STAT.Va
      +                          l == (0x80|0x04)))
 21710  0075E4  C0C2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21711  0075E8  C0C3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21712  0075EC  0E80               	movlw	128
 21713  0075EE  18DE               	xorwf	postinc2,w,c
 21714  0075F0  A4D8               	btfss	status,2,c
 21715  0075F2  D014               	goto	i2l11384
 21716  0075F4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 21717  0075F8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21718  0075FC  0E84               	movlw	132
 21719  0075FE  18DE               	xorwf	postinc2,w,c
 21720  007600  A4D8               	btfss	status,2,c
 21721  007602  D00C               	goto	i2l11384
 21722                           
 21723                           ;mcc_generated_files/usb/usb_device.c: 2222:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2224:             pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21724  007604  C0C2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21725  007608  C0C3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21726  00760C  0E0C               	movlw	12
 21727  00760E  6EDF               	movwf	indf2,c
 21728                           
 21729                           ;mcc_generated_files/usb/usb_device.c: 2225:             pBDTEntryEP0OutCurrent->STAT.Va
      +                          l |= 0x80;
 21730  007610  C0C2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21731  007614  C0C3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21732  007618  0E00               	movlw	0
 21733  00761A  8EDB               	bsf	plusw2,7,c
 21734  00761C                     i2l11384:
 21735                           
 21736                           ;mcc_generated_files/usb/usb_device.c: 2227:         UEP0bits.EPSTALL = 0;
 21737  00761C  906A               	bcf	106,0,c	;volatile
 21738  00761E                     i2l297:
 21739                           
 21740                           ;mcc_generated_files/usb/usb_device.c: 2230:     (UIR &= 0xDF);
 21741  00761E  9A65               	bcf	101,5,c	;volatile
 21742  007620  0012               	return		;funcret
 21743  007622                     __end_of_USBStallHandler:
 21744                           	callstack 0
 21745                           
 21746 ;; *************** function _USBIncrement1msInternalTimers *****************
 21747 ;; Defined at:
 21748 ;;		line 3029 in file "mcc_generated_files/usb/usb_device.c"
 21749 ;; Parameters:    Size  Location     Type
 21750 ;;		None
 21751 ;; Auto vars:     Size  Location     Type
 21752 ;;		None
 21753 ;; Return value:  Size  Location     Type
 21754 ;;                  1    wreg      void 
 21755 ;; Registers used:
 21756 ;;		wreg, status,2, status,0
 21757 ;; Tracked objects:
 21758 ;;		On entry : 0/0
 21759 ;;		On exit  : 3E/0
 21760 ;;		Unchanged: 0/0
 21761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21762 ;;      Params:         0       0       0       0       0       0       0       0       0
 21763 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21764 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21765 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21766 ;;Total ram usage:        0 bytes
 21767 ;; Hardware stack levels used: 1
 21768 ;; This function calls:
 21769 ;;		Nothing
 21770 ;; This function is called by:
 21771 ;;		_USBDeviceTasks
 21772 ;; This function uses a non-reentrant model
 21773 ;;
 21774                           
 21775                           	psect	text110
 21776  007BB0                     __ptext110:
 21777                           	callstack 0
 21778  007BB0                     _USBIncrement1msInternalTimers:
 21779                           	callstack 19
 21780                           
 21781                           ;mcc_generated_files/usb/usb_device.c: 3037:     USB1msTickCount++;
 21782                           
 21783                           ;incstack = 0
 21784  007BB0  0E01               	movlw	1
 21785  007BB2  0102               	movlb	2	; () banked
 21786  007BB4  27CE               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 21787  007BB6  0E00               	movlw	0
 21788  007BB8  23CF               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 21789  007BBA  23D0               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 21790  007BBC  23D1               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 21791                           
 21792                           ; BSR set to: 2
 21793                           ;mcc_generated_files/usb/usb_device.c: 3038:     if(USBBusIsSuspended == 0)
 21794  007BBE  0100               	movlb	0	; () banked
 21795  007BC0  51D0               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 21796  007BC2  A4D8               	btfss	status,2,c
 21797  007BC4  0012               	return	
 21798                           
 21799                           ; BSR set to: 0
 21800                           ;mcc_generated_files/usb/usb_device.c: 3039:     {;mcc_generated_files/usb/usb_device.c:
      +                           3040:         USBTicksSinceSuspendEnd++;
 21801  007BC6  0101               	movlb	1	; () banked
 21802  007BC8  2BE4               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 21803                           
 21804                           ; BSR set to: 1
 21805                           ;mcc_generated_files/usb/usb_device.c: 3042:         if(USBTicksSinceSuspendEnd == 0)
 21806  007BCA  51E4               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 21807  007BCC  A4D8               	btfss	status,2,c
 21808  007BCE  0012               	return	
 21809                           
 21810                           ; BSR set to: 1
 21811                           ;mcc_generated_files/usb/usb_device.c: 3043:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 3044:             USBTicksSinceSuspendEnd = 255;
 21812  007BD0  69E4               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21813  007BD2  0012               	return		;funcret
 21814  007BD4                     __end_of_USBIncrement1msInternalTimers:
 21815                           	callstack 0
 21816                           
 21817 ;; *************** function _USBCtrlEPService *****************
 21818 ;; Defined at:
 21819 ;;		line 2376 in file "mcc_generated_files/usb/usb_device.c"
 21820 ;; Parameters:    Size  Location     Type
 21821 ;;		None
 21822 ;; Auto vars:     Size  Location     Type
 21823 ;;		None
 21824 ;; Return value:  Size  Location     Type
 21825 ;;                  1    wreg      void 
 21826 ;; Registers used:
 21827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21828 ;; Tracked objects:
 21829 ;;		On entry : 3F/0
 21830 ;;		On exit  : 3F/0
 21831 ;;		Unchanged: 0/0
 21832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21833 ;;      Params:         0       0       0       0       0       0       0       0       0
 21834 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21835 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21836 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21837 ;;Total ram usage:        1 bytes
 21838 ;; Hardware stack levels used: 1
 21839 ;; Hardware stack levels required when called: 7
 21840 ;; This function calls:
 21841 ;;		_USBCtrlTrfInHandler
 21842 ;;		_USBCtrlTrfOutHandler
 21843 ;;		_USBCtrlTrfSetupHandler
 21844 ;;		i2_memcpy
 21845 ;; This function is called by:
 21846 ;;		_USBDeviceTasks
 21847 ;; This function uses a non-reentrant model
 21848 ;;
 21849                           
 21850                           	psect	text111
 21851  006B0C                     __ptext111:
 21852                           	callstack 0
 21853  006B0C                     _USBCtrlEPService:
 21854                           	callstack 12
 21855                           
 21856                           ; BSR set to: 0
 21857                           ;mcc_generated_files/usb/usb_device.c: 2382:         USBStatusStageTimeoutCounter = (uin
      +                          t8_t)45;
 21858                           
 21859                           ;incstack = 0
 21860  006B0C  0E2D               	movlw	45
 21861  006B0E  6FCD               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 21862                           
 21863                           ; BSR set to: 0
 21864                           ;mcc_generated_files/usb/usb_device.c: 2386:     if((USTATcopy.Val & ~0x02) == 0x00)
 21865  006B10  C05D  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21866  006B14  0EFD               	movlw	253
 21867  006B16  161E               	andwf	??_USBCtrlEPService^0,f,c
 21868  006B18  A4D8               	btfss	status,2,c
 21869  006B1A  D03B               	goto	i2l14942
 21870                           
 21871                           ; BSR set to: 0
 21872                           ;mcc_generated_files/usb/usb_device.c: 2387:     {;mcc_generated_files/usb/usb_device.c:
      +                           2390:             pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val & 0
      +                          x7E)>>1];
 21873  006B1C  C05D  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21874  006B20  90D8               	bcf	status,0,c
 21875  006B22  321E               	rrcf	??_USBCtrlEPService^0,f,c
 21876  006B24  0E3F               	movlw	63
 21877  006B26  161E               	andwf	??_USBCtrlEPService^0,f,c
 21878  006B28  501E               	movf	??_USBCtrlEPService^0,w,c
 21879  006B2A  0D04               	mullw	4
 21880  006B2C  0E00               	movlw	0
 21881  006B2E  24F3               	addwf	243,w,c
 21882  006B30  6FC2               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 21883  006B32  0E04               	movlw	4
 21884  006B34  20F4               	addwfc	prodh,w,c
 21885  006B36  6FC3               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;mcc_generated_files/usb/usb_device.c: 2398:         pBDTEntryEP0OutNext = pBDTEntryEP0O
      +                          utCurrent;
 21889  006B38  C0C2  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 21890  006B3C  C0C3  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 21891                           
 21892                           ; BSR set to: 0
 21893                           ;mcc_generated_files/usb/usb_device.c: 2400:         pBDTEntryEP0OutNext = (volatile BDT
      +                          _ENTRY*)(((uint16_t)pBDTEntryEP0OutNext) ^ 0x0004);
 21894  006B40  0E04               	movlw	4
 21895  006B42  1859               	xorwf	_pBDTEntryEP0OutNext^0,w,c
 21896  006B44  6E59               	movwf	_pBDTEntryEP0OutNext^0,c
 21897  006B46  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 21898  006B48  6E5A               	movwf	(_pBDTEntryEP0OutNext+1)^0,c
 21899                           
 21900                           ; BSR set to: 0
 21901                           ;mcc_generated_files/usb/usb_device.c: 2403:         if(pBDTEntryEP0OutCurrent->STAT.PID
      +                           == 0xD)
 21902  006B4A  C0C2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21903  006B4E  C0C3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21904  006B52  30DF               	rrcf	223,w,c
 21905  006B54  32E8               	rrcf	wreg,f,c
 21906  006B56  0B0F               	andlw	15
 21907  006B58  0A0D               	xorlw	13
 21908  006B5A  A4D8               	btfss	status,2,c
 21909  006B5C  D017               	goto	i2l14940
 21910                           
 21911                           ; BSR set to: 0
 21912                           ;mcc_generated_files/usb/usb_device.c: 2404:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2409:             memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCu
      +                          rrent->ADR)), 8);
 21913  006B5E  0E30               	movlw	48
 21914  006B60  6E01               	movwf	i2memcpy@d1^0,c
 21915  006B62  0E04               	movlw	4
 21916  006B64  6E02               	movwf	(i2memcpy@d1+1)^0,c
 21917  006B66  EE20 F002          	lfsr	2,2
 21918  006B6A  51C2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21919  006B6C  26D9               	addwf	fsr2l,f,c
 21920  006B6E  51C3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21921  006B70  22DA               	addwfc	fsr2h,f,c
 21922  006B72  CFDE F003          	movff	postinc2,i2memcpy@s1
 21923  006B76  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 21924  006B7A  0E00               	movlw	0
 21925  006B7C  6E06               	movwf	(i2memcpy@n+1)^0,c
 21926  006B7E  0E08               	movlw	8
 21927  006B80  6E05               	movwf	i2memcpy@n^0,c
 21928  006B82  ECCE  F03A         	call	i2_memcpy	;wreg free
 21929                           
 21930                           ; BSR set to: 0
 21931                           ;mcc_generated_files/usb/usb_device.c: 2412:             USBCtrlTrfSetupHandler();
 21932  006B86  EC65  F036         	call	_USBCtrlTrfSetupHandler	;wreg free
 21933                           
 21934                           ;mcc_generated_files/usb/usb_device.c: 2413:         }
 21935  006B8A  0012               	return	
 21936  006B8C                     i2l14940:
 21937                           
 21938                           ; BSR set to: 0
 21939                           ;mcc_generated_files/usb/usb_device.c: 2415:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2417:             USBCtrlTrfOutHandler();
 21940  006B8C  ECEE  F038         	call	_USBCtrlTrfOutHandler	;wreg free
 21941  006B90  0012               	return	
 21942  006B92                     i2l14942:
 21943                           
 21944                           ; BSR set to: 0
 21945  006B92  505D               	movf	_USTATcopy^0,w,c	;volatile
 21946  006B94  0BFD               	andlw	253
 21947  006B96  0A04               	xorlw	4
 21948  006B98  A4D8               	btfss	status,2,c
 21949  006B9A  0012               	return	
 21950                           
 21951                           ; BSR set to: 0
 21952                           ;mcc_generated_files/usb/usb_device.c: 2421:     {;mcc_generated_files/usb/usb_device.c:
      +                           2424:         USBCtrlTrfInHandler();
 21953  006B9C  EC21  F032         	call	_USBCtrlTrfInHandler	;wreg free
 21954                           
 21955                           ; BSR set to: 0
 21956  006BA0  0012               	return		;funcret
 21957  006BA2                     __end_of_USBCtrlEPService:
 21958                           	callstack 0
 21959                           
 21960 ;; *************** function i2_memcpy *****************
 21961 ;; Defined at:
 21962 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 21963 ;; Parameters:    Size  Location     Type
 21964 ;;  d1              2    0[COMRAM] PTR void 
 21965 ;;		 -> executeCommand@strCommand(30), fila(320), SetupPkt(8), 
 21966 ;;  s1              2    2[COMRAM] PTR const void 
 21967 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(320), 
 21968 ;;		 -> CtrlTrfData(8), RAM(2047), SetupPkt(8), NULL(0), 
 21969 ;;  n               2    4[COMRAM] unsigned int 
 21970 ;; Auto vars:     Size  Location     Type
 21971 ;;  s               2    8[COMRAM] PTR const unsigned char 
 21972 ;;		 -> executeCommand@strCommand(30), lastToken(30), readBuffer(32), fila(320), 
 21973 ;;		 -> CtrlTrfData(8), RAM(2047), SetupPkt(8), NULL(0), 
 21974 ;;  d               2    6[COMRAM] PTR unsigned char 
 21975 ;;		 -> executeCommand@strCommand(30), fila(320), SetupPkt(8), 
 21976 ;;  tmp             1   10[COMRAM] unsigned char 
 21977 ;; Return value:  Size  Location     Type
 21978 ;;                  2    0[COMRAM] PTR void 
 21979 ;; Registers used:
 21980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21981 ;; Tracked objects:
 21982 ;;		On entry : 3F/0
 21983 ;;		On exit  : 3F/0
 21984 ;;		Unchanged: 3F/0
 21985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21986 ;;      Params:         6       0       0       0       0       0       0       0       0
 21987 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21988 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21989 ;;      Totals:        11       0       0       0       0       0       0       0       0
 21990 ;;Total ram usage:       11 bytes
 21991 ;; Hardware stack levels used: 1
 21992 ;; This function calls:
 21993 ;;		Nothing
 21994 ;; This function is called by:
 21995 ;;		_USBCtrlEPService
 21996 ;; This function uses a non-reentrant model
 21997 ;;
 21998                           
 21999                           	psect	text112
 22000  00759C                     __ptext112:
 22001                           	callstack 0
 22002  00759C                     i2_memcpy:
 22003                           	callstack 18
 22004                           
 22005                           ; BSR set to: 0
 22006                           
 22007                           ; BSR set to: 0
 22008                           ;incstack = 0
 22009  00759C  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 22010  0075A0  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 22011  0075A4  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 22012  0075A8  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 22013  0075AC  D010               	goto	i2l11260
 22014  0075AE                     i2l11252:
 22015                           
 22016                           ; BSR set to: 0
 22017  0075AE  C009  FFD9         	movff	i2memcpy@s,fsr2l
 22018  0075B2  C00A  FFDA         	movff	i2memcpy@s+1,fsr2h
 22019  0075B6  50DF               	movf	indf2,w,c
 22020  0075B8  6E0B               	movwf	i2memcpy@tmp^0,c
 22021                           
 22022                           ; BSR set to: 0
 22023  0075BA  4A09               	infsnz	i2memcpy@s^0,f,c
 22024  0075BC  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 22025                           
 22026                           ; BSR set to: 0
 22027  0075BE  C007  FFD9         	movff	i2memcpy@d,fsr2l
 22028  0075C2  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 22029  0075C6  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 22030                           
 22031                           ; BSR set to: 0
 22032  0075CA  4A07               	infsnz	i2memcpy@d^0,f,c
 22033  0075CC  2A08               	incf	(i2memcpy@d+1)^0,f,c
 22034  0075CE                     i2l11260:
 22035                           
 22036                           ; BSR set to: 0
 22037  0075CE  0605               	decf	i2memcpy@n^0,f,c
 22038  0075D0  A0D8               	btfss	status,0,c
 22039  0075D2  0606               	decf	(i2memcpy@n+1)^0,f,c
 22040  0075D4  2805               	incf	i2memcpy@n^0,w,c
 22041  0075D6  E1EB               	bnz	i2l11252
 22042  0075D8  2806               	incf	(i2memcpy@n+1)^0,w,c
 22043  0075DA  B4D8               	btfsc	status,2,c
 22044  0075DC  0012               	return	
 22045  0075DE  D7E7               	goto	i2l11252
 22046  0075E0                     __end_ofi2_memcpy:
 22047                           	callstack 0
 22048                           
 22049 ;; *************** function _USBCtrlTrfSetupHandler *****************
 22050 ;; Defined at:
 22051 ;;		line 2469 in file "mcc_generated_files/usb/usb_device.c"
 22052 ;; Parameters:    Size  Location     Type
 22053 ;;		None
 22054 ;; Auto vars:     Size  Location     Type
 22055 ;;		None
 22056 ;; Return value:  Size  Location     Type
 22057 ;;                  1    wreg      void 
 22058 ;; Registers used:
 22059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22060 ;; Tracked objects:
 22061 ;;		On entry : 3F/0
 22062 ;;		On exit  : 3F/0
 22063 ;;		Unchanged: 0/0
 22064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22065 ;;      Params:         0       0       0       0       0       0       0       0       0
 22066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22069 ;;Total ram usage:        0 bytes
 22070 ;; Hardware stack levels used: 1
 22071 ;; Hardware stack levels required when called: 6
 22072 ;; This function calls:
 22073 ;;		_USBCheckStdRequest
 22074 ;;		_USBCtrlEPServiceComplete
 22075 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22076 ;; This function is called by:
 22077 ;;		_USBCtrlEPService
 22078 ;; This function uses a non-reentrant model
 22079 ;;
 22080                           
 22081                           	psect	text113
 22082  006CCA                     __ptext113:
 22083                           	callstack 0
 22084  006CCA                     _USBCtrlTrfSetupHandler:
 22085                           	callstack 12
 22086                           
 22087                           ; BSR set to: 0
 22088                           ;mcc_generated_files/usb/usb_device.c: 2474:     shortPacketStatus = 0;
 22089                           
 22090                           ; BSR set to: 0
 22091                           ;incstack = 0
 22092  006CCA  0E00               	movlw	0
 22093  006CCC  6FD2               	movwf	_shortPacketStatus& (0+255),b	;volatile
 22094                           
 22095                           ;mcc_generated_files/usb/usb_device.c: 2475:     USBDeferStatusStagePacket = 0;
 22096  006CCE  0E00               	movlw	0
 22097  006CD0  6FCC               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 22098                           
 22099                           ;mcc_generated_files/usb/usb_device.c: 2476:     USBDeferINDataStagePackets = 0;
 22100  006CD2  0E00               	movlw	0
 22101  006CD4  6FC9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22102                           
 22103                           ;mcc_generated_files/usb/usb_device.c: 2477:     USBDeferOUTDataStagePackets = 0;
 22104  006CD6  0E00               	movlw	0
 22105  006CD8  0101               	movlb	1	; () banked
 22106  006CDA  6FE5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22107                           
 22108                           ;mcc_generated_files/usb/usb_device.c: 2478:     BothEP0OutUOWNsSet = 0;
 22109  006CDC  0E00               	movlw	0
 22110  006CDE  0100               	movlb	0	; () banked
 22111  006CE0  6FCE               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22112                           
 22113                           ;mcc_generated_files/usb/usb_device.c: 2479:     controlTransferState = 0;
 22114  006CE2  0E00               	movlw	0
 22115  006CE4  6E5B               	movwf	_controlTransferState^0,c	;volatile
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;mcc_generated_files/usb/usb_device.c: 2488:     pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22119  006CE6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22120  006CEA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22121  006CEE  0E7F               	movlw	127
 22122  006CF0  16DF               	andwf	indf2,f,c
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;mcc_generated_files/usb/usb_device.c: 2490:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)(
      +                          ((uint16_t)pBDTEntryIn[0]) ^ 0x0004);
 22126  006CF2  0E04               	movlw	4
 22127  006CF4  19B6               	xorwf	_pBDTEntryIn& (0+255),w,b
 22128  006CF6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 22129  006CF8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22130  006CFA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;mcc_generated_files/usb/usb_device.c: 2491:     pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22134  006CFC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22135  006D00  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22136  006D04  0E7F               	movlw	127
 22137  006D06  16DF               	andwf	indf2,f,c
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;mcc_generated_files/usb/usb_device.c: 2492:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)(
      +                          ((uint16_t)pBDTEntryIn[0]) ^ 0x0004);
 22141  006D08  0E04               	movlw	4
 22142  006D0A  19B6               	xorwf	_pBDTEntryIn& (0+255),w,b
 22143  006D0C  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 22144  006D0E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22145  006D10  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22146                           
 22147                           ; BSR set to: 0
 22148                           ;mcc_generated_files/usb/usb_device.c: 2493:     pBDTEntryEP0OutNext->STAT.Val &= ~(0x80
      +                          );
 22149  006D12  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22150  006D16  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22151  006D1A  0E7F               	movlw	127
 22152  006D1C  16DF               	andwf	indf2,f,c
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;mcc_generated_files/usb/usb_device.c: 2495:     inPipes[0].info.Val = 0;
 22156  006D1E  0E00               	movlw	0
 22157  006D20  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22158                           
 22159                           ; BSR set to: 0
 22160                           ;mcc_generated_files/usb/usb_device.c: 2496:     inPipes[0].wCount.Val = 0;
 22161  006D22  0E00               	movlw	0
 22162  006D24  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22163  006D26  0E00               	movlw	0
 22164  006D28  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;mcc_generated_files/usb/usb_device.c: 2497:     outPipes[0].info.Val = 0;
 22168  006D2A  0E00               	movlw	0
 22169  006D2C  6FAB               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22170                           
 22171                           ; BSR set to: 0
 22172                           ;mcc_generated_files/usb/usb_device.c: 2498:     outPipes[0].wCount.Val = 0;
 22173  006D2E  0E00               	movlw	0
 22174  006D30  6FAD               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22175  006D32  0E00               	movlw	0
 22176  006D34  6FAC               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;mcc_generated_files/usb/usb_device.c: 2504:     USBCheckStdRequest();
 22180  006D36  EC06  F02E         	call	_USBCheckStdRequest	;wreg free
 22181                           
 22182                           ;mcc_generated_files/usb/usb_device.c: 2505:     USER_USB_CALLBACK_EVENT_HANDLER((USB_EV
      +                          ENT)EVENT_EP0_REQUEST,0,0);
 22183  006D3A  0E00               	movlw	0
 22184  006D3C  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 22185  006D3E  0E03               	movlw	3
 22186  006D40  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 22187  006D42  0E00               	movlw	0
 22188  006D44  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 22189  006D46  0E00               	movlw	0
 22190  006D48  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 22191  006D4A  0E00               	movlw	0
 22192  006D4C  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 22193  006D4E  0E00               	movlw	0
 22194  006D50  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 22195  006D52  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22196                           
 22197                           ;mcc_generated_files/usb/usb_device.c: 2518:     USBCtrlEPServiceComplete();
 22198  006D56  EC92  F02D         	call	_USBCtrlEPServiceComplete	;wreg free
 22199                           
 22200                           ; BSR set to: 0
 22201  006D5A  0012               	return		;funcret
 22202  006D5C                     __end_of_USBCtrlTrfSetupHandler:
 22203                           	callstack 0
 22204                           
 22205 ;; *************** function _USBCtrlEPServiceComplete *****************
 22206 ;; Defined at:
 22207 ;;		line 1620 in file "mcc_generated_files/usb/usb_device.c"
 22208 ;; Parameters:    Size  Location     Type
 22209 ;;		None
 22210 ;; Auto vars:     Size  Location     Type
 22211 ;;		None
 22212 ;; Return value:  Size  Location     Type
 22213 ;;                  1    wreg      void 
 22214 ;; Registers used:
 22215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22216 ;; Tracked objects:
 22217 ;;		On entry : 0/0
 22218 ;;		On exit  : 3F/0
 22219 ;;		Unchanged: 0/0
 22220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22221 ;;      Params:         0       0       0       0       0       0       0       0       0
 22222 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22223 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22224 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22225 ;;Total ram usage:        0 bytes
 22226 ;; Hardware stack levels used: 1
 22227 ;; Hardware stack levels required when called: 2
 22228 ;; This function calls:
 22229 ;;		_USBCtrlEPAllowDataStage
 22230 ;;		_USBCtrlEPAllowStatusStage
 22231 ;; This function is called by:
 22232 ;;		_USBCtrlTrfSetupHandler
 22233 ;; This function uses a non-reentrant model
 22234 ;;
 22235                           
 22236                           	psect	text114
 22237  005B24                     __ptext114:
 22238                           	callstack 0
 22239  005B24                     _USBCtrlEPServiceComplete:
 22240                           	callstack 15
 22241                           
 22242                           ;mcc_generated_files/usb/usb_device.c: 1626:     UCONbits.PKTDIS = 0;
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;incstack = 0
 22246  005B24  9860               	bcf	96,4,c	;volatile
 22247                           
 22248                           ;mcc_generated_files/usb/usb_device.c: 1632:     if(inPipes[0].info.bits.busy == 0)
 22249  005B26  0100               	movlb	0	; () banked
 22250  005B28  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 22251  005B2A  D03A               	goto	i2l221
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;mcc_generated_files/usb/usb_device.c: 1633:     {;mcc_generated_files/usb/usb_device.c:
      +                           1634:         if(outPipes[0].info.bits.busy == 1)
 22255  005B2C  AFAB               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 22256  005B2E  D00D               	goto	i2l9754
 22257                           
 22258                           ; BSR set to: 0
 22259                           ;mcc_generated_files/usb/usb_device.c: 1635:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1636:             controlTransferState = 2;
 22260  005B30  0E02               	movlw	2
 22261  005B32  6E5B               	movwf	_controlTransferState^0,c	;volatile
 22262                           
 22263                           ;mcc_generated_files/usb/usb_device.c: 1647:             if(USBDeferOUTDataStagePackets 
      +                          == 0)
 22264  005B34  0101               	movlb	1	; () banked
 22265  005B36  51E5               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 22266  005B38  B4D8               	btfsc	status,2,c
 22267                           
 22268                           ; BSR set to: 1
 22269                           ;mcc_generated_files/usb/usb_device.c: 1648:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1649:                 USBCtrlEPAllowDataStage();
 22270  005B3A  EC4C  F034         	call	_USBCtrlEPAllowDataStage	;wreg free
 22271                           
 22272                           ;mcc_generated_files/usb/usb_device.c: 1654:             USBStatusStageEnabledFlag2 = 0;
 22273  005B3E  0E00               	movlw	0
 22274  005B40  0100               	movlb	0	; () banked
 22275  005B42  6FCA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;mcc_generated_files/usb/usb_device.c: 1655:             USBStatusStageEnabledFlag1 = 0;
 22279  005B44  0E00               	movlw	0
 22280  005B46  6FCB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22281                           
 22282                           ;mcc_generated_files/usb/usb_device.c: 1656:         }
 22283  005B48  0012               	return	
 22284  005B4A                     i2l9754:
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;mcc_generated_files/usb/usb_device.c: 1658:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1663:             pBDTEntryEP0OutNext->CNT = 8;
 22288  005B4A  EE20 F001          	lfsr	2,1
 22289  005B4E  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 22290  005B50  26D9               	addwf	fsr2l,f,c
 22291  005B52  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22292  005B54  22DA               	addwfc	fsr2h,f,c
 22293  005B56  0E08               	movlw	8
 22294  005B58  6EDF               	movwf	indf2,c
 22295                           
 22296                           ;mcc_generated_files/usb/usb_device.c: 1664:             pBDTEntryEP0OutNext->ADR = ((ui
      +                          nt16_t)(&SetupPkt));
 22297  005B5A  EE20 F002          	lfsr	2,2
 22298  005B5E  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 22299  005B60  26D9               	addwf	fsr2l,f,c
 22300  005B62  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22301  005B64  22DA               	addwfc	fsr2h,f,c
 22302  005B66  0E30               	movlw	48
 22303  005B68  6EDE               	movwf	postinc2,c
 22304  005B6A  0E04               	movlw	4
 22305  005B6C  6EDD               	movwf	postdec2,c
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;mcc_generated_files/usb/usb_device.c: 1665:             pBDTEntryEP0OutNext->STAT.Val =
      +                           0x00|(0x08 & 0x08)|0x04;
 22309  005B6E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22310  005B72  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22311  005B76  0E0C               	movlw	12
 22312  005B78  6EDF               	movwf	indf2,c
 22313                           
 22314                           ; BSR set to: 0
 22315                           ;mcc_generated_files/usb/usb_device.c: 1666:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 22316  005B7A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22317  005B7E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22318  005B82  0E00               	movlw	0
 22319  005B84  8EDB               	bsf	plusw2,7,c
 22320                           
 22321                           ;mcc_generated_files/usb/usb_device.c: 1667:             pBDTEntryIn[0]->STAT.Val = 0x04
      +                          ;
 22322  005B86  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22323  005B8A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22324  005B8E  0E04               	movlw	4
 22325  005B90  6EDF               	movwf	indf2,c
 22326                           
 22327                           ; BSR set to: 0
 22328                           ;mcc_generated_files/usb/usb_device.c: 1668:             pBDTEntryIn[0]->STAT.Val |= 0x8
      +                          0;
 22329  005B92  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22330  005B96  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22331  005B9A  0E00               	movlw	0
 22332  005B9C  8EDB               	bsf	plusw2,7,c
 22333  005B9E  0012               	return	
 22334  005BA0                     i2l221:
 22335                           
 22336                           ; BSR set to: 0
 22337                           ;mcc_generated_files/usb/usb_device.c: 1672:     {;mcc_generated_files/usb/usb_device.c:
      +                           1673:   if(SetupPkt.DataDir == (0x80>>7))
 22338  005BA0  0104               	movlb	4	; () banked
 22339  005BA2  AF30               	btfss	48,7,b	;volatile
 22340  005BA4  D012               	goto	i2l9774
 22341                           
 22342                           ; BSR set to: 4
 22343                           ;mcc_generated_files/usb/usb_device.c: 1674:   {;mcc_generated_files/usb/usb_device.c: 1
      +                          675:    controlTransferState = 1;
 22344  005BA6  0E01               	movlw	1
 22345  005BA8  6E5B               	movwf	_controlTransferState^0,c	;volatile
 22346                           
 22347                           ;mcc_generated_files/usb/usb_device.c: 1689:    if(USBDeferINDataStagePackets == 0)
 22348  005BAA  0100               	movlb	0	; () banked
 22349  005BAC  51C9               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 22350  005BAE  B4D8               	btfsc	status,2,c
 22351                           
 22352                           ; BSR set to: 0
 22353                           ;mcc_generated_files/usb/usb_device.c: 1690:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1691:                 USBCtrlEPAllowDataStage();
 22354  005BB0  EC4C  F034         	call	_USBCtrlEPAllowDataStage	;wreg free
 22355  005BB4                     i2l9766:
 22356                           
 22357                           ;mcc_generated_files/usb/usb_device.c: 1714:             USBStatusStageEnabledFlag2 = 0;
 22358  005BB4  0E00               	movlw	0
 22359  005BB6  0100               	movlb	0	; () banked
 22360  005BB8  6FCA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22361                           
 22362                           ; BSR set to: 0
 22363                           ;mcc_generated_files/usb/usb_device.c: 1715:             USBStatusStageEnabledFlag1 = 0;
 22364  005BBA  0E00               	movlw	0
 22365  005BBC  6FCB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22366                           
 22367                           ; BSR set to: 0
 22368                           ;mcc_generated_files/usb/usb_device.c: 1716:             if(USBDeferStatusStagePacket ==
      +                           0)
 22369  005BBE  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 22370  005BC0  A4D8               	btfss	status,2,c
 22371  005BC2  0012               	return	
 22372                           
 22373                           ; BSR set to: 0
 22374                           ;mcc_generated_files/usb/usb_device.c: 1717:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1718:                 USBCtrlEPAllowStatusStage();
 22375  005BC4  ECBF  F031         	call	_USBCtrlEPAllowStatusStage	;wreg free
 22376  005BC8  0012               	return	
 22377  005BCA                     i2l9774:
 22378                           
 22379                           ; BSR set to: 4
 22380                           ;mcc_generated_files/usb/usb_device.c: 1722:   {;mcc_generated_files/usb/usb_device.c: 1
      +                          733:    controlTransferState = 2;
 22381  005BCA  0E02               	movlw	2
 22382  005BCC  6E5B               	movwf	_controlTransferState^0,c	;volatile
 22383                           
 22384                           ; BSR set to: 4
 22385                           ;mcc_generated_files/usb/usb_device.c: 1736:    pBDTEntryEP0OutNext->CNT = 8;
 22386  005BCE  EE20 F001          	lfsr	2,1
 22387  005BD2  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 22388  005BD4  26D9               	addwf	fsr2l,f,c
 22389  005BD6  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22390  005BD8  22DA               	addwfc	fsr2h,f,c
 22391  005BDA  0E08               	movlw	8
 22392  005BDC  6EDF               	movwf	indf2,c
 22393                           
 22394                           ; BSR set to: 4
 22395                           ;mcc_generated_files/usb/usb_device.c: 1737:    pBDTEntryEP0OutNext->ADR = ((uint16_t)(&
      +                          SetupPkt));
 22396  005BDE  EE20 F002          	lfsr	2,2
 22397  005BE2  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 22398  005BE4  26D9               	addwf	fsr2l,f,c
 22399  005BE6  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22400  005BE8  22DA               	addwfc	fsr2h,f,c
 22401  005BEA  0E30               	movlw	48
 22402  005BEC  6EDE               	movwf	postinc2,c
 22403  005BEE  0E04               	movlw	4
 22404  005BF0  6EDD               	movwf	postdec2,c
 22405                           
 22406                           ; BSR set to: 4
 22407                           ;mcc_generated_files/usb/usb_device.c: 1738:    pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22408  005BF2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22409  005BF6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22410  005BFA  0E04               	movlw	4
 22411  005BFC  6EDF               	movwf	indf2,c
 22412                           
 22413                           ; BSR set to: 4
 22414                           ;mcc_generated_files/usb/usb_device.c: 1739:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 22415  005BFE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22416  005C02  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22417  005C06  0E00               	movlw	0
 22418  005C08  8EDB               	bsf	plusw2,7,c
 22419  005C0A  D7D4               	goto	i2l9766
 22420  005C0C                     __end_of_USBCtrlEPServiceComplete:
 22421                           	callstack 0
 22422                           
 22423 ;; *************** function _USBCtrlEPAllowDataStage *****************
 22424 ;; Defined at:
 22425 ;;		line 1492 in file "mcc_generated_files/usb/usb_device.c"
 22426 ;; Parameters:    Size  Location     Type
 22427 ;;		None
 22428 ;; Auto vars:     Size  Location     Type
 22429 ;;		None
 22430 ;; Return value:  Size  Location     Type
 22431 ;;                  1    wreg      void 
 22432 ;; Registers used:
 22433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22434 ;; Tracked objects:
 22435 ;;		On entry : 3E/1
 22436 ;;		On exit  : 3E/0
 22437 ;;		Unchanged: 0/0
 22438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22439 ;;      Params:         0       0       0       0       0       0       0       0       0
 22440 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22441 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22442 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22443 ;;Total ram usage:        0 bytes
 22444 ;; Hardware stack levels used: 1
 22445 ;; Hardware stack levels required when called: 1
 22446 ;; This function calls:
 22447 ;;		_USBCtrlTrfTxService
 22448 ;; This function is called by:
 22449 ;;		_USBCtrlEPServiceComplete
 22450 ;; This function uses a non-reentrant model
 22451 ;;
 22452                           
 22453                           	psect	text115
 22454  006898                     __ptext115:
 22455                           	callstack 0
 22456  006898                     _USBCtrlEPAllowDataStage:
 22457                           	callstack 15
 22458                           
 22459                           ;mcc_generated_files/usb/usb_device.c: 1494:     USBDeferINDataStagePackets = 0;
 22460                           
 22461                           ; BSR set to: 0
 22462                           ;incstack = 0
 22463  006898  0E00               	movlw	0
 22464  00689A  0100               	movlb	0	; () banked
 22465  00689C  6FC9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22466                           
 22467                           ;mcc_generated_files/usb/usb_device.c: 1495:     USBDeferOUTDataStagePackets = 0;
 22468  00689E  0E00               	movlw	0
 22469  0068A0  0101               	movlb	1	; () banked
 22470  0068A2  6FE5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22471                           
 22472                           ; BSR set to: 1
 22473                           ;mcc_generated_files/usb/usb_device.c: 1497:     if(controlTransferState == 2)
 22474  0068A4  0E02               	movlw	2
 22475  0068A6  185B               	xorwf	_controlTransferState^0,w,c	;volatile
 22476  0068A8  A4D8               	btfss	status,2,c
 22477  0068AA  D01F               	goto	i2l8802
 22478                           
 22479                           ; BSR set to: 1
 22480                           ;mcc_generated_files/usb/usb_device.c: 1498:     {;mcc_generated_files/usb/usb_device.c:
      +                           1500:         pBDTEntryEP0OutNext->CNT = 8;
 22481  0068AC  EE20 F001          	lfsr	2,1
 22482  0068B0  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 22483  0068B2  26D9               	addwf	fsr2l,f,c
 22484  0068B4  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22485  0068B6  22DA               	addwfc	fsr2h,f,c
 22486  0068B8  0E08               	movlw	8
 22487  0068BA  6EDF               	movwf	indf2,c
 22488                           
 22489                           ;mcc_generated_files/usb/usb_device.c: 1501:         pBDTEntryEP0OutNext->ADR = ((uint16
      +                          _t)(&CtrlTrfData));
 22490  0068BC  EE20 F002          	lfsr	2,2
 22491  0068C0  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 22492  0068C2  26D9               	addwf	fsr2l,f,c
 22493  0068C4  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 22494  0068C6  22DA               	addwfc	fsr2h,f,c
 22495  0068C8  0E38               	movlw	56
 22496  0068CA  6EDE               	movwf	postinc2,c
 22497  0068CC  0E04               	movlw	4
 22498  0068CE  6EDD               	movwf	postdec2,c
 22499                           
 22500                           ; BSR set to: 1
 22501                           ;mcc_generated_files/usb/usb_device.c: 1502:         pBDTEntryEP0OutNext->STAT.Val = 0x4
      +                          0|(0x08 & 0x08);
 22502  0068D0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22503  0068D4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22504  0068D8  0E48               	movlw	72
 22505  0068DA  6EDF               	movwf	indf2,c
 22506                           
 22507                           ; BSR set to: 1
 22508                           ;mcc_generated_files/usb/usb_device.c: 1503:         pBDTEntryEP0OutNext->STAT.Val |= 0x
      +                          80;
 22509  0068DC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22510  0068E0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22511  0068E4  0E00               	movlw	0
 22512  0068E6  8EDB               	bsf	plusw2,7,c
 22513                           
 22514                           ;mcc_generated_files/usb/usb_device.c: 1504:     }
 22515  0068E8  0012               	return	
 22516  0068EA                     i2l8802:
 22517                           
 22518                           ; BSR set to: 1
 22519                           ;mcc_generated_files/usb/usb_device.c: 1506:     {;mcc_generated_files/usb/usb_device.c:
      +                           1509:   if(SetupPkt.wLength < inPipes[0].wCount.Val)
 22520  0068EA  0100               	movlb	0	; () banked
 22521  0068EC  51B4               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 22522  0068EE  0104               	movlb	4	; () banked
 22523  0068F0  5D36               	subwf	54,w,b	;volatile
 22524  0068F2  0100               	movlb	0	; () banked
 22525  0068F4  51B5               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 22526  0068F6  0104               	movlb	4	; () banked
 22527  0068F8  5937               	subwfb	55,w,b	;volatile
 22528  0068FA  B0D8               	btfsc	status,0,c
 22529  0068FC  D004               	goto	i2l8806
 22530                           
 22531                           ; BSR set to: 4
 22532                           ;mcc_generated_files/usb/usb_device.c: 1510:   {;mcc_generated_files/usb/usb_device.c: 1
      +                          511:    inPipes[0].wCount.Val = SetupPkt.wLength;
 22533  0068FE  C436 F0B4          	movff	1078,_inPipes+4	;volatile
 22534  006902  C437 F0B5          	movff	1079,_inPipes+5	;volatile
 22535  006906                     i2l8806:
 22536                           
 22537                           ; BSR set to: 4
 22538                           ;mcc_generated_files/usb/usb_device.c: 1513:   USBCtrlTrfTxService();
 22539  006906  ECE7  F02E         	call	_USBCtrlTrfTxService	;wreg free
 22540                           
 22541                           ;mcc_generated_files/usb/usb_device.c: 1518:   pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTr
      +                          fData));
 22542  00690A  0100               	movlb	0	; () banked
 22543  00690C  EE20 F002          	lfsr	2,2
 22544  006910  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 22545  006912  26D9               	addwf	fsr2l,f,c
 22546  006914  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22547  006916  22DA               	addwfc	fsr2h,f,c
 22548  006918  0E38               	movlw	56
 22549  00691A  6EDE               	movwf	postinc2,c
 22550  00691C  0E04               	movlw	4
 22551  00691E  6EDD               	movwf	postdec2,c
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;mcc_generated_files/usb/usb_device.c: 1519:   pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0
      +                          x08);
 22555  006920  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22556  006924  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22557  006928  0E48               	movlw	72
 22558  00692A  6EDF               	movwf	indf2,c
 22559                           
 22560                           ; BSR set to: 0
 22561                           ;mcc_generated_files/usb/usb_device.c: 1520:         pBDTEntryIn[0]->STAT.Val |= 0x80;
 22562  00692C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 22563  006930  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22564  006934  0E00               	movlw	0
 22565  006936  8EDB               	bsf	plusw2,7,c
 22566  006938  0012               	return		;funcret
 22567  00693A                     __end_of_USBCtrlEPAllowDataStage:
 22568                           	callstack 0
 22569                           
 22570 ;; *************** function _USBCheckStdRequest *****************
 22571 ;; Defined at:
 22572 ;;		line 2690 in file "mcc_generated_files/usb/usb_device.c"
 22573 ;; Parameters:    Size  Location     Type
 22574 ;;		None
 22575 ;; Auto vars:     Size  Location     Type
 22576 ;;		None
 22577 ;; Return value:  Size  Location     Type
 22578 ;;                  1    wreg      void 
 22579 ;; Registers used:
 22580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22581 ;; Tracked objects:
 22582 ;;		On entry : 3F/0
 22583 ;;		On exit  : 0/0
 22584 ;;		Unchanged: 0/0
 22585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22586 ;;      Params:         0       0       0       0       0       0       0       0       0
 22587 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22588 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22589 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22590 ;;Total ram usage:        2 bytes
 22591 ;; Hardware stack levels used: 1
 22592 ;; Hardware stack levels required when called: 5
 22593 ;; This function calls:
 22594 ;;		_USBStdFeatureReqHandler
 22595 ;;		_USBStdGetDscHandler
 22596 ;;		_USBStdGetStatusHandler
 22597 ;;		_USBStdSetCfgHandler
 22598 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22599 ;; This function is called by:
 22600 ;;		_USBCtrlTrfSetupHandler
 22601 ;; This function uses a non-reentrant model
 22602 ;;
 22603                           
 22604                           	psect	text116
 22605  005C0C                     __ptext116:
 22606                           	callstack 0
 22607  005C0C                     _USBCheckStdRequest:
 22608                           	callstack 12
 22609                           
 22610                           ; BSR set to: 0
 22611                           ;mcc_generated_files/usb/usb_device.c: 2692:     if(SetupPkt.RequestType != (0x00>>5)) r
      +                          eturn;
 22612                           
 22613                           ;incstack = 0
 22614  005C0C  0104               	movlb	4	; () banked
 22615  005C0E  3930               	swapf	48,w,b	;volatile
 22616  005C10  32E8               	rrcf	wreg,f,c
 22617  005C12  0B03               	andlw	3
 22618  005C14  0900               	iorlw	0
 22619  005C16  A4D8               	btfss	status,2,c
 22620  005C18  0012               	return	
 22621  005C1A  D041               	goto	i2l14066
 22622  005C1C                     i2l346:
 22623                           
 22624                           ; BSR set to: 4
 22625                           ;mcc_generated_files/usb/usb_device.c: 2697:             inPipes[0].info.bits.busy = 1;
 22626  005C1C  0100               	movlb	0	; () banked
 22627  005C1E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22628                           
 22629                           ; BSR set to: 0
 22630                           ;mcc_generated_files/usb/usb_device.c: 2698:             USBDeviceState = ADR_PENDING_ST
      +                          ATE;
 22631  005C20  0E08               	movlw	8
 22632  005C22  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 22633                           
 22634                           ;mcc_generated_files/usb/usb_device.c: 2700:             break;
 22635  005C24  0012               	return	
 22636  005C26                     i2l14036:
 22637                           
 22638                           ; BSR set to: 4
 22639                           ;mcc_generated_files/usb/usb_device.c: 2702:             USBStdGetDscHandler();
 22640  005C26  EC61  F025         	call	_USBStdGetDscHandler	;wreg free
 22641                           
 22642                           ;mcc_generated_files/usb/usb_device.c: 2703:             break;
 22643  005C2A  0012               	return	
 22644  005C2C                     i2l14038:
 22645                           
 22646                           ; BSR set to: 4
 22647                           ;mcc_generated_files/usb/usb_device.c: 2705:             USBStdSetCfgHandler();
 22648  005C2C  ECBA  F02F         	call	_USBStdSetCfgHandler	;wreg free
 22649                           
 22650                           ;mcc_generated_files/usb/usb_device.c: 2706:             break;
 22651  005C30  0012               	return	
 22652  005C32                     i2l14040:
 22653                           
 22654                           ; BSR set to: 4
 22655                           ;mcc_generated_files/usb/usb_device.c: 2708:             inPipes[0].pSrc.bRam = (uint8_t
      +                          *)&USBActiveConfiguration;
 22656  005C32  0ED3               	movlw	low _USBActiveConfiguration
 22657  005C34  0100               	movlb	0	; () banked
 22658  005C36  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 22659  005C38  6BB1               	clrf	(_inPipes+1)& (0+255),b	;volatile
 22660                           
 22661                           ; BSR set to: 0
 22662                           ;mcc_generated_files/usb/usb_device.c: 2709:             inPipes[0].info.bits.ctrl_trf_m
      +                          em = 0x01;
 22663  005C3A  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;mcc_generated_files/usb/usb_device.c: 2710:             inPipes[0].wCount.v[0] = 1;
 22667  005C3C  0E01               	movlw	1
 22668  005C3E  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22669                           
 22670                           ; BSR set to: 0
 22671                           ;mcc_generated_files/usb/usb_device.c: 2711:             inPipes[0].info.bits.busy = 1;
 22672  005C40  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22673                           
 22674                           ;mcc_generated_files/usb/usb_device.c: 2712:             break;
 22675  005C42  0012               	return	
 22676  005C44                     i2l14048:
 22677                           
 22678                           ; BSR set to: 4
 22679                           ;mcc_generated_files/usb/usb_device.c: 2714:             USBStdGetStatusHandler();
 22680  005C44  ECF3  F033         	call	_USBStdGetStatusHandler	;wreg free
 22681                           
 22682                           ;mcc_generated_files/usb/usb_device.c: 2715:             break;
 22683  005C48  0012               	return	
 22684  005C4A                     i2l14050:
 22685                           
 22686                           ; BSR set to: 4
 22687                           ;mcc_generated_files/usb/usb_device.c: 2718:             USBStdFeatureReqHandler();
 22688  005C4A  EC99  F01E         	call	_USBStdFeatureReqHandler	;wreg free
 22689                           
 22690                           ;mcc_generated_files/usb/usb_device.c: 2719:             break;
 22691  005C4E  0012               	return	
 22692  005C50                     i2l14052:
 22693                           
 22694                           ; BSR set to: 4
 22695                           ;mcc_generated_files/usb/usb_device.c: 2721:             inPipes[0].pSrc.bRam = (uint8_t
      +                          *)&USBAlternateInterface[SetupPkt.bIntfID];
 22696  005C50  0EEA               	movlw	low _USBAlternateInterface
 22697  005C52  2534               	addwf	52,w,b	;volatile
 22698  005C54  0100               	movlb	0	; () banked
 22699  005C56  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 22700  005C58  6BB1               	clrf	(_inPipes+1)& (0+255),b	;volatile
 22701  005C5A  0E01               	movlw	high _USBAlternateInterface
 22702  005C5C  23B1               	addwfc	(_inPipes+1)& (0+255),f,b	;volatile
 22703                           
 22704                           ; BSR set to: 0
 22705                           ;mcc_generated_files/usb/usb_device.c: 2722:             inPipes[0].info.bits.ctrl_trf_m
      +                          em = 0x01;
 22706  005C5E  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22707                           
 22708                           ; BSR set to: 0
 22709                           ;mcc_generated_files/usb/usb_device.c: 2723:             inPipes[0].wCount.v[0] = 1;
 22710  005C60  0E01               	movlw	1
 22711  005C62  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22712                           
 22713                           ; BSR set to: 0
 22714                           ;mcc_generated_files/usb/usb_device.c: 2724:             inPipes[0].info.bits.busy = 1;
 22715  005C64  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22716                           
 22717                           ;mcc_generated_files/usb/usb_device.c: 2725:             break;
 22718  005C66  0012               	return	
 22719  005C68                     i2l355:
 22720                           
 22721                           ; BSR set to: 4
 22722                           ;mcc_generated_files/usb/usb_device.c: 2727:             inPipes[0].info.bits.busy = 1;
 22723  005C68  0100               	movlb	0	; () banked
 22724  005C6A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22725                           
 22726                           ; BSR set to: 0
 22727                           ;mcc_generated_files/usb/usb_device.c: 2728:             USBAlternateInterface[SetupPkt.
      +                          bIntfID] = SetupPkt.bAltID;
 22728  005C6C  0EEA               	movlw	low _USBAlternateInterface
 22729  005C6E  0104               	movlb	4	; () banked
 22730  005C70  2534               	addwf	52,w,b	;volatile
 22731  005C72  6ED9               	movwf	fsr2l,c
 22732  005C74  6ADA               	clrf	fsr2h,c
 22733  005C76  0E01               	movlw	high _USBAlternateInterface
 22734  005C78  22DA               	addwfc	fsr2h,f,c
 22735  005C7A  C432 FFDF          	movff	1074,indf2	;volatile
 22736                           
 22737                           ;mcc_generated_files/usb/usb_device.c: 2729:             break;
 22738  005C7E  0012               	return	
 22739  005C80                     i2l14062:
 22740                           
 22741                           ; BSR set to: 4
 22742                           ;mcc_generated_files/usb/usb_device.c: 2731:             USER_USB_CALLBACK_EVENT_HANDLER
      +                          ((USB_EVENT)EVENT_SET_DESCRIPTOR,0,0);
 22743  005C80  0E00               	movlw	0
 22744  005C82  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 22745  005C84  0E02               	movlw	2
 22746  005C86  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 22747  005C88  0E00               	movlw	0
 22748  005C8A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 22749  005C8C  0E00               	movlw	0
 22750  005C8E  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 22751  005C90  0E00               	movlw	0
 22752  005C92  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 22753  005C94  0E00               	movlw	0
 22754  005C96  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 22755  005C98  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22756                           
 22757                           ;mcc_generated_files/usb/usb_device.c: 2732:             break;
 22758  005C9C  0012               	return	
 22759  005C9E                     i2l14066:
 22760                           
 22761                           ; BSR set to: 4
 22762  005C9E  5131               	movf	49,w,b	;volatile
 22763  005CA0  6E1C               	movwf	??_USBCheckStdRequest^0,c
 22764  005CA2  6A1D               	clrf	(??_USBCheckStdRequest+1)^0,c
 22765                           
 22766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22767                           ; Switch size 1, requested type "simple"
 22768                           ; Number of cases is 1, Range of values is 0 to 0
 22769                           ; switch strategies available:
 22770                           ; Name         Instructions Cycles
 22771                           ; simple_byte            4     3 (average)
 22772                           ;	Chosen strategy is simple_byte
 22773  005CA4  501D               	movf	(??_USBCheckStdRequest+1)^0,w,c
 22774  005CA6  0A00               	xorlw	0	; case 0
 22775  005CA8  A4D8               	btfss	status,2,c
 22776  005CAA  0012               	return	
 22777                           
 22778                           ; BSR set to: 4
 22779                           ; Switch size 1, requested type "simple"
 22780                           ; Number of cases is 11, Range of values is 0 to 12
 22781                           ; switch strategies available:
 22782                           ; Name         Instructions Cycles
 22783                           ; simple_byte           34    18 (average)
 22784                           ;	Chosen strategy is simple_byte
 22785  005CAC  501C               	movf	??_USBCheckStdRequest^0,w,c
 22786  005CAE  0A00               	xorlw	0	; case 0
 22787  005CB0  B4D8               	btfsc	status,2,c
 22788  005CB2  D7C8               	goto	i2l14048
 22789  005CB4  0A01               	xorlw	1	; case 1
 22790  005CB6  B4D8               	btfsc	status,2,c
 22791  005CB8  D7C8               	goto	i2l14050
 22792  005CBA  0A02               	xorlw	2	; case 3
 22793  005CBC  B4D8               	btfsc	status,2,c
 22794  005CBE  D7C5               	goto	i2l14050
 22795  005CC0  0A06               	xorlw	6	; case 5
 22796  005CC2  B4D8               	btfsc	status,2,c
 22797  005CC4  D7AB               	goto	i2l346
 22798  005CC6  0A03               	xorlw	3	; case 6
 22799  005CC8  B4D8               	btfsc	status,2,c
 22800  005CCA  D7AD               	goto	i2l14036
 22801  005CCC  0A01               	xorlw	1	; case 7
 22802  005CCE  B4D8               	btfsc	status,2,c
 22803  005CD0  D7D7               	goto	i2l14062
 22804  005CD2  0A0F               	xorlw	15	; case 8
 22805  005CD4  B4D8               	btfsc	status,2,c
 22806  005CD6  D7AD               	goto	i2l14040
 22807  005CD8  0A01               	xorlw	1	; case 9
 22808  005CDA  B4D8               	btfsc	status,2,c
 22809  005CDC  D7A7               	goto	i2l14038
 22810  005CDE  0A03               	xorlw	3	; case 10
 22811  005CE0  B4D8               	btfsc	status,2,c
 22812  005CE2  D7B6               	goto	i2l14052
 22813  005CE4  0A01               	xorlw	1	; case 11
 22814  005CE6  B4D8               	btfsc	status,2,c
 22815  005CE8  D7BF               	goto	i2l355
 22816  005CEA  0A07               	xorlw	7	; case 12
 22817  005CEC  0012               	return	
 22818  005CEE                     __end_of_USBCheckStdRequest:
 22819                           	callstack 0
 22820                           
 22821 ;; *************** function _USBStdSetCfgHandler *****************
 22822 ;; Defined at:
 22823 ;;		line 1972 in file "mcc_generated_files/usb/usb_device.c"
 22824 ;; Parameters:    Size  Location     Type
 22825 ;;		None
 22826 ;; Auto vars:     Size  Location     Type
 22827 ;;  i               1   20[COMRAM] unsigned char 
 22828 ;; Return value:  Size  Location     Type
 22829 ;;                  1    wreg      void 
 22830 ;; Registers used:
 22831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22832 ;; Tracked objects:
 22833 ;;		On entry : 3B/4
 22834 ;;		On exit  : 0/0
 22835 ;;		Unchanged: 0/0
 22836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22837 ;;      Params:         0       0       0       0       0       0       0       0       0
 22838 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22840 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22841 ;;Total ram usage:        1 bytes
 22842 ;; Hardware stack levels used: 1
 22843 ;; Hardware stack levels required when called: 4
 22844 ;; This function calls:
 22845 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22846 ;;		i2_memset
 22847 ;; This function is called by:
 22848 ;;		_USBCheckStdRequest
 22849 ;; This function uses a non-reentrant model
 22850 ;;
 22851                           
 22852                           	psect	text117
 22853  005F74                     __ptext117:
 22854                           	callstack 0
 22855  005F74                     _USBStdSetCfgHandler:
 22856                           	callstack 12
 22857                           
 22858                           ;mcc_generated_files/usb/usb_device.c: 1974:     uint8_t i;;mcc_generated_files/usb/usb_
      +                          device.c: 1977:     inPipes[0].info.bits.busy = 1;
 22859                           
 22860                           ;incstack = 0
 22861  005F74  0100               	movlb	0	; () banked
 22862  005F76  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22863                           
 22864                           ; BSR set to: 0
 22865                           ;mcc_generated_files/usb/usb_device.c: 1980:     memset((void*)&UEP1,0x00,(2));;
 22866  005F78  0E6B               	movlw	107
 22867  005F7A  6E01               	movwf	i2memset@dest^0,c
 22868  005F7C  0E0F               	movlw	15
 22869  005F7E  6E02               	movwf	(i2memset@dest+1)^0,c
 22870  005F80  0E00               	movlw	0
 22871  005F82  6E04               	movwf	(i2memset@c+1)^0,c
 22872  005F84  0E00               	movlw	0
 22873  005F86  6E03               	movwf	i2memset@c^0,c
 22874  005F88  0E00               	movlw	0
 22875  005F8A  6E06               	movwf	(i2memset@n+1)^0,c
 22876  005F8C  0E02               	movlw	2
 22877  005F8E  6E05               	movwf	i2memset@n^0,c
 22878  005F90  EC2F  F027         	call	i2_memset	;wreg free
 22879                           
 22880                           ;mcc_generated_files/usb/usb_device.c: 1983:     memset((void*)&BDT[0], 0x00, sizeof(BDT
      +                          ));
 22881  005F94  0E00               	movlw	0
 22882  005F96  6E01               	movwf	i2memset@dest^0,c
 22883  005F98  0E04               	movlw	4
 22884  005F9A  6E02               	movwf	(i2memset@dest+1)^0,c
 22885  005F9C  0E00               	movlw	0
 22886  005F9E  6E04               	movwf	(i2memset@c+1)^0,c
 22887  005FA0  0E00               	movlw	0
 22888  005FA2  6E03               	movwf	i2memset@c^0,c
 22889  005FA4  0E00               	movlw	0
 22890  005FA6  6E06               	movwf	(i2memset@n+1)^0,c
 22891  005FA8  0E30               	movlw	48
 22892  005FAA  6E05               	movwf	i2memset@n^0,c
 22893  005FAC  EC2F  F027         	call	i2_memset	;wreg free
 22894                           
 22895                           ;mcc_generated_files/usb/usb_device.c: 1986:     UCONbits.PPBRST = 1;
 22896  005FB0  8C60               	bsf	96,6,c	;volatile
 22897                           
 22898                           ;mcc_generated_files/usb/usb_device.c: 1991:  for(i = 0; i < (uint8_t)(2 +1u); i++)
 22899  005FB2  0E00               	movlw	0
 22900  005FB4  6E15               	movwf	USBStdSetCfgHandler@i^0,c
 22901  005FB6                     i2l13472:
 22902                           
 22903                           ;mcc_generated_files/usb/usb_device.c: 1992:  {;mcc_generated_files/usb/usb_device.c: 19
      +                          93:   ep_data_in[i].Val = 0u;
 22904  005FB6  0EC2               	movlw	low _ep_data_in
 22905  005FB8  2415               	addwf	USBStdSetCfgHandler@i^0,w,c
 22906  005FBA  6ED9               	movwf	fsr2l,c
 22907  005FBC  6ADA               	clrf	fsr2h,c
 22908  005FBE  0E01               	movlw	high _ep_data_in
 22909  005FC0  22DA               	addwfc	fsr2h,f,c
 22910  005FC2  0E00               	movlw	0
 22911  005FC4  6EDF               	movwf	indf2,c
 22912                           
 22913                           ;mcc_generated_files/usb/usb_device.c: 1994:         ep_data_out[i].Val = 0u;
 22914  005FC6  0EBF               	movlw	low _ep_data_out
 22915  005FC8  2415               	addwf	USBStdSetCfgHandler@i^0,w,c
 22916  005FCA  6ED9               	movwf	fsr2l,c
 22917  005FCC  6ADA               	clrf	fsr2h,c
 22918  005FCE  0E01               	movlw	high _ep_data_out
 22919  005FD0  22DA               	addwfc	fsr2h,f,c
 22920  005FD2  0E00               	movlw	0
 22921  005FD4  6EDF               	movwf	indf2,c
 22922                           
 22923                           ;mcc_generated_files/usb/usb_device.c: 1995:  }
 22924  005FD6  2A15               	incf	USBStdSetCfgHandler@i^0,f,c
 22925  005FD8  0E02               	movlw	2
 22926  005FDA  6415               	cpfsgt	USBStdSetCfgHandler@i^0,c
 22927  005FDC  D7EC               	goto	i2l13472
 22928                           
 22929                           ;mcc_generated_files/usb/usb_device.c: 1998:     memset((void*)&USBAlternateInterface,0x
      +                          00,2);
 22930  005FDE  0EEA               	movlw	low _USBAlternateInterface
 22931  005FE0  6E01               	movwf	i2memset@dest^0,c
 22932  005FE2  0E01               	movlw	high _USBAlternateInterface
 22933  005FE4  6E02               	movwf	(i2memset@dest+1)^0,c
 22934  005FE6  0E00               	movlw	0
 22935  005FE8  6E04               	movwf	(i2memset@c+1)^0,c
 22936  005FEA  0E00               	movlw	0
 22937  005FEC  6E03               	movwf	i2memset@c^0,c
 22938  005FEE  0E00               	movlw	0
 22939  005FF0  6E06               	movwf	(i2memset@n+1)^0,c
 22940  005FF2  0E02               	movlw	2
 22941  005FF4  6E05               	movwf	i2memset@n^0,c
 22942  005FF6  EC2F  F027         	call	i2_memset	;wreg free
 22943                           
 22944                           ;mcc_generated_files/usb/usb_device.c: 2001:     UCONbits.PPBRST = 0;
 22945  005FFA  9C60               	bcf	96,6,c	;volatile
 22946                           
 22947                           ;mcc_generated_files/usb/usb_device.c: 2003:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)&
      +                          BDT[2];
 22948  005FFC  0E08               	movlw	8
 22949  005FFE  0100               	movlb	0	; () banked
 22950  006000  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 22951  006002  0E04               	movlw	4
 22952  006004  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22953                           
 22954                           ; BSR set to: 0
 22955                           ;mcc_generated_files/usb/usb_device.c: 2006:     pBDTEntryEP0OutCurrent = (volatile BDT_
      +                          ENTRY*)&BDT[0];
 22956  006006  0E00               	movlw	0
 22957  006008  6FC2               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 22958  00600A  0E04               	movlw	4
 22959  00600C  6FC3               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;mcc_generated_files/usb/usb_device.c: 2007:     pBDTEntryEP0OutNext = pBDTEntryEP0OutCu
      +                          rrent;
 22963  00600E  C0C2  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22964  006012  C0C3  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22965                           
 22966                           ; BSR set to: 0
 22967                           ;mcc_generated_files/usb/usb_device.c: 2010:     USBActiveConfiguration = SetupPkt.bConf
      +                          igurationValue;
 22968  006016  C432 F0D3          	movff	1074,_USBActiveConfiguration	;volatile
 22969                           
 22970                           ; BSR set to: 0
 22971                           ;mcc_generated_files/usb/usb_device.c: 2013:     if(USBActiveConfiguration == 0)
 22972  00601A  51D3               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 22973  00601C  A4D8               	btfss	status,2,c
 22974  00601E  D003               	goto	i2l13494
 22975                           
 22976                           ; BSR set to: 0
 22977                           ;mcc_generated_files/usb/usb_device.c: 2014:     {;mcc_generated_files/usb/usb_device.c:
      +                           2016:         USBDeviceState = ADDRESS_STATE;
 22978  006020  0E10               	movlw	16
 22979  006022  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 22980                           
 22981                           ;mcc_generated_files/usb/usb_device.c: 2017:     }
 22982  006024  0012               	return	
 22983  006026                     i2l13494:
 22984                           
 22985                           ; BSR set to: 0
 22986                           ;mcc_generated_files/usb/usb_device.c: 2019:     {;mcc_generated_files/usb/usb_device.c:
      +                           2021:         USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_CONFIGURED,(void*)&USBAc
      +                          tiveConfiguration,1);
 22987  006026  0E00               	movlw	0
 22988  006028  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 22989  00602A  0E01               	movlw	1
 22990  00602C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 22991  00602E  0ED3               	movlw	low _USBActiveConfiguration
 22992  006030  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 22993  006032  6A10               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 22994  006034  0E00               	movlw	0
 22995  006036  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 22996  006038  0E01               	movlw	1
 22997  00603A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 22998  00603C  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22999                           
 23000                           ;mcc_generated_files/usb/usb_device.c: 2026:         USBDeviceState = CONFIGURED_STATE;
 23001  006040  0E20               	movlw	32
 23002  006042  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 23003  006044  0012               	return		;funcret
 23004  006046                     __end_of_USBStdSetCfgHandler:
 23005                           	callstack 0
 23006                           
 23007 ;; *************** function i2_memset *****************
 23008 ;; Defined at:
 23009 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 23010 ;; Parameters:    Size  Location     Type
 23011 ;;  dest            2    0[COMRAM] PTR void 
 23012 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), readBuffer(32), 
 23013 ;;		 -> USBCommandFetch@readTokens(60), fila(320), writeBuffer(32), USBAlternateInterface(2), 
 23014 ;;		 -> BDT(48), UEP1(1), 
 23015 ;;  c               2    2[COMRAM] int 
 23016 ;;  n               2    4[COMRAM] unsigned int 
 23017 ;; Auto vars:     Size  Location     Type
 23018 ;;  s               2   10[COMRAM] PTR unsigned char 
 23019 ;;		 -> executeCommand@strCommand(30), executeCommand@comando(100), lastToken(30), readBuffer(32), 
 23020 ;;		 -> USBCommandFetch@readTokens(60), fila(320), writeBuffer(32), USBAlternateInterface(2), 
 23021 ;;		 -> BDT(48), UEP1(1), 
 23022 ;;  k               2    8[COMRAM] unsigned int 
 23023 ;; Return value:  Size  Location     Type
 23024 ;;                  2    0[COMRAM] PTR void 
 23025 ;; Registers used:
 23026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23027 ;; Tracked objects:
 23028 ;;		On entry : 0/0
 23029 ;;		On exit  : 0/0
 23030 ;;		Unchanged: 0/0
 23031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23032 ;;      Params:         6       0       0       0       0       0       0       0       0
 23033 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23034 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23035 ;;      Totals:        12       0       0       0       0       0       0       0       0
 23036 ;;Total ram usage:       12 bytes
 23037 ;; Hardware stack levels used: 1
 23038 ;; This function calls:
 23039 ;;		Nothing
 23040 ;; This function is called by:
 23041 ;;		_USBStdSetCfgHandler
 23042 ;;		i2_USBDeviceInit
 23043 ;; This function uses a non-reentrant model
 23044 ;;
 23045                           
 23046                           	psect	text118
 23047  004E5E                     __ptext118:
 23048                           	callstack 0
 23049  004E5E                     i2_memset:
 23050                           	callstack 18
 23051                           
 23052                           ;incstack = 0
 23053  004E5E  C001  F00B         	movff	i2memset@dest,i2memset@s
 23054  004E62  C002  F00C         	movff	i2memset@dest+1,i2memset@s+1
 23055  004E66  5005               	movf	i2memset@n^0,w,c
 23056  004E68  1006               	iorwf	(i2memset@n+1)^0,w,c
 23057  004E6A  B4D8               	btfsc	status,2,c
 23058  004E6C  0012               	return	
 23059  004E6E  C00B  FFD9         	movff	i2memset@s,fsr2l
 23060  004E72  C00C  FFDA         	movff	i2memset@s+1,fsr2h
 23061  004E76  C003  FFDF         	movff	i2memset@c,indf2
 23062  004E7A  5005               	movf	i2memset@n^0,w,c
 23063  004E7C  240B               	addwf	i2memset@s^0,w,c
 23064  004E7E  6E07               	movwf	??i2_memset^0,c
 23065  004E80  5006               	movf	(i2memset@n+1)^0,w,c
 23066  004E82  200C               	addwfc	(i2memset@s+1)^0,w,c
 23067  004E84  6E08               	movwf	(??i2_memset+1)^0,c
 23068  004E86  0EFF               	movlw	255
 23069  004E88  2407               	addwf	??i2_memset^0,w,c
 23070  004E8A  6ED9               	movwf	fsr2l,c
 23071  004E8C  0EFF               	movlw	255
 23072  004E8E  2008               	addwfc	(??i2_memset+1)^0,w,c
 23073  004E90  6EDA               	movwf	fsr2h,c
 23074  004E92  C003  FFDF         	movff	i2memset@c,indf2
 23075  004E96  5006               	movf	(i2memset@n+1)^0,w,c
 23076  004E98  E104               	bnz	i2l13438
 23077  004E9A  0E03               	movlw	3
 23078  004E9C  5C05               	subwf	i2memset@n^0,w,c
 23079  004E9E  A0D8               	btfss	status,0,c
 23080  004EA0  0012               	return	
 23081  004EA2                     i2l13438:
 23082  004EA2  EE20 F001          	lfsr	2,1
 23083  004EA6  500B               	movf	i2memset@s^0,w,c
 23084  004EA8  26D9               	addwf	fsr2l,f,c
 23085  004EAA  500C               	movf	(i2memset@s+1)^0,w,c
 23086  004EAC  22DA               	addwfc	fsr2h,f,c
 23087  004EAE  C003  FFDF         	movff	i2memset@c,indf2
 23088  004EB2  EE20 F002          	lfsr	2,2
 23089  004EB6  500B               	movf	i2memset@s^0,w,c
 23090  004EB8  26D9               	addwf	fsr2l,f,c
 23091  004EBA  500C               	movf	(i2memset@s+1)^0,w,c
 23092  004EBC  22DA               	addwfc	fsr2h,f,c
 23093  004EBE  C003  FFDF         	movff	i2memset@c,indf2
 23094  004EC2  5005               	movf	i2memset@n^0,w,c
 23095  004EC4  240B               	addwf	i2memset@s^0,w,c
 23096  004EC6  6E07               	movwf	??i2_memset^0,c
 23097  004EC8  5006               	movf	(i2memset@n+1)^0,w,c
 23098  004ECA  200C               	addwfc	(i2memset@s+1)^0,w,c
 23099  004ECC  6E08               	movwf	(??i2_memset+1)^0,c
 23100  004ECE  0EFE               	movlw	254
 23101  004ED0  2407               	addwf	??i2_memset^0,w,c
 23102  004ED2  6ED9               	movwf	fsr2l,c
 23103  004ED4  0EFF               	movlw	255
 23104  004ED6  2008               	addwfc	(??i2_memset+1)^0,w,c
 23105  004ED8  6EDA               	movwf	fsr2h,c
 23106  004EDA  C003  FFDF         	movff	i2memset@c,indf2
 23107  004EDE  5005               	movf	i2memset@n^0,w,c
 23108  004EE0  240B               	addwf	i2memset@s^0,w,c
 23109  004EE2  6E07               	movwf	??i2_memset^0,c
 23110  004EE4  5006               	movf	(i2memset@n+1)^0,w,c
 23111  004EE6  200C               	addwfc	(i2memset@s+1)^0,w,c
 23112  004EE8  6E08               	movwf	(??i2_memset+1)^0,c
 23113  004EEA  0EFD               	movlw	253
 23114  004EEC  2407               	addwf	??i2_memset^0,w,c
 23115  004EEE  6ED9               	movwf	fsr2l,c
 23116  004EF0  0EFF               	movlw	255
 23117  004EF2  2008               	addwfc	(??i2_memset+1)^0,w,c
 23118  004EF4  6EDA               	movwf	fsr2h,c
 23119  004EF6  C003  FFDF         	movff	i2memset@c,indf2
 23120  004EFA  5006               	movf	(i2memset@n+1)^0,w,c
 23121  004EFC  E104               	bnz	i2l13444
 23122  004EFE  0E07               	movlw	7
 23123  004F00  5C05               	subwf	i2memset@n^0,w,c
 23124  004F02  A0D8               	btfss	status,0,c
 23125  004F04  0012               	return	
 23126  004F06                     i2l13444:
 23127  004F06  EE20 F003          	lfsr	2,3
 23128  004F0A  500B               	movf	i2memset@s^0,w,c
 23129  004F0C  26D9               	addwf	fsr2l,f,c
 23130  004F0E  500C               	movf	(i2memset@s+1)^0,w,c
 23131  004F10  22DA               	addwfc	fsr2h,f,c
 23132  004F12  C003  FFDF         	movff	i2memset@c,indf2
 23133  004F16  5005               	movf	i2memset@n^0,w,c
 23134  004F18  240B               	addwf	i2memset@s^0,w,c
 23135  004F1A  6E07               	movwf	??i2_memset^0,c
 23136  004F1C  5006               	movf	(i2memset@n+1)^0,w,c
 23137  004F1E  200C               	addwfc	(i2memset@s+1)^0,w,c
 23138  004F20  6E08               	movwf	(??i2_memset+1)^0,c
 23139  004F22  0EFC               	movlw	252
 23140  004F24  2407               	addwf	??i2_memset^0,w,c
 23141  004F26  6ED9               	movwf	fsr2l,c
 23142  004F28  0EFF               	movlw	255
 23143  004F2A  2008               	addwfc	(??i2_memset+1)^0,w,c
 23144  004F2C  6EDA               	movwf	fsr2h,c
 23145  004F2E  C003  FFDF         	movff	i2memset@c,indf2
 23146  004F32  5006               	movf	(i2memset@n+1)^0,w,c
 23147  004F34  E104               	bnz	i2l13450
 23148  004F36  0E09               	movlw	9
 23149  004F38  5C05               	subwf	i2memset@n^0,w,c
 23150  004F3A  A0D8               	btfss	status,0,c
 23151  004F3C  0012               	return	
 23152  004F3E                     i2l13450:
 23153  004F3E  C00B  F007         	movff	i2memset@s,??i2_memset
 23154  004F42  C00C  F008         	movff	i2memset@s+1,??i2_memset+1
 23155  004F46  1E07               	comf	??i2_memset^0,f,c
 23156  004F48  1E08               	comf	(??i2_memset+1)^0,f,c
 23157  004F4A  4A07               	infsnz	??i2_memset^0,f,c
 23158  004F4C  2A08               	incf	(??i2_memset+1)^0,f,c
 23159  004F4E  0E03               	movlw	3
 23160  004F50  1407               	andwf	??i2_memset^0,w,c
 23161  004F52  6E09               	movwf	i2memset@k^0,c
 23162  004F54  6A0A               	clrf	(i2memset@k+1)^0,c
 23163  004F56  5009               	movf	i2memset@k^0,w,c
 23164  004F58  260B               	addwf	i2memset@s^0,f,c
 23165  004F5A  500A               	movf	(i2memset@k+1)^0,w,c
 23166  004F5C  220C               	addwfc	(i2memset@s+1)^0,f,c
 23167  004F5E  5009               	movf	i2memset@k^0,w,c
 23168  004F60  5E05               	subwf	i2memset@n^0,f,c
 23169  004F62  500A               	movf	(i2memset@k+1)^0,w,c
 23170  004F64  5A06               	subwfb	(i2memset@n+1)^0,f,c
 23171  004F66  0EFC               	movlw	252
 23172  004F68  1605               	andwf	i2memset@n^0,f,c
 23173  004F6A  0EFF               	movlw	255
 23174  004F6C  1606               	andwf	(i2memset@n+1)^0,f,c
 23175  004F6E  D00B               	goto	i2l13458
 23176  004F70                     i2l13452:
 23177  004F70  C00B  FFD9         	movff	i2memset@s,fsr2l
 23178  004F74  C00C  FFDA         	movff	i2memset@s+1,fsr2h
 23179  004F78  C003  FFDF         	movff	i2memset@c,indf2
 23180  004F7C  0605               	decf	i2memset@n^0,f,c
 23181  004F7E  A0D8               	btfss	status,0,c
 23182  004F80  0606               	decf	(i2memset@n+1)^0,f,c
 23183  004F82  4A0B               	infsnz	i2memset@s^0,f,c
 23184  004F84  2A0C               	incf	(i2memset@s+1)^0,f,c
 23185  004F86                     i2l13458:
 23186  004F86  5005               	movf	i2memset@n^0,w,c
 23187  004F88  1006               	iorwf	(i2memset@n+1)^0,w,c
 23188  004F8A  B4D8               	btfsc	status,2,c
 23189  004F8C  0012               	return	
 23190  004F8E  D7F0               	goto	i2l13452
 23191  004F90                     __end_ofi2_memset:
 23192                           	callstack 0
 23193                           
 23194 ;; *************** function _USBStdGetStatusHandler *****************
 23195 ;; Defined at:
 23196 ;;		line 2133 in file "mcc_generated_files/usb/usb_device.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;		None
 23199 ;; Auto vars:     Size  Location     Type
 23200 ;;  p               2    2[COMRAM] PTR struct __BDT
 23201 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 23202 ;; Return value:  Size  Location     Type
 23203 ;;                  1    wreg      void 
 23204 ;; Registers used:
 23205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23206 ;; Tracked objects:
 23207 ;;		On entry : 3B/4
 23208 ;;		On exit  : 3F/0
 23209 ;;		Unchanged: 0/0
 23210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23211 ;;      Params:         0       0       0       0       0       0       0       0       0
 23212 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23213 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23214 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23215 ;;Total ram usage:        4 bytes
 23216 ;; Hardware stack levels used: 1
 23217 ;; This function calls:
 23218 ;;		Nothing
 23219 ;; This function is called by:
 23220 ;;		_USBCheckStdRequest
 23221 ;; This function uses a non-reentrant model
 23222 ;;
 23223                           
 23224                           	psect	text119
 23225  0067E6                     __ptext119:
 23226                           	callstack 0
 23227  0067E6                     _USBStdGetStatusHandler:
 23228                           	callstack 16
 23229                           
 23230                           ;mcc_generated_files/usb/usb_device.c: 2135:     CtrlTrfData[0] = 0;
 23231                           
 23232                           ;incstack = 0
 23233  0067E6  0E00               	movlw	0
 23234  0067E8  0104               	movlb	4	; () banked
 23235  0067EA  6F38               	movwf	56,b	;volatile
 23236                           
 23237                           ;mcc_generated_files/usb/usb_device.c: 2136:     CtrlTrfData[1] = 0;
 23238  0067EC  0E00               	movlw	0
 23239  0067EE  6F39               	movwf	57,b	;volatile
 23240                           
 23241                           ;mcc_generated_files/usb/usb_device.c: 2138:     switch(SetupPkt.Recipient)
 23242  0067F0  D036               	goto	i2l8908
 23243  0067F2                     i2l284:
 23244                           
 23245                           ; BSR set to: 4
 23246                           ;mcc_generated_files/usb/usb_device.c: 2141:             inPipes[0].info.bits.busy = 1;
 23247  0067F2  0100               	movlb	0	; () banked
 23248  0067F4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23249                           
 23250                           ; BSR set to: 0
 23251                           ;mcc_generated_files/usb/usb_device.c: 2151:             if(RemoteWakeup == 1)
 23252                           
 23253                           ;mcc_generated_files/usb/usb_device.c: 2146:             if(0 == 1)
 23254  0067F6  05D1               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 23255  0067F8  A4D8               	btfss	status,2,c
 23256  0067FA  D043               	goto	i2l287
 23257                           
 23258                           ; BSR set to: 0
 23259                           ;mcc_generated_files/usb/usb_device.c: 2152:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2153:                 CtrlTrfData[0]|=0x02;
 23260  0067FC  0104               	movlb	4	; () banked
 23261  0067FE  8338               	bsf	56,1,b	;volatile
 23262  006800  D040               	goto	i2l287
 23263  006802                     i2l288:
 23264                           
 23265                           ; BSR set to: 4
 23266                           ;mcc_generated_files/usb/usb_device.c: 2157:             inPipes[0].info.bits.busy = 1;
 23267  006802  0100               	movlb	0	; () banked
 23268  006804  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23269                           
 23270                           ;mcc_generated_files/usb/usb_device.c: 2158:             break;
 23271  006806  D03D               	goto	i2l287
 23272  006808                     i2l289:
 23273                           
 23274                           ; BSR set to: 4
 23275                           ;mcc_generated_files/usb/usb_device.c: 2160:             inPipes[0].info.bits.busy = 1;
 23276  006808  0100               	movlb	0	; () banked
 23277  00680A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23278                           
 23279                           ;mcc_generated_files/usb/usb_device.c: 2164:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2165:                 BDT_ENTRY *p;;mcc_generated_files/usb/usb_device.c: 2167:
      +                                           if(SetupPkt.EPDir == 0)
 23280  00680C  0104               	movlb	4	; () banked
 23281  00680E  BF34               	btfsc	52,7,b	;volatile
 23282  006810  D00C               	goto	i2l8898
 23283                           
 23284                           ; BSR set to: 4
 23285                           ;mcc_generated_files/usb/usb_device.c: 2168:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2169:                     p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23286  006812  5134               	movf	52,w,b	;volatile
 23287  006814  0B0F               	andlw	15
 23288  006816  6E01               	movwf	??_USBStdGetStatusHandler^0,c
 23289  006818  5001               	movf	??_USBStdGetStatusHandler^0,w,c
 23290  00681A  0D02               	mullw	2
 23291  00681C  0EAF               	movlw	low _pBDTEntryOut
 23292  00681E  24F3               	addwf	243,w,c
 23293  006820  6ED9               	movwf	fsr2l,c
 23294  006822  0E01               	movlw	high _pBDTEntryOut
 23295  006824  20F4               	addwfc	prodh,w,c
 23296  006826  6EDA               	movwf	fsr2h,c
 23297  006828  D007               	goto	L23
 23298  00682A                     i2l8898:
 23299                           
 23300                           ; BSR set to: 4
 23301                           ;mcc_generated_files/usb/usb_device.c: 2172:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2173:                     p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23302  00682A  5134               	movf	52,w,b	;volatile
 23303  00682C  0B0F               	andlw	15
 23304  00682E  0D02               	mullw	2
 23305  006830  50F3               	movf	243,w,c
 23306  006832  0FB6               	addlw	low _pBDTEntryIn
 23307  006834  6ED9               	movwf	fsr2l,c
 23308  006836  6ADA               	clrf	fsr2h,c
 23309  006838                     L23:
 23310  006838  CFDE F003          	movff	postinc2,USBStdGetStatusHandler@p
 23311  00683C  CFDD F004          	movff	postdec2,USBStdGetStatusHandler@p+1
 23312                           
 23313                           ; BSR set to: 4
 23314                           ;mcc_generated_files/usb/usb_device.c: 2176:                 if((p->STAT.UOWN == 1) && (
      +                          p->STAT.BSTALL == 1))
 23315  006840  C003  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 23316  006844  C004  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 23317  006848  AEDF               	btfss	indf2,7,c
 23318  00684A  D01B               	goto	i2l287
 23319                           
 23320                           ; BSR set to: 4
 23321  00684C  C003  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 23322  006850  C004  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 23323  006854  A4DF               	btfss	indf2,2,c
 23324  006856  D015               	goto	i2l287
 23325                           
 23326                           ; BSR set to: 4
 23327                           ;mcc_generated_files/usb/usb_device.c: 2177:                     CtrlTrfData[0]=0x01;
 23328  006858  0E01               	movlw	1
 23329  00685A  6F38               	movwf	56,b	;volatile
 23330  00685C  D012               	goto	i2l287
 23331  00685E                     i2l8908:
 23332                           
 23333                           ; BSR set to: 4
 23334  00685E  5130               	movf	48,w,b	;volatile
 23335  006860  0B1F               	andlw	31
 23336  006862  6E01               	movwf	??_USBStdGetStatusHandler^0,c
 23337  006864  6A02               	clrf	(??_USBStdGetStatusHandler+1)^0,c
 23338                           
 23339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23340                           ; Switch size 1, requested type "simple"
 23341                           ; Number of cases is 1, Range of values is 0 to 0
 23342                           ; switch strategies available:
 23343                           ; Name         Instructions Cycles
 23344                           ; simple_byte            4     3 (average)
 23345                           ;	Chosen strategy is simple_byte
 23346  006866  5002               	movf	(??_USBStdGetStatusHandler+1)^0,w,c
 23347  006868  0A00               	xorlw	0	; case 0
 23348  00686A  A4D8               	btfss	status,2,c
 23349  00686C  D00A               	goto	i2l287
 23350                           
 23351                           ; BSR set to: 4
 23352                           ; Switch size 1, requested type "simple"
 23353                           ; Number of cases is 3, Range of values is 0 to 2
 23354                           ; switch strategies available:
 23355                           ; Name         Instructions Cycles
 23356                           ; simple_byte           10     6 (average)
 23357                           ;	Chosen strategy is simple_byte
 23358  00686E  5001               	movf	??_USBStdGetStatusHandler^0,w,c
 23359  006870  0A00               	xorlw	0	; case 0
 23360  006872  B4D8               	btfsc	status,2,c
 23361  006874  D7BE               	goto	i2l284
 23362  006876  0A01               	xorlw	1	; case 1
 23363  006878  B4D8               	btfsc	status,2,c
 23364  00687A  D7C3               	goto	i2l288
 23365  00687C  0A03               	xorlw	3	; case 2
 23366  00687E  B4D8               	btfsc	status,2,c
 23367  006880  D7C3               	goto	i2l289
 23368  006882                     i2l287:
 23369                           
 23370                           ;mcc_generated_files/usb/usb_device.c: 2182:     if(inPipes[0].info.bits.busy == 1)
 23371  006882  0100               	movlb	0	; () banked
 23372  006884  AFB3               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 23373  006886  0012               	return	
 23374                           
 23375                           ; BSR set to: 0
 23376                           ;mcc_generated_files/usb/usb_device.c: 2183:     {;mcc_generated_files/usb/usb_device.c:
      +                           2184:         inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 23377  006888  0E38               	movlw	56
 23378  00688A  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 23379  00688C  0E04               	movlw	4
 23380  00688E  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;mcc_generated_files/usb/usb_device.c: 2185:         inPipes[0].info.bits.ctrl_trf_mem =
      +                           0x01;
 23384  006890  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 23385                           
 23386                           ; BSR set to: 0
 23387                           ;mcc_generated_files/usb/usb_device.c: 2186:         inPipes[0].wCount.v[0] = 2;
 23388  006892  0E02               	movlw	2
 23389  006894  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23390                           
 23391                           ; BSR set to: 0
 23392  006896  0012               	return		;funcret
 23393  006898                     __end_of_USBStdGetStatusHandler:
 23394                           	callstack 0
 23395                           
 23396 ;; *************** function _USBStdGetDscHandler *****************
 23397 ;; Defined at:
 23398 ;;		line 2047 in file "mcc_generated_files/usb/usb_device.c"
 23399 ;; Parameters:    Size  Location     Type
 23400 ;;		None
 23401 ;; Auto vars:     Size  Location     Type
 23402 ;;		None
 23403 ;; Return value:  Size  Location     Type
 23404 ;;                  1    wreg      void 
 23405 ;; Registers used:
 23406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23407 ;; Tracked objects:
 23408 ;;		On entry : 3B/4
 23409 ;;		On exit  : 3B/0
 23410 ;;		Unchanged: 0/0
 23411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23412 ;;      Params:         0       0       0       0       0       0       0       0       0
 23413 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23414 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23415 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23416 ;;Total ram usage:        2 bytes
 23417 ;; Hardware stack levels used: 1
 23418 ;; This function calls:
 23419 ;;		Nothing
 23420 ;; This function is called by:
 23421 ;;		_USBCheckStdRequest
 23422 ;; This function uses a non-reentrant model
 23423 ;;
 23424                           
 23425                           	psect	text120
 23426  004AC2                     __ptext120:
 23427                           	callstack 0
 23428  004AC2                     _USBStdGetDscHandler:
 23429                           	callstack 16
 23430                           
 23431                           ;mcc_generated_files/usb/usb_device.c: 2049:     if(SetupPkt.bmRequestType == 0x80)
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;incstack = 0
 23435  004AC2  0E80               	movlw	128
 23436  004AC4  0104               	movlb	4	; () banked
 23437  004AC6  1930               	xorwf	48,w,b	;volatile
 23438  004AC8  A4D8               	btfss	status,2,c
 23439  004ACA  0012               	return	
 23440                           
 23441                           ; BSR set to: 4
 23442                           ;mcc_generated_files/usb/usb_device.c: 2050:     {;mcc_generated_files/usb/usb_device.c:
      +                           2051:         inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 23443  004ACC  0EC0               	movlw	192
 23444  004ACE  0100               	movlb	0	; () banked
 23445  004AD0  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23446                           
 23447                           ;mcc_generated_files/usb/usb_device.c: 2053:         switch(SetupPkt.bDescriptorType)
 23448  004AD2  D080               	goto	i2l8882
 23449  004AD4                     i2l8856:
 23450                           
 23451                           ; BSR set to: 4
 23452                           ;mcc_generated_files/usb/usb_device.c: 2059:                     inPipes[0].pSrc.bRom = 
      +                          (const uint8_t*)&device_dsc;
 23453  004AD4  0EA8               	movlw	low _device_dsc
 23454  004AD6  0100               	movlb	0	; () banked
 23455  004AD8  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 23456  004ADA  0E7F               	movlw	high _device_dsc
 23457  004ADC  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23458                           
 23459                           ; BSR set to: 0
 23460                           ;mcc_generated_files/usb/usb_device.c: 2061:                 inPipes[0].wCount.Val = siz
      +                          eof(device_dsc);
 23461  004ADE  0E00               	movlw	0
 23462  004AE0  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 23463  004AE2  0E12               	movlw	18
 23464  004AE4  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23465                           
 23466                           ;mcc_generated_files/usb/usb_device.c: 2062:                 break;
 23467  004AE6  0012               	return	
 23468  004AE8                     i2l8860:
 23469                           
 23470                           ; BSR set to: 4
 23471                           ;mcc_generated_files/usb/usb_device.c: 2067:                 if(SetupPkt.bDscIndex < 1)
 23472  004AE8  5132               	movf	50,w,b	;volatile
 23473  004AEA  A4D8               	btfss	status,2,c
 23474  004AEC  D040               	goto	i2l8868
 23475                           
 23476                           ; BSR set to: 4
 23477                           ;mcc_generated_files/usb/usb_device.c: 2068:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2072:                         inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 23478  004AEE  5132               	movf	50,w,b	;volatile
 23479  004AF0  0D02               	mullw	2
 23480  004AF2  0E19               	movlw	low _USB_CD_Ptr
 23481  004AF4  24F3               	addwf	243,w,c
 23482  004AF6  6EF6               	movwf	tblptrl,c
 23483  004AF8  0E7F               	movlw	high _USB_CD_Ptr
 23484  004AFA  20F4               	addwfc	244,w,c
 23485  004AFC  6EF7               	movwf	tblptrh,c
 23486  004AFE                     	if	0	;There are less than 3 active tblptr bytes
 23487  004AFE                     	endif
 23488  004AFE  0009               	tblrd		*+
 23489  004B00  CFF5 F0B0          	movff	tablat,_inPipes	;volatile
 23490  004B04  000A               	tblrd		*-
 23491  004B06  CFF5 F0B1          	movff	tablat,_inPipes+1	;volatile
 23492                           
 23493                           ; BSR set to: 4
 23494                           ;mcc_generated_files/usb/usb_device.c: 2078:                     inPipes[0].wCount.byte.
      +                          LB = *(inPipes[0].pSrc.bRom+2);
 23495  004B0A  0E02               	movlw	2
 23496  004B0C  0100               	movlb	0	; () banked
 23497  004B0E  25B0               	addwf	_inPipes& (0+255),w,b	;volatile
 23498  004B10  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23499  004B12  0E00               	movlw	0
 23500  004B14  21B1               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 23501  004B16  6E02               	movwf	(??_USBStdGetDscHandler+1)^0,c
 23502  004B18  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23503  004B1C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 23504  004B20  6AF8               	clrf	tblptru,c
 23505  004B22  0E07               	movlw	(high __ramtop+-1)
 23506  004B24  64F7               	cpfsgt	tblptrh,c
 23507  004B26  D003               	bra	i2u909_47
 23508  004B28  0008               	tblrd		*
 23509  004B2A  50F5               	movf	tablat,w,c
 23510  004B2C  D005               	bra	i2u909_40
 23511  004B2E                     i2u909_47:
 23512  004B2E  CFF6 FFE1          	movff	tblptrl,fsr1l
 23513  004B32  CFF7 FFE2          	movff	tblptrh,fsr1h
 23514  004B36  50E7               	movf	indf1,w,c
 23515  004B38                     i2u909_40:
 23516  004B38  0100               	movlb	0	; () banked
 23517  004B3A  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23518                           
 23519                           ; BSR set to: 0
 23520                           ;mcc_generated_files/usb/usb_device.c: 2079:                     inPipes[0].wCount.byte.
      +                          HB = *(inPipes[0].pSrc.bRom+3);
 23521  004B3C  0E03               	movlw	3
 23522  004B3E  25B0               	addwf	_inPipes& (0+255),w,b	;volatile
 23523  004B40  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23524  004B42  0E00               	movlw	0
 23525  004B44  21B1               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 23526  004B46  6E02               	movwf	(??_USBStdGetDscHandler+1)^0,c
 23527  004B48  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23528  004B4C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 23529  004B50  6AF8               	clrf	tblptru,c
 23530  004B52  0E07               	movlw	(high __ramtop+-1)
 23531  004B54  64F7               	cpfsgt	tblptrh,c
 23532  004B56  D003               	bra	i2u910_47
 23533  004B58  0008               	tblrd		*
 23534  004B5A  50F5               	movf	tablat,w,c
 23535  004B5C  D005               	bra	i2u910_40
 23536  004B5E                     i2u910_47:
 23537  004B5E  CFF6 FFE1          	movff	tblptrl,fsr1l
 23538  004B62  CFF7 FFE2          	movff	tblptrh,fsr1h
 23539  004B66  50E7               	movf	indf1,w,c
 23540  004B68                     i2u910_40:
 23541  004B68  0100               	movlb	0	; () banked
 23542  004B6A  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 23543                           
 23544                           ;mcc_generated_files/usb/usb_device.c: 2080:                 }
 23545  004B6C  0012               	return	
 23546  004B6E                     i2l8868:
 23547                           
 23548                           ; BSR set to: 4
 23549                           ;mcc_generated_files/usb/usb_device.c: 2082:     {;mcc_generated_files/usb/usb_device.c:
      +                           2083:      inPipes[0].info.Val = 0;
 23550  004B6E  0E00               	movlw	0
 23551  004B70  0100               	movlb	0	; () banked
 23552  004B72  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23553  004B74  0012               	return	
 23554  004B76                     i2l8870:
 23555                           
 23556                           ; BSR set to: 4
 23557                           ;mcc_generated_files/usb/usb_device.c: 2090:                 if(SetupPkt.bDscIndex<3)
 23558  004B76  0E03               	movlw	3
 23559  004B78  6132               	cpfslt	50,b	;volatile
 23560  004B7A  D024               	goto	i2l8876
 23561                           
 23562                           ; BSR set to: 4
 23563                           ;mcc_generated_files/usb/usb_device.c: 2091:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2093:                     inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDsc
      +                          Index);
 23564  004B7C  5132               	movf	50,w,b	;volatile
 23565  004B7E  0D02               	mullw	2
 23566  004B80  0E13               	movlw	low _USB_SD_Ptr
 23567  004B82  24F3               	addwf	243,w,c
 23568  004B84  6EF6               	movwf	tblptrl,c
 23569  004B86  0E7F               	movlw	high _USB_SD_Ptr
 23570  004B88  20F4               	addwfc	244,w,c
 23571  004B8A  6EF7               	movwf	tblptrh,c
 23572  004B8C                     	if	0	;There are less than 3 active tblptr bytes
 23573  004B8C                     	endif
 23574  004B8C  0009               	tblrd		*+
 23575  004B8E  CFF5 F0B0          	movff	tablat,_inPipes	;volatile
 23576  004B92  000A               	tblrd		*-
 23577  004B94  CFF5 F0B1          	movff	tablat,_inPipes+1	;volatile
 23578                           
 23579                           ; BSR set to: 4
 23580                           ;mcc_generated_files/usb/usb_device.c: 2095:                     inPipes[0].wCount.Val =
      +                           *inPipes[0].pSrc.bRom;
 23581  004B98  C0B0  FFF6         	movff	_inPipes,tblptrl	;volatile
 23582  004B9C  C0B1  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23583  004BA0  6AF8               	clrf	tblptru,c
 23584  004BA2  0E07               	movlw	(high __ramtop+-1)
 23585  004BA4  64F7               	cpfsgt	tblptrh,c
 23586  004BA6  D003               	bra	i2u912_47
 23587  004BA8  0008               	tblrd		*
 23588  004BAA  50F5               	movf	tablat,w,c
 23589  004BAC  D005               	bra	i2u912_40
 23590  004BAE                     i2u912_47:
 23591  004BAE  CFF6 FFE1          	movff	tblptrl,fsr1l
 23592  004BB2  CFF7 FFE2          	movff	tblptrh,fsr1h
 23593  004BB6  50E7               	movf	indf1,w,c
 23594  004BB8                     i2u912_40:
 23595  004BB8  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23596  004BBA  5001               	movf	??_USBStdGetDscHandler^0,w,c
 23597  004BBC  0100               	movlb	0	; () banked
 23598  004BBE  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23599  004BC0  6BB5               	clrf	(_inPipes+5)& (0+255),b	;volatile
 23600                           
 23601                           ;mcc_generated_files/usb/usb_device.c: 2096:                 }
 23602  004BC2  0012               	return	
 23603  004BC4                     i2l8876:
 23604                           
 23605                           ; BSR set to: 4
 23606                           ;mcc_generated_files/usb/usb_device.c: 2107:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2108:                     inPipes[0].info.Val = 0;
 23607  004BC4  0E00               	movlw	0
 23608  004BC6  0100               	movlb	0	; () banked
 23609  004BC8  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23610  004BCA  0012               	return	
 23611  004BCC                     i2l8878:
 23612                           
 23613                           ; BSR set to: 4
 23614                           ;mcc_generated_files/usb/usb_device.c: 2112:                 inPipes[0].info.Val = 0;
 23615  004BCC  0E00               	movlw	0
 23616  004BCE  0100               	movlb	0	; () banked
 23617  004BD0  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23618                           
 23619                           ;mcc_generated_files/usb/usb_device.c: 2113:                 break;
 23620  004BD2  0012               	return	
 23621  004BD4                     i2l8882:
 23622                           
 23623                           ; BSR set to: 0
 23624  004BD4  0104               	movlb	4	; () banked
 23625  004BD6  5133               	movf	51,w,b	;volatile
 23626  004BD8  6E01               	movwf	??_USBStdGetDscHandler^0,c
 23627  004BDA  6A02               	clrf	(??_USBStdGetDscHandler+1)^0,c
 23628                           
 23629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23630                           ; Switch size 1, requested type "simple"
 23631                           ; Number of cases is 1, Range of values is 0 to 0
 23632                           ; switch strategies available:
 23633                           ; Name         Instructions Cycles
 23634                           ; simple_byte            4     3 (average)
 23635                           ;	Chosen strategy is simple_byte
 23636  004BDC  5002               	movf	(??_USBStdGetDscHandler+1)^0,w,c
 23637  004BDE  0A00               	xorlw	0	; case 0
 23638  004BE0  A4D8               	btfss	status,2,c
 23639  004BE2  D7F4               	goto	i2l8878
 23640                           
 23641                           ; BSR set to: 4
 23642                           ; Switch size 1, requested type "simple"
 23643                           ; Number of cases is 3, Range of values is 1 to 3
 23644                           ; switch strategies available:
 23645                           ; Name         Instructions Cycles
 23646                           ; simple_byte           10     6 (average)
 23647                           ;	Chosen strategy is simple_byte
 23648  004BE4  5001               	movf	??_USBStdGetDscHandler^0,w,c
 23649  004BE6  0A01               	xorlw	1	; case 1
 23650  004BE8  B4D8               	btfsc	status,2,c
 23651  004BEA  D774               	goto	i2l8856
 23652  004BEC  0A03               	xorlw	3	; case 2
 23653  004BEE  B4D8               	btfsc	status,2,c
 23654  004BF0  D77B               	goto	i2l8860
 23655  004BF2  0A01               	xorlw	1	; case 3
 23656  004BF4  B4D8               	btfsc	status,2,c
 23657  004BF6  D7BF               	goto	i2l8870
 23658  004BF8  D7E9               	goto	i2l8878
 23659  004BFA                     __end_of_USBStdGetDscHandler:
 23660                           	callstack 0
 23661                           
 23662 ;; *************** function _USBStdFeatureReqHandler *****************
 23663 ;; Defined at:
 23664 ;;		line 2758 in file "mcc_generated_files/usb/usb_device.c"
 23665 ;; Parameters:    Size  Location     Type
 23666 ;;		None
 23667 ;; Auto vars:     Size  Location     Type
 23668 ;;  p               2   25[COMRAM] PTR struct __BDT
 23669 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 23670 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 23671 ;;		 -> UEP0(1), 
 23672 ;;  current_ep_d    1   24[COMRAM] struct .
 23673 ;; Return value:  Size  Location     Type
 23674 ;;                  1    wreg      void 
 23675 ;; Registers used:
 23676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23677 ;; Tracked objects:
 23678 ;;		On entry : 3B/4
 23679 ;;		On exit  : 3A/0
 23680 ;;		Unchanged: 0/0
 23681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23682 ;;      Params:         0       0       0       0       0       0       0       0       0
 23683 ;;      Locals:         5       0       0       0       0       0       0       0       0
 23684 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23685 ;;      Totals:         7       0       0       0       0       0       0       0       0
 23686 ;;Total ram usage:        7 bytes
 23687 ;; Hardware stack levels used: 1
 23688 ;; Hardware stack levels required when called: 4
 23689 ;; This function calls:
 23690 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23691 ;; This function is called by:
 23692 ;;		_USBCheckStdRequest
 23693 ;; This function uses a non-reentrant model
 23694 ;;
 23695                           
 23696                           	psect	text121
 23697  003D32                     __ptext121:
 23698                           	callstack 0
 23699  003D32                     _USBStdFeatureReqHandler:
 23700                           	callstack 12
 23701                           
 23702                           ;mcc_generated_files/usb/usb_device.c: 2760:     BDT_ENTRY *p;;mcc_generated_files/usb/u
      +                          sb_device.c: 2761:     EP_STATUS current_ep_data;;mcc_generated_files/usb/usb_device.c: 
      +                          2765:         unsigned char* pUEP;;mcc_generated_files/usb/usb_device.c: 2803:     if((S
      +                          etupPkt.bFeature == 1)&&
 23703                           
 23704                           ;incstack = 0
 23705  003D32  0104               	movlb	4	; () banked
 23706  003D34  0532               	decf	50,w,b	;volatile
 23707  003D36  A4D8               	btfss	status,2,c
 23708  003D38  D011               	goto	i2l361
 23709                           
 23710                           ; BSR set to: 4
 23711  003D3A  5130               	movf	48,w,b	;volatile
 23712  003D3C  0B1F               	andlw	31
 23713  003D3E  0900               	iorlw	0
 23714  003D40  A4D8               	btfss	status,2,c
 23715  003D42  D00C               	goto	i2l361
 23716                           
 23717                           ; BSR set to: 4
 23718                           ;mcc_generated_files/usb/usb_device.c: 2805:     {;mcc_generated_files/usb/usb_device.c:
      +                           2806:         inPipes[0].info.bits.busy = 1;
 23719  003D44  0100               	movlb	0	; () banked
 23720  003D46  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23721                           
 23722                           ; BSR set to: 0
 23723                           ;mcc_generated_files/usb/usb_device.c: 2807:         if(SetupPkt.bRequest == 3)
 23724  003D48  0E03               	movlw	3
 23725  003D4A  0104               	movlb	4	; () banked
 23726  003D4C  1931               	xorwf	49,w,b	;volatile
 23727  003D4E  A4D8               	btfss	status,2,c
 23728  003D50  D002               	goto	i2l8930
 23729                           
 23730                           ; BSR set to: 4
 23731                           ;mcc_generated_files/usb/usb_device.c: 2808:             RemoteWakeup = 1;
 23732  003D52  0E01               	movlw	1
 23733  003D54  D001               	goto	L24
 23734  003D56                     i2l8930:
 23735                           
 23736                           ; BSR set to: 4
 23737                           ;mcc_generated_files/usb/usb_device.c: 2810:             RemoteWakeup = 0;
 23738  003D56  0E00               	movlw	0
 23739  003D58                     L24:
 23740  003D58  0100               	movlb	0	; () banked
 23741  003D5A  6FD1               	movwf	_RemoteWakeup& (0+255),b	;volatile
 23742  003D5C                     i2l361:
 23743                           
 23744                           ;mcc_generated_files/usb/usb_device.c: 2814:     if((SetupPkt.bFeature == 0)&&
 23745  003D5C  0104               	movlb	4	; () banked
 23746  003D5E  5132               	movf	50,w,b	;volatile
 23747  003D60  A4D8               	btfss	status,2,c
 23748  003D62  0012               	return	
 23749                           
 23750                           ; BSR set to: 4
 23751  003D64  5130               	movf	48,w,b	;volatile
 23752  003D66  0B1F               	andlw	31
 23753  003D68  0A02               	xorlw	2
 23754  003D6A  A4D8               	btfss	status,2,c
 23755  003D6C  0012               	return	
 23756                           
 23757                           ; BSR set to: 4
 23758  003D6E  5134               	movf	52,w,b	;volatile
 23759  003D70  0B0F               	andlw	15
 23760  003D72  0900               	iorlw	0
 23761  003D74  B4D8               	btfsc	status,2,c
 23762  003D76  0012               	return	
 23763                           
 23764                           ; BSR set to: 4
 23765  003D78  5134               	movf	52,w,b	;volatile
 23766  003D7A  0B0F               	andlw	15
 23767  003D7C  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23768  003D7E  0E03               	movlw	3
 23769  003D80  6015               	cpfslt	??_USBStdFeatureReqHandler^0,c
 23770  003D82  0012               	return	
 23771                           
 23772                           ; BSR set to: 4
 23773  003D84  0E20               	movlw	32
 23774  003D86  185C               	xorwf	_USBDeviceState^0,w,c
 23775  003D88  A4D8               	btfss	status,2,c
 23776  003D8A  0012               	return	
 23777                           
 23778                           ; BSR set to: 4
 23779                           ;mcc_generated_files/usb/usb_device.c: 2818:     {;mcc_generated_files/usb/usb_device.c:
      +                           2821:   inPipes[0].info.bits.busy = 1;
 23780  003D8C  0100               	movlb	0	; () banked
 23781  003D8E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23782                           
 23783                           ;mcc_generated_files/usb/usb_device.c: 2824:         if(SetupPkt.EPDir == 0)
 23784  003D90  0104               	movlb	4	; () banked
 23785  003D92  BF34               	btfsc	52,7,b	;volatile
 23786  003D94  D018               	goto	i2l8946
 23787                           
 23788                           ; BSR set to: 4
 23789                           ;mcc_generated_files/usb/usb_device.c: 2825:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2826:             p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23790  003D96  5134               	movf	52,w,b	;volatile
 23791  003D98  0B0F               	andlw	15
 23792  003D9A  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23793  003D9C  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 23794  003D9E  0D02               	mullw	2
 23795  003DA0  0EAF               	movlw	low _pBDTEntryOut
 23796  003DA2  24F3               	addwf	243,w,c
 23797  003DA4  6ED9               	movwf	fsr2l,c
 23798  003DA6  0E01               	movlw	high _pBDTEntryOut
 23799  003DA8  20F4               	addwfc	prodh,w,c
 23800  003DAA  6EDA               	movwf	fsr2h,c
 23801  003DAC  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 23802  003DB0  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23803                           
 23804                           ; BSR set to: 4
 23805                           ;mcc_generated_files/usb/usb_device.c: 2827:             current_ep_data.Val = ep_data_o
      +                          ut[SetupPkt.EPNum].Val;
 23806  003DB4  5134               	movf	52,w,b	;volatile
 23807  003DB6  0B0F               	andlw	15
 23808  003DB8  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23809  003DBA  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23810  003DBC  0EBF               	movlw	low _ep_data_out
 23811  003DBE  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23812  003DC0  6ED9               	movwf	fsr2l,c
 23813  003DC2  0E01               	movlw	high _ep_data_out
 23814  003DC4  D013               	goto	L25
 23815  003DC6                     i2l8946:
 23816                           
 23817                           ; BSR set to: 4
 23818                           ;mcc_generated_files/usb/usb_device.c: 2830:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2831:             p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23819  003DC6  5134               	movf	52,w,b	;volatile
 23820  003DC8  0B0F               	andlw	15
 23821  003DCA  0D02               	mullw	2
 23822  003DCC  50F3               	movf	243,w,c
 23823  003DCE  0FB6               	addlw	low _pBDTEntryIn
 23824  003DD0  6ED9               	movwf	fsr2l,c
 23825  003DD2  6ADA               	clrf	fsr2h,c
 23826  003DD4  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 23827  003DD8  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23828                           
 23829                           ; BSR set to: 4
 23830                           ;mcc_generated_files/usb/usb_device.c: 2832:             current_ep_data.Val = ep_data_i
      +                          n[SetupPkt.EPNum].Val;
 23831  003DDC  5134               	movf	52,w,b	;volatile
 23832  003DDE  0B0F               	andlw	15
 23833  003DE0  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23834  003DE2  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23835  003DE4  0EC2               	movlw	low _ep_data_in
 23836  003DE6  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23837  003DE8  6ED9               	movwf	fsr2l,c
 23838  003DEA  0E01               	movlw	high _ep_data_in
 23839  003DEC                     L25:
 23840  003DEC  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 23841  003DEE  6EDA               	movwf	fsr2h,c
 23842  003DF0  50DF               	movf	indf2,w,c
 23843  003DF2  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data^0,c
 23844                           
 23845                           ; BSR set to: 4
 23846                           ;mcc_generated_files/usb/usb_device.c: 2839:             if(current_ep_data.bits.ping_po
      +                          ng_state == 0)
 23847  003DF4  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,0,c
 23848  003DF6  D006               	goto	i2l8954
 23849                           
 23850                           ; BSR set to: 4
 23851                           ;mcc_generated_files/usb/usb_device.c: 2840:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2841:                 p = (BDT_ENTRY*)(((uint16_t)p) & (~0x0004));
 23852  003DF8  0EFB               	movlw	251
 23853  003DFA  141A               	andwf	USBStdFeatureReqHandler@p^0,w,c
 23854  003DFC  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 23855  003DFE  0EFF               	movlw	255
 23856  003E00  141B               	andwf	(USBStdFeatureReqHandler@p+1)^0,w,c
 23857  003E02  D004               	goto	L26
 23858  003E04                     i2l8954:
 23859                           
 23860                           ; BSR set to: 4
 23861                           ;mcc_generated_files/usb/usb_device.c: 2844:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2845:                 p = (BDT_ENTRY*)(((uint16_t)p) | 0x0004);
 23862  003E04  0E04               	movlw	4
 23863  003E06  101A               	iorwf	USBStdFeatureReqHandler@p^0,w,c
 23864  003E08  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 23865  003E0A  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 23866  003E0C                     L26:
 23867  003E0C  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 23868                           
 23869                           ; BSR set to: 4
 23870                           ;mcc_generated_files/usb/usb_device.c: 2851:         if(SetupPkt.EPDir == 0)
 23871  003E0E  BF34               	btfsc	52,7,b	;volatile
 23872  003E10  D00C               	goto	i2l8960
 23873                           
 23874                           ; BSR set to: 4
 23875                           ;mcc_generated_files/usb/usb_device.c: 2852:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2853:             pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23876  003E12  5134               	movf	52,w,b	;volatile
 23877  003E14  0B0F               	andlw	15
 23878  003E16  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23879  003E18  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 23880  003E1A  0D02               	mullw	2
 23881  003E1C  0EAF               	movlw	low _pBDTEntryOut
 23882  003E1E  24F3               	addwf	243,w,c
 23883  003E20  6ED9               	movwf	fsr2l,c
 23884  003E22  0E01               	movlw	high _pBDTEntryOut
 23885  003E24  20F4               	addwfc	prodh,w,c
 23886  003E26  6EDA               	movwf	fsr2h,c
 23887  003E28  D007               	goto	L27
 23888  003E2A                     i2l8960:
 23889                           
 23890                           ; BSR set to: 4
 23891                           ;mcc_generated_files/usb/usb_device.c: 2856:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2857:             pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23892  003E2A  5134               	movf	52,w,b	;volatile
 23893  003E2C  0B0F               	andlw	15
 23894  003E2E  0D02               	mullw	2
 23895  003E30  50F3               	movf	243,w,c
 23896  003E32  0FB6               	addlw	low _pBDTEntryIn
 23897  003E34  6ED9               	movwf	fsr2l,c
 23898  003E36  6ADA               	clrf	fsr2h,c
 23899  003E38                     L27:
 23900  003E38  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 23901  003E3C  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 23902                           
 23903                           ; BSR set to: 4
 23904                           ;mcc_generated_files/usb/usb_device.c: 2861:         if(SetupPkt.bRequest == 3)
 23905  003E40  0E03               	movlw	3
 23906  003E42  1931               	xorwf	49,w,b	;volatile
 23907  003E44  A4D8               	btfss	status,2,c
 23908  003E46  D02A               	goto	i2l8972
 23909                           
 23910                           ; BSR set to: 4
 23911                           ;mcc_generated_files/usb/usb_device.c: 2862:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2863:             if(p->STAT.UOWN == 1)
 23912  003E48  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23913  003E4C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23914  003E50  AEDF               	btfss	indf2,7,c
 23915  003E52  D017               	goto	i2l372
 23916                           
 23917                           ; BSR set to: 4
 23918                           ;mcc_generated_files/usb/usb_device.c: 2864:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2867:                 if(SetupPkt.EPDir == 0)
 23919  003E54  BF34               	btfsc	52,7,b	;volatile
 23920  003E56  D009               	goto	i2l8970
 23921                           
 23922                           ; BSR set to: 4
 23923                           ;mcc_generated_files/usb/usb_device.c: 2868:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2869:                     ep_data_out[SetupPkt.EPNum].bits.transfer_termina
      +                          ted = 1;
 23924  003E58  5134               	movf	52,w,b	;volatile
 23925  003E5A  0B0F               	andlw	15
 23926  003E5C  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23927  003E5E  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23928  003E60  0EBF               	movlw	low _ep_data_out
 23929  003E62  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23930  003E64  6ED9               	movwf	fsr2l,c
 23931  003E66  0E01               	movlw	high _ep_data_out
 23932  003E68  D008               	goto	L28
 23933  003E6A                     i2l8970:
 23934                           
 23935                           ; BSR set to: 4
 23936                           ;mcc_generated_files/usb/usb_device.c: 2872:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2873:                     ep_data_in[SetupPkt.EPNum].bits.transfer_terminat
      +                          ed = 1;
 23937  003E6A  5134               	movf	52,w,b	;volatile
 23938  003E6C  0B0F               	andlw	15
 23939  003E6E  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 23940  003E70  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 23941  003E72  0EC2               	movlw	low _ep_data_in
 23942  003E74  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 23943  003E76  6ED9               	movwf	fsr2l,c
 23944  003E78  0E01               	movlw	high _ep_data_in
 23945  003E7A                     L28:
 23946  003E7A  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 23947  003E7C  6EDA               	movwf	fsr2h,c
 23948  003E7E  0101               	movlb	1	; () banked
 23949  003E80  82DF               	bsf	indf2,1,c
 23950  003E82                     i2l372:
 23951                           
 23952                           ;mcc_generated_files/usb/usb_device.c: 2878:             p->STAT.Val |= 0x04;
 23953  003E82  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23954  003E86  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23955  003E8A  0E00               	movlw	0
 23956  003E8C  84DB               	bsf	plusw2,2,c
 23957                           
 23958                           ;mcc_generated_files/usb/usb_device.c: 2879:             p->STAT.Val |= 0x80;
 23959  003E8E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23960  003E92  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23961  003E96  0E00               	movlw	0
 23962  003E98  8EDB               	bsf	plusw2,7,c
 23963                           
 23964                           ;mcc_generated_files/usb/usb_device.c: 2880:         }
 23965  003E9A  0012               	return	
 23966  003E9C                     i2l8972:
 23967                           
 23968                           ; BSR set to: 4
 23969                           ;mcc_generated_files/usb/usb_device.c: 2882:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2886:                 p = (BDT_ENTRY*)(((uint16_t)p) ^ 0x0004);
 23970  003E9C  0E04               	movlw	4
 23971  003E9E  181A               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 23972  003EA0  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 23973  003EA2  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 23974  003EA4  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 23975                           
 23976                           ; BSR set to: 4
 23977                           ;mcc_generated_files/usb/usb_device.c: 2888:                 if(p->STAT.UOWN == 1)
 23978  003EA6  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23979  003EAA  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23980  003EAE  AEDF               	btfss	indf2,7,c
 23981  003EB0  D01B               	goto	i2l8982
 23982                           
 23983                           ; BSR set to: 4
 23984                           ;mcc_generated_files/usb/usb_device.c: 2889:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2892:                     p->STAT.Val &= (~0x80);
 23985  003EB2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23986  003EB6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23987  003EBA  0E7F               	movlw	127
 23988  003EBC  16DF               	andwf	indf2,f,c
 23989                           
 23990                           ; BSR set to: 4
 23991                           ;mcc_generated_files/usb/usb_device.c: 2893:                     p->STAT.Val |= 0x40;
 23992  003EBE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23993  003EC2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23994  003EC6  0E00               	movlw	0
 23995  003EC8  8CDB               	bsf	plusw2,6,c
 23996                           
 23997                           ; BSR set to: 4
 23998                           ;mcc_generated_files/usb/usb_device.c: 2894:                     USER_USB_CALLBACK_EVENT
      +                          _HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATED,p,sizeof(p));
 23999  003ECA  0E00               	movlw	0
 24000  003ECC  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24001  003ECE  0E05               	movlw	5
 24002  003ED0  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24003  003ED2  C01A  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 24004  003ED6  C01B  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 24005  003EDA  0E00               	movlw	0
 24006  003EDC  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24007  003EDE  0E02               	movlw	2
 24008  003EE0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24009  003EE2  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24010                           
 24011                           ;mcc_generated_files/usb/usb_device.c: 2895:                 }
 24012  003EE6  D006               	goto	i2l8984
 24013  003EE8                     i2l8982:
 24014                           
 24015                           ; BSR set to: 4
 24016                           ;mcc_generated_files/usb/usb_device.c: 2897:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2899:      p->STAT.Val |= 0x40;
 24017  003EE8  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24018  003EEC  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24019  003EF0  0E00               	movlw	0
 24020  003EF2  8CDB               	bsf	plusw2,6,c
 24021  003EF4                     i2l8984:
 24022                           
 24023                           ;mcc_generated_files/usb/usb_device.c: 2904:                 p = (BDT_ENTRY*)(((uint16_t
      +                          )p) ^ 0x0004);
 24024  003EF4  0E04               	movlw	4
 24025  003EF6  181A               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 24026  003EF8  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 24027  003EFA  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 24028  003EFC  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 24029                           
 24030                           ;mcc_generated_files/usb/usb_device.c: 2910:                 if((current_ep_data.bits.tr
      +                          ansfer_terminated != 0) || (p->STAT.UOWN == 1))
 24031  003EFE  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,1,c
 24032  003F00  D006               	goto	i2u934_40
 24033  003F02  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24034  003F06  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24035  003F0A  AEDF               	btfss	indf2,7,c
 24036  003F0C  D02D               	goto	i2l8998
 24037  003F0E                     i2u934_40:
 24038                           
 24039                           ;mcc_generated_files/usb/usb_device.c: 2911:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2912:                     if(SetupPkt.EPDir == 0)
 24040  003F0E  0104               	movlb	4	; () banked
 24041  003F10  BF34               	btfsc	52,7,b	;volatile
 24042  003F12  D009               	goto	i2l8992
 24043                           
 24044                           ; BSR set to: 4
 24045                           ;mcc_generated_files/usb/usb_device.c: 2913:                     {;mcc_generated_files/u
      +                          sb/usb_device.c: 2914:                         ep_data_out[SetupPkt.EPNum].bits.transfer
      +                          _terminated = 0;
 24046  003F14  5134               	movf	52,w,b	;volatile
 24047  003F16  0B0F               	andlw	15
 24048  003F18  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 24049  003F1A  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 24050  003F1C  0EBF               	movlw	low _ep_data_out
 24051  003F1E  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 24052  003F20  6ED9               	movwf	fsr2l,c
 24053  003F22  0E01               	movlw	high _ep_data_out
 24054  003F24  D008               	goto	L29
 24055  003F26                     i2l8992:
 24056                           
 24057                           ; BSR set to: 4
 24058                           ;mcc_generated_files/usb/usb_device.c: 2917:                     {;mcc_generated_files/u
      +                          sb/usb_device.c: 2918:                         ep_data_in[SetupPkt.EPNum].bits.transfer_
      +                          terminated = 0;
 24059  003F26  5134               	movf	52,w,b	;volatile
 24060  003F28  0B0F               	andlw	15
 24061  003F2A  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 24062  003F2C  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 24063  003F2E  0EC2               	movlw	low _ep_data_in
 24064  003F30  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 24065  003F32  6ED9               	movwf	fsr2l,c
 24066  003F34  0E01               	movlw	high _ep_data_in
 24067  003F36                     L29:
 24068  003F36  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 24069  003F38  6EDA               	movwf	fsr2h,c
 24070  003F3A  0101               	movlb	1	; () banked
 24071  003F3C  92DF               	bcf	indf2,1,c
 24072                           
 24073                           ; BSR set to: 1
 24074                           ;mcc_generated_files/usb/usb_device.c: 2921:                     p->STAT.Val &= ~(0x80 |
      +                           0x40 | 0x04);
 24075  003F3E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24076  003F42  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24077  003F46  0E3B               	movlw	59
 24078  003F48  16DF               	andwf	indf2,f,c
 24079                           
 24080                           ; BSR set to: 1
 24081                           ;mcc_generated_files/usb/usb_device.c: 2924:                     USER_USB_CALLBACK_EVENT
      +                          _HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATED,p,sizeof(p));
 24082  003F4A  0E00               	movlw	0
 24083  003F4C  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24084  003F4E  0E05               	movlw	5
 24085  003F50  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24086  003F52  C01A  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 24087  003F56  C01B  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 24088  003F5A  0E00               	movlw	0
 24089  003F5C  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24090  003F5E  0E02               	movlw	2
 24091  003F60  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24092  003F62  ECC0  F038         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24093                           
 24094                           ;mcc_generated_files/usb/usb_device.c: 2925:                 }
 24095  003F66  D006               	goto	i2l9000
 24096  003F68                     i2l8998:
 24097                           
 24098                           ;mcc_generated_files/usb/usb_device.c: 2927:                 {;mcc_generated_files/usb/u
      +                          sb_device.c: 2929:                     p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 24099  003F68  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24100  003F6C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24101  003F70  0E3B               	movlw	59
 24102  003F72  16DF               	andwf	indf2,f,c
 24103  003F74                     i2l9000:
 24104                           
 24105                           ;mcc_generated_files/usb/usb_device.c: 2977:                 pUEP = (unsigned char*)(&UE
      +                          P0+SetupPkt.EPNum);
 24106  003F74  0104               	movlb	4	; () banked
 24107  003F76  5134               	movf	52,w,b	;volatile
 24108  003F78  0B0F               	andlw	15
 24109  003F7A  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 24110  003F7C  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 24111  003F7E  0E6A               	movlw	106
 24112  003F80  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 24113  003F82  6E17               	movwf	USBStdFeatureReqHandler@pUEP^0,c
 24114  003F84  0E0F               	movlw	15
 24115  003F86  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 24116  003F88  6E18               	movwf	(USBStdFeatureReqHandler@pUEP+1)^0,c
 24117                           
 24118                           ; BSR set to: 4
 24119                           ;mcc_generated_files/usb/usb_device.c: 2981:             *pUEP &= ~0x0001;
 24120  003F8A  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 24121  003F8E  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 24122  003F92  0EFE               	movlw	254
 24123  003F94  16DF               	andwf	indf2,f,c
 24124  003F96  0012               	return		;funcret
 24125  003F98                     __end_of_USBStdFeatureReqHandler:
 24126                           	callstack 0
 24127                           
 24128 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 24129 ;; Defined at:
 24130 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 24131 ;; Parameters:    Size  Location     Type
 24132 ;;  event           2   12[COMRAM] enum E46
 24133 ;;  pdata           2   14[COMRAM] PTR void 
 24134 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 24135 ;;		 -> BDT(48), 
 24136 ;;  size            2   16[COMRAM] unsigned short 
 24137 ;; Auto vars:     Size  Location     Type
 24138 ;;		None
 24139 ;; Return value:  Size  Location     Type
 24140 ;;                  1    wreg      _Bool 
 24141 ;; Registers used:
 24142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24143 ;; Tracked objects:
 24144 ;;		On entry : 0/0
 24145 ;;		On exit  : 0/0
 24146 ;;		Unchanged: 0/0
 24147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24148 ;;      Params:         6       0       0       0       0       0       0       0       0
 24149 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24150 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24151 ;;      Totals:         8       0       0       0       0       0       0       0       0
 24152 ;;Total ram usage:        8 bytes
 24153 ;; Hardware stack levels used: 1
 24154 ;; Hardware stack levels required when called: 3
 24155 ;; This function calls:
 24156 ;;		_CDCInitEP
 24157 ;;		_USBCheckCDCRequest
 24158 ;; This function is called by:
 24159 ;;		_USBDeviceTasks
 24160 ;;		_USBStdSetCfgHandler
 24161 ;;		_USBSuspend
 24162 ;;		_USBWakeFromSuspend
 24163 ;;		_USBCtrlTrfSetupHandler
 24164 ;;		_USBCheckStdRequest
 24165 ;;		_USBStdFeatureReqHandler
 24166 ;; This function uses a non-reentrant model
 24167 ;;
 24168                           
 24169                           	psect	text122
 24170  007180                     __ptext122:
 24171                           	callstack 0
 24172  007180                     _USER_USB_CALLBACK_EVENT_HANDLER:
 24173                           	callstack 16
 24174                           
 24175                           ;mcc_generated_files/usb/usb_device_events.c: 49: _Bool USER_USB_CALLBACK_EVENT_HANDLER(
      +                          USB_EVENT event, void *pdata, uint16_t size);mcc_generated_files/usb/usb_device_events.c
      +                          : 50: {;mcc_generated_files/usb/usb_device_events.c: 51:     switch( (int) event )
 24176                           
 24177                           ;incstack = 0
 24178  007180  D006               	goto	i2l8036
 24179  007182                     i2l8030:
 24180                           
 24181                           ;mcc_generated_files/usb/usb_device_events.c: 76:             CDCInitEP();
 24182  007182  EC2F  F038         	call	_CDCInitEP	;wreg free
 24183                           
 24184                           ;mcc_generated_files/usb/usb_device_events.c: 77:             break;
 24185  007186  0012               	return	
 24186  007188                     i2l8032:
 24187                           
 24188                           ;mcc_generated_files/usb/usb_device_events.c: 85:             USBCheckCDCRequest();
 24189  007188  EC82  F032         	call	_USBCheckCDCRequest	;wreg free
 24190                           
 24191                           ;mcc_generated_files/usb/usb_device_events.c: 86:             break;
 24192  00718C  0012               	return	
 24193  00718E                     i2l8036:
 24194  00718E  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 24195  007192  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 24196                           
 24197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24198                           ; Switch size 1, requested type "simple"
 24199                           ; Number of cases is 2, Range of values is 0 to 127
 24200                           ; switch strategies available:
 24201                           ; Name         Instructions Cycles
 24202                           ; simple_byte            7     4 (average)
 24203                           ;	Chosen strategy is simple_byte
 24204  007196  5014               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)^0,w,c
 24205  007198  0A00               	xorlw	0	; case 0
 24206  00719A  B4D8               	btfsc	status,2,c
 24207  00719C  D004               	goto	i2l15942
 24208  00719E  0A7F               	xorlw	127	; case 127
 24209  0071A0  A4D8               	btfss	status,2,c
 24210  0071A2  0012               	return	
 24211  0071A4  D018               	goto	i2l15944
 24212  0071A6                     i2l15942:
 24213                           
 24214                           ; Switch size 1, requested type "simple"
 24215                           ; Number of cases is 8, Range of values is 1 to 117
 24216                           ; switch strategies available:
 24217                           ; Name         Instructions Cycles
 24218                           ; simple_byte           25    13 (average)
 24219                           ;	Chosen strategy is simple_byte
 24220  0071A6  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 24221  0071A8  0A01               	xorlw	1	; case 1
 24222  0071AA  B4D8               	btfsc	status,2,c
 24223  0071AC  D7EA               	goto	i2l8030
 24224  0071AE  0A03               	xorlw	3	; case 2
 24225  0071B0  B4D8               	btfsc	status,2,c
 24226  0071B2  0012               	return	
 24227  0071B4  0A01               	xorlw	1	; case 3
 24228  0071B6  B4D8               	btfsc	status,2,c
 24229  0071B8  D7E7               	goto	i2l8032
 24230  0071BA  0A06               	xorlw	6	; case 5
 24231  0071BC  B4D8               	btfsc	status,2,c
 24232  0071BE  0012               	return	
 24233  0071C0  0A77               	xorlw	119	; case 114
 24234  0071C2  B4D8               	btfsc	status,2,c
 24235  0071C4  0012               	return	
 24236  0071C6  0A01               	xorlw	1	; case 115
 24237  0071C8  B4D8               	btfsc	status,2,c
 24238  0071CA  0012               	return	
 24239  0071CC  0A07               	xorlw	7	; case 116
 24240  0071CE  B4D8               	btfsc	status,2,c
 24241  0071D0  0012               	return	
 24242  0071D2  0A01               	xorlw	1	; case 117
 24243  0071D4  0012               	return	
 24244  0071D6                     i2l15944:
 24245                           
 24246                           ; Switch size 1, requested type "simple"
 24247                           ; Number of cases is 1, Range of values is 255 to 255
 24248                           ; switch strategies available:
 24249                           ; Name         Instructions Cycles
 24250                           ; simple_byte            4     3 (average)
 24251                           ;	Chosen strategy is simple_byte
 24252  0071D6  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 24253  0071D8  0AFF               	xorlw	255	; case 255
 24254  0071DA  0012               	return	
 24255  0071DC                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 24256                           	callstack 0
 24257                           
 24258 ;; *************** function _USBCheckCDCRequest *****************
 24259 ;; Defined at:
 24260 ;;		line 147 in file "mcc_generated_files/usb/usb_device_cdc.c"
 24261 ;; Parameters:    Size  Location     Type
 24262 ;;		None
 24263 ;; Auto vars:     Size  Location     Type
 24264 ;;		None
 24265 ;; Return value:  Size  Location     Type
 24266 ;;                  1    wreg      void 
 24267 ;; Registers used:
 24268 ;;		wreg, status,2, status,0
 24269 ;; Tracked objects:
 24270 ;;		On entry : 0/0
 24271 ;;		On exit  : 3B/0
 24272 ;;		Unchanged: 0/0
 24273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24274 ;;      Params:         0       0       0       0       0       0       0       0       0
 24275 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24276 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24277 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24278 ;;Total ram usage:        2 bytes
 24279 ;; Hardware stack levels used: 1
 24280 ;; This function calls:
 24281 ;;		Nothing
 24282 ;; This function is called by:
 24283 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24284 ;; This function uses a non-reentrant model
 24285 ;;
 24286                           
 24287                           	psect	text123
 24288  006504                     __ptext123:
 24289                           	callstack 0
 24290  006504                     _USBCheckCDCRequest:
 24291                           	callstack 18
 24292                           
 24293                           ;mcc_generated_files/usb/usb_device_cdc.c: 152:     if(SetupPkt.Recipient != (0x01)) ret
      +                          urn;
 24294                           
 24295                           ;incstack = 0
 24296  006504  0104               	movlb	4	; () banked
 24297  006506  5130               	movf	48,w,b	;volatile
 24298  006508  0B1F               	andlw	31
 24299  00650A  06E8               	decf	wreg,f,c
 24300  00650C  A4D8               	btfss	status,2,c
 24301  00650E  0012               	return	
 24302                           
 24303                           ; BSR set to: 4
 24304                           ;mcc_generated_files/usb/usb_device_cdc.c: 157:     if(SetupPkt.RequestType != (0x20>>5)
      +                          ) return;
 24305  006510  3930               	swapf	48,w,b	;volatile
 24306  006512  32E8               	rrcf	wreg,f,c
 24307  006514  0B03               	andlw	3
 24308  006516  06E8               	decf	wreg,f,c
 24309  006518  A4D8               	btfss	status,2,c
 24310  00651A  0012               	return	
 24311                           
 24312                           ; BSR set to: 4
 24313                           ;mcc_generated_files/usb/usb_device_cdc.c: 163:     if((SetupPkt.bIntfID != 0x0)&&
 24314  00651C  5134               	movf	52,w,b	;volatile
 24315  00651E  B4D8               	btfsc	status,2,c
 24316  006520  D037               	goto	i2l7796
 24317                           
 24318                           ; BSR set to: 4
 24319  006522  0534               	decf	52,w,b	;volatile
 24320  006524  A4D8               	btfss	status,2,c
 24321  006526  0012               	return	
 24322  006528  D033               	goto	i2l7796
 24323  00652A                     i2l7772:
 24324                           
 24325                           ; BSR set to: 4
 24326                           ;mcc_generated_files/usb/usb_device_cdc.c: 171:             inPipes[0].pSrc.bRam = (uint
      +                          8_t*)&dummy_encapsulated_cmd_response;
 24327  00652A  0EDC               	movlw	low _dummy_encapsulated_cmd_response
 24328  00652C  0100               	movlb	0	; () banked
 24329  00652E  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 24330  006530  0E02               	movlw	high _dummy_encapsulated_cmd_response
 24331  006532  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24332                           
 24333                           ; BSR set to: 0
 24334                           ;mcc_generated_files/usb/usb_device_cdc.c: 172:             inPipes[0].wCount.Val = 0x08
      +                          ;
 24335  006534  0E00               	movlw	0
 24336  006536  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24337  006538  0E08               	movlw	8
 24338  00653A  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24339                           
 24340                           ; BSR set to: 0
 24341                           ;mcc_generated_files/usb/usb_device_cdc.c: 173:             inPipes[0].info.bits.ctrl_tr
      +                          f_mem = 0x01;
 24342  00653C  81B3               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 24343                           
 24344                           ; BSR set to: 0
 24345                           ;mcc_generated_files/usb/usb_device_cdc.c: 174:             inPipes[0].info.bits.busy = 
      +                          1;
 24346  00653E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24347                           
 24348                           ;mcc_generated_files/usb/usb_device_cdc.c: 175:             break;
 24349  006540  0012               	return	
 24350  006542                     i2l7780:
 24351                           
 24352                           ; BSR set to: 4
 24353                           ;mcc_generated_files/usb/usb_device_cdc.c: 178:             inPipes[0].pSrc.bRam = (uint
      +                          8_t*)&dummy_encapsulated_cmd_response;
 24354  006542  0EDC               	movlw	low _dummy_encapsulated_cmd_response
 24355  006544  0100               	movlb	0	; () banked
 24356  006546  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 24357  006548  0E02               	movlw	high _dummy_encapsulated_cmd_response
 24358  00654A  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24359                           
 24360                           ; BSR set to: 0
 24361                           ;mcc_generated_files/usb/usb_device_cdc.c: 179:             inPipes[0].info.bits.busy = 
      +                          1;
 24362  00654C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24363                           
 24364                           ;mcc_generated_files/usb/usb_device_cdc.c: 180:             break;
 24365  00654E  0012               	return	
 24366  006550                     i2l480:
 24367                           
 24368                           ; BSR set to: 4
 24369                           ;mcc_generated_files/usb/usb_device_cdc.c: 185:             outPipes[0].wCount.Val = Set
      +                          upPkt.wLength;
 24370  006550  C436 F0AC          	movff	1078,_outPipes+4	;volatile
 24371  006554  C437 F0AD          	movff	1079,_outPipes+5	;volatile
 24372                           
 24373                           ; BSR set to: 4
 24374                           ;mcc_generated_files/usb/usb_device_cdc.c: 186:             outPipes[0].pDst.bRam = (uin
      +                          t8_t*)&line_coding._byte[0];
 24375  006558  0EE4               	movlw	low _line_coding
 24376  00655A  0100               	movlb	0	; () banked
 24377  00655C  6FA8               	movwf	_outPipes& (0+255),b	;volatile
 24378  00655E  0E02               	movlw	high _line_coding
 24379  006560  6FA9               	movwf	(_outPipes+1)& (0+255),b	;volatile
 24380                           
 24381                           ;mcc_generated_files/usb/usb_device_cdc.c: 187:             outPipes[0].pFunc = ((void*)
      +                          0);
 24382  006562  0E00               	movlw	0
 24383  006564  6FAE               	movwf	(_outPipes+6)& (0+255),b	;volatile
 24384  006566  0E00               	movlw	0
 24385  006568  6FAF               	movwf	(_outPipes+7)& (0+255),b	;volatile
 24386                           
 24387                           ; BSR set to: 0
 24388                           ;mcc_generated_files/usb/usb_device_cdc.c: 188:             outPipes[0].info.bits.busy =
      +                           1;
 24389  00656A  8FAB               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 24390                           
 24391                           ;mcc_generated_files/usb/usb_device_cdc.c: 189:             break;
 24392  00656C  0012               	return	
 24393  00656E                     i2l7788:
 24394                           
 24395                           ; BSR set to: 4
 24396                           ;mcc_generated_files/usb/usb_device_cdc.c: 192:             { inPipes[0].pSrc.bRam = (ui
      +                          nt8_t*)&line_coding; inPipes[0].wCount.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0
      +                          x01; };
 24397  00656E  0EE4               	movlw	low _line_coding
 24398  006570  0100               	movlb	0	; () banked
 24399  006572  6FB0               	movwf	_inPipes& (0+255),b	;volatile
 24400  006574  0E02               	movlw	high _line_coding
 24401  006576  6FB1               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24402                           
 24403                           ; BSR set to: 0
 24404  006578  0E00               	movlw	0
 24405  00657A  6FB5               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24406  00657C  0E07               	movlw	7
 24407  00657E  6FB4               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24408                           
 24409                           ; BSR set to: 0
 24410  006580  0EC1               	movlw	193
 24411  006582  6FB3               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24412                           
 24413                           ;mcc_generated_files/usb/usb_device_cdc.c: 196:             break;
 24414  006584  0012               	return	
 24415  006586                     i2l482:
 24416                           
 24417                           ; BSR set to: 4
 24418                           ;mcc_generated_files/usb/usb_device_cdc.c: 199:             control_signal_bitmap._byte 
      +                          = (uint8_t)SetupPkt.wValue;
 24419  006586  C432 F1E2          	movff	1074,_control_signal_bitmap	;volatile
 24420                           
 24421                           ;mcc_generated_files/usb/usb_device_cdc.c: 231:             inPipes[0].info.bits.busy = 
      +                          1;
 24422  00658A  0100               	movlb	0	; () banked
 24423  00658C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24424                           
 24425                           ;mcc_generated_files/usb/usb_device_cdc.c: 232:             break;
 24426  00658E  0012               	return	
 24427  006590                     i2l7796:
 24428                           
 24429                           ; BSR set to: 4
 24430  006590  5131               	movf	49,w,b	;volatile
 24431  006592  6E01               	movwf	??_USBCheckCDCRequest^0,c
 24432  006594  6A02               	clrf	(??_USBCheckCDCRequest+1)^0,c
 24433                           
 24434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24435                           ; Switch size 1, requested type "simple"
 24436                           ; Number of cases is 1, Range of values is 0 to 0
 24437                           ; switch strategies available:
 24438                           ; Name         Instructions Cycles
 24439                           ; simple_byte            4     3 (average)
 24440                           ;	Chosen strategy is simple_byte
 24441  006596  5002               	movf	(??_USBCheckCDCRequest+1)^0,w,c
 24442  006598  0A00               	xorlw	0	; case 0
 24443  00659A  A4D8               	btfss	status,2,c
 24444  00659C  0012               	return	
 24445                           
 24446                           ; BSR set to: 4
 24447                           ; Switch size 1, requested type "simple"
 24448                           ; Number of cases is 5, Range of values is 0 to 34
 24449                           ; switch strategies available:
 24450                           ; Name         Instructions Cycles
 24451                           ; simple_byte           16     9 (average)
 24452                           ;	Chosen strategy is simple_byte
 24453  00659E  5001               	movf	??_USBCheckCDCRequest^0,w,c
 24454  0065A0  0A00               	xorlw	0	; case 0
 24455  0065A2  B4D8               	btfsc	status,2,c
 24456  0065A4  D7C2               	goto	i2l7772
 24457  0065A6  0A01               	xorlw	1	; case 1
 24458  0065A8  B4D8               	btfsc	status,2,c
 24459  0065AA  D7CB               	goto	i2l7780
 24460  0065AC  0A21               	xorlw	33	; case 32
 24461  0065AE  B4D8               	btfsc	status,2,c
 24462  0065B0  D7CF               	goto	i2l480
 24463  0065B2  0A01               	xorlw	1	; case 33
 24464  0065B4  B4D8               	btfsc	status,2,c
 24465  0065B6  D7DB               	goto	i2l7788
 24466  0065B8  0A03               	xorlw	3	; case 34
 24467  0065BA  A4D8               	btfss	status,2,c
 24468  0065BC  0012               	return	
 24469  0065BE  D7E3               	goto	i2l482
 24470  0065C0                     __end_of_USBCheckCDCRequest:
 24471                           	callstack 0
 24472                           
 24473 ;; *************** function _CDCInitEP *****************
 24474 ;; Defined at:
 24475 ;;		line 294 in file "mcc_generated_files/usb/usb_device_cdc.c"
 24476 ;; Parameters:    Size  Location     Type
 24477 ;;		None
 24478 ;; Auto vars:     Size  Location     Type
 24479 ;;		None
 24480 ;; Return value:  Size  Location     Type
 24481 ;;                  1    wreg      void 
 24482 ;; Registers used:
 24483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24484 ;; Tracked objects:
 24485 ;;		On entry : 0/0
 24486 ;;		On exit  : 3F/0
 24487 ;;		Unchanged: 0/0
 24488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24489 ;;      Params:         0       0       0       0       0       0       0       0       0
 24490 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24491 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24492 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24493 ;;Total ram usage:        0 bytes
 24494 ;; Hardware stack levels used: 1
 24495 ;; Hardware stack levels required when called: 2
 24496 ;; This function calls:
 24497 ;;		_USBEnableEndpoint
 24498 ;;		i2_USBTransferOnePacket
 24499 ;; This function is called by:
 24500 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24501 ;; This function uses a non-reentrant model
 24502 ;;
 24503                           
 24504                           	psect	text124
 24505  00705E                     __ptext124:
 24506                           	callstack 0
 24507  00705E                     _CDCInitEP:
 24508                           	callstack 16
 24509                           
 24510                           ;mcc_generated_files/usb/usb_device_cdc.c: 297:     line_coding.dwDTERate = 19200;
 24511                           
 24512                           ;incstack = 0
 24513  00705E  0E00               	movlw	0
 24514  007060  0102               	movlb	2	; () banked
 24515  007062  6FE4               	movwf	_line_coding& (0+255),b
 24516  007064  0E4B               	movlw	75
 24517  007066  6FE5               	movwf	(_line_coding+1)& (0+255),b
 24518  007068  0E00               	movlw	0
 24519  00706A  6FE6               	movwf	(_line_coding+2)& (0+255),b
 24520  00706C  0E00               	movlw	0
 24521  00706E  6FE7               	movwf	(_line_coding+3)& (0+255),b
 24522                           
 24523                           ;mcc_generated_files/usb/usb_device_cdc.c: 298:     line_coding.bCharFormat = 0x00;
 24524  007070  0E00               	movlw	0
 24525  007072  6FE8               	movwf	(_line_coding+4)& (0+255),b
 24526                           
 24527                           ;mcc_generated_files/usb/usb_device_cdc.c: 299:     line_coding.bParityType = 0x00;
 24528  007074  0E00               	movlw	0
 24529  007076  6FE9               	movwf	(_line_coding+5)& (0+255),b
 24530                           
 24531                           ;mcc_generated_files/usb/usb_device_cdc.c: 300:     line_coding.bDataBits = 0x08;
 24532  007078  0E08               	movlw	8
 24533  00707A  6FEA               	movwf	(_line_coding+6)& (0+255),b
 24534                           
 24535                           ;mcc_generated_files/usb/usb_device_cdc.c: 302:     cdc_rx_len = 0;
 24536  00707C  0E00               	movlw	0
 24537  00707E  0100               	movlb	0	; () banked
 24538  007080  6FC8               	movwf	_cdc_rx_len& (0+255),b
 24539                           
 24540                           ; BSR set to: 0
 24541                           ;mcc_generated_files/usb/usb_device_cdc.c: 315:     USBEnableEndpoint(1,0x02|0x10|0x08);
 24542  007082  0E1A               	movlw	26
 24543  007084  6E09               	movwf	USBEnableEndpoint@options^0,c
 24544  007086  0E01               	movlw	1
 24545  007088  EC05  F03C         	call	_USBEnableEndpoint
 24546                           
 24547                           ;mcc_generated_files/usb/usb_device_cdc.c: 316:     USBEnableEndpoint(2,0x02|0x04|0x10|0
      +                          x08);
 24548  00708C  0E1E               	movlw	30
 24549  00708E  6E09               	movwf	USBEnableEndpoint@options^0,c
 24550  007090  0E02               	movlw	2
 24551  007092  EC05  F03C         	call	_USBEnableEndpoint
 24552                           
 24553                           ;mcc_generated_files/usb/usb_device_cdc.c: 318:     CDCDataOutHandle = USBTransferOnePac
      +                          ket(2,0,(uint8_t*)&cdc_data_rx,sizeof(cdc_data_rx));
 24554  007096  0E00               	movlw	0
 24555  007098  6E01               	movwf	i2USBTransferOnePacket@dir^0,c
 24556  00709A  0E40               	movlw	64
 24557  00709C  6E02               	movwf	i2USBTransferOnePacket@data^0,c
 24558  00709E  0E05               	movlw	5
 24559  0070A0  6E03               	movwf	(i2USBTransferOnePacket@data+1)^0,c
 24560  0070A2  0E40               	movlw	64
 24561  0070A4  6E04               	movwf	i2USBTransferOnePacket@len^0,c
 24562  0070A6  0E02               	movlw	2
 24563  0070A8  EC26  F02C         	call	i2_USBTransferOnePacket
 24564  0070AC  C001  F1D5         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 24565  0070B0  C002  F1D6         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 24566                           
 24567                           ;mcc_generated_files/usb/usb_device_cdc.c: 319:     CDCDataInHandle = ((void*)0);
 24568  0070B4  0E00               	movlw	0
 24569  0070B6  0101               	movlb	1	; () banked
 24570  0070B8  6FD3               	movwf	_CDCDataInHandle& (0+255),b
 24571  0070BA  0E00               	movlw	0
 24572  0070BC  6FD4               	movwf	(_CDCDataInHandle+1)& (0+255),b
 24573                           
 24574                           ; BSR set to: 1
 24575                           ;mcc_generated_files/usb/usb_device_cdc.c: 346:     cdc_trf_state = 0;
 24576  0070BE  0E00               	movlw	0
 24577  0070C0  0100               	movlb	0	; () banked
 24578  0070C2  6FC7               	movwf	_cdc_trf_state& (0+255),b
 24579                           
 24580                           ; BSR set to: 0
 24581  0070C4  0012               	return		;funcret
 24582  0070C6                     __end_of_CDCInitEP:
 24583                           	callstack 0
 24584                           
 24585 ;; *************** function i2_USBTransferOnePacket *****************
 24586 ;; Defined at:
 24587 ;;		line 999 in file "mcc_generated_files/usb/usb_device.c"
 24588 ;; Parameters:    Size  Location     Type
 24589 ;;  ep              1    wreg     unsigned char 
 24590 ;;  dir             1    0[COMRAM] unsigned char 
 24591 ;;  data            2    1[COMRAM] PTR unsigned char 
 24592 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 24593 ;;  len             1    3[COMRAM] unsigned char 
 24594 ;; Auto vars:     Size  Location     Type
 24595 ;;  ep              1    6[COMRAM] unsigned char 
 24596 ;;  handle          2    7[COMRAM] PTR volatile struct __BD
 24597 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 24598 ;; Return value:  Size  Location     Type
 24599 ;;                  2    0[COMRAM] PTR void 
 24600 ;; Registers used:
 24601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24602 ;; Tracked objects:
 24603 ;;		On entry : 0/0
 24604 ;;		On exit  : 0/0
 24605 ;;		Unchanged: 0/0
 24606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24607 ;;      Params:         4       0       0       0       0       0       0       0       0
 24608 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24609 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24610 ;;      Totals:         9       0       0       0       0       0       0       0       0
 24611 ;;Total ram usage:        9 bytes
 24612 ;; Hardware stack levels used: 1
 24613 ;; This function calls:
 24614 ;;		Nothing
 24615 ;; This function is called by:
 24616 ;;		_CDCInitEP
 24617 ;; This function uses a non-reentrant model
 24618 ;;
 24619                           
 24620                           	psect	text125
 24621  00584C                     __ptext125:
 24622                           	callstack 0
 24623  00584C                     i2_USBTransferOnePacket:
 24624                           	callstack 17
 24625                           
 24626                           ; BSR set to: 0
 24627                           ;incstack = 0
 24628                           ;i2USBTransferOnePacket@ep stored from wreg
 24629  00584C  6E07               	movwf	i2USBTransferOnePacket@ep^0,c
 24630                           
 24631                           ;mcc_generated_files/usb/usb_device.c: 999: void* USBTransferOnePacket(uint8_t ep,uint8_
      +                          t dir,uint8_t* data,uint8_t len);mcc_generated_files/usb/usb_device.c: 1000: {;mcc_gener
      +                          ated_files/usb/usb_device.c: 1001:     volatile BDT_ENTRY* handle;;mcc_generated_files/u
      +                          sb/usb_device.c: 1004:     if(dir != 0)
 24632  00584E  5001               	movf	i2USBTransferOnePacket@dir^0,w,c
 24633  005850  B4D8               	btfsc	status,2,c
 24634  005852  D007               	goto	i2l7720
 24635                           
 24636                           ;mcc_generated_files/usb/usb_device.c: 1005:     {;mcc_generated_files/usb/usb_device.c:
      +                           1007:         handle = pBDTEntryIn[ep];
 24637  005854  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24638  005856  0D02               	mullw	2
 24639  005858  50F3               	movf	243,w,c
 24640  00585A  0FB6               	addlw	low _pBDTEntryIn
 24641  00585C  6ED9               	movwf	fsr2l,c
 24642  00585E  6ADA               	clrf	fsr2h,c
 24643  005860  D008               	goto	L30
 24644  005862                     i2l7720:
 24645                           
 24646                           ;mcc_generated_files/usb/usb_device.c: 1010:     {;mcc_generated_files/usb/usb_device.c:
      +                           1012:         handle = pBDTEntryOut[ep];
 24647  005862  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24648  005864  0D02               	mullw	2
 24649  005866  0EAF               	movlw	low _pBDTEntryOut
 24650  005868  24F3               	addwf	243,w,c
 24651  00586A  6ED9               	movwf	fsr2l,c
 24652  00586C  0E01               	movlw	high _pBDTEntryOut
 24653  00586E  20F4               	addwfc	prodh,w,c
 24654  005870  6EDA               	movwf	fsr2h,c
 24655  005872                     L30:
 24656  005872  CFDE F008          	movff	postinc2,i2USBTransferOnePacket@handle
 24657  005876  CFDD F009          	movff	postdec2,i2USBTransferOnePacket@handle+1
 24658                           
 24659                           ;mcc_generated_files/usb/usb_device.c: 1017:     if(handle == 0)
 24660  00587A  5008               	movf	i2USBTransferOnePacket@handle^0,w,c
 24661  00587C  1009               	iorwf	(i2USBTransferOnePacket@handle+1)^0,w,c
 24662  00587E  A4D8               	btfss	status,2,c
 24663  005880  D005               	goto	i2l7728
 24664                           
 24665                           ;mcc_generated_files/usb/usb_device.c: 1018:     {;mcc_generated_files/usb/usb_device.c:
      +                           1019:         return 0;
 24666  005882  0E00               	movlw	0
 24667  005884  6E01               	movwf	?i2_USBTransferOnePacket^0,c
 24668  005886  0E00               	movlw	0
 24669  005888  6E02               	movwf	(?i2_USBTransferOnePacket+1)^0,c
 24670  00588A  0012               	return	
 24671  00588C                     i2l7728:
 24672                           
 24673                           ;mcc_generated_files/usb/usb_device.c: 1033:     handle->ADR = ((uint16_t)(data));
 24674  00588C  EE20 F002          	lfsr	2,2
 24675  005890  5008               	movf	i2USBTransferOnePacket@handle^0,w,c
 24676  005892  26D9               	addwf	fsr2l,f,c
 24677  005894  5009               	movf	(i2USBTransferOnePacket@handle+1)^0,w,c
 24678  005896  22DA               	addwfc	fsr2h,f,c
 24679  005898  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 24680  00589C  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 24681                           
 24682                           ;mcc_generated_files/usb/usb_device.c: 1034:     handle->CNT = len;
 24683  0058A0  EE20 F001          	lfsr	2,1
 24684  0058A4  5008               	movf	i2USBTransferOnePacket@handle^0,w,c
 24685  0058A6  26D9               	addwf	fsr2l,f,c
 24686  0058A8  5009               	movf	(i2USBTransferOnePacket@handle+1)^0,w,c
 24687  0058AA  22DA               	addwfc	fsr2h,f,c
 24688  0058AC  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 24689                           
 24690                           ;mcc_generated_files/usb/usb_device.c: 1035:     handle->STAT.Val &= 0x40;
 24691  0058B0  C008  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24692  0058B4  C009  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24693  0058B8  0E40               	movlw	64
 24694  0058BA  16DF               	andwf	indf2,f,c
 24695                           
 24696                           ;mcc_generated_files/usb/usb_device.c: 1036:     handle->STAT.Val |= (0x08 & 0x08);
 24697  0058BC  C008  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24698  0058C0  C009  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24699  0058C4  0E00               	movlw	0
 24700  0058C6  86DB               	bsf	plusw2,3,c
 24701                           
 24702                           ;mcc_generated_files/usb/usb_device.c: 1037:     handle->STAT.Val |= 0x80;
 24703  0058C8  C008  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24704  0058CC  C009  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24705  0058D0  0E00               	movlw	0
 24706  0058D2  8EDB               	bsf	plusw2,7,c
 24707                           
 24708                           ;mcc_generated_files/usb/usb_device.c: 1040:     if(dir != 0)
 24709  0058D4  5001               	movf	i2USBTransferOnePacket@dir^0,w,c
 24710  0058D6  B4D8               	btfsc	status,2,c
 24711  0058D8  D015               	goto	i2l7740
 24712                           
 24713                           ;mcc_generated_files/usb/usb_device.c: 1041:     {;mcc_generated_files/usb/usb_device.c:
      +                           1043:         pBDTEntryIn[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryIn[ep]) ^ 0x0004);
 24714  0058DA  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24715  0058DC  0D02               	mullw	2
 24716  0058DE  50F3               	movf	243,w,c
 24717  0058E0  0FB6               	addlw	low _pBDTEntryIn
 24718  0058E2  6ED9               	movwf	fsr2l,c
 24719  0058E4  6ADA               	clrf	fsr2h,c
 24720  0058E6  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 24721  0058EA  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 24722  0058EE  0E04               	movlw	4
 24723  0058F0  1A05               	xorwf	??i2_USBTransferOnePacket^0,f,c
 24724  0058F2  0E00               	movlw	0
 24725  0058F4  1A06               	xorwf	(??i2_USBTransferOnePacket+1)^0,f,c
 24726  0058F6  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24727  0058F8  0D02               	mullw	2
 24728  0058FA  50F3               	movf	243,w,c
 24729  0058FC  0FB6               	addlw	low _pBDTEntryIn
 24730  0058FE  6ED9               	movwf	fsr2l,c
 24731  005900  6ADA               	clrf	fsr2h,c
 24732  005902  D018               	goto	L31
 24733  005904                     i2l7740:
 24734                           
 24735                           ;mcc_generated_files/usb/usb_device.c: 1046:     {;mcc_generated_files/usb/usb_device.c:
      +                           1048:         pBDTEntryOut[ep] = (BDT_ENTRY*)(((uint16_t)pBDTEntryOut[ep]) ^ 0x0004);
 24736  005904  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24737  005906  0D02               	mullw	2
 24738  005908  0EAF               	movlw	low _pBDTEntryOut
 24739  00590A  24F3               	addwf	243,w,c
 24740  00590C  6ED9               	movwf	fsr2l,c
 24741  00590E  0E01               	movlw	high _pBDTEntryOut
 24742  005910  20F4               	addwfc	prodh,w,c
 24743  005912  6EDA               	movwf	fsr2h,c
 24744  005914  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 24745  005918  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 24746  00591C  0E04               	movlw	4
 24747  00591E  1A05               	xorwf	??i2_USBTransferOnePacket^0,f,c
 24748  005920  0E00               	movlw	0
 24749  005922  1A06               	xorwf	(??i2_USBTransferOnePacket+1)^0,f,c
 24750  005924  5007               	movf	i2USBTransferOnePacket@ep^0,w,c
 24751  005926  0D02               	mullw	2
 24752  005928  0EAF               	movlw	low _pBDTEntryOut
 24753  00592A  24F3               	addwf	243,w,c
 24754  00592C  6ED9               	movwf	fsr2l,c
 24755  00592E  0E01               	movlw	high _pBDTEntryOut
 24756  005930  20F4               	addwfc	prodh,w,c
 24757  005932  6EDA               	movwf	fsr2h,c
 24758  005934                     L31:
 24759  005934  C005  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
 24760  005938  C006  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
 24761                           
 24762                           ;mcc_generated_files/usb/usb_device.c: 1050:     return (void*)handle;
 24763  00593C  C008  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 24764  005940  C009  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 24765  005944  0012               	return		;funcret
 24766  005946                     __end_ofi2_USBTransferOnePacket:
 24767                           	callstack 0
 24768                           
 24769 ;; *************** function _USBEnableEndpoint *****************
 24770 ;; Defined at:
 24771 ;;		line 882 in file "mcc_generated_files/usb/usb_device.c"
 24772 ;; Parameters:    Size  Location     Type
 24773 ;;  ep              1    wreg     unsigned char 
 24774 ;;  options         1    8[COMRAM] unsigned char 
 24775 ;; Auto vars:     Size  Location     Type
 24776 ;;  ep              1   11[COMRAM] unsigned char 
 24777 ;;  p               2    9[COMRAM] PTR unsigned char 
 24778 ;;		 -> UEP0(1), 
 24779 ;; Return value:  Size  Location     Type
 24780 ;;                  1    wreg      void 
 24781 ;; Registers used:
 24782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24783 ;; Tracked objects:
 24784 ;;		On entry : 0/0
 24785 ;;		On exit  : 0/0
 24786 ;;		Unchanged: 0/0
 24787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24788 ;;      Params:         1       0       0       0       0       0       0       0       0
 24789 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24790 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24791 ;;      Totals:         4       0       0       0       0       0       0       0       0
 24792 ;;Total ram usage:        4 bytes
 24793 ;; Hardware stack levels used: 1
 24794 ;; Hardware stack levels required when called: 1
 24795 ;; This function calls:
 24796 ;;		_USBConfigureEndpoint
 24797 ;; This function is called by:
 24798 ;;		_CDCInitEP
 24799 ;; This function uses a non-reentrant model
 24800 ;;
 24801                           
 24802                           	psect	text126
 24803  00780A                     __ptext126:
 24804                           	callstack 0
 24805  00780A                     _USBEnableEndpoint:
 24806                           	callstack 16
 24807                           
 24808                           ;incstack = 0
 24809                           ;USBEnableEndpoint@ep stored from wreg
 24810  00780A  6E0C               	movwf	USBEnableEndpoint@ep^0,c
 24811                           
 24812                           ;mcc_generated_files/usb/usb_device.c: 882: void USBEnableEndpoint(uint8_t ep, uint8_t o
      +                          ptions);mcc_generated_files/usb/usb_device.c: 883: {;mcc_generated_files/usb/usb_device.
      +                          c: 884:     unsigned char* p;;mcc_generated_files/usb/usb_device.c: 888:     if(options 
      +                          & 0x04)
 24813  00780C  A409               	btfss	USBEnableEndpoint@options^0,2,c
 24814  00780E  D005               	goto	i2l7694
 24815                           
 24816                           ;mcc_generated_files/usb/usb_device.c: 889:     {;mcc_generated_files/usb/usb_device.c: 
      +                          890:         USBConfigureEndpoint(ep, 0);
 24817  007810  0E00               	movlw	0
 24818  007812  6E01               	movwf	USBConfigureEndpoint@direction^0,c
 24819  007814  500C               	movf	USBEnableEndpoint@ep^0,w,c
 24820  007816  EC1B  F036         	call	_USBConfigureEndpoint
 24821  00781A                     i2l7694:
 24822                           
 24823                           ;mcc_generated_files/usb/usb_device.c: 892:     if(options & 0x02)
 24824  00781A  A209               	btfss	USBEnableEndpoint@options^0,1,c
 24825  00781C  D005               	goto	i2l7698
 24826                           
 24827                           ;mcc_generated_files/usb/usb_device.c: 893:     {;mcc_generated_files/usb/usb_device.c: 
      +                          894:         USBConfigureEndpoint(ep, 1);
 24828  00781E  0E01               	movlw	1
 24829  007820  6E01               	movwf	USBConfigureEndpoint@direction^0,c
 24830  007822  500C               	movf	USBEnableEndpoint@ep^0,w,c
 24831  007824  EC1B  F036         	call	_USBConfigureEndpoint
 24832  007828                     i2l7698:
 24833                           
 24834                           ;mcc_generated_files/usb/usb_device.c: 903:         p = (unsigned char*)(&UEP0+ep);
 24835  007828  0E6A               	movlw	106
 24836  00782A  240C               	addwf	USBEnableEndpoint@ep^0,w,c
 24837  00782C  6E0A               	movwf	USBEnableEndpoint@p^0,c
 24838  00782E  6A0B               	clrf	(USBEnableEndpoint@p+1)^0,c
 24839  007830  0E0F               	movlw	15
 24840  007832  220B               	addwfc	(USBEnableEndpoint@p+1)^0,f,c
 24841                           
 24842                           ;mcc_generated_files/usb/usb_device.c: 905:     *p = options;
 24843  007834  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 24844  007838  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 24845  00783C  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 24846  007840  0012               	return		;funcret
 24847  007842                     __end_of_USBEnableEndpoint:
 24848                           	callstack 0
 24849                           
 24850 ;; *************** function _USBConfigureEndpoint *****************
 24851 ;; Defined at:
 24852 ;;		line 1547 in file "mcc_generated_files/usb/usb_device.c"
 24853 ;; Parameters:    Size  Location     Type
 24854 ;;  EPNum           1    wreg     unsigned char 
 24855 ;;  direction       1    0[COMRAM] unsigned char 
 24856 ;; Auto vars:     Size  Location     Type
 24857 ;;  EPNum           1    5[COMRAM] unsigned char 
 24858 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 24859 ;;		 -> BDT(48), 
 24860 ;; Return value:  Size  Location     Type
 24861 ;;                  1    wreg      void 
 24862 ;; Registers used:
 24863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24864 ;; Tracked objects:
 24865 ;;		On entry : 0/0
 24866 ;;		On exit  : 0/0
 24867 ;;		Unchanged: 0/0
 24868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24869 ;;      Params:         1       0       0       0       0       0       0       0       0
 24870 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24871 ;;      Temps:          4       0       0       0       0       0       0       0       0
 24872 ;;      Totals:         8       0       0       0       0       0       0       0       0
 24873 ;;Total ram usage:        8 bytes
 24874 ;; Hardware stack levels used: 1
 24875 ;; This function calls:
 24876 ;;		Nothing
 24877 ;; This function is called by:
 24878 ;;		_USBEnableEndpoint
 24879 ;; This function uses a non-reentrant model
 24880 ;;
 24881                           
 24882                           	psect	text127
 24883  006C36                     __ptext127:
 24884                           	callstack 0
 24885  006C36                     _USBConfigureEndpoint:
 24886                           	callstack 16
 24887                           
 24888                           ;incstack = 0
 24889                           ;USBConfigureEndpoint@EPNum stored from wreg
 24890  006C36  6E06               	movwf	USBConfigureEndpoint@EPNum^0,c
 24891                           
 24892                           ;mcc_generated_files/usb/usb_device.c: 1547: static void USBConfigureEndpoint(uint8_t EP
      +                          Num, uint8_t direction);mcc_generated_files/usb/usb_device.c: 1548: {;mcc_generated_file
      +                          s/usb/usb_device.c: 1549:     volatile BDT_ENTRY* handle;;mcc_generated_files/usb/usb_de
      +                          vice.c: 1553:     handle = (volatile BDT_ENTRY*)&BDT[0];
 24893  006C38  0E00               	movlw	0
 24894  006C3A  6E07               	movwf	USBConfigureEndpoint@handle^0,c
 24895  006C3C  0E04               	movlw	4
 24896  006C3E  6E08               	movwf	(USBConfigureEndpoint@handle+1)^0,c
 24897                           
 24898                           ;mcc_generated_files/usb/usb_device.c: 1554:     handle += (4*EPNum+2*direction+0u);
 24899  006C40  5001               	movf	USBConfigureEndpoint@direction^0,w,c
 24900  006C42  6E02               	movwf	??_USBConfigureEndpoint^0,c
 24901  006C44  6A03               	clrf	(??_USBConfigureEndpoint+1)^0,c
 24902  006C46  90D8               	bcf	status,0,c
 24903  006C48  3602               	rlcf	??_USBConfigureEndpoint^0,f,c
 24904  006C4A  3603               	rlcf	(??_USBConfigureEndpoint+1)^0,f,c
 24905  006C4C  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 24906  006C4E  6E04               	movwf	(??_USBConfigureEndpoint+2)^0,c
 24907  006C50  6A05               	clrf	(??_USBConfigureEndpoint+3)^0,c
 24908  006C52  90D8               	bcf	status,0,c
 24909  006C54  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24910  006C56  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24911  006C58  90D8               	bcf	status,0,c
 24912  006C5A  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24913  006C5C  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24914  006C5E  5002               	movf	??_USBConfigureEndpoint^0,w,c
 24915  006C60  2604               	addwf	(??_USBConfigureEndpoint+2)^0,f,c
 24916  006C62  5003               	movf	(??_USBConfigureEndpoint+1)^0,w,c
 24917  006C64  2205               	addwfc	(??_USBConfigureEndpoint+3)^0,f,c
 24918  006C66  90D8               	bcf	status,0,c
 24919  006C68  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24920  006C6A  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24921  006C6C  90D8               	bcf	status,0,c
 24922  006C6E  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 24923  006C70  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 24924  006C72  5004               	movf	(??_USBConfigureEndpoint+2)^0,w,c
 24925  006C74  2607               	addwf	USBConfigureEndpoint@handle^0,f,c
 24926  006C76  5005               	movf	(??_USBConfigureEndpoint+3)^0,w,c
 24927  006C78  2208               	addwfc	(USBConfigureEndpoint@handle+1)^0,f,c
 24928                           
 24929                           ;mcc_generated_files/usb/usb_device.c: 1556:     handle->STAT.UOWN = 0;
 24930  006C7A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24931  006C7E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24932  006C82  9EDF               	bcf	indf2,7,c
 24933                           
 24934                           ;mcc_generated_files/usb/usb_device.c: 1561:     if(direction == 0)
 24935  006C84  5001               	movf	USBConfigureEndpoint@direction^0,w,c
 24936  006C86  A4D8               	btfss	status,2,c
 24937  006C88  D009               	goto	i2l7684
 24938                           
 24939                           ;mcc_generated_files/usb/usb_device.c: 1562:     {;mcc_generated_files/usb/usb_device.c:
      +                           1563:         pBDTEntryOut[EPNum] = handle;
 24940  006C8A  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 24941  006C8C  0D02               	mullw	2
 24942  006C8E  0EAF               	movlw	low _pBDTEntryOut
 24943  006C90  24F3               	addwf	243,w,c
 24944  006C92  6ED9               	movwf	fsr2l,c
 24945  006C94  0E01               	movlw	high _pBDTEntryOut
 24946  006C96  20F4               	addwfc	prodh,w,c
 24947  006C98  6EDA               	movwf	fsr2h,c
 24948  006C9A  D006               	goto	L32
 24949  006C9C                     i2l7684:
 24950                           
 24951                           ;mcc_generated_files/usb/usb_device.c: 1566:     {;mcc_generated_files/usb/usb_device.c:
      +                           1567:         pBDTEntryIn[EPNum] = handle;
 24952  006C9C  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 24953  006C9E  0D02               	mullw	2
 24954  006CA0  50F3               	movf	243,w,c
 24955  006CA2  0FB6               	addlw	low _pBDTEntryIn
 24956  006CA4  6ED9               	movwf	fsr2l,c
 24957  006CA6  6ADA               	clrf	fsr2h,c
 24958  006CA8                     L32:
 24959  006CA8  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 24960  006CAC  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 24961                           
 24962                           ;mcc_generated_files/usb/usb_device.c: 1571:         handle->STAT.DTS = 0;
 24963  006CB0  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24964  006CB4  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24965  006CB8  9CDF               	bcf	indf2,6,c
 24966                           
 24967                           ;mcc_generated_files/usb/usb_device.c: 1572:         (handle+1)->STAT.DTS = 1;
 24968  006CBA  EE20 F004          	lfsr	2,4
 24969  006CBE  5007               	movf	USBConfigureEndpoint@handle^0,w,c
 24970  006CC0  26D9               	addwf	fsr2l,f,c
 24971  006CC2  5008               	movf	(USBConfigureEndpoint@handle+1)^0,w,c
 24972  006CC4  22DA               	addwfc	fsr2h,f,c
 24973  006CC6  8CDF               	bsf	indf2,6,c
 24974  006CC8  0012               	return		;funcret
 24975  006CCA                     __end_of_USBConfigureEndpoint:
 24976                           	callstack 0
 24977                           
 24978 ;; *************** function _USBCtrlTrfOutHandler *****************
 24979 ;; Defined at:
 24980 ;;		line 2542 in file "mcc_generated_files/usb/usb_device.c"
 24981 ;; Parameters:    Size  Location     Type
 24982 ;;		None
 24983 ;; Auto vars:     Size  Location     Type
 24984 ;;		None
 24985 ;; Return value:  Size  Location     Type
 24986 ;;                  1    wreg      void 
 24987 ;; Registers used:
 24988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24989 ;; Tracked objects:
 24990 ;;		On entry : 3F/0
 24991 ;;		On exit  : 3F/0
 24992 ;;		Unchanged: 0/0
 24993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24994 ;;      Params:         0       0       0       0       0       0       0       0       0
 24995 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24996 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24997 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24998 ;;Total ram usage:        0 bytes
 24999 ;; Hardware stack levels used: 1
 25000 ;; Hardware stack levels required when called: 2
 25001 ;; This function calls:
 25002 ;;		_USBCtrlTrfRxService
 25003 ;; This function is called by:
 25004 ;;		_USBCtrlEPService
 25005 ;; This function uses a non-reentrant model
 25006 ;;
 25007                           
 25008                           	psect	text128
 25009  0071DC                     __ptext128:
 25010                           	callstack 0
 25011  0071DC                     _USBCtrlTrfOutHandler:
 25012                           	callstack 16
 25013                           
 25014                           ; BSR set to: 0
 25015                           ;mcc_generated_files/usb/usb_device.c: 2544:     if(controlTransferState == 2)
 25016                           
 25017                           ;incstack = 0
 25018  0071DC  0E02               	movlw	2
 25019  0071DE  185B               	xorwf	_controlTransferState^0,w,c	;volatile
 25020  0071E0  A4D8               	btfss	status,2,c
 25021  0071E2  D003               	goto	i2l10556
 25022                           
 25023                           ; BSR set to: 0
 25024                           ;mcc_generated_files/usb/usb_device.c: 2545:     {;mcc_generated_files/usb/usb_device.c:
      +                           2546:         USBCtrlTrfRxService();
 25025  0071E4  ECA1  F02A         	call	_USBCtrlTrfRxService	;wreg free
 25026                           
 25027                           ;mcc_generated_files/usb/usb_device.c: 2547:     }
 25028  0071E8  0012               	return	
 25029  0071EA                     i2l10556:
 25030                           
 25031                           ; BSR set to: 0
 25032                           ;mcc_generated_files/usb/usb_device.c: 2549:     {;mcc_generated_files/usb/usb_device.c:
      +                           2552:         controlTransferState = 0;
 25033  0071EA  0E00               	movlw	0
 25034  0071EC  6E5B               	movwf	_controlTransferState^0,c	;volatile
 25035                           
 25036                           ;mcc_generated_files/usb/usb_device.c: 2559:         if(BothEP0OutUOWNsSet == 0)
 25037  0071EE  51CE               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 25038  0071F0  A4D8               	btfss	status,2,c
 25039  0071F2  D01F               	goto	i2l10564
 25040                           
 25041                           ; BSR set to: 0
 25042                           ;mcc_generated_files/usb/usb_device.c: 2560:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2561:             pBDTEntryEP0OutNext->CNT = 8;
 25043  0071F4  EE20 F001          	lfsr	2,1
 25044  0071F8  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25045  0071FA  26D9               	addwf	fsr2l,f,c
 25046  0071FC  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25047  0071FE  22DA               	addwfc	fsr2h,f,c
 25048  007200  0E08               	movlw	8
 25049  007202  6EDF               	movwf	indf2,c
 25050                           
 25051                           ;mcc_generated_files/usb/usb_device.c: 2562:             pBDTEntryEP0OutNext->ADR = ((ui
      +                          nt16_t)(&SetupPkt));
 25052  007204  EE20 F002          	lfsr	2,2
 25053  007208  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25054  00720A  26D9               	addwf	fsr2l,f,c
 25055  00720C  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25056  00720E  22DA               	addwfc	fsr2h,f,c
 25057  007210  0E30               	movlw	48
 25058  007212  6EDE               	movwf	postinc2,c
 25059  007214  0E04               	movlw	4
 25060  007216  6EDD               	movwf	postdec2,c
 25061                           
 25062                           ; BSR set to: 0
 25063                           ;mcc_generated_files/usb/usb_device.c: 2563:             pBDTEntryEP0OutNext->STAT.Val =
      +                           0x00|(0x08 & 0x08)|0x04;
 25064  007218  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25065  00721C  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25066  007220  0E0C               	movlw	12
 25067  007222  6EDF               	movwf	indf2,c
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;mcc_generated_files/usb/usb_device.c: 2564:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 25071  007224  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25072  007228  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25073  00722C  0E00               	movlw	0
 25074  00722E  8EDB               	bsf	plusw2,7,c
 25075                           
 25076                           ;mcc_generated_files/usb/usb_device.c: 2565:         }
 25077  007230  0012               	return	
 25078  007232                     i2l10564:
 25079                           
 25080                           ; BSR set to: 0
 25081                           ;mcc_generated_files/usb/usb_device.c: 2567:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2568:                 BothEP0OutUOWNsSet = 0;
 25082  007232  0E00               	movlw	0
 25083  007234  6FCE               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25084                           
 25085                           ; BSR set to: 0
 25086  007236  0012               	return		;funcret
 25087  007238                     __end_of_USBCtrlTrfOutHandler:
 25088                           	callstack 0
 25089                           
 25090 ;; *************** function _USBCtrlTrfRxService *****************
 25091 ;; Defined at:
 25092 ;;		line 1856 in file "mcc_generated_files/usb/usb_device.c"
 25093 ;; Parameters:    Size  Location     Type
 25094 ;;		None
 25095 ;; Auto vars:     Size  Location     Type
 25096 ;;  byteToRead      1    1[COMRAM] unsigned char 
 25097 ;;  i               1    0[COMRAM] unsigned char 
 25098 ;; Return value:  Size  Location     Type
 25099 ;;                  1    wreg      void 
 25100 ;; Registers used:
 25101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25102 ;; Tracked objects:
 25103 ;;		On entry : 3F/0
 25104 ;;		On exit  : 3F/0
 25105 ;;		Unchanged: 0/0
 25106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25107 ;;      Params:         0       0       0       0       0       0       0       0       0
 25108 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25110 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25111 ;;Total ram usage:        2 bytes
 25112 ;; Hardware stack levels used: 1
 25113 ;; Hardware stack levels required when called: 1
 25114 ;; This function calls:
 25115 ;;		_USBCtrlEPAllowStatusStage
 25116 ;; This function is called by:
 25117 ;;		_USBCtrlTrfOutHandler
 25118 ;; This function uses a non-reentrant model
 25119 ;;
 25120                           
 25121                           	psect	text129
 25122  005542                     __ptext129:
 25123                           	callstack 0
 25124  005542                     _USBCtrlTrfRxService:
 25125                           	callstack 16
 25126                           
 25127                           ; BSR set to: 0
 25128                           ;mcc_generated_files/usb/usb_device.c: 1858:     uint8_t byteToRead;;mcc_generated_files
      +                          /usb/usb_device.c: 1859:     uint8_t i;;mcc_generated_files/usb/usb_device.c: 1863:     
      +                          byteToRead = pBDTEntryEP0OutCurrent->CNT;
 25129                           
 25130                           ; BSR set to: 0
 25131                           ;incstack = 0
 25132  005542  EE20 F001          	lfsr	2,1
 25133  005546  51C2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 25134  005548  26D9               	addwf	fsr2l,f,c
 25135  00554A  51C3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 25136  00554C  22DA               	addwfc	fsr2h,f,c
 25137  00554E  50DF               	movf	indf2,w,c
 25138  005550  6E02               	movwf	USBCtrlTrfRxService@byteToRead^0,c
 25139                           
 25140                           ; BSR set to: 0
 25141                           ;mcc_generated_files/usb/usb_device.c: 1869:     if(byteToRead > outPipes[0].wCount.Val)
 25142  005552  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 25143  005554  5DAC               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 25144  005556  0E00               	movlw	0
 25145  005558  59AD               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 25146  00555A  A0D8               	btfss	status,0,c
 25147                           
 25148                           ; BSR set to: 0
 25149                           ;mcc_generated_files/usb/usb_device.c: 1870:     {;mcc_generated_files/usb/usb_device.c:
      +                           1871:         byteToRead = outPipes[0].wCount.Val;
 25150  00555C  C0AC  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 25151                           
 25152                           ; BSR set to: 0
 25153                           ;mcc_generated_files/usb/usb_device.c: 1874:     outPipes[0].wCount.Val -= byteToRead;
 25154  005560  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 25155  005562  5FAC               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 25156  005564  0E00               	movlw	0
 25157  005566  5BAD               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 25158                           
 25159                           ; BSR set to: 0
 25160                           ;mcc_generated_files/usb/usb_device.c: 1878:     for(i=0;i<byteToRead;i++)
 25161  005568  0E00               	movlw	0
 25162  00556A  6E01               	movwf	USBCtrlTrfRxService@i^0,c
 25163  00556C  D00F               	goto	i2l9808
 25164  00556E                     i2l9802:
 25165                           
 25166                           ; BSR set to: 0
 25167                           ;mcc_generated_files/usb/usb_device.c: 1879:     {;mcc_generated_files/usb/usb_device.c:
      +                           1880:         *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 25168  00556E  0E38               	movlw	56
 25169  005570  2401               	addwf	USBCtrlTrfRxService@i^0,w,c
 25170  005572  6ED9               	movwf	fsr2l,c
 25171  005574  6ADA               	clrf	fsr2h,c
 25172  005576  0E04               	movlw	4
 25173  005578  22DA               	addwfc	fsr2h,f,c
 25174  00557A  C0A8  FFE1         	movff	_outPipes,fsr1l	;volatile
 25175  00557E  C0A9  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 25176  005582  CFDF FFE7          	movff	indf2,indf1
 25177                           
 25178                           ; BSR set to: 0
 25179  005586  4BA8               	infsnz	_outPipes& (0+255),f,b	;volatile
 25180  005588  2BA9               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 25181                           
 25182                           ; BSR set to: 0
 25183                           ;mcc_generated_files/usb/usb_device.c: 1881:     }
 25184  00558A  2A01               	incf	USBCtrlTrfRxService@i^0,f,c
 25185  00558C                     i2l9808:
 25186                           
 25187                           ; BSR set to: 0
 25188  00558C  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 25189  00558E  5C01               	subwf	USBCtrlTrfRxService@i^0,w,c
 25190  005590  A0D8               	btfss	status,0,c
 25191  005592  D7ED               	goto	i2l9802
 25192                           
 25193                           ; BSR set to: 0
 25194                           ;mcc_generated_files/usb/usb_device.c: 1885:     if(outPipes[0].wCount.Val > 0)
 25195  005594  51AC               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 25196  005596  11AD               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 25197  005598  B4D8               	btfsc	status,2,c
 25198  00559A  D032               	goto	i2l9824
 25199                           
 25200                           ; BSR set to: 0
 25201                           ;mcc_generated_files/usb/usb_device.c: 1886:     {;mcc_generated_files/usb/usb_device.c:
      +                           1887:         pBDTEntryEP0OutNext->CNT = 8;
 25202  00559C  EE20 F001          	lfsr	2,1
 25203  0055A0  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25204  0055A2  26D9               	addwf	fsr2l,f,c
 25205  0055A4  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25206  0055A6  22DA               	addwfc	fsr2h,f,c
 25207  0055A8  0E08               	movlw	8
 25208  0055AA  6EDF               	movwf	indf2,c
 25209                           
 25210                           ;mcc_generated_files/usb/usb_device.c: 1888:         pBDTEntryEP0OutNext->ADR = ((uint16
      +                          _t)(&CtrlTrfData));
 25211  0055AC  EE20 F002          	lfsr	2,2
 25212  0055B0  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25213  0055B2  26D9               	addwf	fsr2l,f,c
 25214  0055B4  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25215  0055B6  22DA               	addwfc	fsr2h,f,c
 25216  0055B8  0E38               	movlw	56
 25217  0055BA  6EDE               	movwf	postinc2,c
 25218  0055BC  0E04               	movlw	4
 25219  0055BE  6EDD               	movwf	postdec2,c
 25220                           
 25221                           ; BSR set to: 0
 25222                           ;mcc_generated_files/usb/usb_device.c: 1889:         if(pBDTEntryEP0OutCurrent->STAT.DTS
      +                           == 0)
 25223  0055C0  C0C2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25224  0055C4  C0C3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25225  0055C8  BCDF               	btfsc	indf2,6,c
 25226  0055CA  D00D               	goto	i2l9820
 25227                           
 25228                           ; BSR set to: 0
 25229                           ;mcc_generated_files/usb/usb_device.c: 1890:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1891:             pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25230  0055CC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25231  0055D0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25232  0055D4  0E48               	movlw	72
 25233  0055D6  6EDF               	movwf	indf2,c
 25234                           
 25235                           ; BSR set to: 0
 25236                           ;mcc_generated_files/usb/usb_device.c: 1892:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 25237  0055D8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25238  0055DC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25239  0055E0  0E00               	movlw	0
 25240  0055E2  8EDB               	bsf	plusw2,7,c
 25241                           
 25242                           ;mcc_generated_files/usb/usb_device.c: 1893:         }
 25243  0055E4  0012               	return	
 25244  0055E6                     i2l9820:
 25245                           
 25246                           ; BSR set to: 0
 25247                           ;mcc_generated_files/usb/usb_device.c: 1895:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1896:             pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 25248  0055E6  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25249  0055EA  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25250  0055EE  0E08               	movlw	8
 25251  0055F0  6EDF               	movwf	indf2,c
 25252                           
 25253                           ; BSR set to: 0
 25254                           ;mcc_generated_files/usb/usb_device.c: 1897:             pBDTEntryEP0OutNext->STAT.Val |
      +                          = 0x80;
 25255  0055F2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25256  0055F6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25257  0055FA  0E00               	movlw	0
 25258  0055FC  8EDB               	bsf	plusw2,7,c
 25259  0055FE  0012               	return	
 25260  005600                     i2l9824:
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;mcc_generated_files/usb/usb_device.c: 1901:     {;mcc_generated_files/usb/usb_device.c:
      +                           1905:         pBDTEntryEP0OutNext->CNT = 8;
 25264  005600  EE20 F001          	lfsr	2,1
 25265  005604  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25266  005606  26D9               	addwf	fsr2l,f,c
 25267  005608  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25268  00560A  22DA               	addwfc	fsr2h,f,c
 25269  00560C  0E08               	movlw	8
 25270  00560E  6EDF               	movwf	indf2,c
 25271                           
 25272                           ;mcc_generated_files/usb/usb_device.c: 1906:         pBDTEntryEP0OutNext->ADR = ((uint16
      +                          _t)(&SetupPkt));
 25273  005610  EE20 F002          	lfsr	2,2
 25274  005614  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25275  005616  26D9               	addwf	fsr2l,f,c
 25276  005618  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25277  00561A  22DA               	addwfc	fsr2h,f,c
 25278  00561C  0E30               	movlw	48
 25279  00561E  6EDE               	movwf	postinc2,c
 25280  005620  0E04               	movlw	4
 25281  005622  6EDD               	movwf	postdec2,c
 25282                           
 25283                           ; BSR set to: 0
 25284                           ;mcc_generated_files/usb/usb_device.c: 1910:         pBDTEntryEP0OutNext->STAT.Val = 0x0
      +                          4;
 25285  005624  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25286  005628  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25287  00562C  0E04               	movlw	4
 25288  00562E  6EDF               	movwf	indf2,c
 25289                           
 25290                           ; BSR set to: 0
 25291                           ;mcc_generated_files/usb/usb_device.c: 1911:         pBDTEntryEP0OutNext->STAT.Val |= 0x
      +                          80;
 25292  005630  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25293  005634  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25294  005638  0E00               	movlw	0
 25295  00563A  8EDB               	bsf	plusw2,7,c
 25296                           
 25297                           ; BSR set to: 0
 25298                           
 25299                           ; BSR set to: 0
 25300                           ;mcc_generated_files/usb/usb_device.c: 1919:         {
 25301  00563C  9FAB               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 25302                           
 25303                           ; BSR set to: 0
 25304                           ;mcc_generated_files/usb/usb_device.c: 1945:         if(USBDeferStatusStagePacket == 0)
 25305  00563E  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 25306  005640  A4D8               	btfss	status,2,c
 25307  005642  0012               	return	
 25308                           
 25309                           ; BSR set to: 0
 25310                           ;mcc_generated_files/usb/usb_device.c: 1946:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1947:             USBCtrlEPAllowStatusStage();
 25311  005644  ECBF  F031         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25312                           
 25313                           ; BSR set to: 0
 25314  005648  0012               	return		;funcret
 25315  00564A                     __end_of_USBCtrlTrfRxService:
 25316                           	callstack 0
 25317                           
 25318 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 25319 ;; Defined at:
 25320 ;;		line 1420 in file "mcc_generated_files/usb/usb_device.c"
 25321 ;; Parameters:    Size  Location     Type
 25322 ;;		None
 25323 ;; Auto vars:     Size  Location     Type
 25324 ;;		None
 25325 ;; Return value:  Size  Location     Type
 25326 ;;                  1    wreg      void 
 25327 ;; Registers used:
 25328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25329 ;; Tracked objects:
 25330 ;;		On entry : 0/0
 25331 ;;		On exit  : 3F/0
 25332 ;;		Unchanged: 0/0
 25333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25334 ;;      Params:         0       0       0       0       0       0       0       0       0
 25335 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25336 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25337 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25338 ;;Total ram usage:        0 bytes
 25339 ;; Hardware stack levels used: 1
 25340 ;; This function calls:
 25341 ;;		Nothing
 25342 ;; This function is called by:
 25343 ;;		_USBDeviceTasks
 25344 ;;		_USBCtrlEPServiceComplete
 25345 ;;		_USBCtrlTrfRxService
 25346 ;; This function uses a non-reentrant model
 25347 ;;
 25348                           
 25349                           	psect	text130
 25350  00637E                     __ptext130:
 25351                           	callstack 0
 25352  00637E                     _USBCtrlEPAllowStatusStage:
 25353                           	callstack 16
 25354                           
 25355                           ;mcc_generated_files/usb/usb_device.c: 1427:     if(USBStatusStageEnabledFlag1 == 0)
 25356                           
 25357                           ; BSR set to: 0
 25358                           ;incstack = 0
 25359  00637E  0100               	movlb	0	; () banked
 25360  006380  51CB               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 25361  006382  A4D8               	btfss	status,2,c
 25362  006384  0012               	return	
 25363                           
 25364                           ; BSR set to: 0
 25365                           ;mcc_generated_files/usb/usb_device.c: 1428:     {;mcc_generated_files/usb/usb_device.c:
      +                           1429:         USBStatusStageEnabledFlag1 = 1;
 25366  006386  0E01               	movlw	1
 25367  006388  6FCB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25368                           
 25369                           ;mcc_generated_files/usb/usb_device.c: 1430:         if(USBStatusStageEnabledFlag2 == 0)
 25370  00638A  51CA               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 25371  00638C  A4D8               	btfss	status,2,c
 25372  00638E  0012               	return	
 25373                           
 25374                           ; BSR set to: 0
 25375                           ;mcc_generated_files/usb/usb_device.c: 1431:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1432:             USBStatusStageEnabledFlag2 = 1;
 25376  006390  0E01               	movlw	1
 25377  006392  6FCA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25378                           
 25379                           ; BSR set to: 0
 25380                           ;mcc_generated_files/usb/usb_device.c: 1436:             if(controlTransferState == 2)
 25381  006394  0E02               	movlw	2
 25382  006396  185B               	xorwf	_controlTransferState^0,w,c	;volatile
 25383  006398  A4D8               	btfss	status,2,c
 25384  00639A  D015               	goto	i2l8772
 25385                           
 25386                           ; BSR set to: 0
 25387                           ;mcc_generated_files/usb/usb_device.c: 1437:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1438:                 pBDTEntryIn[0]->CNT = 0;
 25388  00639C  EE20 F001          	lfsr	2,1
 25389  0063A0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 25390  0063A2  26D9               	addwf	fsr2l,f,c
 25391  0063A4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25392  0063A6  22DA               	addwfc	fsr2h,f,c
 25393  0063A8  0E00               	movlw	0
 25394  0063AA  6EDF               	movwf	indf2,c
 25395                           
 25396                           ; BSR set to: 0
 25397                           ;mcc_generated_files/usb/usb_device.c: 1439:                 pBDTEntryIn[0]->STAT.Val = 
      +                          0x40|(0x08 & 0x08);
 25398  0063AC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25399  0063B0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25400  0063B4  0E48               	movlw	72
 25401  0063B6  6EDF               	movwf	indf2,c
 25402                           
 25403                           ; BSR set to: 0
 25404                           ;mcc_generated_files/usb/usb_device.c: 1440:                 pBDTEntryIn[0]->STAT.Val |=
      +                           0x80;
 25405  0063B8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25406  0063BC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25407  0063C0  0E00               	movlw	0
 25408  0063C2  8EDB               	bsf	plusw2,7,c
 25409                           
 25410                           ;mcc_generated_files/usb/usb_device.c: 1441:             }
 25411  0063C4  0012               	return	
 25412  0063C6                     i2l8772:
 25413                           
 25414                           ; BSR set to: 0
 25415  0063C6  045B               	decf	_controlTransferState^0,w,c	;volatile
 25416  0063C8  A4D8               	btfss	status,2,c
 25417  0063CA  0012               	return	
 25418                           
 25419                           ; BSR set to: 0
 25420                           ;mcc_generated_files/usb/usb_device.c: 1443:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 1444:                 BothEP0OutUOWNsSet = 0;
 25421  0063CC  0E00               	movlw	0
 25422  0063CE  6FCE               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25423                           
 25424                           ; BSR set to: 0
 25425                           ;mcc_generated_files/usb/usb_device.c: 1449:                     pBDTEntryEP0OutCurrent-
      +                          >CNT = 8;
 25426  0063D0  EE20 F001          	lfsr	2,1
 25427  0063D4  51C2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 25428  0063D6  26D9               	addwf	fsr2l,f,c
 25429  0063D8  51C3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 25430  0063DA  22DA               	addwfc	fsr2h,f,c
 25431  0063DC  0E08               	movlw	8
 25432  0063DE  6EDF               	movwf	indf2,c
 25433                           
 25434                           ; BSR set to: 0
 25435                           ;mcc_generated_files/usb/usb_device.c: 1450:                     pBDTEntryEP0OutCurrent-
      +                          >ADR = ((uint16_t)(&SetupPkt));
 25436  0063E0  EE20 F002          	lfsr	2,2
 25437  0063E4  51C2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 25438  0063E6  26D9               	addwf	fsr2l,f,c
 25439  0063E8  51C3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 25440  0063EA  22DA               	addwfc	fsr2h,f,c
 25441  0063EC  0E30               	movlw	48
 25442  0063EE  6EDE               	movwf	postinc2,c
 25443  0063F0  0E04               	movlw	4
 25444  0063F2  6EDD               	movwf	postdec2,c
 25445                           
 25446                           ; BSR set to: 0
 25447                           ;mcc_generated_files/usb/usb_device.c: 1451:                     pBDTEntryEP0OutCurrent-
      +                          >STAT.Val = 0x04;
 25448  0063F4  C0C2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25449  0063F8  C0C3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25450  0063FC  0E04               	movlw	4
 25451  0063FE  6EDF               	movwf	indf2,c
 25452                           
 25453                           ; BSR set to: 0
 25454                           ;mcc_generated_files/usb/usb_device.c: 1452:                     pBDTEntryEP0OutCurrent-
      +                          >STAT.Val |= 0x80;
 25455  006400  C0C2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25456  006404  C0C3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25457  006408  0E00               	movlw	0
 25458  00640A  8EDB               	bsf	plusw2,7,c
 25459                           
 25460                           ; BSR set to: 0
 25461                           ;mcc_generated_files/usb/usb_device.c: 1453:                     BothEP0OutUOWNsSet = 1;
 25462  00640C  0E01               	movlw	1
 25463  00640E  6FCE               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25464                           
 25465                           ; BSR set to: 0
 25466                           ;mcc_generated_files/usb/usb_device.c: 1457:                 pBDTEntryEP0OutNext->CNT = 
      +                          8;
 25467  006410  EE20 F001          	lfsr	2,1
 25468  006414  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25469  006416  26D9               	addwf	fsr2l,f,c
 25470  006418  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25471  00641A  22DA               	addwfc	fsr2h,f,c
 25472  00641C  0E08               	movlw	8
 25473  00641E  6EDF               	movwf	indf2,c
 25474                           
 25475                           ; BSR set to: 0
 25476                           ;mcc_generated_files/usb/usb_device.c: 1458:                 pBDTEntryEP0OutNext->ADR = 
      +                          ((uint16_t)(&SetupPkt));
 25477  006420  EE20 F002          	lfsr	2,2
 25478  006424  5059               	movf	_pBDTEntryEP0OutNext^0,w,c
 25479  006426  26D9               	addwf	fsr2l,f,c
 25480  006428  505A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25481  00642A  22DA               	addwfc	fsr2h,f,c
 25482  00642C  0E30               	movlw	48
 25483  00642E  6EDE               	movwf	postinc2,c
 25484  006430  0E04               	movlw	4
 25485  006432  6EDD               	movwf	postdec2,c
 25486                           
 25487                           ; BSR set to: 0
 25488                           ;mcc_generated_files/usb/usb_device.c: 1459:                 pBDTEntryEP0OutNext->STAT.V
      +                          al = 0x80;
 25489  006434  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25490  006438  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25491  00643C  0E80               	movlw	128
 25492  00643E  6EDF               	movwf	indf2,c
 25493  006440  0012               	return	
 25494  006442                     __end_of_USBCtrlEPAllowStatusStage:
 25495                           	callstack 0
 25496                           
 25497 ;; *************** function _USBCtrlTrfInHandler *****************
 25498 ;; Defined at:
 25499 ;;		line 2596 in file "mcc_generated_files/usb/usb_device.c"
 25500 ;; Parameters:    Size  Location     Type
 25501 ;;		None
 25502 ;; Auto vars:     Size  Location     Type
 25503 ;;  lastDTS         1    1[COMRAM] unsigned char 
 25504 ;; Return value:  Size  Location     Type
 25505 ;;                  1    wreg      void 
 25506 ;; Registers used:
 25507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25508 ;; Tracked objects:
 25509 ;;		On entry : 3F/0
 25510 ;;		On exit  : 3F/0
 25511 ;;		Unchanged: 0/0
 25512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25513 ;;      Params:         0       0       0       0       0       0       0       0       0
 25514 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25515 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25516 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25517 ;;Total ram usage:        1 bytes
 25518 ;; Hardware stack levels used: 1
 25519 ;; Hardware stack levels required when called: 1
 25520 ;; This function calls:
 25521 ;;		_USBCtrlTrfTxService
 25522 ;; This function is called by:
 25523 ;;		_USBCtrlEPService
 25524 ;; This function uses a non-reentrant model
 25525 ;;
 25526                           
 25527                           	psect	text131
 25528  006442                     __ptext131:
 25529                           	callstack 0
 25530  006442                     _USBCtrlTrfInHandler:
 25531                           	callstack 17
 25532                           
 25533                           ; BSR set to: 0
 25534                           ;mcc_generated_files/usb/usb_device.c: 2598:     uint8_t lastDTS;;mcc_generated_files/us
      +                          b/usb_device.c: 2600:     lastDTS = pBDTEntryIn[0]->STAT.DTS;
 25535                           
 25536                           ; BSR set to: 0
 25537                           ;incstack = 0
 25538  006442  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25539  006446  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25540  00644A  0E00               	movlw	0
 25541  00644C  BCDF               	btfsc	indf2,6,c
 25542  00644E  0E01               	movlw	1
 25543  006450  6E02               	movwf	USBCtrlTrfInHandler@lastDTS^0,c
 25544                           
 25545                           ; BSR set to: 0
 25546                           ;mcc_generated_files/usb/usb_device.c: 2603:     pBDTEntryIn[0] = (volatile BDT_ENTRY*)(
      +                          ((uint16_t)pBDTEntryIn[0]) ^ 0x0004);
 25547  006452  0E04               	movlw	4
 25548  006454  19B6               	xorwf	_pBDTEntryIn& (0+255),w,b
 25549  006456  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 25550  006458  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25551  00645A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25552                           
 25553                           ; BSR set to: 0
 25554                           ;mcc_generated_files/usb/usb_device.c: 2608:     if(USBDeviceState == ADR_PENDING_STATE)
 25555  00645C  0E08               	movlw	8
 25556  00645E  185C               	xorwf	_USBDeviceState^0,w,c
 25557  006460  A4D8               	btfss	status,2,c
 25558  006462  D00B               	goto	i2l10580
 25559                           
 25560                           ; BSR set to: 0
 25561                           ;mcc_generated_files/usb/usb_device.c: 2609:     {;mcc_generated_files/usb/usb_device.c:
      +                           2610:         UADDR = (SetupPkt.bDevADR & 0x7F);
 25562  006464  0104               	movlb	4	; () banked
 25563  006466  5132               	movf	50,w,b	;volatile
 25564  006468  0B7F               	andlw	127
 25565  00646A  6E63               	movwf	99,c	;volatile
 25566                           
 25567                           ; BSR set to: 4
 25568                           ;mcc_generated_files/usb/usb_device.c: 2611:         if(UADDR != 0u)
 25569  00646C  5063               	movf	99,w,c
 25570  00646E  B4D8               	btfsc	status,2,c
 25571  006470  D002               	goto	i2l10578
 25572                           
 25573                           ; BSR set to: 4
 25574                           ;mcc_generated_files/usb/usb_device.c: 2612:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2613:             USBDeviceState=ADDRESS_STATE;
 25575  006472  0E10               	movlw	16
 25576  006474  D001               	goto	L33
 25577  006476                     i2l10578:
 25578                           
 25579                           ; BSR set to: 4
 25580                           ;mcc_generated_files/usb/usb_device.c: 2616:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2617:             USBDeviceState=DEFAULT_STATE;
 25581  006476  0E04               	movlw	4
 25582  006478                     L33:
 25583  006478  6E5C               	movwf	_USBDeviceState^0,c	;volatile
 25584  00647A                     i2l10580:
 25585                           
 25586                           ;mcc_generated_files/usb/usb_device.c: 2622:     if(controlTransferState == 1)
 25587  00647A  045B               	decf	_controlTransferState^0,w,c	;volatile
 25588  00647C  A4D8               	btfss	status,2,c
 25589  00647E  D03C               	goto	i2l332
 25590                           
 25591                           ;mcc_generated_files/usb/usb_device.c: 2623:     {;mcc_generated_files/usb/usb_device.c:
      +                           2624:         pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 25592  006480  0100               	movlb	0	; () banked
 25593  006482  EE20 F002          	lfsr	2,2
 25594  006486  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 25595  006488  26D9               	addwf	fsr2l,f,c
 25596  00648A  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25597  00648C  22DA               	addwfc	fsr2h,f,c
 25598  00648E  0E38               	movlw	56
 25599  006490  6EDE               	movwf	postinc2,c
 25600  006492  0E04               	movlw	4
 25601  006494  6EDD               	movwf	postdec2,c
 25602                           
 25603                           ; BSR set to: 0
 25604                           ;mcc_generated_files/usb/usb_device.c: 2625:         USBCtrlTrfTxService();
 25605  006496  ECE7  F02E         	call	_USBCtrlTrfTxService	;wreg free
 25606                           
 25607                           ;mcc_generated_files/usb/usb_device.c: 2631:         if(shortPacketStatus == 2)
 25608  00649A  0E02               	movlw	2
 25609  00649C  0100               	movlb	0	; () banked
 25610  00649E  19D2               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 25611  0064A0  A4D8               	btfss	status,2,c
 25612  0064A2  D00D               	goto	i2l10592
 25613                           
 25614                           ; BSR set to: 0
 25615                           ;mcc_generated_files/usb/usb_device.c: 2632:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2635:             pBDTEntryIn[0]->STAT.Val = 0x04;
 25616  0064A4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25617  0064A8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25618  0064AC  0E04               	movlw	4
 25619  0064AE  6EDF               	movwf	indf2,c
 25620                           
 25621                           ; BSR set to: 0
 25622                           ;mcc_generated_files/usb/usb_device.c: 2636:             pBDTEntryIn[0]->STAT.Val |= 0x8
      +                          0;
 25623  0064B0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25624  0064B4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25625  0064B8  0E00               	movlw	0
 25626  0064BA  8EDB               	bsf	plusw2,7,c
 25627                           
 25628                           ;mcc_generated_files/usb/usb_device.c: 2637:         }
 25629  0064BC  0012               	return	
 25630  0064BE                     i2l10592:
 25631                           
 25632                           ; BSR set to: 0
 25633                           ;mcc_generated_files/usb/usb_device.c: 2639:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 2640:             if(lastDTS == 0)
 25634  0064BE  5002               	movf	USBCtrlTrfInHandler@lastDTS^0,w,c
 25635  0064C0  A4D8               	btfss	status,2,c
 25636  0064C2  D00D               	goto	i2l10598
 25637                           
 25638                           ; BSR set to: 0
 25639                           ;mcc_generated_files/usb/usb_device.c: 2641:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2642:                 pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25640  0064C4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25641  0064C8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25642  0064CC  0E48               	movlw	72
 25643  0064CE  6EDF               	movwf	indf2,c
 25644                           
 25645                           ; BSR set to: 0
 25646                           ;mcc_generated_files/usb/usb_device.c: 2643:                 pBDTEntryIn[0]->STAT.Val |=
      +                           0x80;
 25647  0064D0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25648  0064D4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25649  0064D8  0E00               	movlw	0
 25650  0064DA  8EDB               	bsf	plusw2,7,c
 25651                           
 25652                           ;mcc_generated_files/usb/usb_device.c: 2644:             }
 25653  0064DC  0012               	return	
 25654  0064DE                     i2l10598:
 25655                           
 25656                           ; BSR set to: 0
 25657                           ;mcc_generated_files/usb/usb_device.c: 2646:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2647:                 pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 25658  0064DE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25659  0064E2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25660  0064E6  0E08               	movlw	8
 25661  0064E8  6EDF               	movwf	indf2,c
 25662                           
 25663                           ; BSR set to: 0
 25664                           ;mcc_generated_files/usb/usb_device.c: 2648:                 pBDTEntryIn[0]->STAT.Val |=
      +                           0x80;
 25665  0064EA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 25666  0064EE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25667  0064F2  0E00               	movlw	0
 25668  0064F4  8EDB               	bsf	plusw2,7,c
 25669  0064F6  0012               	return	
 25670  0064F8                     i2l332:
 25671                           
 25672                           ;mcc_generated_files/usb/usb_device.c: 2653:  {;mcc_generated_files/usb/usb_device.c: 26
      +                          57:         if(outPipes[0].info.bits.busy == 1)
 25673  0064F8  0100               	movlb	0	; () banked
 25674  0064FA  BFAB               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 25675                           
 25676                           ; BSR set to: 0
 25677                           ;mcc_generated_files/usb/usb_device.c: 2663:             outPipes[0].info.bits.busy = 0;
 25678                           
 25679                           ; BSR set to: 0
 25680                           ;mcc_generated_files/usb/usb_device.c: 2660:             {;mcc_generated_files/usb/usb_d
      +                          evice.c: 2661:                 outPipes[0].pFunc();
 25681                           ;mcc_generated_files/usb/usb_device.c: 2662:             }
 25682  0064FC  9FAB               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 25683                           
 25684                           ; BSR set to: 0
 25685                           ;mcc_generated_files/usb/usb_device.c: 2666:         controlTransferState = 0;
 25686  0064FE  0E00               	movlw	0
 25687  006500  6E5B               	movwf	_controlTransferState^0,c	;volatile
 25688                           
 25689                           ; BSR set to: 0
 25690  006502  0012               	return		;funcret
 25691  006504                     __end_of_USBCtrlTrfInHandler:
 25692                           	callstack 0
 25693                           
 25694 ;; *************** function _USBCtrlTrfTxService *****************
 25695 ;; Defined at:
 25696 ;;		line 1775 in file "mcc_generated_files/usb/usb_device.c"
 25697 ;; Parameters:    Size  Location     Type
 25698 ;;		None
 25699 ;; Auto vars:     Size  Location     Type
 25700 ;;  byteToSend      1    0[COMRAM] unsigned char 
 25701 ;; Return value:  Size  Location     Type
 25702 ;;                  1    wreg      void 
 25703 ;; Registers used:
 25704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25705 ;; Tracked objects:
 25706 ;;		On entry : 3B/4
 25707 ;;		On exit  : 3E/0
 25708 ;;		Unchanged: 0/0
 25709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25710 ;;      Params:         0       0       0       0       0       0       0       0       0
 25711 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25713 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25714 ;;Total ram usage:        1 bytes
 25715 ;; Hardware stack levels used: 1
 25716 ;; This function calls:
 25717 ;;		Nothing
 25718 ;; This function is called by:
 25719 ;;		_USBCtrlEPAllowDataStage
 25720 ;;		_USBCtrlTrfInHandler
 25721 ;; This function uses a non-reentrant model
 25722 ;;
 25723                           
 25724                           	psect	text132
 25725  005DCE                     __ptext132:
 25726                           	callstack 0
 25727  005DCE                     _USBCtrlTrfTxService:
 25728                           	callstack 15
 25729                           
 25730                           ;mcc_generated_files/usb/usb_device.c: 1777:     uint8_t byteToSend;;mcc_generated_files
      +                          /usb/usb_device.c: 1781:     byteToSend = 8;
 25731                           
 25732                           ; BSR set to: 0
 25733                           ;incstack = 0
 25734  005DCE  0E08               	movlw	8
 25735  005DD0  6E01               	movwf	USBCtrlTrfTxService@byteToSend^0,c
 25736                           
 25737                           ;mcc_generated_files/usb/usb_device.c: 1782:     if(inPipes[0].wCount.Val < (uint8_t)8)
 25738  005DD2  0100               	movlb	0	; () banked
 25739  005DD4  51B5               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25740  005DD6  E110               	bnz	i2l8060
 25741  005DD8  0E08               	movlw	8
 25742  005DDA  5DB4               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 25743  005DDC  B0D8               	btfsc	status,0,c
 25744  005DDE  D00C               	goto	i2l8060
 25745                           
 25746                           ; BSR set to: 0
 25747                           ;mcc_generated_files/usb/usb_device.c: 1783:     {;mcc_generated_files/usb/usb_device.c:
      +                           1784:         byteToSend = inPipes[0].wCount.Val;
 25748  005DE0  C0B4  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 25749                           
 25750                           ; BSR set to: 0
 25751                           ;mcc_generated_files/usb/usb_device.c: 1791:         if(shortPacketStatus == 0)
 25752  005DE4  51D2               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 25753  005DE6  A4D8               	btfss	status,2,c
 25754  005DE8  D002               	goto	i2l8056
 25755                           
 25756                           ; BSR set to: 0
 25757                           ;mcc_generated_files/usb/usb_device.c: 1792:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1793:             shortPacketStatus = 1;
 25758  005DEA  0E01               	movlw	1
 25759  005DEC  D004               	goto	L34
 25760  005DEE                     i2l8056:
 25761                           
 25762                           ; BSR set to: 0
 25763  005DEE  05D2               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 25764  005DF0  A4D8               	btfss	status,2,c
 25765  005DF2  D002               	goto	i2l8060
 25766                           
 25767                           ; BSR set to: 0
 25768                           ;mcc_generated_files/usb/usb_device.c: 1796:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1797:             shortPacketStatus = 2;
 25769  005DF4  0E02               	movlw	2
 25770  005DF6                     L34:
 25771  005DF6  6FD2               	movwf	_shortPacketStatus& (0+255),b	;volatile
 25772  005DF8                     i2l8060:
 25773                           
 25774                           ; BSR set to: 0
 25775                           ;mcc_generated_files/usb/usb_device.c: 1803:     inPipes[0].wCount.Val -= byteToSend;
 25776  005DF8  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 25777  005DFA  5FB4               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 25778  005DFC  0E00               	movlw	0
 25779  005DFE  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 25780                           
 25781                           ; BSR set to: 0
 25782                           ;mcc_generated_files/usb/usb_device.c: 1808:     pBDTEntryIn[0]->CNT = byteToSend;
 25783  005E00  EE20 F001          	lfsr	2,1
 25784  005E04  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 25785  005E06  26D9               	addwf	fsr2l,f,c
 25786  005E08  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25787  005E0A  22DA               	addwfc	fsr2h,f,c
 25788  005E0C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 25789                           
 25790                           ; BSR set to: 0
 25791                           ;mcc_generated_files/usb/usb_device.c: 1812:     pDst = (volatile uint8_t*)CtrlTrfData;
 25792  005E10  0E38               	movlw	56
 25793  005E12  0101               	movlb	1	; () banked
 25794  005E14  6FD7               	movwf	_pDst& (0+255),b
 25795  005E16  0E04               	movlw	4
 25796  005E18  6FD8               	movwf	(_pDst+1)& (0+255),b
 25797                           
 25798                           ; BSR set to: 1
 25799                           ;mcc_generated_files/usb/usb_device.c: 1813:     if(inPipes[0].info.bits.ctrl_trf_mem ==
      +                           0x00)
 25800  005E1A  0100               	movlb	0	; () banked
 25801  005E1C  A1B3               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 25802  005E1E  D01D               	goto	i2l8078
 25803  005E20  D03C               	goto	i2l8088
 25804  005E22                     i2l8070:
 25805                           
 25806                           ;mcc_generated_files/usb/usb_device.c: 1816:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1817:             *pDst++ = *inPipes[0].pSrc.bRom++;
 25807  005E22  C0B0  FFF6         	movff	_inPipes,tblptrl	;volatile
 25808  005E26  C0B1  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25809  005E2A  6AF8               	clrf	tblptru,c
 25810  005E2C  C1D7  FFD9         	movff	_pDst,fsr2l
 25811  005E30  C1D8  FFDA         	movff	_pDst+1,fsr2h
 25812  005E34  0E07               	movlw	(high __ramtop+-1)
 25813  005E36  64F7               	cpfsgt	tblptrh,c
 25814  005E38  D003               	bra	i2u779_47
 25815  005E3A  0008               	tblrd		*
 25816  005E3C  50F5               	movf	tablat,w,c
 25817  005E3E  D005               	bra	i2u779_40
 25818  005E40                     i2u779_47:
 25819  005E40  CFF6 FFE1          	movff	tblptrl,fsr1l
 25820  005E44  CFF7 FFE2          	movff	tblptrh,fsr1h
 25821  005E48  50E7               	movf	indf1,w,c
 25822  005E4A                     i2u779_40:
 25823  005E4A  6EDF               	movwf	indf2,c
 25824  005E4C  0100               	movlb	0	; () banked
 25825  005E4E  4BB0               	infsnz	_inPipes& (0+255),f,b	;volatile
 25826  005E50  2BB1               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 25827                           
 25828                           ; BSR set to: 0
 25829  005E52  0101               	movlb	1	; () banked
 25830  005E54  4BD7               	infsnz	_pDst& (0+255),f,b
 25831  005E56  2BD8               	incf	(_pDst+1)& (0+255),f,b
 25832                           
 25833                           ; BSR set to: 1
 25834                           ;mcc_generated_files/usb/usb_device.c: 1818:             byteToSend--;
 25835  005E58  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 25836  005E5A                     i2l8078:
 25837                           
 25838                           ;mcc_generated_files/usb/usb_device.c: 1815:         while(byteToSend)
 25839  005E5A  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 25840  005E5C  B4D8               	btfsc	status,2,c
 25841  005E5E  0012               	return	
 25842  005E60  D7E0               	goto	i2l8070
 25843  005E62                     i2l8080:
 25844                           
 25845                           ;mcc_generated_files/usb/usb_device.c: 1824:         {;mcc_generated_files/usb/usb_devic
      +                          e.c: 1825:             *pDst++ = *inPipes[0].pSrc.bRam++;
 25846  005E62  C0B0  FFF6         	movff	_inPipes,tblptrl	;volatile
 25847  005E66  C0B1  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25848  005E6A  6AF8               	clrf	tblptru,c
 25849  005E6C  C1D7  FFD9         	movff	_pDst,fsr2l
 25850  005E70  C1D8  FFDA         	movff	_pDst+1,fsr2h
 25851  005E74  0E07               	movlw	(high __ramtop+-1)
 25852  005E76  64F7               	cpfsgt	tblptrh,c
 25853  005E78  D003               	bra	i2u781_47
 25854  005E7A  0008               	tblrd		*
 25855  005E7C  50F5               	movf	tablat,w,c
 25856  005E7E  D005               	bra	i2u781_40
 25857  005E80                     i2u781_47:
 25858  005E80  CFF6 FFE1          	movff	tblptrl,fsr1l
 25859  005E84  CFF7 FFE2          	movff	tblptrh,fsr1h
 25860  005E88  50E7               	movf	indf1,w,c
 25861  005E8A                     i2u781_40:
 25862  005E8A  6EDF               	movwf	indf2,c
 25863  005E8C  0100               	movlb	0	; () banked
 25864  005E8E  4BB0               	infsnz	_inPipes& (0+255),f,b	;volatile
 25865  005E90  2BB1               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 25866                           
 25867                           ; BSR set to: 0
 25868  005E92  0101               	movlb	1	; () banked
 25869  005E94  4BD7               	infsnz	_pDst& (0+255),f,b
 25870  005E96  2BD8               	incf	(_pDst+1)& (0+255),f,b
 25871                           
 25872                           ; BSR set to: 1
 25873                           ;mcc_generated_files/usb/usb_device.c: 1826:             byteToSend--;
 25874  005E98  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 25875  005E9A                     i2l8088:
 25876                           
 25877                           ;mcc_generated_files/usb/usb_device.c: 1823:         while(byteToSend)
 25878  005E9A  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 25879  005E9C  B4D8               	btfsc	status,2,c
 25880  005E9E  0012               	return	
 25881  005EA0  D7E0               	goto	i2l8080
 25882  005EA2                     __end_of_USBCtrlTrfTxService:
 25883                           	callstack 0
 25884                           
 25885 ;; *************** function _TMR3_ISR *****************
 25886 ;; Defined at:
 25887 ;;		line 158 in file "mcc_generated_files/tmr3.c"
 25888 ;; Parameters:    Size  Location     Type
 25889 ;;		None
 25890 ;; Auto vars:     Size  Location     Type
 25891 ;;		None
 25892 ;; Return value:  Size  Location     Type
 25893 ;;                  1    wreg      void 
 25894 ;; Registers used:
 25895 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 25896 ;; Tracked objects:
 25897 ;;		On entry : 0/0
 25898 ;;		On exit  : 0/0
 25899 ;;		Unchanged: 0/0
 25900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25901 ;;      Params:         0       0       0       0       0       0       0       0       0
 25902 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25903 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25904 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25905 ;;Total ram usage:        0 bytes
 25906 ;; Hardware stack levels used: 1
 25907 ;; Hardware stack levels required when called: 1
 25908 ;; This function calls:
 25909 ;;		Absolute function
 25910 ;;		_TMR3_DefaultInterruptHandler
 25911 ;;		_TMR3_WriteTimer
 25912 ;; This function is called by:
 25913 ;;		_INTERRUPT_InterruptManager
 25914 ;; This function uses a non-reentrant model
 25915 ;;
 25916                           
 25917                           	psect	text133
 25918  0079D6                     __ptext133:
 25919                           	callstack 0
 25920  0079D6                     _TMR3_ISR:
 25921                           	callstack 19
 25922                           
 25923                           ;mcc_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
 25924                           
 25925                           ;incstack = 0
 25926  0079D6  92A1               	bcf	161,1,c	;volatile
 25927                           
 25928                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
 25929  0079D8  C1D1  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 25930  0079DC  C1D2  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 25931  0079E0  EC77  F03E         	call	_TMR3_WriteTimer	;wreg free
 25932                           
 25933                           ;mcc_generated_files/tmr3.c: 165:     if(TMR3_InterruptHandler)
 25934  0079E4  0101               	movlb	1	; () banked
 25935  0079E6  51CF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 25936  0079E8  11D0               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 25937  0079EA  B4D8               	btfsc	status,2,c
 25938  0079EC  0012               	return	
 25939                           
 25940                           ; BSR set to: 1
 25941                           ;mcc_generated_files/tmr3.c: 166:     {;mcc_generated_files/tmr3.c: 167:         TMR3_In
      +                          terruptHandler();
 25942  0079EE  D801               	call	i2u1402_48
 25943  0079F0  0012               	return	
 25944  0079F2                     i2u1402_48:
 25945  0079F2  0005               	push	
 25946  0079F4  6EFA               	movwf	pclath,c
 25947  0079F6  51CF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 25948  0079F8  6EFD               	movwf	tosl,c
 25949  0079FA  51D0               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 25950  0079FC  6EFE               	movwf	tosh,c
 25951  0079FE  50F8               	movf	tblptru,w,c
 25952  007A00  6EFF               	movwf	tosu,c
 25953  007A02  50FA               	movf	pclath,w,c
 25954  007A04  0012               	return		;indir
 25955  007A06                     __end_of_TMR3_ISR:
 25956                           	callstack 0
 25957                           
 25958 ;; *************** function _TMR3_WriteTimer *****************
 25959 ;; Defined at:
 25960 ;;		line 121 in file "mcc_generated_files/tmr3.c"
 25961 ;; Parameters:    Size  Location     Type
 25962 ;;  timerVal        2    0[COMRAM] unsigned short 
 25963 ;; Auto vars:     Size  Location     Type
 25964 ;;		None
 25965 ;; Return value:  Size  Location     Type
 25966 ;;                  1    wreg      void 
 25967 ;; Registers used:
 25968 ;;		None
 25969 ;; Tracked objects:
 25970 ;;		On entry : 0/0
 25971 ;;		On exit  : 0/0
 25972 ;;		Unchanged: 0/0
 25973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25974 ;;      Params:         2       0       0       0       0       0       0       0       0
 25975 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25977 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25978 ;;Total ram usage:        2 bytes
 25979 ;; Hardware stack levels used: 1
 25980 ;; This function calls:
 25981 ;;		Nothing
 25982 ;; This function is called by:
 25983 ;;		_TMR3_ISR
 25984 ;; This function uses a non-reentrant model
 25985 ;;
 25986                           
 25987                           	psect	text134
 25988  007CEE                     __ptext134:
 25989                           	callstack 0
 25990  007CEE                     _TMR3_WriteTimer:
 25991                           	callstack 19
 25992                           
 25993                           ;mcc_generated_files/tmr3.c: 121: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 122: {;mcc_generated_files/tmr3.c: 123:     if (T3CONbits.T3SYNC == 1)
 25994                           
 25995                           ;incstack = 0
 25996  007CEE  A4B1               	btfss	177,2,c	;volatile
 25997  007CF0  D007               	goto	i2l673
 25998                           
 25999                           ;mcc_generated_files/tmr3.c: 124:     {;mcc_generated_files/tmr3.c: 126:         T3CONbi
      +                          ts.TMR3ON = 0;
 26000  007CF2  90B1               	bcf	177,0,c	;volatile
 26001                           
 26002                           ;mcc_generated_files/tmr3.c: 129:         TMR3H = (uint8_t)(timerVal >> 8);
 26003  007CF4  C002  FFB3         	movff	TMR3_WriteTimer@timerVal+1,4019	;volatile
 26004                           
 26005                           ;mcc_generated_files/tmr3.c: 130:         TMR3L = (uint8_t)timerVal;
 26006  007CF8  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 26007                           
 26008                           ;mcc_generated_files/tmr3.c: 133:         T3CONbits.TMR3ON =1;
 26009  007CFC  80B1               	bsf	177,0,c	;volatile
 26010                           
 26011                           ;mcc_generated_files/tmr3.c: 134:     }
 26012  007CFE  0012               	return	
 26013  007D00                     i2l673:
 26014                           
 26015                           ;mcc_generated_files/tmr3.c: 136:     {;mcc_generated_files/tmr3.c: 138:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
 26016  007D00  C002  FFB3         	movff	TMR3_WriteTimer@timerVal+1,4019	;volatile
 26017                           
 26018                           ;mcc_generated_files/tmr3.c: 139:         TMR3L = (uint8_t)timerVal;
 26019  007D04  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 26020  007D08  0012               	return		;funcret
 26021  007D0A                     __end_of_TMR3_WriteTimer:
 26022                           	callstack 0
 26023                           
 26024 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 26025 ;; Defined at:
 26026 ;;		line 176 in file "mcc_generated_files/tmr3.c"
 26027 ;; Parameters:    Size  Location     Type
 26028 ;;		None
 26029 ;; Auto vars:     Size  Location     Type
 26030 ;;		None
 26031 ;; Return value:  Size  Location     Type
 26032 ;;                  1    wreg      void 
 26033 ;; Registers used:
 26034 ;;		None
 26035 ;; Tracked objects:
 26036 ;;		On entry : 3F/1
 26037 ;;		On exit  : 3F/1
 26038 ;;		Unchanged: 3F/0
 26039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26040 ;;      Params:         0       0       0       0       0       0       0       0       0
 26041 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26043 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26044 ;;Total ram usage:        0 bytes
 26045 ;; Hardware stack levels used: 1
 26046 ;; This function calls:
 26047 ;;		Nothing
 26048 ;; This function is called by:
 26049 ;;		_TMR3_Initialize
 26050 ;;		_TMR3_ISR
 26051 ;; This function uses a non-reentrant model
 26052 ;;
 26053                           
 26054                           	psect	text135
 26055  007E20                     __ptext135:
 26056                           	callstack 0
 26057  007E20                     _TMR3_DefaultInterruptHandler:
 26058                           	callstack 19
 26059                           
 26060                           ; BSR set to: 1
 26061                           
 26062                           ;incstack = 0
 26063  007E20  0012               	return		;funcret
 26064  007E22                     __end_of_TMR3_DefaultInterruptHandler:
 26065                           	callstack 0
 26066                           
 26067 ;; *************** function _TMR2_ISR *****************
 26068 ;; Defined at:
 26069 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 26070 ;; Parameters:    Size  Location     Type
 26071 ;;		None
 26072 ;; Auto vars:     Size  Location     Type
 26073 ;;		None
 26074 ;; Return value:  Size  Location     Type
 26075 ;;                  1    wreg      void 
 26076 ;; Registers used:
 26077 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 26078 ;; Tracked objects:
 26079 ;;		On entry : 0/0
 26080 ;;		On exit  : 0/0
 26081 ;;		Unchanged: 0/0
 26082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26083 ;;      Params:         0       0       0       0       0       0       0       0       0
 26084 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26085 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26086 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26087 ;;Total ram usage:        0 bytes
 26088 ;; Hardware stack levels used: 1
 26089 ;; Hardware stack levels required when called: 2
 26090 ;; This function calls:
 26091 ;;		Absolute function
 26092 ;;		_G01_TMR2_ISR
 26093 ;;		_TMR2_DefaultInterruptHandler
 26094 ;; This function is called by:
 26095 ;;		_INTERRUPT_InterruptManager
 26096 ;; This function uses a non-reentrant model
 26097 ;;
 26098                           
 26099                           	psect	text136
 26100  007BD4                     __ptext136:
 26101                           	callstack 0
 26102  007BD4                     _TMR2_ISR:
 26103                           	callstack 18
 26104                           
 26105                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 26106                           
 26107                           ; BSR set to: 1
 26108                           ;incstack = 0
 26109  007BD4  929E               	bcf	158,1,c	;volatile
 26110                           
 26111                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 26112  007BD6  0101               	movlb	1	; () banked
 26113  007BD8  51CD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 26114  007BDA  11CE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 26115  007BDC  B4D8               	btfsc	status,2,c
 26116  007BDE  0012               	return	
 26117                           
 26118                           ; BSR set to: 1
 26119                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 26120  007BE0  D801               	call	i2u1404_48
 26121  007BE2  0012               	return	
 26122  007BE4                     i2u1404_48:
 26123  007BE4  0005               	push	
 26124  007BE6  6EFA               	movwf	pclath,c
 26125  007BE8  51CD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 26126  007BEA  6EFD               	movwf	tosl,c
 26127  007BEC  51CE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 26128  007BEE  6EFE               	movwf	tosh,c
 26129  007BF0  50F8               	movf	tblptru,w,c
 26130  007BF2  6EFF               	movwf	tosu,c
 26131  007BF4  50FA               	movf	pclath,w,c
 26132  007BF6  0012               	return		;indir
 26133  007BF8                     __end_of_TMR2_ISR:
 26134                           	callstack 0
 26135                           
 26136 ;; *************** function _G01_TMR2_ISR *****************
 26137 ;; Defined at:
 26138 ;;		line 41 in file "guia.c"
 26139 ;; Parameters:    Size  Location     Type
 26140 ;;		None
 26141 ;; Auto vars:     Size  Location     Type
 26142 ;;		None
 26143 ;; Return value:  Size  Location     Type
 26144 ;;                  1    wreg      void 
 26145 ;; Registers used:
 26146 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26147 ;; Tracked objects:
 26148 ;;		On entry : 3F/1
 26149 ;;		On exit  : 3F/1
 26150 ;;		Unchanged: 0/0
 26151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26152 ;;      Params:         0       0       0       0       0       0       0       0       0
 26153 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26154 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26155 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26156 ;;Total ram usage:        2 bytes
 26157 ;; Hardware stack levels used: 1
 26158 ;; Hardware stack levels required when called: 1
 26159 ;; This function calls:
 26160 ;;		i2_TMR2_LoadPeriodRegister
 26161 ;;		i2_TMR2_StopTimer
 26162 ;;		i2___fldiv
 26163 ;;		i2___flmul
 26164 ;;		i2___fltol
 26165 ;;		i2___lmul
 26166 ;;		i2___xxtofl
 26167 ;; This function is called by:
 26168 ;;		_G_01
 26169 ;;		_G_95
 26170 ;;		_TMR2_ISR
 26171 ;; This function uses a non-reentrant model
 26172 ;;
 26173                           
 26174                           	psect	text137
 26175  00564A                     __ptext137:
 26176                           	callstack 0
 26177  00564A                     _G01_TMR2_ISR:
 26178                           	callstack 18
 26179                           
 26180                           ; BSR set to: 1
 26181                           ;guia.c: 42:    LATBbits.LATB6 = ~LATBbits.LATB6;
 26182                           
 26183                           ;incstack = 0
 26184  00564A  AC8A               	btfss	138,6,c	;volatile
 26185  00564C  D002               	goto	i2u1354_40
 26186  00564E  0E01               	movlw	1
 26187  005650  D001               	goto	i2u1354_46
 26188  005652                     i2u1354_40:
 26189  005652  0E00               	movlw	0
 26190  005654                     i2u1354_46:
 26191  005654  0AFF               	xorlw	255
 26192  005656  6E57               	movwf	??_G01_TMR2_ISR^0,c
 26193  005658  3A57               	swapf	??_G01_TMR2_ISR^0,f,c
 26194  00565A  4657               	rlncf	??_G01_TMR2_ISR^0,f,c
 26195  00565C  4657               	rlncf	??_G01_TMR2_ISR^0,f,c
 26196  00565E  508A               	movf	138,w,c	;volatile
 26197  005660  1857               	xorwf	??_G01_TMR2_ISR^0,w,c
 26198  005662  0BBF               	andlw	-65
 26199  005664  1857               	xorwf	??_G01_TMR2_ISR^0,w,c
 26200  005666  6E8A               	movwf	138,c	;volatile
 26201                           
 26202                           ;guia.c: 45:    switch(feed_state){
 26203  005668  D04C               	goto	i2l11696
 26204  00566A                     i2l11692:
 26205                           
 26206                           ; BSR set to: 1
 26207                           ;guia.c: 50:          TMR2_LoadPeriodRegister((uint8_t)(46665*60/(2*33)*ustep*S/feed));
 26208  00566A  C1E6  F038         	movff	_feed,i2___fldiv@a
 26209  00566E  C1E7  F039         	movff	_feed+1,i2___fldiv@a+1
 26210  005672  C1E8  F03A         	movff	_feed+2,i2___fldiv@a+2
 26211  005676  C1E9  F03B         	movff	_feed+3,i2___fldiv@a+3
 26212  00567A  C2C6  F01F         	movff	_S,i2___flmul@a
 26213  00567E  C2C7  F020         	movff	_S+1,i2___flmul@a+1
 26214  005682  C2C8  F021         	movff	_S+2,i2___flmul@a+2
 26215  005686  C2C9  F022         	movff	_S+3,i2___flmul@a+3
 26216  00568A  505E               	movf	_ustep^0,w,c
 26217  00568C  6E01               	movwf	i2___lmul@multiplier^0,c
 26218  00568E  6A02               	clrf	(i2___lmul@multiplier+1)^0,c
 26219  005690  6A03               	clrf	(i2___lmul@multiplier+2)^0,c
 26220  005692  6A04               	clrf	(i2___lmul@multiplier+3)^0,c
 26221  005694  0EB6               	movlw	182
 26222  005696  6E05               	movwf	i2___lmul@multiplicand^0,c
 26223  005698  0EA5               	movlw	165
 26224  00569A  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 26225  00569C  0E00               	movlw	0
 26226  00569E  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 26227  0056A0  0E00               	movlw	0
 26228  0056A2  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 26229  0056A4  EC74  F039         	call	i2___lmul	;wreg free
 26230  0056A8  C001  F00D         	movff	?i2___lmul,i2___xxtofl@val
 26231  0056AC  C002  F00E         	movff	?i2___lmul+1,i2___xxtofl@val+1
 26232  0056B0  C003  F00F         	movff	?i2___lmul+2,i2___xxtofl@val+2
 26233  0056B4  C004  F010         	movff	?i2___lmul+3,i2___xxtofl@val+3
 26234  0056B8  0E01               	movlw	1
 26235  0056BA  ECC1  F024         	call	i2___xxtofl
 26236  0056BE  C00D  F01B         	movff	?i2___xxtofl,i2___flmul@b
 26237  0056C2  C00E  F01C         	movff	?i2___xxtofl+1,i2___flmul@b+1
 26238  0056C6  C00F  F01D         	movff	?i2___xxtofl+2,i2___flmul@b+2
 26239  0056CA  C010  F01E         	movff	?i2___xxtofl+3,i2___flmul@b+3
 26240  0056CE  EC52  F012         	call	i2___flmul	;wreg free
 26241  0056D2  C01B  F034         	movff	?i2___flmul,i2___fldiv@b
 26242  0056D6  C01C  F035         	movff	?i2___flmul+1,i2___fldiv@b+1
 26243  0056DA  C01D  F036         	movff	?i2___flmul+2,i2___fldiv@b+2
 26244  0056DE  C01E  F037         	movff	?i2___flmul+3,i2___fldiv@b+3
 26245  0056E2  ECE4  F01A         	call	i2___fldiv	;wreg free
 26246  0056E6  C034  F04D         	movff	?i2___fldiv,i2___fltol@f1
 26247  0056EA  C035  F04E         	movff	?i2___fldiv+1,i2___fltol@f1+1
 26248  0056EE  C036  F04F         	movff	?i2___fldiv+2,i2___fltol@f1+2
 26249  0056F2  C037  F050         	movff	?i2___fldiv+3,i2___fltol@f1+3
 26250  0056F6  ECE0  F032         	call	i2___fltol	;wreg free
 26251  0056FA  504D               	movf	?i2___fltol^0,w,c
 26252  0056FC  ECF5  F03E         	call	i2_TMR2_LoadPeriodRegister
 26253                           
 26254                           ;guia.c: 51:          break;
 26255  005700  D00E               	goto	i2l11698
 26256  005702                     i2l11696:
 26257                           
 26258                           ; BSR set to: 1
 26259  005702  51E1               	movf	_feed_state& (0+255),w,b
 26260  005704  6E57               	movwf	??_G01_TMR2_ISR^0,c
 26261  005706  6A58               	clrf	(??_G01_TMR2_ISR+1)^0,c
 26262                           
 26263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26264                           ; Switch size 1, requested type "simple"
 26265                           ; Number of cases is 1, Range of values is 0 to 0
 26266                           ; switch strategies available:
 26267                           ; Name         Instructions Cycles
 26268                           ; simple_byte            4     3 (average)
 26269                           ;	Chosen strategy is simple_byte
 26270  005708  5058               	movf	(??_G01_TMR2_ISR+1)^0,w,c
 26271  00570A  0A00               	xorlw	0	; case 0
 26272  00570C  A4D8               	btfss	status,2,c
 26273  00570E  D007               	goto	i2l11698
 26274                           
 26275                           ; BSR set to: 1
 26276                           ; Switch size 1, requested type "simple"
 26277                           ; Number of cases is 2, Range of values is 1 to 95
 26278                           ; switch strategies available:
 26279                           ; Name         Instructions Cycles
 26280                           ; simple_byte            7     4 (average)
 26281                           ;	Chosen strategy is simple_byte
 26282  005710  5057               	movf	??_G01_TMR2_ISR^0,w,c
 26283  005712  0A01               	xorlw	1	; case 1
 26284  005714  B4D8               	btfsc	status,2,c
 26285  005716  D003               	goto	i2l11698
 26286  005718  0A5E               	xorlw	94	; case 95
 26287  00571A  B4D8               	btfsc	status,2,c
 26288  00571C  D7A6               	goto	i2l11692
 26289  00571E                     i2l11698:
 26290                           
 26291                           ;guia.c: 55:    if(flag == 0) flag = 1;
 26292  00571E  0101               	movlb	1	; () banked
 26293  005720  51DC               	movf	_flag& (0+255),w,b
 26294  005722  A4D8               	btfss	status,2,c
 26295  005724  D003               	goto	i2l11702
 26296                           
 26297                           ; BSR set to: 1
 26298  005726  0E01               	movlw	1
 26299  005728  6FDC               	movwf	_flag& (0+255),b
 26300  00572A  0012               	return	
 26301  00572C                     i2l11702:
 26302                           
 26303                           ; BSR set to: 1
 26304                           ;guia.c: 57:       pasos = pasos - 1;
 26305  00572C  0EFF               	movlw	255
 26306  00572E  25C7               	addwf	_pasos& (0+255),w,b	;volatile
 26307  005730  6FC7               	movwf	_pasos& (0+255),b	;volatile
 26308  005732  0EFF               	movlw	255
 26309  005734  21C8               	addwfc	(_pasos+1)& (0+255),w,b	;volatile
 26310  005736  6FC8               	movwf	(_pasos+1)& (0+255),b	;volatile
 26311                           
 26312                           ; BSR set to: 1
 26313                           ;guia.c: 58:       flag=0;
 26314  005738  0E00               	movlw	0
 26315  00573A  6FDC               	movwf	_flag& (0+255),b
 26316                           
 26317                           ; BSR set to: 1
 26318                           ;guia.c: 59:       if(pasos==0){
 26319  00573C  51C7               	movf	_pasos& (0+255),w,b	;volatile
 26320  00573E  11C8               	iorwf	(_pasos+1)& (0+255),w,b	;volatile
 26321  005740  A4D8               	btfss	status,2,c
 26322  005742  0012               	return	
 26323                           
 26324                           ; BSR set to: 1
 26325                           ;guia.c: 60:          busy=0;
 26326  005744  0E00               	movlw	0
 26327  005746  6FDD               	movwf	_busy& (0+255),b
 26328                           
 26329                           ; BSR set to: 1
 26330                           ;guia.c: 61:          LATBbits.LATB0=1;
 26331  005748  808A               	bsf	138,0,c	;volatile
 26332                           
 26333                           ; BSR set to: 1
 26334                           ;guia.c: 62:          TMR2_StopTimer();
 26335  00574A  EC0C  F03F         	call	i2_TMR2_StopTimer	;wreg free
 26336                           
 26337                           ; BSR set to: 1
 26338  00574E  0012               	return		;funcret
 26339  005750                     __end_of_G01_TMR2_ISR:
 26340                           	callstack 0
 26341                           
 26342 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 26343 ;; Defined at:
 26344 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 26345 ;; Parameters:    Size  Location     Type
 26346 ;;		None
 26347 ;; Auto vars:     Size  Location     Type
 26348 ;;		None
 26349 ;; Return value:  Size  Location     Type
 26350 ;;                  1    wreg      void 
 26351 ;; Registers used:
 26352 ;;		None
 26353 ;; Tracked objects:
 26354 ;;		On entry : 3F/1
 26355 ;;		On exit  : 3F/1
 26356 ;;		Unchanged: 3F/0
 26357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26358 ;;      Params:         0       0       0       0       0       0       0       0       0
 26359 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26360 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26361 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26362 ;;Total ram usage:        0 bytes
 26363 ;; Hardware stack levels used: 1
 26364 ;; This function calls:
 26365 ;;		Nothing
 26366 ;; This function is called by:
 26367 ;;		_TMR2_Initialize
 26368 ;;		_TMR2_ISR
 26369 ;; This function uses a non-reentrant model
 26370 ;;
 26371                           
 26372                           	psect	text138
 26373  007E22                     __ptext138:
 26374                           	callstack 0
 26375  007E22                     _TMR2_DefaultInterruptHandler:
 26376                           	callstack 19
 26377                           
 26378                           ; BSR set to: 1
 26379                           
 26380                           ; BSR set to: 1
 26381                           ;incstack = 0
 26382  007E22  0012               	return		;funcret
 26383  007E24                     __end_of_TMR2_DefaultInterruptHandler:
 26384                           	callstack 0
 26385                           
 26386 ;; *************** function i2___lmul *****************
 26387 ;; Defined at:
 26388 ;;		line 15 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/Umul32.c"
 26389 ;; Parameters:    Size  Location     Type
 26390 ;;  multiplier      4    0[COMRAM] unsigned long 
 26391 ;;  multiplicand    4    4[COMRAM] unsigned long 
 26392 ;; Auto vars:     Size  Location     Type
 26393 ;;  product         4    8[COMRAM] unsigned long 
 26394 ;; Return value:  Size  Location     Type
 26395 ;;                  4    0[COMRAM] unsigned long 
 26396 ;; Registers used:
 26397 ;;		wreg, status,2, status,0
 26398 ;; Tracked objects:
 26399 ;;		On entry : 3F/1
 26400 ;;		On exit  : 3F/1
 26401 ;;		Unchanged: 3F/0
 26402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26403 ;;      Params:         8       0       0       0       0       0       0       0       0
 26404 ;;      Locals:         4       0       0       0       0       0       0       0       0
 26405 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26406 ;;      Totals:        12       0       0       0       0       0       0       0       0
 26407 ;;Total ram usage:       12 bytes
 26408 ;; Hardware stack levels used: 1
 26409 ;; This function calls:
 26410 ;;		Nothing
 26411 ;; This function is called by:
 26412 ;;		_G01_TMR2_ISR
 26413 ;; This function uses a non-reentrant model
 26414 ;;
 26415                           
 26416                           	psect	text139
 26417  0072E8                     __ptext139:
 26418                           	callstack 0
 26419  0072E8                     i2___lmul:
 26420                           	callstack 18
 26421                           
 26422                           ; BSR set to: 1
 26423                           
 26424                           ; BSR set to: 1
 26425                           ;incstack = 0
 26426  0072E8  0E00               	movlw	0
 26427  0072EA  6E09               	movwf	i2___lmul@product^0,c
 26428  0072EC  0E00               	movlw	0
 26429  0072EE  6E0A               	movwf	(i2___lmul@product+1)^0,c
 26430  0072F0  0E00               	movlw	0
 26431  0072F2  6E0B               	movwf	(i2___lmul@product+2)^0,c
 26432  0072F4  0E00               	movlw	0
 26433  0072F6  6E0C               	movwf	(i2___lmul@product+3)^0,c
 26434  0072F8                     i2l11198:
 26435                           
 26436                           ; BSR set to: 1
 26437  0072F8  A001               	btfss	i2___lmul@multiplier^0,0,c
 26438  0072FA  D008               	goto	i2l11202
 26439                           
 26440                           ; BSR set to: 1
 26441  0072FC  5005               	movf	i2___lmul@multiplicand^0,w,c
 26442  0072FE  2609               	addwf	i2___lmul@product^0,f,c
 26443  007300  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 26444  007302  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 26445  007304  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 26446  007306  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 26447  007308  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 26448  00730A  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 26449  00730C                     i2l11202:
 26450                           
 26451                           ; BSR set to: 1
 26452  00730C  90D8               	bcf	status,0,c
 26453  00730E  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 26454  007310  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 26455  007312  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 26456  007314  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 26457                           
 26458                           ; BSR set to: 1
 26459  007316  90D8               	bcf	status,0,c
 26460  007318  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 26461  00731A  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 26462  00731C  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 26463  00731E  3201               	rrcf	i2___lmul@multiplier^0,f,c
 26464  007320  5001               	movf	i2___lmul@multiplier^0,w,c
 26465  007322  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 26466  007324  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 26467  007326  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 26468  007328  A4D8               	btfss	status,2,c
 26469  00732A  D7E6               	goto	i2l11198
 26470                           
 26471                           ; BSR set to: 1
 26472  00732C  C009  F001         	movff	i2___lmul@product,?i2___lmul
 26473  007330  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
 26474  007334  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
 26475  007338  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
 26476                           
 26477                           ; BSR set to: 1
 26478  00733C  0012               	return		;funcret
 26479  00733E                     __end_ofi2___lmul:
 26480                           	callstack 0
 26481                           
 26482 ;; *************** function i2___fltol *****************
 26483 ;; Defined at:
 26484 ;;		line 43 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
 26485 ;; Parameters:    Size  Location     Type
 26486 ;;  f1              4   76[COMRAM] unsigned long 
 26487 ;; Auto vars:     Size  Location     Type
 26488 ;;  exp1            1   85[COMRAM] unsigned char 
 26489 ;;  sign1           1   84[COMRAM] unsigned char 
 26490 ;; Return value:  Size  Location     Type
 26491 ;;                  4   76[COMRAM] long 
 26492 ;; Registers used:
 26493 ;;		wreg, status,2, status,0
 26494 ;; Tracked objects:
 26495 ;;		On entry : 0/1
 26496 ;;		On exit  : 0/0
 26497 ;;		Unchanged: 0/0
 26498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26499 ;;      Params:         4       0       0       0       0       0       0       0       0
 26500 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26501 ;;      Temps:          4       0       0       0       0       0       0       0       0
 26502 ;;      Totals:        10       0       0       0       0       0       0       0       0
 26503 ;;Total ram usage:       10 bytes
 26504 ;; Hardware stack levels used: 1
 26505 ;; This function calls:
 26506 ;;		Nothing
 26507 ;; This function is called by:
 26508 ;;		_G01_TMR2_ISR
 26509 ;; This function uses a non-reentrant model
 26510 ;;
 26511                           
 26512                           	psect	text140
 26513  0065C0                     __ptext140:
 26514                           	callstack 0
 26515  0065C0                     i2___fltol:
 26516                           	callstack 18
 26517                           
 26518                           ; BSR set to: 1
 26519                           ;incstack = 0
 26520  0065C0  344F               	rlcf	(i2___fltol@f1+2)^0,w,c
 26521  0065C2  3450               	rlcf	(i2___fltol@f1+3)^0,w,c
 26522  0065C4  6E56               	movwf	i2___fltol@exp1^0,c
 26523  0065C6  5056               	movf	i2___fltol@exp1^0,w,c
 26524  0065C8  A4D8               	btfss	status,2,c
 26525  0065CA  D009               	goto	i2l11212
 26526  0065CC                     i2u1299_40:
 26527  0065CC  0E00               	movlw	0
 26528  0065CE  6E4D               	movwf	?i2___fltol^0,c
 26529  0065D0  0E00               	movlw	0
 26530  0065D2  6E4E               	movwf	(?i2___fltol+1)^0,c
 26531  0065D4  0E00               	movlw	0
 26532  0065D6  6E4F               	movwf	(?i2___fltol+2)^0,c
 26533  0065D8  0E00               	movlw	0
 26534  0065DA  6E50               	movwf	(?i2___fltol+3)^0,c
 26535  0065DC  0012               	return	
 26536  0065DE                     i2l11212:
 26537  0065DE  C04D  F051         	movff	i2___fltol@f1,??i2___fltol
 26538  0065E2  C04E  F052         	movff	i2___fltol@f1+1,??i2___fltol+1
 26539  0065E6  C04F  F053         	movff	i2___fltol@f1+2,??i2___fltol+2
 26540  0065EA  C050  F054         	movff	i2___fltol@f1+3,??i2___fltol+3
 26541  0065EE  0E20               	movlw	32
 26542  0065F0  D005               	goto	i2u1300_40
 26543  0065F2                     i2u1300_45:
 26544  0065F2  90D8               	bcf	status,0,c
 26545  0065F4  3254               	rrcf	(??i2___fltol+3)^0,f,c
 26546  0065F6  3253               	rrcf	(??i2___fltol+2)^0,f,c
 26547  0065F8  3252               	rrcf	(??i2___fltol+1)^0,f,c
 26548  0065FA  3251               	rrcf	??i2___fltol^0,f,c
 26549  0065FC                     i2u1300_40:
 26550  0065FC  2EE8               	decfsz	wreg,f,c
 26551  0065FE  D7F9               	goto	i2u1300_45
 26552  006600  5051               	movf	??i2___fltol^0,w,c
 26553  006602  6E55               	movwf	i2___fltol@sign1^0,c
 26554  006604  8E4F               	bsf	(i2___fltol@f1+2)^0,7,c
 26555  006606  0EFF               	movlw	255
 26556  006608  164D               	andwf	i2___fltol@f1^0,f,c
 26557  00660A  0EFF               	movlw	255
 26558  00660C  164E               	andwf	(i2___fltol@f1+1)^0,f,c
 26559  00660E  0EFF               	movlw	255
 26560  006610  164F               	andwf	(i2___fltol@f1+2)^0,f,c
 26561  006612  0E00               	movlw	0
 26562  006614  1650               	andwf	(i2___fltol@f1+3)^0,f,c
 26563  006616  0E96               	movlw	150
 26564  006618  5E56               	subwf	i2___fltol@exp1^0,f,c
 26565  00661A  AE56               	btfss	i2___fltol@exp1^0,7,c
 26566  00661C  D00D               	goto	i2l11232
 26567  00661E  5056               	movf	i2___fltol@exp1^0,w,c
 26568  006620  0A80               	xorlw	128
 26569  006622  0F97               	addlw	151
 26570  006624  A0D8               	btfss	status,0,c
 26571  006626  D7D2               	goto	i2u1299_40
 26572  006628                     i2l11228:
 26573  006628  90D8               	bcf	status,0,c
 26574  00662A  3250               	rrcf	(i2___fltol@f1+3)^0,f,c
 26575  00662C  324F               	rrcf	(i2___fltol@f1+2)^0,f,c
 26576  00662E  324E               	rrcf	(i2___fltol@f1+1)^0,f,c
 26577  006630  324D               	rrcf	i2___fltol@f1^0,f,c
 26578  006632  3E56               	incfsz	i2___fltol@exp1^0,f,c
 26579  006634  D7F9               	goto	i2l11228
 26580  006636  D00D               	goto	i2u1304_40
 26581  006638                     i2l11232:
 26582  006638  0E1F               	movlw	31
 26583  00663A  6456               	cpfsgt	i2___fltol@exp1^0,c
 26584  00663C  D007               	goto	i2l11240
 26585  00663E  D7C6               	goto	i2u1299_40
 26586  006640                     i2l11238:
 26587  006640  90D8               	bcf	status,0,c
 26588  006642  364D               	rlcf	i2___fltol@f1^0,f,c
 26589  006644  364E               	rlcf	(i2___fltol@f1+1)^0,f,c
 26590  006646  364F               	rlcf	(i2___fltol@f1+2)^0,f,c
 26591  006648  3650               	rlcf	(i2___fltol@f1+3)^0,f,c
 26592  00664A  0656               	decf	i2___fltol@exp1^0,f,c
 26593  00664C                     i2l11240:
 26594  00664C  5056               	movf	i2___fltol@exp1^0,w,c
 26595  00664E  A4D8               	btfss	status,2,c
 26596  006650  D7F7               	goto	i2l11238
 26597  006652                     i2u1304_40:
 26598  006652  5055               	movf	i2___fltol@sign1^0,w,c
 26599  006654  B4D8               	btfsc	status,2,c
 26600  006656  D008               	goto	i2l11246
 26601  006658  1E50               	comf	(i2___fltol@f1+3)^0,f,c
 26602  00665A  1E4F               	comf	(i2___fltol@f1+2)^0,f,c
 26603  00665C  1E4E               	comf	(i2___fltol@f1+1)^0,f,c
 26604  00665E  6C4D               	negf	i2___fltol@f1^0,c
 26605  006660  0E00               	movlw	0
 26606  006662  224E               	addwfc	(i2___fltol@f1+1)^0,f,c
 26607  006664  224F               	addwfc	(i2___fltol@f1+2)^0,f,c
 26608  006666  2250               	addwfc	(i2___fltol@f1+3)^0,f,c
 26609  006668                     i2l11246:
 26610  006668  C04D  F04D         	movff	i2___fltol@f1,?i2___fltol
 26611  00666C  C04E  F04E         	movff	i2___fltol@f1+1,?i2___fltol+1
 26612  006670  C04F  F04F         	movff	i2___fltol@f1+2,?i2___fltol+2
 26613  006674  C050  F050         	movff	i2___fltol@f1+3,?i2___fltol+3
 26614  006678  0012               	return		;funcret
 26615  00667A                     __end_ofi2___fltol:
 26616                           	callstack 0
 26617                           
 26618 ;; *************** function i2_TMR2_StopTimer *****************
 26619 ;; Defined at:
 26620 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 26621 ;; Parameters:    Size  Location     Type
 26622 ;;		None
 26623 ;; Auto vars:     Size  Location     Type
 26624 ;;		None
 26625 ;; Return value:  Size  Location     Type
 26626 ;;                  1    wreg      void 
 26627 ;; Registers used:
 26628 ;;		None
 26629 ;; Tracked objects:
 26630 ;;		On entry : 3F/1
 26631 ;;		On exit  : 3F/1
 26632 ;;		Unchanged: 3F/0
 26633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26634 ;;      Params:         0       0       0       0       0       0       0       0       0
 26635 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26637 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26638 ;;Total ram usage:        0 bytes
 26639 ;; Hardware stack levels used: 1
 26640 ;; This function calls:
 26641 ;;		Nothing
 26642 ;; This function is called by:
 26643 ;;		_G01_TMR2_ISR
 26644 ;; This function uses a non-reentrant model
 26645 ;;
 26646                           
 26647                           	psect	text141
 26648  007E18                     __ptext141:
 26649                           	callstack 0
 26650  007E18                     i2_TMR2_StopTimer:
 26651                           	callstack 18
 26652                           
 26653                           ; BSR set to: 1
 26654                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
 26655                           
 26656                           ;incstack = 0
 26657  007E18  94BA               	bcf	186,2,c	;volatile
 26658                           
 26659                           ; BSR set to: 1
 26660  007E1A  0012               	return		;funcret
 26661  007E1C                     __end_ofi2_TMR2_StopTimer:
 26662                           	callstack 0
 26663                           
 26664 ;; *************** function i2_TMR2_LoadPeriodRegister *****************
 26665 ;; Defined at:
 26666 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 26667 ;; Parameters:    Size  Location     Type
 26668 ;;  periodVal       1    wreg     unsigned char 
 26669 ;; Auto vars:     Size  Location     Type
 26670 ;;  periodVal       1    0[COMRAM] unsigned char 
 26671 ;; Return value:  Size  Location     Type
 26672 ;;                  1    wreg      void 
 26673 ;; Registers used:
 26674 ;;		wreg
 26675 ;; Tracked objects:
 26676 ;;		On entry : 0/1
 26677 ;;		On exit  : 0/0
 26678 ;;		Unchanged: 0/0
 26679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26680 ;;      Params:         0       0       0       0       0       0       0       0       0
 26681 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26683 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26684 ;;Total ram usage:        1 bytes
 26685 ;; Hardware stack levels used: 1
 26686 ;; This function calls:
 26687 ;;		Nothing
 26688 ;; This function is called by:
 26689 ;;		_G01_TMR2_ISR
 26690 ;; This function uses a non-reentrant model
 26691 ;;
 26692                           
 26693                           	psect	text142
 26694  007DEA                     __ptext142:
 26695                           	callstack 0
 26696  007DEA                     i2_TMR2_LoadPeriodRegister:
 26697                           	callstack 18
 26698                           
 26699                           ; BSR set to: 1
 26700                           ;incstack = 0
 26701                           ;i2TMR2_LoadPeriodRegister@periodVal stored from wreg
 26702  007DEA  6E01               	movwf	i2TMR2_LoadPeriodRegister@periodVal^0,c
 26703                           
 26704                           ;mcc_generated_files/tmr2.c: 114: void TMR2_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr2.c: 115: {;mcc_generated_files/tmr2.c: 116:    PR2 = periodVal;
 26705  007DEC  C001  FFBB         	movff	i2TMR2_LoadPeriodRegister@periodVal,4027	;volatile
 26706  007DF0  0012               	return		;funcret
 26707  007DF2                     __end_ofi2_TMR2_LoadPeriodRegister:
 26708                           	callstack 0
 26709                           
 26710 ;; *************** function _TMR0_ISR *****************
 26711 ;; Defined at:
 26712 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 26713 ;; Parameters:    Size  Location     Type
 26714 ;;		None
 26715 ;; Auto vars:     Size  Location     Type
 26716 ;;		None
 26717 ;; Return value:  Size  Location     Type
 26718 ;;                  1    wreg      void 
 26719 ;; Registers used:
 26720 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 26721 ;; Tracked objects:
 26722 ;;		On entry : 0/0
 26723 ;;		On exit  : 0/0
 26724 ;;		Unchanged: 0/0
 26725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26726 ;;      Params:         0       0       0       0       0       0       0       0       0
 26727 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26728 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26729 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26730 ;;Total ram usage:        0 bytes
 26731 ;; Hardware stack levels used: 1
 26732 ;; Hardware stack levels required when called: 2
 26733 ;; This function calls:
 26734 ;;		Absolute function
 26735 ;;		_TMR0_DefaultInterruptHandler
 26736 ;;		_Timing_TMR0_ISR
 26737 ;; This function is called by:
 26738 ;;		_INTERRUPT_InterruptManager
 26739 ;; This function uses a non-reentrant model
 26740 ;;
 26741                           
 26742                           	psect	text143
 26743  007B16                     __ptext143:
 26744                           	callstack 0
 26745  007B16                     _TMR0_ISR:
 26746                           	callstack 18
 26747                           
 26748                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 26749                           
 26750                           ;incstack = 0
 26751  007B16  94F2               	bcf	242,2,c	;volatile
 26752                           
 26753                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 26754  007B18  C1CA  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 26755                           
 26756                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 26757  007B1C  C1C9  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 26758                           
 26759                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 26760  007B20  0101               	movlb	1	; () banked
 26761  007B22  51CB               	movf	_TMR0_InterruptHandler& (0+255),w,b
 26762  007B24  11CC               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 26763  007B26  B4D8               	btfsc	status,2,c
 26764  007B28  0012               	return	
 26765                           
 26766                           ; BSR set to: 1
 26767                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 26768  007B2A  D801               	call	i2u1399_48
 26769  007B2C  0012               	return	
 26770  007B2E                     i2u1399_48:
 26771  007B2E  0005               	push	
 26772  007B30  6EFA               	movwf	pclath,c
 26773  007B32  51CB               	movf	_TMR0_InterruptHandler& (0+255),w,b
 26774  007B34  6EFD               	movwf	tosl,c
 26775  007B36  51CC               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 26776  007B38  6EFE               	movwf	tosh,c
 26777  007B3A  50F8               	movf	tblptru,w,c
 26778  007B3C  6EFF               	movwf	tosu,c
 26779  007B3E  50FA               	movf	pclath,w,c
 26780  007B40  0012               	return		;indir
 26781  007B42                     __end_of_TMR0_ISR:
 26782                           	callstack 0
 26783                           
 26784 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 26785 ;; Defined at:
 26786 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 26787 ;; Parameters:    Size  Location     Type
 26788 ;;		None
 26789 ;; Auto vars:     Size  Location     Type
 26790 ;;		None
 26791 ;; Return value:  Size  Location     Type
 26792 ;;                  1    wreg      void 
 26793 ;; Registers used:
 26794 ;;		None
 26795 ;; Tracked objects:
 26796 ;;		On entry : 3F/1
 26797 ;;		On exit  : 3F/1
 26798 ;;		Unchanged: 3F/0
 26799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26800 ;;      Params:         0       0       0       0       0       0       0       0       0
 26801 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26803 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26804 ;;Total ram usage:        0 bytes
 26805 ;; Hardware stack levels used: 1
 26806 ;; This function calls:
 26807 ;;		Nothing
 26808 ;; This function is called by:
 26809 ;;		_TMR0_Initialize
 26810 ;;		_TMR0_ISR
 26811 ;; This function uses a non-reentrant model
 26812 ;;
 26813                           
 26814                           	psect	text144
 26815  007E24                     __ptext144:
 26816                           	callstack 0
 26817  007E24                     _TMR0_DefaultInterruptHandler:
 26818                           	callstack 19
 26819                           
 26820                           ; BSR set to: 1
 26821                           
 26822                           ;incstack = 0
 26823  007E24  0012               	return		;funcret
 26824  007E26                     __end_of_TMR0_DefaultInterruptHandler:
 26825                           	callstack 0
 26826                           
 26827 ;; *************** function _Timing_TMR0_ISR *****************
 26828 ;; Defined at:
 26829 ;;		line 14 in file "encoder.c"
 26830 ;; Parameters:    Size  Location     Type
 26831 ;;		None
 26832 ;; Auto vars:     Size  Location     Type
 26833 ;;		None
 26834 ;; Return value:  Size  Location     Type
 26835 ;;                  1    wreg      void 
 26836 ;; Registers used:
 26837 ;;		wreg, status,2, status,0, cstack
 26838 ;; Tracked objects:
 26839 ;;		On entry : 3F/1
 26840 ;;		On exit  : 3F/1
 26841 ;;		Unchanged: 0/0
 26842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26843 ;;      Params:         0       0       0       0       0       0       0       0       0
 26844 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26846 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26847 ;;Total ram usage:        0 bytes
 26848 ;; Hardware stack levels used: 1
 26849 ;; Hardware stack levels required when called: 1
 26850 ;; This function calls:
 26851 ;;		_TMR0_WriteTimer
 26852 ;; This function is called by:
 26853 ;;		_main
 26854 ;;		_TMR0_ISR
 26855 ;; This function uses a non-reentrant model
 26856 ;;
 26857                           
 26858                           	psect	text145
 26859  0076E2                     __ptext145:
 26860                           	callstack 0
 26861  0076E2                     _Timing_TMR0_ISR:
 26862                           	callstack 18
 26863                           
 26864                           ; BSR set to: 1
 26865                           ;encoder.c: 16:    TMR0_WriteTimer(0);
 26866                           
 26867                           ; BSR set to: 1
 26868                           ;incstack = 0
 26869  0076E2  0E00               	movlw	0
 26870  0076E4  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
 26871  0076E6  0E00               	movlw	0
 26872  0076E8  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
 26873  0076EA  ECF0  F03E         	call	_TMR0_WriteTimer	;wreg free
 26874                           
 26875                           ;encoder.c: 17:    prescaler++;
 26876  0076EE  0101               	movlb	1	; () banked
 26877  0076F0  2BDB               	incf	_prescaler& (0+255),f,b
 26878                           
 26879                           ; BSR set to: 1
 26880                           ;encoder.c: 18:    if(prescaler>=10){
 26881  0076F2  0E09               	movlw	9
 26882  0076F4  65DB               	cpfsgt	_prescaler& (0+255),b
 26883  0076F6  0012               	return	
 26884                           
 26885                           ; BSR set to: 1
 26886                           ;encoder.c: 21:       S=0;
 26887  0076F8  0E00               	movlw	0
 26888  0076FA  0102               	movlb	2	; () banked
 26889  0076FC  6FC6               	movwf	_S& (0+255),b
 26890  0076FE  0E00               	movlw	0
 26891  007700  6FC7               	movwf	(_S+1)& (0+255),b
 26892  007702  0E00               	movlw	0
 26893  007704  6FC8               	movwf	(_S+2)& (0+255),b
 26894  007706  0E00               	movlw	0
 26895  007708  6FC9               	movwf	(_S+3)& (0+255),b
 26896                           
 26897                           ;encoder.c: 22:       inverse_S=1000000;
 26898  00770A  0E00               	movlw	0
 26899  00770C  6FBA               	movwf	_inverse_S& (0+255),b
 26900  00770E  0E24               	movlw	36
 26901  007710  6FBB               	movwf	(_inverse_S+1)& (0+255),b
 26902  007712  0E74               	movlw	116
 26903  007714  6FBC               	movwf	(_inverse_S+2)& (0+255),b
 26904  007716  0E49               	movlw	73
 26905  007718  6FBD               	movwf	(_inverse_S+3)& (0+255),b
 26906                           
 26907                           ;encoder.c: 23:       prescaler=0;
 26908  00771A  0E00               	movlw	0
 26909  00771C  0101               	movlb	1	; () banked
 26910  00771E  6FDB               	movwf	_prescaler& (0+255),b
 26911                           
 26912                           ; BSR set to: 1
 26913  007720  0012               	return		;funcret
 26914  007722                     __end_of_Timing_TMR0_ISR:
 26915                           	callstack 0
 26916                           
 26917 ;; *************** function _PIN_MANAGER_IOC *****************
 26918 ;; Defined at:
 26919 ;;		line 104 in file "mcc_generated_files/pin_manager.c"
 26920 ;; Parameters:    Size  Location     Type
 26921 ;;		None
 26922 ;; Auto vars:     Size  Location     Type
 26923 ;;		None
 26924 ;; Return value:  Size  Location     Type
 26925 ;;                  1    wreg      void 
 26926 ;; Registers used:
 26927 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 26928 ;; Tracked objects:
 26929 ;;		On entry : 0/0
 26930 ;;		On exit  : 0/0
 26931 ;;		Unchanged: 0/0
 26932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26933 ;;      Params:         0       0       0       0       0       0       0       0       0
 26934 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26936 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26937 ;;Total ram usage:        0 bytes
 26938 ;; Hardware stack levels used: 1
 26939 ;; Hardware stack levels required when called: 4
 26940 ;; This function calls:
 26941 ;;		_IOCC2_ISR
 26942 ;; This function is called by:
 26943 ;;		_INTERRUPT_InterruptManager
 26944 ;; This function uses a non-reentrant model
 26945 ;;
 26946                           
 26947                           	psect	text146
 26948  007DD6                     __ptext146:
 26949                           	callstack 0
 26950  007DD6                     _PIN_MANAGER_IOC:
 26951                           	callstack 16
 26952                           
 26953                           ;mcc_generated_files/pin_manager.c: 107:     if(IOCCbits.IOCC2 == 1)
 26954                           
 26955                           ; BSR set to: 1
 26956                           ;incstack = 0
 26957  007DD6  B487               	btfsc	135,2,c	;volatile
 26958                           
 26959                           ;mcc_generated_files/pin_manager.c: 108:     {;mcc_generated_files/pin_manager.c: 109:  
      +                                 IOCC2_ISR();
 26960  007DD8  EC1E  F03E         	call	_IOCC2_ISR	;wreg free
 26961                           
 26962                           ;mcc_generated_files/pin_manager.c: 112:     INTCONbits.IOCIF = 0;
 26963  007DDC  90F2               	bcf	242,0,c	;volatile
 26964  007DDE  0012               	return		;funcret
 26965  007DE0                     __end_of_PIN_MANAGER_IOC:
 26966                           	callstack 0
 26967                           
 26968 ;; *************** function _IOCC2_ISR *****************
 26969 ;; Defined at:
 26970 ;;		line 118 in file "mcc_generated_files/pin_manager.c"
 26971 ;; Parameters:    Size  Location     Type
 26972 ;;		None
 26973 ;; Auto vars:     Size  Location     Type
 26974 ;;		None
 26975 ;; Return value:  Size  Location     Type
 26976 ;;                  1    wreg      void 
 26977 ;; Registers used:
 26978 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 26979 ;; Tracked objects:
 26980 ;;		On entry : 0/0
 26981 ;;		On exit  : 0/0
 26982 ;;		Unchanged: 0/0
 26983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26984 ;;      Params:         0       0       0       0       0       0       0       0       0
 26985 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26986 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26987 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26988 ;;Total ram usage:        0 bytes
 26989 ;; Hardware stack levels used: 1
 26990 ;; Hardware stack levels required when called: 3
 26991 ;; This function calls:
 26992 ;;		Absolute function
 26993 ;;		_Encoder_ISR
 26994 ;;		_IOCC2_DefaultInterruptHandler
 26995 ;; This function is called by:
 26996 ;;		_PIN_MANAGER_IOC
 26997 ;; This function uses a non-reentrant model
 26998 ;;
 26999                           
 27000                           	psect	text147
 27001  007C3C                     __ptext147:
 27002                           	callstack 0
 27003  007C3C                     _IOCC2_ISR:
 27004                           	callstack 16
 27005                           
 27006                           ;mcc_generated_files/pin_manager.c: 123:     if(IOCC2_InterruptHandler)
 27007                           
 27008                           ;incstack = 0
 27009  007C3C  0102               	movlb	2	; () banked
 27010  007C3E  51FA               	movf	_IOCC2_InterruptHandler& (0+255),w,b
 27011  007C40  11FB               	iorwf	(_IOCC2_InterruptHandler+1)& (0+255),w,b
 27012  007C42  B4D8               	btfsc	status,2,c
 27013  007C44  0012               	return	
 27014                           
 27015                           ; BSR set to: 2
 27016                           ;mcc_generated_files/pin_manager.c: 124:     {;mcc_generated_files/pin_manager.c: 125:  
      +                                 IOCC2_InterruptHandler();
 27017  007C46  D801               	call	i2u1327_48
 27018  007C48  0012               	return	
 27019  007C4A                     i2u1327_48:
 27020  007C4A  0005               	push	
 27021  007C4C  6EFA               	movwf	pclath,c
 27022  007C4E  51FA               	movf	_IOCC2_InterruptHandler& (0+255),w,b
 27023  007C50  6EFD               	movwf	tosl,c
 27024  007C52  51FB               	movf	(_IOCC2_InterruptHandler+1)& (0+255),w,b
 27025  007C54  6EFE               	movwf	tosh,c
 27026  007C56  50F8               	movf	tblptru,w,c
 27027  007C58  6EFF               	movwf	tosu,c
 27028  007C5A  50FA               	movf	pclath,w,c
 27029  007C5C  0012               	return		;indir
 27030  007C5E                     __end_of_IOCC2_ISR:
 27031                           	callstack 0
 27032                           
 27033 ;; *************** function _Encoder_ISR *****************
 27034 ;; Defined at:
 27035 ;;		line 65 in file "encoder.c"
 27036 ;; Parameters:    Size  Location     Type
 27037 ;;		None
 27038 ;; Auto vars:     Size  Location     Type
 27039 ;;  y              12   20[BANK0 ] [3]
 27040 ;;  salida          4   16[BANK0 ] [3]
 27041 ;;  tics            4   12[BANK0 ] [3]
 27042 ;;  tmr0            2   10[BANK0 ] int 
 27043 ;;  a               2    0[BANK0 ] int 
 27044 ;; Return value:  Size  Location     Type
 27045 ;;                  1    wreg      void 
 27046 ;; Registers used:
 27047 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27048 ;; Tracked objects:
 27049 ;;		On entry : 3F/2
 27050 ;;		On exit  : 3F/1
 27051 ;;		Unchanged: 0/0
 27052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27053 ;;      Params:         0       0       0       0       0       0       0       0       0
 27054 ;;      Locals:         0      32       0       0       0       0       0       0       0
 27055 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27056 ;;      Totals:         2      32       0       0       0       0       0       0       0
 27057 ;;Total ram usage:       34 bytes
 27058 ;; Hardware stack levels used: 1
 27059 ;; Hardware stack levels required when called: 2
 27060 ;; This function calls:
 27061 ;;		_TMR0_ReadTimer
 27062 ;;		_TMR0_WriteTimer
 27063 ;;		i2___fladd
 27064 ;;		i2___fldiv
 27065 ;;		i2___flge
 27066 ;;		i2___flmul
 27067 ;;		i2___flsub
 27068 ;;		i2___xxtofl
 27069 ;; This function is called by:
 27070 ;;		_main
 27071 ;;		_IOCC2_ISR
 27072 ;; This function uses a non-reentrant model
 27073 ;;
 27074                           
 27075                           	psect	text148
 27076  002DEA                     __ptext148:
 27077                           	callstack 0
 27078  002DEA                     _Encoder_ISR:
 27079                           	callstack 16
 27080                           
 27081                           ; BSR set to: 2
 27082                           ;encoder.c: 70:    int a = PORTB;
 27083                           
 27084                           ;incstack = 0
 27085  002DEA  CF81 F060          	movff	3969,Encoder_ISR@a	;volatile
 27086  002DEE  0100               	movlb	0	; () banked
 27087  002DF0  6B61               	clrf	(Encoder_ISR@a+1)& (0+255),b
 27088                           
 27089                           ;encoder.c: 71:    a=PORTC;
 27090  002DF2  CF82 F060          	movff	3970,Encoder_ISR@a	;volatile
 27091  002DF6  6B61               	clrf	(Encoder_ISR@a+1)& (0+255),b
 27092                           
 27093                           ; BSR set to: 0
 27094                           ;encoder.c: 72:    int tmr0 = TMR0_ReadTimer();
 27095  002DF8  EC3E  F03E         	call	_TMR0_ReadTimer	;wreg free
 27096  002DFC  C001  F06A         	movff	?_TMR0_ReadTimer,Encoder_ISR@tmr0
 27097  002E00  C002  F06B         	movff	?_TMR0_ReadTimer+1,Encoder_ISR@tmr0+1
 27098                           
 27099                           ;encoder.c: 73:    TMR0_WriteTimer(0);
 27100  002E04  0E00               	movlw	0
 27101  002E06  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
 27102  002E08  0E00               	movlw	0
 27103  002E0A  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
 27104  002E0C  ECF0  F03E         	call	_TMR0_WriteTimer	;wreg free
 27105                           
 27106                           ;encoder.c: 75:    double tics = tmr0 + prescaler*(2^16);
 27107  002E10  0101               	movlb	1	; () banked
 27108  002E12  51DB               	movf	_prescaler& (0+255),w,b
 27109  002E14  0D12               	mullw	18
 27110  002E16  CFF3 F04D          	movff	prodl,??_Encoder_ISR
 27111  002E1A  CFF4 F04E          	movff	prodh,??_Encoder_ISR+1
 27112  002E1E  0100               	movlb	0	; () banked
 27113  002E20  516A               	movf	Encoder_ISR@tmr0& (0+255),w,b
 27114  002E22  264D               	addwf	??_Encoder_ISR^0,f,c
 27115  002E24  516B               	movf	(Encoder_ISR@tmr0+1)& (0+255),w,b
 27116  002E26  224E               	addwfc	(??_Encoder_ISR+1)^0,f,c
 27117  002E28  C04D  F00D         	movff	??_Encoder_ISR,i2___xxtofl@val
 27118  002E2C  C04E  F00E         	movff	??_Encoder_ISR+1,i2___xxtofl@val+1
 27119  002E30  0E00               	movlw	0
 27120  002E32  BE0E               	btfsc	(i2___xxtofl@val+1)^0,7,c
 27121  002E34  0EFF               	movlw	-1
 27122  002E36  6E0F               	movwf	(i2___xxtofl@val+2)^0,c
 27123  002E38  6E10               	movwf	(i2___xxtofl@val+3)^0,c
 27124  002E3A  0E01               	movlw	1
 27125  002E3C  ECC1  F024         	call	i2___xxtofl
 27126  002E40  C00D  F06C         	movff	?i2___xxtofl,Encoder_ISR@tics
 27127  002E44  C00E  F06D         	movff	?i2___xxtofl+1,Encoder_ISR@tics+1
 27128  002E48  C00F  F06E         	movff	?i2___xxtofl+2,Encoder_ISR@tics+2
 27129  002E4C  C010  F06F         	movff	?i2___xxtofl+3,Encoder_ISR@tics+3
 27130                           
 27131                           ;encoder.c: 76:    double y[3];;encoder.c: 77:    double salida;;encoder.c: 79:    if(ti
      +                          cs>400){
 27132  002E50  0E00               	movlw	0
 27133  002E52  6E01               	movwf	i2___flge@ff1^0,c
 27134  002E54  0E00               	movlw	0
 27135  002E56  6E02               	movwf	(i2___flge@ff1+1)^0,c
 27136  002E58  0EC8               	movlw	200
 27137  002E5A  6E03               	movwf	(i2___flge@ff1+2)^0,c
 27138  002E5C  0E43               	movlw	67
 27139  002E5E  6E04               	movwf	(i2___flge@ff1+3)^0,c
 27140  002E60  C06C  F005         	movff	Encoder_ISR@tics,i2___flge@ff2
 27141  002E64  C06D  F006         	movff	Encoder_ISR@tics+1,i2___flge@ff2+1
 27142  002E68  C06E  F007         	movff	Encoder_ISR@tics+2,i2___flge@ff2+2
 27143  002E6C  C06F  F008         	movff	Encoder_ISR@tics+3,i2___flge@ff2+3
 27144  002E70  EC8B  F030         	call	i2___flge	;wreg free
 27145  002E74  B0D8               	btfsc	status,0,c
 27146  002E76  D118               	goto	i2l11166
 27147                           
 27148                           ;encoder.c: 91:       y[0]=0.02008*tics+1.56101*y[1]-0.64135*y[2];
 27149  002E78  0E2D               	movlw	45
 27150  002E7A  6E1F               	movwf	i2___flmul@a^0,c
 27151  002E7C  0ECF               	movlw	207
 27152  002E7E  6E20               	movwf	(i2___flmul@a+1)^0,c
 27153  002E80  0EC7               	movlw	199
 27154  002E82  6E21               	movwf	(i2___flmul@a+2)^0,c
 27155  002E84  0E3F               	movlw	63
 27156  002E86  6E22               	movwf	(i2___flmul@a+3)^0,c
 27157  002E88  C078  F01B         	movff	Encoder_ISR@y+4,i2___flmul@b
 27158  002E8C  C079  F01C         	movff	Encoder_ISR@y+5,i2___flmul@b+1
 27159  002E90  C07A  F01D         	movff	Encoder_ISR@y+6,i2___flmul@b+2
 27160  002E94  C07B  F01E         	movff	Encoder_ISR@y+7,i2___flmul@b+3
 27161  002E98  EC52  F012         	call	i2___flmul	;wreg free
 27162  002E9C  C01B  F038         	movff	?i2___flmul,i2___fladd@a
 27163  002EA0  C01C  F039         	movff	?i2___flmul+1,i2___fladd@a+1
 27164  002EA4  C01D  F03A         	movff	?i2___flmul+2,i2___fladd@a+2
 27165  002EA8  C01E  F03B         	movff	?i2___flmul+3,i2___fladd@a+3
 27166  002EAC  0ED0               	movlw	208
 27167  002EAE  6E1F               	movwf	i2___flmul@a^0,c
 27168  002EB0  0E7E               	movlw	126
 27169  002EB2  6E20               	movwf	(i2___flmul@a+1)^0,c
 27170  002EB4  0EA4               	movlw	164
 27171  002EB6  6E21               	movwf	(i2___flmul@a+2)^0,c
 27172  002EB8  0E3C               	movlw	60
 27173  002EBA  6E22               	movwf	(i2___flmul@a+3)^0,c
 27174  002EBC  C06C  F01B         	movff	Encoder_ISR@tics,i2___flmul@b
 27175  002EC0  C06D  F01C         	movff	Encoder_ISR@tics+1,i2___flmul@b+1
 27176  002EC4  C06E  F01D         	movff	Encoder_ISR@tics+2,i2___flmul@b+2
 27177  002EC8  C06F  F01E         	movff	Encoder_ISR@tics+3,i2___flmul@b+3
 27178  002ECC  EC52  F012         	call	i2___flmul	;wreg free
 27179  002ED0  C01B  F034         	movff	?i2___flmul,i2___fladd@b
 27180  002ED4  C01C  F035         	movff	?i2___flmul+1,i2___fladd@b+1
 27181  002ED8  C01D  F036         	movff	?i2___flmul+2,i2___fladd@b+2
 27182  002EDC  C01E  F037         	movff	?i2___flmul+3,i2___fladd@b+3
 27183  002EE0  EC6F  F015         	call	i2___fladd	;wreg free
 27184  002EE4  C034  F062         	movff	?i2___fladd,_Encoder_ISR$5974
 27185  002EE8  C035  F063         	movff	?i2___fladd+1,_Encoder_ISR$5974+1
 27186  002EEC  C036  F064         	movff	?i2___fladd+2,_Encoder_ISR$5974+2
 27187  002EF0  C037  F065         	movff	?i2___fladd+3,_Encoder_ISR$5974+3
 27188                           
 27189                           ;encoder.c: 91:       y[0]=0.02008*tics+1.56101*y[1]-0.64135*y[2];
 27190  002EF4  C062  F044         	movff	_Encoder_ISR$5974,i2___flsub@b
 27191  002EF8  C063  F045         	movff	_Encoder_ISR$5974+1,i2___flsub@b+1
 27192  002EFC  C064  F046         	movff	_Encoder_ISR$5974+2,i2___flsub@b+2
 27193  002F00  C065  F047         	movff	_Encoder_ISR$5974+3,i2___flsub@b+3
 27194  002F04  0E83               	movlw	131
 27195  002F06  6E1F               	movwf	i2___flmul@a^0,c
 27196  002F08  0E2F               	movlw	47
 27197  002F0A  6E20               	movwf	(i2___flmul@a+1)^0,c
 27198  002F0C  0E24               	movlw	36
 27199  002F0E  6E21               	movwf	(i2___flmul@a+2)^0,c
 27200  002F10  0E3F               	movlw	63
 27201  002F12  6E22               	movwf	(i2___flmul@a+3)^0,c
 27202  002F14  C07C  F01B         	movff	Encoder_ISR@y+8,i2___flmul@b
 27203  002F18  C07D  F01C         	movff	Encoder_ISR@y+9,i2___flmul@b+1
 27204  002F1C  C07E  F01D         	movff	Encoder_ISR@y+10,i2___flmul@b+2
 27205  002F20  C07F  F01E         	movff	Encoder_ISR@y+11,i2___flmul@b+3
 27206  002F24  EC52  F012         	call	i2___flmul	;wreg free
 27207  002F28  C01B  F048         	movff	?i2___flmul,i2___flsub@a
 27208  002F2C  C01C  F049         	movff	?i2___flmul+1,i2___flsub@a+1
 27209  002F30  C01D  F04A         	movff	?i2___flmul+2,i2___flsub@a+2
 27210  002F34  C01E  F04B         	movff	?i2___flmul+3,i2___flsub@a+3
 27211  002F38  EC89  F03A         	call	i2___flsub	;wreg free
 27212  002F3C  C044  F074         	movff	?i2___flsub,Encoder_ISR@y
 27213  002F40  C045  F075         	movff	?i2___flsub+1,Encoder_ISR@y+1
 27214  002F44  C046  F076         	movff	?i2___flsub+2,Encoder_ISR@y+2
 27215  002F48  C047  F077         	movff	?i2___flsub+3,Encoder_ISR@y+3
 27216                           
 27217                           ;encoder.c: 92:       salida = y[0]+2*y[1]+y[2];
 27218  002F4C  C074  F038         	movff	Encoder_ISR@y,i2___fladd@a
 27219  002F50  C075  F039         	movff	Encoder_ISR@y+1,i2___fladd@a+1
 27220  002F54  C076  F03A         	movff	Encoder_ISR@y+2,i2___fladd@a+2
 27221  002F58  C077  F03B         	movff	Encoder_ISR@y+3,i2___fladd@a+3
 27222  002F5C  0E00               	movlw	0
 27223  002F5E  6E1F               	movwf	i2___flmul@a^0,c
 27224  002F60  0E00               	movlw	0
 27225  002F62  6E20               	movwf	(i2___flmul@a+1)^0,c
 27226  002F64  0E00               	movlw	0
 27227  002F66  6E21               	movwf	(i2___flmul@a+2)^0,c
 27228  002F68  0E40               	movlw	64
 27229  002F6A  6E22               	movwf	(i2___flmul@a+3)^0,c
 27230  002F6C  C078  F01B         	movff	Encoder_ISR@y+4,i2___flmul@b
 27231  002F70  C079  F01C         	movff	Encoder_ISR@y+5,i2___flmul@b+1
 27232  002F74  C07A  F01D         	movff	Encoder_ISR@y+6,i2___flmul@b+2
 27233  002F78  C07B  F01E         	movff	Encoder_ISR@y+7,i2___flmul@b+3
 27234  002F7C  EC52  F012         	call	i2___flmul	;wreg free
 27235  002F80  C01B  F034         	movff	?i2___flmul,i2___fladd@b
 27236  002F84  C01C  F035         	movff	?i2___flmul+1,i2___fladd@b+1
 27237  002F88  C01D  F036         	movff	?i2___flmul+2,i2___fladd@b+2
 27238  002F8C  C01E  F037         	movff	?i2___flmul+3,i2___fladd@b+3
 27239  002F90  EC6F  F015         	call	i2___fladd	;wreg free
 27240  002F94  C034  F066         	movff	?i2___fladd,_Encoder_ISR$5975
 27241  002F98  C035  F067         	movff	?i2___fladd+1,_Encoder_ISR$5975+1
 27242  002F9C  C036  F068         	movff	?i2___fladd+2,_Encoder_ISR$5975+2
 27243  002FA0  C037  F069         	movff	?i2___fladd+3,_Encoder_ISR$5975+3
 27244                           
 27245                           ;encoder.c: 92:       salida = y[0]+2*y[1]+y[2];
 27246  002FA4  C066  F034         	movff	_Encoder_ISR$5975,i2___fladd@b
 27247  002FA8  C067  F035         	movff	_Encoder_ISR$5975+1,i2___fladd@b+1
 27248  002FAC  C068  F036         	movff	_Encoder_ISR$5975+2,i2___fladd@b+2
 27249  002FB0  C069  F037         	movff	_Encoder_ISR$5975+3,i2___fladd@b+3
 27250  002FB4  C07C  F038         	movff	Encoder_ISR@y+8,i2___fladd@a
 27251  002FB8  C07D  F039         	movff	Encoder_ISR@y+9,i2___fladd@a+1
 27252  002FBC  C07E  F03A         	movff	Encoder_ISR@y+10,i2___fladd@a+2
 27253  002FC0  C07F  F03B         	movff	Encoder_ISR@y+11,i2___fladd@a+3
 27254  002FC4  EC6F  F015         	call	i2___fladd	;wreg free
 27255  002FC8  C034  F070         	movff	?i2___fladd,Encoder_ISR@salida
 27256  002FCC  C035  F071         	movff	?i2___fladd+1,Encoder_ISR@salida+1
 27257  002FD0  C036  F072         	movff	?i2___fladd+2,Encoder_ISR@salida+2
 27258  002FD4  C037  F073         	movff	?i2___fladd+3,Encoder_ISR@salida+3
 27259                           
 27260                           ;encoder.c: 93:       y[2]=y[1];
 27261  002FD8  C078  F07C         	movff	Encoder_ISR@y+4,Encoder_ISR@y+8
 27262  002FDC  C079  F07D         	movff	Encoder_ISR@y+5,Encoder_ISR@y+9
 27263  002FE0  C07A  F07E         	movff	Encoder_ISR@y+6,Encoder_ISR@y+10
 27264  002FE4  C07B  F07F         	movff	Encoder_ISR@y+7,Encoder_ISR@y+11
 27265                           
 27266                           ;encoder.c: 94:       y[1]=y[0];
 27267  002FE8  C074  F078         	movff	Encoder_ISR@y,Encoder_ISR@y+4
 27268  002FEC  C075  F079         	movff	Encoder_ISR@y+1,Encoder_ISR@y+5
 27269  002FF0  C076  F07A         	movff	Encoder_ISR@y+2,Encoder_ISR@y+6
 27270  002FF4  C077  F07B         	movff	Encoder_ISR@y+3,Encoder_ISR@y+7
 27271                           
 27272                           ;encoder.c: 95:       inverse_S= (2667*72*salida)/(1000000000);
 27273  002FF8  0E00               	movlw	0
 27274  002FFA  6E1F               	movwf	i2___flmul@a^0,c
 27275  002FFC  0E40               	movlw	64
 27276  002FFE  6E20               	movwf	(i2___flmul@a+1)^0,c
 27277  003000  0E8F               	movlw	143
 27278  003002  6E21               	movwf	(i2___flmul@a+2)^0,c
 27279  003004  0EC5               	movlw	197
 27280  003006  6E22               	movwf	(i2___flmul@a+3)^0,c
 27281  003008  C070  F01B         	movff	Encoder_ISR@salida,i2___flmul@b
 27282  00300C  C071  F01C         	movff	Encoder_ISR@salida+1,i2___flmul@b+1
 27283  003010  C072  F01D         	movff	Encoder_ISR@salida+2,i2___flmul@b+2
 27284  003014  C073  F01E         	movff	Encoder_ISR@salida+3,i2___flmul@b+3
 27285  003018  EC52  F012         	call	i2___flmul	;wreg free
 27286  00301C  C01B  F034         	movff	?i2___flmul,i2___fldiv@b
 27287  003020  C01C  F035         	movff	?i2___flmul+1,i2___fldiv@b+1
 27288  003024  C01D  F036         	movff	?i2___flmul+2,i2___fldiv@b+2
 27289  003028  C01E  F037         	movff	?i2___flmul+3,i2___fldiv@b+3
 27290  00302C  0E28               	movlw	40
 27291  00302E  6E38               	movwf	i2___fldiv@a^0,c
 27292  003030  0E6B               	movlw	107
 27293  003032  6E39               	movwf	(i2___fldiv@a+1)^0,c
 27294  003034  0E6E               	movlw	110
 27295  003036  6E3A               	movwf	(i2___fldiv@a+2)^0,c
 27296  003038  0E4E               	movlw	78
 27297  00303A  6E3B               	movwf	(i2___fldiv@a+3)^0,c
 27298  00303C  ECE4  F01A         	call	i2___fldiv	;wreg free
 27299  003040  C034  F2BA         	movff	?i2___fldiv,_inverse_S
 27300  003044  C035  F2BB         	movff	?i2___fldiv+1,_inverse_S+1
 27301  003048  C036  F2BC         	movff	?i2___fldiv+2,_inverse_S+2
 27302  00304C  C037  F2BD         	movff	?i2___fldiv+3,_inverse_S+3
 27303                           
 27304                           ;encoder.c: 96:       S=(1000000/salida)*((double)1000/((double)2667*72));
 27305  003050  C070  F038         	movff	Encoder_ISR@salida,i2___fldiv@a
 27306  003054  C071  F039         	movff	Encoder_ISR@salida+1,i2___fldiv@a+1
 27307  003058  C072  F03A         	movff	Encoder_ISR@salida+2,i2___fldiv@a+2
 27308  00305C  C073  F03B         	movff	Encoder_ISR@salida+3,i2___fldiv@a+3
 27309  003060  0E00               	movlw	0
 27310  003062  6E34               	movwf	i2___fldiv@b^0,c
 27311  003064  0E24               	movlw	36
 27312  003066  6E35               	movwf	(i2___fldiv@b+1)^0,c
 27313  003068  0E74               	movlw	116
 27314  00306A  6E36               	movwf	(i2___fldiv@b+2)^0,c
 27315  00306C  0E49               	movlw	73
 27316  00306E  6E37               	movwf	(i2___fldiv@b+3)^0,c
 27317  003070  ECE4  F01A         	call	i2___fldiv	;wreg free
 27318  003074  C034  F01B         	movff	?i2___fldiv,i2___flmul@b
 27319  003078  C035  F01C         	movff	?i2___fldiv+1,i2___flmul@b+1
 27320  00307C  C036  F01D         	movff	?i2___fldiv+2,i2___flmul@b+2
 27321  003080  C037  F01E         	movff	?i2___fldiv+3,i2___flmul@b+3
 27322  003084  0E35               	movlw	53
 27323  003086  6E1F               	movwf	i2___flmul@a^0,c
 27324  003088  0EA5               	movlw	165
 27325  00308A  6E20               	movwf	(i2___flmul@a+1)^0,c
 27326  00308C  0EAA               	movlw	170
 27327  00308E  6E21               	movwf	(i2___flmul@a+2)^0,c
 27328  003090  0E3B               	movlw	59
 27329  003092  6E22               	movwf	(i2___flmul@a+3)^0,c
 27330  003094  EC52  F012         	call	i2___flmul	;wreg free
 27331  003098  C01B  F2C6         	movff	?i2___flmul,_S
 27332  00309C  C01C  F2C7         	movff	?i2___flmul+1,_S+1
 27333  0030A0  C01D  F2C8         	movff	?i2___flmul+2,_S+2
 27334  0030A4  C01E  F2C9         	movff	?i2___flmul+3,_S+3
 27335  0030A8                     i2l11166:
 27336                           
 27337                           ;encoder.c: 99:    prescaler=0;
 27338  0030A8  0E00               	movlw	0
 27339  0030AA  0101               	movlb	1	; () banked
 27340  0030AC  6FDB               	movwf	_prescaler& (0+255),b
 27341                           
 27342                           ; BSR set to: 1
 27343  0030AE  0012               	return		;funcret
 27344  0030B0                     __end_of_Encoder_ISR:
 27345                           	callstack 0
 27346                           
 27347 ;; *************** function _IOCC2_DefaultInterruptHandler *****************
 27348 ;; Defined at:
 27349 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
 27350 ;; Parameters:    Size  Location     Type
 27351 ;;		None
 27352 ;; Auto vars:     Size  Location     Type
 27353 ;;		None
 27354 ;; Return value:  Size  Location     Type
 27355 ;;                  1    wreg      void 
 27356 ;; Registers used:
 27357 ;;		None
 27358 ;; Tracked objects:
 27359 ;;		On entry : 3F/2
 27360 ;;		On exit  : 3F/2
 27361 ;;		Unchanged: 3F/0
 27362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27363 ;;      Params:         0       0       0       0       0       0       0       0       0
 27364 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27366 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27367 ;;Total ram usage:        0 bytes
 27368 ;; Hardware stack levels used: 1
 27369 ;; This function calls:
 27370 ;;		Nothing
 27371 ;; This function is called by:
 27372 ;;		_PIN_MANAGER_Initialize
 27373 ;;		_IOCC2_ISR
 27374 ;; This function uses a non-reentrant model
 27375 ;;
 27376                           
 27377                           	psect	text149
 27378  007E26                     __ptext149:
 27379                           	callstack 0
 27380  007E26                     _IOCC2_DefaultInterruptHandler:
 27381                           	callstack 18
 27382                           
 27383                           ; BSR set to: 2
 27384                           
 27385                           ; BSR set to: 1
 27386                           ;incstack = 0
 27387  007E26  0012               	return		;funcret
 27388  007E28                     __end_of_IOCC2_DefaultInterruptHandler:
 27389                           	callstack 0
 27390                           
 27391 ;; *************** function i2___xxtofl *****************
 27392 ;; Defined at:
 27393 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 27394 ;; Parameters:    Size  Location     Type
 27395 ;;  sign            1    wreg     unsigned char 
 27396 ;;  val             4   12[COMRAM] long 
 27397 ;; Auto vars:     Size  Location     Type
 27398 ;;  sign            1   20[COMRAM] unsigned char 
 27399 ;;  arg             4   22[COMRAM] unsigned long 
 27400 ;;  exp             1   21[COMRAM] unsigned char 
 27401 ;; Return value:  Size  Location     Type
 27402 ;;                  4   12[COMRAM] unsigned char 
 27403 ;; Registers used:
 27404 ;;		wreg, status,2, status,0
 27405 ;; Tracked objects:
 27406 ;;		On entry : 3E/1
 27407 ;;		On exit  : 0/0
 27408 ;;		Unchanged: 0/0
 27409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27410 ;;      Params:         4       0       0       0       0       0       0       0       0
 27411 ;;      Locals:         6       0       0       0       0       0       0       0       0
 27412 ;;      Temps:          4       0       0       0       0       0       0       0       0
 27413 ;;      Totals:        14       0       0       0       0       0       0       0       0
 27414 ;;Total ram usage:       14 bytes
 27415 ;; Hardware stack levels used: 1
 27416 ;; This function calls:
 27417 ;;		Nothing
 27418 ;; This function is called by:
 27419 ;;		_G01_TMR2_ISR
 27420 ;;		_Encoder_ISR
 27421 ;; This function uses a non-reentrant model
 27422 ;;
 27423                           
 27424                           	psect	text150
 27425  004982                     __ptext150:
 27426                           	callstack 0
 27427  004982                     i2___xxtofl:
 27428                           	callstack 18
 27429                           
 27430                           ; BSR set to: 2
 27431                           ;incstack = 0
 27432                           ;i2___xxtofl@sign stored from wreg
 27433  004982  6E15               	movwf	i2___xxtofl@sign^0,c
 27434  004984  5015               	movf	i2___xxtofl@sign^0,w,c
 27435  004986  A4D8               	btfss	status,2,c
 27436  004988  AE10               	btfss	(i2___xxtofl@val+3)^0,7,c
 27437  00498A  D01A               	goto	i2l2123
 27438  00498C  C00D  F011         	movff	i2___xxtofl@val,??i2___xxtofl
 27439  004990  C00E  F012         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 27440  004994  C00F  F013         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 27441  004998  C010  F014         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 27442  00499C  1E11               	comf	??i2___xxtofl^0,f,c
 27443  00499E  1E12               	comf	(??i2___xxtofl+1)^0,f,c
 27444  0049A0  1E13               	comf	(??i2___xxtofl+2)^0,f,c
 27445  0049A2  1E14               	comf	(??i2___xxtofl+3)^0,f,c
 27446  0049A4  2A11               	incf	??i2___xxtofl^0,f,c
 27447  0049A6  0E00               	movlw	0
 27448  0049A8  2212               	addwfc	(??i2___xxtofl+1)^0,f,c
 27449  0049AA  2213               	addwfc	(??i2___xxtofl+2)^0,f,c
 27450  0049AC  2214               	addwfc	(??i2___xxtofl+3)^0,f,c
 27451  0049AE  C011  F017         	movff	??i2___xxtofl,i2___xxtofl@arg
 27452  0049B2  C012  F018         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 27453  0049B6  C013  F019         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 27454  0049BA  C014  F01A         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 27455  0049BE  D008               	goto	i2l10442
 27456  0049C0                     i2l2123:
 27457  0049C0  C00D  F017         	movff	i2___xxtofl@val,i2___xxtofl@arg
 27458  0049C4  C00E  F018         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 27459  0049C8  C00F  F019         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 27460  0049CC  C010  F01A         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 27461  0049D0                     i2l10442:
 27462  0049D0  500D               	movf	i2___xxtofl@val^0,w,c
 27463  0049D2  100E               	iorwf	(i2___xxtofl@val+1)^0,w,c
 27464  0049D4  100F               	iorwf	(i2___xxtofl@val+2)^0,w,c
 27465  0049D6  1010               	iorwf	(i2___xxtofl@val+3)^0,w,c
 27466  0049D8  A4D8               	btfss	status,2,c
 27467  0049DA  D009               	goto	i2l10448
 27468  0049DC  0E00               	movlw	0
 27469  0049DE  6E0D               	movwf	?i2___xxtofl^0,c
 27470  0049E0  0E00               	movlw	0
 27471  0049E2  6E0E               	movwf	(?i2___xxtofl+1)^0,c
 27472  0049E4  0E00               	movlw	0
 27473  0049E6  6E0F               	movwf	(?i2___xxtofl+2)^0,c
 27474  0049E8  0E00               	movlw	0
 27475  0049EA  6E10               	movwf	(?i2___xxtofl+3)^0,c
 27476  0049EC  0012               	return	
 27477  0049EE                     i2l10448:
 27478  0049EE  0E96               	movlw	150
 27479  0049F0  6E16               	movwf	i2___xxtofl@exp^0,c
 27480  0049F2  D006               	goto	i2l10452
 27481  0049F4                     i2l10450:
 27482  0049F4  2A16               	incf	i2___xxtofl@exp^0,f,c
 27483  0049F6  90D8               	bcf	status,0,c
 27484  0049F8  321A               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 27485  0049FA  3219               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 27486  0049FC  3218               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 27487  0049FE  3217               	rrcf	i2___xxtofl@arg^0,f,c
 27488  004A00                     i2l10452:
 27489  004A00  0E00               	movlw	0
 27490  004A02  1417               	andwf	i2___xxtofl@arg^0,w,c
 27491  004A04  6E11               	movwf	??i2___xxtofl^0,c
 27492  004A06  0E00               	movlw	0
 27493  004A08  1418               	andwf	(i2___xxtofl@arg+1)^0,w,c
 27494  004A0A  6E12               	movwf	(??i2___xxtofl+1)^0,c
 27495  004A0C  0E00               	movlw	0
 27496  004A0E  1419               	andwf	(i2___xxtofl@arg+2)^0,w,c
 27497  004A10  6E13               	movwf	(??i2___xxtofl+2)^0,c
 27498  004A12  0EFE               	movlw	254
 27499  004A14  141A               	andwf	(i2___xxtofl@arg+3)^0,w,c
 27500  004A16  6E14               	movwf	(??i2___xxtofl+3)^0,c
 27501  004A18  5011               	movf	??i2___xxtofl^0,w,c
 27502  004A1A  1012               	iorwf	(??i2___xxtofl+1)^0,w,c
 27503  004A1C  1013               	iorwf	(??i2___xxtofl+2)^0,w,c
 27504  004A1E  1014               	iorwf	(??i2___xxtofl+3)^0,w,c
 27505  004A20  B4D8               	btfsc	status,2,c
 27506  004A22  D00D               	goto	i2l2130
 27507  004A24  D7E7               	goto	i2l10450
 27508  004A26                     i2l10454:
 27509  004A26  2A16               	incf	i2___xxtofl@exp^0,f,c
 27510  004A28  0E01               	movlw	1
 27511  004A2A  2617               	addwf	i2___xxtofl@arg^0,f,c
 27512  004A2C  0E00               	movlw	0
 27513  004A2E  2218               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 27514  004A30  2219               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 27515  004A32  221A               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 27516  004A34  90D8               	bcf	status,0,c
 27517  004A36  321A               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 27518  004A38  3219               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 27519  004A3A  3218               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 27520  004A3C  3217               	rrcf	i2___xxtofl@arg^0,f,c
 27521  004A3E                     i2l2130:
 27522  004A3E  0E00               	movlw	0
 27523  004A40  1417               	andwf	i2___xxtofl@arg^0,w,c
 27524  004A42  6E11               	movwf	??i2___xxtofl^0,c
 27525  004A44  0E00               	movlw	0
 27526  004A46  1418               	andwf	(i2___xxtofl@arg+1)^0,w,c
 27527  004A48  6E12               	movwf	(??i2___xxtofl+1)^0,c
 27528  004A4A  0E00               	movlw	0
 27529  004A4C  1419               	andwf	(i2___xxtofl@arg+2)^0,w,c
 27530  004A4E  6E13               	movwf	(??i2___xxtofl+2)^0,c
 27531  004A50  0EFF               	movlw	255
 27532  004A52  141A               	andwf	(i2___xxtofl@arg+3)^0,w,c
 27533  004A54  6E14               	movwf	(??i2___xxtofl+3)^0,c
 27534  004A56  5011               	movf	??i2___xxtofl^0,w,c
 27535  004A58  1012               	iorwf	(??i2___xxtofl+1)^0,w,c
 27536  004A5A  1013               	iorwf	(??i2___xxtofl+2)^0,w,c
 27537  004A5C  1014               	iorwf	(??i2___xxtofl+3)^0,w,c
 27538  004A5E  B4D8               	btfsc	status,2,c
 27539  004A60  D007               	goto	i2l10462
 27540  004A62  D7E1               	goto	i2l10454
 27541  004A64                     i2l10460:
 27542  004A64  0616               	decf	i2___xxtofl@exp^0,f,c
 27543  004A66  90D8               	bcf	status,0,c
 27544  004A68  3617               	rlcf	i2___xxtofl@arg^0,f,c
 27545  004A6A  3618               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 27546  004A6C  3619               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 27547  004A6E  361A               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 27548  004A70                     i2l10462:
 27549  004A70  BE19               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 27550  004A72  D003               	goto	i2u1171_40
 27551  004A74  0E02               	movlw	2
 27552  004A76  6016               	cpfslt	i2___xxtofl@exp^0,c
 27553  004A78  D7F5               	goto	i2l10460
 27554  004A7A                     i2u1171_40:
 27555  004A7A  A016               	btfss	i2___xxtofl@exp^0,0,c
 27556  004A7C  9E19               	bcf	(i2___xxtofl@arg+2)^0,7,c
 27557  004A7E  90D8               	bcf	status,0,c
 27558  004A80  3216               	rrcf	i2___xxtofl@exp^0,f,c
 27559  004A82  C016  F011         	movff	i2___xxtofl@exp,??i2___xxtofl
 27560  004A86  6A12               	clrf	(??i2___xxtofl+1)^0,c
 27561  004A88  6A13               	clrf	(??i2___xxtofl+2)^0,c
 27562  004A8A  6A14               	clrf	(??i2___xxtofl+3)^0,c
 27563  004A8C  C011  F014         	movff	??i2___xxtofl,??i2___xxtofl+3
 27564  004A90  6A13               	clrf	(??i2___xxtofl+2)^0,c
 27565  004A92  6A12               	clrf	(??i2___xxtofl+1)^0,c
 27566  004A94  6A11               	clrf	??i2___xxtofl^0,c
 27567  004A96  5011               	movf	??i2___xxtofl^0,w,c
 27568  004A98  1217               	iorwf	i2___xxtofl@arg^0,f,c
 27569  004A9A  5012               	movf	(??i2___xxtofl+1)^0,w,c
 27570  004A9C  1218               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 27571  004A9E  5013               	movf	(??i2___xxtofl+2)^0,w,c
 27572  004AA0  1219               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 27573  004AA2  5014               	movf	(??i2___xxtofl+3)^0,w,c
 27574  004AA4  121A               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 27575  004AA6  5015               	movf	i2___xxtofl@sign^0,w,c
 27576  004AA8  A4D8               	btfss	status,2,c
 27577  004AAA  AE10               	btfss	(i2___xxtofl@val+3)^0,7,c
 27578  004AAC  D001               	goto	i2l10478
 27579  004AAE  8E1A               	bsf	(i2___xxtofl@arg+3)^0,7,c
 27580  004AB0                     i2l10478:
 27581  004AB0  C017  F00D         	movff	i2___xxtofl@arg,?i2___xxtofl
 27582  004AB4  C018  F00E         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 27583  004AB8  C019  F00F         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 27584  004ABC  C01A  F010         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 27585  004AC0  0012               	return		;funcret
 27586  004AC2                     __end_ofi2___xxtofl:
 27587                           	callstack 0
 27588                           
 27589 ;; *************** function i2___flsub *****************
 27590 ;; Defined at:
 27591 ;;		line 245 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 27592 ;; Parameters:    Size  Location     Type
 27593 ;;  b               4   67[COMRAM] unsigned char 
 27594 ;;  a               4   71[COMRAM] unsigned char 
 27595 ;; Auto vars:     Size  Location     Type
 27596 ;;		None
 27597 ;; Return value:  Size  Location     Type
 27598 ;;                  4   67[COMRAM] unsigned char 
 27599 ;; Registers used:
 27600 ;;		wreg, status,2, status,0, cstack
 27601 ;; Tracked objects:
 27602 ;;		On entry : 0/0
 27603 ;;		On exit  : 0/0
 27604 ;;		Unchanged: 0/0
 27605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27606 ;;      Params:         8       0       0       0       0       0       0       0       0
 27607 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27609 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27610 ;;Total ram usage:        8 bytes
 27611 ;; Hardware stack levels used: 1
 27612 ;; Hardware stack levels required when called: 1
 27613 ;; This function calls:
 27614 ;;		i2___fladd
 27615 ;; This function is called by:
 27616 ;;		_Encoder_ISR
 27617 ;; This function uses a non-reentrant model
 27618 ;;
 27619                           
 27620                           	psect	text151
 27621  007512                     __ptext151:
 27622                           	callstack 0
 27623  007512                     i2___flsub:
 27624                           	callstack 16
 27625                           
 27626                           ;incstack = 0
 27627  007512  0E00               	movlw	0
 27628  007514  1A48               	xorwf	i2___flsub@a^0,f,c
 27629  007516  0E00               	movlw	0
 27630  007518  1A49               	xorwf	(i2___flsub@a+1)^0,f,c
 27631  00751A  0E00               	movlw	0
 27632  00751C  1A4A               	xorwf	(i2___flsub@a+2)^0,f,c
 27633  00751E  0E80               	movlw	128
 27634  007520  1A4B               	xorwf	(i2___flsub@a+3)^0,f,c
 27635  007522  C044  F034         	movff	i2___flsub@b,i2___fladd@b
 27636  007526  C045  F035         	movff	i2___flsub@b+1,i2___fladd@b+1
 27637  00752A  C046  F036         	movff	i2___flsub@b+2,i2___fladd@b+2
 27638  00752E  C047  F037         	movff	i2___flsub@b+3,i2___fladd@b+3
 27639  007532  C048  F038         	movff	i2___flsub@a,i2___fladd@a
 27640  007536  C049  F039         	movff	i2___flsub@a+1,i2___fladd@a+1
 27641  00753A  C04A  F03A         	movff	i2___flsub@a+2,i2___fladd@a+2
 27642  00753E  C04B  F03B         	movff	i2___flsub@a+3,i2___fladd@a+3
 27643  007542  EC6F  F015         	call	i2___fladd	;wreg free
 27644  007546  C034  F044         	movff	?i2___fladd,?i2___flsub
 27645  00754A  C035  F045         	movff	?i2___fladd+1,?i2___flsub+1
 27646  00754E  C036  F046         	movff	?i2___fladd+2,?i2___flsub+2
 27647  007552  C037  F047         	movff	?i2___fladd+3,?i2___flsub+3
 27648  007556  0012               	return		;funcret
 27649  007558                     __end_ofi2___flsub:
 27650                           	callstack 0
 27651                           
 27652 ;; *************** function i2___fladd *****************
 27653 ;; Defined at:
 27654 ;;		line 10 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 27655 ;; Parameters:    Size  Location     Type
 27656 ;;  b               4   51[COMRAM] unsigned char 
 27657 ;;  a               4   55[COMRAM] unsigned char 
 27658 ;; Auto vars:     Size  Location     Type
 27659 ;;  grs             1   66[COMRAM] unsigned char 
 27660 ;;  bexp            1   65[COMRAM] unsigned char 
 27661 ;;  aexp            1   64[COMRAM] unsigned char 
 27662 ;;  signs           1   63[COMRAM] unsigned char 
 27663 ;; Return value:  Size  Location     Type
 27664 ;;                  4   51[COMRAM] unsigned char 
 27665 ;; Registers used:
 27666 ;;		wreg, status,2, status,0
 27667 ;; Tracked objects:
 27668 ;;		On entry : 0/0
 27669 ;;		On exit  : 0/0
 27670 ;;		Unchanged: 0/0
 27671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27672 ;;      Params:         8       0       0       0       0       0       0       0       0
 27673 ;;      Locals:         4       0       0       0       0       0       0       0       0
 27674 ;;      Temps:          4       0       0       0       0       0       0       0       0
 27675 ;;      Totals:        16       0       0       0       0       0       0       0       0
 27676 ;;Total ram usage:       16 bytes
 27677 ;; Hardware stack levels used: 1
 27678 ;; This function calls:
 27679 ;;		Nothing
 27680 ;; This function is called by:
 27681 ;;		_Encoder_ISR
 27682 ;;		i2___flsub
 27683 ;; This function uses a non-reentrant model
 27684 ;;
 27685                           
 27686                           	psect	text152
 27687  002ADE                     __ptext152:
 27688                           	callstack 0
 27689  002ADE                     i2___fladd:
 27690                           	callstack 16
 27691                           
 27692                           ;incstack = 0
 27693  002ADE  5037               	movf	(i2___fladd@b+3)^0,w,c
 27694  002AE0  0B80               	andlw	128
 27695  002AE2  6E40               	movwf	i2___fladd@signs^0,c
 27696  002AE4  5037               	movf	(i2___fladd@b+3)^0,w,c
 27697  002AE6  2437               	addwf	(i2___fladd@b+3)^0,w,c
 27698  002AE8  6E42               	movwf	i2___fladd@bexp^0,c
 27699  002AEA  BE36               	btfsc	(i2___fladd@b+2)^0,7,c
 27700  002AEC  8042               	bsf	i2___fladd@bexp^0,0,c
 27701  002AEE  5042               	movf	i2___fladd@bexp^0,w,c
 27702  002AF0  B4D8               	btfsc	status,2,c
 27703  002AF2  D00D               	goto	i2l9526
 27704  002AF4  2842               	incf	i2___fladd@bexp^0,w,c
 27705  002AF6  A4D8               	btfss	status,2,c
 27706  002AF8  D008               	goto	i2l9522
 27707  002AFA  0E00               	movlw	0
 27708  002AFC  6E34               	movwf	i2___fladd@b^0,c
 27709  002AFE  0E00               	movlw	0
 27710  002B00  6E35               	movwf	(i2___fladd@b+1)^0,c
 27711  002B02  0E00               	movlw	0
 27712  002B04  6E36               	movwf	(i2___fladd@b+2)^0,c
 27713  002B06  0E00               	movlw	0
 27714  002B08  6E37               	movwf	(i2___fladd@b+3)^0,c
 27715  002B0A                     i2l9522:
 27716  002B0A  8E36               	bsf	(i2___fladd@b+2)^0,7,c
 27717  002B0C  D006               	goto	L35
 27718  002B0E                     i2l9526:
 27719  002B0E  0E00               	movlw	0
 27720  002B10  6E34               	movwf	i2___fladd@b^0,c
 27721  002B12  0E00               	movlw	0
 27722  002B14  6E35               	movwf	(i2___fladd@b+1)^0,c
 27723  002B16  0E00               	movlw	0
 27724  002B18  6E36               	movwf	(i2___fladd@b+2)^0,c
 27725  002B1A                     L35:
 27726  002B1A  0E00               	movlw	0
 27727  002B1C  6E37               	movwf	(i2___fladd@b+3)^0,c
 27728  002B1E  503B               	movf	(i2___fladd@a+3)^0,w,c
 27729  002B20  0B80               	andlw	128
 27730  002B22  6E41               	movwf	i2___fladd@aexp^0,c
 27731  002B24  5040               	movf	i2___fladd@signs^0,w,c
 27732  002B26  1841               	xorwf	i2___fladd@aexp^0,w,c
 27733  002B28  A4D8               	btfss	status,2,c
 27734  002B2A  8C40               	bsf	i2___fladd@signs^0,6,c
 27735  002B2C  503B               	movf	(i2___fladd@a+3)^0,w,c
 27736  002B2E  243B               	addwf	(i2___fladd@a+3)^0,w,c
 27737  002B30  6E41               	movwf	i2___fladd@aexp^0,c
 27738  002B32  BE3A               	btfsc	(i2___fladd@a+2)^0,7,c
 27739  002B34  8041               	bsf	i2___fladd@aexp^0,0,c
 27740  002B36  5041               	movf	i2___fladd@aexp^0,w,c
 27741  002B38  B4D8               	btfsc	status,2,c
 27742  002B3A  D00D               	goto	i2l9550
 27743  002B3C  2841               	incf	i2___fladd@aexp^0,w,c
 27744  002B3E  A4D8               	btfss	status,2,c
 27745  002B40  D008               	goto	i2l9546
 27746  002B42  0E00               	movlw	0
 27747  002B44  6E38               	movwf	i2___fladd@a^0,c
 27748  002B46  0E00               	movlw	0
 27749  002B48  6E39               	movwf	(i2___fladd@a+1)^0,c
 27750  002B4A  0E00               	movlw	0
 27751  002B4C  6E3A               	movwf	(i2___fladd@a+2)^0,c
 27752  002B4E  0E00               	movlw	0
 27753  002B50  6E3B               	movwf	(i2___fladd@a+3)^0,c
 27754  002B52                     i2l9546:
 27755  002B52  8E3A               	bsf	(i2___fladd@a+2)^0,7,c
 27756  002B54  D006               	goto	L36
 27757  002B56                     i2l9550:
 27758  002B56  0E00               	movlw	0
 27759  002B58  6E38               	movwf	i2___fladd@a^0,c
 27760  002B5A  0E00               	movlw	0
 27761  002B5C  6E39               	movwf	(i2___fladd@a+1)^0,c
 27762  002B5E  0E00               	movlw	0
 27763  002B60  6E3A               	movwf	(i2___fladd@a+2)^0,c
 27764  002B62                     L36:
 27765  002B62  0E00               	movlw	0
 27766  002B64  6E3B               	movwf	(i2___fladd@a+3)^0,c
 27767  002B66  5042               	movf	i2___fladd@bexp^0,w,c
 27768  002B68  5C41               	subwf	i2___fladd@aexp^0,w,c
 27769  002B6A  B0D8               	btfsc	status,0,c
 27770  002B6C  D022               	goto	i2l9588
 27771  002B6E  AC40               	btfss	i2___fladd@signs^0,6,c
 27772  002B70  D002               	goto	i2l9558
 27773  002B72  0E80               	movlw	128
 27774  002B74  1A40               	xorwf	i2___fladd@signs^0,f,c
 27775  002B76                     i2l9558:
 27776  002B76  C042  F043         	movff	i2___fladd@bexp,i2___fladd@grs
 27777  002B7A  C041  F042         	movff	i2___fladd@aexp,i2___fladd@bexp
 27778  002B7E  C043  F041         	movff	i2___fladd@grs,i2___fladd@aexp
 27779  002B82  C034  F043         	movff	i2___fladd@b,i2___fladd@grs
 27780  002B86  C038  F034         	movff	i2___fladd@a,i2___fladd@b
 27781  002B8A  C043  F038         	movff	i2___fladd@grs,i2___fladd@a
 27782  002B8E  C035  F043         	movff	i2___fladd@b+1,i2___fladd@grs
 27783  002B92  C039  F035         	movff	i2___fladd@a+1,i2___fladd@b+1
 27784  002B96  C043  F039         	movff	i2___fladd@grs,i2___fladd@a+1
 27785  002B9A  C036  F043         	movff	i2___fladd@b+2,i2___fladd@grs
 27786  002B9E  C03A  F036         	movff	i2___fladd@a+2,i2___fladd@b+2
 27787  002BA2  C043  F03A         	movff	i2___fladd@grs,i2___fladd@a+2
 27788  002BA6  C037  F043         	movff	i2___fladd@b+3,i2___fladd@grs
 27789  002BAA  C03B  F037         	movff	i2___fladd@a+3,i2___fladd@b+3
 27790  002BAE  C043  F03B         	movff	i2___fladd@grs,i2___fladd@a+3
 27791  002BB2                     i2l9588:
 27792  002BB2  0E00               	movlw	0
 27793  002BB4  6E43               	movwf	i2___fladd@grs^0,c
 27794  002BB6  5042               	movf	i2___fladd@bexp^0,w,c
 27795  002BB8  C041  F03C         	movff	i2___fladd@aexp,??i2___fladd
 27796  002BBC  6A3D               	clrf	(??i2___fladd+1)^0,c
 27797  002BBE  5E3C               	subwf	??i2___fladd^0,f,c
 27798  002BC0  0E00               	movlw	0
 27799  002BC2  5A3D               	subwfb	(??i2___fladd+1)^0,f,c
 27800  002BC4  BE3D               	btfsc	(??i2___fladd+1)^0,7,c
 27801  002BC6  D02C               	goto	i2l1997
 27802  002BC8  503D               	movf	(??i2___fladd+1)^0,w,c
 27803  002BCA  E104               	bnz	i2u1037_40
 27804  002BCC  0E1A               	movlw	26
 27805  002BCE  5C3C               	subwf	??i2___fladd^0,w,c
 27806  002BD0  A0D8               	btfss	status,0,c
 27807  002BD2  D026               	goto	i2l1997
 27808  002BD4                     i2u1037_40:
 27809  002BD4  5034               	movf	i2___fladd@b^0,w,c
 27810  002BD6  1035               	iorwf	(i2___fladd@b+1)^0,w,c
 27811  002BD8  1036               	iorwf	(i2___fladd@b+2)^0,w,c
 27812  002BDA  1037               	iorwf	(i2___fladd@b+3)^0,w,c
 27813  002BDC  B4D8               	btfsc	status,2,c
 27814  002BDE  D002               	goto	i2u1038_40
 27815  002BE0  0E01               	movlw	1
 27816  002BE2  D001               	goto	i2u1039_40
 27817  002BE4                     i2u1038_40:
 27818  002BE4  0E00               	movlw	0
 27819  002BE6                     i2u1039_40:
 27820  002BE6  6E43               	movwf	i2___fladd@grs^0,c
 27821  002BE8  0E00               	movlw	0
 27822  002BEA  6E34               	movwf	i2___fladd@b^0,c
 27823  002BEC  0E00               	movlw	0
 27824  002BEE  6E35               	movwf	(i2___fladd@b+1)^0,c
 27825  002BF0  0E00               	movlw	0
 27826  002BF2  6E36               	movwf	(i2___fladd@b+2)^0,c
 27827  002BF4  0E00               	movlw	0
 27828  002BF6  6E37               	movwf	(i2___fladd@b+3)^0,c
 27829  002BF8  C041  F042         	movff	i2___fladd@aexp,i2___fladd@bexp
 27830  002BFC  D015               	goto	i2u1042_40
 27831  002BFE                     i2l1998:
 27832  002BFE  A043               	btfss	i2___fladd@grs^0,0,c
 27833  002C00  D005               	goto	i2l9600
 27834  002C02  90D8               	bcf	status,0,c
 27835  002C04  3043               	rrcf	i2___fladd@grs^0,w,c
 27836  002C06  0901               	iorlw	1
 27837  002C08  6E43               	movwf	i2___fladd@grs^0,c
 27838  002C0A  D002               	goto	i2l9602
 27839  002C0C                     i2l9600:
 27840  002C0C  90D8               	bcf	status,0,c
 27841  002C0E  3243               	rrcf	i2___fladd@grs^0,f,c
 27842  002C10                     i2l9602:
 27843  002C10  B034               	btfsc	i2___fladd@b^0,0,c
 27844  002C12  8E43               	bsf	i2___fladd@grs^0,7,c
 27845  002C14  3437               	rlcf	(i2___fladd@b+3)^0,w,c
 27846  002C16  3237               	rrcf	(i2___fladd@b+3)^0,f,c
 27847  002C18  3236               	rrcf	(i2___fladd@b+2)^0,f,c
 27848  002C1A  3235               	rrcf	(i2___fladd@b+1)^0,f,c
 27849  002C1C  3234               	rrcf	i2___fladd@b^0,f,c
 27850  002C1E  2A42               	incf	i2___fladd@bexp^0,f,c
 27851  002C20                     i2l1997:
 27852  002C20  5041               	movf	i2___fladd@aexp^0,w,c
 27853  002C22  5C42               	subwf	i2___fladd@bexp^0,w,c
 27854  002C24  A0D8               	btfss	status,0,c
 27855  002C26  D7EB               	goto	i2l1998
 27856  002C28                     i2u1042_40:
 27857  002C28  BC40               	btfsc	i2___fladd@signs^0,6,c
 27858  002C2A  D028               	goto	i2l9634
 27859  002C2C  5042               	movf	i2___fladd@bexp^0,w,c
 27860  002C2E  A4D8               	btfss	status,2,c
 27861  002C30  D009               	goto	i2l9616
 27862  002C32  0E00               	movlw	0
 27863  002C34  6E34               	movwf	?i2___fladd^0,c
 27864  002C36  0E00               	movlw	0
 27865  002C38  6E35               	movwf	(?i2___fladd+1)^0,c
 27866  002C3A  0E00               	movlw	0
 27867  002C3C  6E36               	movwf	(?i2___fladd+2)^0,c
 27868  002C3E  0E00               	movlw	0
 27869  002C40  6E37               	movwf	(?i2___fladd+3)^0,c
 27870  002C42  0012               	return	
 27871  002C44                     i2l9616:
 27872  002C44  5038               	movf	i2___fladd@a^0,w,c
 27873  002C46  2634               	addwf	i2___fladd@b^0,f,c
 27874  002C48  5039               	movf	(i2___fladd@a+1)^0,w,c
 27875  002C4A  2235               	addwfc	(i2___fladd@b+1)^0,f,c
 27876  002C4C  503A               	movf	(i2___fladd@a+2)^0,w,c
 27877  002C4E  2236               	addwfc	(i2___fladd@b+2)^0,f,c
 27878  002C50  503B               	movf	(i2___fladd@a+3)^0,w,c
 27879  002C52  2237               	addwfc	(i2___fladd@b+3)^0,f,c
 27880  002C54  A037               	btfss	(i2___fladd@b+3)^0,0,c
 27881  002C56  D071               	goto	i2u1055_40
 27882  002C58  A043               	btfss	i2___fladd@grs^0,0,c
 27883  002C5A  D005               	goto	i2l9624
 27884  002C5C  90D8               	bcf	status,0,c
 27885  002C5E  3043               	rrcf	i2___fladd@grs^0,w,c
 27886  002C60  0901               	iorlw	1
 27887  002C62  6E43               	movwf	i2___fladd@grs^0,c
 27888  002C64  D002               	goto	i2l9626
 27889  002C66                     i2l9624:
 27890  002C66  90D8               	bcf	status,0,c
 27891  002C68  3243               	rrcf	i2___fladd@grs^0,f,c
 27892  002C6A                     i2l9626:
 27893  002C6A  B034               	btfsc	i2___fladd@b^0,0,c
 27894  002C6C  8E43               	bsf	i2___fladd@grs^0,7,c
 27895  002C6E  3437               	rlcf	(i2___fladd@b+3)^0,w,c
 27896  002C70  3237               	rrcf	(i2___fladd@b+3)^0,f,c
 27897  002C72  3236               	rrcf	(i2___fladd@b+2)^0,f,c
 27898  002C74  3235               	rrcf	(i2___fladd@b+1)^0,f,c
 27899  002C76  3234               	rrcf	i2___fladd@b^0,f,c
 27900  002C78  2A42               	incf	i2___fladd@bexp^0,f,c
 27901  002C7A  D05F               	goto	i2u1055_40
 27902  002C7C                     i2l9634:
 27903  002C7C  5038               	movf	i2___fladd@a^0,w,c
 27904  002C7E  5C34               	subwf	i2___fladd@b^0,w,c
 27905  002C80  5039               	movf	(i2___fladd@a+1)^0,w,c
 27906  002C82  5835               	subwfb	(i2___fladd@b+1)^0,w,c
 27907  002C84  503A               	movf	(i2___fladd@a+2)^0,w,c
 27908  002C86  5836               	subwfb	(i2___fladd@b+2)^0,w,c
 27909  002C88  5037               	movf	(i2___fladd@b+3)^0,w,c
 27910  002C8A  0A80               	xorlw	128
 27911  002C8C  6E3C               	movwf	??i2___fladd^0,c
 27912  002C8E  503B               	movf	(i2___fladd@a+3)^0,w,c
 27913  002C90  0A80               	xorlw	128
 27914  002C92  583C               	subwfb	??i2___fladd^0,w,c
 27915  002C94  B0D8               	btfsc	status,0,c
 27916  002C96  D025               	goto	i2l9644
 27917  002C98  5034               	movf	i2___fladd@b^0,w,c
 27918  002C9A  5C38               	subwf	i2___fladd@a^0,w,c
 27919  002C9C  6E3C               	movwf	??i2___fladd^0,c
 27920  002C9E  5035               	movf	(i2___fladd@b+1)^0,w,c
 27921  002CA0  5839               	subwfb	(i2___fladd@a+1)^0,w,c
 27922  002CA2  6E3D               	movwf	(??i2___fladd+1)^0,c
 27923  002CA4  5036               	movf	(i2___fladd@b+2)^0,w,c
 27924  002CA6  583A               	subwfb	(i2___fladd@a+2)^0,w,c
 27925  002CA8  6E3E               	movwf	(??i2___fladd+2)^0,c
 27926  002CAA  5037               	movf	(i2___fladd@b+3)^0,w,c
 27927  002CAC  583B               	subwfb	(i2___fladd@a+3)^0,w,c
 27928  002CAE  6E3F               	movwf	(??i2___fladd+3)^0,c
 27929  002CB0  0EFF               	movlw	255
 27930  002CB2  243C               	addwf	??i2___fladd^0,w,c
 27931  002CB4  6E34               	movwf	i2___fladd@b^0,c
 27932  002CB6  0EFF               	movlw	255
 27933  002CB8  203D               	addwfc	(??i2___fladd+1)^0,w,c
 27934  002CBA  6E35               	movwf	(i2___fladd@b+1)^0,c
 27935  002CBC  0EFF               	movlw	255
 27936  002CBE  203E               	addwfc	(??i2___fladd+2)^0,w,c
 27937  002CC0  6E36               	movwf	(i2___fladd@b+2)^0,c
 27938  002CC2  0EFF               	movlw	255
 27939  002CC4  203F               	addwfc	(??i2___fladd+3)^0,w,c
 27940  002CC6  6E37               	movwf	(i2___fladd@b+3)^0,c
 27941  002CC8  0E80               	movlw	128
 27942  002CCA  1A40               	xorwf	i2___fladd@signs^0,f,c
 27943  002CCC  6C43               	negf	i2___fladd@grs^0,c
 27944  002CCE  5043               	movf	i2___fladd@grs^0,w,c
 27945  002CD0  A4D8               	btfss	status,2,c
 27946  002CD2  D00F               	goto	i2l2013
 27947  002CD4  0E01               	movlw	1
 27948  002CD6  2634               	addwf	i2___fladd@b^0,f,c
 27949  002CD8  0E00               	movlw	0
 27950  002CDA  2235               	addwfc	(i2___fladd@b+1)^0,f,c
 27951  002CDC  2236               	addwfc	(i2___fladd@b+2)^0,f,c
 27952  002CDE  2237               	addwfc	(i2___fladd@b+3)^0,f,c
 27953  002CE0  D008               	goto	i2l2013
 27954  002CE2                     i2l9644:
 27955  002CE2  5038               	movf	i2___fladd@a^0,w,c
 27956  002CE4  5E34               	subwf	i2___fladd@b^0,f,c
 27957  002CE6  5039               	movf	(i2___fladd@a+1)^0,w,c
 27958  002CE8  5A35               	subwfb	(i2___fladd@b+1)^0,f,c
 27959  002CEA  503A               	movf	(i2___fladd@a+2)^0,w,c
 27960  002CEC  5A36               	subwfb	(i2___fladd@b+2)^0,f,c
 27961  002CEE  503B               	movf	(i2___fladd@a+3)^0,w,c
 27962  002CF0  5A37               	subwfb	(i2___fladd@b+3)^0,f,c
 27963  002CF2                     i2l2013:
 27964  002CF2  5034               	movf	i2___fladd@b^0,w,c
 27965  002CF4  1035               	iorwf	(i2___fladd@b+1)^0,w,c
 27966  002CF6  1036               	iorwf	(i2___fladd@b+2)^0,w,c
 27967  002CF8  1037               	iorwf	(i2___fladd@b+3)^0,w,c
 27968  002CFA  A4D8               	btfss	status,2,c
 27969  002CFC  D01C               	goto	i2l9668
 27970  002CFE  5043               	movf	i2___fladd@grs^0,w,c
 27971  002D00  A4D8               	btfss	status,2,c
 27972  002D02  D019               	goto	i2l9668
 27973  002D04  0E00               	movlw	0
 27974  002D06  6E34               	movwf	?i2___fladd^0,c
 27975  002D08  0E00               	movlw	0
 27976  002D0A  6E35               	movwf	(?i2___fladd+1)^0,c
 27977  002D0C  0E00               	movlw	0
 27978  002D0E  6E36               	movwf	(?i2___fladd+2)^0,c
 27979  002D10  0E00               	movlw	0
 27980  002D12  6E37               	movwf	(?i2___fladd+3)^0,c
 27981  002D14  0012               	return	
 27982  002D16                     i2l9652:
 27983  002D16  90D8               	bcf	status,0,c
 27984  002D18  3634               	rlcf	i2___fladd@b^0,f,c
 27985  002D1A  3635               	rlcf	(i2___fladd@b+1)^0,f,c
 27986  002D1C  3636               	rlcf	(i2___fladd@b+2)^0,f,c
 27987  002D1E  3637               	rlcf	(i2___fladd@b+3)^0,f,c
 27988  002D20  BE43               	btfsc	i2___fladd@grs^0,7,c
 27989  002D22  8034               	bsf	i2___fladd@b^0,0,c
 27990  002D24  A043               	btfss	i2___fladd@grs^0,0,c
 27991  002D26  D002               	goto	i2l9662
 27992  002D28  80D8               	bsf	status,0,c
 27993  002D2A  D001               	goto	L37
 27994  002D2C                     i2l9662:
 27995  002D2C  90D8               	bcf	status,0,c
 27996  002D2E                     L37:
 27997  002D2E  3643               	rlcf	i2___fladd@grs^0,f,c
 27998  002D30  5042               	movf	i2___fladd@bexp^0,w,c
 27999  002D32  A4D8               	btfss	status,2,c
 28000  002D34  0642               	decf	i2___fladd@bexp^0,f,c
 28001  002D36                     i2l9668:
 28002  002D36  AE36               	btfss	(i2___fladd@b+2)^0,7,c
 28003  002D38  D7EE               	goto	i2l9652
 28004  002D3A                     i2u1055_40:
 28005  002D3A  0E00               	movlw	0
 28006  002D3C  6E41               	movwf	i2___fladd@aexp^0,c
 28007  002D3E  AE43               	btfss	i2___fladd@grs^0,7,c
 28008  002D40  D00B               	goto	i2l2022
 28009  002D42  C043  F03C         	movff	i2___fladd@grs,??i2___fladd
 28010  002D46  0E7F               	movlw	127
 28011  002D48  163C               	andwf	??i2___fladd^0,f,c
 28012  002D4A  B4D8               	btfsc	status,2,c
 28013  002D4C  D003               	goto	i2l2023
 28014  002D4E                     i2u1057_40:
 28015  002D4E  0E01               	movlw	1
 28016  002D50  6E41               	movwf	i2___fladd@aexp^0,c
 28017  002D52  D002               	goto	i2l2022
 28018  002D54                     i2l2023:
 28019  002D54  B034               	btfsc	i2___fladd@b^0,0,c
 28020  002D56  D7FB               	goto	i2u1057_40
 28021  002D58                     i2l2022:
 28022  002D58  5041               	movf	i2___fladd@aexp^0,w,c
 28023  002D5A  B4D8               	btfsc	status,2,c
 28024  002D5C  D020               	goto	i2l9688
 28025  002D5E  0E01               	movlw	1
 28026  002D60  2634               	addwf	i2___fladd@b^0,f,c
 28027  002D62  0E00               	movlw	0
 28028  002D64  2235               	addwfc	(i2___fladd@b+1)^0,f,c
 28029  002D66  2236               	addwfc	(i2___fladd@b+2)^0,f,c
 28030  002D68  2237               	addwfc	(i2___fladd@b+3)^0,f,c
 28031  002D6A  A037               	btfss	(i2___fladd@b+3)^0,0,c
 28032  002D6C  D018               	goto	i2l9688
 28033  002D6E  C034  F03C         	movff	i2___fladd@b,??i2___fladd
 28034  002D72  C035  F03D         	movff	i2___fladd@b+1,??i2___fladd+1
 28035  002D76  C036  F03E         	movff	i2___fladd@b+2,??i2___fladd+2
 28036  002D7A  C037  F03F         	movff	i2___fladd@b+3,??i2___fladd+3
 28037  002D7E  343F               	rlcf	(??i2___fladd+3)^0,w,c
 28038  002D80  323F               	rrcf	(??i2___fladd+3)^0,f,c
 28039  002D82  323E               	rrcf	(??i2___fladd+2)^0,f,c
 28040  002D84  323D               	rrcf	(??i2___fladd+1)^0,f,c
 28041  002D86  323C               	rrcf	??i2___fladd^0,f,c
 28042  002D88  C03C  F034         	movff	??i2___fladd,i2___fladd@b
 28043  002D8C  C03D  F035         	movff	??i2___fladd+1,i2___fladd@b+1
 28044  002D90  C03E  F036         	movff	??i2___fladd+2,i2___fladd@b+2
 28045  002D94  C03F  F037         	movff	??i2___fladd+3,i2___fladd@b+3
 28046  002D98  2842               	incf	i2___fladd@bexp^0,w,c
 28047  002D9A  A4D8               	btfss	status,2,c
 28048  002D9C  2A42               	incf	i2___fladd@bexp^0,f,c
 28049  002D9E                     i2l9688:
 28050  002D9E  2842               	incf	i2___fladd@bexp^0,w,c
 28051  002DA0  B4D8               	btfsc	status,2,c
 28052  002DA2  D003               	goto	i2u1063_40
 28053  002DA4  5042               	movf	i2___fladd@bexp^0,w,c
 28054  002DA6  A4D8               	btfss	status,2,c
 28055  002DA8  D00D               	goto	i2l9696
 28056  002DAA                     i2u1063_40:
 28057  002DAA  0E00               	movlw	0
 28058  002DAC  6E34               	movwf	i2___fladd@b^0,c
 28059  002DAE  0E00               	movlw	0
 28060  002DB0  6E35               	movwf	(i2___fladd@b+1)^0,c
 28061  002DB2  0E00               	movlw	0
 28062  002DB4  6E36               	movwf	(i2___fladd@b+2)^0,c
 28063  002DB6  0E00               	movlw	0
 28064  002DB8  6E37               	movwf	(i2___fladd@b+3)^0,c
 28065  002DBA  5042               	movf	i2___fladd@bexp^0,w,c
 28066  002DBC  A4D8               	btfss	status,2,c
 28067  002DBE  D002               	goto	i2l9696
 28068  002DC0  0E00               	movlw	0
 28069  002DC2  6E40               	movwf	i2___fladd@signs^0,c
 28070  002DC4                     i2l9696:
 28071  002DC4  A042               	btfss	i2___fladd@bexp^0,0,c
 28072  002DC6  D002               	goto	i2l9700
 28073  002DC8  8E36               	bsf	(i2___fladd@b+2)^0,7,c
 28074  002DCA  D001               	goto	i2l9702
 28075  002DCC                     i2l9700:
 28076  002DCC  9E36               	bcf	(i2___fladd@b+2)^0,7,c
 28077  002DCE                     i2l9702:
 28078  002DCE  90D8               	bcf	status,0,c
 28079  002DD0  3042               	rrcf	i2___fladd@bexp^0,w,c
 28080  002DD2  6E37               	movwf	(i2___fladd@b+3)^0,c
 28081  002DD4  BE40               	btfsc	i2___fladd@signs^0,7,c
 28082  002DD6  8E37               	bsf	(i2___fladd@b+3)^0,7,c
 28083  002DD8  C034  F034         	movff	i2___fladd@b,?i2___fladd
 28084  002DDC  C035  F035         	movff	i2___fladd@b+1,?i2___fladd+1
 28085  002DE0  C036  F036         	movff	i2___fladd@b+2,?i2___fladd+2
 28086  002DE4  C037  F037         	movff	i2___fladd@b+3,?i2___fladd+3
 28087  002DE8  0012               	return		;funcret
 28088  002DEA                     __end_ofi2___fladd:
 28089                           	callstack 0
 28090                           
 28091 ;; *************** function i2___flmul *****************
 28092 ;; Defined at:
 28093 ;;		line 8 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 28094 ;; Parameters:    Size  Location     Type
 28095 ;;  b               4   26[COMRAM] unsigned char 
 28096 ;;  a               4   30[COMRAM] unsigned char 
 28097 ;; Auto vars:     Size  Location     Type
 28098 ;;  prod            4   45[COMRAM] struct .
 28099 ;;  grs             4   40[COMRAM] unsigned long 
 28100 ;;  temp            2   49[COMRAM] struct .
 28101 ;;  bexp            1   44[COMRAM] unsigned char 
 28102 ;;  aexp            1   39[COMRAM] unsigned char 
 28103 ;;  sign            1   38[COMRAM] unsigned char 
 28104 ;; Return value:  Size  Location     Type
 28105 ;;                  4   26[COMRAM] unsigned char 
 28106 ;; Registers used:
 28107 ;;		wreg, status,2, status,0, prodl, prodh
 28108 ;; Tracked objects:
 28109 ;;		On entry : 0/1
 28110 ;;		On exit  : 0/0
 28111 ;;		Unchanged: 0/0
 28112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28113 ;;      Params:         8       0       0       0       0       0       0       0       0
 28114 ;;      Locals:        13       0       0       0       0       0       0       0       0
 28115 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28116 ;;      Totals:        25       0       0       0       0       0       0       0       0
 28117 ;;Total ram usage:       25 bytes
 28118 ;; Hardware stack levels used: 1
 28119 ;; This function calls:
 28120 ;;		Nothing
 28121 ;; This function is called by:
 28122 ;;		_G01_TMR2_ISR
 28123 ;;		_Encoder_ISR
 28124 ;; This function uses a non-reentrant model
 28125 ;;
 28126                           
 28127                           	psect	text153
 28128  0024A4                     __ptext153:
 28129                           	callstack 0
 28130  0024A4                     i2___flmul:
 28131                           	callstack 18
 28132                           
 28133                           ;incstack = 0
 28134  0024A4  501E               	movf	(i2___flmul@b+3)^0,w,c
 28135  0024A6  0B80               	andlw	128
 28136  0024A8  6E27               	movwf	i2___flmul@sign^0,c
 28137  0024AA  501E               	movf	(i2___flmul@b+3)^0,w,c
 28138  0024AC  241E               	addwf	(i2___flmul@b+3)^0,w,c
 28139  0024AE  6E2D               	movwf	i2___flmul@bexp^0,c
 28140  0024B0  BE1D               	btfsc	(i2___flmul@b+2)^0,7,c
 28141  0024B2  802D               	bsf	i2___flmul@bexp^0,0,c
 28142  0024B4  502D               	movf	i2___flmul@bexp^0,w,c
 28143  0024B6  B4D8               	btfsc	status,2,c
 28144  0024B8  D00D               	goto	i2l10320
 28145  0024BA  282D               	incf	i2___flmul@bexp^0,w,c
 28146  0024BC  A4D8               	btfss	status,2,c
 28147  0024BE  D008               	goto	i2l10318
 28148  0024C0  0E00               	movlw	0
 28149  0024C2  6E1B               	movwf	i2___flmul@b^0,c
 28150  0024C4  0E00               	movlw	0
 28151  0024C6  6E1C               	movwf	(i2___flmul@b+1)^0,c
 28152  0024C8  0E00               	movlw	0
 28153  0024CA  6E1D               	movwf	(i2___flmul@b+2)^0,c
 28154  0024CC  0E00               	movlw	0
 28155  0024CE  6E1E               	movwf	(i2___flmul@b+3)^0,c
 28156  0024D0                     i2l10318:
 28157  0024D0  8E1D               	bsf	(i2___flmul@b+2)^0,7,c
 28158  0024D2  D008               	goto	i2l10322
 28159  0024D4                     i2l10320:
 28160  0024D4  0E00               	movlw	0
 28161  0024D6  6E1B               	movwf	i2___flmul@b^0,c
 28162  0024D8  0E00               	movlw	0
 28163  0024DA  6E1C               	movwf	(i2___flmul@b+1)^0,c
 28164  0024DC  0E00               	movlw	0
 28165  0024DE  6E1D               	movwf	(i2___flmul@b+2)^0,c
 28166  0024E0  0E00               	movlw	0
 28167  0024E2  6E1E               	movwf	(i2___flmul@b+3)^0,c
 28168  0024E4                     i2l10322:
 28169  0024E4  5022               	movf	(i2___flmul@a+3)^0,w,c
 28170  0024E6  0B80               	andlw	128
 28171  0024E8  1A27               	xorwf	i2___flmul@sign^0,f,c
 28172  0024EA  5022               	movf	(i2___flmul@a+3)^0,w,c
 28173  0024EC  2422               	addwf	(i2___flmul@a+3)^0,w,c
 28174  0024EE  6E28               	movwf	i2___flmul@aexp^0,c
 28175  0024F0  BE21               	btfsc	(i2___flmul@a+2)^0,7,c
 28176  0024F2  8028               	bsf	i2___flmul@aexp^0,0,c
 28177  0024F4  5028               	movf	i2___flmul@aexp^0,w,c
 28178  0024F6  B4D8               	btfsc	status,2,c
 28179  0024F8  D00D               	goto	i2l10338
 28180  0024FA  2828               	incf	i2___flmul@aexp^0,w,c
 28181  0024FC  A4D8               	btfss	status,2,c
 28182  0024FE  D008               	goto	i2l10336
 28183  002500  0E00               	movlw	0
 28184  002502  6E1F               	movwf	i2___flmul@a^0,c
 28185  002504  0E00               	movlw	0
 28186  002506  6E20               	movwf	(i2___flmul@a+1)^0,c
 28187  002508  0E00               	movlw	0
 28188  00250A  6E21               	movwf	(i2___flmul@a+2)^0,c
 28189  00250C  0E00               	movlw	0
 28190  00250E  6E22               	movwf	(i2___flmul@a+3)^0,c
 28191  002510                     i2l10336:
 28192  002510  8E21               	bsf	(i2___flmul@a+2)^0,7,c
 28193  002512  D008               	goto	i2l2082
 28194  002514                     i2l10338:
 28195  002514  0E00               	movlw	0
 28196  002516  6E1F               	movwf	i2___flmul@a^0,c
 28197  002518  0E00               	movlw	0
 28198  00251A  6E20               	movwf	(i2___flmul@a+1)^0,c
 28199  00251C  0E00               	movlw	0
 28200  00251E  6E21               	movwf	(i2___flmul@a+2)^0,c
 28201  002520  0E00               	movlw	0
 28202  002522  6E22               	movwf	(i2___flmul@a+3)^0,c
 28203  002524                     i2l2082:
 28204  002524  5028               	movf	i2___flmul@aexp^0,w,c
 28205  002526  B4D8               	btfsc	status,2,c
 28206  002528  D003               	goto	i2u1154_40
 28207  00252A  502D               	movf	i2___flmul@bexp^0,w,c
 28208  00252C  A4D8               	btfss	status,2,c
 28209  00252E  D009               	goto	i2l10346
 28210  002530                     i2u1154_40:
 28211  002530  0E00               	movlw	0
 28212  002532  6E1B               	movwf	?i2___flmul^0,c
 28213  002534  0E00               	movlw	0
 28214  002536  6E1C               	movwf	(?i2___flmul+1)^0,c
 28215  002538  0E00               	movlw	0
 28216  00253A  6E1D               	movwf	(?i2___flmul+2)^0,c
 28217  00253C  0E00               	movlw	0
 28218  00253E  6E1E               	movwf	(?i2___flmul+3)^0,c
 28219  002540  0012               	return	
 28220  002542                     i2l10346:
 28221  002542  5021               	movf	(i2___flmul@a+2)^0,w,c
 28222  002544  021B               	mulwf	i2___flmul@b^0,c
 28223  002546  CFF3 F032          	movff	prodl,i2___flmul@temp
 28224  00254A  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28225  00254E  5032               	movf	i2___flmul@temp^0,w,c
 28226  002550  6E29               	movwf	i2___flmul@grs^0,c
 28227  002552  6A2A               	clrf	(i2___flmul@grs+1)^0,c
 28228  002554  6A2B               	clrf	(i2___flmul@grs+2)^0,c
 28229  002556  6A2C               	clrf	(i2___flmul@grs+3)^0,c
 28230  002558  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28231  00255A  6E2E               	movwf	i2___flmul@prod^0,c
 28232  00255C  6A2F               	clrf	(i2___flmul@prod+1)^0,c
 28233  00255E  6A30               	clrf	(i2___flmul@prod+2)^0,c
 28234  002560  6A31               	clrf	(i2___flmul@prod+3)^0,c
 28235  002562  5020               	movf	(i2___flmul@a+1)^0,w,c
 28236  002564  021C               	mulwf	(i2___flmul@b+1)^0,c
 28237  002566  CFF3 F032          	movff	prodl,i2___flmul@temp
 28238  00256A  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28239  00256E  5032               	movf	i2___flmul@temp^0,w,c
 28240  002570  2629               	addwf	i2___flmul@grs^0,f,c
 28241  002572  0E00               	movlw	0
 28242  002574  222A               	addwfc	(i2___flmul@grs+1)^0,f,c
 28243  002576  222B               	addwfc	(i2___flmul@grs+2)^0,f,c
 28244  002578  222C               	addwfc	(i2___flmul@grs+3)^0,f,c
 28245  00257A  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28246  00257C  262E               	addwf	i2___flmul@prod^0,f,c
 28247  00257E  0E00               	movlw	0
 28248  002580  222F               	addwfc	(i2___flmul@prod+1)^0,f,c
 28249  002582  2230               	addwfc	(i2___flmul@prod+2)^0,f,c
 28250  002584  2231               	addwfc	(i2___flmul@prod+3)^0,f,c
 28251  002586  501F               	movf	i2___flmul@a^0,w,c
 28252  002588  021D               	mulwf	(i2___flmul@b+2)^0,c
 28253  00258A  CFF3 F032          	movff	prodl,i2___flmul@temp
 28254  00258E  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28255  002592  5032               	movf	i2___flmul@temp^0,w,c
 28256  002594  2629               	addwf	i2___flmul@grs^0,f,c
 28257  002596  0E00               	movlw	0
 28258  002598  222A               	addwfc	(i2___flmul@grs+1)^0,f,c
 28259  00259A  222B               	addwfc	(i2___flmul@grs+2)^0,f,c
 28260  00259C  222C               	addwfc	(i2___flmul@grs+3)^0,f,c
 28261  00259E  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28262  0025A0  262E               	addwf	i2___flmul@prod^0,f,c
 28263  0025A2  0E00               	movlw	0
 28264  0025A4  222F               	addwfc	(i2___flmul@prod+1)^0,f,c
 28265  0025A6  2230               	addwfc	(i2___flmul@prod+2)^0,f,c
 28266  0025A8  2231               	addwfc	(i2___flmul@prod+3)^0,f,c
 28267  0025AA  C02B  F02C         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 28268  0025AE  C02A  F02B         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 28269  0025B2  C029  F02A         	movff	i2___flmul@grs,i2___flmul@grs+1
 28270  0025B6  6A29               	clrf	i2___flmul@grs^0,c
 28271  0025B8  501F               	movf	i2___flmul@a^0,w,c
 28272  0025BA  021C               	mulwf	(i2___flmul@b+1)^0,c
 28273  0025BC  CFF3 F032          	movff	prodl,i2___flmul@temp
 28274  0025C0  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28275  0025C4  5032               	movf	i2___flmul@temp^0,w,c
 28276  0025C6  2629               	addwf	i2___flmul@grs^0,f,c
 28277  0025C8  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28278  0025CA  222A               	addwfc	(i2___flmul@grs+1)^0,f,c
 28279  0025CC  0E00               	movlw	0
 28280  0025CE  222B               	addwfc	(i2___flmul@grs+2)^0,f,c
 28281  0025D0  0E00               	movlw	0
 28282  0025D2  222C               	addwfc	(i2___flmul@grs+3)^0,f,c
 28283  0025D4  5020               	movf	(i2___flmul@a+1)^0,w,c
 28284  0025D6  021B               	mulwf	i2___flmul@b^0,c
 28285  0025D8  CFF3 F032          	movff	prodl,i2___flmul@temp
 28286  0025DC  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28287  0025E0  5032               	movf	i2___flmul@temp^0,w,c
 28288  0025E2  2629               	addwf	i2___flmul@grs^0,f,c
 28289  0025E4  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28290  0025E6  222A               	addwfc	(i2___flmul@grs+1)^0,f,c
 28291  0025E8  0E00               	movlw	0
 28292  0025EA  222B               	addwfc	(i2___flmul@grs+2)^0,f,c
 28293  0025EC  0E00               	movlw	0
 28294  0025EE  222C               	addwfc	(i2___flmul@grs+3)^0,f,c
 28295  0025F0  C02B  F02C         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 28296  0025F4  C02A  F02B         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 28297  0025F8  C029  F02A         	movff	i2___flmul@grs,i2___flmul@grs+1
 28298  0025FC  6A29               	clrf	i2___flmul@grs^0,c
 28299  0025FE  501F               	movf	i2___flmul@a^0,w,c
 28300  002600  021B               	mulwf	i2___flmul@b^0,c
 28301  002602  CFF3 F032          	movff	prodl,i2___flmul@temp
 28302  002606  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28303  00260A  5032               	movf	i2___flmul@temp^0,w,c
 28304  00260C  2629               	addwf	i2___flmul@grs^0,f,c
 28305  00260E  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28306  002610  222A               	addwfc	(i2___flmul@grs+1)^0,f,c
 28307  002612  0E00               	movlw	0
 28308  002614  222B               	addwfc	(i2___flmul@grs+2)^0,f,c
 28309  002616  0E00               	movlw	0
 28310  002618  222C               	addwfc	(i2___flmul@grs+3)^0,f,c
 28311  00261A  5021               	movf	(i2___flmul@a+2)^0,w,c
 28312  00261C  021C               	mulwf	(i2___flmul@b+1)^0,c
 28313  00261E  CFF3 F032          	movff	prodl,i2___flmul@temp
 28314  002622  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28315  002626  5032               	movf	i2___flmul@temp^0,w,c
 28316  002628  262E               	addwf	i2___flmul@prod^0,f,c
 28317  00262A  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28318  00262C  222F               	addwfc	(i2___flmul@prod+1)^0,f,c
 28319  00262E  0E00               	movlw	0
 28320  002630  2230               	addwfc	(i2___flmul@prod+2)^0,f,c
 28321  002632  0E00               	movlw	0
 28322  002634  2231               	addwfc	(i2___flmul@prod+3)^0,f,c
 28323  002636  5020               	movf	(i2___flmul@a+1)^0,w,c
 28324  002638  021D               	mulwf	(i2___flmul@b+2)^0,c
 28325  00263A  CFF3 F032          	movff	prodl,i2___flmul@temp
 28326  00263E  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28327  002642  5032               	movf	i2___flmul@temp^0,w,c
 28328  002644  262E               	addwf	i2___flmul@prod^0,f,c
 28329  002646  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28330  002648  222F               	addwfc	(i2___flmul@prod+1)^0,f,c
 28331  00264A  0E00               	movlw	0
 28332  00264C  2230               	addwfc	(i2___flmul@prod+2)^0,f,c
 28333  00264E  0E00               	movlw	0
 28334  002650  2231               	addwfc	(i2___flmul@prod+3)^0,f,c
 28335  002652  5021               	movf	(i2___flmul@a+2)^0,w,c
 28336  002654  021D               	mulwf	(i2___flmul@b+2)^0,c
 28337  002656  CFF3 F032          	movff	prodl,i2___flmul@temp
 28338  00265A  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 28339  00265E  5032               	movf	i2___flmul@temp^0,w,c
 28340  002660  6E23               	movwf	??i2___flmul^0,c
 28341  002662  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28342  002664  6E24               	movwf	(??i2___flmul+1)^0,c
 28343  002666  6A25               	clrf	(??i2___flmul+2)^0,c
 28344  002668  6A26               	clrf	(??i2___flmul+3)^0,c
 28345  00266A  C025  F026         	movff	??i2___flmul+2,??i2___flmul+3
 28346  00266E  C024  F025         	movff	??i2___flmul+1,??i2___flmul+2
 28347  002672  C023  F024         	movff	??i2___flmul,??i2___flmul+1
 28348  002676  6A23               	clrf	??i2___flmul^0,c
 28349  002678  5023               	movf	??i2___flmul^0,w,c
 28350  00267A  262E               	addwf	i2___flmul@prod^0,f,c
 28351  00267C  5024               	movf	(??i2___flmul+1)^0,w,c
 28352  00267E  222F               	addwfc	(i2___flmul@prod+1)^0,f,c
 28353  002680  5025               	movf	(??i2___flmul+2)^0,w,c
 28354  002682  2230               	addwfc	(i2___flmul@prod+2)^0,f,c
 28355  002684  5026               	movf	(??i2___flmul+3)^0,w,c
 28356  002686  2231               	addwfc	(i2___flmul@prod+3)^0,f,c
 28357  002688  502C               	movf	(i2___flmul@grs+3)^0,w,c
 28358  00268A  262E               	addwf	i2___flmul@prod^0,f,c
 28359  00268C  0E00               	movlw	0
 28360  00268E  222F               	addwfc	(i2___flmul@prod+1)^0,f,c
 28361  002690  2230               	addwfc	(i2___flmul@prod+2)^0,f,c
 28362  002692  2231               	addwfc	(i2___flmul@prod+3)^0,f,c
 28363  002694  C02B  F02C         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 28364  002698  C02A  F02B         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 28365  00269C  C029  F02A         	movff	i2___flmul@grs,i2___flmul@grs+1
 28366  0026A0  6A29               	clrf	i2___flmul@grs^0,c
 28367  0026A2  5028               	movf	i2___flmul@aexp^0,w,c
 28368  0026A4  C02D  F023         	movff	i2___flmul@bexp,??i2___flmul
 28369  0026A8  6A24               	clrf	(??i2___flmul+1)^0,c
 28370  0026AA  2623               	addwf	??i2___flmul^0,f,c
 28371  0026AC  0E00               	movlw	0
 28372  0026AE  2224               	addwfc	(??i2___flmul+1)^0,f,c
 28373  0026B0  0E82               	movlw	130
 28374  0026B2  2423               	addwf	??i2___flmul^0,w,c
 28375  0026B4  6E32               	movwf	i2___flmul@temp^0,c
 28376  0026B6  0EFF               	movlw	255
 28377  0026B8  2024               	addwfc	(??i2___flmul+1)^0,w,c
 28378  0026BA  6E33               	movwf	(i2___flmul@temp+1)^0,c
 28379  0026BC  D00F               	goto	i2l10394
 28380  0026BE                     i2l10388:
 28381  0026BE  90D8               	bcf	status,0,c
 28382  0026C0  362E               	rlcf	i2___flmul@prod^0,f,c
 28383  0026C2  362F               	rlcf	(i2___flmul@prod+1)^0,f,c
 28384  0026C4  3630               	rlcf	(i2___flmul@prod+2)^0,f,c
 28385  0026C6  3631               	rlcf	(i2___flmul@prod+3)^0,f,c
 28386  0026C8  BE2C               	btfsc	(i2___flmul@grs+3)^0,7,c
 28387  0026CA  802E               	bsf	i2___flmul@prod^0,0,c
 28388  0026CC  90D8               	bcf	status,0,c
 28389  0026CE  3629               	rlcf	i2___flmul@grs^0,f,c
 28390  0026D0  362A               	rlcf	(i2___flmul@grs+1)^0,f,c
 28391  0026D2  362B               	rlcf	(i2___flmul@grs+2)^0,f,c
 28392  0026D4  362C               	rlcf	(i2___flmul@grs+3)^0,f,c
 28393  0026D6  0632               	decf	i2___flmul@temp^0,f,c
 28394  0026D8  A0D8               	btfss	status,0,c
 28395  0026DA  0633               	decf	(i2___flmul@temp+1)^0,f,c
 28396  0026DC                     i2l10394:
 28397  0026DC  AE30               	btfss	(i2___flmul@prod+2)^0,7,c
 28398  0026DE  D7EF               	goto	i2l10388
 28399  0026E0  0E00               	movlw	0
 28400  0026E2  6E28               	movwf	i2___flmul@aexp^0,c
 28401  0026E4  AE2C               	btfss	(i2___flmul@grs+3)^0,7,c
 28402  0026E6  D017               	goto	i2l2091
 28403  0026E8  0EFF               	movlw	255
 28404  0026EA  1429               	andwf	i2___flmul@grs^0,w,c
 28405  0026EC  6E23               	movwf	??i2___flmul^0,c
 28406  0026EE  0EFF               	movlw	255
 28407  0026F0  142A               	andwf	(i2___flmul@grs+1)^0,w,c
 28408  0026F2  6E24               	movwf	(??i2___flmul+1)^0,c
 28409  0026F4  0EFF               	movlw	255
 28410  0026F6  142B               	andwf	(i2___flmul@grs+2)^0,w,c
 28411  0026F8  6E25               	movwf	(??i2___flmul+2)^0,c
 28412  0026FA  0E7F               	movlw	127
 28413  0026FC  142C               	andwf	(i2___flmul@grs+3)^0,w,c
 28414  0026FE  6E26               	movwf	(??i2___flmul+3)^0,c
 28415  002700  5023               	movf	??i2___flmul^0,w,c
 28416  002702  1024               	iorwf	(??i2___flmul+1)^0,w,c
 28417  002704  1025               	iorwf	(??i2___flmul+2)^0,w,c
 28418  002706  1026               	iorwf	(??i2___flmul+3)^0,w,c
 28419  002708  B4D8               	btfsc	status,2,c
 28420  00270A  D003               	goto	i2l2092
 28421  00270C                     i2u1158_40:
 28422  00270C  0E01               	movlw	1
 28423  00270E  6E28               	movwf	i2___flmul@aexp^0,c
 28424  002710  D002               	goto	i2l2091
 28425  002712                     i2l2092:
 28426  002712  B02E               	btfsc	i2___flmul@prod^0,0,c
 28427  002714  D7FB               	goto	i2u1158_40
 28428  002716                     i2l2091:
 28429  002716  5028               	movf	i2___flmul@aexp^0,w,c
 28430  002718  B4D8               	btfsc	status,2,c
 28431  00271A  D01F               	goto	i2l10414
 28432  00271C  0E01               	movlw	1
 28433  00271E  262E               	addwf	i2___flmul@prod^0,f,c
 28434  002720  0E00               	movlw	0
 28435  002722  222F               	addwfc	(i2___flmul@prod+1)^0,f,c
 28436  002724  2230               	addwfc	(i2___flmul@prod+2)^0,f,c
 28437  002726  2231               	addwfc	(i2___flmul@prod+3)^0,f,c
 28438  002728  A031               	btfss	(i2___flmul@prod+3)^0,0,c
 28439  00272A  D017               	goto	i2l10414
 28440  00272C  C02E  F023         	movff	i2___flmul@prod,??i2___flmul
 28441  002730  C02F  F024         	movff	i2___flmul@prod+1,??i2___flmul+1
 28442  002734  C030  F025         	movff	i2___flmul@prod+2,??i2___flmul+2
 28443  002738  C031  F026         	movff	i2___flmul@prod+3,??i2___flmul+3
 28444  00273C  3426               	rlcf	(??i2___flmul+3)^0,w,c
 28445  00273E  3226               	rrcf	(??i2___flmul+3)^0,f,c
 28446  002740  3225               	rrcf	(??i2___flmul+2)^0,f,c
 28447  002742  3224               	rrcf	(??i2___flmul+1)^0,f,c
 28448  002744  3223               	rrcf	??i2___flmul^0,f,c
 28449  002746  C023  F02E         	movff	??i2___flmul,i2___flmul@prod
 28450  00274A  C024  F02F         	movff	??i2___flmul+1,i2___flmul@prod+1
 28451  00274E  C025  F030         	movff	??i2___flmul+2,i2___flmul@prod+2
 28452  002752  C026  F031         	movff	??i2___flmul+3,i2___flmul@prod+3
 28453  002756  4A32               	infsnz	i2___flmul@temp^0,f,c
 28454  002758  2A33               	incf	(i2___flmul@temp+1)^0,f,c
 28455  00275A                     i2l10414:
 28456  00275A  BE33               	btfsc	(i2___flmul@temp+1)^0,7,c
 28457  00275C  D00D               	goto	i2l10418
 28458  00275E  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28459  002760  E103               	bnz	i2u1162_40
 28460  002762  2832               	incf	i2___flmul@temp^0,w,c
 28461  002764  A0D8               	btfss	status,0,c
 28462  002766  D008               	goto	i2l10418
 28463  002768                     i2u1162_40:
 28464  002768  0E00               	movlw	0
 28465  00276A  6E2E               	movwf	i2___flmul@prod^0,c
 28466  00276C  0E00               	movlw	0
 28467  00276E  6E2F               	movwf	(i2___flmul@prod+1)^0,c
 28468  002770  0E80               	movlw	128
 28469  002772  6E30               	movwf	(i2___flmul@prod+2)^0,c
 28470  002774  0E7F               	movlw	127
 28471  002776  D020               	goto	L38
 28472  002778                     i2l10418:
 28473  002778  BE33               	btfsc	(i2___flmul@temp+1)^0,7,c
 28474  00277A  D005               	goto	i2u1163_40
 28475  00277C  5033               	movf	(i2___flmul@temp+1)^0,w,c
 28476  00277E  E10E               	bnz	i2l2099
 28477  002780  0432               	decf	i2___flmul@temp^0,w,c
 28478  002782  B0D8               	btfsc	status,0,c
 28479  002784  D00B               	goto	i2l2099
 28480  002786                     i2u1163_40:
 28481  002786  0E00               	movlw	0
 28482  002788  6E2E               	movwf	i2___flmul@prod^0,c
 28483  00278A  0E00               	movlw	0
 28484  00278C  6E2F               	movwf	(i2___flmul@prod+1)^0,c
 28485  00278E  0E00               	movlw	0
 28486  002790  6E30               	movwf	(i2___flmul@prod+2)^0,c
 28487  002792  0E00               	movlw	0
 28488  002794  6E31               	movwf	(i2___flmul@prod+3)^0,c
 28489  002796  0E00               	movlw	0
 28490  002798  6E27               	movwf	i2___flmul@sign^0,c
 28491  00279A  D00F               	goto	i2l10430
 28492  00279C                     i2l2099:
 28493  00279C  C032  F02D         	movff	i2___flmul@temp,i2___flmul@bexp
 28494  0027A0  0EFF               	movlw	255
 28495  0027A2  162E               	andwf	i2___flmul@prod^0,f,c
 28496  0027A4  0EFF               	movlw	255
 28497  0027A6  162F               	andwf	(i2___flmul@prod+1)^0,f,c
 28498  0027A8  0E7F               	movlw	127
 28499  0027AA  1630               	andwf	(i2___flmul@prod+2)^0,f,c
 28500  0027AC  0E00               	movlw	0
 28501  0027AE  1631               	andwf	(i2___flmul@prod+3)^0,f,c
 28502  0027B0  B02D               	btfsc	i2___flmul@bexp^0,0,c
 28503  0027B2  8E30               	bsf	(i2___flmul@prod+2)^0,7,c
 28504  0027B4  90D8               	bcf	status,0,c
 28505  0027B6  302D               	rrcf	i2___flmul@bexp^0,w,c
 28506  0027B8                     L38:
 28507  0027B8  6E31               	movwf	(i2___flmul@prod+3)^0,c
 28508  0027BA                     i2l10430:
 28509  0027BA  5027               	movf	i2___flmul@sign^0,w,c
 28510  0027BC  1231               	iorwf	(i2___flmul@prod+3)^0,f,c
 28511  0027BE  C02E  F01B         	movff	i2___flmul@prod,?i2___flmul
 28512  0027C2  C02F  F01C         	movff	i2___flmul@prod+1,?i2___flmul+1
 28513  0027C6  C030  F01D         	movff	i2___flmul@prod+2,?i2___flmul+2
 28514  0027CA  C031  F01E         	movff	i2___flmul@prod+3,?i2___flmul+3
 28515  0027CE  0012               	return		;funcret
 28516  0027D0                     __end_ofi2___flmul:
 28517                           	callstack 0
 28518                           
 28519 ;; *************** function i2___flge *****************
 28520 ;; Defined at:
 28521 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 28522 ;; Parameters:    Size  Location     Type
 28523 ;;  ff1             4    0[COMRAM] unsigned char 
 28524 ;;  ff2             4    4[COMRAM] unsigned char 
 28525 ;; Auto vars:     Size  Location     Type
 28526 ;;		None
 28527 ;; Return value:  Size  Location     Type
 28528 ;;		None               void
 28529 ;; Registers used:
 28530 ;;		wreg, status,2, status,0
 28531 ;; Tracked objects:
 28532 ;;		On entry : 0/0
 28533 ;;		On exit  : 0/0
 28534 ;;		Unchanged: 0/0
 28535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28536 ;;      Params:         8       0       0       0       0       0       0       0       0
 28537 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28538 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28539 ;;      Totals:        12       0       0       0       0       0       0       0       0
 28540 ;;Total ram usage:       12 bytes
 28541 ;; Hardware stack levels used: 1
 28542 ;; This function calls:
 28543 ;;		Nothing
 28544 ;; This function is called by:
 28545 ;;		_Encoder_ISR
 28546 ;; This function uses a non-reentrant model
 28547 ;;
 28548                           
 28549                           	psect	text154
 28550  006116                     __ptext154:
 28551                           	callstack 0
 28552  006116                     i2___flge:
 28553                           	callstack 17
 28554                           
 28555                           ;incstack = 0
 28556  006116  0E00               	movlw	0
 28557  006118  1401               	andwf	i2___flge@ff1^0,w,c
 28558  00611A  6E09               	movwf	??i2___flge^0,c
 28559  00611C  0E00               	movlw	0
 28560  00611E  1402               	andwf	(i2___flge@ff1+1)^0,w,c
 28561  006120  6E0A               	movwf	(??i2___flge+1)^0,c
 28562  006122  0E80               	movlw	128
 28563  006124  1403               	andwf	(i2___flge@ff1+2)^0,w,c
 28564  006126  6E0B               	movwf	(??i2___flge+2)^0,c
 28565  006128  0E7F               	movlw	127
 28566  00612A  1404               	andwf	(i2___flge@ff1+3)^0,w,c
 28567  00612C  6E0C               	movwf	(??i2___flge+3)^0,c
 28568  00612E  5009               	movf	??i2___flge^0,w,c
 28569  006130  100A               	iorwf	(??i2___flge+1)^0,w,c
 28570  006132  100B               	iorwf	(??i2___flge+2)^0,w,c
 28571  006134  100C               	iorwf	(??i2___flge+3)^0,w,c
 28572  006136  A4D8               	btfss	status,2,c
 28573  006138  D008               	goto	i2l10144
 28574  00613A  0E00               	movlw	0
 28575  00613C  6E01               	movwf	i2___flge@ff1^0,c
 28576  00613E  0E00               	movlw	0
 28577  006140  6E02               	movwf	(i2___flge@ff1+1)^0,c
 28578  006142  0E00               	movlw	0
 28579  006144  6E03               	movwf	(i2___flge@ff1+2)^0,c
 28580  006146  0E00               	movlw	0
 28581  006148  6E04               	movwf	(i2___flge@ff1+3)^0,c
 28582  00614A                     i2l10144:
 28583  00614A  0E00               	movlw	0
 28584  00614C  1405               	andwf	i2___flge@ff2^0,w,c
 28585  00614E  6E09               	movwf	??i2___flge^0,c
 28586  006150  0E00               	movlw	0
 28587  006152  1406               	andwf	(i2___flge@ff2+1)^0,w,c
 28588  006154  6E0A               	movwf	(??i2___flge+1)^0,c
 28589  006156  0E80               	movlw	128
 28590  006158  1407               	andwf	(i2___flge@ff2+2)^0,w,c
 28591  00615A  6E0B               	movwf	(??i2___flge+2)^0,c
 28592  00615C  0E7F               	movlw	127
 28593  00615E  1408               	andwf	(i2___flge@ff2+3)^0,w,c
 28594  006160  6E0C               	movwf	(??i2___flge+3)^0,c
 28595  006162  5009               	movf	??i2___flge^0,w,c
 28596  006164  100A               	iorwf	(??i2___flge+1)^0,w,c
 28597  006166  100B               	iorwf	(??i2___flge+2)^0,w,c
 28598  006168  100C               	iorwf	(??i2___flge+3)^0,w,c
 28599  00616A  A4D8               	btfss	status,2,c
 28600  00616C  D008               	goto	i2l10148
 28601  00616E  0E00               	movlw	0
 28602  006170  6E05               	movwf	i2___flge@ff2^0,c
 28603  006172  0E00               	movlw	0
 28604  006174  6E06               	movwf	(i2___flge@ff2+1)^0,c
 28605  006176  0E00               	movlw	0
 28606  006178  6E07               	movwf	(i2___flge@ff2+2)^0,c
 28607  00617A  0E00               	movlw	0
 28608  00617C  6E08               	movwf	(i2___flge@ff2+3)^0,c
 28609  00617E                     i2l10148:
 28610  00617E  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
 28611  006180  D009               	goto	i2l10152
 28612  006182  6C01               	negf	i2___flge@ff1^0,c
 28613  006184  1E02               	comf	(i2___flge@ff1+1)^0,f,c
 28614  006186  B0D8               	btfsc	status,0,c
 28615  006188  2A02               	incf	(i2___flge@ff1+1)^0,f,c
 28616  00618A  1E03               	comf	(i2___flge@ff1+2)^0,f,c
 28617  00618C  B0D8               	btfsc	status,0,c
 28618  00618E  2A03               	incf	(i2___flge@ff1+2)^0,f,c
 28619  006190  0E80               	movlw	128
 28620  006192  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
 28621  006194                     i2l10152:
 28622  006194  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
 28623  006196  D009               	goto	i2l1733
 28624  006198  6C05               	negf	i2___flge@ff2^0,c
 28625  00619A  1E06               	comf	(i2___flge@ff2+1)^0,f,c
 28626  00619C  B0D8               	btfsc	status,0,c
 28627  00619E  2A06               	incf	(i2___flge@ff2+1)^0,f,c
 28628  0061A0  1E07               	comf	(i2___flge@ff2+2)^0,f,c
 28629  0061A2  B0D8               	btfsc	status,0,c
 28630  0061A4  2A07               	incf	(i2___flge@ff2+2)^0,f,c
 28631  0061A6  0E80               	movlw	128
 28632  0061A8  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
 28633  0061AA                     i2l1733:
 28634  0061AA  0E00               	movlw	0
 28635  0061AC  1A01               	xorwf	i2___flge@ff1^0,f,c
 28636  0061AE  0E00               	movlw	0
 28637  0061B0  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
 28638  0061B2  0E00               	movlw	0
 28639  0061B4  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
 28640  0061B6  0E80               	movlw	128
 28641  0061B8  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
 28642  0061BA  0E00               	movlw	0
 28643  0061BC  1A05               	xorwf	i2___flge@ff2^0,f,c
 28644  0061BE  0E00               	movlw	0
 28645  0061C0  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
 28646  0061C2  0E00               	movlw	0
 28647  0061C4  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
 28648  0061C6  0E80               	movlw	128
 28649  0061C8  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
 28650  0061CA  5005               	movf	i2___flge@ff2^0,w,c
 28651  0061CC  5C01               	subwf	i2___flge@ff1^0,w,c
 28652  0061CE  5006               	movf	(i2___flge@ff2+1)^0,w,c
 28653  0061D0  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
 28654  0061D2  5007               	movf	(i2___flge@ff2+2)^0,w,c
 28655  0061D4  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
 28656  0061D6  5008               	movf	(i2___flge@ff2+3)^0,w,c
 28657  0061D8  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
 28658  0061DA  B0D8               	btfsc	status,0,c
 28659  0061DC  D002               	goto	i2l10158
 28660  0061DE  90D8               	bcf	status,0,c
 28661  0061E0  0012               	return	
 28662  0061E2                     i2l10158:
 28663  0061E2  80D8               	bsf	status,0,c
 28664  0061E4  0012               	return		;funcret
 28665  0061E6                     __end_ofi2___flge:
 28666                           	callstack 0
 28667                           
 28668 ;; *************** function i2___fldiv *****************
 28669 ;; Defined at:
 28670 ;;		line 11 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 28671 ;; Parameters:    Size  Location     Type
 28672 ;;  b               4   51[COMRAM] unsigned char 
 28673 ;;  a               4   55[COMRAM] unsigned char 
 28674 ;; Auto vars:     Size  Location     Type
 28675 ;;  grs             4   70[COMRAM] unsigned long 
 28676 ;;  rem             4   63[COMRAM] unsigned long 
 28677 ;;  new_exp         2   68[COMRAM] short 
 28678 ;;  aexp            1   75[COMRAM] unsigned char 
 28679 ;;  bexp            1   74[COMRAM] unsigned char 
 28680 ;;  sign            1   67[COMRAM] unsigned char 
 28681 ;; Return value:  Size  Location     Type
 28682 ;;                  4   51[COMRAM] unsigned char 
 28683 ;; Registers used:
 28684 ;;		wreg, status,2, status,0
 28685 ;; Tracked objects:
 28686 ;;		On entry : 0/1
 28687 ;;		On exit  : 0/0
 28688 ;;		Unchanged: 0/0
 28689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28690 ;;      Params:         8       0       0       0       0       0       0       0       0
 28691 ;;      Locals:        13       0       0       0       0       0       0       0       0
 28692 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28693 ;;      Totals:        25       0       0       0       0       0       0       0       0
 28694 ;;Total ram usage:       25 bytes
 28695 ;; Hardware stack levels used: 1
 28696 ;; This function calls:
 28697 ;;		Nothing
 28698 ;; This function is called by:
 28699 ;;		_G01_TMR2_ISR
 28700 ;;		_Encoder_ISR
 28701 ;; This function uses a non-reentrant model
 28702 ;;
 28703                           
 28704                           	psect	text155
 28705  0035C8                     __ptext155:
 28706                           	callstack 0
 28707  0035C8                     i2___fldiv:
 28708                           	callstack 18
 28709                           
 28710                           ;incstack = 0
 28711  0035C8  5037               	movf	(i2___fldiv@b+3)^0,w,c
 28712  0035CA  0B80               	andlw	128
 28713  0035CC  6E44               	movwf	i2___fldiv@sign^0,c
 28714  0035CE  5037               	movf	(i2___fldiv@b+3)^0,w,c
 28715  0035D0  2437               	addwf	(i2___fldiv@b+3)^0,w,c
 28716  0035D2  6E4B               	movwf	i2___fldiv@bexp^0,c
 28717  0035D4  BE36               	btfsc	(i2___fldiv@b+2)^0,7,c
 28718  0035D6  804B               	bsf	i2___fldiv@bexp^0,0,c
 28719  0035D8  504B               	movf	i2___fldiv@bexp^0,w,c
 28720  0035DA  B4D8               	btfsc	status,2,c
 28721  0035DC  D00D               	goto	i2l10184
 28722  0035DE  284B               	incf	i2___fldiv@bexp^0,w,c
 28723  0035E0  A4D8               	btfss	status,2,c
 28724  0035E2  D008               	goto	i2l10180
 28725  0035E4  0E00               	movlw	0
 28726  0035E6  6E34               	movwf	i2___fldiv@b^0,c
 28727  0035E8  0E00               	movlw	0
 28728  0035EA  6E35               	movwf	(i2___fldiv@b+1)^0,c
 28729  0035EC  0E00               	movlw	0
 28730  0035EE  6E36               	movwf	(i2___fldiv@b+2)^0,c
 28731  0035F0  0E00               	movlw	0
 28732  0035F2  6E37               	movwf	(i2___fldiv@b+3)^0,c
 28733  0035F4                     i2l10180:
 28734  0035F4  8E36               	bsf	(i2___fldiv@b+2)^0,7,c
 28735  0035F6  D006               	goto	L39
 28736  0035F8                     i2l10184:
 28737  0035F8  0E00               	movlw	0
 28738  0035FA  6E34               	movwf	i2___fldiv@b^0,c
 28739  0035FC  0E00               	movlw	0
 28740  0035FE  6E35               	movwf	(i2___fldiv@b+1)^0,c
 28741  003600  0E00               	movlw	0
 28742  003602  6E36               	movwf	(i2___fldiv@b+2)^0,c
 28743  003604                     L39:
 28744  003604  0E00               	movlw	0
 28745  003606  6E37               	movwf	(i2___fldiv@b+3)^0,c
 28746  003608  503B               	movf	(i2___fldiv@a+3)^0,w,c
 28747  00360A  0B80               	andlw	128
 28748  00360C  1A44               	xorwf	i2___fldiv@sign^0,f,c
 28749  00360E  503B               	movf	(i2___fldiv@a+3)^0,w,c
 28750  003610  243B               	addwf	(i2___fldiv@a+3)^0,w,c
 28751  003612  6E4C               	movwf	i2___fldiv@aexp^0,c
 28752  003614  BE3A               	btfsc	(i2___fldiv@a+2)^0,7,c
 28753  003616  804C               	bsf	i2___fldiv@aexp^0,0,c
 28754  003618  504C               	movf	i2___fldiv@aexp^0,w,c
 28755  00361A  B4D8               	btfsc	status,2,c
 28756  00361C  D00D               	goto	i2l10204
 28757  00361E  284C               	incf	i2___fldiv@aexp^0,w,c
 28758  003620  A4D8               	btfss	status,2,c
 28759  003622  D008               	goto	i2l10200
 28760  003624  0E00               	movlw	0
 28761  003626  6E38               	movwf	i2___fldiv@a^0,c
 28762  003628  0E00               	movlw	0
 28763  00362A  6E39               	movwf	(i2___fldiv@a+1)^0,c
 28764  00362C  0E00               	movlw	0
 28765  00362E  6E3A               	movwf	(i2___fldiv@a+2)^0,c
 28766  003630  0E00               	movlw	0
 28767  003632  6E3B               	movwf	(i2___fldiv@a+3)^0,c
 28768  003634                     i2l10200:
 28769  003634  8E3A               	bsf	(i2___fldiv@a+2)^0,7,c
 28770  003636  D006               	goto	L40
 28771  003638                     i2l10204:
 28772  003638  0E00               	movlw	0
 28773  00363A  6E38               	movwf	i2___fldiv@a^0,c
 28774  00363C  0E00               	movlw	0
 28775  00363E  6E39               	movwf	(i2___fldiv@a+1)^0,c
 28776  003640  0E00               	movlw	0
 28777  003642  6E3A               	movwf	(i2___fldiv@a+2)^0,c
 28778  003644                     L40:
 28779  003644  0E00               	movlw	0
 28780  003646  6E3B               	movwf	(i2___fldiv@a+3)^0,c
 28781  003648  5038               	movf	i2___fldiv@a^0,w,c
 28782  00364A  1039               	iorwf	(i2___fldiv@a+1)^0,w,c
 28783  00364C  103A               	iorwf	(i2___fldiv@a+2)^0,w,c
 28784  00364E  103B               	iorwf	(i2___fldiv@a+3)^0,w,c
 28785  003650  A4D8               	btfss	status,2,c
 28786  003652  D017               	goto	i2l10218
 28787  003654  0E00               	movlw	0
 28788  003656  6E34               	movwf	i2___fldiv@b^0,c
 28789  003658  0E00               	movlw	0
 28790  00365A  6E35               	movwf	(i2___fldiv@b+1)^0,c
 28791  00365C  0E00               	movlw	0
 28792  00365E  6E36               	movwf	(i2___fldiv@b+2)^0,c
 28793  003660  0E00               	movlw	0
 28794  003662  6E37               	movwf	(i2___fldiv@b+3)^0,c
 28795  003664  0E80               	movlw	128
 28796  003666  1236               	iorwf	(i2___fldiv@b+2)^0,f,c
 28797  003668  0E7F               	movlw	127
 28798  00366A  1237               	iorwf	(i2___fldiv@b+3)^0,f,c
 28799  00366C                     i2l10212:
 28800  00366C  5044               	movf	i2___fldiv@sign^0,w,c
 28801  00366E  1237               	iorwf	(i2___fldiv@b+3)^0,f,c
 28802  003670  C034  F034         	movff	i2___fldiv@b,?i2___fldiv
 28803  003674  C035  F035         	movff	i2___fldiv@b+1,?i2___fldiv+1
 28804  003678  C036  F036         	movff	i2___fldiv@b+2,?i2___fldiv+2
 28805  00367C  C037  F037         	movff	i2___fldiv@b+3,?i2___fldiv+3
 28806  003680  0012               	return	
 28807  003682                     i2l10218:
 28808  003682  504B               	movf	i2___fldiv@bexp^0,w,c
 28809  003684  A4D8               	btfss	status,2,c
 28810  003686  D009               	goto	i2l10226
 28811  003688  0E00               	movlw	0
 28812  00368A  6E34               	movwf	?i2___fldiv^0,c
 28813  00368C  0E00               	movlw	0
 28814  00368E  6E35               	movwf	(?i2___fldiv+1)^0,c
 28815  003690  0E00               	movlw	0
 28816  003692  6E36               	movwf	(?i2___fldiv+2)^0,c
 28817  003694  0E00               	movlw	0
 28818  003696  6E37               	movwf	(?i2___fldiv+3)^0,c
 28819  003698  0012               	return	
 28820  00369A                     i2l10226:
 28821  00369A  504C               	movf	i2___fldiv@aexp^0,w,c
 28822  00369C  C04B  F03C         	movff	i2___fldiv@bexp,??i2___fldiv
 28823  0036A0  6A3D               	clrf	(??i2___fldiv+1)^0,c
 28824  0036A2  5E3C               	subwf	??i2___fldiv^0,f,c
 28825  0036A4  0E00               	movlw	0
 28826  0036A6  5A3D               	subwfb	(??i2___fldiv+1)^0,f,c
 28827  0036A8  0E7F               	movlw	127
 28828  0036AA  243C               	addwf	??i2___fldiv^0,w,c
 28829  0036AC  6E45               	movwf	i2___fldiv@new_exp^0,c
 28830  0036AE  0E00               	movlw	0
 28831  0036B0  203D               	addwfc	(??i2___fldiv+1)^0,w,c
 28832  0036B2  6E46               	movwf	(i2___fldiv@new_exp+1)^0,c
 28833  0036B4  C034  F040         	movff	i2___fldiv@b,i2___fldiv@rem
 28834  0036B8  C035  F041         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 28835  0036BC  C036  F042         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 28836  0036C0  C037  F043         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 28837  0036C4  0E00               	movlw	0
 28838  0036C6  6E34               	movwf	i2___fldiv@b^0,c
 28839  0036C8  0E00               	movlw	0
 28840  0036CA  6E35               	movwf	(i2___fldiv@b+1)^0,c
 28841  0036CC  0E00               	movlw	0
 28842  0036CE  6E36               	movwf	(i2___fldiv@b+2)^0,c
 28843  0036D0  0E00               	movlw	0
 28844  0036D2  6E37               	movwf	(i2___fldiv@b+3)^0,c
 28845  0036D4  0E00               	movlw	0
 28846  0036D6  6E47               	movwf	i2___fldiv@grs^0,c
 28847  0036D8  0E00               	movlw	0
 28848  0036DA  6E48               	movwf	(i2___fldiv@grs+1)^0,c
 28849  0036DC  0E00               	movlw	0
 28850  0036DE  6E49               	movwf	(i2___fldiv@grs+2)^0,c
 28851  0036E0  0E00               	movlw	0
 28852  0036E2  6E4A               	movwf	(i2___fldiv@grs+3)^0,c
 28853  0036E4  0E00               	movlw	0
 28854  0036E6  6E4C               	movwf	i2___fldiv@aexp^0,c
 28855  0036E8  D028               	goto	i2l2052
 28856  0036EA                     i2l10236:
 28857  0036EA  504C               	movf	i2___fldiv@aexp^0,w,c
 28858  0036EC  B4D8               	btfsc	status,2,c
 28859  0036EE  D011               	goto	i2l10244
 28860  0036F0  90D8               	bcf	status,0,c
 28861  0036F2  3640               	rlcf	i2___fldiv@rem^0,f,c
 28862  0036F4  3641               	rlcf	(i2___fldiv@rem+1)^0,f,c
 28863  0036F6  3642               	rlcf	(i2___fldiv@rem+2)^0,f,c
 28864  0036F8  3643               	rlcf	(i2___fldiv@rem+3)^0,f,c
 28865  0036FA  90D8               	bcf	status,0,c
 28866  0036FC  3634               	rlcf	i2___fldiv@b^0,f,c
 28867  0036FE  3635               	rlcf	(i2___fldiv@b+1)^0,f,c
 28868  003700  3636               	rlcf	(i2___fldiv@b+2)^0,f,c
 28869  003702  3637               	rlcf	(i2___fldiv@b+3)^0,f,c
 28870  003704  BE4A               	btfsc	(i2___fldiv@grs+3)^0,7,c
 28871  003706  8034               	bsf	i2___fldiv@b^0,0,c
 28872  003708  90D8               	bcf	status,0,c
 28873  00370A  3647               	rlcf	i2___fldiv@grs^0,f,c
 28874  00370C  3648               	rlcf	(i2___fldiv@grs+1)^0,f,c
 28875  00370E  3649               	rlcf	(i2___fldiv@grs+2)^0,f,c
 28876  003710  364A               	rlcf	(i2___fldiv@grs+3)^0,f,c
 28877  003712                     i2l10244:
 28878  003712  5038               	movf	i2___fldiv@a^0,w,c
 28879  003714  5C40               	subwf	i2___fldiv@rem^0,w,c
 28880  003716  5039               	movf	(i2___fldiv@a+1)^0,w,c
 28881  003718  5841               	subwfb	(i2___fldiv@rem+1)^0,w,c
 28882  00371A  503A               	movf	(i2___fldiv@a+2)^0,w,c
 28883  00371C  5842               	subwfb	(i2___fldiv@rem+2)^0,w,c
 28884  00371E  503B               	movf	(i2___fldiv@a+3)^0,w,c
 28885  003720  5843               	subwfb	(i2___fldiv@rem+3)^0,w,c
 28886  003722  A0D8               	btfss	status,0,c
 28887  003724  D009               	goto	i2l10250
 28888  003726  8C4A               	bsf	(i2___fldiv@grs+3)^0,6,c
 28889  003728  5038               	movf	i2___fldiv@a^0,w,c
 28890  00372A  5E40               	subwf	i2___fldiv@rem^0,f,c
 28891  00372C  5039               	movf	(i2___fldiv@a+1)^0,w,c
 28892  00372E  5A41               	subwfb	(i2___fldiv@rem+1)^0,f,c
 28893  003730  503A               	movf	(i2___fldiv@a+2)^0,w,c
 28894  003732  5A42               	subwfb	(i2___fldiv@rem+2)^0,f,c
 28895  003734  503B               	movf	(i2___fldiv@a+3)^0,w,c
 28896  003736  5A43               	subwfb	(i2___fldiv@rem+3)^0,f,c
 28897  003738                     i2l10250:
 28898  003738  2A4C               	incf	i2___fldiv@aexp^0,f,c
 28899  00373A                     i2l2052:
 28900  00373A  0E19               	movlw	25
 28901  00373C  644C               	cpfsgt	i2___fldiv@aexp^0,c
 28902  00373E  D7D5               	goto	i2l10236
 28903  003740  5040               	movf	i2___fldiv@rem^0,w,c
 28904  003742  1041               	iorwf	(i2___fldiv@rem+1)^0,w,c
 28905  003744  1042               	iorwf	(i2___fldiv@rem+2)^0,w,c
 28906  003746  1043               	iorwf	(i2___fldiv@rem+3)^0,w,c
 28907  003748  B4D8               	btfsc	status,2,c
 28908  00374A  D011               	goto	i2l10262
 28909  00374C  8047               	bsf	i2___fldiv@grs^0,0,c
 28910  00374E  D00F               	goto	i2l10262
 28911  003750                     i2l10256:
 28912  003750  90D8               	bcf	status,0,c
 28913  003752  3634               	rlcf	i2___fldiv@b^0,f,c
 28914  003754  3635               	rlcf	(i2___fldiv@b+1)^0,f,c
 28915  003756  3636               	rlcf	(i2___fldiv@b+2)^0,f,c
 28916  003758  3637               	rlcf	(i2___fldiv@b+3)^0,f,c
 28917  00375A  BE4A               	btfsc	(i2___fldiv@grs+3)^0,7,c
 28918  00375C  8034               	bsf	i2___fldiv@b^0,0,c
 28919  00375E  90D8               	bcf	status,0,c
 28920  003760  3647               	rlcf	i2___fldiv@grs^0,f,c
 28921  003762  3648               	rlcf	(i2___fldiv@grs+1)^0,f,c
 28922  003764  3649               	rlcf	(i2___fldiv@grs+2)^0,f,c
 28923  003766  364A               	rlcf	(i2___fldiv@grs+3)^0,f,c
 28924  003768  0645               	decf	i2___fldiv@new_exp^0,f,c
 28925  00376A  A0D8               	btfss	status,0,c
 28926  00376C  0646               	decf	(i2___fldiv@new_exp+1)^0,f,c
 28927  00376E                     i2l10262:
 28928  00376E  AE36               	btfss	(i2___fldiv@b+2)^0,7,c
 28929  003770  D7EF               	goto	i2l10256
 28930  003772  0E00               	movlw	0
 28931  003774  6E4C               	movwf	i2___fldiv@aexp^0,c
 28932  003776  AE4A               	btfss	(i2___fldiv@grs+3)^0,7,c
 28933  003778  D017               	goto	i2l2063
 28934  00377A  0EFF               	movlw	255
 28935  00377C  1447               	andwf	i2___fldiv@grs^0,w,c
 28936  00377E  6E3C               	movwf	??i2___fldiv^0,c
 28937  003780  0EFF               	movlw	255
 28938  003782  1448               	andwf	(i2___fldiv@grs+1)^0,w,c
 28939  003784  6E3D               	movwf	(??i2___fldiv+1)^0,c
 28940  003786  0EFF               	movlw	255
 28941  003788  1449               	andwf	(i2___fldiv@grs+2)^0,w,c
 28942  00378A  6E3E               	movwf	(??i2___fldiv+2)^0,c
 28943  00378C  0E7F               	movlw	127
 28944  00378E  144A               	andwf	(i2___fldiv@grs+3)^0,w,c
 28945  003790  6E3F               	movwf	(??i2___fldiv+3)^0,c
 28946  003792  503C               	movf	??i2___fldiv^0,w,c
 28947  003794  103D               	iorwf	(??i2___fldiv+1)^0,w,c
 28948  003796  103E               	iorwf	(??i2___fldiv+2)^0,w,c
 28949  003798  103F               	iorwf	(??i2___fldiv+3)^0,w,c
 28950  00379A  B4D8               	btfsc	status,2,c
 28951  00379C  D003               	goto	i2l2064
 28952  00379E                     i2u1140_40:
 28953  00379E  0E01               	movlw	1
 28954  0037A0  6E4C               	movwf	i2___fldiv@aexp^0,c
 28955  0037A2  D002               	goto	i2l2063
 28956  0037A4                     i2l2064:
 28957  0037A4  B034               	btfsc	i2___fldiv@b^0,0,c
 28958  0037A6  D7FB               	goto	i2u1140_40
 28959  0037A8                     i2l2063:
 28960  0037A8  504C               	movf	i2___fldiv@aexp^0,w,c
 28961  0037AA  B4D8               	btfsc	status,2,c
 28962  0037AC  D01F               	goto	i2l10282
 28963  0037AE  0E01               	movlw	1
 28964  0037B0  2634               	addwf	i2___fldiv@b^0,f,c
 28965  0037B2  0E00               	movlw	0
 28966  0037B4  2235               	addwfc	(i2___fldiv@b+1)^0,f,c
 28967  0037B6  2236               	addwfc	(i2___fldiv@b+2)^0,f,c
 28968  0037B8  2237               	addwfc	(i2___fldiv@b+3)^0,f,c
 28969  0037BA  A037               	btfss	(i2___fldiv@b+3)^0,0,c
 28970  0037BC  D017               	goto	i2l10282
 28971  0037BE  C034  F03C         	movff	i2___fldiv@b,??i2___fldiv
 28972  0037C2  C035  F03D         	movff	i2___fldiv@b+1,??i2___fldiv+1
 28973  0037C6  C036  F03E         	movff	i2___fldiv@b+2,??i2___fldiv+2
 28974  0037CA  C037  F03F         	movff	i2___fldiv@b+3,??i2___fldiv+3
 28975  0037CE  343F               	rlcf	(??i2___fldiv+3)^0,w,c
 28976  0037D0  323F               	rrcf	(??i2___fldiv+3)^0,f,c
 28977  0037D2  323E               	rrcf	(??i2___fldiv+2)^0,f,c
 28978  0037D4  323D               	rrcf	(??i2___fldiv+1)^0,f,c
 28979  0037D6  323C               	rrcf	??i2___fldiv^0,f,c
 28980  0037D8  C03C  F034         	movff	??i2___fldiv,i2___fldiv@b
 28981  0037DC  C03D  F035         	movff	??i2___fldiv+1,i2___fldiv@b+1
 28982  0037E0  C03E  F036         	movff	??i2___fldiv+2,i2___fldiv@b+2
 28983  0037E4  C03F  F037         	movff	??i2___fldiv+3,i2___fldiv@b+3
 28984  0037E8  4A45               	infsnz	i2___fldiv@new_exp^0,f,c
 28985  0037EA  2A46               	incf	(i2___fldiv@new_exp+1)^0,f,c
 28986  0037EC                     i2l10282:
 28987  0037EC  BE46               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 28988  0037EE  D010               	goto	i2l10286
 28989  0037F0  5046               	movf	(i2___fldiv@new_exp+1)^0,w,c
 28990  0037F2  E103               	bnz	i2u1144_40
 28991  0037F4  2845               	incf	i2___fldiv@new_exp^0,w,c
 28992  0037F6  A0D8               	btfss	status,0,c
 28993  0037F8  D00B               	goto	i2l10286
 28994  0037FA                     i2u1144_40:
 28995  0037FA  0E00               	movlw	0
 28996  0037FC  6E46               	movwf	(i2___fldiv@new_exp+1)^0,c
 28997  0037FE  6845               	setf	i2___fldiv@new_exp^0,c
 28998  003800  0E00               	movlw	0
 28999  003802  6E34               	movwf	i2___fldiv@b^0,c
 29000  003804  0E00               	movlw	0
 29001  003806  6E35               	movwf	(i2___fldiv@b+1)^0,c
 29002  003808  0E00               	movlw	0
 29003  00380A  6E36               	movwf	(i2___fldiv@b+2)^0,c
 29004  00380C  0E00               	movlw	0
 29005  00380E  6E37               	movwf	(i2___fldiv@b+3)^0,c
 29006  003810                     i2l10286:
 29007  003810  BE46               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 29008  003812  D005               	goto	i2u1145_40
 29009  003814  5046               	movf	(i2___fldiv@new_exp+1)^0,w,c
 29010  003816  E111               	bnz	i2l10290
 29011  003818  0445               	decf	i2___fldiv@new_exp^0,w,c
 29012  00381A  B0D8               	btfsc	status,0,c
 29013  00381C  D00E               	goto	i2l10290
 29014  00381E                     i2u1145_40:
 29015  00381E  0E00               	movlw	0
 29016  003820  6E46               	movwf	(i2___fldiv@new_exp+1)^0,c
 29017  003822  0E00               	movlw	0
 29018  003824  6E45               	movwf	i2___fldiv@new_exp^0,c
 29019  003826  0E00               	movlw	0
 29020  003828  6E34               	movwf	i2___fldiv@b^0,c
 29021  00382A  0E00               	movlw	0
 29022  00382C  6E35               	movwf	(i2___fldiv@b+1)^0,c
 29023  00382E  0E00               	movlw	0
 29024  003830  6E36               	movwf	(i2___fldiv@b+2)^0,c
 29025  003832  0E00               	movlw	0
 29026  003834  6E37               	movwf	(i2___fldiv@b+3)^0,c
 29027  003836  0E00               	movlw	0
 29028  003838  6E44               	movwf	i2___fldiv@sign^0,c
 29029  00383A                     i2l10290:
 29030  00383A  C045  F04B         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 29031  00383E  A04B               	btfss	i2___fldiv@bexp^0,0,c
 29032  003840  D002               	goto	i2l10296
 29033  003842  8E36               	bsf	(i2___fldiv@b+2)^0,7,c
 29034  003844  D001               	goto	i2l10298
 29035  003846                     i2l10296:
 29036  003846  9E36               	bcf	(i2___fldiv@b+2)^0,7,c
 29037  003848                     i2l10298:
 29038  003848  90D8               	bcf	status,0,c
 29039  00384A  304B               	rrcf	i2___fldiv@bexp^0,w,c
 29040  00384C  6E37               	movwf	(i2___fldiv@b+3)^0,c
 29041  00384E  D70E               	goto	i2l10212
 29042  003850                     __end_ofi2___fldiv:
 29043                           	callstack 0
 29044                           
 29045 ;; *************** function _TMR0_WriteTimer *****************
 29046 ;; Defined at:
 29047 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 29048 ;; Parameters:    Size  Location     Type
 29049 ;;  timerVal        2    0[COMRAM] unsigned short 
 29050 ;; Auto vars:     Size  Location     Type
 29051 ;;		None
 29052 ;; Return value:  Size  Location     Type
 29053 ;;                  1    wreg      void 
 29054 ;; Registers used:
 29055 ;;		None
 29056 ;; Tracked objects:
 29057 ;;		On entry : 3E/1
 29058 ;;		On exit  : 3E/0
 29059 ;;		Unchanged: 3E/0
 29060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29061 ;;      Params:         2       0       0       0       0       0       0       0       0
 29062 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29063 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29064 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29065 ;;Total ram usage:        2 bytes
 29066 ;; Hardware stack levels used: 1
 29067 ;; This function calls:
 29068 ;;		Nothing
 29069 ;; This function is called by:
 29070 ;;		_Timing_TMR0_ISR
 29071 ;;		_Encoder_ISR
 29072 ;; This function uses a non-reentrant model
 29073 ;;
 29074                           
 29075                           	psect	text156
 29076  007DE0                     __ptext156:
 29077                           	callstack 0
 29078  007DE0                     _TMR0_WriteTimer:
 29079                           	callstack 18
 29080                           
 29081                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 29082                           
 29083                           ;incstack = 0
 29084  007DE0  C002  FFD7         	movff	TMR0_WriteTimer@timerVal+1,4055	;volatile
 29085                           
 29086                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 29087  007DE4  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
 29088  007DE8  0012               	return		;funcret
 29089  007DEA                     __end_of_TMR0_WriteTimer:
 29090                           	callstack 0
 29091                           
 29092 ;; *************** function _TMR0_ReadTimer *****************
 29093 ;; Defined at:
 29094 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 29095 ;; Parameters:    Size  Location     Type
 29096 ;;		None
 29097 ;; Auto vars:     Size  Location     Type
 29098 ;;  readVal         2    4[COMRAM] unsigned short 
 29099 ;;  readValHigh     1    7[COMRAM] unsigned char 
 29100 ;;  readValLow      1    6[COMRAM] unsigned char 
 29101 ;; Return value:  Size  Location     Type
 29102 ;;                  2    0[COMRAM] unsigned short 
 29103 ;; Registers used:
 29104 ;;		wreg, status,2
 29105 ;; Tracked objects:
 29106 ;;		On entry : 3F/0
 29107 ;;		On exit  : 3F/0
 29108 ;;		Unchanged: 3F/0
 29109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29110 ;;      Params:         2       0       0       0       0       0       0       0       0
 29111 ;;      Locals:         4       0       0       0       0       0       0       0       0
 29112 ;;      Temps:          2       0       0       0       0       0       0       0       0
 29113 ;;      Totals:         8       0       0       0       0       0       0       0       0
 29114 ;;Total ram usage:        8 bytes
 29115 ;; Hardware stack levels used: 1
 29116 ;; This function calls:
 29117 ;;		Nothing
 29118 ;; This function is called by:
 29119 ;;		_Encoder_ISR
 29120 ;; This function uses a non-reentrant model
 29121 ;;
 29122                           
 29123                           	psect	text157
 29124  007C7C                     __ptext157:
 29125                           	callstack 0
 29126  007C7C                     _TMR0_ReadTimer:
 29127                           	callstack 17
 29128                           
 29129                           ; BSR set to: 0
 29130                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 29131                           
 29132                           ;incstack = 0
 29133  007C7C  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 29134                           
 29135                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 29136  007C80  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 29137                           
 29138                           ; BSR set to: 0
 29139                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 29140  007C84  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 29141  007C86  6E03               	movwf	??_TMR0_ReadTimer^0,c
 29142  007C88  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 29143  007C8A  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 29144  007C8C  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 29145                           
 29146                           ; BSR set to: 0
 29147                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 29148  007C90  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 29149  007C94  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 29150                           
 29151                           ; BSR set to: 0
 29152  007C98  0012               	return		;funcret
 29153  007C9A                     __end_of_TMR0_ReadTimer:
 29154                           	callstack 0
 29155                           
 29156                           	psect	text158
 29157  000000                     __ptext158:
 29158                           	callstack 0
 29159                           
 29160                           	psect	rparam
 29161  0000                     
 29162                           	psect	temp
 29163  00005F                     btemp:
 29164                           	callstack 0
 29165  00005F                     	ds	1
 29166  0000                     int$flags	set	btemp
 29167  0000                     wtemp8	set	btemp+1
 29168  0000                     ttemp5	set	btemp+1
 29169  0000                     ttemp6	set	btemp+4
 29170  0000                     ttemp7	set	btemp+8
 29171                           
 29172                           	psect	idloc
 29173                           
 29174                           ;Config register IDLOC0 @ 0x200000
 29175                           ;	unspecified, using default values
 29176  200000                     	org	2097152
 29177  200000  FF                 	db	255
 29178                           
 29179                           ;Config register IDLOC1 @ 0x200001
 29180                           ;	unspecified, using default values
 29181  200001                     	org	2097153
 29182  200001  FF                 	db	255
 29183                           
 29184                           ;Config register IDLOC2 @ 0x200002
 29185                           ;	unspecified, using default values
 29186  200002                     	org	2097154
 29187  200002  FF                 	db	255
 29188                           
 29189                           ;Config register IDLOC3 @ 0x200003
 29190                           ;	unspecified, using default values
 29191  200003                     	org	2097155
 29192  200003  FF                 	db	255
 29193                           
 29194                           ;Config register IDLOC4 @ 0x200004
 29195                           ;	unspecified, using default values
 29196  200004                     	org	2097156
 29197  200004  FF                 	db	255
 29198                           
 29199                           ;Config register IDLOC5 @ 0x200005
 29200                           ;	unspecified, using default values
 29201  200005                     	org	2097157
 29202  200005  FF                 	db	255
 29203                           
 29204                           ;Config register IDLOC6 @ 0x200006
 29205                           ;	unspecified, using default values
 29206  200006                     	org	2097158
 29207  200006  FF                 	db	255
 29208                           
 29209                           ;Config register IDLOC7 @ 0x200007
 29210                           ;	unspecified, using default values
 29211  200007                     	org	2097159
 29212  200007  FF                 	db	255
 29213                           
 29214                           	psect	config
 29215                           
 29216                           ;Config register CONFIG1L @ 0x300000
 29217                           ;	PLL Selection
 29218                           ;	PLLSEL = PLL3X, 3x clock multiplier
 29219                           ;	PLL Enable Configuration bit
 29220                           ;	CFGPLLEN = ON, PLL Enabled
 29221                           ;	CPU System Clock Postscaler
 29222                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 29223                           ;	Low Speed USB mode with 48 MHz system clock
 29224                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
 29225  300000                     	org	3145728
 29226  300000  23                 	db	35
 29227                           
 29228                           ;Config register CONFIG1H @ 0x300001
 29229                           ;	Oscillator Selection
 29230                           ;	FOSC = INTOSCIO, Internal oscillator
 29231                           ;	Primary Oscillator Shutdown
 29232                           ;	PCLKEN = ON, Primary oscillator enabled
 29233                           ;	Fail-Safe Clock Monitor
 29234                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 29235                           ;	Internal/External Oscillator Switchover
 29236                           ;	IESO = OFF, Oscillator Switchover mode disabled
 29237  300001                     	org	3145729
 29238  300001  28                 	db	40
 29239                           
 29240                           ;Config register CONFIG2L @ 0x300002
 29241                           ;	Power-up Timer Enable
 29242                           ;	nPWRTEN = OFF, Power up timer disabled
 29243                           ;	Brown-out Reset Enable
 29244                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 29245                           ;	Brown-out Reset Voltage
 29246                           ;	BORV = 190, BOR set to 1.9V nominal
 29247                           ;	Low-Power Brown-out Reset
 29248                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 29249  300002                     	org	3145730
 29250  300002  5F                 	db	95
 29251                           
 29252                           ;Config register CONFIG2H @ 0x300003
 29253                           ;	Watchdog Timer Enable bits
 29254                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 29255                           ;	Watchdog Timer Postscaler
 29256                           ;	WDTPS = 32768, 1:32768
 29257  300003                     	org	3145731
 29258  300003  3C                 	db	60
 29259                           
 29260                           ; Padding undefined space
 29261  300004                     	org	3145732
 29262  300004  FF                 	db	255
 29263                           
 29264                           ;Config register CONFIG3H @ 0x300005
 29265                           ;	CCP2 MUX bit
 29266                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 29267                           ;	PORTB A/D Enable bit
 29268                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 29269                           ;	Timer3 Clock Input MUX bit
 29270                           ;	T3CMX = RC0, T3CKI function is on RC0
 29271                           ;	SDO Output MUX bit
 29272                           ;	SDOMX = RB3, SDO function is on RB3
 29273                           ;	Master Clear Reset Pin Enable
 29274                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
 29275  300005                     	org	3145733
 29276  300005  53                 	db	83
 29277                           
 29278                           ;Config register CONFIG4L @ 0x300006
 29279                           ;	Stack Full/Underflow Reset
 29280                           ;	STVREN = ON, Stack full/underflow will cause Reset
 29281                           ;	Single-Supply ICSP Enable bit
 29282                           ;	LVP = OFF, Single-Supply ICSP disabled
 29283                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 29284                           ;	ICPRT = OFF, ICPORT disabled
 29285                           ;	Extended Instruction Set Enable bit
 29286                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 29287                           ;	Background Debugger Enable bit
 29288                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 29289  300006                     	org	3145734
 29290  300006  81                 	db	129
 29291                           
 29292                           ; Padding undefined space
 29293  300007                     	org	3145735
 29294  300007  FF                 	db	255
 29295                           
 29296                           ;Config register CONFIG5L @ 0x300008
 29297                           ;	Block 0 Code Protect
 29298                           ;	CP0 = OFF, Block 0 is not code-protected
 29299                           ;	Block 1 Code Protect
 29300                           ;	CP1 = OFF, Block 1 is not code-protected
 29301                           ;	Block 2 Code Protect
 29302                           ;	CP2 = OFF, Block 2 is not code-protected
 29303                           ;	Block 3 Code Protect
 29304                           ;	CP3 = OFF, Block 3 is not code-protected
 29305  300008                     	org	3145736
 29306  300008  0F                 	db	15
 29307                           
 29308                           ;Config register CONFIG5H @ 0x300009
 29309                           ;	Boot Block Code Protect
 29310                           ;	CPB = OFF, Boot block is not code-protected
 29311                           ;	Data EEPROM Code Protect
 29312                           ;	CPD = OFF, Data EEPROM is not code-protected
 29313  300009                     	org	3145737
 29314  300009  C0                 	db	192
 29315                           
 29316                           ;Config register CONFIG6L @ 0x30000A
 29317                           ;	Block 0 Write Protect
 29318                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 29319                           ;	Block 1 Write Protect
 29320                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 29321                           ;	Block 2 Write Protect
 29322                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 29323                           ;	Block 3 Write Protect
 29324                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 29325  30000A                     	org	3145738
 29326  30000A  0F                 	db	15
 29327                           
 29328                           ;Config register CONFIG6H @ 0x30000B
 29329                           ;	Configuration Registers Write Protect
 29330                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 29331                           ;	Boot Block Write Protect
 29332                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 29333                           ;	Data EEPROM Write Protect
 29334                           ;	WRTD = OFF, Data EEPROM is not write-protected
 29335  30000B                     	org	3145739
 29336  30000B  E0                 	db	224
 29337                           
 29338                           ;Config register CONFIG7L @ 0x30000C
 29339                           ;	Block 0 Table Read Protect
 29340                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 29341                           ;	Block 1 Table Read Protect
 29342                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 29343                           ;	Block 2 Table Read Protect
 29344                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 29345                           ;	Block 3 Table Read Protect
 29346                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 29347  30000C                     	org	3145740
 29348  30000C  0F                 	db	15
 29349                           
 29350                           ;Config register CONFIG7H @ 0x30000D
 29351                           ;	Boot Block Table Read Protect
 29352                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 29353  30000D                     	org	3145741
 29354  30000D  40                 	db	64
 29355                           tosu	equ	0xFFF
 29356                           tosh	equ	0xFFE
 29357                           tosl	equ	0xFFD
 29358                           stkptr	equ	0xFFC
 29359                           pclatu	equ	0xFFB
 29360                           pclath	equ	0xFFA
 29361                           pcl	equ	0xFF9
 29362                           tblptru	equ	0xFF8
 29363                           tblptrh	equ	0xFF7
 29364                           tblptrl	equ	0xFF6
 29365                           tablat	equ	0xFF5
 29366                           prodh	equ	0xFF4
 29367                           prodl	equ	0xFF3
 29368                           indf0	equ	0xFEF
 29369                           postinc0	equ	0xFEE
 29370                           postdec0	equ	0xFED
 29371                           preinc0	equ	0xFEC
 29372                           plusw0	equ	0xFEB
 29373                           fsr0h	equ	0xFEA
 29374                           fsr0l	equ	0xFE9
 29375                           wreg	equ	0xFE8
 29376                           indf1	equ	0xFE7
 29377                           postinc1	equ	0xFE6
 29378                           postdec1	equ	0xFE5
 29379                           preinc1	equ	0xFE4
 29380                           plusw1	equ	0xFE3
 29381                           fsr1h	equ	0xFE2
 29382                           fsr1l	equ	0xFE1
 29383                           bsr	equ	0xFE0
 29384                           indf2	equ	0xFDF
 29385                           postinc2	equ	0xFDE
 29386                           postdec2	equ	0xFDD
 29387                           preinc2	equ	0xFDC
 29388                           plusw2	equ	0xFDB
 29389                           fsr2h	equ	0xFDA
 29390                           fsr2l	equ	0xFD9
 29391                           status	equ	0xFD8

Data Sizes:
    Strings     64
    Constant    215
    Data        12
    BSS         723
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      94
    BANK0           160     72     116
    BANK1           256    175     236
    BANK2           256    174     252
    BANK3           256      0     228
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USBCommandFetch$5758	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_30(CODE[1]), 

    M_5@axis	PTR struct Comando_T size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    M_4@axis	PTR struct Comando_T size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    M_3@axis	PTR struct Comando_T size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    F	PTR FTN(int ,int ,)int  size(2) Largest target is 1
		 -> Absolute function(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> USBCommandFetch@s(BANK2[2]), getTokens@s(BANK0[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 10
		 -> getComands@buff(BANK1[10]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_19(CODE[4]), STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_19(CODE[4]), STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 13
		 -> vfpfcnvrt@ct(BANK1[3]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[13]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 13
		 -> vfpfcnvrt@ct(BANK1[3]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[13]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(BANK1[7]), dbuf(BANK3[80]), ?_sprintf(BANK1[2]), executeCommand@strCommand(BANK2[30]), 
		 -> lastToken(BANK3[30]), readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), 
		 -> ustep(COMRAM[1]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(BANK1[7]), dbuf(BANK3[80]), ?_sprintf(BANK1[2]), executeCommand@strCommand(BANK2[30]), 
		 -> lastToken(BANK3[30]), readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), 
		 -> ustep(COMRAM[1]), NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), lastToken(BANK3[30]), getComands@buff(BANK1[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), lastToken(BANK3[30]), getComands@buff(BANK1[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK3[80]), executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK3[80]), executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), 
		 -> Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), ustep(COMRAM[1]), NULL(NULL[0]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), 
		 -> Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), ustep(COMRAM[1]), NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK1[7]), ?_sprintf(BANK1[2]), executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), 
		 -> readBuffer(BANK3[32]), Encoder_ISR@salida(BANK0[4]), Encoder_ISR@tics(BANK0[4]), ustep(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> lastToken(BANK3[30]), writeBuffer(BANK3[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S4860$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4860$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 320
		 -> executeCommand@strCommand(BANK2[30]), executeCommand@comando(BANK2[100]), lastToken(BANK3[30]), readBuffer(BANK3[32]), 
		 -> USBCommandFetch@readTokens(BANK2[60]), fila(BIGRAMl[320]), writeBuffer(BANK3[32]), USBAlternateInterface(BANK1[2]), 
		 -> BDT(BIGRAMl[48]), UEP1(BITBIGSFRlhhllllll[1]), 

    memset@s	PTR unsigned char  size(2) Largest target is 320
		 -> executeCommand@strCommand(BANK2[30]), executeCommand@comando(BANK2[100]), lastToken(BANK3[30]), readBuffer(BANK3[32]), 
		 -> USBCommandFetch@readTokens(BANK2[60]), fila(BIGRAMl[320]), writeBuffer(BANK3[32]), USBAlternateInterface(BANK1[2]), 
		 -> BDT(BIGRAMl[48]), UEP1(BITBIGSFRlhhllllll[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 320
		 -> executeCommand@strCommand(BANK2[30]), fila(BIGRAMl[320]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 320
		 -> executeCommand@strCommand(BANK2[30]), fila(BIGRAMl[320]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), fila(BIGRAMl[320]), 
		 -> RAM(DATA[2047]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), fila(BIGRAMl[320]), 
		 -> RAM(DATA[2047]), NULL(NULL[0]), 

    MCC_USB_WRITE@str	PTR unsigned char  size(2) Largest target is 32
		 -> writeBuffer(BANK3[32]), 

    executeCommand@TokensCom	PTR unsigned char [20] size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    USBCommandFetch@readTokens	PTR unsigned char [30] size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    G_97@axis	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    G_53@axis	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    G_95@axis	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    G_01@axis	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), lastToken(BANK3[30]), getComands@buff(BANK1[10]), 

    getComands@tokens	PTR PTR unsigned char  size(2) Largest target is 40
		 -> executeCommand@TokensCom(BANK2[40]), 

    getComands@comandos	PTR struct Comando_T size(2) Largest target is 100
		 -> executeCommand@comando(BANK2[100]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    getTokens@str	PTR unsigned char  size(2) Largest target is 30
		 -> executeCommand@strCommand(BANK2[30]), 

    getTokens@token	PTR PTR unsigned char  size(2) Largest target is 40
		 -> executeCommand@TokensCom(BANK2[40]), 

    FilaPop@str	PTR unsigned char  size(2) Largest target is 30
		 -> executeCommand@strCommand(BANK2[30]), 

    Fila_Agregar@comando	PTR unsigned char  size(2) Largest target is 32
		 -> executeCommand@strCommand(BANK2[30]), lastToken(BANK3[30]), readBuffer(BANK3[32]), NULL(NULL[0]), 

    IOCC2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Encoder_ISR(), IOCC2_DefaultInterruptHandler(), 

    IOCC2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Encoder_ISR(), IOCC2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timing_TMR0_ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timing_TMR0_ISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> G01_TMR2_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> G01_TMR2_ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR3_DefaultInterruptHandler(), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 32
		 -> writeBuffer(BANK3[32]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> readBuffer(BANK3[32]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned short  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned short  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1778_POINTER$wRom	PTR const unsigned short  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S1778_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1778_POINTER$wRam	PTR unsigned short  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned short  size(2) Largest target is 0

    S1778_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITBIGSFRlhl[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 320
		 -> executeCommand@strCommand(BANK2[30]), fila(BIGRAMl[320]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[22]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITBIGSFRlhl[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S95$wRam	PTR unsigned short  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S71$wRam	PTR unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 320
		 -> executeCommand@strCommand(BANK2[30]), executeCommand@comando(BANK2[100]), lastToken(BANK3[30]), readBuffer(BANK3[32]), 
		 -> USBCommandFetch@readTokens(BANK2[60]), fila(BIGRAMl[320]), writeBuffer(BANK3[32]), USBAlternateInterface(BANK1[2]), 
		 -> BDT(BIGRAMl[48]), UEP1(BITBIGSFRlhhllllll[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR2_ISR->_G01_TMR2_ISR
    _G01_TMR2_ISR->i2___fltol
    i2___fltol->i2___fldiv
    _Timing_TMR0_ISR->_TMR0_WriteTimer
    _IOCC2_ISR->_Encoder_ISR
    _Encoder_ISR->i2___fldiv
    i2___xxtofl->i2___lmul
    i2___flsub->i2___fladd
    i2___fladd->i2___flmul
    i2___flmul->i2___xxtofl
    i2___fldiv->i2___flmul

Critical Paths under _main in BANK0

    _medir_corriente->_ADC_GetConversionResult
    _executeCommand->___fltol
    _getTokens->_strtok
    _strtof->___xxtofl
    _toupper->_islower
    _isxdigit->_isdigit
    _G_97->___fleq
    _M_4->_DireccionRotor
    _M_3->_DireccionRotor
    _G_53->___wmul
    _mover_2->___fltol
    ___xxtofl->___lmul
    _FilaPop->_memcpy
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _MCC_USB_READ->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _Fila_Agregar->_memcpy
    _SYSTEM_Initialize->_USBDeviceInit
    _USBDeviceInit->_memset
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCC2_SetInterruptHandler
    _MCC_USB_WRITE->_putUSBUSART
    _Fila_Init->_memset
    _CDCTxService->_USBTransferOnePacket
    _Actualizar_angulo->___lbmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCC2_ISR->_Encoder_ISR

Critical Paths under _main in BANK1

    _main->_USBCommandFetch
    _executeCommand->_sprintf
    _getComands->_strtof
    _strtof->___flge
    _G_95->_mover_2
    _G_01->_mover_2
    _mover_2->___flge
    _USBCommandFetch->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->___fldiv
    ___fltol->___flmul
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_executeCommand

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  450642
                                            174 BANK1      1     1      0
                  _ADC_SelectChannel
                  _Actualizar_angulo
                       _CDCTxService
                       _Encoder_Init
                          _Fila_Init
          _IOCC2_SetInterruptHandler
                      _MCC_USB_WRITE
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                     _TMR2_StopTimer
                     _TMR3_StopTimer
                    _USBCommandFetch
                     _executeCommand
                    _medir_corriente
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _medir_corriente                                      0     0      0       0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              4     2      2       0
                                             44 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _executeCommand                                     175   175      0  249051
                                            170 BANK1      1     1      0
                                              0 BANK2    174   174      0
                            _FilaPop
                               _G_01
                               _G_53
                               _G_95
                               _G_97
                                _M_3
                                _M_4
                                _M_5
                            ___fltol
                         _getComands
                          _getTokens
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _getTokens                                           11     7      4    3558
                                             60 BANK0     11     7      4
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _getComands                                          22    17      5   42047
                                             58 BANK1     22    17      5
                             _strcpy
                             _strtof
 ---------------------------------------------------------------------------------
 (3) _strtof                                              21    17      4   39581
                                             37 BANK1     21    17      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              6     4      2     529
                                             50 BANK0      6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              6     4      2     187
                                             44 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4     112
                                             44 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _isxdigit                                             8     6      2    1583
                                             50 BANK0      7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _M_5                                                  4     0      4     178
                                             44 BANK0      4     0      4
                        _apagarRotor
 ---------------------------------------------------------------------------------
 (3) _apagarRotor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _G_97                                                 5     1      4    3052
                                             56 BANK0      5     1      4
                                _M_3
                                _M_4
                             ___fleq
                      _encenderRotor
 ---------------------------------------------------------------------------------
 (3) _encenderRotor                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _M_4                                                  4     0      4     556
                                             46 BANK0      4     0      4
                     _DireccionRotor
 ---------------------------------------------------------------------------------
 (2) _M_3                                                  4     0      4     556
                                             46 BANK0      4     0      4
                     _DireccionRotor
 ---------------------------------------------------------------------------------
 (3) _DireccionRotor                                       2     0      2     200
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _G_95                                                14    10      4   46840
                                             47 BANK1     14    10      4
           _TMR2_SetInterruptHandler
                            ___fladd
                            ___fldiv
                            ___flsub
                             ___wmul
                            _mover_2
 ---------------------------------------------------------------------------------
 (2) _G_53                                                 8     4      4   11840
                                             50 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _G_01                                                14    10      4   47048
                                             47 BANK1     14    10      4
           _TMR2_SetInterruptHandler
                            ___fladd
                            ___fldiv
                            ___flsub
                             ___wmul
                            _mover_2
 ---------------------------------------------------------------------------------
 (3) _mover_2                                             10     6      4   19641
                                             37 BANK1     10     6      4
            _TMR2_LoadPeriodRegister
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _setMicroStep
 ---------------------------------------------------------------------------------
 (4) _setMicroStep                                         3     3      0      22
                                             44 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1071
                                             56 BANK0     14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1260
                                             44 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _TMR2_WriteTimer                                      1     1      0      22
                                             44 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             44 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FilaPop                                              2     0      2    1822
                                             55 BANK0      2     0      2
                            ___lbmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _USBCommandFetch                                     70    70      0   99497
                                            170 BANK1      4     4      0
                                              0 BANK2     66    66      0
                       _Fila_Agregar
                       _MCC_USB_READ
                             _memset
                            _sprintf
                             _strcpy
                             _strlen
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    3056
                                             56 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     881
                                             49 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     881
                                             49 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strchr                                               5     1      4     540
                                             44 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   84955
                                            145 BANK1     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   83989
                                            137 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   83384
                                            107 BANK1     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     949
                                             44 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3823
                                             53 BANK0      5     1      4
                                              0 BANK1     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   44756
                                             45 BANK1     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1259
                                             50 BANK0      6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     635
                                             44 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1593
                                             44 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     697
                                             25 BANK1     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     403
                                             44 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1238
                                             70 BANK0      2     2      0
                                             25 BANK1      8     4      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5727
                                             25 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4524
                                             44 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     461
                                             44 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7202
                                              0 BANK1     25    17      8
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1860
                                             25 BANK1     12     4      8
                            ___flmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1546
                                             44 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4469
                                              0 BANK1     25    17      8
                             ___lmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     641
                                             44 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     653
                                             44 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    9861
                                              0 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    7497
                                             60 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     546
                                             44 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2953
                                             53 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     197
                                             62 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     641
                                             44 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     653
                                             44 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2899
                                             53 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    2397
                                             44 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2   13390
                                             51 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     391
                                             44 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2    1155
                                             44 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4   11378
                                             44 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _MCC_USB_READ                                         0     0      0    2232
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         4     1      3    2232
                                             53 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _Fila_Agregar                                         4     0      4    2196
                                             55 BANK0      4     0      4
                            ___lbmod
                             _memcpy
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    1039
                                             44 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    5225
                     _ADC_Initialize
                    _CCP2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    4425
                                             56 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     111
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2     111
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     289
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     289
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                             46 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCC2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCC2_SetInterruptHandler                            2     0      2     200
                                             44 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCC_USB_WRITE                                        4     0      4     444
                                             47 BANK0      4     0      4
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     0      3     222
                                             44 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Fila_Init                                            0     0      0    4134
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    4134
                                             44 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _Encoder_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         2     2      0    2129
                                             53 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 9     5      4    1928
                                             44 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Actualizar_angulo                                    0     0      0     648
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     648
                                             44 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                             44 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         12    12      0   44818
                                             32 BANK0     12    12      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR2_ISR
                           _TMR3_ISR
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   31575
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0    1728
                                             12 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    1     1      0   18142
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   17692
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  2     2      0   13721
                                             27 COMRAM     2     2      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    5446
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                           12     6      6    1437
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              4     4      0      46
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             7     7      0    4350
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _CDCInitEP                                           0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i2_USBTransferOnePacket                              9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (14) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0     255
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_WriteTimer                                     2     0      2     255
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0    3903
                   Absolute function *
                       _G01_TMR2_ISR *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _G01_TMR2_ISR                                        2     2      0    3903
                                             86 COMRAM     2     2      0
          i2_TMR2_LoadPeriodRegister
                   i2_TMR2_StopTimer
                          i2___fldiv
                          i2___flmul
                          i2___fltol
                           i2___lmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (13) i2___lmul                                           12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) i2___fltol                                          10     6      4     255
                                             76 COMRAM    10     6      4
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                           i2___lmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_TMR2_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_TMR2_LoadPeriodRegister                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     223
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                    _Timing_TMR0_ISR *
 ---------------------------------------------------------------------------------
 (12) _Timing_TMR0_ISR                                     0     0      0     223
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    8862
                          _IOCC2_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCC2_ISR                                           0     0      0    8862
                   Absolute function *
                        _Encoder_ISR *
      _IOCC2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _IOCC2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _Encoder_ISR                                        34    34      0    8862
                                             76 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flsub
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (13) i2___xxtofl                                         14    10      4     374
                                             12 COMRAM    14    10      4
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___flsub                                           8     0      8    2289
                                             67 COMRAM     8     0      8
                          i2___fladd
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fladd                                          16     8      8    2192
                                             51 COMRAM    16     8      8
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___flmul                                          25    17      8    1831
                                             26 COMRAM    25    17      8
                           i2___lmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___flge                                           12     4      8     234
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) i2___fldiv                                          25    17      8    1277
                                             51 COMRAM    25    17      8
                          i2___flmul (ARG)
                           i2___lmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_WriteTimer                                     2     0      2     223
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SelectChannel
   _Actualizar_angulo
     ___lbmod
   _CDCTxService
     _USBTransferOnePacket
   _Encoder_Init
   _Fila_Init
     _memset
   _IOCC2_SetInterruptHandler
   _MCC_USB_WRITE
     _putUSBUSART
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCC2_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _USBDeviceAttach
     _USBDeviceInit
       _memset
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR2_StopTimer
   _TMR3_StopTimer
   _USBCommandFetch
     _Fila_Agregar
       ___lbmod
       _memcpy
       _strlen (ARG)
     _MCC_USB_READ
       _getsUSBUSART
         _USBTransferOnePacket
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___lmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lmul (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___lmul (ARG)
                 ___xxtofl (ARG)
               ___lmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
               ___wmul (ARG)
             ___fltol
               ___fldiv (ARG)
               ___flmul (ARG)
               ___lmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _stoa
             _fputc
             _strlen
           _strncmp
           _tolower
     _strcpy
     _strlen
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _executeCommand
     _FilaPop
       ___lbmod
       _memcpy
     _G_01
       _TMR2_SetInterruptHandler
       ___fladd
       ___fldiv
       ___flsub
       ___wmul
       _mover_2
         _TMR2_LoadPeriodRegister
         _TMR2_StartTimer
         _TMR2_WriteTimer
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___fltol
         ___lmul
         ___xxtofl
         _setMicroStep
     _G_53
       ___wmul
     _G_95
       _TMR2_SetInterruptHandler
       ___fladd
       ___fldiv
       ___flsub
       ___wmul
       _mover_2
     _G_97
       _M_3
         _DireccionRotor
       _M_4
         _DireccionRotor
       ___fleq
       _encenderRotor
     _M_3
     _M_4
     _M_5
       _apagarRotor
     ___fltol
     _getComands
       _strcpy
       _strtof
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___lmul
         ___wmul
         ___xxtofl
         _isdigit
         _isspace
         _isxdigit
           _isdigit
         _nanf
         _toupper
           _islower
     _getTokens
       _strtok
     _memset
     _sprintf
   _medir_corriente
     _ADC_GetConversionResult
     _ADC_IsConversionDone
     _ADC_StartConversion
   _memset
   _sprintf

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCC2_ISR
       Absolute function(Fake) *
       _Encoder_ISR *
         _TMR0_ReadTimer
         _TMR0_WriteTimer
         i2___fladd
           i2___flmul (ARG)
             i2___lmul (ARG)
             i2___xxtofl (ARG)
               i2___lmul (ARG)
         i2___fldiv
           i2___flmul (ARG)
           i2___lmul (ARG)
           i2___xxtofl (ARG)
         i2___flge
         i2___flmul
         i2___flsub
           i2___fladd
           i2___flmul (ARG)
         i2___xxtofl
       _IOCC2_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timing_TMR0_ISR *
       _TMR0_WriteTimer
   _TMR2_ISR
     Absolute function(Fake) *
     _G01_TMR2_ISR *
       i2_TMR2_LoadPeriodRegister
       i2_TMR2_StopTimer
       i2___fldiv
       i2___flmul
       i2___fltol
         i2___fldiv (ARG)
         i2___flmul (ARG)
         i2___lmul (ARG)
         i2___xxtofl (ARG)
       i2___lmul
       i2___xxtofl
     _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USER_USB_CALLBACK_EVENT_HANDLER
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     140      45       31.3%
BIGRAMhh           280      0       0      43        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     AE      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AF      EC       7       92.2%
BIGRAMhl            C0      0       0      44        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      74       5       72.5%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5E       1      100.0%
BITBIGSFRhhlhhh     19      0       0      22        0.0%
BITBIGSFRlhhlll     15      0       0      38        0.0%
BITBIGSFRllllll      8      0       0      41        0.0%
BITBIGSFRhllh        7      0       0      28        0.0%
BITBIGSFRhhhh        7      0       0      20        0.0%
BITBIGSFRhlhhlh      7      0       0      25        0.0%
BITBIGSFRlhhlll      4      0       0      34        0.0%
BITBIGSFRhlhl        4      0       0      27        0.0%
BITBIGSFRlhhlll      3      0       0      32        0.0%
BITBIGSFRhlhhll      3      0       0      26        0.0%
BITBIGSFRlhhlll      2      0       0      37        0.0%
BITBIGSFRlllllh      2      0       0      40        0.0%
BITBIGSFRlhhlll      2      0       0      33        0.0%
BITBIGSFRhhhl        2      0       0      21        0.0%
BITBIGSFRlhl         2      0       0      39        0.0%
BITBIGSFRlhhlll      1      0       0      35        0.0%
BITBIGSFRlhhlll      1      0       0      36        0.0%
BITBIGSFRlhhllh      1      0       0      31        0.0%
BITBIGSFRhhlhl       1      0       0      23        0.0%
BITBIGSFRlhhlh       1      0       0      30        0.0%
BITBIGSFRlhhh        1      0       0      29        0.0%
BITBIGSFRhhll        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39E      42        0.0%
DATA                 0      0     4DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Nov 10 14:54:24 2022

         __end_of_TMR2_SetInterruptHandler 7DC2                                          _F 02D4  
                               _USB_SD_Ptr 7F13                                          _S 02C6  
                             ___fldiv@aexp 0118                               ___fldiv@bexp 0117  
                             ___fldiv@sign 0110                               ___awdiv@sign 0091  
                            _USBDeviceInit 4F90                        ___wmul@multiplicand 008E  
                          _timer0ReloadVal 01C9                 ?_IOCC2_SetInterruptHandler 008C  
     USER_USB_CALLBACK_EVENT_HANDLER@event 000D       USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
              __end_of_USBStdGetDscHandler 4BFA                                        l196 7AE0  
                                      l533 537C                                        l197 7ADE  
                                      l528 5334                                        l629 7D30  
                            ?_MCC_USB_READ 0001                                        _BDT 000400  
                                      _PR2 000FBB                                        _M_3 7D5A  
                                      _M_4 7D4C                                        _M_5 7DF2  
                                      _UIE 000F64                                        _UIR 000F65  
                              i2___fladd@a 0038                                i2___fladd@b 0034  
                USBCommandFetch@readTokens 0200                            _timer1ReloadVal 02DA  
                                      _abs 7912                                        _pad 6A76  
                              i2___fldiv@a 0038                                i2___fldiv@b 0034  
                                      _rtU 02EB                                 _USBSuspend 79A6  
                                      _rtY 02B6                               ___awmod@sign 0091  
                               i2___xxtofl 4982                       USBStdSetCfgHandler@i 0015  
                          _TMR2_Initialize 7C5E                                        prod 000FF3  
                                      tosl 000FFD                                        wreg 000FE8  
                              i2___flmul@a 001F                                i2___flmul@b 001B  
                           _USBDeviceTasks 50BE                                i2___flsub@a 0048  
                              i2___flsub@b 0044                             _USBDeviceState 005C  
                             ___flmul@aexp 010D                               ___flmul@bexp 010E  
                             ___flmul@sign 010C                               ___flmul@temp 0117  
                             ___flmul@prod 0113                      ??_USBCtrlTrfRxService 0001  
                           ??_getsUSBUSART 0098                   USBEnableEndpoint@options 0009  
                                     ?_M_3 008E                                       ?_M_4 008E  
                                     ?_M_5 008C                               ___fltol@exp1 00A7  
                        _Actualizar_angulo 76A2                                       M_3@n 0090  
                                     M_4@n 0090                                       M_5@n 008E  
                                     ?_abs 009E                                       l2013 29E6  
                                     l2022 2A4C                                       l2023 2A48  
                                     l2130 48FE                                       l2123 4880  
                                     l1084 7290                                       l2052 34B2  
                                     l1244 1DEA                                       l2221 6A1C  
                                     l2205 6AA4                                       l1262 6FFC  
                                     l2063 3520                                       l2232 3B40  
                                     l2064 351C                                       l2312 1456  
                                     l1264 7004                                       l1265 700C  
                                     l2234 3B48                                       l2082 21F8  
                                     l1266 7014                                       l2091 23EA  
                                     l1267 701C                            _timer3ReloadVal 01D1  
                                     l2092 23E6                                       l1268 7024  
                                     l1463 7C22                                       l2415 793A  
                                     l2440 5538                                       l1457 7B70  
                                     l2099 2470                                       l2452 450E  
                                     l2284 10E6                                       l2348 4614  
               USBConfigureEndpoint@handle 0007                                       l1733 60DA  
                                     l2551 0D42                                       l2625 0754  
                          ??_encenderRotor 008C                                       l2643 0950  
                                     l2724 6728                                       l2644 08F6  
                                     l2636 089E                                       l2645 0958  
                                     l2755 7790                                       l2766 77C8  
                                     ?_pad 009C                                       l1997 2914  
                                     l1998 28F2                                       l9902 702C  
                                     l9912 72A2                                       l9916 72B6  
                                     l9932 48AE                                       l9934 48B4  
                                     l9926 4890                                       STR_1 7FBE  
                                     l9944 4924                                       l9936 48C0  
                                     STR_2 7FE2                                       STR_3 7FDD  
                                     l9962 4970                                       l9946 4930  
                                     l9938 48E6                                       STR_4 7FE7  
                                     STR_5 7FEF                                       STR_8 7FEB  
                                     STR_9 7FF3                                       _G_01 3850  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _G_53 6732  
                                     _G_95 30B0                                       _G_97 62B4  
                    ??_USBCtrlTrfTxService 0001                                       _UCFG 000F62  
                                     _UEP0 000F6A                                       _UEP1 000F6B  
                                     _UEIE 000F66                                       _UEIR 000F67  
                                     _UCON 000F60                                       _TMR1 000FCE  
                                     _TMR2 000FBC                                       _TMR3 000FB2  
                                     _WPUB 000F85                             ?_MCC_USB_WRITE 008F  
                             i2___flge@ff1 0001                               i2___flge@ff2 0005  
                       ?_Actualizar_angulo 0001                       __end_of_Fila_Agregar 7292  
                          _CDCDataInHandle 01D3     USBStdFeatureReqHandler@current_ep_data 0019  
                                     abs@a 009E                                       _pDst 01D7  
                                     _feed 01E6                                       _dbuf 0336  
                  __end_of_CCP2_Initialize 7D76                                       _flag 01DC  
                                     _cola 01DE                                       _fila 0580  
                                     _atoi 542A                                       _ctoa 69DA  
                                     _main 5946                                       _dtoa 3ACA  
                                     _nanf 7BF8                                       _rtDW 0300  
                                     _busy 01DD                   ??i2_USBTransferOnePacket 0005  
                                     _prec 00BE                            _TMR0_StartTimer 7E10  
                                     _nout 02D2                                       pad@i 00A3  
                                     pad@p 00A0                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                              _BaudRateGen 02CA                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 00A5  
                                     fsr2l 000FD9                            _USBDeviceAttach 7ABE  
                                     _stoa 45A6                                       btemp 005F  
                         mover_2@distancia 0125                              ___fpclassifyf 61E6  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 00AC                               i2___fltol@f1 004D  
                          ___fldiv@new_exp 0111                            _TMR3_Initialize 7AEA  
                      __end_of_Encoder_ISR 30B0                            __end_of_FilaPop 74CC  
               __end_of_USBCheckStdRequest 5CEE                     ??_USBCtrlTrfOutHandler 0003  
                      ??_Actualizar_angulo 0090                               ___param_bank 000000  
                ??_USBStdFeatureReqHandler 0015                                      ??_M_3 0092  
                                    ??_M_4 0092                                      ??_M_5 0090  
                 ??_USBStdGetStatusHandler 0001                                      ??_abs 00A0  
                                    ??_pad 00A2                             ?_USBDeviceInit 0001  
                                    G_01@i 0139                                      G_01@n 0131  
                                    ?_G_01 012F                                      ?_G_53 0092  
                  __end_of_TMR0_Initialize 7760                                      ?_G_95 012F  
                                    G_53@i 0098                                      ?_G_97 0098  
                                    G_53@n 0094                                      G_95@i 0139  
                                    G_95@n 0131                                      G_97@n 009A  
           ??_TMR0_DefaultInterruptHandler 0001              __end_of_OSCILLATOR_Initialize 7D36  
                                    l13000 3588                                      l13010 35BE  
                                    l13012 35C0                                      l13004 35B2  
                                    l11430 7BAC                                      l13102 2392  
                                    l13032 21A4                                      l13050 21E4  
                                    l13034 21A8                                      l14012 5792  
                                    l14004 5768                                      l13212 6FA6  
                                    l13132 244C                                      l13108 23B0  
                                    l13060 2216                                      l13052 21E8  
                                    l13036 21B8                                      l14110 199C  
                                    l12182 7C9E                                      l14024 580A  
                                    l13232 6FEC                                      l13224 6FD4  
                                    l13216 6FB4                                      l13208 6F9A  
                                    l13240 6EAC                                      l13144 248E  
                                    l13128 242E                                      l13304 5F18  
                                    l13400 4530                                      l13330 6A8E  
                                    l13170 6F26                                      l13218 6FBC  
                                    l13322 5F62                                      l13314 5F34  
                                    l15002 5CF4                                      l15010 5DC4  
                                    l13340 6AC6                                      l13164 6F16  
                                    l13228 6FDE                                      l13244 6EE0  
                                    l13260 60AE                                      l13316 5F44  
                                    l13308 5F2C                                      l13404 4566  
                                    l14140 1B3A                                      l14220 73A4  
                                    l14212 7178                                      l13502 69EE  
                                    l13334 6A9C                                      l13270 6112  
                                    l12702 2970                                      l12614 2846  
                                    l14150 1BB8                                      l14118 1A02  
                                    l15030 3902                                      l14312 6BE6  
                                    l13424 765A                                      l12560 6952  
                                    l13504 69FA                                      l13344 6AF2  
                                    l13336 6AAE                                      l13176 6F3C  
                                    l13192 6F6E                                      l13248 6EFE  
                                    l13264 60C4                                      l13256 607A  
                                    l12720 2A0A                                      l12712 29D6  
                                    l13360 6260                                      l13408 4594  
                                    l14128 1AB4                                      l15024 3886  
                                    l14400 01FA                                      l14242 4C3E  
                                    l14314 6BEC                                      l14322 6C30  
                                    l13522 6A68                                      l13514 6A26  
                                    l12810 4722                                      l12570 7A10  
                                    l13178 6F44                                      l12730 2A20  
                                    l12626 286A                                      l12618 284A  
                                    l13370 62AA                                      l13610 0DF6  
                                    l14226 73EC                                      l14218 739C  
                                    l14402 0200                                      l13508 6A10  
                                    l12572 7A16                                      l13532 3B20  
                                    l13196 6F7C                                      l13188 6F64  
                                    l13364 626A                                      l13700 1142  
                                    l14180 1D28                                      l14164 1C8C  
                                    l14156 1C22                                      l14092 18A2  
                                    l14228 73F4                                      l15036 3954  
                                    l15028 38FE                                      l15060 30D6  
                                    l15116 6332                                      l14404 0202  
                                    l14262 4D22                                      l14254 4CDA  
                                    l14318 6C0A                                      l13518 6A3E  
                                    l12822 4770                                      l13550 3B7A  
                                    l13278 7994                                      l12670 2904  
                                    l12590 27FE                                      l13390 4474  
                                    l13702 1146                                      l13630 0E8A  
                                    l14174 1CEC                                      l14094 18C0  
                                    l14190 1D4E                                      l14350 6720  
                                    l14342 66DA                                      l14334 669C  
                                    l15046 3AAE                                      l14422 02B0  
                                    l14256 4D0C                                      l14248 4CA2  
                                    l12824 4784                                      l12816 474A  
                                    l13560 3C7A                                      l12736 2A2A  
                                    l12656 28A6                                      l13288 5EC6  
                                    l13712 1164                                      l14184 1D34  
                                    l15048 3AB4                                      l15072 31C8  
                                    l14600 07FE                                      l14424 02B2  
                                    l14432 0302                                      l15322 533E  
                                    l14266 756A                                      l14274 758A  
                                    l12842 481C                                      l12834 47E0  
                                    l13546 3B68                                      l12914 33AC  
                                    l12770 2AC2                                      l12594 2802  
                                    l13802 1544                                      l13810 1568  
                                    l13722 1198                                      l13618 0E0C  
                                    l14098 18CE                                      l15082 3322  
                                    l15066 31A6                                      l14522 061A  
                                    l14506 0542                                      l14450 039C  
                                    l14434 0316                                      l14362 00CE  
                                    l15316 5326                                      l13580 3CE8  
                                    l12940 3412                                      l12932 33FA  
                                    l12764 2AB8                                      l12756 2A92  
                                    l12692 295A                                      l12684 2938  
                                    l12668 2900                                      l13660 0FB2  
                                    l13628 0E6C                                      l13636 0EBC  
                                    l15084 3328                                      l15068 31AA  
                                    l14620 08B6                                      l14604 081A  
                                    l14516 05AC                                      l14524 061E  
                                    l14452 039E                                      l14436 033C  
                                    l14380 014E                                      l14372 0138  
                                    l15500 43B0                                      l15342 539C  
                                    l15350 53BE                                      l15334 5380  
                                    l12838 47F6                                      l12870 52AC  
                                    l12862 5250                                      l12854 5212  
                                    l12782 77DC                                      l12950 3462  
                                    l12926 33E4                                      l12918 33B0  
                                    l12694 295E                                      l13830 1648  
                                    l13750 1366                                      l13718 1188  
                                    l13670 1074                                      l13646 0F1C  
                                    l13654 0F6C                                      l13902 45D0  
                                    l15094 67CC                                      l14702 0B76  
                                    l14550 069C                                      l14526 0622  
                                    l14438 033E                                      l14382 0150  
                                    l14374 013E                                      l14358 00CA  
                                    l15352 53C8                                      l15360 53EA  
                                    l15328 536A                                      l12864 5264  
                                    l13584 3D00                                      l12768 2AC0  
                                    l13728 11C2                                      l13736 12B8  
                                    l13664 0FEA                                      l13648 0F3A  
                                    l13920 466E                                      l13912 462C  
                                    l15440 4186                                      l15416 3FFC  
                                    l15088 673C                                      l15096 67D0  
                                    l14712 0BFE                                      l14608 0842  
                                    l14560 06E0                                      l14552 069E  
                                    l14536 0660                                      l14456 03B6  
                                    l15504 43C8                                      l15370 5408  
                                    l12874 52C2                                      l12858 5236  
                                    l12786 77F2                                      l12970 34C8  
                                    l12794 734E                                      l13770 1470  
                                    l13818 1600                                      l13762 142C  
                                    l13682 10CC                                      l13666 103A  
                                    l13930 46B6                                      l14730 0C66  
                                    l14722 0C44                                      l14706 0BB2  
                                    l14546 068E                                      l14378 0148  
                                    l15532 76C4                                      l15372 5426  
                                    l12964 34B0                                      l13692 10F8  
                                    l13916 4646                                      l15436 4156  
                                    l15428 4094                                      l14740 0CEA  
                                    l14708 0BC4                                      l14556 06BC  
                                    l14492 04F0                                      l14484 04CE  
                                    l14468 03F6                                      l13950 548E  
                                    l13942 5440                                      l12878 52E8  
                                    l12958 348A                                      l12894 336C  
                                    l13846 1696                                      l13782 14F4  
                                    l13686 10F0                                      l13598 0DC4  
                                    l13934 46D0                                      l13926 4696  
                                    l15446 41C6                                      l15438 4180  
                                    l14806 20D0                                      l14750 0D30  
                                    l14734 0CA2                                      l14726 0C56  
                                    l14654 09B2                                      l14638 095E  
                                    l14582 078C                                      l14566 070E  
                                    l14494 04F4                                      l14478 0460  
                                    l14398 01DA                                      l15462 423E  
                                    l15606 5996                                      l15368 5404  
                                    l13952 54B6                                      l12976 34E6  
                                    l13848 16A0                                      l13768 144E  
                                    l14808 20EE                                      l14736 0CB0  
                                    l14648 099E                                      l14592 07C2  
                                    l14576 0760                                      l14488 04DC  
                                    l14834 7AB6                                      l14826 7A9E  
                                    l13946 5480                                      l13938 543C  
                                    l12898 3370                                      l13882 1772  
                                    l13858 16F8                                      l13890 17BA  
                                    l13794 1524                                      l14690 0B04  
                                    l14682 0AE2                                      l14594 07D2  
                                    l15482 42F0                                      l15490 4336  
                                    l13948 5488                                      l12996 3564  
                                    l13868 1724                                      l14844 70DA  
                                    l14756 0D6A                                      l14588 07AA  
                                    l15484 4308                                      l15492 4374  
                                    l13958 54EA                                      l13974 5A62  
                                    l14846 7108                                      l14782 1E5E  
                                    l14678 0AD6                                      l15486 431E  
                                    l15478 42DA                                      l13976 5A72  
                                    l14792 1F80                                      l15496 4380  
                                    l14866 4FCA                                      l13994 785C  
                                    l14794 1F86                                      l14786 1E70  
                                    l14778 1DEE                                      l14698 0B66  
                                    l15498 4398                                      l14894 5026  
                                    l14878 4FF4                                      l14798 1F98  
                                    l14990 6E1C                             ??_MCC_USB_READ 0099  
                              _writeBuffer 03A6                                      l14994 6E52  
                            ___fltol@sign1 00A6                            __end_of___aodiv 483E  
                                    ?_atoi 0093                                      ?_ctoa 0095  
                          __end_of___fladd 2ADE                                      ?_main 0001  
                                    ?_dtoa 0100                                      ?_nanf 008C  
                          __end_of___aomod 530A                            __end_of___fldiv 35C8  
                          __end_of___awdiv 6F86                            __end_of___flneg 79A6  
                                    _EEADR 000FA9                                      STR_12 7FFB  
                                    STR_30 7FE1                                      STR_14 7FFB  
                                    STR_22 7FD4                                      STR_23 7FCB  
                                    STR_17 7FF7                                      STR_27 7FF3  
                                    STR_19 7FF7                                      STR_28 7FEB  
                          __end_of___awmod 6FF6                            __end_of___lbmod 7ABE  
                          __end_of___flmul 24A4                  TMR0_ReadTimer@readValHigh 0008  
                          __end_of___flsub 7512                            __end_of___fltol 5F74  
        __end_of_IOCC2_SetInterruptHandler 7DD6                                      ?_stoa 0095  
                                    u10260 78D8                                      u10270 78DA  
                                    _T0CON 000FD5                            ___awdiv@divisor 008E  
                                    _T1CON 000FCD                     __end_of_USBDeviceTasks 51E6  
                                    u10920 493A                                      u13240 7D7E  
                                    _T2CON 000FBA                                      u10835 7D8A  
                                    u10836 7D8C                                      _T3CON 000FB1  
                                    u15130 3516                                      u14500 28D8  
                                    u16110 3B60                                      u15310 23E0  
                                    u14510 28DA                                      u14360 694A  
                                    u16120 3C8A                                      u16050 3AF2  
                                    u15410 6F48                                      u15170 3572  
                ?_USBCtrlEPServiceComplete 0001                                      u14380 6992  
                                    u16140 3CAC                                      u16060 3AF4  
                                    u15180 3596                                      u14540 291C  
                                    u16300 109C                                      u16220 0DE4  
                                    u17020 1A36                                      u17100 714C  
                                    u16141 3CAA                                      u16150 3CBA  
                                    u15350 243C                                      u15270 2204  
                                    u17110 7174                                      u16160 3CC0  
                                    u15520 6EFA                                      u15360 245A  
                                    u15600 5EE6                                      u14800 790A  
                                    u16400 1160                                      u18000 09AE  
                                    u16090 3B34                                      u14490 28C8  
                                    u14810 790C                                      u16330 10DA  
                                    u17130 73D8                                      u15700 7920  
                                    u16180 3CD0                                      u14820 7388  
                                    u15605 5EDA                                      u17230 6BBC  
                                    u15470 6FC0                                      u14750 2A9E  
                                    u14670 2A2E                                      u15710 6226  
                                    u17070 1C68                                      u17150 7428  
                                    u17310 00E2                                      u15640 5F4A  
                                    u15800 4462                                      u16360 1112  
                                    u17320 00E4                                      u14690 2A42  
                                    u15715 621A                                      u14827 737E  
                                    u15900 7970                                      u14940 5268  
                                    u17500 02D8                                      u17340 0126  
                                    u19100 426C                                      u14861 4750  
                                    u15590 5EB2                                      u16470 1356  
                                    u15920 7656                                      u14880 4788  
                                    u15760 62A2                                      u15840 44F4  
                                    u18240 1EF2                                      u15825 448C  
                                    u15770 62A4                                      u15826 4492  
                                    u16650 170E                                      u16730 4662  
                                    u19050 410E                                      u17450 0260  
                                    u15755 6284                                      u15827 44A0  
                                    u15860 454E                                      u16820 5A92  
                                    u18260 2042                                      u18500 3228  
                                    u17700 05E0                                      u17620 0494  
                                    u15845 44EA                                      u15790 4442  
                                    u16670 176A                                      u16590 1624  
                                    u17710 0606                                      u17630 04BA  
                                    u17550 0380                                      u17390 01AE  
                                    u18360 724E                                      u16760 46EC  
                                    u18440 39B4                                      u17720 0626  
                                    u15865 4544                                      u16681 45B0  
                                    u15890 796E                                      u18530 678C  
                                    u15795 4438                                      u16827 5A88  
                                    u17715 05FC                                      u17635 04B0  
                                    u16860 5AE8                                      u16790 5516  
                                    u16870 5B08                                      u16865 5AE2  
                                    u17905 087E                                      u16970 1904  
                                    u16867 5AD8                                      u16877 5AFE  
                                    u19277 59A2                                      u17870 080A  
                                    u17790 073C                                      u19287 5A2C  
                                    u17880 082A                                      u17980 0986  
                                    u17895 0846                                      u18980 53F2  
                                    i2l221 5BA0                                      i2l147 50E6  
                                    i2l332 64F8                                      i2l157 5174  
                          _TMR0_WriteTimer 7DE0                                      i2l159 517C  
                                    i2l361 3D5C                                      i2l346 5C1C  
                                    i2l355 5C68                                      i2l372 3E82  
                                    i2l284 67F2                                      i2l287 6882  
                                    i2l480 6550                                      i2l288 6802  
                                    i2l289 6808                                      i2l297 761E  
                                    i2l482 6586                                      i2l581 0052  
                                    i2l584 0062                                      i2l673 7D00  
                                    i2l585 0078                                      i2l586 006E  
                                    i2l579 0046                                      _UADDR 000F63  
                          ___awdiv@counter 0090                           ?_Timing_TMR0_ISR 0001  
                             vfpfcnvrt@fmt 016D                                      _TMR0H 000FD7  
                                    _TMR1H 000FCF                                      _TMR0L 000FD6  
                                    _TMR3H 000FB3                                      _TMR1L 000FCE  
                                    _TMR3L 000FB2                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F61                        ___lmul@multiplicand 0090  
                ?_TMR0_SetInterruptHandler 008C                              i2___fladd@grs 0043  
                               i2memcpy@d1 0001                  ?_TMR3_SetInterruptHandler 008C  
                               i2memcpy@s1 0003                  __end_of_Actualizar_angulo 76E2  
          __end_of_USBCtrlEPAllowDataStage 693A                           __end_of_TMR0_ISR 7B42  
                                    _sd000 7FBA                                      _sd001 7F5E  
                                    _sd002 7F92                           __end_of_TMR2_ISR 7BF8  
           ?_USBIncrement1msInternalTimers 0001                           __end_of_TMR3_ISR 7A06  
           ??_TMR3_DefaultInterruptHandler 0001                    __end_of_PIN_MANAGER_IOC 7DE0  
                                    _flags 00C0                                      _largo 00C4  
                                    _index 01DA                                      _fputc 693A  
                                    _fputs 77D2                            __end_of_isdigit 7976  
                                    _pasos 01C7                              i2___fldiv@grs 0047  
                            i2___fldiv@rem 0040                                      atoi@n 009B  
                                    pad@fp 009C                                      atoi@s 0093  
                                    _width 00BC                                      ctoa@c 0097  
                                    _putch 7E1C                                      ctoa@l 0099  
                                    ctoa@w 009B                                      dtoa@d 0102  
                                    dtoa@i 0122                                      dtoa@n 011A  
                                    dtoa@p 0114                                      dtoa@s 0118  
                                    dtoa@w 0116                                      nanf@s 008C  
                                    nanf@u 0090                                      _ustep 005E  
                          __end_of_islower 78E0                            __end_of_isspace 7662  
                  __end_of_TMR1_Initialize 7CD2                            __end_of_mover_2 2176  
                          __end_of_isupper 7912                                      pclath 000FFA  
                                    pclatu 000FFB                           __end_ofi2___flge 61E6  
                                    tablat 000FF5                            executeCommand@i 02AA  
                         __end_ofi2___lmul 733E                                      plusw1 000FE3  
                                    plusw2 000FDB                          __end_of_CDCInitEP 70C6  
                                    stoa@i 0107                                      stoa@l 010F  
                                    stoa@p 010D                                      stoa@s 0097  
                                    stoa@w 0109                                      ttemp5 0060  
                                    ttemp6 0063                                      ttemp7 0067  
                                    status 000FD8                                      wtemp8 0060  
                          __end_of_sprintf 7482                             ?___fpclassifyf 008C  
                          __end_of_tolower 779A                              i2___flmul@grs 0029  
                          _TMR2_StartTimer 7E04                            __end_of_strcspn 7432  
                          __end_of_strncmp 5B24                            __end_of_toupper 77D2  
                         __end_ofi2_memcpy 75E0                           __end_ofi2_memset 4F90  
                             __end_of_G_01 3ACA                               __end_of_G_53 67E6  
                             __end_of_G_95 333E                               __end_of_G_97 637E  
          ??_IOCC2_DefaultInterruptHandler 0001                       __end_of_Encoder_Init 7E20  
                          putUSBUSART@data 008C                            __initialization 6D5C  
                             __end_of_atoi 5542                               __end_of_ctoa 6A76  
                             __end_of_main 5A38                               __end_of_dtoa 3D32  
                             __end_of_nanf 7C1A                      _control_signal_bitmap 01E2  
                             __end_of_stoa 46F6                            _USBCommandFetch 3F98  
                        __end_of_IOCC2_ISR 7C5E                                     ??_G_01 0133  
                                   ??_G_53 0096                                     ??_G_95 0133  
                                   ??_G_97 009C                    __end_of_TMR2_Initialize 7C7C  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 0095  
                                   ??_ctoa 0098                   _TMR2_SetInterruptHandler 7DB8  
                                   ??_main 01AE                                     ??_dtoa 010A  
                                   ??_nanf 0090                                     ??_stoa 0099  
                            __activetblptr 000002                            ?_USBDeviceTasks 0001  
                    _TMR3_InterruptHandler 01CF                            _TMR2_WriteTimer 7D9A  
                              ?_USBSuspend 0001                                ?i2___xxtofl 000D  
                             _cdc_mem_type 01E3                         Fila_Agregar@nBytes 0099  
                  __end_of_TMR0_StartTimer 7E14                    __end_of_USBDeviceAttach 7AEA  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                           _CDCDataOutHandle 01D5  
                                   ?_fputc 008C                                     _ACTCON 000FB5  
                                   ?_fputs 0095                            ??_MCC_USB_WRITE 0093  
                                   _ADRESH 000FC4                                     _ADRESL 000FC3  
                                   _EEDATA 000FA8                                     _CCPR2H 000F91  
                                   _CCPR2L 000F90                                     _EECON2 000FA7  
                         ___awdiv@dividend 008C                                     _ANSELA 000F5B  
                                   ?_putch 0001                                     _ANSELB 000F5C  
                                   _ANSELC 000F5D                            getsUSBUSART@len 0097  
                                   _T1GCON 000FCC                                     _T3GCON 000FB4  
                  __end_of_TMR3_Initialize 7B16                                     i2l2013 2CF2  
                                   i2l2022 2D58                                     i2l2023 2D54  
                                   i2l2130 4A3E                                     i2l2123 49C0  
                                   i2l2052 373A                                     i2l2063 37A8  
                                   i2l2064 37A4                                     i2l2082 2524  
                                   i2l2091 2716                                     i2l2092 2712  
                                   i2l2099 279C                                     i2l1733 61AA  
                                   i2l1997 2C20                                     i2l1998 2BFE  
                                   i2l8030 7182                                     i2l8032 7188  
                                   i2l9000 3F74                                     i2l8060 5DF8  
                                   i2l8036 718E                                     i2l8070 5E22  
                                   i2l8080 5E62                                     i2l8056 5DEE  
                                   i2l8078 5E5A                                     _TABLAT 000FF5  
                                   i2l8088 5E9A                                     i2l7720 5862  
                                   i2l7740 5904                                     i2l9600 2C0C  
                                   i2l7728 588C                                     i2l9602 2C10  
                                   i2l9522 2B0A                                     i2l8802 68EA  
                                   i2l9700 2DCC                                     i2l7684 6C9C  
                                   i2l7780 6542                                     i2l7772 652A  
                                   i2l9702 2DCE                                     i2l9550 2B56  
                                   i2l9526 2B0E                                     i2l7694 781A  
                                   i2l8806 6906                                     i2l9624 2C66  
                                   i2l9616 2C44                                     i2l9626 2C6A  
                                   i2l9634 2C7C                                     i2l9546 2B52  
                                   i2l9802 556E                                     i2l7698 7828  
                                   i2l8930 3D56                                     i2l9652 2D16  
                                   i2l9644 2CE2                                     i2l8772 63C6  
                                   i2l9820 55E6                                     i2l7788 656E  
                                   i2l7796 6590                                     i2l8860 4AE8  
                                   i2l8908 685E                                     i2l9662 2D2C  
                                   i2l9558 2B76                                     i2l8870 4B76  
                                   i2l9824 5600                                     i2l9808 558C  
                                   i2l8960 3E2A                                     i2l8856 4AD4  
                                   i2l8970 3E6A                                     i2l8954 3E04  
                                   i2l8946 3DC6                                     i2l8882 4BD4  
                                   i2l9754 5B4A                                     i2l9668 2D36  
                                   i2l9588 2BB2                                     i2l8972 3E9C  
                                   i2l8876 4BC4                                     i2l8868 4B6E  
                                   i2l8982 3EE8                                     i2l8878 4BCC  
                                   i2l9766 5BB4                                     i2l9774 5BCA  
                              _Encoder_ISR 2DEA                                     i2l9696 2DC4  
                                   i2l9688 2D9E                                     i2l8992 3F26  
                                   i2l8984 3EF4                                     i2l8898 682A  
                                   i2l8998 3F68                                     _OSCCON 000FD3  
                                   _PLLRDY 007E97                                  ??_FilaPop 0099  
                            CDCTxService@i 0095                           i2___lmul@product 0009  
                         ?_CCP2_Initialize 0001                           __end_of___xxtofl 4982  
                 i2USBTransferOnePacket@ep 0007                          ??i2_USBDeviceInit 000D  
                          _TMR3_WriteTimer 7CEE                             i2___fladd@aexp 0041  
                           i2___fladd@bexp 0042                          _shortPacketStatus 00D2  
                          USBDeviceTasks@i 001F                                i2memcpy@tmp 000B  
                             vfprintf@cfmt 018F                USBStdFeatureReqHandler@pUEP 0017  
                 USBTransferOnePacket@data 008D                 USBCtrlTrfInHandler@lastDTS 0002  
                                   ___flge 6046                            ??_USBDeviceInit 0098  
                                   ___fleq 6E76                                     ___lmul 7292  
                             ?_putUSBUSART 008C                                     _cabeza 01DF  
                                ??___aodiv 009C                                  ??___fladd 0094  
                                ??___aomod 009C                                     ___wmul 7B42  
                                ??___fldiv 0108                                  ??___awdiv 0090  
                                ??___flneg 0090                                  ??___awmod 0090  
                                ??___lbmod 008D                                  ??___flmul 0108  
                                ??___flsub 00A6                                  ??___fltol 011D  
                  __end_of_TMR0_WriteTimer 7DEA                       __end_of_getsUSBUSART 6C36  
                                   _efgtoa 0D7C                                     _angulo 00C5  
                        _USBEnableEndpoint 780A                                     _floorf 43FC  
                                   _memcpy 7558                           ?_TMR0_Initialize 0001  
                                   _memset 4BFA                                     clear_0 6D96  
                                   clear_1 6DA8                                     clear_2 6DB4  
                                   clear_3 6DC0                                     clear_4 6DCC  
                         ___awdiv@quotient 0092                             i2___fldiv@aexp 004C  
                           i2___fldiv@bexp 004B                            ___awmod@divisor 008E  
                                   isa$std 000001                             i2___fldiv@sign 0044  
                          ___awmod@counter 0090                                     pad@buf 009E  
                       ?_USBEnableEndpoint 0009                                     ctoa@fp 0095  
                         __end_of_rtConstP 7F13                                     dtoa@fp 0100  
                                   _strchr 7842                                     _strcpy 733E  
                                   _strlen 7A06                                     _strtof 00B0  
                                   _strtok 667A                                     _strspn 7392  
                         __end_of_isxdigit 7180                                     fputc@c 008C  
                                   fputs@c 0099                                     fputs@i 009A  
                             __pdataCOMRAM 005E                                     fputs@s 0095  
                        __end_ofi2___fladd 2DEA                                  ??_isdigit 008E  
                        __end_ofi2___fldiv 3850                          __end_ofi2___flmul 27D0  
                        __end_ofi2___flsub 7558                          __end_ofi2___fltol 667A  
                             _CDCTxService 530A                            ___fpclassifyf@e 0094  
                          ___fpclassifyf@u 0096                            ___fpclassifyf@x 008C  
                                ??_islower 008E                               __mediumconst 7EE6  
                                ??_isspace 008E                                  ??_mover_2 0129  
                                   tblptrh 000FF7                                  ??_isupper 008E  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                      ??_USBEnableEndpoint 000A                                     stoa@cp 010B  
                                   stoa@fp 0095                                     putch@c 0001  
                         __end_of_vfprintf 7124                    __end_of_TMR2_StartTimer 7E08  
IOCC2_SetInterruptHandler@InterruptHandler 008C   TMR0_SetInterruptHandler@InterruptHandler 008C  
 TMR2_SetInterruptHandler@InterruptHandler 008C   TMR3_SetInterruptHandler@InterruptHandler 008C  
                         ?_PIN_MANAGER_IOC 0001                                  ??_sprintf 00A8  
                                ??_tolower 0094                                _CtrlTrfData 000438  
                                ??_strcspn 0095                             i2___flmul@aexp 0028  
                           i2___flmul@bexp 002D                                  ??_strncmp 0092  
                                ??_toupper 0094                             i2___flmul@sign 0027  
                           i2___flmul@temp 0032                             i2___flmul@prod 002E  
                     _controlTransferState 005B                                 ___flge@ff1 0119  
                          ??___fpclassifyf 0090                                 ___flge@ff2 011D  
                         ?_TMR1_Initialize 0001                               ___xxtofl@arg 00A2  
                             ___xxtofl@exp 00A1                          _SYSTEM_Initialize 7A34  
                             ___xxtofl@val 0098                                 ___fleq@ff1 008C  
                               ___fleq@ff2 0090                            ___lbmod@divisor 008C  
                               __accesstop 0060                    __end_of__initialization 6DDC  
                           i2___fltol@exp1 0056                            ___lbmod@counter 008E  
                             __pbssBIGRAMl 0580                                 ___flneg@f1 008C  
                     __end_of_MCC_USB_READ 7C3C                         ?_SYSTEM_Initialize 0001  
                        __end_of_Fila_Init 7A90                              ___rparam_used 000001  
                  __end_of_USBCommandFetch 41EC                                 ___fltol@f1 0119  
                           __pcstackCOMRAM 0001                  __end_of_USBEnableEndpoint 7842  
             USBCommandFetch@lastTokenFlag 023E                              __end_of_sd000 7FBE  
                            __end_of_sd001 7F92                              __end_of_sd002 7FA8  
                             __pidataBANK2 7D8E                        ??_SYSTEM_Initialize 0099  
                                ?_TMR0_ISR 0001                                  ?_TMR2_ISR 0001  
                                ?_TMR3_ISR 0001                    __end_of_TMR2_WriteTimer 7DA4  
                            __end_of_fputc 69DA                              __end_of_fputs 780A  
    __end_of_IOCC2_DefaultInterruptHandler 7E28              _IOCC2_DefaultInterruptHandler 7E26  
                            __end_of_putch 7E1E                __end_of_USBCtrlTrfInHandler 6504  
                         ?_TMR2_Initialize 0001                               _Fila_Agregar 7238  
              ??_IOCC2_SetInterruptHandler 008E                                  ?i2___flge 0001  
                   i2_USBTransferOnePacket 584C                                  ?i2___lmul 0001  
                  _ADC_GetConversionResult 7D0A                                 _cdc_notice 032C  
                                ?i2_memcpy 0001                                  ?i2_memset 0001  
                               _cdc_rx_len 00C8                              G_95@distancia 0135  
                               _cdc_tx_len 00C6                   ??_USBCtrlTrfSetupHandler 001E  
                  _USBTicksSinceSuspendEnd 01E4                        MCC_USB_WRITE@nBytes 0091  
                         ?_TMR0_StartTimer 0001                           ?_USBDeviceAttach 0001  
                                  ??_fputc 0090                  __end_of_SYSTEM_Initialize 7A62  
                                  ??_fputs 0099                     _USBStdGetStatusHandler 67E6  
                  __end_of_TMR3_WriteTimer 7D0A                                    ??_putch 008C  
                               __pbssBANK0 00A8                                 __pbssBANK1 01AF  
                               __pbssBANK2 02AE                                 __pbssBANK3 0300  
                         ?_TMR3_Initialize 0001                 ?i2_TMR2_LoadPeriodRegister 0001  
                  _TMR2_LoadPeriodRegister 7DA4                              ?_setMicroStep 0001  
                           _DireccionRotor 7D82                                _pBDTEntryIn 00B6  
                               _feed_state 01E1           __end_of_USBCtrlEPServiceComplete 5C0C  
                                  M_3@axis 008E                       USBCtrlTrfRxService@i 0001  
                                  M_4@axis 008E                              ?_G01_TMR2_ISR 0001  
                                  M_5@axis 008C                                    ?___flge 0119  
                                  ?___fleq 008C           __end_of_TMR0_SetInterruptHandler 7DCC  
                                  ?___lmul 008C                                 _getComands 5CEE  
         __end_of_TMR3_SetInterruptHandler 7DB8                                    ?___wmul 008C  
                               ??_TMR0_ISR 0003                                 ??_TMR2_ISR 0059  
                               ??_TMR3_ISR 0003                                    ?_efgtoa 012D  
                         ?_TMR0_WriteTimer 0001                        Fila_Agregar@comando 0097  
                                  _CCP2CON 000F97                                    ?_floorf 0119  
                                  ?_memcpy 008C                                    ?_memset 008C  
                           ___lmul@product 0094                                 _device_dsc 7FA8  
                         _USBCtrlEPService 6B0C                                 _ep_data_in 01C2  
                           getComands@buff 0145                                 ??i2___flge 0009  
                                  ?_strchr 008C                                    ?_strcpy 008C  
                                  ?_strlen 008C                                 ??i2___lmul 0009  
                           getComands@size 013E                                    ?_strtof 0125  
                                  ?_strtok 0098                                    ?_strspn 0091  
                    executeCommand@comando 0246                __end_of_USBCtrlTrfRxService 564A  
                  executeCommand@TokensCom 0200                         _USBCheckStdRequest 5C0C  
                        _configDescriptor1 7F1B                                    i2l10200 3634  
                                  i2l10212 366C                                    i2l10204 3638  
                                  i2l10152 6194                                    i2l10144 614A  
                                  i2l10320 24D4                                    i2l10250 3738  
                                  i2l10226 369A                                    i2l10218 3682  
                                  i2l10322 24E4                                    i2l11202 730C  
                                  i2l10244 3712                                    i2l10236 36EA  
                                  i2l10180 35F4                                    i2l10148 617E  
                                  i2l11212 65DE                                    i2l10262 376E  
                                  i2l10158 61E2                                    i2l10430 27BA  
                                  i2l10414 275A                                    i2l10318 24D0  
                                  i2l10256 3750                                    i2l10184 35F8  
                                  i2l10336 2510                                    i2l11240 664C  
                                  i2l11232 6638                                    i2l10290 383A  
                                  i2l10282 37EC                                    i2l10418 2778  
                                  i2l10346 2542                                    i2l10338 2514  
                                  i2l10450 49F4                                    i2l10442 49D0  
                                  i2l10460 4A64                                    i2l10452 4A00  
                                  i2l11228 6628                                    i2l11252 75AE  
                                  i2l11260 75CE                                    i2l10286 3810  
                                  i2l10462 4A70                                    i2l10454 4A26  
                                  i2l11166 30A8                                    i2l11246 6668  
                                  i2l11238 6640                                    i2l10296 3846  
                                  i2l10448 49EE                                    i2l10298 3848  
                                  i2l10394 26DC                                    i2l11346 78A0  
                                  i2l10388 26BE                                    i2l10580 647A  
                                  i2l10564 7232                                    i2l10556 71EA  
                                  i2l11348 78A2                                    i2l10478 4AB0  
                                  i2l11198 72F8                                    i2l11702 572C  
                                  i2l10592 64BE                                    i2l14040 5C32  
                                  i2l11384 761C                                    i2l10578 6476  
                                  i2l14050 5C4A                                    i2l14052 5C50  
                                  i2l14036 5C26                                    i2l10598 64DE  
                                  i2l14062 5C80                                    i2l14038 5C2C  
                                  i2l14048 5C44                                    i2l13450 4F3E  
                                  i2l14066 5C9E                                    i2l11692 566A  
                                  i2l13452 4F70                                    i2l13444 4F06  
                                  i2l13438 4EA2                                    i2l15302 51C0  
                                  i2l11696 5702                                    i2l13472 5FB6  
                                  i2l15160 4D90                                    i2l15304 51DA  
                                  i2l15224 50DE                                    i2l15216 50D2  
                                  i2l11698 571E                                    i2l13458 4F86  
                                  i2l15250 5126                                    i2l15148 4D66  
                                  i2l15244 5102                                    i2l13494 6026  
                                  i2l15262 513C                                    i2l15238 50F8  
                                  i2l15176 4DC4                                    i2l15276 516A  
                                  i2l15268 5146                                    i2l15296 51A2  
                                  i2l14940 6B8C                                    i2l14942 6B92  
                                  i2l15942 71A6                                    i2l15944 71D6  
                                ?___xxtofl 0098                                 ??i2_memcpy 0007  
                               ??i2_memset 0007                __end_of_USBCtrlTrfTxService 5EA2  
                      _USBStdSetCfgHandler 5F74                          ??_medir_corriente 0090  
                                  _OSCCON2 000FD2                               _Encoder_Init 7E1E  
                                  _TBLPTRH 000FF7                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                                    _OSCTUNE 000F9B  
                      ?_USBCheckStdRequest 0001                           ?_TMR2_StartTimer 0001  
                                  _UIEbits 000F64                                    _UIRbits 000F65  
                           ??_setMicroStep 008C                     __end_of_DireccionRotor 7D8E  
                    __end_of_encenderRotor 7E04                  _IOCC2_SetInterruptHandler 7DCC  
                            _cdc_trf_state 00C7                                    _FilaPop 7482  
        __end_ofi2_TMR2_LoadPeriodRegister 7DF2                            i2___fladd@signs 0040  
                                  _pCDCDst 01B9                           ?_USBCommandFetch 0001  
                                  _pCDCSrc 01BC                       _ADC_InterruptHandler 02D8  
                                  __Hparam 0000            ??_USBIncrement1msInternalTimers 0001  
                                ?_isxdigit 0092                       ?_USBStdSetCfgHandler 0001  
                                _CDCInitEP 705E                                    __Lparam 0000  
                        __end_of_getTokens 6E76                             ??_G01_TMR2_ISR 0057  
               ??_TMR2_SetInterruptHandler 008E                                 _readBuffer 0386  
                     ??_USBCheckStdRequest 001C                                    ___aodiv 46F6  
                                  ___fladd 27D0                                    ___aomod 51E6  
                         i2_TMR2_StopTimer 7E18                                    ___fldiv 333E  
                                  ___awdiv 6F02                                    ___flneg 7976  
                                  ___awmod 6F86                                    ___lbmod 7A90  
                                  ___flmul 2176                                    ___flsub 74CC  
                                  ___fltol 5EA2                           ??_USBDeviceTasks 001F  
                        ??_USBStallHandler 0001                           ?_TMR2_WriteTimer 0001  
                                ?_vfprintf 0189                  ??_ADC_GetConversionResult 008E  
                                  __pcinit 6D5C                         getsUSBUSART@buffer 0095  
                __end_of_configDescriptor1 7F5E                                    __ramtop 0800  
                                  __ptext0 5946                                    __ptext1 7C9A  
                                  __ptext2 7DF8                                    __ptext3 7D76  
                                  __ptext4 7D0A                                    __ptext5 41EC  
                                  __ptext6 6DEA                                    __ptext7 5CEE  
                                  __ptext8 00B0                                    __ptext9 779A  
                             i2memset@dest 0001                           getComands@tokens 013C  
                                  _inPipes 00B0                _USBDeferOUTDataStagePackets 01E5  
                                _T0CONbits 000FD5                                  _IOCC2_ISR 7C3C  
                    _OSCILLATOR_Initialize 7D20                               ??_USBSuspend 0015  
                                _T2CONbits 000FBA                                    _current 02D6  
                                  _isdigit 7944                               ??i2___xxtofl 0011  
                               ??___xxtofl 009C                                  _T3CONbits 000FB1  
                         ___awmod@dividend 008C                                    _islower 78AE  
                 ??_PIN_MANAGER_Initialize 008E                                    _isspace 7622  
                                  _mover_2 1D84                                    _isupper 78E0  
                          i2_USBDeviceInit 4D2C                                    efgtoa@c 0133  
                                  efgtoa@d 014B                                    efgtoa@e 0163  
                                  efgtoa@f 012F                                    efgtoa@g 015F  
                                  efgtoa@h 0155                                    efgtoa@i 015D  
                                  efgtoa@l 0159                                    efgtoa@m 0145  
                                  efgtoa@n 0165                                    efgtoa@p 014F  
                                  efgtoa@t 013F                                    efgtoa@u 0167  
                                  efgtoa@w 0151                           i2USBDeviceInit@i 000D  
                                  atoi@neg 0099                         __end_of_USB_CD_Ptr 7F1B  
                ??_TMR2_LoadPeriodRegister 008C                                    _sprintf 7432  
                                  _tolower 7760                                    _strcspn 73E2  
                                  _strncmp 5A38                                    _toupper 779A  
                     end_of_initialization 6DDC                               _getsUSBUSART 6BA2  
                         ?_TMR3_WriteTimer 0001                                    floorf@e 0127  
                                  floorf@m 0123                                    floorf@u 0129  
                                  floorf@x 0119                              ??_apagarRotor 008C  
                       __end_of_USB_SD_Ptr 7F19                               ?_Encoder_ISR 0001  
                          ?_DireccionRotor 008C                                    memcpy@d 0093  
                                  memcpy@n 0090                                    memcpy@s 0095  
                      _pBDTEntryEP0OutNext 0059                                    fputc@fp 008E  
                                  memset@c 008E                                    memset@k 0094  
                                  memset@n 0090                                    memset@s 0096  
                            __Lmediumconst 7EE6                                    fputs@fp 0097  
                          _USB1msTickCount 02CE            _dummy_encapsulated_cmd_response 02DC  
                                i2u1042_40 2C28                                  i2u1140_40 379E  
                                i2u1300_40 65FC                                  i2u1300_45 65F2  
                                i2u1037_40 2BD4                                  i2u1038_40 2BE4  
                 ?_USBStdFeatureReqHandler 0001                                  i2u1063_40 2DAA  
                                i2u1055_40 2D3A                                  i2u1039_40 2BE6  
                                i2u1144_40 37FA                                  i2u1304_40 6652  
                                i2u1145_40 381E                                  i2u1057_40 2D4E  
                                i2u1162_40 2768                                  i2u1154_40 2530  
                                i2u1163_40 2786                                  i2u1171_40 4A7A  
                                i2u1402_48 79F2                             i2___xxtofl@arg 0017  
                                i2u1404_48 7BE4                                  i2u1158_40 270C  
                           i2___xxtofl@exp 0016                                  i2u1327_48 7C4A  
                           i2___xxtofl@val 000D                                  i2u1354_40 5652  
                                i2u1354_46 5654                                  i2u1299_40 65CC  
                                i2u1399_48 7B2E                      ??_USBStdSetCfgHandler 0015  
                                i2u1888_40 51E2               __end_of_ADC_IsConversionDone 7D82  
                               ??_isxdigit 0094                                 ?_CDCInitEP 0001  
                       __end_of_USBSuspend 79D6                          __end_of_vfpfcnvrt 1D84  
                               efgtoa@mode 0154                      TMR0_ReadTimer@readVal 0005  
                               efgtoa@sign 014D                    _USBCtrlEPAllowDataStage 6898  
                       __end_ofi2___xxtofl 4AC2                                ?_getComands 013A  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                        i2___lmul@multiplier 0001  
                  executeCommand@numTokens 02AC                                 G_01@i_3982 013B  
                               ??_vfprintf 00A8                   _USBCtrlEPServiceComplete 5B24  
                           _TMR0_ReadTimer 7C7C                                    strchr@c 008E  
                                  strchr@s 008C                                    strcpy@d 0094  
                                  strlen@a 008E                                    strcpy@s 0092  
                                  strlen@s 008C                 _USBStatusStageEnabledFlag1 00CB  
               _USBStatusStageEnabledFlag2 00CA                                    strtof@i 0139  
                                  strtof@s 0125                                    strspn@c 0093  
                                  strspn@i 0096                                    strtok@p 01C5  
                                  strtok@s 0098                                    strspn@s 0091  
                       USBEnableEndpoint@p 000A                   _TMR0_SetInterruptHandler 7DC2  
                                _PORTBbits 000F81                                  _PORTCbits 000F82  
                 _TMR3_SetInterruptHandler 7DAE                          DireccionRotor@dir 008C  
                               ?_IOCC2_ISR 0001                               _MCC_USB_READ 7C1A  
                              ___fladd@grs 009B                                 getTokens@i 00A6  
                               getTokens@s 00A4                           ___lbmod@dividend 008D  
                            ___xxtofl@sign 00A0                         _BothEP0OutUOWNsSet 00CE  
                      _ADC_StartConversion 7DF8                                ___fldiv@grs 0113  
                              ___fldiv@rem 010C                            i2___fltol@sign1 0055  
                                i2___fladd 2ADE                                  i2___fldiv 35C8  
                                i2___flmul 24A4                                  i2___flsub 7512  
                                i2___fltol 65C0                  USBConfigureEndpoint@EPNum 0006  
                           _executeCommand 41EC                 ?_USBCtrlEPAllowStatusStage 0001  
      USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                  _USTATcopy 005D  
                  TMR2_WriteTimer@timerVal 008C                      __end_of_MCC_USB_WRITE 7B8C  
                              ___lbmod@rem 008F                                ___flmul@grs 010F  
             __end_of_USBTransferOnePacket 584C                                 G_95@i_3990 013B  
                        putUSBUSART@length 008E                        __end_of_apagarRotor 7E00  
                     ?_ADC_StartConversion 0001                     __end_of_TMR0_ReadTimer 7C9A  
                                _Fila_Init 7A62                          Encoder_ISR@salida 0070  
                   _USBCtrlTrfSetupHandler 6CCA               __end_of_INTERRUPT_Initialize 7E18  
     __end_of_TMR2_DefaultInterruptHandler 7E24               _TMR2_DefaultInterruptHandler 7E22  
                  ?i2_USBTransferOnePacket 0001                             __end_of___flge 6116  
                           __end_of___fleq 6F02                      __end_of_USBDeviceInit 50BE  
    __end_of_USBIncrement1msInternalTimers 7BD4              _USBIncrement1msInternalTimers 7BB0  
                           __end_of___lmul 72E8                                vfpfcnvrt@ap 016F  
                              vfpfcnvrt@cp 017D                                vfpfcnvrt@ct 0185  
                              vfpfcnvrt@fp 016B                                vfpfcnvrt@ll 0175  
                           __end_of___wmul 7B68                              __pidataCOMRAM 7E28  
                           __end_of_efgtoa 17E2                       __end_of_setMicroStep 705E  
                                i2memcpy@d 0007                                  i2memcpy@n 0005  
                  __end_ofi2_USBDeviceInit 4E5E                                  i2memcpy@s 0009  
                           _ADC_Initialize 7D36                             __end_of_floorf 45A6  
                                i2memset@c 0003                                  i2memset@k 0009  
                                i2memset@n 0005                                  i2memset@s 000B  
                           __end_of_memcpy 759C                     ?_OSCILLATOR_Initialize 0001  
                               floorf@F526 02AE                             __end_of_memset 4D2C  
                        _USBBusIsSuspended 00D0         i2TMR2_LoadPeriodRegister@periodVal 0001  
         TMR2_LoadPeriodRegister@periodVal 008C                             __end_of_strchr 7878  
                           __end_of_strcpy 7392                             __end_of_strlen 7A34  
                           __end_of_strtof 0D7C                             __end_of_strtok 6732  
                           __end_of_strspn 73E2                        start_initialization 6D5C  
                  ?_USBStdGetStatusHandler 0001                          setMicroStep@ustep 008E  
                              __end_of_M_3 7D68              USBCtrlTrfRxService@byteToRead 0002  
                              __end_of_M_4 7D5A                                __end_of_M_5 7DF8  
                   __end_of_executeCommand 43FC                                __end_of_abs 7944  
                              __end_of_pad 6B0C                       __end_of_G01_TMR2_ISR 5750  
                           _TMR2_StopTimer 7E0C                                _cdc_data_rx 000540  
                               ?i2___fladd 0034                                _cdc_data_tx 000500  
                               ?i2___fldiv 0034               __end_of_USBConfigureEndpoint 6CCA  
                               ?i2___flmul 001B                                 ?i2___flsub 0044  
                               ?i2___fltol 004D            __end_of_USBStdFeatureReqHandler 3F98  
        __end_of_USBCtrlEPAllowStatusStage 6442                   __end_of_USBCtrlEPService 6BA2  
              ??i2_TMR2_LoadPeriodRegister 0001                             _TMR3_StopTimer 7E08  
                    __end_of___fpclassifyf 62B4                  ??_USBCtrlEPAllowDataStage 0002  
                        ??_Timing_TMR0_ISR 0003                                ??_CDCInitEP 000D  
                           USBDeviceInit@i 0098                      ??_ADC_StartConversion 008C  
                   _pBDTEntryEP0OutCurrent 00C2                                vfprintf@fmt 018B  
                  USBTransferOnePacket@dir 008C                    USBTransferOnePacket@len 008F  
           __end_ofi2_USBTransferOnePacket 5946                                   ??___flge 0121  
                                 ??___fleq 0094                                 ?_Fila_Init 0001  
                          ?_TMR0_ReadTimer 0001                              _isxdigit$5244 0098  
                                 ??___lmul 0094                                   ??___wmul 0090  
                      _USBStdGetDscHandler 4AC2                            _medir_corriente 7C9A  
                                 ??_efgtoa 0134                     __end_of_ADC_Initialize 7D4C  
                              __pdataBANK2 02EF                                   ??_floorf 011D  
                                 ??_memcpy 0092                                   ??_memset 0092  
                     USBCommandFetch@F5850 02F6              ?_TMR2_DefaultInterruptHandler 0001  
                               memset@dest 008C                                   ??_strchr 0090  
                                 ??_strcpy 0090                                   ??_strlen 008E  
                                 ??_strtof 0129                                   ??_strtok 009C  
                                 ??_strspn 0095                                ??_IOCC2_ISR 004F  
                                 G_01@axis 012F                                  ___fladd@a 0090  
                                ___fladd@b 008C                     _USBActiveConfiguration 00D3  
           __end_of_USBStdGetStatusHandler 6898                                  ___fldiv@a 0104  
                                ___fldiv@b 0100                             _pos_absoluta_Z 02BE  
                   __end_of_TMR2_StopTimer 7E10                                  ___flmul@a 0104  
                                ___flmul@b 0100                                __pbssCOMRAM 0059  
                                 G_53@axis 0092                                  ___flsub@a 011D  
                                ___flsub@b 0119                              __pcstackBANK0 0060  
                            __pcstackBANK1 0100                              __pcstackBANK2 0200  
                         ___aodiv@dividend 008C                       _ADC_IsConversionDone 7D76  
                                 G_95@axis 012F                            ?_executeCommand 0001  
                                 G_97@axis 0098                       ?_USBStdGetDscHandler 0001  
                 __end_ofi2_TMR2_StopTimer 7E1C                         getComands@comandos 013A  
                   __end_of_TMR3_StopTimer 7E0C                                _apagarRotor 7DFC  
               __end_of_USBWakeFromSuspend 78AE                                   ?_FilaPop 0097  
                          _USBStallHandler 75E0                               _pBDTEntryOut 01AF  
               __end_of_USBCheckCDCRequest 65C0                      _TMR0_InterruptHandler 01CB  
                                __pnvBANK2 02FA                                _efgtoa$5012 013B  
                              _efgtoa$5013 013D                                _efgtoa$5005 0139  
                   _PIN_MANAGER_Initialize 7662                                  _dtoa$4981 0112  
                                __pintcode 0008                          _ADC_SelectChannel 7CD2  
                            __pmediumconst 7EE6                                   ?___aodiv 008C  
                                 ?___fladd 008C                                   ?___aomod 008C  
                                 ?___fldiv 0100                                   ?___awdiv 008C  
                                __ptext100 5750                                  __ptext101 76A2  
                                __ptext110 7BB0                                  __ptext102 7A90  
                         ___aodiv@quotient 009E                                   ?___flneg 008C  
                                __ptext111 6B0C                                  __ptext103 7CD2  
                                __ptext120 4AC2                                  __ptext112 759C  
                                __ptext121 3D32                                  __ptext113 6CCA  
                                __ptext105 50BE                                  __ptext130 637E  
                                __ptext122 7180                                  __ptext114 5B24  
                                __ptext106 4D2C                                  __ptext131 6442  
                                __ptext123 6504                                  __ptext115 6898  
                                __ptext107 7878                                  __ptext140 65C0  
                                __ptext132 5DCE                                  __ptext124 705E  
                                __ptext116 5C0C                                  __ptext108 79A6  
                                __ptext141 7E18                                  __ptext133 79D6  
                                __ptext125 584C                                  __ptext117 5F74  
                                __ptext109 75E0                                  __ptext150 4982  
                                __ptext142 7DEA                                  __ptext134 7CEE  
                                __ptext126 780A                                  __ptext118 4E5E  
                                __ptext151 7512                                  __ptext143 7B16  
                                __ptext135 7E20                                  __ptext127 6C36  
                                __ptext119 67E6                                  __ptext152 2ADE  
                                __ptext144 7E24                                  __ptext136 7BD4  
                                __ptext128 71DC                                  __ptext153 24A4  
                                __ptext145 76E2                                  __ptext137 564A  
                                __ptext129 5542                                  __ptext154 6116  
                                __ptext146 7DD6                                  __ptext138 7E22  
                                __ptext155 35C8                                  __ptext147 7C3C  
                                __ptext139 72E8                                  __ptext156 7DE0  
                                __ptext148 2DEA                                  __ptext157 7C7C  
                                __ptext149 7E26                                  __ptext158 0000  
                                 ?___awmod 008C                                   ?___lbmod 008C  
                                 ?___flmul 0100                                   ?___flsub 0119  
                                 ?___fltol 0119                            ?_ADC_Initialize 0001  
                                _getTokens 6DEA                         ?_ADC_SelectChannel 0001  
                i2_TMR2_LoadPeriodRegister 7DEA               ??_INTERRUPT_InterruptManager 0080  
                         ?i2_USBDeviceInit 0001                       _USBTransferOnePacket 5750  
                        ??_CCP2_Initialize 008C                                   ?_isdigit 008C  
                      ??_ADC_SelectChannel 008C                                _flag_angulo 01D9  
                          ?_TMR2_StopTimer 0001                      ?_ADC_IsConversionDone 0001  
                                 ?_islower 008C                                   ?_isspace 008C  
                                 ?_mover_2 0125                                   ?_isupper 008C  
                                _lastToken 03C6                           ??_DireccionRotor 008E  
             __end_of_USBCtrlTrfOutHandler 7238                      ??_USBStdGetDscHandler 0001  
                              _ep_data_out 01BF                                ??i2___fladd 003C  
                              ??i2___fldiv 003C                                   ?_sprintf 0191  
                                 ?_tolower 0092                                ??i2___flmul 0023  
                              ??i2___flsub 004C                                ??i2___fltol 0051  
                                 ?_strcspn 0091              USBConfigureEndpoint@direction 0001  
                                 ?_strncmp 008C                                   ?_toupper 0092  
                     _INTERRUPT_Initialize 7E14                            ?_TMR3_StopTimer 0001  
                        ??_TMR0_Initialize 008E                                  _inverse_S 02BA  
                           ___wmul@product 0090                                   _IOCCbits 000F87  
                                 _LATAbits 000F89                                   _LATBbits 000F8A  
                                 _LATCbits 000F8B                 ??_USBCtrlEPServiceComplete 0002  
                                 _PIE1bits 000F9D                                   _IPR3bits 000FA5  
                                 _PIE2bits 000FA0                                   _PIE3bits 000FA3  
                  __end_of_medir_corriente 7CB6                           USBCommandFetch@i 0240  
                         USBCommandFetch@s 023C                  __end_of_ADC_SelectChannel 7CEE  
               ??_TMR0_SetInterruptHandler 008E                                   _PIR1bits 000F9E  
                                 _PIR2bits 000FA1                                   _PIR3bits 000FA4  
               ??_TMR3_SetInterruptHandler 008E                                   i2u910_40 4B68  
                                 i2u910_47 4B5E                                   i2u912_40 4BB8  
                                 i2u912_47 4BAE                                   i2u781_40 5E8A  
                                 i2u909_40 4B38                                   i2u781_47 5E80  
                                 i2u909_47 4B2E                                   i2u934_40 3F0E  
                                 i2u779_40 5E4A                                   i2u779_47 5E40  
                                 _RCONbits 000FD0                                ??_Fila_Init 0098  
                            ??_putUSBUSART 008F                          i2___fldiv@new_exp 0045  
                             ??_getComands 013F                                   _UEP0bits 000F6A  
               _USBDeferINDataStagePackets 00C9                                  _prescaler 01DB  
                                 _TMR0_ISR 7B16                                   _TMR2_ISR 7BD4  
                                 _TMR3_ISR 79D6                                   _UCONbits 000F60  
                              strtof@digit 012F                          ??_PIN_MANAGER_IOC 004F  
                              strtof@flags 0130                                 ?_getTokens 009C  
                     _USBConfigureEndpoint 6C36                                strtof@expon 0131  
                                _vfpfcnvrt 17E2                   TMR0_ReadTimer@readValLow 0007  
                        ??_TMR1_Initialize 008C                                 _ADCON0bits 000FC2  
                                 i2___flge 6116                          ___wmul@multiplier 008C  
                    ?_USBTransferOnePacket 008C                                   i2___lmul 72E8  
                           _pos_relativa_Z 02C2                   ADC_SelectChannel@channel 008D  
                            ?_CDCTxService 0001                               _RemoteWakeup 00D1  
           ??_TMR2_DefaultInterruptHandler 0001                                   i2_memcpy 759C  
                                 i2_memset 4E5E                  ?_TMR2_SetInterruptHandler 008C  
                             _isspace$5112 0092                    __end_of_USBStallHandler 7622  
                               vfpfcnvrt@c 0188                                 vfpfcnvrt@f 0181  
                        ___lmul@multiplier 008C                                _INTCON2bits 000FF1  
                                copy_data0 6D70                      ?_INTERRUPT_Initialize 0001  
              ??_USBCtrlEPAllowStatusStage 0001                         __end_of_getComands 5DCE  
              __end_of_USBStdSetCfgHandler 6046                           _Encoder_ISR$5974 0062  
                         _Encoder_ISR$5975 0066                          ??_TMR2_Initialize 008E  
                             _setMicroStep 6FF6                         __end_of_device_dsc 7FBA  
                               _EECON1bits 000FA6                    ?_USBCtrlTrfSetupHandler 0001  
                  USBStdGetStatusHandler@p 0003                                   __Hrparam 0000  
                                memcpy@tmp 0092                                 vfprintf@ap 018D  
                                 __Lrparam 0000                                 vfprintf@fp 0189  
                   USBTransferOnePacket@ep 0092                   ?_ADC_GetConversionResult 008C  
                                 _SetupPkt 000430                               _G01_TMR2_ISR 564A  
                  ??_OSCILLATOR_Initialize 008C                      ?_USBConfigureEndpoint 0001  
                        ??_TMR0_StartTimer 008C                          ??_USBDeviceAttach 008C  
                               ?_vfpfcnvrt 016B                              ?_Fila_Agregar 0097  
                          ___aodiv@divisor 0094                          ??_TMR3_Initialize 008E  
                          ___aodiv@counter 009C                               _mover_2$5755 012B  
                   _IOCC2_InterruptHandler 02FA                        __end_of_putUSBUSART 7BB0  
                              _line_coding 02E4                         ___fpclassifyf@F465 02B2  
                           ??_CDCTxService 0095                     ??_ADC_IsConversionDone 008C  
                             _numBytesRead 01E0                                 sprintf@fmt 0193  
                 ?_TMR2_LoadPeriodRegister 0001                                   ___xxtofl 483E  
           ?_IOCC2_DefaultInterruptHandler 0001                                   __ptext10 78AE  
                                 __ptext11 7BF8                                   __ptext20 30B0  
                                 __ptext12 7124                                   __ptext21 6732  
                                 __ptext13 7DF2                                   __ptext30 7482  
                                 __ptext22 3850                                   __ptext14 7DFC  
                                 __ptext31 3F98                                   __ptext23 1D84  
                                 __ptext15 62B4                                   __ptext40 45A6  
                                 __ptext32 667A                                   __ptext24 6FF6  
                                 __ptext16 7E00                                   __ptext41 0D7C  
                                 __ptext33 7392                                   __ptext25 483E  
                                 __ptext17 7D4C                                   __ptext50 7976  
                                 __ptext42 7760                                   __ptext34 73E2  
                                 __ptext26 7292                                   __ptext18 7D5A  
                                 __ptext51 2176                                   __ptext43 78E0  
                                 __ptext35 7842                                   __ptext27 7D9A  
                                 __ptext19 7D82                                   __ptext60 77D2  
                                 __ptext52 6046                                   __ptext44 733E  
                                 __ptext36 7432                                   __ptext28 7E04  
                                 __ptext61 7912                                   __ptext53 6E76  
                                 __ptext45 43FC                                   __ptext37 70C6  
                                 __ptext29 7DA4                                   __ptext70 7B42  
                                 __ptext62 51E6                                   __ptext54 333E  
                                 __ptext46 61E6                                   __ptext38 17E2  
                                 __ptext71 7C1A                                   __ptext63 46F6  
                                 __ptext55 6F86                                   __ptext47 5EA2  
                                 __ptext39 5A38                                   __ptext80 7ABE  
                                 __ptext72 6BA2                                   __ptext64 69DA  
                                 __ptext56 6F02                                   __ptext48 74CC  
                                 __ptext81 7AEA                                   __ptext73 7238  
                                 __ptext65 693A                                   __ptext57 3ACA  
                                 __ptext49 27D0                                   __ptext90 7D20  
                                 __ptext82 7DAE                                   __ptext74 7558  
                                 __ptext66 7E1C                                   __ptext58 6A76  
                                 __ptext91 7E14                                   __ptext83 7C5E  
                                 __ptext75 7E08                                   __ptext67 542A  
                                 __ptext59 7A06                                   __ptext92 7D68  
                                 __ptext84 7DB8                                   __ptext76 7E0C  
                                 __ptext68 7622                                   __ptext93 7D36  
                                 __ptext85 7CB6                                   __ptext77 7E10  
                                 __ptext69 7944                                   __ptext94 7B68  
                                 __ptext86 7722                                   __ptext78 7A34  
                                 __ptext95 7B8C                                   __ptext87 7DC2  
                                 __ptext79 4F90                                   __ptext96 7A62  
                                 __ptext88 7662                                   __ptext97 4BFA  
                                 __ptext89 7DCC                                   __ptext98 7E1E  
                                 __ptext99 530A                            _Timing_TMR0_ISR 76E2  
                                isxdigit@c 0092                    TMR0_WriteTimer@timerVal 0001  
                        ??_TMR0_WriteTimer 0003                                 strcpy@dest 008C  
                  TMR3_WriteTimer@timerVal 0001             __end_of_USBCtrlTrfSetupHandler 6D5C  
                        ?_USBCtrlEPService 0001                              _encenderRotor 7E00  
                         ??_TMR0_ReadTimer 0003       __end_of_TMR0_DefaultInterruptHandler 7E26  
             _TMR0_DefaultInterruptHandler 7E24                                   _rtConstP 7EE7  
                             Encoder_ISR@a 0060                               Encoder_ISR@y 0074  
                         ?_medir_corriente 0001                         ??_USBCtrlEPService 001E  
                                 _isxdigit 7124                        _USBCtrlTrfInHandler 6442  
                                 efgtoa@fp 012D                                   efgtoa@ne 0143  
                                 efgtoa@pp 0141                                   efgtoa@ou 0147  
                                stoa@F1177 02EF                                   isa$xinst 000000  
                                 _outPipes 00A8                                 strtof@eexp 0133  
                     _USBCtrlTrfOutHandler 71DC                                   int$flags 005F  
                        _inverse_time_feed 01B5                  _USBCtrlEPAllowStatusStage 637E  
                                 _vfprintf 70C6                                ??_getTokens 00A0  
                        ??_TMR2_StartTimer 008C         __end_of_INTERRUPT_InterruptManager 00AC  
               _INTERRUPT_InterruptManager 0008                             ??_Fila_Agregar 009B  
                   ??_USBTransferOnePacket 0090       __end_of_TMR3_DefaultInterruptHandler 7E22  
             _TMR3_DefaultInterruptHandler 7E20                            Encoder_ISR@tmr0 006A  
                          Encoder_ISR@tics 006C                           ??_executeCommand 01AA  
                         ___aomod@dividend 008C                  _USBDeferStatusStagePacket 00CC  
                 CDCTxService@byte_to_send 0096                             _vfpfcnvrt$5046 017F  
                               _INTCONbits 000FF2                      i2___lmul@multiplicand 0005  
                     ?_USBCtrlTrfInHandler 0001                              ?_Encoder_Init 0001  
                        ??_USBCommandFetch 01AA                                   memcpy@d1 008C  
                                 memcpy@s1 008E              USBCtrlTrfTxService@byteToSend 0001  
                                 isdigit@c 008C                     ??_INTERRUPT_Initialize 008C  
                           getTokens@F4806 02F8                           ?_USBStallHandler 0001  
                 USBStdFeatureReqHandler@p 001A                          ?i2_TMR2_StopTimer 0001  
                                 intlevel2 0000                                  sprintf@ap 019D  
                        ??_TMR2_WriteTimer 008C                               ?_apagarRotor 0001  
                         MCC_USB_WRITE@str 008F                            i2___xxtofl@sign 0015  
              __end_of_ADC_StartConversion 7DFC                             ?_encenderRotor 0001  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 71DC          ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 000D            _USER_USB_CALLBACK_EVENT_HANDLER 7180  
                                 islower@c 008C                         ??i2_TMR2_StopTimer 0001  
             i2USBTransferOnePacket@handle 0008                                getComands@i 014F  
                                 isspace@c 008C                    ?_PIN_MANAGER_Initialize 0001  
          __end_of_ADC_GetConversionResult 7D20                                  strcpy@src 008E  
                            G_01@distancia 0135                                   isupper@c 008C  
                                strncmp@_l 008C                                  strncmp@_r 008E  
                         ??_ADC_Initialize 008C                             getTokens@token 009C  
                               FilaPop@str 0097              ?_TMR0_DefaultInterruptHandler 0001  
               i2USBTransferOnePacket@data 0002                            _CCP2_Initialize 7D68  
                                strtof@res 0127                     ??_USBConfigureEndpoint 0002  
                    ?_USBCtrlTrfOutHandler 0001                                efgtoa@nmode 0153  
                                strtok@sep 009A                                _putUSBUSART 7B8C  
                      _USBCtrlTrfRxService 5542                         _USBWakeFromSuspend 7878  
                          ___aomod@divisor 0094                    _USBStdFeatureReqHandler 3D32  
                              ??_vfpfcnvrt 0171                           ??_TMR2_StopTimer 008C  
                                 stoa@nuls 0100                            ___aomod@counter 009C  
          __end_of_TMR2_LoadPeriodRegister 7DAE                          ??_TMR3_WriteTimer 0003  
                       _USBCheckCDCRequest 6504                        _USBCtrlTrfTxService 5DCE  
                  __end_of_Timing_TMR0_ISR 7722                                   sprintf@f 019F  
                                 tolower@c 0092                                   sprintf@s 0191  
            ?_TMR3_DefaultInterruptHandler 0001                        ?_USBWakeFromSuspend 0001  
                           ??_Encoder_Init 008C                            _TMR0_Initialize 7722  
                    ??_USBCtrlTrfInHandler 0002                      _USBAlternateInterface 01EA  
                                 strcspn@c 0093                                   strcspn@i 0096  
                                 strcspn@s 0091                           ??_TMR3_StopTimer 008C  
                                 strncmp@l 0093                                   strncmp@n 0090  
                                 strncmp@r 0095                                   toupper@c 0092  
                      ?_USBCheckCDCRequest 0001                  i2USBTransferOnePacket@dir 0001  
                i2USBTransferOnePacket@len 0004                                   strtof@_u 0135  
                      USBEnableEndpoint@ep 000C                            _endpoint_number 00CF  
                     ?_USBCtrlTrfRxService 0001                              ___fladd@signs 0098  
                            ?_getsUSBUSART 0095                               ___aodiv@sign 009D  
                            ??_Encoder_ISR 004D                   executeCommand@strCommand 0228  
           __end_of_PIN_MANAGER_Initialize 76A2                   ?_USBCtrlEPAllowDataStage 0001  
                     ?_USBCtrlTrfTxService 0001                               getTokens@str 009E  
                            _MCC_USB_WRITE 7B68                               ___fladd@aexp 0099  
                             ___fladd@bexp 009A               _USBStatusStageTimeoutCounter 00CD  
                          _PIN_MANAGER_IOC 7DD6                      _TMR2_InterruptHandler 01CD  
                     ??_USBWakeFromSuspend 0015                 USBTransferOnePacket@handle 0093  
                     __end_of_CDCTxService 542A                               ___aomod@sign 009D  
                          _TMR1_Initialize 7CB6                       ??_USBCheckCDCRequest 0001  
                               _USB_CD_Ptr 7F19  
